diff --git a/google_analytics_counter.install b/google_analytics_counter.install
index d988e8d..59c0a5f 100755
--- a/google_analytics_counter.install
+++ b/google_analytics_counter.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface;
+use Drupal\google_analytics_counter\GoogleAnalyticsCounterCustomFieldGeneratorInterface;
 /**
  * @file
  * Update, and uninstall functions for the Google Analytics Counter module.
@@ -28,7 +30,7 @@ function google_analytics_counter_requirements($phase) {
       ->toString(),
     '@href' => 'authentication form',
   ];
-  /** @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface $auth_manager */
+  /** @var GoogleAnalyticsCounterAuthManagerInterface $auth_manager */
   $auth_manager = Drupal::service('google_analytics_counter.auth_manager');
 
   if ($auth_manager->isAuthenticated() === TRUE) {
@@ -290,7 +292,7 @@ function google_analytics_counter_update_8009() {
     foreach ($gac_types as $key => $gac_type) {
       if ($gac_type == $content_type->id()) {
 
-        /** @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterCustomFieldGeneratorInterface $custom_field */
+        /** @var GoogleAnalyticsCounterCustomFieldGeneratorInterface $custom_field */
         $custom_field = \Drupal::service('google_analytics_counter.custom_field_generator');
         $custom_field->gacAddField($content_type);
 
diff --git a/google_analytics_counter.module b/google_analytics_counter.module
index 4869365..696cf2c 100755
--- a/google_analytics_counter.module
+++ b/google_analytics_counter.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface;
+use Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface;
 /**
  * @file
  * Basic functions for this module.
@@ -15,7 +17,7 @@ use Drupal\node\NodeInterface;
 function google_analytics_counter_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     case 'help.page.google_analytics_counter':
-      $output = file_get_contents(drupal_get_path('module', 'google_analytics_counter') . '/README.md');
+      $output = file_get_contents(\Drupal::service('extension.list.module')->getPath('google_analytics_counter') . '/README.md');
       ;
       return nl2br($output);
   }
@@ -48,7 +50,7 @@ function google_analytics_counter_cron() {
   }
 
   // Proceed no further if not authenticated.
-  /** @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface $auth_manager */
+  /** @var GoogleAnalyticsCounterAuthManagerInterface $auth_manager */
   $auth_manager = \Drupal::service('google_analytics_counter.auth_manager');
   if (!$auth_manager->isAuthenticated()) {
     \Drupal::logger('google_analytics_counter')->warning('Google Analytics Counter is not authenticated.');
@@ -58,7 +60,7 @@ function google_analytics_counter_cron() {
   // Returns the google_analytics_counter_worker queue.
   $queue = \Drupal::queue('google_analytics_counter_worker');
 
-  /** @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface $app_manager */
+  /** @var GoogleAnalyticsCounterAppManagerInterface $app_manager */
   $app_manager = \Drupal::service('google_analytics_counter.app_manager');
 
   try {
@@ -150,7 +152,7 @@ function google_analytics_counter_form_node_form_alter(&$form, FormStateInterfac
  * Implements hook_form_alter().
  */
 function google_analytics_counter_form_alter(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface $auth_manager */
+  /** @var GoogleAnalyticsCounterAuthManagerInterface $auth_manager */
   $auth_manager = \Drupal::service('google_analytics_counter.auth_manager');
 
   // Make Client ID, Client Secret, and Authorized Redirect URI read only
diff --git a/src/Controller/GoogleAnalyticsCounterController.php b/src/Controller/GoogleAnalyticsCounterController.php
index 6a0f920..85a15ea 100755
--- a/src/Controller/GoogleAnalyticsCounterController.php
+++ b/src/Controller/GoogleAnalyticsCounterController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\google_analytics_counter\Controller;
 
+use Drupal\Core\Config\Config;
+use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Datetime\DateFormatter;
@@ -23,66 +25,66 @@ class GoogleAnalyticsCounterController extends ControllerBase {
   /**
    * The google_analytics_counter.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The state keyvalue collection.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Google Analytics counter ppp manager definition.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface
+   * @var GoogleAnalyticsCounterAppManagerInterface
    */
   protected $appManager;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface
+   * @var GoogleAnalyticsCounterAuthManagerInterface
    */
   protected $authManager;
 
   /**
    * The Google Analytics Counter message manager.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterMessageManagerInterface
+   * @var GoogleAnalyticsCounterMessageManagerInterface
    */
   protected $messageManager;
 
   /**
    * Constructs a Dashboard object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state keyvalue collection to use.
-   * @param \Drupal\Core\Datetime\DateFormatter $date_formatter
+   * @param DateFormatter $date_formatter
    *   The date formatter service.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface $app_manager
+   * @param GoogleAnalyticsCounterAppManagerInterface $app_manager
    *   Google Analytics Counter App Manager object.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface $auth_manager
+   * @param GoogleAnalyticsCounterAuthManagerInterface $auth_manager
    *   Google Analytics Counter Auth Manager object.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterMessageManagerInterface $message_manager
+   * @param GoogleAnalyticsCounterMessageManagerInterface $message_manager
    *   Google Analytics Counter Manager object.
    */
   public function __construct(ConfigFactoryInterface $config_factory, StateInterface $state, DateFormatter $date_formatter, GoogleAnalyticsCounterAppManagerInterface $app_manager, GoogleAnalyticsCounterAuthManagerInterface $auth_manager, GoogleAnalyticsCounterMessageManagerInterface $message_manager) {
diff --git a/src/Form/GoogleAnalyticsCounterAuthForm.php b/src/Form/GoogleAnalyticsCounterAuthForm.php
index aeee6e5..8cfdccb 100755
--- a/src/Form/GoogleAnalyticsCounterAuthForm.php
+++ b/src/Form/GoogleAnalyticsCounterAuthForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\google_analytics_counter\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -23,50 +24,50 @@ class GoogleAnalyticsCounterAuthForm extends ConfigFormBase {
   /**
    * The google_analytics_counter.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The state keyvalue collection.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface
+   * @var GoogleAnalyticsCounterAppManagerInterface
    */
   protected $appManager;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface
+   * @var GoogleAnalyticsCounterAuthManagerInterface
    */
   protected $authManager;
 
   /**
    * The Google Analytics Counter message manager.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterMessageManagerInterface
+   * @var GoogleAnalyticsCounterMessageManagerInterface
    */
   protected $messageManager;
 
   /**
    * Constructs a new SiteMaintenanceModeForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state keyvalue collection to use.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface $app_manager
+   * @param GoogleAnalyticsCounterAppManagerInterface $app_manager
    *   Google Analytics Counter App Manager object.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface $auth_manager
+   * @param GoogleAnalyticsCounterAuthManagerInterface $auth_manager
    *   Google Analytics Counter Auth Manager object.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterMessageManagerInterface $message_manager
+   * @param GoogleAnalyticsCounterMessageManagerInterface $message_manager
    *   Google Analytics Counter Message Manager object.
    */
   public function __construct(ConfigFactoryInterface $config_factory, StateInterface $state, GoogleAnalyticsCounterAppManagerInterface $app_manager, GoogleAnalyticsCounterAuthManagerInterface $auth_manager, GoogleAnalyticsCounterMessageManagerInterface $message_manager) {
diff --git a/src/Form/GoogleAnalyticsCounterConfigureTypesForm.php b/src/Form/GoogleAnalyticsCounterConfigureTypesForm.php
index 85a1418..7db6236 100644
--- a/src/Form/GoogleAnalyticsCounterConfigureTypesForm.php
+++ b/src/Form/GoogleAnalyticsCounterConfigureTypesForm.php
@@ -22,28 +22,28 @@ class GoogleAnalyticsCounterConfigureTypesForm extends ConfigFormBase {
   /**
    * Config Factory Service Object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface
+   * @var GoogleAnalyticsCounterAppManagerInterface
    */
   protected $appManager;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterCustomFieldGeneratorInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterCustomFieldGeneratorInterface
+   * @var GoogleAnalyticsCounterCustomFieldGeneratorInterface
    */
   protected $customField;
 
diff --git a/src/Form/GoogleAnalyticsCounterSettingsForm.php b/src/Form/GoogleAnalyticsCounterSettingsForm.php
index d5cec59..68d8cc2 100755
--- a/src/Form/GoogleAnalyticsCounterSettingsForm.php
+++ b/src/Form/GoogleAnalyticsCounterSettingsForm.php
@@ -24,43 +24,43 @@ class GoogleAnalyticsCounterSettingsForm extends ConfigFormBase {
   /**
    * The state keyvalue collection.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface
+   * @var GoogleAnalyticsCounterAuthManagerInterface
    */
   protected $authManager;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface
+   * @var GoogleAnalyticsCounterAppManagerInterface
    */
   protected $appManager;
 
   /**
    * The Google Analytics Counter message manager.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterMessageManagerInterface
+   * @var GoogleAnalyticsCounterMessageManagerInterface
    */
   protected $messageManager;
 
   /**
    * Constructs an instance of GoogleAnalyticsCounterSettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state keyvalue collection to use.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface $auth_manager
+   * @param GoogleAnalyticsCounterAuthManagerInterface $auth_manager
    *   Google Analytics Counter Auth Manager object.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface $app_manager
+   * @param GoogleAnalyticsCounterAppManagerInterface $app_manager
    *   Google Analytics Counter App Manager object.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterMessageManagerInterface $message_manager
+   * @param GoogleAnalyticsCounterMessageManagerInterface $message_manager
    *   Google Analytics Counter Message Manager object.
    */
   public function __construct(ConfigFactoryInterface $config_factory, StateInterface $state, GoogleAnalyticsCounterAuthManagerInterface $auth_manager, GoogleAnalyticsCounterAppManagerInterface $app_manager, GoogleAnalyticsCounterMessageManagerInterface $message_manager) {
diff --git a/src/GoogleAnalyticsCounterAppManager.php b/src/GoogleAnalyticsCounterAppManager.php
index a421f02..30781f1 100755
--- a/src/GoogleAnalyticsCounterAppManager.php
+++ b/src/GoogleAnalyticsCounterAppManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\google_analytics_counter;
 
+use Drupal\Core\Config\Config;
+use Drupal\Component\Datetime\TimeInterface;
 use Drupal\node\NodeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -31,93 +33,93 @@ class GoogleAnalyticsCounterAppManager implements GoogleAnalyticsCounterAppManag
   /**
    * The google_analytics_counter.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The state where all the tokens are saved.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * The language manager to get all languages for to get all aliases.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface
+   * @var GoogleAnalyticsCounterAuthManagerInterface
    */
   protected $authManager;
 
   /**
    * Constructs a Google Analytics Counter object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   A database connection.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state of the drupal site.
-   * @param \Drupal\path_alias\AliasManagerInterface $alias_manager
+   * @param AliasManagerInterface $alias_manager
    *   The path alias manager to find aliased resources.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language
+   * @param LanguageManagerInterface $language
    *   The language manager.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterAuthManagerInterface $auth_manager
+   * @param GoogleAnalyticsCounterAuthManagerInterface $auth_manager
    *   Google Analytics Counter Auth Manager object.
    */
   public function __construct(
@@ -162,7 +164,7 @@ class GoogleAnalyticsCounterAppManager implements GoogleAnalyticsCounterAppManag
    *   - expire: optional [default=CACHE_TEMPORARY]
    *   - refresh: optional [default=FALSE].
    *
-   * @return \Drupal\google_analytics_counter\GoogleAnalyticsCounterFeed|object
+   * @return GoogleAnalyticsCounterFeed|object
    *   A new GoogleAnalyticsCounterFeed object
    */
   public function reportData(array $parameters = [], array $cache_options = []) {
diff --git a/src/GoogleAnalyticsCounterAppManagerInterface.php b/src/GoogleAnalyticsCounterAppManagerInterface.php
index a85b4ba..ad973e4 100644
--- a/src/GoogleAnalyticsCounterAppManagerInterface.php
+++ b/src/GoogleAnalyticsCounterAppManagerInterface.php
@@ -30,7 +30,7 @@ interface GoogleAnalyticsCounterAppManagerInterface {
    *   - expire: optional [default=CACHE_TEMPORARY]
    *   - refresh: optional [default=FALSE].
    *
-   * @return \Drupal\google_analytics_counter\GoogleAnalyticsCounterFeed|object
+   * @return GoogleAnalyticsCounterFeed|object
    *   A new GoogleAnalyticsCounterFeed object
    */
   public function reportData(array $parameters = [], array $cache_options = []);
diff --git a/src/GoogleAnalyticsCounterAuthManager.php b/src/GoogleAnalyticsCounterAuthManager.php
index c6177dd..a862bce 100644
--- a/src/GoogleAnalyticsCounterAuthManager.php
+++ b/src/GoogleAnalyticsCounterAuthManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\google_analytics_counter;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -28,50 +29,50 @@ class GoogleAnalyticsCounterAuthManager implements GoogleAnalyticsCounterAuthMan
   /**
    * The google_analytics_counter.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The state where all the tokens are saved.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a Google Analytics Counter object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   A database connection.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state of the drupal site.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(
diff --git a/src/GoogleAnalyticsCounterCustomFieldGenerator.php b/src/GoogleAnalyticsCounterCustomFieldGenerator.php
index 336e44d..a82d0c4 100644
--- a/src/GoogleAnalyticsCounterCustomFieldGenerator.php
+++ b/src/GoogleAnalyticsCounterCustomFieldGenerator.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\google_analytics_counter;
 
+use Drupal\Core\Config\Config;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\FileStorage;
 use Drupal\Core\Database\Connection;
@@ -26,48 +30,48 @@ class GoogleAnalyticsCounterCustomFieldGenerator implements GoogleAnalyticsCount
   /**
    * The google_analytics_counter.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterCustomFieldGeneratorInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterCustomFieldGeneratorInterface
+   * @var GoogleAnalyticsCounterCustomFieldGeneratorInterface
    */
   protected $customField;
 
   /**
    * Constructs a GoogleAnalyticsCounterCustomFieldGenerator object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   A database connection.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, Connection $connection, LoggerInterface $logger, MessengerInterface $messenger) {
@@ -80,16 +84,16 @@ class GoogleAnalyticsCounterCustomFieldGenerator implements GoogleAnalyticsCount
   /**
    * Prepares to add the custom field and saves the configuration.
    *
-   * @param \Drupal\node\NodeTypeInterface $type
+   * @param NodeTypeInterface $type
    *   A node type entity.
    * @param mixed $key
    *   The setting key.
    * @param mixed $value
    *   The setting value.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function gacPreAddField(NodeTypeInterface $type, $key, $value) {
     $config_factory = \Drupal::configFactory();
@@ -106,14 +110,14 @@ class GoogleAnalyticsCounterCustomFieldGenerator implements GoogleAnalyticsCount
   /**
    * Adds the checked the fields.
    *
-   * @param \Drupal\node\NodeTypeInterface $type
+   * @param NodeTypeInterface $type
    *   A node type entity.
    * @param string $label
    *   The formatter label display setting.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function gacAddField(NodeTypeInterface $type, $label = 'Google Analytics Counter') {
 
@@ -187,12 +191,12 @@ class GoogleAnalyticsCounterCustomFieldGenerator implements GoogleAnalyticsCount
   /**
    * Prepares to delete the custom field and saves the configuration.
    *
-   * @param \Drupal\node\NodeTypeInterface $type
+   * @param NodeTypeInterface $type
    *   A node type entity.
    * @param mixed $key
    *   The setting key.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function gacPreDeleteField(NodeTypeInterface $type, $key) {
     // Delete the field.
@@ -203,10 +207,10 @@ class GoogleAnalyticsCounterCustomFieldGenerator implements GoogleAnalyticsCount
   /**
    * Deletes the unchecked field configurations.
    *
-   * @param \Drupal\node\NodeTypeInterface $type
+   * @param NodeTypeInterface $type
    *   A node type entity.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *
    * @see GoogleAnalyticsCounterConfigureTypesForm
    */
@@ -224,7 +228,7 @@ class GoogleAnalyticsCounterCustomFieldGenerator implements GoogleAnalyticsCount
   /**
    * Deletes the field storage configurations.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *
    * @see GoogleAnalyticsCounterConfigureTypesForm
    */
diff --git a/src/GoogleAnalyticsCounterCustomFieldGeneratorInterface.php b/src/GoogleAnalyticsCounterCustomFieldGeneratorInterface.php
index 32c8c62..74acdb1 100644
--- a/src/GoogleAnalyticsCounterCustomFieldGeneratorInterface.php
+++ b/src/GoogleAnalyticsCounterCustomFieldGeneratorInterface.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\google_analytics_counter;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\field\Entity\FieldConfig;
 use Drupal\node\NodeTypeInterface;
 
 /**
@@ -14,58 +19,58 @@ interface GoogleAnalyticsCounterCustomFieldGeneratorInterface {
   /**
    * Prepares to add the custom field and saves the configuration.
    *
-   * @param \Drupal\node\NodeTypeInterface $type
+   * @param NodeTypeInterface $type
    *   A node type entity.
    * @param mixed $key
    *   The setting key.
    * @param mixed $value
    *   The setting value.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function gacPreAddField(NodeTypeInterface $type, $key, $value);
 
   /**
    * Adds the checked the fields.
    *
-   * @param \Drupal\node\NodeTypeInterface $type
+   * @param NodeTypeInterface $type
    *   A node type entity.
    * @param string $label
    *   The formatter label display setting.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|\Drupal\field\Entity\FieldConfig|null
+   * @return EntityInterface|FieldConfig|null
    *   Adds field.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function gacAddField(NodeTypeInterface $type, $label = 'Google Analytics Counter');
 
   /**
    * Prepares to delete the custom field and saves the configuration.
    *
-   * @param \Drupal\node\NodeTypeInterface $type
+   * @param NodeTypeInterface $type
    *   A node type entity.
    * @param mixed $key
    *   The setting key.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function gacPreDeleteField(NodeTypeInterface $type, $key);
 
   /**
    * Deletes the unchecked field configurations.
    *
-   * @param \Drupal\node\NodeTypeInterface $type
+   * @param NodeTypeInterface $type
    *   A node type entity.
    *
    * @return null|void
    *   Deletes the field.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *
    * @see GoogleAnalyticsCounterConfigureTypesForm
    */
@@ -77,7 +82,7 @@ interface GoogleAnalyticsCounterCustomFieldGeneratorInterface {
    * @return null|void
    *   Deletes the field storage.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *
    * @see GoogleAnalyticsCounterConfigureTypesForm
    */
diff --git a/src/GoogleAnalyticsCounterFeed.php b/src/GoogleAnalyticsCounterFeed.php
index af37b74..a16d334 100755
--- a/src/GoogleAnalyticsCounterFeed.php
+++ b/src/GoogleAnalyticsCounterFeed.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\google_analytics_counter;
 
+use Symfony\Component\HttpFoundation\Response;
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use GuzzleHttp\Exception\RequestException;
@@ -228,7 +230,7 @@ class GoogleAnalyticsCounterFeed {
    * @param string $redirect_uri
    *   Callback uri.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   A redirect header.
    */
   public function beginAuthentication($client_id, $redirect_uri) {
@@ -345,7 +347,7 @@ class GoogleAnalyticsCounterFeed {
    * @return bool
    *   Return true if no errors occurred, otherwise return FALSE.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function query($url, array $params, $method, $headers, array $cache_options = []) {
     $params_defaults = [
@@ -403,10 +405,10 @@ class GoogleAnalyticsCounterFeed {
    * @param string $method
    *   HTTM method.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Returns redirect response.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   protected function request($url, array $params = [], array $headers = [], $method = 'GET') {
     $options = [
@@ -465,7 +467,7 @@ class GoogleAnalyticsCounterFeed {
    *
    * @return $this
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function queryAccounts(array $params = [], array $cache_options = []) {
     $this->setQueryPath('management/accounts');
@@ -483,7 +485,7 @@ class GoogleAnalyticsCounterFeed {
    *
    * @return $this
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function queryWebProperties(array $params = [], array $cache_options = []) {
     $params += [
@@ -531,7 +533,7 @@ class GoogleAnalyticsCounterFeed {
    *
    * @return $this
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function queryGoals(array $params = [], array $cache_options = []) {
     $params += [
@@ -554,7 +556,7 @@ class GoogleAnalyticsCounterFeed {
    *
    * @return $this
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function queryReportFeed(array $params = [], array $cache_options = []) {
 
diff --git a/src/GoogleAnalyticsCounterMessageManager.php b/src/GoogleAnalyticsCounterMessageManager.php
index fcc51ac..c37cc88 100644
--- a/src/GoogleAnalyticsCounterMessageManager.php
+++ b/src/GoogleAnalyticsCounterMessageManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\google_analytics_counter;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Datetime\DateFormatter;
@@ -23,59 +24,59 @@ class GoogleAnalyticsCounterMessageManager implements GoogleAnalyticsCounterMess
   /**
    * The google_analytics_counter.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The state where all the tokens are saved.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a GoogleAnalyticsCounterMessageManager object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   A database connection.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state keyvalue collection to use.
-   * @param \Drupal\Core\Datetime\DateFormatter $date_formatter
+   * @param DateFormatter $date_formatter
    *   The date formatter service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, Connection $connection, StateInterface $state, DateFormatter $date_formatter, LoggerInterface $logger, MessengerInterface $messenger) {
diff --git a/src/Plugin/Block/GoogleAnalyticsCounterBlock.php b/src/Plugin/Block/GoogleAnalyticsCounterBlock.php
index 05d646b..bd5a29e 100755
--- a/src/Plugin/Block/GoogleAnalyticsCounterBlock.php
+++ b/src/Plugin/Block/GoogleAnalyticsCounterBlock.php
@@ -22,14 +22,14 @@ class GoogleAnalyticsCounterBlock extends BlockBase implements ContainerFactoryP
   /**
    * The current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;
 
   /**
    * Google Analytics Counter App Manager definition.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManager
+   * @var GoogleAnalyticsCounterAppManager
    */
   protected $appManager;
 
@@ -42,9 +42,9 @@ class GoogleAnalyticsCounterBlock extends BlockBase implements ContainerFactoryP
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Path\CurrentPathStack $current_path
+   * @param CurrentPathStack $current_path
    *   The current path.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManager $app_manager
+   * @param GoogleAnalyticsCounterAppManager $app_manager
    *   Google Analytics Counter App Manager object.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, CurrentPathStack $current_path, GoogleAnalyticsCounterAppManager $app_manager) {
diff --git a/src/Plugin/Filter/GoogleAnalyticsCounterFilter.php b/src/Plugin/Filter/GoogleAnalyticsCounterFilter.php
index 01a8e3a..81af55b 100755
--- a/src/Plugin/Filter/GoogleAnalyticsCounterFilter.php
+++ b/src/Plugin/Filter/GoogleAnalyticsCounterFilter.php
@@ -26,28 +26,28 @@ class GoogleAnalyticsCounterFilter extends FilterBase implements ContainerFactor
   /**
    * The current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;
 
   /**
    * An alias manager for looking up the system path and path alias.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * The state where all the tokens are saved.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterCommon definition.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface
+   * @var GoogleAnalyticsCounterAppManagerInterface
    */
   protected $appManager;
 
@@ -60,13 +60,13 @@ class GoogleAnalyticsCounterFilter extends FilterBase implements ContainerFactor
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Path\CurrentPathStack $current_path
+   * @param CurrentPathStack $current_path
    *   The current path.
-   * @param \Drupal\path_alias\AliasManagerInterface $alias_manager
+   * @param AliasManagerInterface $alias_manager
    *   An alias manager for looking up the system path.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state of the drupal site.
-   * @param \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface $app_manager
+   * @param GoogleAnalyticsCounterAppManagerInterface $app_manager
    *   Google Analytics Counter App Manager object.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, CurrentPathStack $current_path, AliasManagerInterface $alias_manager, StateInterface $state, GoogleAnalyticsCounterAppManagerInterface $app_manager) {
diff --git a/tests/src/Functional/GoogleAnalyticsCounterAuthSettingsTest.php b/tests/src/Functional/GoogleAnalyticsCounterAuthSettingsTest.php
index 130fdf6..c699b9b 100644
--- a/tests/src/Functional/GoogleAnalyticsCounterAuthSettingsTest.php
+++ b/tests/src/Functional/GoogleAnalyticsCounterAuthSettingsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_analytics_counter\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -22,7 +23,7 @@ class GoogleAnalyticsCounterAuthSettingsTest extends BrowserTestBase {
   /**
    * A test user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/GoogleAnalyticsCounterBlockTest.php b/tests/src/Functional/GoogleAnalyticsCounterBlockTest.php
index b4db8c7..7809e22 100644
--- a/tests/src/Functional/GoogleAnalyticsCounterBlockTest.php
+++ b/tests/src/Functional/GoogleAnalyticsCounterBlockTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\google_analytics_counter\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\user\UserInterface;
+use Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface;
+use Drupal\Core\Database\StatementInterface;
 use Drupal\Core\Database\Database;
 use Drupal\node\Entity\Node;
 use Drupal\Tests\BrowserTestBase;
@@ -23,21 +27,21 @@ class GoogleAnalyticsCounterBlockTest extends BrowserTestBase {
   /**
    * Authenticated user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $authenticatedUser;
 
   /**
    * A user with permission to create and edit books and to administer blocks.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface.
    *
-   * @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterAppManagerInterface
+   * @var GoogleAnalyticsCounterAppManagerInterface
    */
   protected $appManager;
 
@@ -72,11 +76,10 @@ class GoogleAnalyticsCounterBlockTest extends BrowserTestBase {
    *
    * @throws \Exception
    */
-
   /**
    * Add storage items.
    *
-   * @return \Drupal\Core\Database\StatementInterface|int|null
+   * @return StatementInterface|int|null
    *   Return page views after storage is added.
    *
    * @throws \Exception
diff --git a/tests/src/Functional/GoogleAnalyticsCounterSettingsTest.php b/tests/src/Functional/GoogleAnalyticsCounterSettingsTest.php
index f60ed71..8439f8c 100644
--- a/tests/src/Functional/GoogleAnalyticsCounterSettingsTest.php
+++ b/tests/src/Functional/GoogleAnalyticsCounterSettingsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_analytics_counter\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -15,7 +16,7 @@ class GoogleAnalyticsCounterSettingsTest extends BrowserTestBase {
   /**
    * A user with permission to create and edit books and to administer blocks.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/Kernel/GoogleAnalyticsCounterQueueTest.php b/tests/src/Kernel/GoogleAnalyticsCounterQueueTest.php
index f98beb3..6c96572 100644
--- a/tests/src/Kernel/GoogleAnalyticsCounterQueueTest.php
+++ b/tests/src/Kernel/GoogleAnalyticsCounterQueueTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_analytics_counter\Kernel;
 
+use Drupal\google_analytics_counter\Plugin\QueueWorker\GoogleAnalyticsCounterQueueBase;
 use Drupal\Tests\system\Kernel\System\CronQueueTest;
 
 /**
@@ -26,7 +27,7 @@ class GoogleAnalyticsCounterQueueTest extends CronQueueTest {
   /**
    * The queue plugin being tested.
    *
-   * @var \Drupal\google_analytics_counter\Plugin\QueueWorker\GoogleAnalyticsCounterQueueBase
+   * @var GoogleAnalyticsCounterQueueBase
    */
   protected $queue;
 
@@ -63,7 +64,7 @@ class GoogleAnalyticsCounterQueueTest extends CronQueueTest {
     // @see \Drupal\Core\Cron::processQueues()
     $this->connection->update('queue')
       ->condition('name', 'google_analytics_counter_worker')
-      ->fields(['expire' => REQUEST_TIME - 1])
+      ->fields(['expire' => \Drupal::time()->getRequestTime() - 1])
       ->execute();
 
     // DEBUG:
