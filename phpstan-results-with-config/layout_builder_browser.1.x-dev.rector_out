modules/contrib/layout_builder_browser/layout_builder_browser.install
modules/contrib/layout_builder_browser/layout_builder_browser.module
modules/contrib/layout_builder_browser/src/Controller/BrowserController.php
modules/contrib/layout_builder_browser/src/Entity/LayoutBuilderBrowserBlock.php
modules/contrib/layout_builder_browser/src/Entity/LayoutBuilderBrowserBlockCategory.php
modules/contrib/layout_builder_browser/src/Form/BlockCategoryDeleteConfirmForm.php
modules/contrib/layout_builder_browser/src/Form/BlockCategoryForm.php
modules/contrib/layout_builder_browser/src/Form/BlockCategoryListingForm.php
modules/contrib/layout_builder_browser/src/Form/BlockDeleteConfirmForm.php
modules/contrib/layout_builder_browser/src/Form/BlockForm.php
modules/contrib/layout_builder_browser/src/Form/BlockListingForm.php
modules/contrib/layout_builder_browser/src/Form/SettingsForm.php
modules/contrib/layout_builder_browser/src/Routing/RouteSubscriber.php

7 files with changes
====================

1) modules/contrib/layout_builder_browser/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\layout_builder_browser\Form;

+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The entity_type.bundle.info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/layout_builder_browser/src/Form/BlockListingForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\layout_builder_browser\Form;

+use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Block\BlockManagerInterface;
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Block manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;

@@ @@
   /**
    * Constructs an layout_builder_browserForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entityTypeManager.
-   * @param \Drupal\Core\Block\BlockManagerInterface $blockManager
+   * @param BlockManagerInterface $blockManager
    *   The blockManager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, BlockManagerInterface $blockManager) {
@@ @@
   /**
    * Loads block categories and blocks, grouped by block categories.
    *
-   * @return \Drupal\Core\Config\Entity\ConfigEntityInterface[][]
+   * @return ConfigEntityInterface[][]
    *   An associative array with two keys:
    *   - categories: All available block categories, each followed by all blocks
    *     attached to it.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/layout_builder_browser/src/Form/BlockForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs an layout_builder_browserForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entityTypeManager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/layout_builder_browser/src/Form/BlockCategoryForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs an layout_builder_browserForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entityTypeManager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/layout_builder_browser/src/Controller/BrowserController.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * The block manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity_type.bundle.info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * BrowserController constructor.
    *
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct(BlockManagerInterface $block_manager, EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, AccountInterface $current_user = NULL) {
@@ @@
   /**
    * Gets a render array of block links.
    *
-   * @param \Drupal\layout_builder\SectionStorageInterface $section_storage
+   * @param SectionStorageInterface $section_storage
    *   The section storage.
    * @param int $delta
    *   The delta of the section to splice.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/layout_builder_browser/layout_builder_browser.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Url;
 use Drupal\Component\Serialization\Json;

 function layout_builder_browser_link_alter(&$variables) {
@@ @@
   if(!\Drupal::config('layout_builder_browser.settings')->get('use_modal')) {
     return;
   }
-  /** @var Drupal\Core\Url $url */
+  /** @var Url $url */
   $url = $variables['url'];

   if (!$url->isRouted()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


7) modules/contrib/layout_builder_browser/layout_builder_browser.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\Core\Entity\EntityTypeInterface;
 /**
  * Migrate layout builder blocks to be config entities on their own.
  */
@@ @@
  */
 function layout_builder_browser_update_8002() {

-  /** @var \Drupal\Core\Entity\EntityTypeManager $entity_manager */
+  /** @var EntityTypeManager $entity_manager */
   $entity_manager = \Drupal::service('entity_type.manager');
   $entity_manager->clearCachedDefinitions();
   $lbb_entity_type = $entity_manager->getDefinition('layout_builder_browser_block');
-  if ($lbb_entity_type && $lbb_entity_type instanceof \Drupal\Core\Entity\EntityTypeInterface) {
+  if ($lbb_entity_type && $lbb_entity_type instanceof EntityTypeInterface) {
     \Drupal::entityDefinitionUpdateManager()->installEntityType($lbb_entity_type);
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

