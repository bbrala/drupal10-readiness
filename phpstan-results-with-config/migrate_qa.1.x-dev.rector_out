modules/contrib/migrate_qa/modules/migrate_qa_demo_data/migrate_qa_demo_data.install
modules/contrib/migrate_qa/src/ConnectorAccessControlHandler.php
modules/contrib/migrate_qa/src/Controller/ConnectorListBuilder.php
modules/contrib/migrate_qa/src/Controller/FlagListBuilder.php
modules/contrib/migrate_qa/src/Controller/IssueListBuilder.php
modules/contrib/migrate_qa/src/Controller/TrackerController.php
modules/contrib/migrate_qa/src/Controller/TrackerListBuilder.php
modules/contrib/migrate_qa/src/Controller/TrackerRevisionController.php
modules/contrib/migrate_qa/src/Entity/Connector.php
modules/contrib/migrate_qa/src/Entity/ConnectorInterface.php
modules/contrib/migrate_qa/src/Entity/ConnectorViewsData.php
modules/contrib/migrate_qa/src/Entity/EntityReferenceViewsData.php
modules/contrib/migrate_qa/src/Entity/Flag.php
modules/contrib/migrate_qa/src/Entity/FlagInterface.php
modules/contrib/migrate_qa/src/Entity/FlagViewsData.php
modules/contrib/migrate_qa/src/Entity/Issue.php
modules/contrib/migrate_qa/src/Entity/IssueInterface.php
modules/contrib/migrate_qa/src/Entity/Tracker.php
modules/contrib/migrate_qa/src/Entity/TrackerInterface.php
modules/contrib/migrate_qa/src/Entity/TrackerViewsData.php
modules/contrib/migrate_qa/src/FlagAccessControlHandler.php
modules/contrib/migrate_qa/src/Form/ConnectorSettingsForm.php
modules/contrib/migrate_qa/src/Form/FlagSettingsForm.php
modules/contrib/migrate_qa/src/Form/IssueForm.php
modules/contrib/migrate_qa/src/Form/IssueSettingsForm.php
modules/contrib/migrate_qa/src/Form/TrackerForm.php
modules/contrib/migrate_qa/src/Form/TrackerSettingsForm.php
modules/contrib/migrate_qa/src/IssueAccessControlHandler.php
modules/contrib/migrate_qa/src/ParamConverter/TrackerConverter.php
modules/contrib/migrate_qa/src/Plugin/Field/FieldType/FlagDetailsCount.php
modules/contrib/migrate_qa/src/Plugin/Field/FieldType/TrackerFlags.php
modules/contrib/migrate_qa/src/Plugin/migrate/process/PregMatchAll.php
modules/contrib/migrate_qa/src/Plugin/views/field/FlagDetailsCount.php
modules/contrib/migrate_qa/src/Plugin/views/field/TrackerFlagsSummary.php
modules/contrib/migrate_qa/src/TrackerAccessControlHandler.php
modules/contrib/migrate_qa/src/Util.php

10 files with changes
=====================

1) modules/contrib/migrate_qa/src/Util.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_qa;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * Util constructor.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   Database connection service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   EntityTypeManager service.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   RouteMatch service.
    */
   public function __construct(
@@ @@
   /**
    * Get status of an entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity to get a UAT status for.
    *
    * @return string
    *   The status, as a string.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getTrackerStatus(ContentEntityInterface $entity) {
     $tracker = $this->getTracker($entity);
@@ @@
   /**
    * Get the tracker related to a given entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity whose tracker is being sought.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The tracker entity if found.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getTracker(ContentEntityInterface $entity) {
     $type = $entity->getEntityTypeId();
@@ @@
   /**
    * Get the current content entity.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface
+   * @return ContentEntityInterface
    *   The entity.
    */
   public function getCurrentEntity() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/migrate_qa/src/Plugin/views/field/TrackerFlagsSummary.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_qa\Plugin\views\field;

+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The EntityTypeManager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   private $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/migrate_qa/src/Plugin/Field/FieldType/TrackerFlags.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_qa\Plugin\Field\FieldType;

+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Field\EntityReferenceFieldItemList;
 use Drupal\Core\TypedData\ComputedItemListTrait;
 use Drupal\Core\TypedData\DataDefinitionInterface;
@@ @@
   /**
    * The EntityTypeManager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   private $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/migrate_qa/src/Entity/Tracker.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_qa\Entity;

+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Component\Utility\DiffArray;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityChangedTrait;
@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/migrate_qa/src/Entity/Issue.php:0

    ---------- begin diff ----------
@@ @@
 <?php
 namespace Drupal\migrate_qa\Entity;

+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Annotation\Translation;
 use Drupal\Core\Entity\Annotation\ContentEntityType;
 use Drupal\Core\Entity\ContentEntityBase;
@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/migrate_qa/src/Entity/EntityReferenceViewsData.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_qa\Entity;

+use Drupal\Core\Entity\Sql\DefaultTableMapping;
 use Drupal\views\EntityViewsData;

 /**
@@ @@

       $entity_manager = $this->entityTypeManager;
       $entity_type_id = $field_storage->getTargetEntityTypeId();
-      /** @var \Drupal\Core\Entity\Sql\DefaultTableMapping $table_mapping */
+      /** @var DefaultTableMapping $table_mapping */
       $table_mapping = $entity_manager->getStorage($entity_type_id)->getTableMapping();
       $target_entity_type_id = $field_storage->getSetting('target_type');
       $target_entity_type = $entity_manager->getDefinition($target_entity_type_id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/migrate_qa/src/Entity/Connector.php:0

    ---------- begin diff ----------
@@ @@
 <?php
 namespace Drupal\migrate_qa\Entity;

+use Drupal\dynamic_entity_reference\Plugin\Field\FieldType\DynamicEntityReferenceFieldItemList;
+use Drupal\dynamic_entity_reference\Plugin\Field\FieldType\DynamicEntityReferenceItem;
 use Drupal\Core\Annotation\Translation;
 use Drupal\Core\Entity\Annotation\ContentEntityType;
 use Drupal\Core\Entity\ContentEntityBase;
@@ @@
    * {@inheritdoc}
    */
   public function label() {
-    /** @var \Drupal\dynamic_entity_reference\Plugin\Field\FieldType\DynamicEntityReferenceFieldItemList $content */
+    /** @var DynamicEntityReferenceFieldItemList $content */
     $content = $this->get('content');
-    /** @var \Drupal\dynamic_entity_reference\Plugin\Field\FieldType\DynamicEntityReferenceItem $item */
+    /** @var DynamicEntityReferenceItem $item */
     $item = $content->first();
     $entity = $item->entity;
     if (!empty($entity)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/migrate_qa/src/Controller/TrackerRevisionController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_qa\Controller;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\diff\Controller\PluginRevisionController;

 /**
@@ @@
    * @return array
    *   Table showing the diff between the two revisions.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function compareTrackerRevisions($left_revision, $right_revision, $filter) {
     $storage = $this->entityTypeManager()->getStorage('migrate_qa_tracker');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/migrate_qa/src/Controller/TrackerController.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;

@@ @@
   /**
    * Constructs a TrackerController object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(DateFormatterInterface $date_formatter, RendererInterface $renderer, EntityRepositoryInterface $entity_repository = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/migrate_qa/modules/migrate_qa_demo_data/migrate_qa_demo_data.install:16

    ---------- begin diff ----------
@@ @@
   \Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);

   // Copy the example file to example directory.
-  $module_path = drupal_get_path('module', $module_name);
+  $module_path = \Drupal::service('extension.list.module')->getPath($module_name);
   $file_name = 'flag_type.csv';
   $file_source = $module_path . '/data/' . $file_name;
   \Drupal::service('file_system')->copy($file_source, $directory . '/' . $file_name, FileSystemInterface::EXISTS_REPLACE);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 10 files have been changed by Rector                                      

