diff --git a/src/Form/TaxonomyDeleteForm.php b/src/Form/TaxonomyDeleteForm.php
index 049c8df..fc04251 100644
--- a/src/Form/TaxonomyDeleteForm.php
+++ b/src/Form/TaxonomyDeleteForm.php
@@ -21,23 +21,23 @@ class TaxonomyDeleteForm extends FormBase {
   /**
    * The term storage.
    *
-   * @var \Drupal\taxonomy\TermStorageInterface
+   * @var TermStorageInterface
    */
   protected $termStorage;
 
   /**
    * The pathauto generator.
    *
-   * @var \Drupal\pathauto\PathautoGenerator
+   * @var PathautoGenerator
    */
   protected $pathAutoGenerator;
 
   /**
    * Constructs a new TaxonomyDeleteForm object.
    *
-   * @param \Drupal\taxonomy\TermStorageInterface $term_storage
+   * @param TermStorageInterface $term_storage
    *   The term storage.
-   * @param \Drupal\pathauto\PathautoGenerator $path_auto_generator
+   * @param PathautoGenerator $path_auto_generator
    *   The path auto generator.
    */
   public function __construct(TermStorageInterface $term_storage, PathautoGenerator $path_auto_generator) {
diff --git a/src/Form/TaxonomyMoveForm.php b/src/Form/TaxonomyMoveForm.php
index 6dbf149..c1a2001 100644
--- a/src/Form/TaxonomyMoveForm.php
+++ b/src/Form/TaxonomyMoveForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\taxonomy_move\Form;
 
+use Drupal\node\NodeInterface;
+use Drupal\taxonomy\TermStorageInterface;
 use Drupal\Core\Database\Database;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -22,32 +24,32 @@ class TaxonomyMoveForm extends FormBase {
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The pathauto generator.
    *
-   * @var \Drupal\pathauto\PathautoGenerator
+   * @var PathautoGenerator
    */
   protected $pathAutoGenerator;
 
   /**
    * Constructs a new TaxonomyMoveForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity type manager service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack.
-   * @param \Drupal\pathauto\PathautoGenerator $path_auto_generator
+   * @param PathautoGenerator $path_auto_generator
    *   The path auto generator.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, RequestStack $requestStack, PathautoGenerator $path_auto_generator) {
@@ -175,7 +177,7 @@ class TaxonomyMoveForm extends FormBase {
     $sourceVocabulary = $form_state->getValue('source_vocabulary');
 
     foreach ($termIds as $termId) {
-      /** @var \Drupal\taxonomy\TermInterface $term */
+      /** @var TermInterface $term */
       $term = $this->entityTypeManager->getStorage('taxonomy_term')->load($termId);
 
       // Do not move term if it has children.
@@ -253,7 +255,7 @@ class TaxonomyMoveForm extends FormBase {
           ]
         );
 
-        /** @var \Drupal\node\NodeInterface $node */
+        /** @var NodeInterface $node */
         foreach ($nodes as $node) {
           $tags = $node->get('field_tags')->getValue();
           $key = array_search($term->id(), array_column($tags, 'target_id'));
@@ -264,7 +266,7 @@ class TaxonomyMoveForm extends FormBase {
 
       // Update published state.
       if ('unmanaged' === $targetVocabulary) {
-        /** @var \Drupal\taxonomy\TermInterface $term */
+        /** @var TermInterface $term */
         $term = $this->entityTypeManager->getStorage('taxonomy_term')->load($termId);
 
         // Unpublish.
@@ -272,7 +274,7 @@ class TaxonomyMoveForm extends FormBase {
         $term->save();
       }
       elseif ('unmanaged' === $sourceVocabulary) {
-        /** @var \Drupal\taxonomy\TermInterface $term */
+        /** @var TermInterface $term */
         $term = $this->entityTypeManager->getStorage('taxonomy_term')->load($termId);
 
         // Publish.
@@ -297,7 +299,7 @@ class TaxonomyMoveForm extends FormBase {
       return [];
     }
 
-    /** @var \Drupal\taxonomy\TermStorageInterface $storage */
+    /** @var TermStorageInterface $storage */
     $storage = $this->entityTypeManager->getStorage('taxonomy_term');
     $tree = $storage
       ->loadTree($vocabulary);
diff --git a/taxonomy_move.module b/taxonomy_move.module
index a74f662..512f9b4 100644
--- a/taxonomy_move.module
+++ b/taxonomy_move.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\taxonomy\TermInterface;
 /**
  * @file
  * Modify or alter the terms between the vocabularies.
@@ -26,7 +27,7 @@ function taxonomy_move_form_taxonomy_overview_terms_alter(&$form, FormStateInter
   foreach ($form['terms'] as $key => $value) {
     if (is_array($value) && isset($value['#term'])) {
 
-      /** @var \Drupal\taxonomy\TermInterface $term */
+      /** @var TermInterface $term */
       $term = $value['#term'];
       if ('unmanaged' === $term->bundle()) {
         $form['delete_button'] = [
