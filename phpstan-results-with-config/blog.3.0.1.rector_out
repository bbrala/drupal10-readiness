modules/contrib/blog/blog.module
modules/contrib/blog/src/BlogBreadcrumbBuilder.php
modules/contrib/blog/src/BlogLister.php
modules/contrib/blog/src/BlogListerInterface.php
modules/contrib/blog/src/Controller/BlogController.php
modules/contrib/blog/src/Plugin/Menu/MyBlogLink.php
modules/contrib/blog/tests/src/Functional/BasicBlogTest.php
modules/contrib/blog/tests/src/Functional/BlogTestBase.php
modules/contrib/blog/tests/src/Functional/BreadcrumbTest.php
modules/contrib/blog/tests/src/Functional/EmptyBlogTest.php
modules/contrib/blog/tests/src/Functional/MyBlogLinkTest.php

8 files with changes
====================

1) modules/contrib/blog/tests/src/Functional/MyBlogLinkTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\blog\Functional;

+use Drupal\user\UserInterface;
 /**
  * Link "My blog" and "View recent blog entries" test for blog module.
  *
@@ @@
   ];

   /**
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $regularUser;

@@ @@
    */
   public function testMyBlogLinkWithRegularUser() {
     $this->drupalLogin($this->regularUser);
-    $this->assertLink('My blog');
-    $this->assertLinkByHref('/blog/' . $this->regularUser->id());
+    $this->assertSession()->linkExists('My blog');
+    $this->assertSession()->linkByHrefExists('/blog/' . $this->regularUser->id());
   }

   /**
@@ @@
    * Test "My blog" link with anonymous user.
    */
   public function testMyBlogLinkWithAnonUser() {
-    $this->assertNoLink('My blog');
+    $this->assertSession()->linkNotExists('My blog');
   }

   /**
@@ @@
     $this->drupalLogin($this->regularUser);
     // Add "Personal blog link" psuedo-field.
     $this->drupalGet('admin/config/people/accounts/display');
-    $this->assertText('Personal blog link');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Personal blog link');
     $edit = [
       'fields[blog__personal_blog_link][region]' => 'content',
       'display_modes_custom[compact]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->drupalLogout();
     // Test "Personal blog link" on user profile page.
     $this->drupalLogin($this->blogger1);
     $this->drupalGet('user/' . $this->blogger1->id());
-    $this->assertLink('View recent blog entries');
-    $this->assertLinkByHref('blog/' . $this->blogger1->id());
+    $this->assertSession()->linkExists('View recent blog entries');
+    $this->assertSession()->linkByHrefExists('blog/' . $this->blogger1->id());
     // Test "Personal blog link" on content.
     $node = array_shift($this->blogNodes1);
     $this->drupalGet('node/' . $node->id());
-    $this->assertNoLink('View recent blog entries');
+    $this->assertSession()->linkNotExists('View recent blog entries');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertLinkByHrefRector
 * AssertLinkRector
 * AssertNoLinkRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/blog/tests/src/Functional/EmptyBlogTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\blog\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   ];

   /**
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $bloggerNoEntries;

@@ @@
   public function testAllBlogEmptyLists() {
     $this->drupalLogin($this->bloggerNoEntries);
     $this->drupalGet('blog');
-    $this->assertText('No blog entries have been created.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('No blog entries have been created.');
   }

   /**
@@ @@
   public function testEmptyPersonalBlog() {
     $this->drupalLogin($this->bloggerNoEntries);
     $this->drupalGet('blog/' . $this->bloggerNoEntries->id());
-    $this->assertText($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/blog/tests/src/Functional/BlogTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\blog\Functional;

+use Drupal\node\NodeInterface;
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   ];

   /**
-   * @var \Drupal\node\NodeInterface[]
+   * @var NodeInterface[]
    */
   protected $blogNodes1, $blogNodes2, $articleNodes1, $articleNodes2;

   /**
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $blogger1, $blogger2, $bloggerNoEntries;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/blog/tests/src/Functional/BasicBlogTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\blog\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\block\Functional\AssertBlockAppearsTrait;

 /**
@@ @@
   ];

   /**
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $regularUser;

@@ @@
   public function testPersonalBlogTitle() {
     $this->drupalLogin($this->regularUser);
     $this->drupalGet('blog/' . $this->blogger1->id());
-    $this->assertResponse(200);
-    $this->assertTitle($this->blogger1->getDisplayName() . "'s blog | Drupal");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->titleEquals($this->blogger1->getDisplayName() . "'s blog | Drupal");
   }

   /**
@@ @@
   public function testBlogPageNoEntries() {
     $this->drupalLogin($this->regularUser);
     $this->drupalGet('blog/' . $this->bloggerNoEntries->id());
-    $this->assertResponse(200);
-    $this->assertTitle($this->bloggerNoEntries->getDisplayName() . "'s blog | Drupal");
-    $this->assertText($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->titleEquals($this->bloggerNoEntries->getDisplayName() . "'s blog | Drupal");
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * AssertTextRector
 * AssertTitleRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/blog/src/Plugin/Menu/MyBlogLink.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/blog/src/Controller/BlogController.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The blog lister.
    *
-   * @var \Drupal\blog\BlogListerInterface
+   * @var BlogListerInterface
    */
   protected $blogLister;

@@ @@
   /**
    * Constructs a BlogController object.
    *
-   * @param \Drupal\blog\BlogListerInterface $blogLister
+   * @param BlogListerInterface $blogLister
    *   The blog lister.
    */
   final public function __construct(BlogListerInterface $blogLister) {
@@ @@
   /**
    * Returns a title for user blog pages.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *
    * @return string
    *   A title string for a user blog page.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/blog/src/BlogLister.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Config Factory Service Object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User object.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/blog/src/BlogBreadcrumbBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\blog;

+use Drupal\node\NodeInterface;
 use Drupal\Core\Breadcrumb\Breadcrumb;
 use Drupal\Core\Breadcrumb\BreadcrumbBuilderInterface;
 use Drupal\Core\Link;
@@ @@
   use StringTranslationTrait;

   /**
-   * @var \Drupal\blog\BlogListerInterface
+   * @var BlogListerInterface
    */
   protected $blogLister;

@@ @@
   public function applies(RouteMatchInterface $route_match) {
     if ($route_match->getRouteName() == 'entity.node.canonical') {
       /**
-* @var \Drupal\node\NodeInterface $node
-*/
+       * @var NodeInterface $node
+      */
       $node = $route_match->getParameter('node');
       return ($node->bundle() == 'blog_post');
     }
@@ @@
    */
   public function build(RouteMatchInterface $route_match) {
     /**
-* @var \Drupal\node\NodeInterface $node
-*/
+     * @var NodeInterface $node
+    */
     $node = $route_match->getParameter('node');
     $breadcrumb = new Breadcrumb();
     $breadcrumb->addCacheContexts(['route']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 8 files have been changed by Rector                                       

