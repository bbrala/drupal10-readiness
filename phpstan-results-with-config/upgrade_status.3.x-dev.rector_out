modules/contrib/upgrade_status/src/Commands/UpgradeStatusCommands.php
modules/contrib/upgrade_status/src/Controller/ScanResultController.php
modules/contrib/upgrade_status/src/DeprecationAnalyzer.php
modules/contrib/upgrade_status/src/DeprecationMessage.php
modules/contrib/upgrade_status/src/ExtensionMetadataDeprecationAnalyzer.php
modules/contrib/upgrade_status/src/Form/UpgradeStatusForm.php
modules/contrib/upgrade_status/src/LibraryDeprecationAnalyzer.php
modules/contrib/upgrade_status/src/ProjectCollector.php
modules/contrib/upgrade_status/src/RouteDeprecationAnalyzer.php
modules/contrib/upgrade_status/src/ScanResultFormatter.php
modules/contrib/upgrade_status/src/ThemeFunctionDeprecationAnalyzer.php
modules/contrib/upgrade_status/src/TwigDeprecationAnalyzer.php
modules/contrib/upgrade_status/src/TwigRecursiveIterator.php
modules/contrib/upgrade_status/src/Util/CorrectDbServerVersion.php
modules/contrib/upgrade_status/tests/src/Functional/UpgradeStatusAccessTest.php
modules/contrib/upgrade_status/tests/src/Functional/UpgradeStatusAnalyzeTest.php
modules/contrib/upgrade_status/tests/src/Functional/UpgradeStatusTestBase.php
modules/contrib/upgrade_status/tests/src/Functional/UpgradeStatusUiTest.php
modules/contrib/upgrade_status/tests/src/Kernel/TwigDeprecationAnalyzerTest.php
modules/contrib/upgrade_status/tests/themes/upgrade_status_test_theme/upgrade_status_test_theme.theme
modules/contrib/upgrade_status/upgrade_status.api.php
modules/contrib/upgrade_status/upgrade_status.install
modules/contrib/upgrade_status/upgrade_status.module

16 files with changes
=====================

1) modules/contrib/upgrade_status/upgrade_status.api.php:11

    ---------- begin diff ----------
@@ @@
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Alter the operations run on projects on the Upgrade Status UI.
  *
  * @param array $operations
  *   Batch operations array to be altered.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The submitted state of the upgrade status form.
  */
 function hook_upgrade_status_operations_alter(array &$operations, FormStateInterface $form_state) {
@@ @@
  * @param array $build
  *   A render array with build results, including a 'title', 'description',
  *   'errors', etc. keys.
- * @param \Drupal\Core\Extension\Extension $extension
+ * @param Extension $extension
  *   Drupal extension object.
  * @param string $group_key
  *   The key for the result group. One of 'rector', 'now', 'uncategorized',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/upgrade_status/tests/src/Functional/UpgradeStatusUiTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->drupalCreateUser(['administer software updates']));
   }
@@ @@

     // Check UI of results for the custom project.
     $this->drupalGet('/admin/reports/upgrade-status/project/upgrade_status_test_error');
-    $this->assertText('Upgrade status test error');
-    $this->assertText('2 errors found. ' . $this->getDrupalCoreMajorVersion() < 9 ? '3' : '4' . ' warnings found.');
-    $this->assertText('Syntax error, unexpected T_STRING on line 3');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Upgrade status test error');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('2 errors found. ' . $this->getDrupalCoreMajorVersion() < 9 ? '3' : '4' . ' warnings found.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Syntax error, unexpected T_STRING on line 3');

     // Go forward to the export page and assert that still contains the results
     // as well as an export specific title.
     $this->clickLink('Export as HTML');
-    $this->assertText('Upgrade Status report');
-    $this->assertText('Upgrade status test error');
-    $this->assertText('Custom projects');
-    $this->assertNoText('Contributed projects');
-    $this->assertText('2 errors found. ' . $this->getDrupalCoreMajorVersion() < 9 ? '3' : '4' . ' warnings found.');
-    $this->assertText('Syntax error, unexpected T_STRING on line 3');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Upgrade Status report');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Upgrade status test error');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Custom projects');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('Contributed projects');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('2 errors found. ' . $this->getDrupalCoreMajorVersion() < 9 ? '3' : '4' . ' warnings found.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Syntax error, unexpected T_STRING on line 3');

     // Go back to the results page and click over to exporting in single ASCII.
     $this->drupalGet('/admin/reports/upgrade-status/project/upgrade_status_test_error');
     $this->clickLink('Export as text');
-    $this->assertText('Upgrade status test error');
-    $this->assertText('CUSTOM PROJECTS');
-    $this->assertNoText('CONTRIBUTED PROJECTS');
-    $this->assertText('2 errors found. ' . $this->getDrupalCoreMajorVersion() < 9 ? '3' : '4' . ' warnings found.');
-    $this->assertText('Syntax error, unexpected T_STRING on line 3');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Upgrade status test error');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('CUSTOM PROJECTS');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('CONTRIBUTED PROJECTS');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('2 errors found. ' . $this->getDrupalCoreMajorVersion() < 9 ? '3' : '4' . ' warnings found.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Syntax error, unexpected T_STRING on line 3');

     // Run partial export of multiple projects.
     $edit = [
@@ @@
       'Export selected as text' => ['CONTRIBUTED PROJECTS', 'CUSTOM PROJECTS'],
     ];
     foreach ($expected as $button => $assert) {
-      $this->drupalPostForm('admin/reports/upgrade-status', $edit, $button);
-      $this->assertText($assert[0]);
-      $this->assertText($assert[1]);
-      $this->assertText('Upgrade status test contrib error');
-      $this->assertText('Upgrade status test 9 compatible');
-      $this->assertText('Upgrade status test error');
-      $this->assertNoText('Upgrade status test root module');
-      $this->assertNoText('Upgrade status test contrib 9 compatbile');
-      $this->assertText('2 errors found. ' . $this->getDrupalCoreMajorVersion() < 9 ? '3' : '4' . ' warnings found.');
-      $this->assertText('Syntax error, unexpected T_STRING on line 3');
+      $this->drupalGet('admin/reports/upgrade-status');
+      $this->submitForm($edit, $button);
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains($assert[0]);
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains($assert[1]);
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains('Upgrade status test contrib error');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains('Upgrade status test 9 compatible');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains('Upgrade status test error');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextNotContains('Upgrade status test root module');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextNotContains('Upgrade status test contrib 9 compatbile');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains('2 errors found. ' . $this->getDrupalCoreMajorVersion() < 9 ? '3' : '4' . ' warnings found.');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains('Syntax error, unexpected T_STRING on line 3');
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertNoTextRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/upgrade_status/tests/src/Functional/UpgradeStatusTestBase.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->container->get('theme_installer')->install(['upgrade_status_test_theme']);
@@ @@
       ($this->getDrupalCoreMajorVersion() < 9 ? 'relax' : 'collaborate') . '[data][list][upgrade_status]' => TRUE,
       ($this->getDrupalCoreMajorVersion() < 9 ? 'relax' : 'collaborate') . '[data][list][upgrade_status_test_contrib_9_compatible]' => TRUE,
     ];
-    $this->drupalPostForm('admin/reports/upgrade-status', $edit, 'Scan selected');
+    $this->drupalGet('admin/reports/upgrade-status');
+    $this->submitForm($edit, 'Scan selected');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/upgrade_status/tests/src/Functional/UpgradeStatusAnalyzeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\upgrade_status\Functional;

+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
 /**
  * Tests analysing sample projects.
  *
@@ @@
     $this->drupalLogin($this->drupalCreateUser(['administer software updates']));
     $this->runFullScan();

-    /** @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface $key_value */
+    /** @var KeyValueStoreInterface $key_value */
     $key_value = \Drupal::service('keyvalue')->get('upgrade_status_scan_results');

     // Check if the project has scan result in the keyValueStorage.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/upgrade_status/src/Util/CorrectDbServerVersion.php:8

    ---------- begin diff ----------
@@ @@
   /**
    * Database connection
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Constructs a Drupal\upgrade_status\Util\MariaDbServerVersion.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/upgrade_status/src/TwigDeprecationAnalyzer.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * The Twig environment.
    *
-   * @var \Drupal\Core\Template\TwigEnvironment
+   * @var TwigEnvironment
    */
   protected $twigEnvironment;

@@ @@
   /**
    * Analyzes theme functions in an extension.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   The extension to be analyzed.
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    */
   public function analyze(Extension $extension): array {
     $deprecations = array_map(static function (string $deprecation) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


7) modules/contrib/upgrade_status/src/ThemeFunctionDeprecationAnalyzer.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The service container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   private $container;

@@ @@
   /**
    * Analyzes theme functions in an extension.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   The extension to be analyzed.
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    */
   public function analyze(Extension $extension): array {
     $deprecation_messages = [];
@@ @@
    *
    * @param $function
    *   The function to be analyzed.
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   The extension that is being tested.
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    */
   private function analyzeFunction(string $function, Extension $extension): array {
     $deprecation_messages = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


8) modules/contrib/upgrade_status/src/ScanResultFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\upgrade_status;

+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Extension\Extension;
@@ @@
   /**
    * Upgrade status scan result storage.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @var KeyValueStoreInterface
    */
   protected $scanResultStorage;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs a \Drupal\upgrade_status\Controller\ScanResultFormatter.
    *
-   * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value_factory
+   * @param KeyValueFactoryInterface $key_value_factory
    *   The key/value factory.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(
@@ @@
   /**
    * Get scanning result for an extension.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   Drupal extension object.
    * @return null|array
    *   Scan results array or null if no scan results are saved.
@@ @@
   /**
    * Format results output for an extension.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   Drupal extension object.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/upgrade_status/src/RouteDeprecationAnalyzer.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Analyzes usages of deprecated route elements in an extension.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *  The extension to be analyzed.
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    *   A list of deprecation messages.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/upgrade_status/src/ProjectCollector.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\upgrade_status;

+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
+use Drupal\Core\Extension\Extension;
 use Composer\Semver\VersionParser;
 use Composer\Semver\Constraint\Constraint;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * The list of available modules.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;

@@ @@
   /**
    * The list of available themes.
    *
-   * @var \Drupal\Core\Extension\ThemeExtensionList
+   * @var ThemeExtensionList
    */
   protected $themeExtensionList;

@@ @@
   /**
    * The list of available profiles.
    *
-   * @var \Drupal\Core\Extension\ProfileExtensionList
+   * @var ProfileExtensionList
    */
   protected $profileExtensionList;

@@ @@
   /**
    * Available updates store.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface|mixed
+   * @var KeyValueStoreInterface|mixed
    */
   protected $availableUpdates;

@@ @@
   /**
    * Configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a \Drupal\upgrade_status\ProjectCollector.
    *
-   * @param \Drupal\Core\Extension\ModuleExtensionList $module_extension_list
+   * @param ModuleExtensionList $module_extension_list
    *   The module extension list service.
-   * @param \Drupal\Core\Extension\ThemeExtensionList $theme_extension_list
+   * @param ThemeExtensionList $theme_extension_list
    *   The theme extension handler service.
-   * @param \Drupal\Core\Extension\ProfileExtensionList $profile_extension_list
+   * @param ProfileExtensionList $profile_extension_list
    *   The profile extension handler service.
-   * @param \Drupal\Core\KeyValueStore\KeyValueExpirableFactory $key_value_expirable
+   * @param KeyValueExpirableFactory $key_value_expirable
    *   The expirable key/value storage.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    * @param string $install_profile
    *   The current installation profile.
@@ @@
   /**
    * Collect projects of installed modules grouped by custom and contrib.
    *
-   * @return \Drupal\Core\Extension\Extension[]
+   * @return Extension[]
    *   An array keyed by project names. Extensions selected as projects
    *   without a defined project name get one based on their topmost parent
    *   extension and only that topmost extension gets included in the list.
@@ @@
     unset($modules, $themes, $profiles);
     $update_check_for_uninstalled = $this->configFactory->get('update.settings')->get('check.disabled_extensions');

-    /** @var \Drupal\Core\Extension\Extension $extension */
+    /** @var Extension $extension */
     foreach ($extensions as $key => $extension) {

       if ($extension->origin === 'core') {
@@ @@
     $extensions = array_merge($modules, $themes, $profiles);
     unset($modules, $themes, $profiles);

-    /** @var \Drupal\Core\Extension\Extension $extension */
+    /** @var Extension $extension */
     foreach ($extensions as $key => $extension) {
       if (!empty($extension->status) && $extension->origin === 'core' && !empty($extension->info['lifecycle']) && in_array($extension->info['lifecycle'], ['deprecated', 'obsolete'])) {
         $prefix = '';
@@ @@
   /**
    * Finds topmost extension for each extension and keeps only that.
    *
-   * @param \Drupal\Core\Extension\Extension[] $extensions
+   * @param Extension[] $extensions
    *   List of all enabled extensions.
    *
-   * @return \Drupal\Core\Extension\Extension[]
+   * @return Extension[]
    *   List of extensions, with only the topmost extension left for each
    *   extension that has a parent extension.
    */
@@ @@
    * @param string $project_machine_name
    *   Machine name for the extension.
    *
-   * @return \Drupal\Core\Extension\Extension
+   * @return Extension
    *   A project if exists.
    *
-   * @throws \Drupal\Core\Extension\Exception\UnknownExtensionException
+   * @throws UnknownExtensionException
    *   If there was no identified project with the given name.
    */
   public function loadProject(string $project_machine_name) {
@@ @@
     }

     // Read our shipped snapshot of Drupal 10 plans to find this one.
-    $file = fopen(drupal_get_path('module', 'upgrade_status') . '/project_plans.csv', 'r');
+    $file = fopen(\Drupal::service('extension.list.module')->getPath('upgrade_status') . '/project_plans.csv', 'r');
     while ($line = fgetcsv($file, 0, ";")) {
       if ($line[0] == $project_machine_name) {
         fclose($file);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/upgrade_status/src/LibraryDeprecationAnalyzer.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The library discovery parser.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryParser
+   * @var LibraryDiscoveryParser
    */
   protected $libraryDiscoveryParser;

@@ @@
   /**
    * The Twig environment.
    *
-   * @var \Drupal\Core\Template\TwigEnvironment
+   * @var TwigEnvironment
    */
   protected $twigEnvironment;

@@ @@
   /**
    * The list of available modules.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;

@@ @@
   /**
    * The list of available themes.
    *
-   * @var \Drupal\Core\Extension\ThemeExtensionList
+   * @var ThemeExtensionList
    */
   protected $themeExtensionList;

@@ @@
   /**
    * The list of available profiles.
    *
-   * @var \Drupal\Core\Extension\ProfileExtensionList
+   * @var ProfileExtensionList
    */
   protected $profileExtensionList;

@@ @@
   /**
    * Constructs a new library deprecation analyzer
    *
-   * @param \Drupal\Core\Asset\LibraryDiscoveryParser $library_discovery_parser
+   * @param LibraryDiscoveryParser $library_discovery_parser
    *   The library discovery parser.
-   * @param \Drupal\Core\Template\TwigEnvironment $twig_environment
+   * @param TwigEnvironment $twig_environment
    *   The Twig environment.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $module_extension_list
+   * @param ModuleExtensionList $module_extension_list
    *   The module extension list service.
-   * @param \Drupal\Core\Extension\ThemeExtensionList $theme_extension_list
+   * @param ThemeExtensionList $theme_extension_list
    *   The theme extension handler service.
-   * @param \Drupal\Core\Extension\ProfileExtensionList $profile_extension_list
+   * @param ProfileExtensionList $profile_extension_list
    *   The profile extension handler service.
    */
   public function __construct(LibraryDiscoveryParser $library_discovery_parser, TwigEnvironment $twig_environment, ModuleExtensionList $module_extension_list, ThemeExtensionList $theme_extension_list, ProfileExtensionList $profile_extension_list) {
@@ @@
   /**
    * Analyzes usages of deprecated libraries in an extension.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *  The extension to be analyzed.
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    *   A list of deprecation messages.
    *
    * @throws \Exception
@@ @@
   /**
    * Analyzes libraries for dependencies on deprecated libraries.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   The extension to be analyzed.
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    */
   private function analyzeLibraryDependencies(Extension $extension): array {
     // Drupal\Core\Asset\LibraryDiscoveryParser::buildByExtension() assumes a
@@ @@
   /**
    * Analyze library overrides in a theme.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    * @throws \Exception
    */
   private function analyzeThemeLibraryOverrides(Extension $extension): array {
@@ @@
   /**
    * Analyze library extends in a theme.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    * @throws \Exception
    */
   private function analyzeThemeLibraryExtends(Extension $extension): array {
@@ @@
    * However, there could be other ways to attache a library in a template, such
    * as generating and rendering a render array with `#attached`.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    */
   private function analyzeTwigLibraryDependencies(Extension $extension): array {
     $iterator = new TemplateDirIterator(
@@ @@
   /**
    * Finds libraries attached using `libraries_attach()` in a Twig template.
    *
-   * @param \Twig\Node\Node $node
+   * @param Node $node
    *
    * @return string[]
    */
@@ @@
    * could lead into false negatives. Testing the context would be possible, but
    * could lead into not detecting all references to deprecated libraries.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    */
   private function analyzePhpLibraryReferences(Extension $extension): array {
     $iterator = new \RegexIterator(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


12) modules/contrib/upgrade_status/src/Form/UpgradeStatusForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\upgrade_status\Form;

+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Core\Session\SessionConfigurationInterface;
 use Composer\Semver\Semver;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\DrupalKernelInterface;
@@ @@
   /**
    * The project collector service.
    *
-   * @var \Drupal\upgrade_status\ProjectCollector
+   * @var ProjectCollector
    */
   protected $projectCollector;

@@ @@
   /**
    * Available releases store.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface|mixed
+   * @var KeyValueStoreInterface|mixed
    */
   protected $releaseStore;

@@ @@
   /**
    * The scan result formatter service.
    *
-   * @var \Drupal\upgrade_status\ScanResultFormatter
+   * @var ScanResultFormatter
    */
   protected $resultFormatter;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;

@@ @@
   /**
    * The deprecation analyzer.
    *
-   * @var \Drupal\upgrade_status\DeprecationAnalyzer
+   * @var DeprecationAnalyzer
    */
   protected $deprecationAnalyzer;

@@ @@
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;

@@ @@
   /**
    * The destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestination
+   * @var RedirectDestination
    */
   protected $destination;

@@ @@
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Drupal kernel.
    *
-   * @var \Drupal\Core\DrupalKernelInterface
+   * @var DrupalKernelInterface
    */
   protected $kernel;

@@ @@
   /**
    * Constructs a Drupal\upgrade_status\Form\UpgradeStatusForm.
    *
-   * @param \Drupal\upgrade_status\ProjectCollector $project_collector
+   * @param ProjectCollector $project_collector
    *   The project collector service.
-   * @param \Drupal\Core\KeyValueStore\KeyValueExpirableFactory $key_value_expirable
+   * @param KeyValueExpirableFactory $key_value_expirable
    *   The expirable key/value storage.
-   * @param \Drupal\upgrade_status\ScanResultFormatter $result_formatter
+   * @param ScanResultFormatter $result_formatter
    *   The scan result formatter service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger.
-   * @param \Drupal\Core\Extension\ModuleHandler $module_handler
+   * @param ModuleHandler $module_handler
    *   The module handler.
-   * @param \Drupal\upgrade_status\DeprecationAnalyzer $deprecation_analyzer
+   * @param DeprecationAnalyzer $deprecation_analyzer
    *   The deprecation analyzer.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Datetime\DateFormatter $date_formatter
+   * @param DateFormatter $date_formatter
    *   The date formatter.
-   * @param \Drupal\Core\Routing\RedirectDestination $destination
+   * @param RedirectDestination $destination
    *   The destination service.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\DrupalKernelInterface $kernel
+   * @param DrupalKernelInterface $kernel
    *   The Drupal kernel.
    */
   public function __construct(
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ @@
   /**
    * Builds a list and status summary of projects.
    *
-   * @param \Drupal\Core\Extension\Extension[] $projects
+   * @param Extension[] $projects
    *   Array of extensions representing projects.
    * @param string $next_step
    *   The machine name of the suggested next step to take for these projects.
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param string $format
    *   Either 'html' or 'ascii' depending on what the format should be.
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function exportReportASCII(array &$form, FormStateInterface $form_state) {
@@ @@
   /**
    * Batch callback to analyze a project.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   The extension to analyze.
    * @param bool $use_http
    *   Whether to use HTTP to execute the processing or execute locally. HTTP
@@ @@
     list($error, $message, $data) = static::doHttpRequest($extension->getName());

     if ($error !== FALSE) {
-      /** @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface $key_value */
+      /** @var KeyValueStoreInterface $key_value */
       $key_value = \Drupal::service('keyvalue')->get('upgrade_status_scan_results');

       $result = [];
@@ @@

     // Pass over authentication information because access to this functionality
     // requires administrator privileges.
-    /** @var \Drupal\Core\Session\SessionConfigurationInterface $session_config */
+    /** @var SessionConfigurationInterface $session_config */
     $session_config = \Drupal::service('session_configuration');
     $request = \Drupal::request();
     $session_options = $session_config->getOptions($request);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/upgrade_status/src/ExtensionMetadataDeprecationAnalyzer.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Analyzes usages of deprecated extension metadata in an extension.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *  The extension to be analyzed.
    *
-   * @return \Drupal\upgrade_status\DeprecationMessage[]
+   * @return DeprecationMessage[]
    *   A list of deprecation messages.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


14) modules/contrib/upgrade_status/src/DeprecationAnalyzer.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\upgrade_status;

+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Psr\Http\Message\ResponseInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Extension\Extension;
 use Drupal\Core\File\FileSystemInterface;
@@ @@
   /**
    * Upgrade status scan result storage.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @var KeyValueStoreInterface
    */
   protected $scanResultStorage;

@@ @@
   /**
    * The logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;

@@ @@
   /**
    * HTTP Client for drupal.org API calls.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * File system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * The Twig deprecation analyzer.
    *
-   * @var \Drupal\upgrade_status\TwigDeprecationAnalyzer
+   * @var TwigDeprecationAnalyzer
    */
   protected $twigDeprecationAnalyzer;

@@ @@
   /**
    * The library deprecation analyzer.
    *
-   * @var \Drupal\upgrade_status\LibraryDeprecationAnalyzer
+   * @var LibraryDeprecationAnalyzer
    */
   protected $libraryDeprecationAnalyzer;

@@ @@
   /**
    * The theme function deprecation analyzer.
    *
-   * @var \Drupal\upgrade_status\ThemeFunctionDeprecationAnalyzer
+   * @var ThemeFunctionDeprecationAnalyzer
    */
   protected $themeFunctionDeprecationAnalyzer;

@@ @@
   /**
    * The route deprecation analyzer.
    *
-   * @var \Drupal\upgrade_status\RouteDeprecationAnalyzer
+   * @var RouteDeprecationAnalyzer
    */
   protected $routeDeprecationAnalyzer;

@@ @@
   /**
    * The extension metadata deprecation analyzer.
    *
-   * @var \Drupal\upgrade_status\ExtensionMetadataDeprecationAnalyzer
+   * @var ExtensionMetadataDeprecationAnalyzer
    */
   protected $extensionMetadataDeprecationAnalyzer;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * Drupal project finder.
    *
-   * @var \DrupalFinder\DrupalFinder
+   * @var DrupalFinder
    */
   protected $finder;

@@ @@
   /**
    * Constructs a deprecation analyzer.
    *
-   * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value_factory
+   * @param KeyValueFactoryInterface $key_value_factory
    *   The key/value factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger.
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   HTTP client.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   File system service.
-   * @param \Drupal\upgrade_status\TwigDeprecationAnalyzer $twig_deprecation_analyzer
+   * @param TwigDeprecationAnalyzer $twig_deprecation_analyzer
    *   The Twig deprecation analyzer.
-   * @param \Drupal\upgrade_status\LibraryDeprecationAnalyzer $library_deprecation_analyzer
+   * @param LibraryDeprecationAnalyzer $library_deprecation_analyzer
    *   The library deprecation analyzer.
-   * @param \Drupal\upgrade_status\ThemeFunctionDeprecationAnalyzer $theme_function_deprecation_analyzer
+   * @param ThemeFunctionDeprecationAnalyzer $theme_function_deprecation_analyzer
    *   The theme function deprecation analyzer.
-   * @param \Drupal\upgrade_status\RouteDeprecationAnalyzer $route_deprecation_analyzer
+   * @param RouteDeprecationAnalyzer $route_deprecation_analyzer
    *   The route deprecation analyzer.
-   * @param \Drupal\upgrade_status\ExtensionMetadataDeprecationAnalyzer $extension_metadata_analyzer
+   * @param ExtensionMetadataDeprecationAnalyzer $extension_metadata_analyzer
    *   The extension metadata analyzer.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(
@@ @@
   /**
    * Analyze the codebase of an extension including all its sub-components.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   The extension to analyze.
    *
    * @return null
@@ @@
     // For contributed projects, attempt to grab upgrade plan information.
     if (!empty($extension->info['project'])) {
       try {
-        /** @var \Psr\Http\Message\ResponseInterface $response */
+        /** @var ResponseInterface $response */
         $response = $this->httpClient->request('GET', 'https://www.drupal.org/api-d7/node.json?field_project_machine_name=' . $extension->getName());
         if ($response->getStatusCode()) {
           $data = json_decode($response->getBody(), TRUE);
@@ @@
    *   If the PHPStan configuration file cannot be written.
    */
   protected function createModifiedNeonFile() {
-    $module_path = DRUPAL_ROOT . '/' . drupal_get_path('module', 'upgrade_status');
+    $module_path = DRUPAL_ROOT . '/' . \Drupal::service('extension.list.module')->getPath('upgrade_status');
     $config = file_get_contents($module_path . '/deprecation_testing_template.neon');
     $config = str_replace(
       'parameters:',
@@ @@
    *
    * @param string $error
    *   Error message as identified by phpstan.
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   Extension where the error was found.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


15) modules/contrib/upgrade_status/src/Controller/ScanResultController.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The scan result formatter service.
    *
-   * @var \Drupal\upgrade_status\ScanResultFormatter
+   * @var ScanResultFormatter
    */
   protected $resultFormatter;

@@ @@
   /**
    * The project collector service.
    *
-   * @var \Drupal\upgrade_status\ProjectCollector
+   * @var ProjectCollector
    */
   protected $projectCollector;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * Constructs a \Drupal\upgrade_status\Controller\ScanResultController.
    *
-   * @param \Drupal\upgrade_status\ScanResultFormatter $result_formatter
+   * @param ScanResultFormatter $result_formatter
    *   The scan result formatter service.
-   * @param \Drupal\upgrade_status\ProjectCollector $project_collector
+   * @param ProjectCollector $project_collector
    *   The project collector service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(
@@ @@
    * @param string $format
    *   The format to use when exporting the data: html or ascii.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Response object.
    */
   public function resultExport(string $project_machine_name, string $format) {
@@ @@
    * @param string $project_machine_name
    *   The machine name of the project.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Response object.
    */
   public function analyze(string $project_machine_name) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/upgrade_status/src/Commands/UpgradeStatusCommands.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The scan result formatter service.
    *
-   * @var \Drupal\upgrade_status\ScanResultFormatter
+   * @var ScanResultFormatter
    */
   protected $resultFormatter;

@@ @@
   /**
    * The project collector service.
    *
-   * @var \Drupal\upgrade_status\ProjectCollector
+   * @var ProjectCollector
    */
   protected $projectCollector;

@@ @@
   /**
    * The codebase analyzer service.
    *
-   * @var \Drupal\upgrade_status\DeprecationAnalyzer
+   * @var DeprecationAnalyzer
    */
   protected $deprecationAnalyzer;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Constructs a new UpgradeStatusCommands object.
    *
-   * @param \Drupal\upgrade_status\ScanResultFormatter $result_formatter
+   * @param ScanResultFormatter $result_formatter
    *   The scan result formatter service.
-   * @param \Drupal\upgrade_status\ProjectCollector $project_collector
+   * @param ProjectCollector $project_collector
    *   The project collector service.
-   * @param \Drupal\upgrade_status\DeprecationAnalyzer $deprecation_analyzer
+   * @param DeprecationAnalyzer $deprecation_analyzer
    *   The codebase analyzer service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(
@@ @@
   /**
    * Format results output for an extension for Drush STDOUT usage.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   Drupal extension objet.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 16 files have been changed by Rector                                      

