diff --git a/src/Display/EntityDisplayWithLayoutInterface.php b/src/Display/EntityDisplayWithLayoutInterface.php
index 3bee65e..578fbd2 100644
--- a/src/Display/EntityDisplayWithLayoutInterface.php
+++ b/src/Display/EntityDisplayWithLayoutInterface.php
@@ -49,7 +49,7 @@ interface EntityDisplayWithLayoutInterface extends EntityDisplayInterface {
   /**
    * Sets the layout plugin for this display.
    *
-   * @param \Drupal\Core\Layout\LayoutInterface $layout
+   * @param LayoutInterface $layout
    *   A layout plugin.
    *
    * @return $this
@@ -59,7 +59,7 @@ interface EntityDisplayWithLayoutInterface extends EntityDisplayInterface {
   /**
    * Gets the layout plugin for this display.
    *
-   * @return \Drupal\Core\Layout\LayoutInterface
+   * @return LayoutInterface
    *   The layout plugin.
    */
   public function getLayout();
diff --git a/src/Entity/FieldLayoutEntityDisplayTrait.php b/src/Entity/FieldLayoutEntityDisplayTrait.php
index 652b72b..87d6a6b 100644
--- a/src/Entity/FieldLayoutEntityDisplayTrait.php
+++ b/src/Entity/FieldLayoutEntityDisplayTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\field_layout\Entity;
 
+use Drupal\Core\Layout\LayoutDefinition;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Layout\LayoutInterface;
 
@@ -20,7 +21,7 @@ trait FieldLayoutEntityDisplayTrait {
    * @param string $layout_id
    *   The layout ID.
    *
-   * @return \Drupal\Core\Layout\LayoutDefinition
+   * @return LayoutDefinition
    *   The layout definition.
    */
   protected function getLayoutDefinition($layout_id) {
@@ -92,7 +93,7 @@ trait FieldLayoutEntityDisplayTrait {
    * @param array $layout_settings
    *   An array of settings.
    *
-   * @return \Drupal\Core\Layout\LayoutInterface
+   * @return LayoutInterface
    *   The layout plugin.
    */
   protected function doGetLayout($layout_id, array $layout_settings) {
diff --git a/src/FieldLayoutBuilder.php b/src/FieldLayoutBuilder.php
index fdbefd5..ae469aa 100644
--- a/src/FieldLayoutBuilder.php
+++ b/src/FieldLayoutBuilder.php
@@ -17,23 +17,23 @@ class FieldLayoutBuilder implements ContainerInjectionInterface {
   /**
    * The layout plugin manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutPluginManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Constructs a new FieldLayoutBuilder.
    *
-   * @param \Drupal\Core\Layout\LayoutPluginManagerInterface $layout_plugin_manager
+   * @param LayoutPluginManagerInterface $layout_plugin_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(LayoutPluginManagerInterface $layout_plugin_manager, EntityFieldManagerInterface $entity_field_manager) {
@@ -56,7 +56,7 @@ class FieldLayoutBuilder implements ContainerInjectionInterface {
    *
    * @param array $build
    *   A renderable array representing the entity content or form.
-   * @param \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface $display
+   * @param EntityDisplayWithLayoutInterface $display
    *   The entity display holding the display options configured for the entity
    *   components.
    */
@@ -88,7 +88,7 @@ class FieldLayoutBuilder implements ContainerInjectionInterface {
    *
    * @param array $build
    *   A renderable array representing the entity content or form.
-   * @param \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface $display
+   * @param EntityDisplayWithLayoutInterface $display
    *   The entity display holding the display options configured for the entity
    *   components.
    */
@@ -121,7 +121,7 @@ class FieldLayoutBuilder implements ContainerInjectionInterface {
    *
    * @param array $build
    *   A renderable array representing the entity content or form.
-   * @param \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface $display
+   * @param EntityDisplayWithLayoutInterface $display
    *   The entity display holding the display options configured for the entity
    *   components.
    * @param string $display_context
diff --git a/src/Form/FieldLayoutEntityDisplayFormTrait.php b/src/Form/FieldLayoutEntityDisplayFormTrait.php
index 170bcd0..a893751 100644
--- a/src/Form/FieldLayoutEntityDisplayFormTrait.php
+++ b/src/Form/FieldLayoutEntityDisplayFormTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\field_layout\Form;
 
+use Drupal\Core\Layout\LayoutPluginManagerInterface;
+use Drupal\Core\Layout\LayoutInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\SubformState;
 use Drupal\Core\Plugin\PluginFormInterface;
@@ -19,7 +21,7 @@ trait FieldLayoutEntityDisplayFormTrait {
   /**
    * The field layout plugin manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutPluginManager;
 
@@ -101,12 +103,12 @@ trait FieldLayoutEntityDisplayFormTrait {
   /**
    * Gets the layout plugin for the currently selected field layout.
    *
-   * @param \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface $entity
+   * @param EntityDisplayWithLayoutInterface $entity
    *   The current form entity.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Layout\LayoutInterface
+   * @return LayoutInterface
    *   The layout plugin.
    */
   protected function getLayout(EntityDisplayWithLayoutInterface $entity, FormStateInterface $form_state) {
@@ -171,7 +173,7 @@ trait FieldLayoutEntityDisplayFormTrait {
   /**
    * Gets the form entity.
    *
-   * @return \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface
+   * @return EntityDisplayWithLayoutInterface
    *   The current form entity.
    */
   abstract public function getEntity();
diff --git a/src/Form/FieldLayoutEntityFormDisplayEditForm.php b/src/Form/FieldLayoutEntityFormDisplayEditForm.php
index bb8bc22..13c760f 100644
--- a/src/Form/FieldLayoutEntityFormDisplayEditForm.php
+++ b/src/Form/FieldLayoutEntityFormDisplayEditForm.php
@@ -22,15 +22,15 @@ class FieldLayoutEntityFormDisplayEditForm extends EntityFormDisplayEditForm {
   /**
    * FieldLayoutEntityFormDisplayEditForm constructor.
    *
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type manager.
-   * @param \Drupal\Component\Plugin\PluginManagerBase $plugin_manager
+   * @param PluginManagerBase $plugin_manager
    *   The widget plugin manager.
-   * @param \Drupal\Core\Layout\LayoutPluginManagerInterface $layout_plugin_manager
+   * @param LayoutPluginManagerInterface $layout_plugin_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display_repository.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(FieldTypePluginManagerInterface $field_type_manager, PluginManagerBase $plugin_manager, LayoutPluginManagerInterface $layout_plugin_manager, EntityDisplayRepositoryInterface $entity_display_repository = NULL, EntityFieldManagerInterface $entity_field_manager = NULL) {
diff --git a/src/Form/FieldLayoutEntityViewDisplayEditForm.php b/src/Form/FieldLayoutEntityViewDisplayEditForm.php
index 628b1ae..945298e 100644
--- a/src/Form/FieldLayoutEntityViewDisplayEditForm.php
+++ b/src/Form/FieldLayoutEntityViewDisplayEditForm.php
@@ -22,15 +22,15 @@ class FieldLayoutEntityViewDisplayEditForm extends EntityViewDisplayEditForm {
   /**
    * FieldLayoutEntityViewDisplayEditForm constructor.
    *
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type manager.
-   * @param \Drupal\Component\Plugin\PluginManagerBase $plugin_manager
+   * @param PluginManagerBase $plugin_manager
    *   The formatter plugin manager.
-   * @param \Drupal\Core\Layout\LayoutPluginManagerInterface $layout_plugin_manager
+   * @param LayoutPluginManagerInterface $layout_plugin_manager
    *   The field layout plugin manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display_repository.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(FieldTypePluginManagerInterface $field_type_manager, PluginManagerBase $plugin_manager, LayoutPluginManagerInterface $layout_plugin_manager, EntityDisplayRepositoryInterface $entity_display_repository = NULL, EntityFieldManagerInterface $entity_field_manager = NULL) {
diff --git a/tests/modules/field_layout_test/field_layout_test.module b/tests/modules/field_layout_test/field_layout_test.module
index 6905c3d..1c08a59 100644
--- a/tests/modules/field_layout_test/field_layout_test.module
+++ b/tests/modules/field_layout_test/field_layout_test.module
@@ -1,15 +1,15 @@
 <?php
 
+use Drupal\Core\Layout\LayoutDefinition;
 /**
  * @file
  * Contains hook implementations for field_layout_test.
  */
-
 /**
  * Implements hook_layout_alter().
  */
 function field_layout_test_layout_alter(&$definitions) {
-  /** @var \Drupal\Core\Layout\LayoutDefinition[] $definitions */
+  /** @var LayoutDefinition[] $definitions */
   if (\Drupal::state()->get('field_layout_test.alter_regions') && isset($definitions['layout_onecol'])) {
     $definitions['layout_onecol']->setRegions(['foo' => ['label' => 'Foo']]);
   }
diff --git a/tests/src/Functional/FieldLayoutTest.php b/tests/src/Functional/FieldLayoutTest.php
index 47458e4..140b0e2 100644
--- a/tests/src/Functional/FieldLayoutTest.php
+++ b/tests/src/Functional/FieldLayoutTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\field_layout\Functional;
 
+use Behat\Mink\Element\NodeElement;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,7 +25,7 @@ class FieldLayoutTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->createContentType([
@@ -87,7 +88,7 @@ class FieldLayoutTest extends BrowserTestBase {
   protected function getRegionTitles() {
     $region_titles = [];
     $region_title_elements = $this->getSession()->getPage()->findAll('css', '.region-title td');
-    /** @var \Behat\Mink\Element\NodeElement[] $region_title_elements */
+    /** @var NodeElement[] $region_title_elements */
     foreach ($region_title_elements as $region_title_element) {
       $region_titles[] = $region_title_element->getText();
     }
diff --git a/tests/src/FunctionalJavascript/FieldLayoutTest.php b/tests/src/FunctionalJavascript/FieldLayoutTest.php
index 9114b93..72cd14d 100644
--- a/tests/src/FunctionalJavascript/FieldLayoutTest.php
+++ b/tests/src/FunctionalJavascript/FieldLayoutTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\field_layout\FunctionalJavascript;
 
+use Behat\Mink\Element\NodeElement;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 
@@ -25,7 +26,7 @@ class FieldLayoutTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $entity = EntityTest::create([
@@ -287,7 +288,7 @@ class FieldLayoutTest extends WebDriverTestBase {
   protected function getRegionTitles() {
     $region_titles = [];
     $region_title_elements = $this->getSession()->getPage()->findAll('css', '.region-title td');
-    /** @var \Behat\Mink\Element\NodeElement[] $region_title_elements */
+    /** @var NodeElement[] $region_title_elements */
     foreach ($region_title_elements as $region_title_element) {
       $region_titles[] = $region_title_element->getText();
     }
diff --git a/tests/src/Kernel/FieldLayoutUninstallTest.php b/tests/src/Kernel/FieldLayoutUninstallTest.php
index 387e6b2..a576009 100644
--- a/tests/src/Kernel/FieldLayoutUninstallTest.php
+++ b/tests/src/Kernel/FieldLayoutUninstallTest.php
@@ -11,6 +11,7 @@ class FieldLayoutUninstallTest extends LayoutBuilderCompatibilityTestBase {
 
   /**
    * Ensures field layout can be uninstalled with layout builder enabled.
+   * @doesNotPerformAssertions
    */
   public function testFieldLayoutUninstall() {
     // Setup user schema so user hook uninstall hook doesn't break.
diff --git a/tests/src/Unit/FieldLayoutBuilderTest.php b/tests/src/Unit/FieldLayoutBuilderTest.php
index b578694..e367e91 100644
--- a/tests/src/Unit/FieldLayoutBuilderTest.php
+++ b/tests/src/Unit/FieldLayoutBuilderTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\field_layout\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Layout\LayoutPluginManager;
+use Prophecy\Prophecy\ProphecyInterface;
+use Drupal\Core\Layout\LayoutInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\field_layout\Display\EntityDisplayWithLayoutInterface;
@@ -18,35 +22,36 @@ use Prophecy\Argument;
  */
 class FieldLayoutBuilderTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
-   * @var \Drupal\Core\Layout\LayoutPluginManager|\Prophecy\Prophecy\ProphecyInterface
+   * @var LayoutPluginManager|ProphecyInterface
    */
   protected $layoutPluginManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface|\Prophecy\Prophecy\ProphecyInterface
+   * @var EntityFieldManagerInterface|ProphecyInterface
    */
   protected $entityFieldManager;
 
   /**
-   * @var \Drupal\field_layout\FieldLayoutBuilder
+   * @var FieldLayoutBuilder
    */
   protected $fieldLayoutBuilder;
 
   /**
-   * @var \Drupal\Core\Layout\LayoutInterface
+   * @var LayoutInterface
    */
   protected $layoutPlugin;
 
   /**
-   * @var \Drupal\Core\Layout\LayoutDefinition
+   * @var LayoutDefinition
    */
   protected $pluginDefinition;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->pluginDefinition = new LayoutDefinition([
