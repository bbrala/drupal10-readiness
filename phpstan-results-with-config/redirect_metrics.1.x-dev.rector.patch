diff --git a/redirect_metrics.info.yml b/redirect_metrics.info.yml
index 26187bc..608be7e 100644
--- a/redirect_metrics.info.yml
+++ b/redirect_metrics.info.yml
@@ -1,7 +1,6 @@
 name: Redirect metrics
 description: Provides metrics on how redirects are used, such as download count and last access.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 type: module
 
 dependencies:
diff --git a/src/EventSubscriber/RedirectMetricsSubscriber.php b/src/EventSubscriber/RedirectMetricsSubscriber.php
index 80c19df..ac7e408 100644
--- a/src/EventSubscriber/RedirectMetricsSubscriber.php
+++ b/src/EventSubscriber/RedirectMetricsSubscriber.php
@@ -2,10 +2,10 @@
 
 namespace Drupal\redirect_metrics\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\redirect\Entity\Redirect;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -16,7 +16,7 @@ class RedirectMetricsSubscriber implements EventSubscriberInterface {
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
@@ -30,7 +30,7 @@ class RedirectMetricsSubscriber implements EventSubscriberInterface {
   /**
    * Record metrics about redirects.
    */
-  public function recordRedirectMetrics(FilterResponseEvent $event) {
+  public function recordRedirectMetrics(ResponseEvent $event) {
     if (!$redirect = $this->resolveRedirect($event)) {
       return;
     }
@@ -63,13 +63,13 @@ class RedirectMetricsSubscriber implements EventSubscriberInterface {
   /**
    * Resolve a redirect from the current request.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event.
    *
-   * @return \Drupal\redirect\Entity\Redirect|null
+   * @return Redirect|null
    *   The redirect or NULL if one could not be resolved.
    */
-  protected function resolveRedirect(FilterResponseEvent $event) {
+  protected function resolveRedirect(ResponseEvent $event) {
     $response = $event->getResponse();
     $redirect_id = $response->headers->get('X_REDIRECT_ID');
     if ($redirect_id && $redirect = Redirect::load($redirect_id)) {
diff --git a/src/RedirectMetricsFieldDefinitions.php b/src/RedirectMetricsFieldDefinitions.php
index c56aa0b..c8231f5 100644
--- a/src/RedirectMetricsFieldDefinitions.php
+++ b/src/RedirectMetricsFieldDefinitions.php
@@ -12,7 +12,7 @@ class RedirectMetricsFieldDefinitions {
   /**
    * Get a list of field definitions to add to the redirect entity.
    *
-   * @return \Drupal\Core\Field\BaseFieldDefinition[]
+   * @return BaseFieldDefinition[]
    *   A list of fields.
    */
   public static function getAll() {
diff --git a/tests/src/Functional/RedirectMetricsTest.php b/tests/src/Functional/RedirectMetricsTest.php
index 4951519..4ea6612 100644
--- a/tests/src/Functional/RedirectMetricsTest.php
+++ b/tests/src/Functional/RedirectMetricsTest.php
@@ -45,7 +45,7 @@ class RedirectMetricsTest extends BrowserTestBase {
 
     $redirect = Redirect::load($redirect->id());
     $this->assertEquals(1, $redirect->access_count->value);
-    $this->assertNotEqual($test_request_time, $redirect->last_access->value);
+    $this->assertNotEquals($test_request_time, $redirect->last_access->value);
   }
 
 }
diff --git a/tests/src/Kernel/InstallUninstallTest.php b/tests/src/Kernel/InstallUninstallTest.php
index 68ba007..b02267d 100644
--- a/tests/src/Kernel/InstallUninstallTest.php
+++ b/tests/src/Kernel/InstallUninstallTest.php
@@ -26,7 +26,7 @@ class InstallUninstallTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('user', ['users_data']);
     $this->installSchema('system', ['key_value']);
