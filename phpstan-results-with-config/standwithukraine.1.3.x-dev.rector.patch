diff --git a/src/Form/StandWithUkraineForm.php b/src/Form/StandWithUkraineForm.php
index 070c33c..d62f0e3 100644
--- a/src/Form/StandWithUkraineForm.php
+++ b/src/Form/StandWithUkraineForm.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\standwithukraine\Form;
 
+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element;
@@ -25,28 +29,28 @@ class StandWithUkraineForm extends ConfigFormBase implements TrustedCallbackInte
   /**
    * The cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The favicon.
    *
-   * @var \Drupal\standwithukraine\Service\StandWithUkraineFaviconInterface
+   * @var StandWithUkraineFaviconInterface
    */
   protected $favicon;
 
   /**
    * The cache tags invalidator.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $invalidator;
 
   /**
    * The time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
@@ -153,7 +157,7 @@ theme.'),
     $suffix = '?timestamp=' . $this->time->getRequestTime();
     $count = 0;
 
-    /** @var \Drupal\Core\StringTranslation\TranslatableMarkup $title */
+    /** @var TranslatableMarkup $title */
     foreach ([$this->t('Default'), $this->t('Admin')] as $title) {
       $theme_type = strtolower($title->getUntranslatedString());
       $theme_name = $theme_config->get($theme_type);
diff --git a/src/Plugin/Block/StandWithUkraineBlock.php b/src/Plugin/Block/StandWithUkraineBlock.php
index 1ce1634..e28ada1 100644
--- a/src/Plugin/Block/StandWithUkraineBlock.php
+++ b/src/Plugin/Block/StandWithUkraineBlock.php
@@ -24,7 +24,7 @@ class StandWithUkraineBlock extends BlockBase implements ContainerFactoryPluginI
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -37,7 +37,7 @@ class StandWithUkraineBlock extends BlockBase implements ContainerFactoryPluginI
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(
diff --git a/src/Service/StandWithUkraineAccess.php b/src/Service/StandWithUkraineAccess.php
index 4346b6b..b505e98 100644
--- a/src/Service/StandWithUkraineAccess.php
+++ b/src/Service/StandWithUkraineAccess.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\standwithukraine\Service;
 
+use Drupal\user\RoleStorageInterface;
+use Drupal\user\RoleInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Session\AccountProxyInterface;
 
@@ -13,14 +15,14 @@ class StandWithUkraineAccess implements StandWithUkraineAccessInterface {
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The role storage.
    *
-   * @var \Drupal\user\RoleStorageInterface
+   * @var RoleStorageInterface
    */
   protected $storage;
 
@@ -40,7 +42,7 @@ class StandWithUkraineAccess implements StandWithUkraineAccessInterface {
    */
   public function isAllowed($permission) {
     foreach ($this->currentUser->getRoles() as $role_id) {
-      /** @var \Drupal\user\RoleInterface $role */
+      /** @var RoleInterface $role */
       $role = $this->storage->load($role_id);
 
       if (
diff --git a/src/Service/StandWithUkraineAccessInterface.php b/src/Service/StandWithUkraineAccessInterface.php
index f081014..2956dc4 100644
--- a/src/Service/StandWithUkraineAccessInterface.php
+++ b/src/Service/StandWithUkraineAccessInterface.php
@@ -13,9 +13,9 @@ interface StandWithUkraineAccessInterface {
   /**
    * StandWithUkraineAccess constructor.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(
diff --git a/src/Service/StandWithUkraineFavicon.php b/src/Service/StandWithUkraineFavicon.php
index 8d02876..a917be9 100644
--- a/src/Service/StandWithUkraineFavicon.php
+++ b/src/Service/StandWithUkraineFavicon.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\standwithukraine\Service;
 
+use Elphin\IcoFileLoader\IconImage;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileUrlGeneratorInterface;
@@ -27,21 +28,21 @@ class StandWithUkraineFavicon implements StandWithUkraineFaviconInterface {
   /**
    * The cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The file URL generator.
    *
-   * @var \Drupal\Core\File\FileUrlGeneratorInterface|null
+   * @var FileUrlGeneratorInterface|null
    */
   protected $fileUrlGenerator;
 
@@ -96,7 +97,7 @@ class StandWithUkraineFavicon implements StandWithUkraineFaviconInterface {
     $settings = (array) $config->get('favicon.themes.' . $theme);
     $ratio = $settings['ratio'] ?? self::UNDEFINED_RATIO;
 
-    /** @var \Elphin\IcoFileLoader\IconImage $image */
+    /** @var IconImage $image */
     foreach ($icon as $image) {
       $width = $image->width;
       $height = $image->height;
@@ -184,7 +185,7 @@ class StandWithUkraineFavicon implements StandWithUkraineFaviconInterface {
 
       $items[$theme][$dimensions] = $this->fileUrlGenerator !== NULL
         ? $this->fileUrlGenerator->generateString($filename)
-        : file_create_url($filename);
+        : \Drupal::service('file_url_generator')->generateAbsoluteString($filename);
     }
 
     $this->cache->set('standwithukraine', $items);
diff --git a/src/Service/StandWithUkraineFaviconInterface.php b/src/Service/StandWithUkraineFaviconInterface.php
index 90684a9..8b46930 100644
--- a/src/Service/StandWithUkraineFaviconInterface.php
+++ b/src/Service/StandWithUkraineFaviconInterface.php
@@ -48,13 +48,13 @@ interface StandWithUkraineFaviconInterface {
   /**
    * StandWithUkraineFavicon constructor.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger channel factory.
-   * @param \Drupal\Core\File\FileUrlGeneratorInterface|null $file_url_generator
+   * @param FileUrlGeneratorInterface|null $file_url_generator
    *   (optional) The file URL generator. Defaults to NULL.
    */
   public function __construct(
diff --git a/standwithukraine.install b/standwithukraine.install
index 11f19ce..3f529fb 100644
--- a/standwithukraine.install
+++ b/standwithukraine.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\user\RoleStorageInterface;
 /**
  * @file
  * Install, update and uninstall functions for the standwithukraine module.
@@ -118,7 +119,7 @@ function _standwithukraine_permission(array &$sandbox, callable $callback) {
     ->range($sandbox['offset'], $sandbox['limit'])
     ->execute();
 
-  /** @var \Drupal\user\RoleStorageInterface $storage */
+  /** @var RoleStorageInterface $storage */
   $storage = \Drupal::entityTypeManager()->getStorage('user_role');
 
   foreach ($rids as $rid) {
diff --git a/standwithukraine.module b/standwithukraine.module
index 16b6be3..5d2cba4 100644
--- a/standwithukraine.module
+++ b/standwithukraine.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\standwithukraine\Service\StandWithUkraineAccessInterface;
+use Drupal\Core\Render\RendererInterface;
 /**
  * @file
  * Provides a message to show your support for Ukrainians.
@@ -47,14 +49,14 @@ function standwithukraine_page_attachments_alter(array &$attachments) {
     return;
   }
 
-  /** @var \Drupal\standwithukraine\Service\StandWithUkraineAccessInterface $access */
+  /** @var StandWithUkraineAccessInterface $access */
   $access = \Drupal::service('standwithukraine.access');
 
   if (!$access->isAllowed('standwithukraine keep favicon')) {
     return;
   }
 
-  /** @var \Drupal\standwithukraine\Service\StandWithUkraineFaviconInterface $favicon */
+  /** @var StandWithUkraineFaviconInterface $favicon */
   $favicon = \Drupal::service('standwithukraine.favicon');
 
   if (!$favicon->isSupported(theme_get_setting('favicon.mimetype'))) {
@@ -155,11 +157,11 @@ function standwithukraine_page_attachments_alter(array &$attachments) {
  * Implements hook_page_top().
  */
 function standwithukraine_page_top(array &$page_top) {
-  /** @var \Drupal\standwithukraine\Service\StandWithUkraineAccessInterface $access */
+  /** @var StandWithUkraineAccessInterface $access */
   $access = \Drupal::service('standwithukraine.access');
 
   if ($access->isAllowed('hide standwithukraine message')) {
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
 
     $config = \Drupal::config('standwithukraine.settings');
