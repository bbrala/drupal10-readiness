modules/contrib/simplenews_stats/simplenews_stats.install
modules/contrib/simplenews_stats/simplenews_stats.module
modules/contrib/simplenews_stats/simplenews_stats.views.inc
modules/contrib/simplenews_stats/src/Controller/SimplenewsStatsAdminController.php
modules/contrib/simplenews_stats/src/Controller/SimplenewsStatsAutocompleteController.php
modules/contrib/simplenews_stats/src/Controller/SimplenewsStatsController.php
modules/contrib/simplenews_stats/src/Entity/SimplenewsStats.php
modules/contrib/simplenews_stats/src/Entity/SimplenewsStatsItem.php
modules/contrib/simplenews_stats/src/EventSubscriber/SimplenewsStatsEventSubscriber.php
modules/contrib/simplenews_stats/src/Plugin/views/field/SimplenewsStatsEntityAssociated.php
modules/contrib/simplenews_stats/src/Plugin/views/filter/SimplenewsStatsAction.php
modules/contrib/simplenews_stats/src/Plugin/views/filter/SimplenewsStatsEntityAssociated.php
modules/contrib/simplenews_stats/src/Plugin/views/filter/SimplenewsStatsUser.php
modules/contrib/simplenews_stats/src/SimplenewsStatsAccessControlHandler.php
modules/contrib/simplenews_stats/src/SimplenewsStatsAllowedLinks.php
modules/contrib/simplenews_stats/src/SimplenewsStatsEngine.php
modules/contrib/simplenews_stats/src/SimplenewsStatsEntityStorage.php
modules/contrib/simplenews_stats/src/SimplenewsStatsEntityStorageInterface.php
modules/contrib/simplenews_stats/src/SimplenewsStatsInterface.php
modules/contrib/simplenews_stats/src/SimplenewsStatsItemInterface.php
modules/contrib/simplenews_stats/src/SimplenewsStatsItemListBuilder.php
modules/contrib/simplenews_stats/src/SimplenewsStatsItemViewBuilder.php
modules/contrib/simplenews_stats/src/SimplenewsStatsListBuilder.php
modules/contrib/simplenews_stats/src/SimplenewsStatsMail.php
modules/contrib/simplenews_stats/src/SimplenewsStatsPage.php
modules/contrib/simplenews_stats/src/SimplenewsStatsTools.php
modules/contrib/simplenews_stats/src/SimplenewsStatsViewBuilder.php

16 files with changes
=====================

1) modules/contrib/simplenews_stats/src/SimplenewsStatsTools.php:18

    ---------- begin diff ----------
@@ @@
   use StringTranslationTrait;

   /**
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;

@@ @@
   /**
    * SimplenewsStatsTools constructor.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository
+   * @param EntityRepositoryInterface $entityRepository
    */
   public function __construct(EntityRepositoryInterface $entityRepository) {
     $this->entityRepository = $entityRepository;
@@ @@
   /**
    * Returns the entity label.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity that need a label.
    * @param bool $with_entity_type
    *   Add the entity type in the label.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/simplenews_stats/src/SimplenewsStatsPage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simplenews_stats;

+use Drupal\simplenews\Entity\Newsletter;
+use Drupal\simplenews_stats\Entity\SimplenewsStats;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Link;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
   /**
    * The entity SimpleNews.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;

@@ @@
   /**
    * The entity Newsletter from simplenews.
    *
-   * @var \Drupal\simplenews\Entity\Newsletter
+   * @var Newsletter
    */
   protected $simplenews;

@@ @@
   /**
    * The global simplenews stats.
    *
-   * @var \Drupal\simplenews_stats\Entity\SimplenewsStats
+   * @var SimplenewsStats
    */
   protected $simplenewsStats;

@@ @@
   /**
    * SimplenewsStatsPage Constructor.
    *
-   * @param \Drupal\Core\Entity\EntityInterface|null $entity
+   * @param EntityInterface|null $entity
    *   The entity used as simplenews.
    */
   public function __construct($entity) {
@@ @@
    *
    * @return array
    *   Array renderable of the page.
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function getpage() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/simplenews_stats/src/SimplenewsStatsMail.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The simplenews mail object.
    *
-   * @var \Drupal\simplenews\Mail\MailEntity
+   * @var MailEntity
    */
   protected $simpleNewsMail;

@@ @@
   /**
    * The simplenews stats engine.
    *
-   * @var \Drupal\simplenews_stats\SimplenewsStatsEngine
+   * @var SimplenewsStatsEngine
    */
   protected $simplenewsStatsEngine;

@@ @@
   /**
    * The Allowed link manager.
    *
-   * @var \Drupal\simplenews_stats\SimplenewsStatsAllowedLinks
+   * @var SimplenewsStatsAllowedLinks
    */
   protected $simplenewsStatsAllowedLinks;

@@ @@
   /**
    * SimplenewsStatsMail constructor.
    *
-   * @param \Drupal\simplenews_stats\SimplenewsStatsEngine $simplenewsStatsEngine
+   * @param SimplenewsStatsEngine $simplenewsStatsEngine
    *   The simplenews stats engine.
-   * @param \Drupal\simplenews_stats\SimplenewsStatsAllowedLinks $simplenewsStatsAllowedLinks
+   * @param SimplenewsStatsAllowedLinks $simplenewsStatsAllowedLinks
    *   The simplenews allowed links manager.
    */
   public function __construct(SimplenewsStatsEngine $simplenewsStatsEngine, SimplenewsStatsAllowedLinks $simplenewsStatsAllowedLinks) {
@@ @@
   /**
    * Get the body.
    *
-   * @return \Drupal\Core\Render\Markup
+   * @return Markup
    *   The body markup.
    */
   protected function getBody() {
@@ @@
   /**
    * Return the context (Simplenews source object).
    *
-   * @return \Drupal\simplenews\Mail\MailEntity
+   * @return MailEntity
    *   The simplenews mail object used as context.
    */
   protected function getContext() {
@@ @@
   /**
    * Return the context (Simplenews source object).
    *
-   * @return \Drupal\simplenews\SubscriberInterface
+   * @return SubscriberInterface
    *   The simplenews subscriber.
    */
   protected function getSubscriber() {
@@ @@
   /**
    * Get a tag.
    *
-   * @param \Drupal\simplenews\SubscriberInterface $subscriber
+   * @param SubscriberInterface $subscriber
    *   The simplenews subscriber.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity use as simplenews.
    *
    * @return string
@@ @@
   /**
    * Return the entity from simplenews object.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The entity referenced in the simplenews mail object.
    */
   protected function getEntity() {
@@ @@
       ],
     ];

-    $this->setBody($this->getBody() . render($image));
+    $this->setBody($this->getBody() . \Drupal::service('renderer')->render($image));
     return $this;
   }

@@ @@
   /**
    * Return a link for external link reference.
    *
-   * @param \Drupal\simplenews\SubscriberInterface $subscriber
+   * @param SubscriberInterface $subscriber
    *   The simplenews subscriber.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity use as simplenews.
    * @param string $link
    *   The link to generate.
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/simplenews_stats/src/SimplenewsStatsListBuilder.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;

@@ @@
   /**
    * Constructs a new SimplenewsStatsListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ @@
    */
   public function buildRow(EntityInterface $entity) {
     /* @var $entity \Drupal\simplenews_stats\Entity\SimplenewsStats */
-
-    $row['title']       = $entity->link();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Please confirm that `$entity` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+    $row['title']       = $entity->toLink()->toString();
     $row['views']       = $entity->views->first()->getValue()['value'];
     $row['clicks']      = $entity->clicks->first()->getValue()['value'];
     $row['total_mails'] = $entity->total_emails->first()->getValue()['value'];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/simplenews_stats/src/SimplenewsStatsItemListBuilder.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;

@@ @@
   /**
    * Constructs a new SimplenewsStatsListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/simplenews_stats/src/SimplenewsStatsItemInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simplenews_stats;

+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\user\EntityOwnerInterface;

@@ @@
    * @param string $title
    *   The simplenews stats title.
    *
-   * @return \Drupal\simplenews_stats\SimplenewsStatsInterface
+   * @return SimplenewsStatsInterface
    *   The called simplenews stats entity.
    */
   public function setTitle($title);
@@ @@
    * @param int $timestamp
    *   The simplenews stats creation timestamp.
    *
-   * @return \Drupal\simplenews_stats\SimplenewsStatsInterface
+   * @return SimplenewsStatsInterface
    *   The called simplenews stats entity.
    */
   public function setCreatedTime($timestamp);
@@ @@
    * @param bool $status
    *   TRUE to enable this simplenews stats, FALSE to disable.
    *
-   * @return \Drupal\simplenews_stats\SimplenewsStatsInterface
+   * @return SimplenewsStatsInterface
    *   The called simplenews stats entity.
    */
   public function setStatus($status);
@@ @@
   /**
    * Returns the associated newsletter entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    */
   public function getAssociatedEntity();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/simplenews_stats/src/SimplenewsStatsInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simplenews_stats;

+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\user\EntityOwnerInterface;

@@ @@
   /**
    * Returns the associated newsletter entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    */
   public function getAssociatedEntity();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/simplenews_stats/src/SimplenewsStatsEntityStorageInterface.php:3

    ---------- begin diff ----------
@@ @@
 namespace Drupal\simplenews_stats;


+use Drupal\simplenews_stats\Entity\SimplenewsStats;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\simplenews\SubscriberInterface;

@@ @@
   /**
    * Return the global newsletter stat from related entity (node).
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity use as simplenews.
    *
-   * @return \Drupal\simplenews_stats\Entity\SimplenewsStats
+   * @return SimplenewsStats
    *   The simplenews stats entity.
    */
   public function getFromRelatedEntity(EntityInterface $entity);
@@ @@
    * Create an entity from subscriber provide by simplenews and the related
    * entity.
    *
-   * @param \Drupal\simplenews\SubscriberInterface $subscriber
+   * @param SubscriberInterface $subscriber
    *   The simplenews subscriber.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity use as simplenews.
    *
-   * @return \Drupal\simplenews_stats\SimplenewsStatsInterface
+   * @return SimplenewsStatsInterface
    *   The simplenews stats entity.
    */
   public function createFromSubscriberAndEntity(SubscriberInterface $subscriber, EntityInterface $entity);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/simplenews_stats/src/SimplenewsStatsEntityStorage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simplenews_stats;

+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Cache\MemoryCache\MemoryCacheInterface;
 use Drupal\Core\Database\Connection;
@@ @@
 class SimplenewsStatsEntityStorage extends SqlContentEntityStorage implements SimplenewsStatsEntityStorageInterface {

   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $simplenewsStatsItemStorage;

@@ @@
   /**
    * SimplenewsStatsEntityStorage constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection to be used.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache backend to be used.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Cache\MemoryCache\MemoryCacheInterface|null $memory_cache
+   * @param MemoryCacheInterface|null $memory_cache
    *   The memory cache backend to be used.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeInterface $entity_type, Connection $database, EntityFieldManagerInterface $entity_field_manager, CacheBackendInterface $cache, LanguageManagerInterface $language_manager, MemoryCacheInterface $memory_cache = NULL, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, EntityTypeManagerInterface $entity_type_manager = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/simplenews_stats/src/SimplenewsStatsEngine.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simplenews_stats;

+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\simplenews_stats\Entity\SimplenewsStats;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\Core\Routing\CurrentRouteMatch;
@@ @@
   /**
    * Request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;

@@ @@
   /**
    * Current route match.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;

@@ @@
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * SimplenewsStatsEngine constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The request stack.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $current_route_match
+   * @param CurrentRouteMatch $current_route_match
    *   The current route match.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The Entity type manager.
    */
   public function __construct(RequestStack $request, CurrentRouteMatch $current_route_match, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
   /**
    * Store in data base the newsletter hit (click or view).
    *
-   * @param \Drupal\simplenews\SubscriberInterface $subscriber
+   * @param SubscriberInterface $subscriber
    *   The simplenews subscriber who has just done an action.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The Entity used as simplenews.
    * @param string $route_name
    *   The route name.
@@ @@
   /**
    * Increase the sent counter of the given Entity.
    *
-   * @param \Drupal\simplenews\SubscriberInterface $subscriber
+   * @param SubscriberInterface $subscriber
    *   The simplenews subscriber.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The Entity used as simplenews.
    */
   public function logHitSent(SubscriberInterface $subscriber, EntityInterface $entity) {
@@ @@
   /**
    * Update the global stat entry.
    *
-   * @param \Drupal\simplenews\SubscriberInterface $subscriber
+   * @param SubscriberInterface $subscriber
    *   The simplenews subscriber.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The Entity used as simplenews.
    * @param string $action
    *   The action (click or view).
@@ @@
   /**
    * Return the simplenews stats entities.
    *
-   * @param \Drupal\simplenews\SubscriberInterface $subscriber
+   * @param SubscriberInterface $subscriber
    *   The simplenews subscriber.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The Entity used as simplenews.
    *
-   * @return \Drupal\simplenews_stats\Entity\SimplenewsStats
+   * @return SimplenewsStats
    *   The simplenews stats entity.
    */
   protected function getSimplenewsStats(SubscriberInterface $subscriber, EntityInterface $entity) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/simplenews_stats/src/SimplenewsStatsAllowedLinks.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Construct a repository object.
    *
-   * @param \Drupal\Core\Database\Driver\mysql\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(Connection $connection) {
@@ @@
   /**
    * Add link to the database.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity used as simplenews.
    * @param string $link
    *   The link to add.
@@ @@
   /**
    * Check if link is already stored.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity used as simplenews.
    * @param string $link
    *   The link to test.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


12) modules/contrib/simplenews_stats/src/EventSubscriber/SimplenewsStatsEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simplenews_stats\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

 /**
@@ @@
   /**
    * Catch and log new newsletter hit.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    */
-  public function simplenewsLog(GetResponseEvent $event) {
+  public function simplenewsLog(RequestEvent $event) {
     $value = $event->getRequest()->query->get('sstc');
     if (!$value) {
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


13) modules/contrib/simplenews_stats/src/Controller/SimplenewsStatsController.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * SimplenewsStatsEngine.
    *
-   * @var \Drupal\simplenews_stats\SimplenewsStatsEngine
+   * @var SimplenewsStatsEngine
    */
   protected $simplenewsStatsEngine;

@@ @@
   /**
    * SimplenewsStatsAllowedLinks.
    *
-   * @var \Drupal\simplenews_stats\SimplenewsStatsAllowedLinks
+   * @var SimplenewsStatsAllowedLinks
    */
   protected $simplenewsStatsAllowedLinks;

@@ @@
   /**
    * Request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;

@@ @@
   /**
    * SimplenewsStatsController constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The request stack.
-   * @param \Drupal\simplenews_stats\SimplenewsStatsEngine $simplenewsStatsEngine
+   * @param SimplenewsStatsEngine $simplenewsStatsEngine
    *   The simplenews stats engine.
-   * @param \Drupal\simplenews_stats\SimplenewsStatsAllowedLinks $simplenewsStatsAllowedLinks
+   * @param SimplenewsStatsAllowedLinks $simplenewsStatsAllowedLinks
    *   The simplenews stats Allowed links manager.
    */
   public function __construct(RequestStack $request, SimplenewsStatsEngine $simplenewsStatsEngine, SimplenewsStatsAllowedLinks $simplenewsStatsAllowedLinks) {
@@ @@
   /**
    * Route callback: Send image to log view action.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    */
   public function hitView() {
     $response = new Response();
-    $image = file_get_contents(drupal_get_path('module', 'simplenews_stats') . '/assets/image/simple.png');
+    $image = file_get_contents(\Drupal::service('extension.list.module')->getPath('simplenews_stats') . '/assets/image/simple.png');
     $response->setContent($image);
     $response->headers->set('Content-Type', 'image/png');
     $response->headers->set('Content-Transfer-Encoding', 'binary');
@@ @@
    * @param string $tag
    *   The tag.
    *
-   * @return \Drupal\Core\Routing\TrustedRedirectResponse|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return TrustedRedirectResponse|RedirectResponse
    */
   public function hitClick($tag) {

@@ @@
   /**
    * Custom redirect. This is a workaround for Drupal 8 bug.
    *
-   * @param \Drupal\Core\Url $url
+   * @param Url $url
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    */
   protected function customTrustedRedirect(Url $url) {
     $response = new Response('', 302, []);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/simplenews_stats/src/Controller/SimplenewsStatsAutocompleteController.php:2

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simplenews_stats\Controller;

+use Drupal\Core\Database\Database;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\node\NodeStorageInterface;
 use Drupal\Component\Utility\Tags;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Database\Connection;
@@ @@
 class SimplenewsStatsAutocompleteController extends ControllerBase {

   /**
-   * @var \Drupal\Core\Database\Database
+   * @var Database
    */
   protected $database;

   /**
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;

   /**
-   * @var \Drupal\simplenews_stats\SimplenewsStatsTools
+   * @var SimplenewsStatsTools
    */
   protected $simplenewsStatsTools;

@@ @@
   /**
    * SimplenewsStatsAdminController constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository
+   * @param Connection $database
+   * @param EntityRepositoryInterface $entityRepository
    */
   public function __construct(Connection $database, EntityRepositoryInterface $entityRepository, SimplenewsStatsTools $simplenewsStatsTools) {
     $this->database = $database;
@@ @@
   /**
    * Route Callback: Autocomplete callback.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return JsonResponse
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function autocompleteEntityAssociated(Request $request) {

@@ @@
       return new JsonResponse([]);
     }

-    /** @var \Drupal\node\NodeStorageInterface $nodeStorage */
+    /** @var NodeStorageInterface $nodeStorage */
     $nodeStorage = $this->entityTypeManager()->getStorage('node');

     $query = $nodeStorage->getQuery();
@@ @@
   /**
    * Route Callback: Autocomplete callback.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return JsonResponse
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function autocompleteUser(Request $request) {
     $string = $request->query->get('q');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/simplenews_stats/src/Controller/SimplenewsStatsAdminController.php:2

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simplenews_stats\Controller;

+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityInterface;
@@ @@
    * Access callback: Check if the node is a simplenews and if the user has
    * access.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account.
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    */
   public static function simplenewsStatsAccess(AccountInterface $account, NodeInterface $node) {
     if ($node->hasField('simplenews_issue') && !$node->get('simplenews_issue')->isEmpty()) {
@@ @@
   /**
    * Stats page callback.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $node
+   * @param EntityInterface $node
    *   The node used by simplenews.
    *
    * @return array
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function stats(EntityInterface $node) {
     $simplenewsStatPage = new SimplenewsStatsPage($node);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/simplenews_stats/simplenews_stats.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityFieldManager;
+use Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface;
+use Drupal\Core\Database\Database;
+use Drupal\views\Entity\View;
 /**
  * @file
  * Install file of simplenews stats module.
@@ @@
   $field_name = 'entity_type';
   $length = 64;

-  /** @var \Drupal\Core\Entity\EntityFieldManager $entity_field_manager */
+  /** @var EntityFieldManager $entity_field_manager */
   $entity_field_manager = \Drupal::service('entity_field.manager');
   $entity_field_manager->useCaches(FALSE);
-  /** @var \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface $schema_repository */
+  /** @var EntityLastInstalledSchemaRepositoryInterface $schema_repository */
   $schema_repository = \Drupal::service('entity.last_installed_schema.repository');
   $base_field_definitions = $entity_field_manager->getBaseFieldDefinitions($entity_type_id);

@@ @@
   $key_value->set($key_name, $storage_schema);

   // Updates the base database field.
-  $db_schema = \Drupal\Core\Database\Database::getConnection()->schema();
+  $db_schema = Database::getConnection()->schema();
   $db_schema->changeField($entity_type_id, $field_name, $field_name, [
     'type'     => 'varchar',
     'length'   => $length,
@@ @@
     ];

     foreach ($views as $view_name => $conf_name) {
-      if (!\Drupal\views\Entity\View::load($view_name)) {
-        $config_path = drupal_get_path('module', 'simplenews_stats') . "/config/optional/{$conf_name}.yml";
+      if (!View::load($view_name)) {
+        $config_path = \Drupal::service('extension.list.module')->getPath('simplenews_stats') . "/config/optional/{$conf_name}.yml";
         $data = ['uuid' => (new Uuid())->generate()] + Yaml::decode(file_get_contents($config_path));
         \Drupal::configFactory()
           ->getEditable($conf_name)
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 16 files have been changed by Rector                                      

