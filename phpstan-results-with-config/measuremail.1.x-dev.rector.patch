diff --git a/measuremail.info.yml b/measuremail.info.yml
index 81f276e..2683ead 100644
--- a/measuremail.info.yml
+++ b/measuremail.info.yml
@@ -2,7 +2,7 @@ name: 'Measuremail Subscription'
 description: 'Add a subscription form to measuremail contact list.'
 package: Measuremail
 type: module
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
 - drupal:options
diff --git a/src/Annotation/MeasuremailElements.php b/src/Annotation/MeasuremailElements.php
index fdbc6b9..4be210a 100644
--- a/src/Annotation/MeasuremailElements.php
+++ b/src/Annotation/MeasuremailElements.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\measuremail\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -32,7 +33,7 @@ class MeasuremailElements extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
@@ -43,7 +44,7 @@ class MeasuremailElements extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation (optional)
+   * @var Translation (optional)
    */
   public $description = '';
 
diff --git a/src/Entity/Measuremail.php b/src/Entity/Measuremail.php
index 324c0ca..dc3e7d4 100644
--- a/src/Entity/Measuremail.php
+++ b/src/Entity/Measuremail.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\measuremail\Entity;
 
+use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Cache\Cache;
@@ -91,7 +92,7 @@ class Measuremail extends ConfigEntityBase implements MeasuremailInterface, Enti
   /**
    * Holds the collection of elements that are used by this measuremail form.
    *
-   * @var \Drupal\measuremail\MeasuremailElementsPluginCollection
+   * @var MeasuremailElementsPluginCollection
    */
   protected $elementsCollection;
 
@@ -166,7 +167,7 @@ class Measuremail extends ConfigEntityBase implements MeasuremailInterface, Enti
   /**
    * Returns the measuremail elements plugin manager.
    *
-   * @return \Drupal\Component\Plugin\PluginManagerInterface
+   * @return PluginManagerInterface
    *   The measuremail elements plugin manager.
    */
   protected function getMeasuremailElementsPluginManager() {
diff --git a/src/Form/MeasuremailEditForm.php b/src/Form/MeasuremailEditForm.php
index 709233a..70a6175 100644
--- a/src/Form/MeasuremailEditForm.php
+++ b/src/Form/MeasuremailEditForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\measuremail\Form;
 
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -20,18 +22,18 @@ class MeasuremailEditForm extends MeasuremailFormBase {
   /**
    * The measuremail elements manager service.
    *
-   * @var \Drupal\measuremail\Plugin\MeasuremailElementsManager
+   * @var MeasuremailElementsManager
    */
   protected $measuremailElementManager;
 
   /**
    * Constructs an MeasuremailEditForm object.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $measuremail_storage
+   * @param EntityStorageInterface $measuremail_storage
    *   The storage.
-   * @param \Drupal\measuremail\Plugin\MeasuremailElementsManager $measuremail_storage
+   * @param MeasuremailElementsManager $measuremail_storage
    *   The measuremail element manager service.
-   * @param \Drupal\measuremail\Plugin\MeasuremailElementsManager $measuremail_element_manager
+   * @param MeasuremailElementsManager $measuremail_element_manager
    *   The measuremail element manager service.
    */
   public function __construct(EntityStorageInterface $measuremail_storage, MeasuremailElementsManager $measuremail_element_manager) {
@@ -231,8 +233,8 @@ class MeasuremailEditForm extends MeasuremailFormBase {
   /**
    * Submit handler for measuremail element.
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityMalformedException
+   * @throws EntityStorageException
    */
   public function elementSave($form, FormStateInterface $form_state) {
     $this->save($form, $form_state);
diff --git a/src/Form/MeasuremailElementAddForm.php b/src/Form/MeasuremailElementAddForm.php
index cf6697c..d429304 100644
--- a/src/Form/MeasuremailElementAddForm.php
+++ b/src/Form/MeasuremailElementAddForm.php
@@ -18,14 +18,14 @@ class MeasuremailElementAddForm extends MeasuremailElementFormBase {
   /**
    * The measuremail element manager.
    *
-   * @var \Drupal\measuremail\Plugin\MeasuremailElementsManager
+   * @var MeasuremailElementsManager
    */
   protected $elementManager;
 
   /**
    * Constructs a new MeasuremailElementAddForm.
    *
-   * @param \Drupal\measuremail\Plugin\MeasuremailElementsManager $element_manager
+   * @param MeasuremailElementsManager $element_manager
    *   The measuremail element manager.
    */
   public function __construct(MeasuremailElementsManager $element_manager) {
diff --git a/src/Form/MeasuremailElementDeleteForm.php b/src/Form/MeasuremailElementDeleteForm.php
index 36aa486..3a8524e 100644
--- a/src/Form/MeasuremailElementDeleteForm.php
+++ b/src/Form/MeasuremailElementDeleteForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\measuremail\Form;
 
+use Drupal\measuremail\MeasuremailElementsInterface;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,14 +20,14 @@ class MeasuremailElementDeleteForm extends ConfirmFormBase {
   /**
    * The measuremail element containing the measuremail form to be deleted.
    *
-   * @var \Drupal\measuremail\MeasuremailInterface
+   * @var MeasuremailInterface
    */
   protected $measuremail;
 
   /**
    * The measuremail element to be deleted.
    *
-   * @var \Drupal\measuremail\MeasuremailElementsInterface
+   * @var MeasuremailElementsInterface
    */
   protected $measuremailElement;
 
@@ -48,7 +50,7 @@ class MeasuremailElementDeleteForm extends ConfirmFormBase {
 
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function getCancelUrl() {
     return $this->measuremail->toUrl('edit-form');
diff --git a/src/Form/MeasuremailElementFormBase.php b/src/Form/MeasuremailElementFormBase.php
index 338b9f0..f5ef8f9 100644
--- a/src/Form/MeasuremailElementFormBase.php
+++ b/src/Form/MeasuremailElementFormBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\measuremail\Form;
 
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\SubformState;
@@ -19,14 +22,14 @@ abstract class MeasuremailElementFormBase extends FormBase {
   /**
    * The measuremail form.
    *
-   * @var \Drupal\measuremail\MeasuremailInterface
+   * @var MeasuremailInterface
    */
   protected $measuremail;
 
   /**
    * The measuremail element.
    *
-   * @var \Drupal\measuremail\MeasuremailElementsInterface|\Drupal\measuremail\ConfigurableMeasuremailElementInterface
+   * @var MeasuremailElementsInterface|ConfigurableMeasuremailElementInterface
    */
   protected $measuremailElement;
 
@@ -40,7 +43,7 @@ abstract class MeasuremailElementFormBase extends FormBase {
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\measuremail\MeasuremailInterface $measuremail
+   * @param MeasuremailInterface $measuremail
    *   The measuremail form.
    * @param string $measuremail_element
    *   The measuremail element ID.
@@ -48,9 +51,9 @@ abstract class MeasuremailElementFormBase extends FormBase {
    * @return array
    *   The form structure.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws NotFoundHttpException
+   * @throws PluginException
+   * @throws EntityMalformedException
    */
   public function buildForm(array $form, FormStateInterface $form_state, MeasuremailInterface $measuremail = NULL, $measuremail_element = NULL) {
     $this->measuremail = $measuremail;
@@ -105,10 +108,10 @@ abstract class MeasuremailElementFormBase extends FormBase {
    * @param string $measuremail_element
    *   The measuremail element ID.
    *
-   * @return \Drupal\measuremail\MeasuremailElementsInterface
+   * @return MeasuremailElementsInterface
    *   The measuremail element object.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   abstract protected function prepareMeasuremailElement($measuremail_element);
 
@@ -123,7 +126,7 @@ abstract class MeasuremailElementFormBase extends FormBase {
 
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     //$form_state->cleanValues();
diff --git a/src/Form/MeasuremailFormBase.php b/src/Form/MeasuremailFormBase.php
index ef49b7c..326e924 100644
--- a/src/Form/MeasuremailFormBase.php
+++ b/src/Form/MeasuremailFormBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\measuremail\Form;
 
+use Drupal\measuremail\MeasuremailInterface;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityInterface;
@@ -20,21 +22,21 @@ abstract class MeasuremailFormBase extends EntityForm {
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\measuremail\MeasuremailInterface
+   * @var MeasuremailInterface
    */
   protected $entity;
 
   /**
    * The measuremail entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $measuremailStorage;
 
   /**
    * Constructs a base class for measuremail elements add and edit forms.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $measuremail_storage
+   * @param EntityStorageInterface $measuremail_storage
    *   The measuremail entity storage.
    */
   public function __construct(EntityStorageInterface $measuremail_storage) {
@@ -54,7 +56,7 @@ abstract class MeasuremailFormBase extends EntityForm {
    * {@inheritdoc}
    */
   public function form(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\measuremail\MeasuremailInterface $measuremail */
+    /** @var MeasuremailInterface $measuremail */
     $measuremail = $this->entity;
 
     $settings = $measuremail->getSettings();
@@ -79,7 +81,7 @@ abstract class MeasuremailFormBase extends EntityForm {
 
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function save(array $form, FormStateInterface $form_state) {
     parent::save($form, $form_state);
diff --git a/src/Form/MeasuremailSettingsForm.php b/src/Form/MeasuremailSettingsForm.php
index 6188559..56ba922 100644
--- a/src/Form/MeasuremailSettingsForm.php
+++ b/src/Form/MeasuremailSettingsForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\measuremail\Form;
 
+use Drupal\measuremail\MeasuremailInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Language\Language;
 
@@ -19,7 +20,7 @@ class MeasuremailSettingsForm extends MeasuremailFormBase {
    * {@inheritdoc}
    */
   public function form(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\measuremail\MeasuremailInterface $measuremail */
+    /** @var MeasuremailInterface $measuremail */
     $measuremail = $this->entity;
     $settings = $measuremail->getSettings();
 
diff --git a/src/Form/MeasuremailSubscribeForm.php b/src/Form/MeasuremailSubscribeForm.php
index 8c2c39c..69a5ee3 100644
--- a/src/Form/MeasuremailSubscribeForm.php
+++ b/src/Form/MeasuremailSubscribeForm.php
@@ -7,6 +7,10 @@
 
 namespace Drupal\measuremail\Form;
 
+use Drupal\measuremail\MeasuremailInterface;
+use Drupal\measuremail\MeasuremailElementsInterface;
+use Drupal\measuremail\MeasuremailElementsPluginCollection;
+use Drupal\measuremail\Plugin\MeasuremailElementsBase;
 use Drupal\Component\Utility\EmailValidatorInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Entity\EntityForm;
@@ -23,28 +27,28 @@ class MeasuremailSubscribeForm extends EntityForm {
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\measuremail\MeasuremailInterface
+   * @var MeasuremailInterface
    */
   protected $entity;
 
   /**
    * The measuremail entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $measuremailStorage;
 
   /**
    * The email validator.
    *
-   * @var \Drupal\Component\Utility\EmailValidatorInterface
+   * @var EmailValidatorInterface
    */
   protected $emailValidator;
 
   /**
    * Constructs a base class for measuremail elements add and edit forms.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $measuremail_storage
+   * @param EntityStorageInterface $measuremail_storage
    *   The measuremail entity storage.
    */
   public function __construct(EntityStorageInterface $measuremail_storage, EmailValidatorInterface $email_validator) {
@@ -66,7 +70,7 @@ class MeasuremailSubscribeForm extends EntityForm {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\measuremail\MeasuremailInterface $measuremail */
+    /** @var MeasuremailInterface $measuremail */
     $measuremail = $this->entity;
 
     $settings = $measuremail->getSettings();
@@ -124,7 +128,7 @@ class MeasuremailSubscribeForm extends EntityForm {
           }
         }
         $form['error'] = [
-          '#markup' => t('Please choose a newsletter language: @languages', ['@languages' => render($language_links)]),
+          '#markup' => t('Please choose a newsletter language: @languages', ['@languages' => \Drupal::service('renderer')->render($language_links)]),
         ];
 
         return $form;
@@ -135,7 +139,7 @@ class MeasuremailSubscribeForm extends EntityForm {
 
     if (!empty($fields)) {
 
-      /** @var \Drupal\measuremail\MeasuremailElementsInterface $field */
+      /** @var MeasuremailElementsInterface $field */
       foreach ($fields as $field) {
 
         $field_configuration = $field->getConfiguration()['data'];
@@ -221,7 +225,7 @@ class MeasuremailSubscribeForm extends EntityForm {
    * {@inheritdoc}
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\measuremail\MeasuremailInterface $measuremail */
+    /** @var MeasuremailInterface $measuremail */
     $measuremail = $this->entity;
     $settings = $measuremail->getSettings();
     $email_field = $settings['email_field'];
@@ -235,17 +239,17 @@ class MeasuremailSubscribeForm extends EntityForm {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\measuremail\MeasuremailInterface $measuremail */
+    /** @var MeasuremailInterface $measuremail */
     $measuremail = $this->entity;
     $settings = $measuremail->getSettings();
     $email_field = $settings['email_field'];
     $endpoint = $settings['endpoint'];
-    /** @var \Drupal\measuremail\MeasuremailElementsPluginCollection $fields */
+    /** @var MeasuremailElementsPluginCollection $fields */
     $fields = $measuremail->getElements();
     $submitted_fields = $form_state->getValues();
 
     if (!empty($fields)) {
-      /** @var \Drupal\measuremail\Plugin\MeasuremailElementsBase $field */
+      /** @var MeasuremailElementsBase $field */
       foreach ($fields as $field) {
         $pluginId = $field->getPluginId();
         $field = $field->getConfiguration();
diff --git a/src/MeasuremailElementsPluginCollection.php b/src/MeasuremailElementsPluginCollection.php
index 86b42a0..c43b201 100644
--- a/src/MeasuremailElementsPluginCollection.php
+++ b/src/MeasuremailElementsPluginCollection.php
@@ -25,7 +25,7 @@ class MeasuremailElementsPluginCollection extends DefaultLazyPluginCollection {
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\measuremail\MeasuremailElementsInterface
+   * @return MeasuremailElementsInterface
    */
   public function &get($instance_id) {
     return parent::get($instance_id);
diff --git a/src/MeasuremailInterface.php b/src/MeasuremailInterface.php
index b24dc53..3a7e4a1 100644
--- a/src/MeasuremailInterface.php
+++ b/src/MeasuremailInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\measuremail;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 
 /**
@@ -59,7 +60,7 @@ interface MeasuremailInterface extends ConfigEntityInterface {
    * @param string $element
    *   The measuremail element ID.
    *
-   * @return \Drupal\measuremail\MeasuremailElementsInterface
+   * @return MeasuremailElementsInterface
    *   The measuremail element object.
    */
   public function getElement($element);
@@ -67,7 +68,7 @@ interface MeasuremailInterface extends ConfigEntityInterface {
   /**
    * Returns the measuremail elements for this form.
    *
-   * @return \Drupal\measuremail\MeasuremailElementsPluginCollection|\Drupal\measuremail\MeasuremailElementsInterface[]
+   * @return MeasuremailElementsPluginCollection|MeasuremailElementsInterface[]
    *   The measuremail element plugin collection.
    */
   public function getElements();
@@ -86,10 +87,10 @@ interface MeasuremailInterface extends ConfigEntityInterface {
   /**
    * Deletes an measuremail element from this form.
    *
-   * @param \Drupal\measuremail\MeasuremailElementsInterface $element
+   * @param MeasuremailElementsInterface $element
    *   The measuremail element object.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @return $this
    */
   public function deleteMeasuremailElement(MeasuremailElementsInterface $element);
diff --git a/src/Plugin/Block/MeasuremailFormBlock.php b/src/Plugin/Block/MeasuremailFormBlock.php
index b0d5f60..ff43095 100644
--- a/src/Plugin/Block/MeasuremailFormBlock.php
+++ b/src/Plugin/Block/MeasuremailFormBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\measuremail\Plugin\Block;
 
+use Drupal\measuremail\MeasuremailInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -46,7 +47,7 @@ class MeasuremailFormBlock extends BlockBase {
   /**
    * Get this block instance measuremail.
    *
-   * @return \Drupal\measuremail\MeasuremailInterface
+   * @return MeasuremailInterface
    *   A measuremail or NULL.
    */
   protected function getMeasuremail() {
diff --git a/src/Plugin/Field/FieldFormatter/MeasureMailFormFormatter.php b/src/Plugin/Field/FieldFormatter/MeasureMailFormFormatter.php
index 39cdee8..3fa3976 100644
--- a/src/Plugin/Field/FieldFormatter/MeasureMailFormFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/MeasureMailFormFormatter.php
@@ -27,14 +27,14 @@ class MeasuremailFormFormatter extends EntityReferenceFormatterBase implements C
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The entity form builder service.
    *
-   * @var \Drupal\Core\Entity\EntityFormBuilder
+   * @var EntityFormBuilder
    */
   protected $formBuilder;
 
@@ -45,7 +45,7 @@ class MeasuremailFormFormatter extends EntityReferenceFormatterBase implements C
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -55,9 +55,9 @@ class MeasuremailFormFormatter extends EntityReferenceFormatterBase implements C
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Entity\EntityFormBuilder $form_builder
+   * @param EntityFormBuilder $form_builder
    *   The entity form builder service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, RendererInterface $renderer, EntityFormBuilder $form_builder) {
@@ -105,7 +105,7 @@ class MeasuremailFormFormatter extends EntityReferenceFormatterBase implements C
       return $elements;
     }
 
-    /** @var \Drupal\measuremail\Entity\Measuremail[] $measuremail_items */
+    /** @var Measuremail[] $measuremail_items */
     foreach ($measuremail_items as $delta => $measuremail_item) {
       $elements[$delta] = $this->viewElement($measuremail_item, $langcode);
 
@@ -119,7 +119,7 @@ class MeasuremailFormFormatter extends EntityReferenceFormatterBase implements C
   /**
    * Render a single measuremail item as a form.
    *
-   * @param \Drupal\measuremail\Entity\Measuremail $measuremail
+   * @param Measuremail $measuremail
    *   The measuremail entity.
    * @param $langcode
    *   The language that should be used to render the field.
diff --git a/src/Plugin/MeasuremailElementsManager.php b/src/Plugin/MeasuremailElementsManager.php
index c9fb65a..a0b5d7f 100644
--- a/src/Plugin/MeasuremailElementsManager.php
+++ b/src/Plugin/MeasuremailElementsManager.php
@@ -24,9 +24,9 @@ class MeasuremailElementsManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
