modules/contrib/layout_builder_restrictions/layout_builder_restrictions.install
modules/contrib/layout_builder_restrictions/layout_builder_restrictions.module
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/layout_builder_restrictions_by_region.module
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Form/AllowedBlocksForm.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Form/FormAlter.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestrictionByRegion.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Routing/RouteSubscriber.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Traits/LayoutBuilderRestrictionsByRegionHelperTrait.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/tests/src/FunctionalJavascript/BlockPlacementBlacklistTest.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/tests/src/FunctionalJavascript/BlockPlacementCategoryRestrictionTest.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/tests/src/FunctionalJavascript/BlockPlacementWhitelistTest.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/tests/src/FunctionalJavascript/MoveBlockBlacklistTest.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/tests/src/FunctionalJavascript/MoveBlockCategoryRestrictionTest.php
modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/tests/src/FunctionalJavascript/MoveBlockWhitelistTest.php
modules/contrib/layout_builder_restrictions/src/Annotation/LayoutBuilderRestriction.php
modules/contrib/layout_builder_restrictions/src/Controller/ChooseBlockController.php
modules/contrib/layout_builder_restrictions/src/Controller/MoveBlockController.php
modules/contrib/layout_builder_restrictions/src/Form/FormAlter.php
modules/contrib/layout_builder_restrictions/src/Form/MoveBlockForm.php
modules/contrib/layout_builder_restrictions/src/Form/RestrictionPluginConfigForm.php
modules/contrib/layout_builder_restrictions/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestriction.php
modules/contrib/layout_builder_restrictions/src/Plugin/LayoutBuilderRestrictionBase.php
modules/contrib/layout_builder_restrictions/src/Plugin/LayoutBuilderRestrictionInterface.php
modules/contrib/layout_builder_restrictions/src/Plugin/LayoutBuilderRestrictionManager.php
modules/contrib/layout_builder_restrictions/src/Routing/RouteSubscriber.php
modules/contrib/layout_builder_restrictions/src/Traits/PluginHelperTrait.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/BlacklistedRestrictionsTest.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/DashboardsIntegrationTest.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/DefaultRestrictionsTest.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/LanguageCategoriesTest.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/LayoutBuilderRestrictionsTestBase.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/LayoutLibraryIntegrationTest.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/LayoutRestrictionsTest.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/MiniLayoutsIntegrationTest.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/MoveBlockRestrictionTest.php
modules/contrib/layout_builder_restrictions/tests/src/FunctionalJavascript/WhitelistedRestrictionsTest.php
modules/contrib/layout_builder_restrictions/tests/src/Kernel/RestrictionManagerTest.php
modules/contrib/layout_builder_restrictions/tests/src/Traits/MoveBlockHelperTrait.php

15 files with changes
=====================

1) modules/contrib/layout_builder_restrictions/tests/src/Traits/MoveBlockHelperTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\layout_builder_restrictions\Traits;

+use Behat\Mink\Element\NodeElement;
 use Drupal\Tests\contextual\FunctionalJavascript\ContextualLinkClickTrait;

 /**
@@ @@
     $this->assertSession()->assertWaitOnAjaxRequest();
     $block_tds = $page->findAll('css', '.layout-builder-components-table__block-label');
     $this->assertCount(count($block_tds), $expected_block_labels);
-    /** @var \Behat\Mink\Element\NodeElement $block_td */
+    /** @var NodeElement $block_td */
     foreach ($block_tds as $block_td) {
       $this->assertSame(array_shift($expected_block_labels), trim($block_td->getText()));
     }
@@ @@
    * @param string $block_label
    *   The block label.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   The row handle element.
    */
   protected function findRowHandle($block_label) {
@@ @@
     $blocks = $page->findAll('css', "$region_selector [data-layout-block-uuid]");
     $this->assertCount(count($expected_block_selectors), $blocks);

-    /** @var \Behat\Mink\Element\NodeElement $block */
+    /** @var NodeElement $block */
     foreach ($blocks as $block) {
       $block_selector = array_shift($expected_block_selectors);
       $assert_session->elementsCount('css', "$region_selector $block_selector", 1);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/layout_builder_restrictions/tests/src/Kernel/RestrictionManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\layout_builder_restrictions\Kernel;

+use Drupal\layout_builder_restrictions\Plugin\LayoutBuilderRestrictionManager;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
    * Test that we can invoke getSortedPlugins without creating a notice.
    */
   public function testNoPhpNotice() {
-    /** @var \Drupal\layout_builder_restrictions\Plugin\LayoutBuilderRestrictionManager $manager */
+    /** @var LayoutBuilderRestrictionManager $manager */
     $manager = \Drupal::service('plugin.manager.layout_builder_restriction');
     $plugins = $manager->getSortedPlugins();
     // This should be at least one item long, since we ship a plugin in the
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/layout_builder_restrictions/src/Traits/PluginHelperTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\layout_builder_restrictions\Traits;

+use Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface;
+use Drupal\Core\Block\BlockManagerInterface;
+use Drupal\Core\Layout\LayoutPluginManagerInterface;
+use Drupal\Core\Plugin\Context\ContextHandlerInterface;
+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Plugin\Context\EntityContext;
 use Drupal\layout_builder\Context\LayoutBuilderContextTrait;
@@ @@
   /**
    * Gets block definitions appropriate for an entity display.
    *
-   * @param \Drupal\layout_builder\Entity\LayoutEntityDisplayInterface $display
+   * @param LayoutEntityDisplayInterface $display
    *   The entity display being edited.
    *
    * @return array[]
@@ @@
   /**
    * Gets the section storage manager.
    *
-   * @return \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface
+   * @return SectionStorageManagerInterface
    *   The section storage manager.
    */
   private function sectionStorageManager() {
@@ @@
   /**
    * Gets the block manager.
    *
-   * @return \Drupal\Core\Block\BlockManagerInterface
+   * @return BlockManagerInterface
    *   The block manager.
    */
   private function blockManager() {
@@ @@
   /**
    * Gets the layout plugin manager.
    *
-   * @return \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @return LayoutPluginManagerInterface
    *   The layout plugin manager.
    */
   private function layoutManager() {
@@ @@
   /**
    * Gets the context handler.
    *
-   * @return \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @return ContextHandlerInterface
    *   The context handler.
    */
   private function contextHandler() {
@@ @@
   /**
    * Gets the entity bundle interface.
    *
-   * @return \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @return EntityTypeBundleInfoInterface
    *   An interface for an entity type bundle info.
    */
   private function entityTypeBundleInfo() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/layout_builder_restrictions/src/Plugin/LayoutBuilderRestrictionManager.php:18

    ---------- begin diff ----------
@@ @@
    * directly. See \Drupal\Core\Form\ConfigFormBase::config() for an example of
    * this.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory to load plugin configuration.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/layout_builder_restrictions/src/Plugin/LayoutBuilderRestrictionInterface.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * Determine whether the block being moved is allowed to the destination.
    *
-   * @param \Drupal\layout_builder\SectionStorageInterface $section_storage
+   * @param SectionStorageInterface $section_storage
    *   The section storage.
    * @param int $delta_from
    *   The delta of the original section.
@@ @@
   /**
    * Returns an array of allowed inline blocks in a given context.
    *
-   * @param \Drupal\layout_builder\SectionStorageInterface $section_storage
+   * @param SectionStorageInterface $section_storage
    *   The section storage.
    * @param int $delta
    *   The delta of the section to splice.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/layout_builder_restrictions/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestriction.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Database connection service.
    *
-   * @var Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ModuleHandlerInterface $module_handler, Connection $connection) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/layout_builder_restrictions/src/Form/RestrictionPluginConfigForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The UI for managing Layout Builder Restrictions Plugins.
    *
-   * @var \Drupal\layout_builder_restrictions\Plugin\LayoutBuilderRestrictionManager
+   * @var LayoutBuilderRestrictionManager
    */
   protected $pluginManagerLayoutBuilderRestriction;
   /**
    * Drupal\Core\Config\ConfigManager definition.
    *
-   * @var \Drupal\Core\Config\ConfigManager
+   * @var ConfigManager
    */
   protected $configManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/layout_builder_restrictions/src/Form/MoveBlockForm.php:42

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   An AJAX response that display validation error messages or represents a
    *   successful submission.
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/layout_builder_restrictions/src/Form/FormAlter.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The section storage manager.
    *
-   * @var \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface
+   * @var SectionStorageManagerInterface
    */
   protected $sectionStorageManager;

@@ @@
   /**
    * The block manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;

@@ @@
   /**
    * The layout manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutManager;

@@ @@
   /**
    * The context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;

@@ @@
   /**
    * FormAlter constructor.
    *
-   * @param \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface $section_storage_manager
+   * @param SectionStorageManagerInterface $section_storage_manager
    *   The section storage manager.
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager.
    * @param \Drupal\Core\Block\LayoutPluginManagerInterface $layout_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Plugin\Context\ContextHandlerInterface $context_handler
+   * @param ContextHandlerInterface $context_handler
    *   The context handler.
    */
   public function __construct(SectionStorageManagerInterface $section_storage_manager, BlockManagerInterface $block_manager, LayoutPluginManagerInterface $layout_manager, ContextHandlerInterface $context_handler) {
@@ @@
   /**
    * Helper function to prepare saved allowed blocks.
    *
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ @@
   /**
    * Helper function to prepare saved allowed layouts.
    *
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/layout_builder_restrictions/src/Annotation/LayoutBuilderRestriction.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\layout_builder_restrictions\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * A description of the plugin (optional).
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


11) modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Traits/LayoutBuilderRestrictionsByRegionHelperTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\layout_builder_restrictions_by_region\Traits;

+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\Core\TempStore\PrivateTempStoreFactory;
 /**
  * Methods to help Layout Builder Restrictions By Region plugin.
  */
@@ @@
   /**
    * Gets the entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManager
+   * @return EntityTypeManager
    *   Manages entity type plugin definitions.
    */
   protected function entityTypeManager() {
@@ @@
   /**
    * Gets the private tempStore.
    *
-   * @return \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @return PrivateTempStoreFactory
    *   Creates a private temporary storage for a collection.
    */
   protected function privateTempStoreFactory() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


12) modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Routing/RouteSubscriber.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a RouteSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestrictionByRegion.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Database connection service.
    *
-   * @var Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ModuleHandlerInterface $module_handler, Connection $connection) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Form/FormAlter.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The section storage manager.
    *
-   * @var \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface
+   * @var SectionStorageManagerInterface
    */
   protected $sectionStorageManager;

@@ @@
   /**
    * The block manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;

@@ @@
   /**
    * The layout manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutManager;

@@ @@
   /**
    * The context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;

@@ @@
   /**
    * A service for generating UUIDs.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;

@@ @@
   /**
    * Creates a private temporary storage for a collection.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStoreFactory;

@@ @@
   /**
    * FormAlter constructor.
    *
-   * @param \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface $section_storage_manager
+   * @param SectionStorageManagerInterface $section_storage_manager
    *   The section storage manager.
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager.
    * @param \Drupal\Core\Block\LayoutPluginManagerInterface $layout_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Plugin\Context\ContextHandlerInterface $context_handler
+   * @param ContextHandlerInterface $context_handler
    *   The context handler.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid
+   * @param UuidInterface $uuid
    *   A service for generating UUIDs.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $private_temp_store_factory
+   * @param PrivateTempStoreFactory $private_temp_store_factory
    *   Creates a private temporary storage for a collection.
    */
   public function __construct(SectionStorageManagerInterface $section_storage_manager, BlockManagerInterface $block_manager, LayoutPluginManagerInterface $layout_manager, ContextHandlerInterface $context_handler, UuidInterface $uuid, PrivateTempStoreFactory $private_temp_store_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


15) modules/contrib/layout_builder_restrictions/modules/layout_builder_restrictions_by_region/src/Form/AllowedBlocksForm.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * Request stack that controls the lifecycle of requests.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The layout manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutManager;

@@ @@
   /**
    * Manages entity type plugin definitions.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Creates a private temporary storage for a collection.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStoreFactory;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Turns a render array into a HTML string.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;

@@ @@
   /**
    * The ModalFormController constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Request stack that controls the lifecycle of requests.
    * @param \Drupal\Core\Block\LayoutPluginManagerInterface $layout_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   Manages entity type plugin definitions.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $private_temp_store_factory
+   * @param PrivateTempStoreFactory $private_temp_store_factory
    *   Creates a private temporary storage for a collection.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   Turns a render array into a HTML string.
    */
   public function __construct(RequestStack $request_stack, LayoutPluginManagerInterface $layout_manager, EntityTypeManager $entity_type_manager, PrivateTempStoreFactory $private_temp_store_factory, MessengerInterface $messenger, Renderer $renderer) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function ajaxSubmit(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 15 files have been changed by Rector                                      

