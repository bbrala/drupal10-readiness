modules/contrib/symfony_mailer_log/src/Entity/SymfonyMailerLog.php
modules/contrib/symfony_mailer_log/src/Entity/SymfonyMailerLogInterface.php
modules/contrib/symfony_mailer_log/src/Plugin/EmailAdjuster/LogMail.php
modules/contrib/symfony_mailer_log/src/Plugin/Field/FieldFormatter/SymfonyMailerLogHtmlBody.php
modules/contrib/symfony_mailer_log/src/SymfonyMailerLogAccessControlHandler.php
modules/contrib/symfony_mailer_log/src/SymfonyMailerLogListBuilder.php
modules/contrib/symfony_mailer_log/src/SymfonyMailerLogStorage.php
modules/contrib/symfony_mailer_log/src/SymfonyMailerLogStorageInterface.php

3 files with changes
====================

1) modules/contrib/symfony_mailer_log/src/SymfonyMailerLogListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\symfony_mailer_log;

+use Drupal\symfony_mailer_log\Entity\SymfonyMailerLogInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
@@ @@
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Constructs a new SymfonyMailerLogListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityTypeManagerInterface $entity_type_manager, DateFormatterInterface $date_formatter) {
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity): array {
-    /** @var \Drupal\symfony_mailer_log\Entity\SymfonyMailerLogInterface $entity */
+    /** @var SymfonyMailerLogInterface $entity */
     $row['id'] = $entity->id();
     $row['to'] = implode(' / ', $entity->getTo());
     $row['subject'] = Link::createFromRoute($entity->getSubject(), 'entity.symfony_mailer_log.canonical', ['symfony_mailer_log' => $entity->id()]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/symfony_mailer_log/src/SymfonyMailerLogAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\symfony_mailer_log;

+use Drupal\symfony_mailer_log\Entity\SymfonyMailerLogInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\symfony_mailer_log\Entity\SymfonyMailerLogInterface $entity */
-
+    /** @var SymfonyMailerLogInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIfHasPermission($account, 'view symfony mailer log entries');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/symfony_mailer_log/src/Plugin/Field/FieldFormatter/SymfonyMailerLogHtmlBody.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\symfony_mailer_log\Plugin\Field\FieldFormatter;

+use Drupal\symfony_mailer_log\Entity\SymfonyMailerLogInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ @@
    * {@inheritdoc}
    */
   public function viewElements(FieldItemListInterface $items, $langcode): array {
-    /** @var \Drupal\symfony_mailer_log\Entity\SymfonyMailerLogInterface $symfony_mailer_log */
+    /** @var SymfonyMailerLogInterface $symfony_mailer_log */
     $symfony_mailer_log = $items->getEntity();
     $elements = [];
     $elements[0] = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/symfony_mailer_log/src/Plugin/EmailAdjuster/LogMail.php"
         file, due to:                                                          
         "Analyze error: "Class Drupal\symfony_mailer\Processor\EmailAdjusterBase
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

