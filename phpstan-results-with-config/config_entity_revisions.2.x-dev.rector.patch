diff --git a/modules/views_revisions/src/ParamConverter/ViewsRevisionsConverter.php b/modules/views_revisions/src/ParamConverter/ViewsRevisionsConverter.php
index 949353d..fe53bbd 100644
--- a/modules/views_revisions/src/ParamConverter/ViewsRevisionsConverter.php
+++ b/modules/views_revisions/src/ParamConverter/ViewsRevisionsConverter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\views_revisions\ParamConverter;
 
+use Drupal\Core\Entity\entityTypeManagerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -44,16 +45,16 @@ class ViewsRevisionsConverter extends AdminPathConfigEntityConverter implements
   /**
    * Stores the tempstore factory.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStoreFactory
+   * @var SharedTempStoreFactory
    */
   protected $tempStoreFactory;
 
   /**
    * Constructs a new ViewUIConverter.
    *
-   * @param \Drupal\Core\Entity\entityTypeManagerInterface $entity_manager
+   * @param entityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\TempStore\SharedTempStoreFactory $temp_store_factory
+   * @param SharedTempStoreFactory $temp_store_factory
    *   The factory for the temp store object.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, SharedTempStoreFactory $temp_store_factory, ConfigFactoryInterface $config_factory = NULL, AdminContext $admin_context = NULL, EntityRepositoryInterface $entityRepository = NULL) {
diff --git a/modules/views_revisions/src/ProxyClass/ParamConverter/ViewsRevisionsConverter.php b/modules/views_revisions/src/ProxyClass/ParamConverter/ViewsRevisionsConverter.php
index 676fbbe..c471e70 100644
--- a/modules/views_revisions/src/ProxyClass/ParamConverter/ViewsRevisionsConverter.php
+++ b/modules/views_revisions/src/ProxyClass/ParamConverter/ViewsRevisionsConverter.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\views_revisions\ProxyClass\ParamConverter {
 
+    use Drupal\Core\ParamConverter\ParamConverterInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Symfony\Component\Routing\Route;
     /**
      * Provides a proxy class for \Drupal\views_revisions\ParamConverter\ViewsRevisionsConverter.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class ViewsRevisionsConverter implements \Drupal\Core\ParamConverter\ParamConverterInterface
+    class ViewsRevisionsConverter implements ParamConverterInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -34,19 +38,19 @@ namespace Drupal\views_revisions\ProxyClass\ParamConverter {
         /**
          * The service container.
          *
-         * @var \Symfony\Component\DependencyInjection\ContainerInterface
+         * @var ContainerInterface
          */
         protected $container;
 
         /**
          * Constructs a ProxyClass Drupal proxy object.
          *
-         * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+         * @param ContainerInterface $container
          *   The container.
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\views_revisions\ProxyClass\ParamConverter {
         /**
          * {@inheritdoc}
          */
-        public function applies($definition, $name, \Symfony\Component\Routing\Route $route)
+        public function applies($definition, $name, Route $route)
         {
             return $this->lazyLoadItself()->applies($definition, $name, $route);
         }
diff --git a/modules/views_revisions/src/ViewsRevisionsEditForm.php b/modules/views_revisions/src/ViewsRevisionsEditForm.php
index d4a63be..d29e7fc 100644
--- a/modules/views_revisions/src/ViewsRevisionsEditForm.php
+++ b/modules/views_revisions/src/ViewsRevisionsEditForm.php
@@ -27,7 +27,7 @@ class ViewsRevisionsEditForm extends ViewEditForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function cancel(array $form, FormStateInterface $form_state) {
