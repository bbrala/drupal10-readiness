diff --git a/layout_builder_asset.module b/layout_builder_asset.module
index ed0ecb5..a8b3762 100644
--- a/layout_builder_asset.module
+++ b/layout_builder_asset.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\layout_builder\SectionComponent;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 /**
  * @file
  * Provides hook implementations for Layout Builder Asset.
@@ -74,7 +78,7 @@ function layout_builder_asset_form_alter(&$form, FormStateInterface $formState)
     // @TODO: After save it should immediately reflect on node view page.
     $formObject = $formState->getFormObject();
 
-    /** @var \Drupal\layout_builder\SectionComponent $component */
+    /** @var SectionComponent $component */
     $component = $formObject
       ->getSectionStorage()
       ->getSection($formObject->getDelta())
@@ -343,7 +347,7 @@ function get_prefixed_css($css, $prefix) {
  * @return array
  *   The entity types.
  *
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws PluginNotFoundException
  */
 function layout_builder_asset_get_entity_types(array $types = []) {
   $asset_entity_types = &drupal_static(__FUNCTION__);
@@ -382,11 +386,11 @@ function layout_builder_asset_cache_flush() {
  * @return array
  *   Array of assets required to the layout builder.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function layout_builder_asset_get_assets($active = NULL, array $types = []) {
-  /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+  /** @var EntityTypeManagerInterface $entity_type_manager */
   $entity_type_manager = \Drupal::entityTypeManager();
   $assets = [];
   foreach (layout_builder_asset_get_entity_types($types) as $entity_type_id => $entity_type) {
diff --git a/src/EventSubscriber/BlockRendererListener.php b/src/EventSubscriber/BlockRendererListener.php
index 7a86bce..afb4c55 100644
--- a/src/EventSubscriber/BlockRendererListener.php
+++ b/src/EventSubscriber/BlockRendererListener.php
@@ -29,23 +29,23 @@ class BlockRendererListener implements EventSubscriberInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Creates a BlockComponentRenderArray object.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(AccountInterface $current_user, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Form/AddBlockForm.php b/src/Form/AddBlockForm.php
index e76b56d..7335e5f 100644
--- a/src/Form/AddBlockForm.php
+++ b/src/Form/AddBlockForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\layout_builder_asset\Form;
 
+use Drupal\layout_builder\SectionStorageInterface;
+use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\layout_builder\Form\AddBlockForm as OriginalAddBlockForm;
 
 /**
@@ -22,7 +24,7 @@ class AddBlockForm extends OriginalAddBlockForm {
   /**
    * Return the section storage object.
    *
-   * @return \Drupal\layout_builder\SectionStorageInterface
+   * @return SectionStorageInterface
    *   The section storage.
    */
   public function getSectionStorage() {
@@ -52,7 +54,7 @@ class AddBlockForm extends OriginalAddBlockForm {
   /**
    * Return the block plugin.
    *
-   * @return \Drupal\Core\Block\BlockPluginInterface
+   * @return BlockPluginInterface
    *   The block plugin object.
    */
   public function getBlock() {
diff --git a/src/Form/LayoutBuilderAssetDeleteForm.php b/src/Form/LayoutBuilderAssetDeleteForm.php
index ed5a32a..03cec37 100644
--- a/src/Form/LayoutBuilderAssetDeleteForm.php
+++ b/src/Form/LayoutBuilderAssetDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_builder_asset\Form;
 
+use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -40,7 +41,7 @@ class LayoutBuilderAssetDeleteForm extends EntityConfirmFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Entity\ConfigEntityInterface $entity */
+    /** @var ConfigEntityInterface $entity */
     $entity = $this->entity;
     $this->logger('layout_builder_asset')->notice('%type asset %id deleted', [
       '%type' => $entity->get('entityTypeId'),
diff --git a/src/Form/LayoutBuilderAssetDisableForm.php b/src/Form/LayoutBuilderAssetDisableForm.php
index 3302ff1..c051ba6 100644
--- a/src/Form/LayoutBuilderAssetDisableForm.php
+++ b/src/Form/LayoutBuilderAssetDisableForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_builder_asset\Form;
 
+use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -45,7 +46,7 @@ class LayoutBuilderAssetDisableForm extends EntityConfirmFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Entity\ConfigEntityInterface $entity */
+    /** @var ConfigEntityInterface $entity */
     $entity = $this->entity;
     $entity->disable()->save();
 
diff --git a/src/Form/LayoutBuilderAssetEnableForm.php b/src/Form/LayoutBuilderAssetEnableForm.php
index d94bb55..185d12d 100644
--- a/src/Form/LayoutBuilderAssetEnableForm.php
+++ b/src/Form/LayoutBuilderAssetEnableForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_builder_asset\Form;
 
+use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -45,7 +46,7 @@ class LayoutBuilderAssetEnableForm extends EntityConfirmFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Entity\ConfigEntityInterface $entity */
+    /** @var ConfigEntityInterface $entity */
     $entity = $this->entity;
     $entity->enable()->save();
 
diff --git a/src/Form/LayoutBuilderAssetFormBase.php b/src/Form/LayoutBuilderAssetFormBase.php
index 24f765e..7b7e72b 100644
--- a/src/Form/LayoutBuilderAssetFormBase.php
+++ b/src/Form/LayoutBuilderAssetFormBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\layout_builder_asset\Form;
 
+use Drupal\Core\Condition\ConditionManager;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
+use Drupal\Core\Extension\ThemeHandler;
 use Psr\Log\LoggerInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ -21,7 +24,7 @@ class LayoutBuilderAssetFormBase extends EntityForm {
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
   /**
@@ -33,37 +36,37 @@ class LayoutBuilderAssetFormBase extends EntityForm {
   /**
    * The condition plugin manager.
    *
-   * @var \Drupal\Core\Condition\ConditionManager
+   * @var ConditionManager
    */
   protected $manager;
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $dispatcher;
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $language;
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandler
+   * @var ThemeHandler
    */
   protected $themeHandler;
   /**
    * The context repository service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
   /**
    * The plugin form manager.
    *
-   * @var \Drupal\Core\Plugin\PluginFormFactoryInterface
+   * @var PluginFormFactoryInterface
    */
   protected $pluginFormFactory;
 
@@ -83,17 +86,17 @@ class LayoutBuilderAssetFormBase extends EntityForm {
   /**
    * LayoutBuilderInterface constructor.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Executable\ExecutableManagerInterface $manager
+   * @param ExecutableManagerInterface $manager
    *   The ConditionManager for building the conditions UI.
-   * @param \Drupal\Core\Plugin\Context\ContextRepositoryInterface $context_repository
+   * @param ContextRepositoryInterface $context_repository
    *   The lazy context repository service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language
+   * @param LanguageManagerInterface $language
    *   The language manager.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Core\Plugin\PluginFormFactoryInterface $plugin_form_manager
+   * @param PluginFormFactoryInterface $plugin_form_manager
    *   The plugin form manager.
    */
   public function __construct(LoggerInterface $logger, ExecutableManagerInterface $manager, ContextRepositoryInterface $context_repository, LanguageManagerInterface $language, ThemeHandlerInterface $theme_handler, PluginFormFactoryInterface $plugin_form_manager) {
diff --git a/src/Form/OverridesContentEntityForm.php b/src/Form/OverridesContentEntityForm.php
index 00150b0..ac99b26 100644
--- a/src/Form/OverridesContentEntityForm.php
+++ b/src/Form/OverridesContentEntityForm.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\layout_builder_asset\Form;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\TempStore\TempStoreException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
@@ -20,38 +25,38 @@ class OverridesContentEntityForm extends OverridesEntityForm {
   /**
    * Layout Builder Asset JS storage entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $assetJs;
 
   /**
    * Layout Builder Asset CSS storage entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $assetCss;
 
   /**
    * The tempstore factory.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStoreFactory;
 
   /**
    * Constructs a new OverridesEntityForm.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\layout_builder\LayoutTempstoreRepositoryInterface $layout_tempstore_repository
+   * @param LayoutTempstoreRepositoryInterface $layout_tempstore_repository
    *   The layout tempstore repository.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $tempStoreFactory
+   * @param PrivateTempStoreFactory $tempStoreFactory
    *   The tempstore factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityManager
+   * @param EntityTypeManagerInterface $entityManager
    *   The Entity Manager Interface.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info, TimeInterface $time, LayoutTempstoreRepositoryInterface $layout_tempstore_repository, PrivateTempStoreFactory $tempStoreFactory, EntityTypeManagerInterface $entityManager) {
@@ -122,10 +127,10 @@ class OverridesContentEntityForm extends OverridesEntityForm {
   /**
    * Delete all the Assets for the layout builder.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
-   * @throws \Drupal\Core\TempStore\TempStoreException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
+   * @throws TempStoreException
    */
   protected function deleteAsset() {
     $store = $this->tempStoreFactory->get('layout_builder_asset');
diff --git a/src/Form/RemoveBlockForm.php b/src/Form/RemoveBlockForm.php
index f64b219..cbbd115 100644
--- a/src/Form/RemoveBlockForm.php
+++ b/src/Form/RemoveBlockForm.php
@@ -16,7 +16,7 @@ class RemoveBlockForm extends OriginalRemoveBlockForm {
   /**
    * The tempstore factory.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStoreFactory;
 
diff --git a/src/Form/RemoveSectionForm.php b/src/Form/RemoveSectionForm.php
index 1e39a4c..211a02c 100644
--- a/src/Form/RemoveSectionForm.php
+++ b/src/Form/RemoveSectionForm.php
@@ -16,7 +16,7 @@ class RemoveSectionForm extends OriginalRemoveSectionForm {
   /**
    * The tempstore factory.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStoreFactory;
 
diff --git a/src/Form/UpdateBlockForm.php b/src/Form/UpdateBlockForm.php
index 771072b..0cb1c47 100644
--- a/src/Form/UpdateBlockForm.php
+++ b/src/Form/UpdateBlockForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\layout_builder_asset\Form;
 
+use Drupal\layout_builder\SectionStorageInterface;
+use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\layout_builder\Form\UpdateBlockForm as OriginalUpdateBlockForm;
 
 /**
@@ -22,7 +24,7 @@ class UpdateBlockForm extends OriginalUpdateBlockForm {
   /**
    * Return the section storage object.
    *
-   * @return \Drupal\layout_builder\SectionStorageInterface
+   * @return SectionStorageInterface
    *   The section storage.
    */
   public function getSectionStorage() {
@@ -52,7 +54,7 @@ class UpdateBlockForm extends OriginalUpdateBlockForm {
   /**
    * Return the block plugin.
    *
-   * @return \Drupal\Core\Block\BlockPluginInterface
+   * @return BlockPluginInterface
    *   The block plugin object.
    */
   public function getBlock() {
diff --git a/src/LayoutBuilderAssetAccessControlHandler.php b/src/LayoutBuilderAssetAccessControlHandler.php
index 48fc622..cef6d11 100644
--- a/src/LayoutBuilderAssetAccessControlHandler.php
+++ b/src/LayoutBuilderAssetAccessControlHandler.php
@@ -19,25 +19,25 @@ class LayoutBuilderAssetAccessControlHandler extends EntityAccessControlHandler
   /**
    * The plugin context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;
 
   /**
    * The context manager service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
 
   /**
    * Constructs a LayoutBuilderAssetAccessControlHandler object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Plugin\Context\ContextHandlerInterface $context_handler
+   * @param ContextHandlerInterface $context_handler
    *   The ContextHandler for applying contexts to conditions properly.
-   * @param \Drupal\Core\Plugin\Context\ContextRepositoryInterface $context_repository
+   * @param ContextRepositoryInterface $context_repository
    *   The lazy context repository service.
    */
   public function __construct(EntityTypeInterface $entity_type, ContextHandlerInterface $context_handler, ContextRepositoryInterface $context_repository) {
diff --git a/src/LayoutBuilderAssetFileStorage.php b/src/LayoutBuilderAssetFileStorage.php
index ce1655a..d9380f5 100644
--- a/src/LayoutBuilderAssetFileStorage.php
+++ b/src/LayoutBuilderAssetFileStorage.php
@@ -26,14 +26,14 @@ final class LayoutBuilderAssetFileStorage {
   /**
    * A short description of the layoutbuilder.
    *
-   * @var \Drupal\layout_builder_asset\LayoutBuilderAssetInterface
+   * @var LayoutBuilderAssetInterface
    */
   protected $layoutBuilder;
 
   /**
    * LayoutBuilderInterface constructor.
    *
-   * @param \Drupal\layout_builder_asset\LayoutBuilderAssetInterface $layoutBuilder
+   * @param LayoutBuilderAssetInterface $layoutBuilder
    *   Layout builder.
    */
   public function __construct(LayoutBuilderAssetInterface $layoutBuilder) {
@@ -131,7 +131,7 @@ final class LayoutBuilderAssetFileStorage {
   /**
    * Get the Drupal file system service.
    *
-   * @return \Drupal\Core\File\FileSystemInterface
+   * @return FileSystemInterface
    *   File System service.
    */
   protected static function getFileSystemService() {
diff --git a/tests/src/Functional/LayoutBuilderAssetCssTest.php b/tests/src/Functional/LayoutBuilderAssetCssTest.php
index 1e1dee4..016a683 100644
--- a/tests/src/Functional/LayoutBuilderAssetCssTest.php
+++ b/tests/src/Functional/LayoutBuilderAssetCssTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\layout_builder_asset\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
@@ -31,14 +32,14 @@ class LayoutBuilderAssetCssTest extends BrowserTestBase {
   /**
    * The account to be used to test access to both workflows.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $administrator;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_tasks_block');
diff --git a/tests/src/Functional/LayoutBuilderAssetJsTest.php b/tests/src/Functional/LayoutBuilderAssetJsTest.php
index a599b94..09e30ab 100644
--- a/tests/src/Functional/LayoutBuilderAssetJsTest.php
+++ b/tests/src/Functional/LayoutBuilderAssetJsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\layout_builder_asset\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
@@ -31,14 +32,14 @@ class LayoutBuilderAssetJsTest extends BrowserTestBase {
   /**
    * The account to be used to test access to both workflows.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $administrator;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_tasks_block');
