diff --git a/prefetcher.drush.inc b/prefetcher.drush.inc
index 4c44f35..e05b007 100755
--- a/prefetcher.drush.inc
+++ b/prefetcher.drush.inc
@@ -1,4 +1,5 @@
 <?php
+use Drupal\prefetcher\Service\Prefetcher;
 /**
  * @file Contains debug commans for teaser.
  */
@@ -37,7 +38,7 @@ function prefetcher_drush_command() {
  * Resets the prefetcher queue.
  */
 function drush_prefetcher_reset() {
-  /** @var \Drupal\prefetcher\Service\Prefetcher $prefetcher */
+  /** @var Prefetcher $prefetcher */
   $prefetcher = \Drupal::service('prefetcher');
   $prefetcher->reset();
 }
@@ -53,7 +54,7 @@ function drush_prefetcher_run() {
     'expiry' => drush_get_option('expiry'),
     'silent' => (bool) drush_get_option('silent'),
   ];
-  /** @var \Drupal\prefetcher\Service\Prefetcher $prefetcher */
+  /** @var Prefetcher $prefetcher */
   $prefetcher = \Drupal::service('prefetcher');
   $prefetcher->run($options);
 }
diff --git a/prefetcher.module b/prefetcher.module
index ab18879..23faf91 100644
--- a/prefetcher.module
+++ b/prefetcher.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\prefetcher\PrefetcherCrawlerManager;
+use Drupal\prefetcher\CrawlerInterface;
+use Drupal\prefetcher\Entity\PrefetcherUriInterface;
 /**
  * @file
  * Contains prefetcher.module.
@@ -20,11 +23,11 @@ function prefetcher_cron() {
         $logger->info(t("Started crawling process for a total of @total items via @env.", ['@total' => $limit, '@env' => 'Cron']));
         $start = microtime(TRUE);
         /**
-         * @var \Drupal\prefetcher\PrefetcherCrawlerManager $crawler_manager
+         * @var PrefetcherCrawlerManager $crawler_manager
          */
         $crawler_manager = \Drupal::service('plugin.manager.prefetcher_crawler');
         /**
-         * @var \Drupal\prefetcher\CrawlerInterface $crawler
+         * @var CrawlerInterface $crawler
          */
         $crawler = NULL;
         $crawler_settings = $config->get('crawler');
@@ -100,7 +103,7 @@ function prefetcher_entity_delete(EntityInterface $entity) {
     return;
   }
   $storage = \Drupal::entityTypeManager()->getStorage('prefetcher_uri');
-  /** @var \Drupal\prefetcher\Entity\PrefetcherUriInterface $prefetcher_uri */
+  /** @var PrefetcherUriInterface $prefetcher_uri */
   if (!empty($url)) {
     if ($prefetcher_uris = $storage->loadByProperties(['relpath' => $url])) {
       $storage->delete($prefetcher_uris);
@@ -114,7 +117,7 @@ function prefetcher_entity_delete(EntityInterface $entity) {
 function prefetcher_path_insert($path) {
   if (!empty($path['source']) && !empty($path['alias'])) {
     $storage = \Drupal::entityTypeManager()->getStorage('prefetcher_uri');
-    /** @var \Drupal\prefetcher\Entity\PrefetcherUriInterface $prefetcher_uri */
+    /** @var PrefetcherUriInterface $prefetcher_uri */
     if ($prefetcher_uris = $storage->loadByProperties(['relpath' => $path['source']])) {
       foreach ($prefetcher_uris as $prefetcher_uri) {
         $prefetcher_uri->setPath($path['alias']);
@@ -131,7 +134,7 @@ function prefetcher_path_insert($path) {
 function prefetcher_path_update($path) {
   if (($path['alias'] != $path['original']['alias']) && !empty($path['original']['alias'])) {
     $storage = \Drupal::entityTypeManager()->getStorage('prefetcher_uri');
-    /** @var \Drupal\prefetcher\Entity\PrefetcherUriInterface $prefetcher_uri */
+    /** @var PrefetcherUriInterface $prefetcher_uri */
     if ($prefetcher_uris = $storage->loadByProperties(['relpath' => $path['original']['alias']])) {
       foreach ($prefetcher_uris as $prefetcher_uri) {
         $prefetcher_uri->setPath($path['alias']);
@@ -163,7 +166,7 @@ function prefetcher_manual_custom_purge($urls) {
     $url = parse_url($url);
     if (!empty($url['path'])) {
       if ($prefetcher_uris = $storage->loadByProperties(['relpath' => $url['path']])) {
-        /** @var \Drupal\prefetcher\Entity\PrefetcherUriInterface $prefetcher_uri */
+        /** @var PrefetcherUriInterface $prefetcher_uri */
         foreach ($prefetcher_uris as $prefetcher_uri) {
           $prefetcher_uri->jumpTheQueue();
           $storage->save($prefetcher_uri);
@@ -176,7 +179,7 @@ function prefetcher_manual_custom_purge($urls) {
 /**
  * Ensures a refresh on the prefetcher uri corresponding to the given entity.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity to refresh the uri data for.
  */
 function _prefetcher_uri_for_entity(EntityInterface $entity) {
@@ -191,7 +194,7 @@ function _prefetcher_uri_for_entity(EntityInterface $entity) {
       if (!empty($url)) {
         $storage = \Drupal::entityTypeManager()->getStorage('prefetcher_uri');
         if (empty($prefetcher_uri = $storage->loadByProperties(['relpath' => $url]))) {
-          /** @var \Drupal\prefetcher\Entity\PrefetcherUriInterface $prefetcher_uri */
+          /** @var PrefetcherUriInterface $prefetcher_uri */
           $prefetcher_uri = $storage->create();
           $prefetcher_uri->setPath($url);
         }
diff --git a/src/Commands/PrefetcherCommands.php b/src/Commands/PrefetcherCommands.php
index 3ba0def..86b6eed 100644
--- a/src/Commands/PrefetcherCommands.php
+++ b/src/Commands/PrefetcherCommands.php
@@ -13,14 +13,14 @@ class PrefetcherCommands extends DrushCommands {
   /**
    * The prefetcher.
    *
-   * @var \Drupal\prefetcher\Service\Prefetcher
+   * @var Prefetcher
    */
   protected $prefetcher;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\prefetcher\Service\Prefetcher $prefetcher
+   * @param Prefetcher $prefetcher
    *   The prefetcher.
    */
   public function __construct(Prefetcher $prefetcher) {
diff --git a/src/Controller/CrawlController.php b/src/Controller/CrawlController.php
index 3b601fe..66f247b 100644
--- a/src/Controller/CrawlController.php
+++ b/src/Controller/CrawlController.php
@@ -16,7 +16,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class CrawlController extends ControllerBase {
 
   /**
-   * @var \Drupal\prefetcher\PrefetcherCrawlerManager $crawler_manager
+   * @var PrefetcherCrawlerManager $crawler_manager
    */
   protected $crawler_manager;
 
@@ -46,14 +46,14 @@ class CrawlController extends ControllerBase {
   }
 
   /**
-   * @return \Drupal\prefetcher\PrefetcherCrawlerManager
+   * @return PrefetcherCrawlerManager
    */
   public function getCrawlerManager() {
     return $this->crawler_manager;
   }
 
   /**
-   * @param \Drupal\prefetcher\PrefetcherCrawlerManager $crawlerManager
+   * @param PrefetcherCrawlerManager $crawlerManager
    */
   public function setCrawlerManager(PrefetcherCrawlerManager $crawlerManager) {
     $this->crawler_manager = $crawlerManager;
diff --git a/src/CrawlerInterface.php b/src/CrawlerInterface.php
index aefefba..a568bcb 100644
--- a/src/CrawlerInterface.php
+++ b/src/CrawlerInterface.php
@@ -40,7 +40,7 @@ interface CrawlerInterface extends ContainerFactoryPluginInterface, PluginInspec
 
   /**
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    * @param array $ajax_settings
    *
    * @return mixed
@@ -49,7 +49,7 @@ interface CrawlerInterface extends ContainerFactoryPluginInterface, PluginInspec
 
   /**
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *
    * @return mixed
    */
@@ -57,7 +57,7 @@ interface CrawlerInterface extends ContainerFactoryPluginInterface, PluginInspec
 
   /**
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *
    * @return mixed
    */
diff --git a/src/Form/ImportPrefetcherUrisForm.php b/src/Form/ImportPrefetcherUrisForm.php
index 569633d..bb569a2 100644
--- a/src/Form/ImportPrefetcherUrisForm.php
+++ b/src/Form/ImportPrefetcherUrisForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prefetcher\Form;
 
+use Drupal\file\Entity\File;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\prefetcher\PrefetcherImporterService;
@@ -17,7 +18,7 @@ class ImportPrefetcherUrisForm extends FormBase {
   /**
    * Uploaded file entity.
    *
-   * @var \Drupal\file\Entity\File
+   * @var File
    */
   protected $file;
 
diff --git a/src/Form/ImportSitemapForm.php b/src/Form/ImportSitemapForm.php
index 5cc1942..a3eeddb 100644
--- a/src/Form/ImportSitemapForm.php
+++ b/src/Form/ImportSitemapForm.php
@@ -16,12 +16,12 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class ImportSitemapForm extends FormBase {
 
   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -41,14 +41,14 @@ class ImportSitemapForm extends FormBase {
   }
 
   /**
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $handler
+   * @param ModuleHandlerInterface $handler
    */
   public function setModuleHandler(ModuleHandlerInterface $handler) {
     $this->moduleHandler = $handler;
   }
 
   /**
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    */
   public function setDatabase(Connection $database) {
     $this->database = $database;
diff --git a/src/Form/PrefetcherConfigForm.php b/src/Form/PrefetcherConfigForm.php
index adfce03..8d344e8 100644
--- a/src/Form/PrefetcherConfigForm.php
+++ b/src/Form/PrefetcherConfigForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prefetcher\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
@@ -20,14 +21,14 @@ class PrefetcherConfigForm extends ConfigFormBase {
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * The prefetcher crawler manager.
    *
-   * @var \Drupal\prefetcher\PrefetcherCrawlerManager
+   * @var PrefetcherCrawlerManager
    */
   protected $crawlerManager;
 
@@ -45,11 +46,11 @@ class PrefetcherConfigForm extends ConfigFormBase {
   /**
    * Constructs a PrefetcherConfigForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder.
-   * @param \Drupal\prefetcher\PrefetcherCrawlerManager $crawler_manager
+   * @param PrefetcherCrawlerManager $crawler_manager
    *   The prefetcher crawler manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, FormBuilderInterface $form_builder, PrefetcherCrawlerManager $crawler_manager) {
@@ -68,7 +69,7 @@ class PrefetcherConfigForm extends ConfigFormBase {
   }
 
   /**
-   * @return \Drupal\Core\Config\Config|\Drupal\Core\Config\Config
+   * @return Config|Config
    */
   public function getConfig() {
     return $this->config('prefetcher.settings');
@@ -463,7 +464,7 @@ class PrefetcherConfigForm extends ConfigFormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addHostSubmit(array &$form, FormStateInterface $form_state) {
@@ -486,7 +487,7 @@ class PrefetcherConfigForm extends ConfigFormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function removeHostSubmit(array &$form, FormStateInterface $form_state) {
@@ -504,7 +505,7 @@ class PrefetcherConfigForm extends ConfigFormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function switchCrawlerSubmit(array &$form, FormStateInterface $form_state) {
@@ -517,7 +518,7 @@ class PrefetcherConfigForm extends ConfigFormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addDomainSubmit(array &$form, FormStateInterface $form_state) {
@@ -536,7 +537,7 @@ class PrefetcherConfigForm extends ConfigFormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addHttpHeaderSubmit(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/PrefetcherUriSettingsForm.php b/src/Form/PrefetcherUriSettingsForm.php
index 8e0043d..8b505ef 100644
--- a/src/Form/PrefetcherUriSettingsForm.php
+++ b/src/Form/PrefetcherUriSettingsForm.php
@@ -29,7 +29,7 @@ class PrefetcherUriSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -41,7 +41,7 @@ class PrefetcherUriSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Plugin/PrefetcherCrawler/CrawlerBasic.php b/src/Plugin/PrefetcherCrawler/CrawlerBasic.php
index 299c76b..7948250 100644
--- a/src/Plugin/PrefetcherCrawler/CrawlerBasic.php
+++ b/src/Plugin/PrefetcherCrawler/CrawlerBasic.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prefetcher\Plugin\PrefetcherCrawler;
 
+use Drupal\Core\Config\ConfigBase;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -32,14 +33,14 @@ class CrawlerBasic extends PluginBase implements CrawlerInterface {
   /**
    * Prefetcher configuration object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $configuration;
 
   /**
    * Http client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $client;
 
@@ -71,7 +72,7 @@ class CrawlerBasic extends PluginBase implements CrawlerInterface {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory) {
@@ -343,7 +344,7 @@ class CrawlerBasic extends PluginBase implements CrawlerInterface {
    */
   public function buildConfigurationForm(array $form, FormStateInterface $form_state, array $ajax_settings = []) {
     $element = [];
-    /** @var \Drupal\Core\Config\ConfigBase $config */
+    /** @var ConfigBase $config */
     $config = $form_state->getFormObject()->getConfig();
 
     $crawler_settings = $config->get('crawler');
diff --git a/src/PrefetcherCrawlerManager.php b/src/PrefetcherCrawlerManager.php
index f89a7ab..c3bdb43 100644
--- a/src/PrefetcherCrawlerManager.php
+++ b/src/PrefetcherCrawlerManager.php
@@ -20,7 +20,7 @@ class PrefetcherCrawlerManager extends DefaultPluginManager {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -30,11 +30,11 @@ class PrefetcherCrawlerManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, ConfigFactoryInterface $config_factory) {
@@ -57,7 +57,7 @@ class PrefetcherCrawlerManager extends DefaultPluginManager {
   /**
    * Gets the default image toolkit.
    *
-   * @return \Drupal\prefetcher\CrawlerInterface
+   * @return CrawlerInterface
    *   Object of the default crawler, or FALSE on error.
    */
   public function getDefaultCrawler() {
diff --git a/src/PrefetcherImporterService.php b/src/PrefetcherImporterService.php
index 3f0e0e0..67e64a7 100644
--- a/src/PrefetcherImporterService.php
+++ b/src/PrefetcherImporterService.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\prefetcher;
 
+use Drupal\prefetcher\Entity\PrefetcherUriInterface;
+use Drupal\prefetcher\Entity\PrefetcherUri;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Messenger\MessengerInterface;
 
@@ -53,7 +55,7 @@ class PrefetcherImporterService {
       if ($i > $context['sandbox']['current']) {
         $url = parse_url($url->textContent);
         if (!empty($url['path']) && empty($storage->loadByProperties(['relpath' => $url['path']]))) {
-          /** @var \Drupal\prefetcher\Entity\PrefetcherUriInterface $prefetcher_uri */
+          /** @var PrefetcherUriInterface $prefetcher_uri */
           $prefetcher_uri = $storage->create();
           $prefetcher_uri->setPath($url['path']);
           $storage->save($prefetcher_uri);
@@ -95,7 +97,7 @@ class PrefetcherImporterService {
         'title' => t('Saving prefetcher keywords'),
         'operations' => $operations,
         'finished' => ['\Drupal\prefetcher\PrefetcherImporterService', 'finish'],
-        'file' => drupal_get_path('module', 'prefetcher') . '/prefetcher.module',
+        'file' => \Drupal::service('extension.list.module')->getPath('prefetcher') . '/prefetcher.module',
       ];
       batch_set($batch);
     }
@@ -194,7 +196,7 @@ class PrefetcherImporterService {
         }
       }
       else {
-        /** @var \Drupal\prefetcher\Entity\PrefetcherUri $prefetcher_uri */
+        /** @var PrefetcherUri $prefetcher_uri */
         $prefetcherUriEntityManager = \Drupal::entityTypeManager()->getStorage('prefetcher_uri');
         $prefetcher_uri = $prefetcherUriEntityManager->create();
         $prefetcher_uri->setPath($prefetcher_uri_array['uri']);
@@ -212,7 +214,7 @@ class PrefetcherImporterService {
         }
       }
       else {
-        /** @var \Drupal\prefetcher\Entity\PrefetcherUri $prefetcher_uri */
+        /** @var PrefetcherUri $prefetcher_uri */
         $prefetcherUriEntityManager = \Drupal::entityTypeManager()->getStorage('prefetcher_uri');
         $prefetcher_uri = $prefetcherUriEntityManager->create();
         $prefetcher_uri->setUri($prefetcher_uri_array['uri']);
diff --git a/src/PrefetcherUriAccessControlHandler.php b/src/PrefetcherUriAccessControlHandler.php
index 49fd72a..49acec6 100644
--- a/src/PrefetcherUriAccessControlHandler.php
+++ b/src/PrefetcherUriAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prefetcher;
 
+use Drupal\prefetcher\Entity\PrefetcherUriInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class PrefetcherUriAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\prefetcher\Entity\PrefetcherUriInterface $entity */
+    /** @var PrefetcherUriInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/PrefetcherUriHtmlRouteProvider.php b/src/PrefetcherUriHtmlRouteProvider.php
index b272639..02d84f8 100644
--- a/src/PrefetcherUriHtmlRouteProvider.php
+++ b/src/PrefetcherUriHtmlRouteProvider.php
@@ -36,10 +36,10 @@ class PrefetcherUriHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -61,10 +61,10 @@ class PrefetcherUriHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/Service/Prefetcher.php b/src/Service/Prefetcher.php
index 070c52a..a70bbe7 100644
--- a/src/Service/Prefetcher.php
+++ b/src/Service/Prefetcher.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prefetcher\Service;
 
+use Drupal\prefetcher\CrawlerInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -17,42 +18,42 @@ class Prefetcher {
   /**
    * The logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The prefetcher configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The lock backend that should be used.
    *
-   * @var \Drupal\Core\Lock\LockBackendInterface
+   * @var LockBackendInterface
    */
   protected $lock;
 
   /**
    * The prefetcher crawler manager.
    *
-   * @var \Drupal\prefetcher\PrefetcherCrawlerManager
+   * @var PrefetcherCrawlerManager
    */
   protected $crawlerManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -79,17 +80,17 @@ class Prefetcher {
   /**
    * Constructor.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The prefetcher configuration.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
-   * @param \Drupal\Core\Lock\LockBackendInterface $lock
+   * @param LockBackendInterface $lock
    *   The lock backend.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\prefetcher\PrefetcherCrawlerManager $crawler_manager
+   * @param PrefetcherCrawlerManager $crawler_manager
    *   The prefetcher crawler manager.
    */
   public function __construct(LoggerInterface $logger, ImmutableConfig $config, Connection $database, LockBackendInterface $lock, EntityTypeManagerInterface $entity_type_manager, PrefetcherCrawlerManager $crawler_manager) {
@@ -130,7 +131,7 @@ class Prefetcher {
 
       $total_start = microtime(TRUE);
 
-      /** @var \Drupal\prefetcher\CrawlerInterface $crawler */
+      /** @var CrawlerInterface $crawler */
       $crawler = NULL;
       $crawler_settings = $this->config->get('crawler');
       if (!empty($crawler_settings['plugin_id']) && $this->crawlerManager->hasDefinition($crawler_settings['plugin_id'])) {
diff --git a/src/Tests/LoadTest.php b/src/Tests/LoadTest.php
index ca29057..7ff0a4f 100644
--- a/src/Tests/LoadTest.php
+++ b/src/Tests/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prefetcher\Tests;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\simpletest\WebTestBase;
 use Drupal\Tests\BrowserTestBase;
@@ -23,14 +24,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -41,7 +42,7 @@ class LoadTest extends BrowserTestBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
