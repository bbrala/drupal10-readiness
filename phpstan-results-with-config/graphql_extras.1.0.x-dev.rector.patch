diff --git a/graphql_extras.info.yml b/graphql_extras.info.yml
index faa7679..9ac7385 100644
--- a/graphql_extras.info.yml
+++ b/graphql_extras.info.yml
@@ -1,7 +1,7 @@
 name: 'GraphQL Extras'
 type: module
 description: 'Collection of Plugins to extend GraphQL v3.'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: GraphQL
 dependencies:
   - graphql:graphql
diff --git a/src/Plugin/GraphQL/Fields/Entity/EntityHasTranslation.php b/src/Plugin/GraphQL/Fields/Entity/EntityHasTranslation.php
index 716edc4..6d13d96 100644
--- a/src/Plugin/GraphQL/Fields/Entity/EntityHasTranslation.php
+++ b/src/Plugin/GraphQL/Fields/Entity/EntityHasTranslation.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\graphql_extras\Plugin\GraphQL\Fields\Entity;
 
+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\TranslatableInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -36,7 +37,7 @@ class EntityHasTranslation extends FieldPluginBase implements ContainerFactoryPl
   /**
    * Drupal\Core\Language\LanguageManagerInterface definition.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
diff --git a/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageRelativeUrl.php b/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageRelativeUrl.php
index df21619..807aefb 100644
--- a/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageRelativeUrl.php
+++ b/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageRelativeUrl.php
@@ -29,8 +29,8 @@ class ImageRelativeUrl extends FieldPluginBase {
    */
   protected function resolveValues($value, array $args, ResolveContext $context, ResolveInfo $info) {
     if ($value instanceof ImageItem && $value->entity && $value->entity->access('view')) {
-      $absolute_url = file_create_url($value->entity->getFileUri());
-      yield file_url_transform_relative($absolute_url);
+      $absolute_url = \Drupal::service('file_url_generator')->generateAbsoluteString($value->entity->getFileUri());
+      yield \Drupal::service('file_url_generator')->transformRelative($absolute_url);
     }
   }
 
diff --git a/src/Plugin/GraphQL/Fields/File/FileUrl.php b/src/Plugin/GraphQL/Fields/File/FileUrl.php
index d9e139e..89a961b 100644
--- a/src/Plugin/GraphQL/Fields/File/FileUrl.php
+++ b/src/Plugin/GraphQL/Fields/File/FileUrl.php
@@ -25,8 +25,8 @@ class FileUrl extends FieldPluginBase {
    */
   public function resolveValues($value, array $args, ResolveContext $context, ResolveInfo $info) {
     if ($value instanceof FileInterface) {
-      $absolute_url = file_create_url($value->getFileUri());
-      yield file_url_transform_relative($absolute_url);
+      $absolute_url = \Drupal::service('file_url_generator')->generateAbsoluteString($value->getFileUri());
+      yield \Drupal::service('file_url_generator')->transformRelative($absolute_url);
     }
   }
 
diff --git a/src/Plugin/GraphQL/Fields/Image/ImageResourceRelativeUrl.php b/src/Plugin/GraphQL/Fields/Image/ImageResourceRelativeUrl.php
index 286e3dd..deb3109 100644
--- a/src/Plugin/GraphQL/Fields/Image/ImageResourceRelativeUrl.php
+++ b/src/Plugin/GraphQL/Fields/Image/ImageResourceRelativeUrl.php
@@ -26,7 +26,7 @@ class ImageResourceRelativeUrl extends FieldPluginBase {
    * {@inheritdoc}
    */
   protected function resolveValues($value, array $args, ResolveContext $context, ResolveInfo $info) {
-    yield file_url_transform_relative($value['url']);
+    yield \Drupal::service('file_url_generator')->transformRelative($value['url']);
   }
 
 }
diff --git a/src/Plugin/GraphQL/Fields/Language/CurrentLanguage.php b/src/Plugin/GraphQL/Fields/Language/CurrentLanguage.php
index 4cc5df4..04c1897 100644
--- a/src/Plugin/GraphQL/Fields/Language/CurrentLanguage.php
+++ b/src/Plugin/GraphQL/Fields/Language/CurrentLanguage.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\graphql_extras\Plugin\GraphQL\Fields\Language;
 
+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\graphql\GraphQL\Execution\ResolveContext;
 use Drupal\graphql\Plugin\GraphQL\Fields\FieldPluginBase;
@@ -30,7 +31,7 @@ class CurrentLanguage extends FieldPluginBase implements ContainerFactoryPluginI
   /**
    * Drupal\Core\Language\LanguageManagerInterface definition.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
diff --git a/src/Plugin/GraphQL/Fields/Routing/IsFrontPage.php b/src/Plugin/GraphQL/Fields/Routing/IsFrontPage.php
index d407ff7..b1a8fe6 100644
--- a/src/Plugin/GraphQL/Fields/Routing/IsFrontPage.php
+++ b/src/Plugin/GraphQL/Fields/Routing/IsFrontPage.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\graphql_extras\Plugin\GraphQL\Fields\Routing;
 
+use Drupal\Core\Path\PathMatcherInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\graphql\GraphQL\Execution\ResolveContext;
 use Drupal\graphql\Plugin\GraphQL\Fields\FieldPluginBase;
@@ -27,7 +28,7 @@ class IsFrontPage extends FieldPluginBase implements ContainerFactoryPluginInter
   /**
    * Drupal\Core\Path\PathMatcherInterface definition.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
diff --git a/src/Plugin/GraphQL/Fields/Routing/PathWithQueryString.php b/src/Plugin/GraphQL/Fields/Routing/PathWithQueryString.php
index 3c5940f..c94f9d3 100644
--- a/src/Plugin/GraphQL/Fields/Routing/PathWithQueryString.php
+++ b/src/Plugin/GraphQL/Fields/Routing/PathWithQueryString.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\graphql_extras\Plugin\GraphQL\Fields\Routing;
 
+use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Url;
 use Drupal\graphql\GraphQL\Cache\CacheableValue;
@@ -30,7 +31,7 @@ class PathWithQueryString extends FieldPluginBase implements ContainerFactoryPlu
   /**
    * Symfony\Component\HttpFoundation\RequestStack definition.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
