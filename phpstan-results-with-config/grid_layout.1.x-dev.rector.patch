diff --git a/grid_layout.module b/grid_layout.module
index 7b5a359..9d4c07c 100644
--- a/grid_layout.module
+++ b/grid_layout.module
@@ -1,11 +1,12 @@
 <?php
 
+use Drupal\Core\File\FileSystemInterface;
 /**
  * Implements hook_library_info_build().
  */
 function grid_layout_library_info_build() {
   $libraries = [];
-  /** @var \Drupal\Core\File\FileSystemInterface $file_system */
+  /** @var FileSystemInterface $file_system */
   $file_system = \Drupal::service('file_system');
   $files = $file_system->scanDirectory('public://grid_layout', '/.*/');
   foreach ($files as $file) {
diff --git a/src/Event/GridLayoutBuildEvent.php b/src/Event/GridLayoutBuildEvent.php
index d397225..c14e899 100644
--- a/src/Event/GridLayoutBuildEvent.php
+++ b/src/Event/GridLayoutBuildEvent.php
@@ -2,15 +2,15 @@
 
 namespace Drupal\grid_layout\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\grid_layout\Plugin\Layout\GridLayout;
-use Symfony\Component\EventDispatcher\Event;
 
 class GridLayoutBuildEvent extends Event {
 
   /**
    * The grid layout plugin.
    *
-   * @var \Drupal\grid_layout\Plugin\Layout\GridLayout
+   * @var GridLayout
    */
   protected $layout;
 
@@ -31,7 +31,7 @@ class GridLayoutBuildEvent extends Event {
   /**
    * GridLayoutBuildEvent constructor.
    *
-   * @param \Drupal\grid_layout\Plugin\Layout\GridLayout $layout
+   * @param GridLayout $layout
    * @param array $build
    * @param array $regions
    */
@@ -44,7 +44,7 @@ class GridLayoutBuildEvent extends Event {
   /**
    * Get the current grid layout.
    *
-   * @return \Drupal\grid_layout\Plugin\Layout\GridLayout
+   * @return GridLayout
    */
   public function getLayout(): GridLayout {
     return $this->layout;
diff --git a/src/Event/GridLayoutDefaultConfigEvent.php b/src/Event/GridLayoutDefaultConfigEvent.php
index 8e06e18..292f906 100644
--- a/src/Event/GridLayoutDefaultConfigEvent.php
+++ b/src/Event/GridLayoutDefaultConfigEvent.php
@@ -2,15 +2,15 @@
 
 namespace Drupal\grid_layout\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\grid_layout\Plugin\Layout\GridLayout;
-use Symfony\Component\EventDispatcher\Event;
 
 class GridLayoutDefaultConfigEvent extends Event {
 
   /**
    * The grid layout plugin.
    *
-   * @var \Drupal\grid_layout\Plugin\Layout\GridLayout
+   * @var GridLayout
    */
   protected $layout;
 
@@ -24,7 +24,7 @@ class GridLayoutDefaultConfigEvent extends Event {
   /**
    * GridLayoutDefaultConfigEvent constructor.
    *
-   * @param \Drupal\grid_layout\Plugin\Layout\GridLayout $layout
+   * @param GridLayout $layout
    */
   public function __construct(GridLayout $layout, array $default_config) {
     $this->layout = $layout;
@@ -34,7 +34,7 @@ class GridLayoutDefaultConfigEvent extends Event {
   /**
    * Get the current grid layout.
    *
-   * @return \Drupal\grid_layout\Plugin\Layout\GridLayout
+   * @return GridLayout
    */
   public function getLayout() : GridLayout {
     return $this->layout;
diff --git a/src/Event/GridLayoutFormEvent.php b/src/Event/GridLayoutFormEvent.php
index ee0ec15..09c30c4 100644
--- a/src/Event/GridLayoutFormEvent.php
+++ b/src/Event/GridLayoutFormEvent.php
@@ -2,16 +2,16 @@
 
 namespace Drupal\grid_layout\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\grid_layout\Plugin\Layout\GridLayout;
-use Symfony\Component\EventDispatcher\Event;
 
 abstract class GridLayoutFormEvent extends Event {
 
   /**
    * The grid layout plugin.
    *
-   * @var \Drupal\grid_layout\Plugin\Layout\GridLayout
+   * @var GridLayout
    */
   protected $layout;
 
@@ -25,16 +25,16 @@ abstract class GridLayoutFormEvent extends Event {
   /**
    * The FormState object.
    *
-   * @var \Drupal\Core\Form\FormStateInterface
+   * @var FormStateInterface
    */
   protected $formState;
 
   /**
    * GridLayoutFormBuildEvent constructor.
    *
-   * @param \Drupal\grid_layout\Plugin\Layout\GridLayout $layout
+   * @param GridLayout $layout
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function __construct(GridLayout $layout, array $form, FormStateInterface $form_state) {
     $this->layout = $layout;
@@ -45,7 +45,7 @@ abstract class GridLayoutFormEvent extends Event {
   /**
    * Get the grid layout plugin.
    *
-   * @return \Drupal\grid_layout\Plugin\Layout\GridLayout
+   * @return GridLayout
    */
   public function getLayout(): GridLayout {
     return $this->layout;
@@ -72,7 +72,7 @@ abstract class GridLayoutFormEvent extends Event {
   /**
    * Get the FormState object.
    *
-   * @return \Drupal\Core\Form\FormStateInterface
+   * @return FormStateInterface
    */
   public function getFormState(): FormStateInterface {
     return $this->formState;
diff --git a/src/Event/GridLayoutRegionsAlterEvent.php b/src/Event/GridLayoutRegionsAlterEvent.php
index 9534f4e..04abeec 100644
--- a/src/Event/GridLayoutRegionsAlterEvent.php
+++ b/src/Event/GridLayoutRegionsAlterEvent.php
@@ -2,13 +2,13 @@
 
 namespace Drupal\grid_layout\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\grid_layout\Plugin\Layout\GridLayout;
-use Symfony\Component\EventDispatcher\Event;
 
 class GridLayoutRegionsAlterEvent extends Event {
 
   /**
-   * @var \Drupal\grid_layout\Plugin\Layout\GridLayout
+   * @var GridLayout
    */
   protected $layout;
 
@@ -20,7 +20,7 @@ class GridLayoutRegionsAlterEvent extends Event {
   /**
    * GridLayoutPreBuildEvent constructor.
    *
-   * @param \Drupal\grid_layout\Plugin\Layout\GridLayout $layout
+   * @param GridLayout $layout
    * @param array $regions
    */
   public function __construct(GridLayout $layout, array $regions) {
@@ -29,9 +29,9 @@ class GridLayoutRegionsAlterEvent extends Event {
   }
 
   /**
-   * @return \Drupal\grid_layout\Plugin\Layout\GridLayout
+   * @return GridLayout
    */
-  public function getLayout(): \Drupal\grid_layout\Plugin\Layout\GridLayout {
+  public function getLayout(): GridLayout {
     return $this->layout;
   }
 
diff --git a/src/EventSubscriber/GridLayoutFormSubscriber.php b/src/EventSubscriber/GridLayoutFormSubscriber.php
index 9251bc7..fb29058 100644
--- a/src/EventSubscriber/GridLayoutFormSubscriber.php
+++ b/src/EventSubscriber/GridLayoutFormSubscriber.php
@@ -21,32 +21,32 @@ class GridLayoutFormSubscriber implements EventSubscriberInterface {
   /**
    * The Drupal file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The library discovery.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected $libraryDiscovery;
 
   /**
    * The uuid generator.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;
 
   /**
    * GridLayoutFormSubscriber constructor.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   The Drupal file system
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The library discovery.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid
+   * @param UuidInterface $uuid
    *   The uuid generator.
    */
   public function __construct(FileSystemInterface $fileSystem, LibraryDiscoveryInterface $libraryDiscovery, UuidInterface $uuid) {
@@ -67,7 +67,7 @@ class GridLayoutFormSubscriber implements EventSubscriberInterface {
   }
 
   /**
-   * @param \Drupal\grid_layout\Event\GridLayoutFormBuildEvent $event
+   * @param GridLayoutFormBuildEvent $event
    */
   public function onFormBuild(GridLayoutFormBuildEvent $event) {
     $layout = $event->getLayout();
diff --git a/src/Plugin/Layout/GridLayout.php b/src/Plugin/Layout/GridLayout.php
index 2105f51..443b303 100644
--- a/src/Plugin/Layout/GridLayout.php
+++ b/src/Plugin/Layout/GridLayout.php
@@ -21,7 +21,7 @@ class GridLayout extends LayoutDefault implements PluginFormInterface, Container
   /**
    * The event dispatcher
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $dispatcher;
 
@@ -34,7 +34,7 @@ class GridLayout extends LayoutDefault implements PluginFormInterface, Container
    *   The plugin id.
    * @param $plugin_definition
    *   The plugin definition.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   The event dispatcher.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EventDispatcherInterface $dispatcher) {
@@ -67,7 +67,7 @@ class GridLayout extends LayoutDefault implements PluginFormInterface, Container
       'columns' => [],
     ];
     $event = new GridLayoutDefaultConfigEvent($this, $default_config);
-    $this->dispatcher->dispatch(GridLayoutEvents::DEFAULT_CONFIG, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::DEFAULT_CONFIG);
     return $event->getDefaultConfig();
   }
 
@@ -76,13 +76,13 @@ class GridLayout extends LayoutDefault implements PluginFormInterface, Container
    */
   public function build(array $regions) {
     $event = new GridLayoutRegionsAlterEvent($this, $regions);
-    $this->dispatcher->dispatch(GridLayoutEvents::REGIONS_ALTER, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::REGIONS_ALTER);
     $regions = $event->getRegions();
 
     $build = parent::build($regions);
 
     $event = new GridLayoutBuildEvent($this, $build, $regions);
-    $this->dispatcher->dispatch(GridLayoutEvents::BUILD_LAYOUT, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::BUILD_LAYOUT);
     return $event->getBuild();
   }
 
@@ -94,7 +94,7 @@ class GridLayout extends LayoutDefault implements PluginFormInterface, Container
     $form = parent::buildConfigurationForm($form, $form_state);
 
     $event = new GridLayoutFormBuildEvent($this, $form, $form_state);
-    $this->dispatcher->dispatch(GridLayoutEvents::FORM_BUILD, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::FORM_BUILD);
     return $event->getForm();
   }
 
@@ -105,7 +105,7 @@ class GridLayout extends LayoutDefault implements PluginFormInterface, Container
     parent::validateConfigurationForm($form, $form_state);
 
     $event = new GridLayoutFormValidateEvent($this, $form, $form_state);
-    $this->dispatcher->dispatch(GridLayoutEvents::FORM_VALIDATE, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::FORM_VALIDATE);
     $form = $event->getForm();
     $form_state = $event->getFormState();
   }
@@ -117,7 +117,7 @@ class GridLayout extends LayoutDefault implements PluginFormInterface, Container
     parent::submitConfigurationForm($form, $form_state);
 
     $event = new GridLayoutFormSubmitEvent($this, $form, $form_state);
-    $this->dispatcher->dispatch(GridLayoutEvents::FORM_SUBMIT, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::FORM_SUBMIT);
     $form = $event->getForm();
     $form_state = $event->getFormState();
   }
