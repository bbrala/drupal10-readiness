diff --git a/composer.json b/composer.json
index 9ac8e12..cdf6717 100644
--- a/composer.json
+++ b/composer.json
@@ -17,6 +17,6 @@
     "source": "https://git.drupalcode.org/project/image_field_to_media"
   },
   "require": {
-    "drupal/core": "^8 || ^9"
+    "drupal/core": "^9.3 || ^10"
   }
 }
diff --git a/image_field_to_media.batch.inc b/image_field_to_media.batch.inc
index 1cdb823..bf50b87 100644
--- a/image_field_to_media.batch.inc
+++ b/image_field_to_media.batch.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\media\MediaInterface;
 /**
  * @file
  * Batch processing API for populate Media field of the entity with image items.
@@ -71,7 +72,7 @@ function image_field_to_media_populate_media_field($entity_type_id, $bundle, $im
  * @param array $image
  *   The array that represents one item of the Image field.
  *
- * @return \Drupal\media\MediaInterface
+ * @return MediaInterface
  *   The media Entity with the image.
  */
 function image_field_to_media_get_media_entity(array $image) {
diff --git a/image_field_to_media.info.yml b/image_field_to_media.info.yml
index 6e55a23..5c8f3f6 100644
--- a/image_field_to_media.info.yml
+++ b/image_field_to_media.info.yml
@@ -1,7 +1,7 @@
 name: 'Image field to media'
 type: module
 description: 'Enables to convert existing image fields to Media image fields.'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: 'Fields'
 dependencies:
   - 'drupal:media'
diff --git a/src/Form/ImageFieldToMediaForm.php b/src/Form/ImageFieldToMediaForm.php
index 955727d..24f0701 100644
--- a/src/Form/ImageFieldToMediaForm.php
+++ b/src/Form/ImageFieldToMediaForm.php
@@ -2,6 +2,13 @@
 
 namespace Drupal\image_field_to_media\Form;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\EntityTypeBundleInfo;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\Core\Field\FieldTypePluginManagerInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\State\StateInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -46,56 +53,56 @@ class ImageFieldToMediaForm extends FormBase {
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Entity\EntityTypeBundleInfo definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   protected $entityTypeBundleInfo;
 
   /**
    * Drupal\Core\Entity\EntityFieldManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * Drupal\field\FieldConfigInterface definition.
    *
-   * @var \Drupal\field\FieldConfigInterface
+   * @var FieldConfigInterface
    */
   protected $fieldConfig;
 
   /**
    * The field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypePluginManager;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * State storage service service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
@@ -186,7 +193,7 @@ class ImageFieldToMediaForm extends FormBase {
    *   The machine name, not prefixed.
    * @param array $element
    *   An array containing the structure of the 'field_name' element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return bool
@@ -227,7 +234,7 @@ class ImageFieldToMediaForm extends FormBase {
       'init_message' => $this->t('Cloning is starting.'),
       'progress_message' => $this->t('Processed @current out of @total.'),
       'error_message' => $this->t('Cloning has encountered an error.'),
-      'file' => drupal_get_path('module', 'image_field_to_media') . '/image_field_to_media.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('image_field_to_media') . '/image_field_to_media.batch.inc',
     ];
 
     batch_set($batch);
