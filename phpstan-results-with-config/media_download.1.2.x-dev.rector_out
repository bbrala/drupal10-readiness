modules/contrib/media_download/media_download.module
modules/contrib/media_download/media_download.post_update.php
modules/contrib/media_download/src/CacheableBinaryFileResponse.php
modules/contrib/media_download/src/DownloadController.php
modules/contrib/media_download/src/MediaSettingsOverride.php
modules/contrib/media_download/src/PageCacheResponsePolicy.php
modules/contrib/media_download/src/RouteSubscriber.php
modules/contrib/media_download/tests/src/Functional/DownloadTest.php
modules/contrib/media_download/tests/src/Kernel/MediaTest.php

2 files with changes
====================

1) modules/contrib/media_download/tests/src/Functional/DownloadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\media_download\Functional;

+use Drupal\media\Entity\Media;
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\system\Functional\Cache\AssertPageCacheContextsAndTagsTrait;

@@ @@
   /**
    * The media entity.
    *
-   * @var \Drupal\media\Entity\Media
+   * @var Media
    */
   protected $media;

@@ @@
   /**
    * The file owner account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $owner;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/media_download/src/DownloadController.php:32

    ---------- begin diff ----------
@@ @@
    * 2. The source field exists on the supplied media entity
    * 3. At least one field delta references a file that exists on disk
    *
-   * @return \Drupal\file\FileInterface|null
+   * @return FileInterface|null
    *   A file on success, otherwise NULL.
    *
    * @throws \RuntimeException
@@ @@
    * to be viewed in the browser. If `dl=1` is passed as a query parameter, then
    * the browser will be instructed to save the file to disk.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   The media entity for which to initiate a file download.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   When a valid file cannot be found for the supplied media entity.
    *
-   * @return \Drupal\media_download\CacheableBinaryFileResponse
+   * @return CacheableBinaryFileResponse
    *   A cacheable binary file response.
    */
   public function save(MediaInterface $media, Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

