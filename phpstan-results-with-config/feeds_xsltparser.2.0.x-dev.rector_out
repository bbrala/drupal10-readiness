modules/contrib/feeds_xsltparser/feeds_xsltparser.install
modules/contrib/feeds_xsltparser/feeds_xsltparser.module
modules/contrib/feeds_xsltparser/src/Feeds/Parser/Form/XsltPipelineParserForm.php
modules/contrib/feeds_xsltparser/src/Feeds/Parser/XSLTPipelineParser.php
modules/contrib/feeds_xsltparser/src/FeedsXSLTChainLogProxy.php
modules/contrib/feeds_xsltparser/src/LibXMLException.php
modules/contrib/feeds_xsltparser/src/XSLTChain.php
modules/contrib/feeds_xsltparser/src/XSLTChainLogProxy.php
modules/contrib/feeds_xsltparser/src/XSLTMap.php
modules/contrib/feeds_xsltparser/src/XSLTPipe.php
modules/contrib/feeds_xsltparser/src/XSLTPipeRepository.php
modules/contrib/feeds_xsltparser/src/XSLTRepeat.php
modules/contrib/feeds_xsltparser/tests/src/Unit/XSLTChainTestCase.php
modules/contrib/feeds_xsltparser/tests/src/Unit/XSLTMapTestCase.php
modules/contrib/feeds_xsltparser/tests/src/Unit/XSLTRepeatTestCase.php

6 files with changes
====================

1) modules/contrib/feeds_xsltparser/tests/src/Unit/XSLTRepeatTestCase.php:67

    ---------- begin diff ----------
@@ @@
   /**
    * Ensure that repeater does not repeat a given stylesheet if result of
    * applying the counter stylesheet is zero.
+   * @doesNotPerformAssertions
    */
   function testRepeatZero() {
     if (!$this->xsl_available) {
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/feeds_xsltparser/src/XSLTRepeat.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * XSLTPipe which will be repeated for each key
    *
-   * @var \Drupal\feeds_xsltparser\XSLTPipe
+   * @var XSLTPipe
    */
   private $pipe;

@@ @@
    * XSLTChain executed from within XSLTMap::run to determine the number times
    * the pipe should be ran.
    *
-   * @var \Drupal\feeds_xsltparser\XSLTChain
+   * @var XSLTChain
    */
   private $counter;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/feeds_xsltparser/src/XSLTMap.php:16

    ---------- begin diff ----------
@@ @@
   private $xsltParamKeyName;

   /**
-   * @var \Drupal\feeds_xsltparser\XSLTPipe
+   * @var XSLTPipe
    */
   private $preproc;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/feeds_xsltparser/src/XSLTChain.php:11

    ---------- begin diff ----------
@@ @@
   private $xmlLastRecordErrors = FALSE;

   /**
-   * @var \Drupal\feeds_xsltparser\XSLTChainLogProxy
+   * @var XSLTChainLogProxy
    */
   private $logproxy;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/feeds_xsltparser/src/FeedsXSLTChainLogProxy.php:14

    ---------- begin diff ----------
@@ @@
   use StringTranslationTrait;

   /**
-   * @var \Drupal\feeds\StateInterface
+   * @var StateInterface
    */
   private $state;
   private $originalError;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/feeds_xsltparser/feeds_xsltparser.install:0

    ---------- begin diff ----------
@@ @@
 <?php
+
+use Drupal\Core\Url;
 /**
  * @file
  * Installation related hooks for Feeds XSLT Pipeline Parser plugin.
  */
-
 /**
  * Implements hook_requirements().
  */
@@ @@
   ];
   if (!$has_domdocument) {
     $requirements['feeds_xsltparser_php_domdocument']['severity'] = REQUIREMENT_ERROR;
-    $requirements['feeds_xsltparser_php_domdocument']['description'] = t('The feeds XSLT pipeline parser module requires the DOMDocument class to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', ['@link-phpinfo' => \Drupal\Core\Url::fromRoute('system.php')]);
+    $requirements['feeds_xsltparser_php_domdocument']['description'] = t('The feeds XSLT pipeline parser module requires the DOMDocument class to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', ['@link-phpinfo' => Url::fromRoute('system.php')]);
   }

   $requirements['feeds_xsltparser_php_xsl'] = [
@@ @@
   ];
   if (!$has_xsl) {
     $requirements['feeds_xsltparser_php_xsl']['severity'] = REQUIREMENT_ERROR;
-    $requirements['feeds_xsltparser_php_xsl']['description'] = t('The feeds XSLT pipeline parser module requires the PHP XSL extension to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', ['@link-phpinfo' => \Drupal\Core\Url::fromRoute('system.php')]);
+    $requirements['feeds_xsltparser_php_xsl']['description'] = t('The feeds XSLT pipeline parser module requires the PHP XSL extension to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', ['@link-phpinfo' => Url::fromRoute('system.php')]);
   }

   return $requirements;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

