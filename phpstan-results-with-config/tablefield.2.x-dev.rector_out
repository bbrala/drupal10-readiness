modules/contrib/tablefield/src/Controller/TablefieldController.php
modules/contrib/tablefield/src/Element/Tablefield.php
modules/contrib/tablefield/src/Form/TablefieldConfigForm.php
modules/contrib/tablefield/src/Plugin/Field/FieldFormatter/TablefieldFormatter.php
modules/contrib/tablefield/src/Plugin/Field/FieldType/TablefieldItem.php
modules/contrib/tablefield/src/Plugin/Field/FieldWidget/TablefieldWidget.php
modules/contrib/tablefield/src/TableValue.php
modules/contrib/tablefield/src/Utility/Tablefield.php
modules/contrib/tablefield/tablefield.api.php
modules/contrib/tablefield/tablefield.install
modules/contrib/tablefield/tablefield.post_update.php
modules/contrib/tablefield/tablefield_cellspan/tablefield_cellspan.module
modules/contrib/tablefield/tablefield_required/tablefield_required.module
modules/contrib/tablefield/tests/src/Functional/LoadTest.php
modules/contrib/tablefield/tests/src/Functional/TableValueFieldTest.php
modules/contrib/tablefield/tests/src/Functional/TablefieldCreationTrait.php

9 files with changes
====================

1) modules/contrib/tablefield/tests/src/Functional/TablefieldCreationTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tablefield\Functional;

+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;

@@ @@
     ]);
     $field_config->save();

-    /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
+    /** @var EntityDisplayRepositoryInterface $display_repository */
     $display_repository = \Drupal::service('entity_display.repository');
     $display_repository->getFormDisplay('node', $type_name)
       ->setComponent($name, [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/tablefield/tests/src/Functional/TableValueFieldTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalLogin($this->rootUser);
@@ @@
     $edit['field_table[0][tablefield][table][2][1]'] = 'Row 2-2';
     $edit['field_table[0][tablefield][table][2][2]'] = 'Row 2-3';

-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $assert_session = $this->assertSession();
     $assert_session->pageTextContains('Article Llamas are cool has been created.');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/tablefield/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tablefield\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->user = $this->drupalCreateUser(['administer site configuration']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/tablefield/tablefield_required/tablefield_required.module:11

    ---------- begin diff ----------
@@ @@
  * Implements hook_form_FORM_ID_alter().
  */
 function tablefield_required_form_field_config_edit_form_alter(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\field\Entity\FieldConfig $field_config */
+  /** @var FieldConfig $field_config */
   $field_config = $form_state->getFormObject()->getEntity();
   $field_type = $field_config->getType();

@@ @@
  *
  * @param string $entity_type
  *   The entity type.
- * @param \Drupal\field\Entity\FieldConfig $config
+ * @param FieldConfig $config
  *   The field configuration entity.
  * @param array $form
  *   The complete form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  */
 function tablefield_required_form_builder($entity_type, FieldConfig $config, array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


5) modules/contrib/tablefield/src/TableValue.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tablefield;

+use Drupal\tablefield\Plugin\Field\FieldType\TablefieldItem;
 use Drupal\Core\TypedData\TypedData;

 /**
@@ @@
    * {@inheritdoc}
    */
   public function getValue() {
-    /** @var \Drupal\tablefield\Plugin\Field\FieldType\TablefieldItem $item */
+    /** @var TablefieldItem $item */
     $item = $this->getParent();
     $value = '';
     if (isset($item->value)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/tablefield/src/Plugin/Field/FieldWidget/TablefieldWidget.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Session\AccountProxy definition.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;

@@ @@
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/tablefield/src/Plugin/Field/FieldFormatter/TablefieldFormatter.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Session\AccountProxy definition.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/tablefield/src/Element/Tablefield.php:234

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public static function ajaxCallbackRebuild(array $form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public static function submitCallbackRebuild(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/tablefield/src/Controller/TablefieldController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tablefield\Controller;

+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ @@
   /**
    * Check access to the export page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account to check.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check the permission for view.
    * @param string $field_name
    *   The machine name of the field to load.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The Access check results.
    */
   public function access(AccountInterface $account, EntityInterface $entity, $field_name) {
@@ @@
   /**
    * Menu callback to export a table as a CSV.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity object.
    * @param string $field_name
    *   The machine name of the field to load.
@@ @@
    * @param string $delta
    *   The field delta to load.
    *
-   * @return \Symfony\Component\HttpFoundation\StreamedResponse
+   * @return StreamedResponse
    *   A streamed response containing tablefield data as a CSV.
    */
   public function exportCsv(EntityInterface $entity, $field_name, $langcode, $delta) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 9 files have been changed by Rector                                       

