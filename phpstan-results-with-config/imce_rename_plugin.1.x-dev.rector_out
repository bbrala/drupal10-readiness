modules/contrib/imce_rename_plugin/imce_rename_plugin.install
modules/contrib/imce_rename_plugin/src/Plugin/ImcePlugin/Rename.php

1 file with changes
===================

1) modules/contrib/imce_rename_plugin/src/Plugin/ImcePlugin/Rename.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\imce_rename_plugin\Plugin\ImcePlugin;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\File\FileSystemInterface;
@@ @@
   /**
    * The variable containing the messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;

@@ @@
   /**
    * The variable containing the database service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The transliteration service to use.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;

@@ @@
    *   The plugin id.
    * @param mixed $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database service.
-   * @param \Drupal\Component\Transliteration\TransliterationInterface $transliteration
+   * @param TransliterationInterface $transliteration
    *   The transliteration service.
    */
   public function __construct(array $configuration,
@@ @@
   /**
    * Operation handler: rename.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function opRename(ImceFM $fm) {
     $items = $fm->getSelection();
@@ @@
   /**
    * Renames file by name.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function renameFile(ImceFM $fm, string $old_name) {
     $new_name = $this->getNewName($fm);
@@ @@
     $file = Imce::getFileEntity($old_uri);
     // Create entity when there is no entity for the file.
     $file = empty($file) ? Imce::createFileEntity($old_uri) : $file;
-    $move = file_move($file, $new_uri, FileSystemInterface::EXISTS_ERROR);
+    $move = \Drupal::service('file.repository')->move($file, $new_uri, FileSystemInterface::EXISTS_ERROR);
     $move->setFilename($new_name);
     $move->save();

@@ @@
   /**
    * Get name and filtered special symbols.
    *
-   * @param \Drupal\imce\ImceFM $fm
+   * @param ImceFM $fm
    *   Imce File Manager instance.
    *
    * @return int|mixed|string|string[]|null
    ----------- end diff -----------

Applied rules:
 * FileMoveRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

