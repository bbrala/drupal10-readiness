diff --git a/field_ui_list_image_styles_size.info.yml b/field_ui_list_image_styles_size.info.yml
index 17c66fd..304e171 100644
--- a/field_ui_list_image_styles_size.info.yml
+++ b/field_ui_list_image_styles_size.info.yml
@@ -2,7 +2,7 @@ name: Field UI List Image Styles
 description: Lists the applied image styles in the UI.
 type: module
 package: Stigas
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependences:
   - drupal:field_ui
   - drupal:image
diff --git a/field_ui_list_image_styles_size.module b/field_ui_list_image_styles_size.module
index 0f278f3..b978670 100644
--- a/field_ui_list_image_styles_size.module
+++ b/field_ui_list_image_styles_size.module
@@ -1,5 +1,10 @@
 <?php
 
+use Drupal\Core\Field\WidgetBase;
+use Drupal\Core\Field\FieldItemListInterface;
+use Drupal\field_ui_list_image_styles_size\Service\ImageSizeServiceInterface;
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\field_ui\Form\FieldConfigEditForm;
 /**
  * @file
  * Field_ui_list_image_styles_size module file.
@@ -32,7 +37,7 @@ function field_ui_list_image_styles_size_field_widget_form_alter(&$element, Form
   $show_viewmodes_list_below_field = $config->get('show_viewmodes_list_below_field');
 
   /**
-   * @var \Drupal\Core\Field\WidgetBase $widget
+   * @var WidgetBase $widget
    */
   $widget = $context['widget'];
   $plugin_definition = $widget->getPluginDefinition();
@@ -43,7 +48,7 @@ function field_ui_list_image_styles_size_field_widget_form_alter(&$element, Form
   }
 
   /**
-   * @var \Drupal\Core\Field\FieldItemListInterface $items
+   * @var FieldItemListInterface $items
    */
   $items = $context['items'];
 
@@ -56,7 +61,7 @@ function field_ui_list_image_styles_size_field_widget_form_alter(&$element, Form
   $entity = $entity_adapter->getEntity();
 
   /**
-   * @var \Drupal\field_ui_list_image_styles_size\Service\ImageSizeServiceInterface $image_size_service
+   * @var ImageSizeServiceInterface $image_size_service
    */
   $image_size_service = Drupal::service('field_ui_list_image_styles_size.imagesize');
 
@@ -100,7 +105,7 @@ function field_ui_list_image_styles_size_field_widget_form_alter(&$element, Form
   }
 
   /**
-   * @var \Drupal\field\Entity\FieldConfig $field_config
+   * @var FieldConfig $field_config
    */
   $field_config = $items->getFieldDefinition();
 
@@ -129,7 +134,7 @@ function field_ui_list_image_styles_size_field_widget_form_alter(&$element, Form
  */
 function _field_ui_list_image_styles_size_get_view_mode_label(string $entity_type_id, string $bundle, string $view_mode): string {
   /**
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @var EntityDisplayRepositoryInterface $entity_display_repository
    */
   $entity_display_repository = Drupal::service('entity_display.repository');
   $view_mode_options = $entity_display_repository->getViewModeOptionsByBundle($entity_type_id, $bundle);
@@ -145,16 +150,16 @@ function _field_ui_list_image_styles_size_get_view_mode_label(string $entity_typ
  */
 function field_ui_list_image_styles_size_form_field_config_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   /**
-   * @var \Drupal\field_ui\Form\FieldConfigEditForm $form_object
+   * @var FieldConfigEditForm $form_object
    */
   $form_object = $form_state->getFormObject();
   /**
-   * @var \Drupal\field\Entity\FieldConfig $field_config
+   * @var FieldConfig $field_config
    */
   $field_config = $form_object->getEntity();
 
   /**
-   * @var \Drupal\field_ui_list_image_styles_size\Service\ImageSizeServiceInterface $image_size_service
+   * @var ImageSizeServiceInterface $image_size_service
    */
   $image_size_service = Drupal::service('field_ui_list_image_styles_size.imagesize');
 
@@ -197,11 +202,11 @@ function field_ui_list_image_styles_size_form_field_config_edit_form_alter(&$for
  *
  * @param string $entity_Type
  *   The entity type.
- * @param \Drupal\field\Entity\FieldConfig $field_config
+ * @param FieldConfig $field_config
  *   Field config.
  * @param array $form
  *   The form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function field_ui_list_image_styles_size_form_field_config_edit_form_alter_entity_builder(string $entity_Type, FieldConfig $field_config, array $form, FormStateInterface $form_state): void {
diff --git a/src/EntityViewDisplayAppliedImageSize.php b/src/EntityViewDisplayAppliedImageSize.php
index 4e6df3b..074cde0 100644
--- a/src/EntityViewDisplayAppliedImageSize.php
+++ b/src/EntityViewDisplayAppliedImageSize.php
@@ -15,14 +15,14 @@ class EntityViewDisplayAppliedImageSize {
   /**
    * The entity view display this applies to.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   public $entityViewDisplay;
 
   /**
    * The image style applied.
    *
-   * @var \Drupal\image\ImageStyleInterface|null
+   * @var ImageStyleInterface|null
    */
   public $imageStyle;
 
@@ -43,9 +43,9 @@ class EntityViewDisplayAppliedImageSize {
   /**
    * EntityViewDisplayAppliedImageSize constructor.
    *
-   * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $entityViewDisplay
+   * @param EntityViewDisplayInterface $entityViewDisplay
    *   The entity view display this applies to.
-   * @param \Drupal\image\ImageStyleInterface|null $imageStyle
+   * @param ImageStyleInterface|null $imageStyle
    *   The image style applied.
    * @param int|null $width
    *   The resulting width.
diff --git a/src/Service/ImageSizeService.php b/src/Service/ImageSizeService.php
index 7ad3641..80100f3 100644
--- a/src/Service/ImageSizeService.php
+++ b/src/Service/ImageSizeService.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\field_ui_list_image_styles_size\Service;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\field_ui_list_image_styles_size\EntityViewDisplayAppliedImageSize;
@@ -21,21 +24,21 @@ class ImageSizeService implements ImageSizeServiceInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Image styles storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;
 
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
@@ -56,13 +59,13 @@ class ImageSizeService implements ImageSizeServiceInterface {
   /**
    * ImageSizeService constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entityDisplayRepository
+   * @param EntityDisplayRepositoryInterface $entityDisplayRepository
    *   The entity display repository.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, EntityDisplayRepositoryInterface $entityDisplayRepository) {
     $this->entityTypeManager = $entityTypeManager;
@@ -97,7 +100,7 @@ class ImageSizeService implements ImageSizeServiceInterface {
       }
 
       /**
-       * @var \Drupal\image\ImageStyleInterface|null $image_style
+       * @var ImageStyleInterface|null $image_style
        */
       $image_style = $this->imageStyleStorage->load($component['settings']['image_style']);
 
@@ -117,7 +120,7 @@ class ImageSizeService implements ImageSizeServiceInterface {
   /**
    * Determine the image size of an image processed by the given image style.
    *
-   * @param \Drupal\image\ImageStyleInterface $imageStyle
+   * @param ImageStyleInterface $imageStyle
    *   The image style.
    *
    * @return int[]|null[]
diff --git a/src/Service/ImageSizeServiceInterface.php b/src/Service/ImageSizeServiceInterface.php
index 4121c78..63d7f29 100644
--- a/src/Service/ImageSizeServiceInterface.php
+++ b/src/Service/ImageSizeServiceInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\field_ui_list_image_styles_size\Service;
 
+use Drupal\image\ImageStyleInterface;
+use Drupal\field_ui_list_image_styles_size\EntityViewDisplayAppliedImageSize;
 /**
  * Interface ImageSizeServiceInterface.
  *
@@ -21,7 +23,7 @@ interface ImageSizeServiceInterface {
    * @param string $fieldName
    *   The field name.
    *
-   * @return \Drupal\image\ImageStyleInterface[]|null[]
+   * @return ImageStyleInterface[]|null[]
    *   An array of applied image styles by view mode.
    */
   public function getAppliedImageStyles(string $entityTypeId, string $bundle, string $fieldName): array;
@@ -36,7 +38,7 @@ interface ImageSizeServiceInterface {
    * @param string $fieldName
    *   The field.
    *
-   * @return \Drupal\field_ui_list_image_styles_size\EntityViewDisplayAppliedImageSize[]
+   * @return EntityViewDisplayAppliedImageSize[]
    *   The applied image sizes per entity view display.
    */
   public function getEntityViewDisplaysAppliedImageSize(string $entityTypeId, string $bundle, string $fieldName): array;
diff --git a/tests/src/Functional/FieldWidgetFormAlterTest.php b/tests/src/Functional/FieldWidgetFormAlterTest.php
index 9cfcf55..720d341 100644
--- a/tests/src/Functional/FieldWidgetFormAlterTest.php
+++ b/tests/src/Functional/FieldWidgetFormAlterTest.php
@@ -27,7 +27,7 @@ class FieldWidgetFormAlterTest extends TestBase {
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');
 
-    $this->assertEqual('field_image - 123x456', $field_image_label->getText());
+    $this->assertEquals('field_image - 123x456', $field_image_label->getText());
 
     $session->elementExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
@@ -63,7 +63,7 @@ class FieldWidgetFormAlterTest extends TestBase {
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');
 
-    $this->assertEqual('field_image', $field_image_label->getText());
+    $this->assertEquals('field_image', $field_image_label->getText());
 
     $session->elementNotExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
@@ -86,7 +86,7 @@ class FieldWidgetFormAlterTest extends TestBase {
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');
 
-    $this->assertEqual('field_image - 1000x?', $field_image_label->getText());
+    $this->assertEquals('field_image - 1000x?', $field_image_label->getText());
 
     $session->elementExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
@@ -109,7 +109,7 @@ class FieldWidgetFormAlterTest extends TestBase {
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');
 
-    $this->assertEqual('field_image', $field_image_label->getText());
+    $this->assertEquals('field_image', $field_image_label->getText());
 
     $session->elementExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
diff --git a/tests/src/Functional/Service/ImageSizeServiceTest.php b/tests/src/Functional/Service/ImageSizeServiceTest.php
index 7893a74..0bf5288 100644
--- a/tests/src/Functional/Service/ImageSizeServiceTest.php
+++ b/tests/src/Functional/Service/ImageSizeServiceTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\field_ui_list_image_styles_size\Functional\Service;
 
+use Drupal\field_ui_list_image_styles_size\Service\ImageSizeService;
 use Drupal\Tests\field_ui_list_image_styles_size\Functional\TestBase;
 
 /**
@@ -17,14 +18,14 @@ class ImageSizeServiceTest extends TestBase {
   /**
    * Image size service.
    *
-   * @var \Drupal\field_ui_list_image_styles_size\Service\ImageSizeService
+   * @var ImageSizeService
    */
   protected $imageSizeService;
 
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->imageSizeService = $this->container->get('field_ui_list_image_styles_size.imagesize');
   }
@@ -39,8 +40,8 @@ class ImageSizeServiceTest extends TestBase {
     $appliedImageStyles = $this->imageSizeService->getAppliedImageStyles('node', 'test', 'field_image');
 
     $this->assertCount(2, $appliedImageStyles);
-    $this->assertEqual($this->resizeImageStyle->id(), $appliedImageStyles['default']->id());
-    $this->assertEqual($this->resizeWithoutHeightImageStyle->id(), $appliedImageStyles['alternative']->id());
+    $this->assertEquals($this->resizeImageStyle->id(), $appliedImageStyles['default']->id());
+    $this->assertEquals($this->resizeWithoutHeightImageStyle->id(), $appliedImageStyles['alternative']->id());
   }
 
   /**
@@ -54,16 +55,16 @@ class ImageSizeServiceTest extends TestBase {
     $this->assertCount(2, $entity_view_displays_applied_image_size);
 
     $this->assertArrayHasKey('default', $entity_view_displays_applied_image_size);
-    $this->assertEqual($this->resizeImageStyle->id(), $entity_view_displays_applied_image_size['default']->imageStyle->id());
-    $this->assertEqual(123, $entity_view_displays_applied_image_size['default']->width);
-    $this->assertEqual(456, $entity_view_displays_applied_image_size['default']->height);
-    $this->assertEqual('123x456', $entity_view_displays_applied_image_size['default']->getDimensionsAsString());
+    $this->assertEquals($this->resizeImageStyle->id(), $entity_view_displays_applied_image_size['default']->imageStyle->id());
+    $this->assertEquals(123, $entity_view_displays_applied_image_size['default']->width);
+    $this->assertEquals(456, $entity_view_displays_applied_image_size['default']->height);
+    $this->assertEquals('123x456', $entity_view_displays_applied_image_size['default']->getDimensionsAsString());
 
     $this->assertArrayHasKey('alternative', $entity_view_displays_applied_image_size);
-    $this->assertEqual($this->resizeWithoutHeightImageStyle->id(), $entity_view_displays_applied_image_size['alternative']->imageStyle->id());
-    $this->assertEqual(1000, $entity_view_displays_applied_image_size['alternative']->width);
+    $this->assertEquals($this->resizeWithoutHeightImageStyle->id(), $entity_view_displays_applied_image_size['alternative']->imageStyle->id());
+    $this->assertEquals(1000, $entity_view_displays_applied_image_size['alternative']->width);
     $this->assertNull($entity_view_displays_applied_image_size['alternative']->height);
-    $this->assertEqual('1000x?', $entity_view_displays_applied_image_size['alternative']->getDimensionsAsString());
+    $this->assertEquals('1000x?', $entity_view_displays_applied_image_size['alternative']->getDimensionsAsString());
   }
 
 }
diff --git a/tests/src/Functional/TestBase.php b/tests/src/Functional/TestBase.php
index 2a8f28d..d83d177 100644
--- a/tests/src/Functional/TestBase.php
+++ b/tests/src/Functional/TestBase.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\Tests\field_ui_list_image_styles_size\Functional;
 
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
+use Drupal\Core\Config\Config;
+use Drupal\node\NodeInterface;
+use Drupal\image\ImageStyleInterface;
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\Core\Entity\Entity\EntityViewMode;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
@@ -44,84 +50,84 @@ abstract class TestBase extends BrowserTestBase {
   /**
    * Entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * No image style view display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $noImageStyleViewDisplay;
 
   /**
    * Default view display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $defaultViewDisplay;
 
   /**
    * Alternative view display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $alternativeViewDisplay;
 
   /**
    * Form display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface
+   * @var EntityFormDisplayInterface
    */
   protected $formDisplay;
 
   /**
    * Module settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $fieldUiListImageStylesSettingsConfig;
 
   /**
    * Test node.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
   /**
    * Resize image style.
    *
-   * @var \Drupal\image\ImageStyleInterface
+   * @var ImageStyleInterface
    */
   protected $resizeImageStyle;
 
   /**
    * Resize (width) image style.
    *
-   * @var \Drupal\image\ImageStyleInterface
+   * @var ImageStyleInterface
    */
   protected $resizeWithoutHeightImageStyle;
 
   /**
    * A user with permission to bypass content access checks.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * Field_image field config.
    *
-   * @var \Drupal\field\Entity\FieldConfig
+   * @var FieldConfig
    */
   protected $fieldImageConfig;
 
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->entityDisplayRepository = $this->container->get('entity_display.repository');
@@ -261,7 +267,7 @@ abstract class TestBase extends BrowserTestBase {
     ]);
     $this->formDisplay->save();
 
-    $testimage = file_save_data(file_get_contents(__DIR__ . '/test.jpg'), 'public://test.jpg');
+    $testimage = \Drupal::service('file.repository')->writeData(file_get_contents(__DIR__ . '/test.jpg'), 'public://test.jpg');
 
     $this->node = $this->drupalCreateNode([
       'type' => 'test',
