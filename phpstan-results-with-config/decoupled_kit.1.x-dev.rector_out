modules/contrib/decoupled_kit/decoupled_kit.module
modules/contrib/decoupled_kit/modules/decoupled_kit_block/decoupled_kit_block.module
modules/contrib/decoupled_kit/modules/decoupled_kit_block/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_block/src/Form/ConfigForm.php
modules/contrib/decoupled_kit/modules/decoupled_kit_block/src/Routing/Routes.php
modules/contrib/decoupled_kit/modules/decoupled_kit_breadcrumb/decoupled_kit_breadcrumb.module
modules/contrib/decoupled_kit/modules/decoupled_kit_breadcrumb/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_breadcrumb/src/Form/ConfigForm.php
modules/contrib/decoupled_kit/modules/decoupled_kit_breadcrumb/src/Routing/Routes.php
modules/contrib/decoupled_kit/modules/decoupled_kit_example/decoupled_kit_example.module
modules/contrib/decoupled_kit/modules/decoupled_kit_example/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_example/src/Routing/Routes.php
modules/contrib/decoupled_kit/modules/decoupled_kit_menu/decoupled_kit_menu.module
modules/contrib/decoupled_kit/modules/decoupled_kit_menu/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_menu/src/Routing/Routes.php
modules/contrib/decoupled_kit/modules/decoupled_kit_metatag/decoupled_kit_metatag.module
modules/contrib/decoupled_kit/modules/decoupled_kit_metatag/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_metatag/src/Routing/Routes.php
modules/contrib/decoupled_kit/modules/decoupled_kit_object/decoupled_kit_object.module
modules/contrib/decoupled_kit/modules/decoupled_kit_object/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_object/src/Routing/Routes.php
modules/contrib/decoupled_kit/modules/decoupled_kit_redirect/decoupled_kit_redirect.module
modules/contrib/decoupled_kit/modules/decoupled_kit_redirect/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_redirect/src/Form/ConfigForm.php
modules/contrib/decoupled_kit/modules/decoupled_kit_redirect/src/Routing/Routes.php
modules/contrib/decoupled_kit/modules/decoupled_kit_router/decoupled_kit_router.module
modules/contrib/decoupled_kit/modules/decoupled_kit_router/src/DecoupledKitRouterInterface.php
modules/contrib/decoupled_kit/modules/decoupled_kit_router/src/DecoupledKitRouterListBuilder.php
modules/contrib/decoupled_kit/modules/decoupled_kit_router/src/Entity/DecoupledKitRouter.php
modules/contrib/decoupled_kit/modules/decoupled_kit_router/src/Form/DecoupledKitRouterForm.php
modules/contrib/decoupled_kit/modules/decoupled_kit_sitemap/decoupled_kit_sitemap.module
modules/contrib/decoupled_kit/modules/decoupled_kit_sitemap/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_sitemap/src/Form/ConfigForm.php
modules/contrib/decoupled_kit/modules/decoupled_kit_sitemap/src/Routing/Routes.php
modules/contrib/decoupled_kit/modules/decoupled_kit_taxonomy/decoupled_kit_taxonomy.module
modules/contrib/decoupled_kit/modules/decoupled_kit_taxonomy/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_taxonomy/src/Form/ConfigForm.php
modules/contrib/decoupled_kit/modules/decoupled_kit_taxonomy/src/Routing/Routes.php
modules/contrib/decoupled_kit/modules/decoupled_kit_webform/decoupled_kit_webform.module
modules/contrib/decoupled_kit/modules/decoupled_kit_webform/src/Controller/DefaultController.php
modules/contrib/decoupled_kit/modules/decoupled_kit_webform/src/Routing/Routes.php
modules/contrib/decoupled_kit/src/Controller/DecoupledHelperController.php
modules/contrib/decoupled_kit/src/Form/ConfigForm.php
modules/contrib/decoupled_kit/src/Form/DashboardForm.php

15 files with changes
=====================

1) modules/contrib/decoupled_kit/src/Form/DashboardForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit\Form;

+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * Drupal\Core\Extension\ModuleHandlerInterface definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Drupal\Core\DependencyInjection\ContainerInjectionInterface definition.
    *
-   * @var \Drupal\Core\DependencyInjection\ContainerInjectionInterface
+   * @var ContainerInjectionInterface
    */
   protected $decoupledKit;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/decoupled_kit/src/Controller/DecoupledHelperController.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Check request path.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   User request.
    * @param bool $needCanonicalUrl
    *   Need call canonicalPath().
@@ @@
   /**
    * Get mode.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   User request.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   Config object.
    * @param array $modeList
    *   Mode list.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/decoupled_kit/modules/decoupled_kit_webform/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_webform\Controller;

+use Drupal\path_alias\AliasManagerInterface;
+use Drupal\Core\Path\PathValidatorInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\HttpFoundation\JsonResponse;
 use Drupal\webform\WebformInterface;
@@ @@
   /**
    * Path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $pathAliasManager;

@@ @@
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;

@@ @@
    * @param int $id
    *   Webform submission id.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return webform submission settings.
    */
   public function index($id) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/decoupled_kit/modules/decoupled_kit_taxonomy/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_taxonomy\Controller;

+use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\HttpFoundation\JsonResponse;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
@@ @@
   /**
    * Drupal\Core\DependencyInjection\ContainerInjectionInterface definition.
    *
-   * @var \Drupal\Core\DependencyInjection\ContainerInjectionInterface
+   * @var ContainerInjectionInterface
    */
   protected $decoupledKit;

@@ @@
   /**
    * Get taxonomy tree.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    * @param string $id
    *   Taxonomy id.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return taxonomy data.
    */
   public function index(Request $request, $id) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/decoupled_kit/modules/decoupled_kit_sitemap/src/Form/ConfigForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_sitemap\Form;

+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * Drupal\Core\Extension\ModuleHandlerInterface definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/decoupled_kit/modules/decoupled_kit_sitemap/src/Controller/DefaultController.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Get sitemap data.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return sitemap data.
    */
   public function index() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/decoupled_kit/modules/decoupled_kit_router/src/Form/DecoupledKitRouterForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_router\Form;

+use Drupal\decoupled_kit_router\DecoupledKitRouterInterface;
+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\ContentEntityType;
@@ @@
 /**
  * Decoupled_kit_router form.
  *
- * @property \Drupal\decoupled_kit_router\DecoupledKitRouterInterface $entity
+ * @property DecoupledKitRouterInterface $entity
  */
 class DecoupledKitRouterForm extends EntityForm {

@@ @@
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * Get and convert form values.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state values.
    *
    * @return array
@@ @@
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state values.
    *
-   * @return Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Update bundles list.
    */
   public function updateBundles(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/decoupled_kit/modules/decoupled_kit_router/src/DecoupledKitRouterListBuilder.php:26

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\decoupled_kit_router\DecoupledKitRouterInterface $entity */
+    /** @var DecoupledKitRouterInterface $entity */
     $row['label'] = $entity->label();
     $row['id'] = $entity->id();
     $row['entity_type'] = $entity->get('entity_type');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/decoupled_kit/modules/decoupled_kit_redirect/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_redirect\Controller;

+use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ @@
   /**
    * Drupal\Core\DependencyInjection\ContainerInjectionInterface definition.
    *
-   * @var \Drupal\Core\DependencyInjection\ContainerInjectionInterface
+   * @var ContainerInjectionInterface
    */
   protected $decoupledKit;

@@ @@
   /**
    * Get redirect data.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return redirect data.
    */
   public function index(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/decoupled_kit/modules/decoupled_kit_object/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_object\Controller;

+use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
+use Drupal\path_alias\AliasManagerInterface;
+use Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ @@
   /**
    * Drupal\Core\DependencyInjection\ContainerInjectionInterface definition.
    *
-   * @var \Drupal\Core\DependencyInjection\ContainerInjectionInterface
+   * @var ContainerInjectionInterface
    */
   protected $decoupledKit;

@@ @@
   /**
    * Path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $pathAliasManager;

@@ @@
   /**
    * Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface definition.
    *
-   * @var \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface
+   * @var ResourceTypeRepositoryInterface
    */
   protected $resourceTypeRepository = NULL;

@@ @@
   /**
    * Get entity object data for current page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return entity object data.
    */
   public function index(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/decoupled_kit/modules/decoupled_kit_metatag/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_metatag\Controller;

+use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
+use Drupal\path_alias\AliasManagerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ @@
   /**
    * Drupal\Core\DependencyInjection\ContainerInjectionInterface definition.
    *
-   * @var \Drupal\Core\DependencyInjection\ContainerInjectionInterface
+   * @var ContainerInjectionInterface
    */
   protected $decoupledKit;

@@ @@
   /**
    * Path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $pathAliasManager;

@@ @@
   /**
    * Get metatag data for current page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return metatag data.
    */
   public function index(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/decoupled_kit/modules/decoupled_kit_menu/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_menu\Controller;

+use Drupal\Core\Menu\MenuLinkTreeInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ @@
   /**
    * Drupal\Core\Menu\MenuLinkTreeInterface definition.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;

@@ @@
    * @param string $id
    *   Menu id.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return menu data.
    */
   public function index($id) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/decoupled_kit/modules/decoupled_kit_example/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_example\Controller;

+use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
+use Drupal\path_alias\AliasManagerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ @@
   /**
    * Drupal\Core\DependencyInjection\ContainerInjectionInterface definition.
    *
-   * @var \Drupal\Core\DependencyInjection\ContainerInjectionInterface
+   * @var ContainerInjectionInterface
    */
   protected $decoupledKit;

@@ @@
   /**
    * Path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $pathAliasManager;

@@ @@
   /**
    * Get metatag data for current page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return entity id data.
    */
   public function index(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/decoupled_kit/modules/decoupled_kit_breadcrumb/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_breadcrumb\Controller;

+use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
+use Drupal\path_alias\AliasManagerInterface;
+use Drupal\Core\Path\PathValidatorInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ @@
   /**
    * Drupal\Core\DependencyInjection\ContainerInjectionInterface definition.
    *
-   * @var \Drupal\Core\DependencyInjection\ContainerInjectionInterface
+   * @var ContainerInjectionInterface
    */
   protected $decoupledKit;

@@ @@
   /**
    * Path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $pathAliasManager;

@@ @@
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;

@@ @@
   /**
    * Get breadcrumb data for current page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return breadcrumbs.
    */
   public function index(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/decoupled_kit/modules/decoupled_kit_block/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\decoupled_kit_block\Controller;

+use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
+use Drupal\Core\Block\BlockManagerInterface;
+use Drupal\Core\Theme\ThemeManagerInterface;
+use Drupal\Core\Path\PathMatcherInterface;
+use Drupal\Core\Render\RendererInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * Drupal\Core\DependencyInjection\ContainerInjectionInterface definition.
    *
-   * @var \Drupal\Core\DependencyInjection\ContainerInjectionInterface
+   * @var ContainerInjectionInterface
    */
   protected $decoupledKit;

@@ @@
   /**
    * Drupal\Core\Block\BlockManagerInterface definition.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $pluginManagerBlock;

@@ @@
   /**
    * Drupal\Core\Theme\ThemeManagerInterface definition.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * Drupal\Core\Path\PathMatcherInterface definition.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;

@@ @@
   /**
    * Drupal\Core\Render\RendererInterface definition.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * Get blocks data for current page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Return block data.
    */
   public function index(Request $request) {
@@ @@
     $pluginBlock = $this->pluginManagerBlock->createInstance($id, $config);
     if ($pluginBlock) {
       $builtBlock = $pluginBlock->build();
-      $render = render($builtBlock);
+      $render = \Drupal::service('renderer')->render($builtBlock);
       return $render;
     }

@@ @@
    * @param string $uuid
    *   Content block UUID.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   Content block entity.
    */
   private function getContentBlock($uuid) {
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 15 files have been changed by Rector                                      

