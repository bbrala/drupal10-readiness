diff --git a/dbee.install b/dbee.install
index a60ed00..c320dc2 100644
--- a/dbee.install
+++ b/dbee.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Database\Connection;
 /**
  * @file
  * Install, update and uninstall functions for the dbee module.
@@ -31,7 +32,7 @@ function dbee_install() {
     $user_table = 'users_field_data';
     $mail_index_name = 'user_field__mail';
     // Drop mail index.
-    /** @var \Drupal\Core\Database\Connection $connection */
+    /** @var Connection $connection */
     $connection = \Drupal::service('database');
     if ($connection->schema()->indexExists($user_table, $mail_index_name)) {
       $connection->schema()->dropIndex($user_table, $mail_index_name);
diff --git a/dbee.module b/dbee.module
index 1556b47..3ddac40 100644
--- a/dbee.module
+++ b/dbee.module
@@ -887,7 +887,7 @@ function _dbee_where_mailfields2uid(array $keys, $field = 'mail', $operator = 'L
  *
  * @param bool $reset
  *   TRUE for reseting the cache. Default is FALSE.
- * @param \Drupal\user\Entity\User $account
+ * @param User $account
  *   The user entity.
  *
  * @return array
diff --git a/dbee.users.inc b/dbee.users.inc
index 58d959e..376fa56 100644
--- a/dbee.users.inc
+++ b/dbee.users.inc
@@ -63,7 +63,7 @@ function dbee_update_crypt_all($action, $dbee_context = FALSE, $force_batch = FA
         ],
       ],
       'finished' => 'dbee_update_crypt_users_all_batch_finished',
-      'file' => drupal_get_path('module', 'dbee') . '/dbee.users.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('dbee') . '/dbee.users.inc',
     ];
     batch_set($batch);
 
diff --git a/src/Authentication/Provider/DbeeCookie.php b/src/Authentication/Provider/DbeeCookie.php
index c930673..cdf2dd0 100644
--- a/src/Authentication/Provider/DbeeCookie.php
+++ b/src/Authentication/Provider/DbeeCookie.php
@@ -19,10 +19,10 @@ class DbeeCookie extends Cookie implements AuthenticationProviderInterface {
    * Override the cookie provider Drupal\user\Authentication\Provider\Cookie,
    * simply decrypting email and init for the current user.
    *
-   * @param \Symfony\Component\HttpFoundation\Session\SessionInterface $session
+   * @param SessionInterface $session
    *   The session.
    *
-   * @return \Drupal\Core\Session\AccountInterface|null
+   * @return AccountInterface|null
    *   The UserSession object for the current user, or NULL if this is an
    *   anonymous session.
    */
