modules/contrib/geoip/geoip.install
modules/contrib/geoip/src/Annotation/GeoLocator.php
modules/contrib/geoip/src/Form/GeolocationSettings.php
modules/contrib/geoip/src/GeoLocation.php
modules/contrib/geoip/src/GeoLocatorManager.php
modules/contrib/geoip/src/Plugin/GeoLocator/Cdn.php
modules/contrib/geoip/src/Plugin/GeoLocator/GeoLocatorBase.php
modules/contrib/geoip/src/Plugin/GeoLocator/GeoLocatorInterface.php
modules/contrib/geoip/src/Plugin/GeoLocator/Local.php
modules/contrib/geoip/tests/src/Functional/ConfigureGeoIpTest.php
modules/contrib/geoip/tests/src/Kernel/GeoLocatorPluginTest.php
modules/contrib/geoip/tests/src/Kernel/RequirementsTest.php
modules/contrib/geoip/tests/src/Unit/CdnGeoLocatorTest.php
modules/contrib/geoip/tests/src/Unit/GeoLocationTest.php

10 files with changes
=====================

1) modules/contrib/geoip/tests/src/Unit/GeoLocationTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\geoip\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\geoip\GeoLocation;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class GeoLocationTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Test getGeoLocatorId.
    *
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/geoip/tests/src/Unit/CdnGeoLocatorTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\geoip\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\geoip\Plugin\GeoLocator\Cdn;
@@ @@
  */
 class CdnGeoLocatorTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Test the geolocate method for Cdn plugin.
    *
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/geoip/tests/src/Kernel/RequirementsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\geoip\Kernel;

+use Drupal\Core\File\FileSystemInterface;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    *   A file system instance
    */
   protected $fileSystem;
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->fileSystem = $this->container->get('file_system');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/geoip/tests/src/Kernel/GeoLocatorPluginTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\geoip\Kernel;

+use Drupal\Core\File\FileSystemInterface;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    *   A file system instance
    */
   protected $fileSystem;
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->fileSystem = $this->container->get('file_system');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/geoip/src/Plugin/GeoLocator/Local.php:63

    ---------- begin diff ----------
@@ @@
   /**
    * Get a dataset reader.
    *
-   * @return \GeoIp2\Database\Reader|null
+   * @return Reader|null
    *   Reader that can parse Mindmax datasets.
    */
   protected function getReader() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/geoip/src/Plugin/GeoLocator/GeoLocatorBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\geoip\Plugin\GeoLocator;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Plugin\PluginBase;
@@ @@
   /**
    * The GeoIP module configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $geoIpConfig;

@@ @@
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The log channel.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/geoip/src/GeoLocatorManager.php:31

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
    */
   public function __construct(\Traversable $namespaces, ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/geoip/src/GeoLocation.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\geoip;

+use Drupal\geoip\Plugin\GeoLocator\GeoLocatorInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ @@
   /**
    * Plugin manager for GeoLocator plugins.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $geoLocatorManager;

@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new GeoLocation object.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $geolocators_manager
+   * @param PluginManagerInterface $geolocators_manager
    *   The geolocation locator plugin manager service to use.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
    */
   public function __construct(PluginManagerInterface $geolocators_manager, ConfigFactoryInterface $config_factory, CacheBackendInterface $cache_backend) {
@@ @@
   /**
    * Gets an instance of the default geolocator plugin.
    *
-   * @return \Drupal\geoip\Plugin\GeoLocator\GeoLocatorInterface
+   * @return GeoLocatorInterface
    *   Instance of the default geolocator plugin.
    */
   public function getGeoLocator() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/geoip/src/Annotation/GeoLocator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\geoip\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The human-readable name.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * A description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


10) modules/contrib/geoip/geoip.install:0

    ---------- begin diff ----------
@@ @@
 <?php
+
+use Drupal\Core\Plugin\DefaultPluginManager;
+use Drupal\geoip\Plugin\GeoLocator\Local;
 /**
  * @file
  * Installation and update functions.
  */
-
 /**
  * Implements hook_requirements().
  */
@@ @@
   }

   if ($phase === 'runtime') {
-    /** @var \Drupal\Core\Plugin\DefaultPluginManager $geolocator_manager */
+    /** @var DefaultPluginManager $geolocator_manager */
     $geolocator_manager = \Drupal::service('plugin.manager.geolocator');

-    /** @var \Drupal\geoip\Plugin\GeoLocator\Local $local_geolocator */
+    /** @var Local $local_geolocator */
     $local_geolocator = $geolocator_manager->createInstance('local');

     $city_uri = $local_geolocator->getScheme() . '://GeoLite2-City.mmdb';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 10 files have been changed by Rector                                      

