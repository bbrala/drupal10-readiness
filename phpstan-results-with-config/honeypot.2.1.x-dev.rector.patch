diff --git a/honeypot.post_update.php b/honeypot.post_update.php
index 4e559aa..29b8785 100644
--- a/honeypot.post_update.php
+++ b/honeypot.post_update.php
@@ -23,7 +23,7 @@ function honeypot_post_update_joyride_location_to_position(array &$sandbox = NUL
 /**
  * Updates 'honeypot' tour to correct use of the deprecated location property.
  *
- * @param \Drupal\tour\Entity\Tour $tour
+ * @param Tour $tour
  *   The tour to update.
  *
  * @return bool
diff --git a/src/Form/HoneypotSettingsForm.php b/src/Form/HoneypotSettingsForm.php
index 040f127..e6c77f7 100644
--- a/src/Form/HoneypotSettingsForm.php
+++ b/src/Form/HoneypotSettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\honeypot\Form;
 
+use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ -20,43 +21,43 @@ class HoneypotSettingsForm extends ConfigFormBase {
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * A cache backend interface.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * Constructs a settings controller.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend interface.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, CacheBackendInterface $cache_backend) {
@@ -206,7 +207,7 @@ class HoneypotSettingsForm extends ConfigFormBase {
 
     // Node types for node forms.
     if ($this->moduleHandler->moduleExists('node')) {
-      /** @var \Drupal\Core\Config\Entity\ConfigEntityInterface[] $types */
+      /** @var ConfigEntityInterface[] $types */
       $types = $this->entityTypeManager->getStorage('node_type')->loadMultiple();
       if (!empty($types)) {
         // Node forms.
diff --git a/src/HoneypotService.php b/src/HoneypotService.php
index 1eeb6df..0b5af2a 100644
--- a/src/HoneypotService.php
+++ b/src/HoneypotService.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\honeypot;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\KeyValueStore\KeyValueStoreExpirableInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ -28,97 +30,97 @@ class HoneypotService implements HoneypotServiceInterface {
   /**
    * Drupal account object.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * The module_handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Drupal configuration object factory service.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Drupal key value factory store factory.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreExpirableInterface
+   * @var KeyValueStoreExpirableInterface
    */
   protected $keyValue;
 
   /**
    * Killswitch policy object.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;
 
   /**
    * The database connection to use.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The Honeypot logger channel factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
    * The datetime.time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $timeService;
 
   /**
    * A cache backend interface.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;
 
   /**
    * The request stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * HoneypotService constructor.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   Drupal account object.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module_handler service.
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   Drupal configuration object factory service.
-   * @param \Drupal\Core\KeyValueStore\KeyValueExpirableFactory $key_value
+   * @param KeyValueExpirableFactory $key_value
    *   Drupal key value factory store factory.
-   * @param \Drupal\Core\PageCache\ResponsePolicy\KillSwitch $kill_switch
+   * @param KillSwitch $kill_switch
    *   Killswitch policy object.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger.factory service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time_service
+   * @param TimeInterface $time_service
    *   The datetime.time service.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend interface.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack service.
    */
   public function __construct(AccountProxyInterface $account, ModuleHandlerInterface $module_handler, ConfigFactory $config_factory, KeyValueExpirableFactory $key_value, KillSwitch $kill_switch, Connection $connection, LoggerChannelFactoryInterface $logger_factory, TimeInterface $time_service, TranslationInterface $string_translation, CacheBackendInterface $cache_backend, RequestStack $request_stack) {
@@ -290,7 +292,7 @@ class HoneypotService implements HoneypotServiceInterface {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   generic form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
@@ -312,7 +314,7 @@ class HoneypotService implements HoneypotServiceInterface {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   generic form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/HoneypotServiceInterface.php b/src/HoneypotServiceInterface.php
index d0bcd56..e488fec 100644
--- a/src/HoneypotServiceInterface.php
+++ b/src/HoneypotServiceInterface.php
@@ -34,7 +34,7 @@ interface HoneypotServiceInterface {
    *
    * @param array $form
    *   Drupal form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Drupal form state object.
    * @param array $options
    *   (optional) Array of options to be added to form. Currently accepts
diff --git a/tests/modules/honeypot_test/src/Controller/HoneypotTestController.php b/tests/modules/honeypot_test/src/Controller/HoneypotTestController.php
index a9d2e9f..b0b7d60 100644
--- a/tests/modules/honeypot_test/src/Controller/HoneypotTestController.php
+++ b/tests/modules/honeypot_test/src/Controller/HoneypotTestController.php
@@ -16,14 +16,14 @@ class HoneypotTestController implements ContainerInjectionInterface {
   /**
    * The form_builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * Constructs a HoneypotTestController.
    *
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder service.
    */
   public function __construct(FormBuilderInterface $form_builder) {
diff --git a/tests/src/Functional/HoneypotAdminFormTest.php b/tests/src/Functional/HoneypotAdminFormTest.php
index 6b9cc7a..328ab78 100644
--- a/tests/src/Functional/HoneypotAdminFormTest.php
+++ b/tests/src/Functional/HoneypotAdminFormTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\honeypot\Functional;
 
+use Drupal\user\UserInterface;
+use Drupal\Tests\WebAssert;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -14,7 +16,7 @@ class HoneypotAdminFormTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -45,7 +47,7 @@ class HoneypotAdminFormTest extends BrowserTestBase {
    * Test a valid element name.
    */
   public function testElementNameUpdateSuccess(): void {
-    /** @var \Drupal\Tests\WebAssert $assert */
+    /** @var WebAssert $assert */
     $assert = $this->assertSession();
 
     // Log in the admin user.
@@ -88,7 +90,7 @@ class HoneypotAdminFormTest extends BrowserTestBase {
    * Test an invalid element name (invalid character in name).
    */
   public function testElementNameUpdateInvalidCharacterFail(): void {
-    /** @var \Drupal\Tests\WebAssert $assert */
+    /** @var WebAssert $assert */
     $assert = $this->assertSession();
 
     // Log in the admin user.
diff --git a/tests/src/Functional/HoneypotFormCacheTest.php b/tests/src/Functional/HoneypotFormCacheTest.php
index 1c3ed6b..073a95b 100644
--- a/tests/src/Functional/HoneypotFormCacheTest.php
+++ b/tests/src/Functional/HoneypotFormCacheTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\honeypot\Functional;
 
+use Drupal\node\NodeInterface;
+use Drupal\Tests\WebAssert;
 use Drupal\comment\Tests\CommentTestTrait;
 use Drupal\comment\Plugin\Field\FieldType\CommentItemInterface;
 use Drupal\contact\Entity\ContactForm;
@@ -26,7 +28,7 @@ class HoneypotFormCacheTest extends BrowserTestBase {
   /**
    * Node object.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
@@ -69,7 +71,7 @@ class HoneypotFormCacheTest extends BrowserTestBase {
    * Test enabling and disabling of page cache based on time limit settings.
    */
   public function testCacheContactForm(): void {
-    /** @var \Drupal\Tests\WebAssert $assert */
+    /** @var WebAssert $assert */
     $assert = $this->assertSession();
 
     // Create a Website feedback contact form.
@@ -115,7 +117,7 @@ class HoneypotFormCacheTest extends BrowserTestBase {
    * Test enabling and disabling of page cache based on time limit settings.
    */
   public function testCacheCommentForm(): void {
-    /** @var \Drupal\Tests\WebAssert $assert */
+    /** @var WebAssert $assert */
     $assert = $this->assertSession();
 
     // Set up example node.
diff --git a/tests/src/Functional/HoneypotFormTest.php b/tests/src/Functional/HoneypotFormTest.php
index fe34839..2988e2e 100644
--- a/tests/src/Functional/HoneypotFormTest.php
+++ b/tests/src/Functional/HoneypotFormTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\honeypot\Functional;
 
+use Drupal\node\NodeInterface;
+use Drupal\Tests\WebAssert;
 use Drupal\comment\Tests\CommentTestTrait;
 use Drupal\comment\Plugin\Field\FieldType\CommentItemInterface;
 use Drupal\contact\Entity\ContactForm;
@@ -19,21 +21,21 @@ class HoneypotFormTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * Site visitor.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;
 
   /**
    * Node object.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
@@ -144,7 +146,7 @@ class HoneypotFormTest extends BrowserTestBase {
    * Test for user register too fast.
    */
   public function testProtectRegisterUserTooFast(): void {
-    /** @var \Drupal\Tests\WebAssert $assert */
+    /** @var WebAssert $assert */
     $assert = $this->assertSession();
 
     // Set the time limit to 1 second.
diff --git a/tests/src/Kernel/HoneypotLegacyTest.php b/tests/src/Kernel/HoneypotLegacyTest.php
index 753dd18..8e5ab91 100644
--- a/tests/src/Kernel/HoneypotLegacyTest.php
+++ b/tests/src/Kernel/HoneypotLegacyTest.php
@@ -38,6 +38,7 @@ class HoneypotLegacyTest extends KernelTestBase {
 
   /**
    * Tests the deprecation message for honeypot_add_form_protection().
+   * @doesNotPerformAssertions
    */
   public function testAddFormProtection(): void {
     $this->expectDeprecation("honeypot_add_form_protection() is deprecated in honeypot:2.1.0 and is removed from honeypot:3.0.0. Use the 'honeypot' service instead. For example, \Drupal::service('honeypot')->addFormProtection(\$form, \$form_state, \$options). See https://www.drupal.org/node/2949447");
@@ -56,6 +57,7 @@ class HoneypotLegacyTest extends KernelTestBase {
 
   /**
    * Tests the deprecation message for honeypot_log_failure().
+   * @doesNotPerformAssertions
    */
   public function testLogFailure(): void {
     $this->expectDeprecation("honeypot_log_failure() is deprecated in honeypot:2.1.0 and is removed from honeypot:3.0.0. Use the 'honeypot' service instead. For example, \Drupal::service('honeypot')->logFailure(\$form_id, \$type). See https://www.drupal.org/node/2949447");
