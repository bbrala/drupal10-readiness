diff --git a/image_browser.module b/image_browser.module
index dce5b2e..34db202 100644
--- a/image_browser.module
+++ b/image_browser.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Component\Utility\Html;
 /**
  * @file
  * Extends Drupal file entities to be fieldable and viewable.
@@ -31,7 +32,7 @@ function template_preprocess_image_browser(&$variables){
     if($file = File::load($fid)){
       if($file->getMimeType() == 'image/svg+xml'){
         $variables['preview'] = array(
-          '#markup' => '<img src="' . file_create_url($file->getFileUri()) .'" style="max-width: 100px"/>',
+          '#markup' => '<img src="' . \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) .'" style="max-width: 100px"/>',
         );
       }else{
         $variables['preview'] = array(
@@ -43,7 +44,7 @@ function template_preprocess_image_browser(&$variables){
     }
   }
   $variables['children'] = $element['#children'];
-  $variables['html_id'] = \Drupal\Component\Utility\Html::getUniqueId('dexp-image-browser');
+  $variables['html_id'] = Html::getUniqueId('dexp-image-browser');
 }
 
 /**
@@ -54,4 +55,4 @@ function image_browser_form_views_exposed_form_alter(&$form, &$form_state, $form
     $form['actions']['#type'] = 'container';
     $form['actions']['#id'] = 'search-actions';
   }
-}
\ No newline at end of file
+}
diff --git a/src/Controller/ImageBrowserController.php b/src/Controller/ImageBrowserController.php
index c5b9e7c..f8fe914 100644
--- a/src/Controller/ImageBrowserController.php
+++ b/src/Controller/ImageBrowserController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\image_browser\Controller;
 
+use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+use Drupal\Core\Url;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Ajax\AjaxResponse;
@@ -14,7 +16,7 @@ class ImageBrowserController extends ControllerBase {
   public function page() {
     //We only accept ajax request for that page
     if(false == \Drupal::request()->isXmlHttpRequest()){
-      throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+      throw new NotFoundHttpException;
     }
     $html_id = Html::getUniqueId('dexp-image-browser');
     return [
@@ -24,7 +26,7 @@ class ImageBrowserController extends ControllerBase {
         '#links' => [
           'upload_link' => [
             'title' => $this->t('Upload'),
-            'url' => \Drupal\Core\Url::fromRoute('image_browser.upload'),
+            'url' => Url::fromRoute('image_browser.upload'),
             'ajax' => [
               'wrapper' => $html_id,
               'method' => 'html',
@@ -32,7 +34,7 @@ class ImageBrowserController extends ControllerBase {
           ],
           'library_browser' => [
             'title' => $this->t('Library'),
-            'url' => \Drupal\Core\Url::fromRoute('image_browser.library'),
+            'url' => Url::fromRoute('image_browser.library'),
             'ajax' => [
               'wrapper' => $html_id,
               'method' => 'html',
@@ -55,7 +57,7 @@ class ImageBrowserController extends ControllerBase {
     $fid = str_replace('file:', '', $file);
     if ($fid) {
       $file = File::load($fid);
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       if($file->getMimeType() == 'image/svg+xml'){
         $preview = array(
           '#markup' => '<img src="' . $file_url .'"/>',
diff --git a/src/Form/LibraryForm.php b/src/Form/LibraryForm.php
index 7ab518c..6bec1fa 100644
--- a/src/Form/LibraryForm.php
+++ b/src/Form/LibraryForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\image_browser\Form;
 
+use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ -34,7 +35,7 @@ class LibraryForm extends FormBase {
   public function buildForm(array $form, FormStateInterface $form_state) {
     //We only accept ajax request for that page
     if(false == \Drupal::request()->isXmlHttpRequest()){
-      throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+      throw new NotFoundHttpException;
     }
     $form['library'] = array(
       views_embed_view('dexp_image_browser', 'image_browser'),
@@ -67,7 +68,7 @@ class LibraryForm extends FormBase {
     }
     if ($fid) {
       $file = File::load($fid);
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       if($file->getMimeType() == 'image/svg+xml'){
         $preview = array(
           '#markup' => '<img src="' . $file_url .'"/>',
diff --git a/src/Form/UploadForm.php b/src/Form/UploadForm.php
index 9b791e3..737f62d 100644
--- a/src/Form/UploadForm.php
+++ b/src/Form/UploadForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\image_browser\Form;
 
+use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ -34,7 +35,7 @@ class UploadForm extends FormBase {
   public function buildForm(array $form, FormStateInterface $form_state) {
     //We only accept ajax request for that page
     if(false == \Drupal::request()->isXmlHttpRequest()){
-      throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+      throw new NotFoundHttpException;
     }
     $form['image'] = array(
       '#type' => 'managed_file',
@@ -65,7 +66,7 @@ class UploadForm extends FormBase {
     $response = new AjaxResponse();
     $fid = $form_state->getValue(array('image', 0));
     if ($file = File::load($fid)) {
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       if($file->getMimeType() == 'image/svg+xml'){
         $preview = array(
           '#markup' => '<img src="' . $file_url .'" style="max-width:100px"/>',
diff --git a/src/Plugin/views/field/ImageBrowserPreview.php b/src/Plugin/views/field/ImageBrowserPreview.php
index 6275fda..720367b 100644
--- a/src/Plugin/views/field/ImageBrowserPreview.php
+++ b/src/Plugin/views/field/ImageBrowserPreview.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\image_browser\Plugin\views\field;
 
+use Drupal\file\Entity\File;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
 
@@ -21,11 +22,11 @@ class ImageBrowserPreview extends FieldPluginBase {
    * {@inheritdoc}
    */
   public function render(ResultRow $values) {
-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $file = $values->_entity;
     if($file->getMimeType() == 'image/svg+xml'){
       return $build = [
-        '#markup' => '<img src="' . file_create_url($file->getFileUri()) .'"/>',
+        '#markup' => '<img src="' . \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) .'"/>',
       ];
     }
     return $build = [
