diff --git a/organigrams.module b/organigrams.module
index 106eeb9..d4d00ff 100644
--- a/organigrams.module
+++ b/organigrams.module
@@ -95,7 +95,7 @@ function organigrams_form_alter(&$form, FormStateInterface $form_state, $form_id
  *
  * @param array $form
  *   Contains the vocabulary add form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Contains the form state of the vocabulary add form.
  */
 function organigrams_vocabulary_form_submit(array $form, FormStateInterface $form_state) {
@@ -126,7 +126,7 @@ function organigrams_vocabulary_form_submit(array $form, FormStateInterface $for
  */
 function organigrams_create_term_fields($vid) {
   // Set the config path to the field configs.
-  $config_path = drupal_get_path('module', 'organigrams') . '/config';
+  $config_path = \Drupal::service('extension.list.module')->getPath('organigrams') . '/config';
 
   // Get the sources for the config files.
   $field_storage_source = new FileStorage($config_path . '/optional');
@@ -243,7 +243,7 @@ function organigrams_tokens($type, $tokens, array $data, array $options, Bubblea
       $organigramsController = new OrganigramsController($taxonomyTermTree);
       $organigram = $organigramsController->viewOrganigram($vocabulary);
       // Put the organigram as value in this token.
-      $replacements[$original] = render($organigram);
+      $replacements[$original] = \Drupal::service('renderer')->render($organigram);
     }
   }
   return $replacements;
diff --git a/src/Controller/OrganigramsController.php b/src/Controller/OrganigramsController.php
index e8ee502..75e95c7 100644
--- a/src/Controller/OrganigramsController.php
+++ b/src/Controller/OrganigramsController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\organigrams\Controller;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\taxonomy\VocabularyInterface;
 use Drupal\Core\Access\AccessResult;
@@ -17,14 +18,14 @@ class OrganigramsController extends ControllerBase {
   /**
    * The Taxonomy Tree builder.
    *
-   * @var \Drupal\organigrams\TaxonomyTermTree
+   * @var TaxonomyTermTree
    */
   protected $taxonomyTermTree;
 
   /**
    * Constructs a OrganigramsController object.
    *
-   * @param \Drupal\organigrams\TaxonomyTermTree $taxonomyTermTree
+   * @param TaxonomyTermTree $taxonomyTermTree
    *   The Taxonomy Tree builder.
    */
   public function __construct(TaxonomyTermTree $taxonomyTermTree) {
@@ -52,7 +53,7 @@ class OrganigramsController extends ControllerBase {
   /**
    * Returns a form to add a new term to a vocabulary.
    *
-   * @param \Drupal\taxonomy\VocabularyInterface $taxonomy_vocabulary
+   * @param VocabularyInterface $taxonomy_vocabulary
    *   The vocabulary this term will be added to.
    *
    * @return array
@@ -79,7 +80,7 @@ class OrganigramsController extends ControllerBase {
   /**
    * Outputs the items of an organigram in JSON.
    *
-   * @param \Drupal\taxonomy\VocabularyInterface $taxonomy_vocabulary
+   * @param VocabularyInterface $taxonomy_vocabulary
    *   The vocabulary to export the items from.
    *
    * @return array
@@ -163,10 +164,10 @@ class OrganigramsController extends ControllerBase {
   /**
    * Checks if a vocabulary contains organigrams settings.
    *
-   * @param \Drupal\taxonomy\VocabularyInterface $taxonomy_vocabulary
+   * @param VocabularyInterface $taxonomy_vocabulary
    *   The vocabulary to perform the access check on.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function isOrganigram(VocabularyInterface $taxonomy_vocabulary) {
diff --git a/src/Form/OrganigramsImportD7Form.php b/src/Form/OrganigramsImportD7Form.php
index c887254..fde80a7 100644
--- a/src/Form/OrganigramsImportD7Form.php
+++ b/src/Form/OrganigramsImportD7Form.php
@@ -29,7 +29,7 @@ class OrganigramsImportD7Form extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -64,7 +64,7 @@ class OrganigramsImportD7Form extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
@@ -91,7 +91,7 @@ class OrganigramsImportD7Form extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/OrganigramsImportItemsForm.php b/src/Form/OrganigramsImportItemsForm.php
index e573966..11fbc1d 100644
--- a/src/Form/OrganigramsImportItemsForm.php
+++ b/src/Form/OrganigramsImportItemsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\organigrams\Form;
 
+use Drupal\taxonomy\TermStorageInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -20,21 +21,21 @@ class OrganigramsImportItemsForm extends FormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The term storage handler.
    *
-   * @var \Drupal\taxonomy\TermStorageInterface
+   * @var TermStorageInterface
    */
   protected $storageController;
 
   /**
    * Constructs an OrganigramsImportTermsForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -66,9 +67,9 @@ class OrganigramsImportItemsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\taxonomy\VocabularyInterface $taxonomy_vocabulary
+   * @param VocabularyInterface $taxonomy_vocabulary
    *   The vocabulary to import the terms to.
    *
    * @return array
@@ -118,7 +119,7 @@ class OrganigramsImportItemsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
@@ -136,7 +137,7 @@ class OrganigramsImportItemsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Plugin/Block/OrganigramsBlocks.php b/src/Plugin/Block/OrganigramsBlocks.php
index 2027ec3..640a0ae 100644
--- a/src/Plugin/Block/OrganigramsBlocks.php
+++ b/src/Plugin/Block/OrganigramsBlocks.php
@@ -32,7 +32,7 @@ class OrganigramsBlocks extends BlockBase implements ContainerFactoryPluginInter
   /**
    * The Taxonomy Tree builder.
    *
-   * @var \Drupal\organigrams\TaxonomyTermTree
+   * @var TaxonomyTermTree
    */
   protected $taxonomyTermTree;
 
@@ -45,9 +45,9 @@ class OrganigramsBlocks extends BlockBase implements ContainerFactoryPluginInter
    *   Contains the plugin id.
    * @param array $plugin_definition
    *   Contains the plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   Contains the entity manager.
-   * @param \Drupal\organigrams\TaxonomyTermTree $taxonomyTermTree
+   * @param TaxonomyTermTree $taxonomyTermTree
    *   The Taxonomy Tree builder.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entity_manager, TaxonomyTermTree $taxonomyTermTree) {
diff --git a/src/Plugin/Derivative/OrganigramsBlocks.php b/src/Plugin/Derivative/OrganigramsBlocks.php
index 5ed08ba..8cacde9 100644
--- a/src/Plugin/Derivative/OrganigramsBlocks.php
+++ b/src/Plugin/Derivative/OrganigramsBlocks.php
@@ -19,14 +19,14 @@ class OrganigramsBlocks extends DeriverBase implements ContainerDeriverInterface
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $taxonomyStorage;
 
   /**
    * Constructs new OrganigramsBlocks.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $taxonomy_storage
+   * @param EntityStorageInterface $taxonomy_storage
    *   The taxonomy storage.
    */
   public function __construct(EntityStorageInterface $taxonomy_storage) {
diff --git a/src/TaxonomyTermTree.php b/src/TaxonomyTermTree.php
index 819f833..c418938 100644
--- a/src/TaxonomyTermTree.php
+++ b/src/TaxonomyTermTree.php
@@ -20,23 +20,23 @@ class TaxonomyTermTree {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManager
+   * @var EntityFieldManager
    */
   protected $entityFieldManager;
 
   /**
    * TaxonomyTermTree constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   Contains the entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManager $entityFieldManager
+   * @param EntityFieldManager $entityFieldManager
    *   Contains the entity field manager.
    */
   public function __construct(EntityTypeManager $entityTypeManager, EntityFieldManager $entityFieldManager) {
@@ -183,7 +183,7 @@ class TaxonomyTermTree {
           '#style_name' => 'thumbnail',
           '#uri' => $image_uri,
         ];
-        $markup = render($image) . $markup;
+        $markup = \Drupal::service('renderer')->render($image) . $markup;
       }
     }
 
@@ -211,7 +211,7 @@ class TaxonomyTermTree {
         $renderable_link['#attributes'] = [
           'class' => ['nodecontent'],
         ];
-        $markup = render($renderable_link);
+        $markup = \Drupal::service('renderer')->render($renderable_link);
       }
     }
     // If not, wrap the mkarup in a div.
