diff --git a/account_modal.info.yml b/account_modal.info.yml
index 7d501cb..5087235 100644
--- a/account_modal.info.yml
+++ b/account_modal.info.yml
@@ -1,7 +1,6 @@
 name: Account Modal
 type: module
 description: Adds the ability to open account links in a modal window.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: User interface
 configure: account_modal.admin_settings
diff --git a/account_modal.module b/account_modal.module
index cd86323..ba7aefa 100644
--- a/account_modal.module
+++ b/account_modal.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Url;
+use Drupal\Component\Serialization\Json;
 use Drupal\account_modal\AccountModalAjaxHelper;
 use Drupal\account_modal\AccountPageHelper;
 use Drupal\Core\Form\FormStateInterface;
@@ -29,7 +31,7 @@ function account_modal_page_attachments(array &$attachments) {
  * Implements hook_link_alter().
  */
 function account_modal_link_alter(&$variables) {
-  /** @var \Drupal\Core\Url $url */
+  /** @var Url $url */
   $url = $variables['url'];
 
   if (!$url->isRouted()) {
@@ -57,7 +59,7 @@ function account_modal_link_alter(&$variables) {
 
   $variables['options']['attributes']['class'][] = 'use-ajax';
   $variables['options']['attributes']['data-dialog-type'] = 'modal';
-  $variables['options']['attributes']['data-dialog-options'] = \Drupal\Component\Serialization\Json::encode([
+  $variables['options']['attributes']['data-dialog-options'] = Json::encode([
     'width' => $dialog_width,
     'height' => $dialog_height,
     'dialogClass' => 'account-modal account-modal--' . $page,
diff --git a/src/AccountModalAjaxHelper.php b/src/AccountModalAjaxHelper.php
index e6e151b..bc90e9d 100644
--- a/src/AccountModalAjaxHelper.php
+++ b/src/AccountModalAjaxHelper.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\account_modal;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Render\RendererInterface;
+use Drupal\user\UserInterface;
+use Drupal\Core\Entity\EntityFormBuilderInterface;
 use Drupal\account_modal\AjaxCommand\RefreshPageCommand;
 use Drupal\block\Entity\Block;
 use Drupal\Core\Ajax\AjaxResponse;
@@ -21,11 +27,11 @@ class AccountModalAjaxHelper {
   /**
    * @param $pageId
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return AjaxResponse
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function ajaxCallback($pageId, array $form, FormStateInterface $formState) {
     $response = new AjaxResponse();
@@ -42,7 +48,7 @@ class AccountModalAjaxHelper {
       elseif ($pageId === 'register') {
         \Drupal::messenger()->addMessage(t('You have successfully created an account.'));
 
-        /** @var \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler */
+        /** @var ModuleHandlerInterface $moduleHandler */
         $moduleHandler = \Drupal::service('module_handler');
         $profileIsInstalled = $moduleHandler->moduleExists('profile');
 
@@ -53,7 +59,7 @@ class AccountModalAjaxHelper {
       }
     }
 
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
     $messagesElement = [
       '#type' => 'container',
@@ -82,9 +88,9 @@ class AccountModalAjaxHelper {
   }
 
   /**
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *
-   * @return \Drupal\account_modal\AjaxCommand\RefreshPageCommand|\Drupal\Core\Ajax\RedirectCommand
+   * @return RefreshPageCommand|RedirectCommand
    */
   public static function redirectCommand(FormStateInterface $formState) {
     global $base_url;
@@ -97,9 +103,9 @@ class AccountModalAjaxHelper {
   }
 
   /**
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *
-   * @return \Drupal\user\UserInterface|null
+   * @return UserInterface|null
    */
   public static function getUidFromFormState(FormStateInterface $formState) {
     $values = &$formState->getValues();
@@ -113,11 +119,11 @@ class AccountModalAjaxHelper {
   }
 
   /**
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *
-   * @return \Drupal\Core\Ajax\OpenModalDialogCommand
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return OpenModalDialogCommand
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function newProfileCommand(FormStateInterface $formState) {
     $config = \Drupal::config('account_modal.settings');
@@ -128,7 +134,7 @@ class AccountModalAjaxHelper {
       'is_default' => TRUE,
     ]);
 
-    /** @var \Drupal\Core\Entity\EntityFormBuilderInterface $entityFormBuilder */
+    /** @var EntityFormBuilderInterface $entityFormBuilder */
     $entityFormBuilder = \Drupal::service('entity.form_builder');
     $form = $entityFormBuilder->getForm($profile, 'add', [
       'uid' => $uid,
@@ -204,7 +210,7 @@ class AccountModalAjaxHelper {
         continue;
       }
 
-      /** @var \Drupal\Core\Render\RendererInterface $renderer */
+      /** @var RendererInterface $renderer */
       $renderer = \Drupal::service('renderer');
       $block = Block::load($id);
       $blockView = $view_builder->view($block);
diff --git a/src/AccountPageHelper.php b/src/AccountPageHelper.php
index 6a8ac04..1bc4952 100644
--- a/src/AccountPageHelper.php
+++ b/src/AccountPageHelper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\account_modal;
 
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Drupal\account_modal\Event\AccountModalEvents;
 use Drupal\account_modal\Event\PagesEvent;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -45,7 +47,7 @@ class AccountPageHelper {
       ],
     ];
 
-    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler */
+    /** @var ModuleHandlerInterface $moduleHandler */
     $moduleHandler = \Drupal::service('module_handler');
     $profileIsInstalled = $moduleHandler->moduleExists('profile');
 
@@ -64,9 +66,9 @@ class AccountPageHelper {
     }
 
     $event = new PagesEvent($pages);
-    /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher */
+    /** @var EventDispatcherInterface $eventDispatcher */
     $eventDispatcher = \Drupal::service('event_dispatcher');
-    $eventDispatcher->dispatch(AccountModalEvents::PAGES, $event);
+    $eventDispatcher->dispatch($event, AccountModalEvents::PAGES);
     return $event->getPages();
   }
 
diff --git a/src/Event/PagesEvent.php b/src/Event/PagesEvent.php
index 2a53d57..8d0e6a3 100644
--- a/src/Event/PagesEvent.php
+++ b/src/Event/PagesEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\account_modal\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Defines the cart empty event.
diff --git a/src/Form/AccountModalSettingsForm.php b/src/Form/AccountModalSettingsForm.php
index f4090e7..ae943a2 100644
--- a/src/Form/AccountModalSettingsForm.php
+++ b/src/Form/AccountModalSettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\account_modal\Form;
 
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\account_modal\AccountPageHelper;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -99,7 +100,7 @@ class AccountModalSettingsForm extends ConfigFormBase {
       '#default_value' => $config->get('messages_position'),
     ];
 
-    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler */
+    /** @var ModuleHandlerInterface $moduleHandler */
     $moduleHandler = \Drupal::service('module_handler');
     $profileIsInstalled = $moduleHandler->moduleExists('profile');
 
