diff --git a/guidelines.api.php b/guidelines.api.php
index 80aee18..e1d0fab 100644
--- a/guidelines.api.php
+++ b/guidelines.api.php
@@ -12,7 +12,7 @@ use Drupal\guidelines\Entity\Guideline;
  *
  * @param array $description
  *   Description with basic fields present.
- * @param \Drupal\guidelines\Entity\Guideline $guideline
+ * @param Guideline $guideline
  *   The full guideline.
  * @param array $context
  *   Array containing entity type and bundle.
diff --git a/guidelines.module b/guidelines.module
index ecfff7b..c1157ba 100644
--- a/guidelines.module
+++ b/guidelines.module
@@ -129,7 +129,7 @@ function guidelines_attach_to_widget(&$element, FormStateInterface &$form_state,
   $field_name = $context['items']->getName();
 
   if (!isset($descriptions[$entity_type])) {
-    /** @var Drupal\guidelines\Entity\Guideline[] $description_entities */
+    /** @var Guideline[] $description_entities */
     $guidelines = Guideline::loadByEntity($entity_type);
     foreach ($guidelines as $guideline) {
       foreach ($guideline->field_field as $field) {
@@ -142,7 +142,7 @@ function guidelines_attach_to_widget(&$element, FormStateInterface &$form_state,
   if (isset($descriptions[$entity_type][$key])) {
     $view_builder = \Drupal::entityTypeManager()->getViewBuilder('guideline');
     $pre_render = $view_builder->view($descriptions[$entity_type][$key], 'default');
-    $render_output = render($pre_render);
+    $render_output = \Drupal::service('renderer')->render($pre_render);
 
     if (isset($element['#description'])) {
       $element['#description'] = $render_output;
diff --git a/src/Controller/GuidelineController.php b/src/Controller/GuidelineController.php
index d9f9823..fd54a41 100644
--- a/src/Controller/GuidelineController.php
+++ b/src/Controller/GuidelineController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\guidelines\Controller;
 
+use Drupal\Core\Datetime\DateFormatter;
+use Drupal\Core\Render\Renderer;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ -20,14 +22,14 @@ class GuidelineController extends ControllerBase implements ContainerInjectionIn
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
@@ -88,7 +90,7 @@ class GuidelineController extends ControllerBase implements ContainerInjectionIn
   /**
    * Generates an overview table of older revisions of a Guideline.
    *
-   * @param \Drupal\guidelines\Entity\GuidelineInterface $guideline
+   * @param GuidelineInterface $guideline
    *   A Guideline object.
    *
    * @return array
diff --git a/src/Controller/GuidelineJsonController.php b/src/Controller/GuidelineJsonController.php
index f7f5455..cc13b06 100644
--- a/src/Controller/GuidelineJsonController.php
+++ b/src/Controller/GuidelineJsonController.php
@@ -28,7 +28,7 @@ class GuidelineJsonController extends ControllerBase {
   public function getFormGuidelines($entity_type, $bundle) {
     $descriptions = [];
 
-    /** @var Drupal\guidelines\Entity\Guideline[] $guidelines */
+    /** @var Guideline[] $guidelines */
     $guidelines = Guideline::loadByEntity($entity_type);
 
     foreach ($guidelines as $guideline) {
@@ -37,7 +37,7 @@ class GuidelineJsonController extends ControllerBase {
         if (!empty($bundle) && $bundle === $b) {
           $view_builder = \Drupal::entityTypeManager()->getViewBuilder('guideline');
           $pre_render = $view_builder->view($guideline, 'default');
-          $render_output = render($pre_render);
+          $render_output = \Drupal::service('renderer')->render($pre_render);
 
           $description = [
             'label' => $f,
diff --git a/src/Entity/GuidelineInterface.php b/src/Entity/GuidelineInterface.php
index 23241fb..9b35ebc 100644
--- a/src/Entity/GuidelineInterface.php
+++ b/src/Entity/GuidelineInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\guidelines\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -79,7 +80,7 @@ interface GuidelineInterface extends ContentEntityInterface, RevisionLogInterfac
   /**
    * Gets the Guideline revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/src/Form/GuidelineForm.php b/src/Form/GuidelineForm.php
index 72065f0..ffc3b7e 100644
--- a/src/Form/GuidelineForm.php
+++ b/src/Form/GuidelineForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\guidelines\Form;
 
+use Drupal\Core\Session\AccountProxyInterface;
+use Drupal\guidelines\Entity\Guideline;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -16,7 +18,7 @@ class GuidelineForm extends ContentEntityForm {
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
@@ -34,7 +36,7 @@ class GuidelineForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\guidelines\Entity\Guideline $this->entity */
+    /** @var Guideline $this ->entity */
     $form = parent::buildForm($form, $form_state);
 
     if (!$this->entity->isNew()) {
diff --git a/src/Form/GuidelineRevisionDeleteForm.php b/src/Form/GuidelineRevisionDeleteForm.php
index df99ca7..7fea123 100644
--- a/src/Form/GuidelineRevisionDeleteForm.php
+++ b/src/Form/GuidelineRevisionDeleteForm.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\guidelines\Form;
 
+use Drupal\guidelines\Entity\GuidelineInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Database\Connection;
+use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -17,28 +21,28 @@ class GuidelineRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The Guideline revision.
    *
-   * @var \Drupal\guidelines\Entity\GuidelineInterface
+   * @var GuidelineInterface
    */
   protected $revision;
 
   /**
    * The Guideline storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $guidelineStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
diff --git a/src/Form/GuidelineRevisionRevertForm.php b/src/Form/GuidelineRevisionRevertForm.php
index 0830421..0138544 100644
--- a/src/Form/GuidelineRevisionRevertForm.php
+++ b/src/Form/GuidelineRevisionRevertForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\guidelines\Form;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -18,21 +20,21 @@ class GuidelineRevisionRevertForm extends ConfirmFormBase {
   /**
    * The Guideline revision.
    *
-   * @var \Drupal\guidelines\Entity\GuidelineInterface
+   * @var GuidelineInterface
    */
   protected $revision;
 
   /**
    * The Guideline storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $guidelineStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -124,18 +126,18 @@ class GuidelineRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\guidelines\Entity\GuidelineInterface $revision
+   * @param GuidelineInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\guidelines\Entity\GuidelineInterface
+   * @return GuidelineInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(GuidelineInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/GuidelineRevisionRevertTranslationForm.php b/src/Form/GuidelineRevisionRevertTranslationForm.php
index c764348..fdbcf8f 100644
--- a/src/Form/GuidelineRevisionRevertTranslationForm.php
+++ b/src/Form/GuidelineRevisionRevertTranslationForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\guidelines\Form;
 
+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\guidelines\Entity\GuidelineInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -23,7 +24,7 @@ class GuidelineRevisionRevertTranslationForm extends GuidelineRevisionRevertForm
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -75,7 +76,7 @@ class GuidelineRevisionRevertTranslationForm extends GuidelineRevisionRevertForm
   protected function prepareRevertedRevision(GuidelineInterface $revision, FormStateInterface $form_state) {
     $revert_untranslated_fields = $form_state->getValue('revert_untranslated_fields');
 
-    /** @var \Drupal\guidelines\Entity\GuidelineInterface $default_revision */
+    /** @var GuidelineInterface $default_revision */
     $latest_revision = $this->GuidelineStorage->load($revision->id());
     $latest_revision_translation = $latest_revision->getTranslation($this->langcode);
 
@@ -89,7 +90,7 @@ class GuidelineRevisionRevertTranslationForm extends GuidelineRevisionRevertForm
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/GuidelineSettingsForm.php b/src/Form/GuidelineSettingsForm.php
index 25cc12a..a4efdf1 100644
--- a/src/Form/GuidelineSettingsForm.php
+++ b/src/Form/GuidelineSettingsForm.php
@@ -27,7 +27,7 @@ class GuidelineSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class GuidelineSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Form/GuidelineSortForm.php b/src/Form/GuidelineSortForm.php
index 19a0a67..3b839fc 100644
--- a/src/Form/GuidelineSortForm.php
+++ b/src/Form/GuidelineSortForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\guidelines\Form;
 
+use Drupal\Core\Session\AccountProxyInterface;
+use Drupal\guidelines\Entity\Guideline;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ -19,7 +21,7 @@ class GuidelineSortForm extends ContentEntityForm {
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
@@ -44,7 +46,7 @@ class GuidelineSortForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\guidelines\Entity\Guideline $guideline */
+    /** @var Guideline $guideline */
     $guideline = $this->entity;
 
     $children = $guideline->getChildren();
@@ -163,7 +165,7 @@ class GuidelineSortForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\guidelines\Entity\Guideline $guideline */
+    /** @var Guideline $guideline */
     $guideline = $this->entity;
 
     $children = $guideline->getChildren();
diff --git a/src/GuidelineAccessControlHandler.php b/src/GuidelineAccessControlHandler.php
index 2c4e66a..fb40f04 100644
--- a/src/GuidelineAccessControlHandler.php
+++ b/src/GuidelineAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\guidelines;
 
+use Drupal\guidelines\Entity\GuidelineInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,8 +19,7 @@ class GuidelineAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\guidelines\Entity\GuidelineInterface $entity */
-
+    /** @var GuidelineInterface $entity */
     switch ($operation) {
 
       case 'view':
@@ -71,11 +71,11 @@ class GuidelineAccessControlHandler extends EntityAccessControlHandler {
   /**
    * Test for given 'own' permission.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Guideline.
    * @param string $operation
    *   Operation.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Account.
    *
    * @return string|null
diff --git a/src/GuidelineHtmlRouteProvider.php b/src/GuidelineHtmlRouteProvider.php
index 804b249..8818877 100644
--- a/src/GuidelineHtmlRouteProvider.php
+++ b/src/GuidelineHtmlRouteProvider.php
@@ -56,10 +56,10 @@ class GuidelineHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the sort route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSortRoute(EntityTypeInterface $entity_type) {
@@ -89,10 +89,10 @@ class GuidelineHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -113,10 +113,10 @@ class GuidelineHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -137,10 +137,10 @@ class GuidelineHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -161,10 +161,10 @@ class GuidelineHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -185,10 +185,10 @@ class GuidelineHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision translation revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionTranslationRevertRoute(EntityTypeInterface $entity_type) {
@@ -209,10 +209,10 @@ class GuidelineHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/GuidelineListBuilder.php b/src/GuidelineListBuilder.php
index 5174870..6f084a3 100644
--- a/src/GuidelineListBuilder.php
+++ b/src/GuidelineListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\guidelines;
 
+use Drupal\guidelines\Entity\Guideline;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Link;
@@ -40,7 +41,7 @@ class GuidelineListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\guidelines\Entity\Guideline $entity */
+    /** @var Guideline $entity */
     $row['label'] = Link::createFromRoute(
       $entity->label(),
       'entity.guideline.canonical',
diff --git a/src/GuidelinePermissions.php b/src/GuidelinePermissions.php
index 1838e9b..68c71d7 100644
--- a/src/GuidelinePermissions.php
+++ b/src/GuidelinePermissions.php
@@ -34,7 +34,7 @@ class GuidelinePermissions {
   /**
    * Returns a list of node permissions for a given node type.
    *
-   * @param \Drupal\guidelines\Entity\GuidelineType $type
+   * @param GuidelineType $type
    *   The Guideline type.
    *
    * @return array
diff --git a/src/GuidelineStorageInterface.php b/src/GuidelineStorageInterface.php
index ab09f51..55f0df0 100644
--- a/src/GuidelineStorageInterface.php
+++ b/src/GuidelineStorageInterface.php
@@ -20,7 +20,7 @@ interface GuidelineStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of Guideline revision IDs for a specific Guideline.
    *
-   * @param \Drupal\guidelines\Entity\GuidelineInterface $entity
+   * @param GuidelineInterface $entity
    *   The Guideline entity.
    *
    * @return int[]
@@ -31,7 +31,7 @@ interface GuidelineStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of revision IDs having a given user as Guideline author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ -42,7 +42,7 @@ interface GuidelineStorageInterface extends ContentEntityStorageInterface {
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\guidelines\Entity\GuidelineInterface $entity
+   * @param GuidelineInterface $entity
    *   The Guideline entity.
    *
    * @return int
@@ -53,7 +53,7 @@ interface GuidelineStorageInterface extends ContentEntityStorageInterface {
   /**
    * Unsets the language for all Guideline with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
diff --git a/src/Plugin/Field/FieldFormatter/GuidelineFieldTargetFormatter.php b/src/Plugin/Field/FieldFormatter/GuidelineFieldTargetFormatter.php
index ee446af..579c00b 100644
--- a/src/Plugin/Field/FieldFormatter/GuidelineFieldTargetFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/GuidelineFieldTargetFormatter.php
@@ -64,7 +64,7 @@ class GuidelineFieldTargetFormatter extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
diff --git a/src/Plugin/Field/FieldWidget/GuidelineFieldTargetWidget.php b/src/Plugin/Field/FieldWidget/GuidelineFieldTargetWidget.php
index 94681ef..b157d9c 100644
--- a/src/Plugin/Field/FieldWidget/GuidelineFieldTargetWidget.php
+++ b/src/Plugin/Field/FieldWidget/GuidelineFieldTargetWidget.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\guidelines\Plugin\Field\FieldWidget;
 
+use Drupal\Core\Entity\EntityTypeBundleInfo;
+use Drupal\Core\Entity\EntityFieldManager;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\Plugin\Field\FieldWidget\OptionsButtonsWidget;
 use Drupal\Core\Form\FormStateInterface;
@@ -41,7 +43,7 @@ class GuidelineFieldTargetWidget extends OptionsButtonsWidget {
 
     $content_entities = array_keys(\Drupal::service('entity_type.repository')->getEntityTypeLabels(TRUE)['Content']);
 
-    /** @var \Drupal\Core\Entity\EntityTypeBundleInfo $entity_type_bundle_info */
+    /** @var EntityTypeBundleInfo $entity_type_bundle_info */
     $entity_type_bundle_info = \Drupal::service('entity_type.bundle.info');
     $all_bundle_info = $entity_type_bundle_info->getAllBundleInfo();
 
@@ -105,7 +107,7 @@ class GuidelineFieldTargetWidget extends OptionsButtonsWidget {
         'revision_translation_affected',
       ];
 
-      /** @var \Drupal\Core\Entity\EntityFieldManager $entity_field_manager */
+      /** @var EntityFieldManager $entity_field_manager */
       $entity_field_manager = \Drupal::service('entity_field.manager');
 
       $enabled_entities = array_filter($this->getSetting('enabled_entities'));
@@ -124,12 +126,12 @@ class GuidelineFieldTargetWidget extends OptionsButtonsWidget {
               continue;
             }
 
-            /** @var \Drupal\Core\Field\BaseFieldDefinition $field_definition */
+            /** @var BaseFieldDefinition $field_definition */
             $key = $entity_type . '.' . $bundle . '.' . $field_name;
             $options[$key] = $this->getBundleLabel($entity_type, $bundle) . ' > ' . $field_definition->getLabel() . ' (' . $field_name . ')';
           }
           elseif ($field_definition instanceof FieldConfig) {
-            /** @var \Drupal\field\Entity\FieldConfig $field_definition */
+            /** @var FieldConfig $field_definition */
             $key = $entity_type . '.' . $bundle . '.' . $field_name;
             $options[$key] = $this->getBundleLabel($entity_type, $bundle) . ' > ' . $field_definition->getLabel() . ' (' . $field_name . ')';
           }
