modules/contrib/footnotes/footnotes.install
modules/contrib/footnotes/footnotes.module
modules/contrib/footnotes/src/Plugin/CKEditorPlugin/Footnotes.php
modules/contrib/footnotes/src/Plugin/Filter/FootnotesFilter.php
modules/contrib/footnotes/tests/src/Functional/FootnotesFilterPluginTest.php
modules/contrib/footnotes/tests/src/FunctionalJavascript/FootnotesCkeditorPluginTest.php

4 files with changes
====================

1) modules/contrib/footnotes/tests/src/FunctionalJavascript/FootnotesCkeditorPluginTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\footnotes\FunctionalJavascript;

+use Drupal\user\UserInterface;
+use Drupal\filter\FilterFormatInterface;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\editor\Entity\Editor;
@@ @@
   /**
    * The account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;

@@ @@
   /**
    * The FilterFormat config entity used for testing.
    *
-   * @var \Drupal\filter\FilterFormatInterface
+   * @var FilterFormatInterface
    */
   protected $filterFormat;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a text format and associate CKEditor.
@@ @@
     }
     $expected_value .= '</p>';

-    $this->assertEqual($body_value, $expected_value, $this->t('String, formed by CKEditor, is correct.'));
+    $this->assertEquals($body_value, $expected_value, $this->t('String, formed by CKEditor, is correct.'));
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/footnotes/tests/src/Functional/FootnotesFilterPluginTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\footnotes\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
@@ @@
   /**
    * An user with permissions to proper permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a filter admin user.
@@ @@
     $this->drupalGet('node/' . $node->id());

     // Footnote with [fn].
-    $this->assertNoRaw($note1);
-    $this->assertText($text1);
+    $this->assertSession()->responseNotContains($note1);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($text1);

     // Footnote with <fn>.
-    $this->assertNoRaw($note2);
-    $this->assertText($text2);
+    $this->assertSession()->responseNotContains($note2);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($text2);

     // Css file:
-    $this->assertRaw('/assets/css/footnotes.css');
+    $this->assertSession()->responseContains('/assets/css/footnotes.css');
     // @todo currently additional settings doesn't work as expected.
     // So we don't check additional settings for now.
     // $this->createTextFormat(TRUE);
@@ @@
     $this->drupalGet('node/' . $node->id());

     // Footnote with [fn].
-    $this->assertNoRaw($note1);
-    $this->assertText($text1);
+    $this->assertSession()->responseNotContains($note1);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($text1);

     // Elements with the same value should be collapsed.
     // @todo This should work only if footnotes_collapse setting is enabled.
-    $this->assertNoRaw($note2);
-    $this->assertNoText($text2);
+    $this->assertSession()->responseNotContains($note2);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains($text2);
   }

   /**
@@ @@
     ];
     $this->drupalGet("admin/config/content/formats/add");
     // Keep the "CKEditor" editor selected and click the "Configure" button.
-    $this->drupalPostForm(NULL, $edit, 'editor_configure');
+    $this->submitForm($edit, 'editor_configure');
     $edit['editor[settings][toolbar][button_groups]'] = $button_groups;
     $edit['filters[filter_footnotes][settings][footnotes_collapse]'] = $button_groups;
     if ($additional_settings) {
@@ @@
       $edit['filters[filter_footnotes][settings][footnotes_collapse]'] = 1;
       $edit['filters[filter_footnotes][settings][footnotes_html]'] = 1;
     }
-    $this->drupalPostForm(NULL, $edit, $this->t('Save configuration'));
-    $this->assertText($this->t('Added text format @format.', ['@format' => $this->formatName]));
+    $this->submitForm($edit, $this->t('Save configuration'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('Added text format @format.', ['@format' => $this->formatName]));
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertNoRawRector
 * AssertNoTextRector
 * AssertRawRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/footnotes/src/Plugin/Filter/FootnotesFilter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\footnotes\Plugin\Filter;

+use Drupal\Core\Render\RendererInterface;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
    *
    * @param array $form
    *   A minimally prepopulated form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the (entire) configuration form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/footnotes/src/Plugin/CKEditorPlugin/Footnotes.php:28

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'footnotes') . '/assets/js/ckeditor/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('footnotes') . '/assets/js/ckeditor/plugin.js';
   }

   /**
@@ @@
     return [
       'footnotes' => [
         'label' => $this->t('Footnotes'),
-        'image' => drupal_get_path('module', 'footnotes') . '/assets/js/ckeditor/icons/footnotes.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('footnotes') . '/assets/js/ckeditor/icons/footnotes.png',
       ],
     ];
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

