diff --git a/opigno_social.install b/opigno_social.install
index ac88f1a..2a4ea71 100644
--- a/opigno_social.install
+++ b/opigno_social.install
@@ -72,7 +72,7 @@ function opigno_social_set_default_layout() {
  */
 function opigno_social_update_9001() {
   // Import configs.
-  $config_path = drupal_get_path('module', 'opigno_social') . '/config/optional/';
+  $config_path = \Drupal::service('extension.list.module')->getPath('opigno_social') . '/config/optional/';
   $config_source = new FileStorage($config_path);
   \Drupal::service('config.installer')->installOptionalConfig($config_source);
 }
diff --git a/opigno_social.module b/opigno_social.module
index ea029f6..a9b84f9 100644
--- a/opigno_social.module
+++ b/opigno_social.module
@@ -152,7 +152,7 @@ function opigno_social_form_social_settings_form_alter(&$form, FormStateInterfac
  *
  * @param $form
  *   The form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state object.
  */
 function _opigno_social_features_submit(&$form, FormStateInterface $form_state) {
diff --git a/src/Access/ShareContentAccessCheck.php b/src/Access/ShareContentAccessCheck.php
index 7275cc0..7570505 100644
--- a/src/Access/ShareContentAccessCheck.php
+++ b/src/Access/ShareContentAccessCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_social\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Access\AccessResult;
@@ -25,23 +26,23 @@ class ShareContentAccessCheck implements AccessInterface {
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request|null
+   * @var Request|null
    */
   protected $request;
 
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * ShareContentAccessCheck constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(RequestStack $request_stack, EntityTypeManagerInterface $entity_type_manager) {
@@ -52,12 +53,12 @@ class ShareContentAccessCheck implements AccessInterface {
   /**
    * Checks the access.
    *
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   The route to check the access to.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in user's account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(Route $route, AccountInterface $account) {
diff --git a/src/Access/SocialFeaturesAccessCheck.php b/src/Access/SocialFeaturesAccessCheck.php
index 6730ef1..2b4e4fc 100644
--- a/src/Access/SocialFeaturesAccessCheck.php
+++ b/src/Access/SocialFeaturesAccessCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_social\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
@@ -25,7 +26,7 @@ class SocialFeaturesAccessCheck implements AccessInterface {
   /**
    * SocialFeaturesAccessCheck constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ -35,12 +36,12 @@ class SocialFeaturesAccessCheck implements AccessInterface {
   /**
    * Checks the access.
    *
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   The route to check the access to.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in user's account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(Route $route, AccountInterface $account) {
diff --git a/src/Controller/PostsController.php b/src/Controller/PostsController.php
index 61a71c1..6bf5e85 100644
--- a/src/Controller/PostsController.php
+++ b/src/Controller/PostsController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_social\Controller;
 
+use Drupal\Core\Entity\EntityViewBuilderInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Ajax\AfterCommand;
@@ -54,35 +55,35 @@ class PostsController extends ControllerBase {
   /**
    * The posts/comment manager service.
    *
-   * @var \Drupal\opigno_social\Services\OpignoPostsManager
+   * @var OpignoPostsManager
    */
   protected $postsManager;
 
   /**
    * The posts/comments storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface|null
+   * @var EntityStorageInterface|null
    */
   protected $storage = NULL;
 
   /**
    * The posts/comments view builder service.
    *
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $viewBuilder;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The Opigno like entity manager service.
    *
-   * @var \Drupal\opigno_like\Services\OpignoLikeManager
+   * @var OpignoLikeManager
    */
   protected $likeManager;
 
@@ -96,26 +97,26 @@ class PostsController extends ControllerBase {
   /**
    * The route access service.
    *
-   * @var \Drupal\Core\Routing\AccessAwareRouterInterface
+   * @var AccessAwareRouterInterface
    */
   protected $router;
 
   /**
    * PostsController constructor.
    *
-   * @param \Drupal\opigno_social\Services\OpignoPostsManager $posts_manager
+   * @param OpignoPostsManager $posts_manager
    *   The posts/comment manager service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\opigno_like\Services\OpignoLikeManager $like_manager
+   * @param OpignoLikeManager $like_manager
    *   The Opigno like entity manager service.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder service.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match service.
-   * @param \Drupal\Core\Routing\AccessAwareRouterInterface $router
+   * @param AccessAwareRouterInterface $router
    *   The route access service.
    */
   public function __construct(
@@ -164,7 +165,7 @@ class PostsController extends ControllerBase {
    * @param int $pid
    *   The post entity ID.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function getCommentForm(int $pid): AjaxResponse {
@@ -192,7 +193,7 @@ class PostsController extends ControllerBase {
    * @param int $pid
    *   The post entity ID.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function hidePostComments(int $pid): AjaxResponse {
@@ -212,12 +213,12 @@ class PostsController extends ControllerBase {
   /**
    * Comment the post with the given ID.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    * @param int $pid
    *   The post entity ID.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function createComment(Request $request, int $pid): AjaxResponse {
@@ -270,7 +271,7 @@ class PostsController extends ControllerBase {
    * @param int $amount
    *   The number of comments to be gotten.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function getPostComments(int $pid, int $amount): AjaxResponse {
@@ -310,7 +311,7 @@ class PostsController extends ControllerBase {
    * @param int $amount
    *   The number of comments to load.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function loadMoreComments(int $pid, int $from, int $amount): AjaxResponse {
@@ -342,12 +343,12 @@ class PostsController extends ControllerBase {
   /**
    * Delete the post/comment with all its likes and comments.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    * @param int $pid
    *   The post ID to be deleted.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function deletePost(Request $request, int $pid): AjaxResponse {
@@ -390,12 +391,12 @@ class PostsController extends ControllerBase {
   /**
    * Hide the given post for the user.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    * @param int $pid
    *   The post ID to be hidden.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function hidePost(Request $request, int $pid): AjaxResponse {
@@ -437,12 +438,12 @@ class PostsController extends ControllerBase {
   /**
    * Pin/unpin the given post for the user.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    * @param int $pid
    *   The post ID to be pinned/unpinned.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function pinPost(Request $request, int $pid): AjaxResponse {
@@ -502,7 +503,7 @@ class PostsController extends ControllerBase {
   /**
    * Check if the current page is a single post page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
    * @return bool
@@ -515,7 +516,7 @@ class PostsController extends ControllerBase {
   /**
    * Get the route name from the request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
    * @return string
@@ -542,12 +543,12 @@ class PostsController extends ControllerBase {
   /**
    * Display the popup with the sharable post content (training/badge/cert).
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    * @param string $type
    *   The content type to be shared (training/badge/certificate).
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function getShareableContent(Request $request, string $type): AjaxResponse {
@@ -616,10 +617,10 @@ class PostsController extends ControllerBase {
   /**
    * Open the popup for the post content sharing (training/badge/certificate).
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function sharePostContent(Request $request): AjaxResponse {
@@ -718,10 +719,10 @@ class PostsController extends ControllerBase {
   /**
    * Create the post with the additional content (training/certificate/badge).
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function createPost(Request $request): AjaxResponse {
@@ -782,7 +783,7 @@ class PostsController extends ControllerBase {
   /**
    * Check if new posts were created after the last social wall access.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function checkNewPosts(): AjaxResponse {
@@ -793,7 +794,7 @@ class PostsController extends ControllerBase {
   /**
    * Display posts that were created after the last social wall access.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function displayNewPosts(): AjaxResponse {
diff --git a/src/Controller/UserConnectionsController.php b/src/Controller/UserConnectionsController.php
index a0d0d5b..041f9b3 100644
--- a/src/Controller/UserConnectionsController.php
+++ b/src/Controller/UserConnectionsController.php
@@ -30,30 +30,30 @@ class UserConnectionsController extends ControllerBase {
   /**
    * User connection manager service.
    *
-   * @var \Drupal\opigno_social\Services\UserConnectionManager
+   * @var UserConnectionManager
    */
   protected $connectionManager;
 
   /**
    * User entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface|null
+   * @var EntityStorageInterface|null
    */
   protected $userStorage = NULL;
 
   /**
    * User the invitation entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface|null
+   * @var EntityStorageInterface|null
    */
   protected $invitationStorage = NULL;
 
   /**
    * UserInvitationController constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\opigno_social\Services\UserConnectionManager $connection_manager
+   * @param UserConnectionManager $connection_manager
    *   The user connection manager service.
    */
   public function __construct(
@@ -86,7 +86,7 @@ class UserConnectionsController extends ControllerBase {
    * @param int $invitee
    *   The invitee user ID.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Response object.
    */
   public function send(int $invitee): AjaxResponse {
@@ -129,12 +129,12 @@ class UserConnectionsController extends ControllerBase {
   /**
    * Accept the user invitation.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    * @param int $owner
    *   Invitation owner user ID.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Response object.
    */
   public function accept(Request $request, int $owner = 0): AjaxResponse {
@@ -182,14 +182,14 @@ class UserConnectionsController extends ControllerBase {
   /**
    * Decline the user invitation.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    * @param int $owner
    *   Invitation owner user ID.
    * @param int $invitee
    *   Invitee user ID.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Response object.
    */
   public function decline(Request $request, int $owner = 0, int $invitee = 0): AjaxResponse {
@@ -222,9 +222,9 @@ class UserConnectionsController extends ControllerBase {
   /**
    * Add the reload command to the current request.
    *
-   * @param \Drupal\Core\Ajax\AjaxResponse $response
+   * @param AjaxResponse $response
    *   The response object.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    */
   private function reloadPage(AjaxResponse $response, Request $request): void {
diff --git a/src/Entity/OpignoPostInterface.php b/src/Entity/OpignoPostInterface.php
index 357c278..728769e 100644
--- a/src/Entity/OpignoPostInterface.php
+++ b/src/Entity/OpignoPostInterface.php
@@ -24,7 +24,7 @@ interface OpignoPostInterface extends ContentEntityInterface {
   /**
    * Get the post author user.
    *
-   * @return \Drupal\user\UserInterface|null
+   * @return UserInterface|null
    *   The post author user.
    */
   public function getAuthor(): ?UserInterface;
@@ -133,7 +133,7 @@ interface OpignoPostInterface extends ContentEntityInterface {
   /**
    * Get the loaded attachment entity (opigno_module/group).
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The loaded attachment entity (NULL if there is no attachment).
    */
   public function getAttachmentEntity(): ?EntityInterface;
diff --git a/src/Entity/UserInvitation.php b/src/Entity/UserInvitation.php
index 4a11fe4..72ae395 100644
--- a/src/Entity/UserInvitation.php
+++ b/src/Entity/UserInvitation.php
@@ -68,7 +68,7 @@ class UserInvitation extends ContentEntityBase implements UserInvitationInterfac
    * @param int $uid
    *   The user ID to load the user entity.
    *
-   * @return \Drupal\user\UserInterface|null
+   * @return UserInterface|null
    *   The invitation user.
    */
   private function getUser(int $uid): ?UserInterface {
diff --git a/src/Entity/UserInvitationInterface.php b/src/Entity/UserInvitationInterface.php
index 79f679a..6df1c64 100644
--- a/src/Entity/UserInvitationInterface.php
+++ b/src/Entity/UserInvitationInterface.php
@@ -23,7 +23,7 @@ interface UserInvitationInterface extends ContentEntityInterface {
   /**
    * Get invitation owner user.
    *
-   * @return \Drupal\user\UserInterface|null
+   * @return UserInterface|null
    *   The invitation owner user.
    */
   public function getOwner(): ?UserInterface;
@@ -50,7 +50,7 @@ interface UserInvitationInterface extends ContentEntityInterface {
   /**
    * Get the invitee user.
    *
-   * @return \Drupal\user\UserInterface|null
+   * @return UserInterface|null
    *   The invitee user.
    */
   public function getInvitee(): ?UserInterface;
diff --git a/src/Form/CreateCommentForm.php b/src/Form/CreateCommentForm.php
index 34b4cda..e2e3b48 100644
--- a/src/Form/CreateCommentForm.php
+++ b/src/Form/CreateCommentForm.php
@@ -19,7 +19,7 @@ class CreateCommentForm extends FormBase {
   /**
    * The CSRF token generator service.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator
+   * @var CsrfTokenGenerator
    */
   protected $csrfToken;
 
diff --git a/src/Form/CreatePostForm.php b/src/Form/CreatePostForm.php
index 40a2248..df4bbdf 100644
--- a/src/Form/CreatePostForm.php
+++ b/src/Form/CreatePostForm.php
@@ -19,14 +19,14 @@ class CreatePostForm extends FormBase {
   /**
    * The CSRF token generator service.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator
+   * @var CsrfTokenGenerator
    */
   protected $csrfToken;
 
   /**
    * CreatePostForm constructor.
    *
-   * @param \Drupal\Core\Access\CsrfTokenGenerator $csrf_token
+   * @param CsrfTokenGenerator $csrf_token
    *   The CSRF token generator service.
    */
   public function __construct(CsrfTokenGenerator $csrf_token) {
diff --git a/src/Form/CreateSharePostForm.php b/src/Form/CreateSharePostForm.php
index cb6a93a..2de0193 100644
--- a/src/Form/CreateSharePostForm.php
+++ b/src/Form/CreateSharePostForm.php
@@ -21,32 +21,32 @@ class CreateSharePostForm extends FormBase {
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The Opigno posts manager.
    *
-   * @var \Drupal\opigno_social\Services\OpignoPostsManager
+   * @var OpignoPostsManager
    */
   protected $postsManager;
 
   /**
    * The CSRF token generator service.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator
+   * @var CsrfTokenGenerator
    */
   protected $csrfToken;
 
   /**
    * CreateSharePostForm constructor.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\opigno_social\Services\OpignoPostsManager $posts_manager
+   * @param OpignoPostsManager $posts_manager
    *   The Opigno posts manager service.
-   * @param \Drupal\Core\Access\CsrfTokenGenerator $csrf_token
+   * @param CsrfTokenGenerator $csrf_token
    *   The CSRF token generator service.
    */
   public function __construct(RendererInterface $renderer, OpignoPostsManager $posts_manager, CsrfTokenGenerator $csrf_token) {
diff --git a/src/Form/RemoveSocialEntitiesConfirmForm.php b/src/Form/RemoveSocialEntitiesConfirmForm.php
index e6f7b99..9997e82 100644
--- a/src/Form/RemoveSocialEntitiesConfirmForm.php
+++ b/src/Form/RemoveSocialEntitiesConfirmForm.php
@@ -23,14 +23,14 @@ class RemoveSocialEntitiesConfirmForm extends ConfirmFormBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * RemoveConnectionsConfirmForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -144,7 +144,7 @@ class RemoveSocialEntitiesConfirmForm extends ConfirmFormBase {
    *
    * @param array $entities
    *   The list of loaded entities that should be removed.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage.
    */
   public function deleteEntities(array $entities, EntityStorageInterface $storage) {
diff --git a/src/Plugin/Block/CommentFormBlock.php b/src/Plugin/Block/CommentFormBlock.php
index 3c43710..eb58bab 100644
--- a/src/Plugin/Block/CommentFormBlock.php
+++ b/src/Plugin/Block/CommentFormBlock.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\opigno_social\Plugin\Block;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\EntityViewBuilderInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Block\BlockBase;
@@ -32,21 +34,21 @@ class CommentFormBlock extends BlockBase implements ContainerFactoryPluginInterf
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * The loaded current user.
    *
-   * @var \Drupal\Core\Entity\EntityInterface|null
+   * @var EntityInterface|null
    */
   protected $user = NULL;
 
   /**
    * The user view builder service.
    *
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $viewBuilder;
 
diff --git a/src/Plugin/Block/SocialWallBlock.php b/src/Plugin/Block/SocialWallBlock.php
index 1024f52..3e3ad31 100644
--- a/src/Plugin/Block/SocialWallBlock.php
+++ b/src/Plugin/Block/SocialWallBlock.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\opigno_social\Plugin\Block;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\EntityViewBuilderInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Access\CsrfTokenGenerator;
@@ -44,35 +46,35 @@ class SocialWallBlock extends BlockBase implements ContainerFactoryPluginInterfa
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * The loaded current user.
    *
-   * @var \Drupal\Core\Entity\EntityInterface|null
+   * @var EntityInterface|null
    */
   protected $user = NULL;
 
   /**
    * The user view builder service.
    *
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $viewBuilder;
 
   /**
    * The posts manager service.
    *
-   * @var \Drupal\opigno_social\Services\OpignoPostsManager
+   * @var OpignoPostsManager
    */
   protected $postsManager;
 
   /**
    * The CSRF token generator service.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator
+   * @var CsrfTokenGenerator
    */
   protected $csrfToken;
 
@@ -229,7 +231,7 @@ class SocialWallBlock extends BlockBase implements ContainerFactoryPluginInterfa
    * @param array $options
    *   The url options.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The protected url.
    */
   protected function createProtectedUrl(string $route, array $params = [], array $options = []): Url {
diff --git a/src/Plugin/Block/UserConnectionsBlock.php b/src/Plugin/Block/UserConnectionsBlock.php
index 41c5a73..fbf26a6 100644
--- a/src/Plugin/Block/UserConnectionsBlock.php
+++ b/src/Plugin/Block/UserConnectionsBlock.php
@@ -21,7 +21,7 @@ class UserConnectionsBlock extends BlockBase implements ContainerFactoryPluginIn
   /**
    * The user connections manager service.
    *
-   * @var \Drupal\opigno_social\Services\UserConnectionManager
+   * @var UserConnectionManager
    */
   protected $connectionsManager;
 
diff --git a/src/Plugin/views/field/BadgeName.php b/src/Plugin/views/field/BadgeName.php
index 4e95149..320550e 100644
--- a/src/Plugin/views/field/BadgeName.php
+++ b/src/Plugin/views/field/BadgeName.php
@@ -19,7 +19,7 @@ class BadgeName extends FieldPluginBase {
   /**
    * The DB connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
diff --git a/src/Plugin/views/filter/AvailablePosts.php b/src/Plugin/views/filter/AvailablePosts.php
index 3669e86..3c60c00 100644
--- a/src/Plugin/views/filter/AvailablePosts.php
+++ b/src/Plugin/views/filter/AvailablePosts.php
@@ -20,14 +20,14 @@ class AvailablePosts extends FilterPluginBase {
   /**
    * User connection manager service.
    *
-   * @var \Drupal\opigno_social\Services\UserConnectionManager
+   * @var UserConnectionManager
    */
   protected $connectionManager;
 
   /**
    * Posts manager service.
    *
-   * @var \Drupal\opigno_social\Services\OpignoPostsManager
+   * @var OpignoPostsManager
    */
   protected $postsManager;
 
diff --git a/src/Plugin/views/filter/BadgeNameFilter.php b/src/Plugin/views/filter/BadgeNameFilter.php
index 99414f8..1dae9fd 100644
--- a/src/Plugin/views/filter/BadgeNameFilter.php
+++ b/src/Plugin/views/filter/BadgeNameFilter.php
@@ -20,7 +20,7 @@ class BadgeNameFilter extends StringFilter {
   /**
    * The join manager service.
    *
-   * @var \Drupal\views\Plugin\ViewsHandlerManager
+   * @var ViewsHandlerManager
    */
   protected $joinManager;
 
diff --git a/src/Plugin/views/filter/UserNetworkConnections.php b/src/Plugin/views/filter/UserNetworkConnections.php
index 0a31d63..729b673 100644
--- a/src/Plugin/views/filter/UserNetworkConnections.php
+++ b/src/Plugin/views/filter/UserNetworkConnections.php
@@ -19,7 +19,7 @@ class UserNetworkConnections extends FilterPluginBase {
   /**
    * User connection manager service.
    *
-   * @var \Drupal\opigno_social\Services\UserConnectionManager
+   * @var UserConnectionManager
    */
   protected $connectionManager;
 
diff --git a/src/Plugin/views/sort/OpignoPostsSorting.php b/src/Plugin/views/sort/OpignoPostsSorting.php
index 02670a2..96209ea 100644
--- a/src/Plugin/views/sort/OpignoPostsSorting.php
+++ b/src/Plugin/views/sort/OpignoPostsSorting.php
@@ -18,7 +18,7 @@ class OpignoPostsSorting extends SortPluginBase {
   /**
    * Posts manager service.
    *
-   * @var \Drupal\opigno_social\Services\OpignoPostsManager
+   * @var OpignoPostsManager
    */
   protected $postsManager;
 
diff --git a/src/Services/OpignoPostsManager.php b/src/Services/OpignoPostsManager.php
index ef16231..81107aa 100644
--- a/src/Services/OpignoPostsManager.php
+++ b/src/Services/OpignoPostsManager.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\opigno_social\Services;
 
+use Drupal\Core\Entity\EntityViewBuilderInterface;
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
@@ -49,35 +52,35 @@ class OpignoPostsManager {
   /**
    * The posts/comments storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface|null
+   * @var EntityStorageInterface|null
    */
   protected $storage = NULL;
 
   /**
    * The posts/comments view builder.
    *
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $viewBuilder;
 
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The block manager service.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;
 
   /**
    * The cache service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   public $cache;
 
@@ -91,40 +94,40 @@ class OpignoPostsManager {
   /**
    * The user data.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;
 
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request|null
+   * @var Request|null
    */
   protected $request;
 
   /**
    * The database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * OpignoPostsManager constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache service.
    * @param UserConnectionManager $connection_manager
    *   The user connections manager service.
-   * @param \Drupal\user\UserDataInterface $user_data
+   * @param UserDataInterface $user_data
    *   The user data.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection service.
    */
   public function __construct(
@@ -159,7 +162,7 @@ class OpignoPostsManager {
    * @param int|array $pid
    *   The post ID(s) to be loaded.
    *
-   * @return \Drupal\opigno_social\Entity\OpignoPostInterface|null|array
+   * @return OpignoPostInterface|null|array
    *   The loaded post/comment entity (entities).
    */
   public function loadPost($pid) {
@@ -389,7 +392,7 @@ class OpignoPostsManager {
   /**
    * Get the list of available post/comment action links.
    *
-   * @param \Drupal\opigno_social\Entity\OpignoPostInterface $post
+   * @param OpignoPostInterface $post
    *   The post/comment entity to get actions for.
    *
    * @return array
@@ -454,7 +457,7 @@ class OpignoPostsManager {
    *   The name of the route.
    * @param array $params
    *   The route parameters.
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup|string $text
+   * @param TranslatableMarkup|string $text
    *   The link text.
    * @param string $action
    *   The action name. Needed to add the extra class to the link.
@@ -657,7 +660,7 @@ class OpignoPostsManager {
   /**
    * Prepare the render array to display the post attachment.
    *
-   * @param \Drupal\opigno_social\Entity\OpignoPostInterface|null $post
+   * @param OpignoPostInterface|null $post
    *   The post entity. Leave empty to display data based on the given
    *   attachment type (training/post/certificate), attachment entity type
    *   (group/opigno_module) and ID.
@@ -797,10 +800,10 @@ class OpignoPostsManager {
   /**
    * Get the post text with read more/show less link.
    *
-   * @param \Drupal\opigno_social\Entity\OpignoPostInterface $post
+   * @param OpignoPostInterface $post
    *   The post to get the text from.
    *
-   * @return array|\Drupal\Component\Render\MarkupInterface
+   * @return array|MarkupInterface
    *   The post text with read more/show less link.
    */
   public function renderReadMoreText(OpignoPostInterface $post) {
diff --git a/src/Services/UserAccessManager.php b/src/Services/UserAccessManager.php
index f849870..4b2ee33 100644
--- a/src/Services/UserAccessManager.php
+++ b/src/Services/UserAccessManager.php
@@ -16,23 +16,23 @@ class UserAccessManager {
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * The group membership loader service.
    *
-   * @var \Drupal\group\GroupMembershipLoaderInterface
+   * @var GroupMembershipLoaderInterface
    */
   protected $membershipLoader;
 
   /**
    * UserAccessManager constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
-   * @param \Drupal\group\GroupMembershipLoaderInterface $membership_loader
+   * @param GroupMembershipLoaderInterface $membership_loader
    *   The group membership loader service.
    */
   public function __construct(AccountInterface $account, GroupMembershipLoaderInterface $membership_loader) {
@@ -43,7 +43,7 @@ class UserAccessManager {
   /**
    * Check the access to the given profile info based on group permissions.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The user to check the access to.
    *
    * @return bool
@@ -80,7 +80,7 @@ class UserAccessManager {
   /**
    * Check if the current user can view the given user's private profile.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The user to check the access to.
    *
    * @return bool
@@ -101,7 +101,7 @@ class UserAccessManager {
   /**
    * Check if the current user can view the user's achievements page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The user to check the achievements page access to.
    *
    * @return bool
diff --git a/src/Services/UserConnectionManager.php b/src/Services/UserConnectionManager.php
index 46db588..fa871cf 100644
--- a/src/Services/UserConnectionManager.php
+++ b/src/Services/UserConnectionManager.php
@@ -52,35 +52,35 @@ class UserConnectionManager {
   /**
    * The cache service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * User the invitation entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface|null
+   * @var EntityStorageInterface|null
    */
   protected $invitationStorage = NULL;
 
   /**
    * User entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface|null
+   * @var EntityStorageInterface|null
    */
   protected $userStorage = NULL;
 
   /**
    * The CSRF token generator.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator
+   * @var CsrfTokenGenerator
    */
   protected $csrfToken;
 
   /**
    * The DB connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -94,7 +94,7 @@ class UserConnectionManager {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   public $user;
 
@@ -108,35 +108,35 @@ class UserConnectionManager {
   /**
    * Opigno user access manager.
    *
-   * @var \Drupal\opigno_social\Services\UserAccessManager
+   * @var UserAccessManager
    */
   protected $userAccessManager;
 
   /**
    * Opigno private messaging manager service.
    *
-   * @var \Drupal\opigno_messaging\Services\OpignoMessageThread
+   * @var OpignoMessageThread
    */
   protected $messageService;
 
   /**
    * UserConnectionManager constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache service.
-   * @param \Drupal\Core\Access\CsrfTokenGenerator $csrf_token
+   * @param CsrfTokenGenerator $csrf_token
    *   CSRF token generator service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The DB connection service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\opigno_social\Services\UserAccessManager $access_manager
+   * @param UserAccessManager $access_manager
    *   Opigno user access manager.
-   * @param \Drupal\opigno_messaging\Services\OpignoMessageThread $pm_service
+   * @param OpignoMessageThread $pm_service
    *   The private messages manager service.
    */
   public function __construct(
@@ -193,7 +193,7 @@ class UserConnectionManager {
    * @param string|int $invitee
    *   The invitee user ID.
    *
-   * @return \Drupal\opigno_social\Entity\UserInvitationInterface|null
+   * @return UserInvitationInterface|null
    *   The user invitation.
    */
   public function getInvitation($owner, $invitee = ''): ?UserInvitationInterface {
@@ -261,7 +261,7 @@ class UserConnectionManager {
    * @param string|int $owner
    *   Invitation owner user ID.
    *
-   * @return \Drupal\opigno_social\Entity\UserInvitationInterface|bool
+   * @return UserInvitationInterface|bool
    *   User invitation entity if it can be accepted, FALSE otherwise.
    */
   public function invitationCanBeAccepted($owner) {
@@ -281,7 +281,7 @@ class UserConnectionManager {
    * @param string|int $invitee
    *   Invitee user ID.
    *
-   * @return \Drupal\opigno_social\Entity\UserInvitationInterface|bool
+   * @return UserInvitationInterface|bool
    *   User invitation entity if it can be declined, FALSE otherwise.
    */
   public function invitationCanBeDeclined($owner, $invitee = '') {
@@ -295,7 +295,7 @@ class UserConnectionManager {
   /**
    * Protect the url with the CSRF token to make AJAX request secure.
    *
-   * @param \Drupal\Core\Url $url
+   * @param Url $url
    *   The url to be protected.
    */
   public function protectUrl(Url $url): void {
@@ -597,7 +597,7 @@ class UserConnectionManager {
     }
 
     $uid = $uid ?: $this->currentUid;
-    $img_path = drupal_get_path('theme', 'aristotle') . '/src/images/design/connections.svg';
+    $img_path = \Drupal::service('extension.list.theme')->getPath('aristotle') . '/src/images/design/connections.svg';
     $connections = count($this->getUserNetwork($uid));
 
     return [
@@ -605,7 +605,7 @@ class UserConnectionManager {
       '#count' => $connections,
       '#text' => $this->formatPlural($connections, 'Connection', 'Connections'),
       '#subtitle' => $uid === $this->currentUid ? $this->t('Manage connections') : '',
-      '#img' => file_exists($img_path) ? file_url_transform_relative(base_path() . $img_path) : '',
+      '#img' => file_exists($img_path) ? \Drupal::service('file_url_generator')->transformRelative(base_path() . $img_path) : '',
       '#url' => $uid === $this->currentUid ? Url::fromRoute('opigno_social.manage_connections')->toString() : '',
     ] + $build;
   }
