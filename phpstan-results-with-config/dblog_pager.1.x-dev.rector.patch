diff --git a/dblog_pager.info.yml b/dblog_pager.info.yml
index e335a0d..5ad6b25 100644
--- a/dblog_pager.info.yml
+++ b/dblog_pager.info.yml
@@ -1,7 +1,7 @@
 name: 'DBLog Pager'
 type: module
 description: 'Provides pager functionality to the DBLog event pages (/admin/reports/dblog/event/{event_id}).'
-core_version_requirement: ^8.8.0 || ^9.0
+core_version_requirement: ^8.8.0 || ^9.0 || ^10
 package: Logging
 dependencies:
   - dblog
diff --git a/src/Controller/DblogPagerController.php b/src/Controller/DblogPagerController.php
index 6eb29ae..f888f86 100644
--- a/src/Controller/DblogPagerController.php
+++ b/src/Controller/DblogPagerController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\dblog_pager\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\dblog\Controller\DbLogController;
@@ -24,7 +25,7 @@ class DblogPagerController extends DbLogController {
    * @param bool $id
    *   Controls what return value type is.
    *
-   * @return \Drupal\Core\Link|int
+   * @return Link|int
    *   if bool $id  is TRUE, return the ID, otherwise return formatted link.
    */
   private function getLink(array $query_args, array $filter = NULL, $id = FALSE) {
@@ -63,7 +64,7 @@ class DblogPagerController extends DbLogController {
    * @param int $event_id
    *   Unique ID of the database log message.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   If the ID is located in the Database Logging table, a build array in the
    *   format expected by drupal_render();
    */
diff --git a/tests/src/Functional/DblogPagerTest.php b/tests/src/Functional/DblogPagerTest.php
index b5e89d8..a678796 100644
--- a/tests/src/Functional/DblogPagerTest.php
+++ b/tests/src/Functional/DblogPagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\dblog_pager\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -20,7 +21,7 @@ class DblogPagerTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -32,7 +33,7 @@ class DblogPagerTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration', 'access site reports']);
   }
@@ -43,8 +44,11 @@ class DblogPagerTest extends BrowserTestBase {
   public function testAdminPath() {
     $this->drupalLogin($this->user);
     $this->drupalGet(Url::fromRoute('system.logging_settings'));
-    $this->assertResponse(200);
-    $this->assertText('Show First/Last links');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Show First/Last links');
   }
 
   /**
@@ -53,7 +57,7 @@ class DblogPagerTest extends BrowserTestBase {
   public function testLogEntryLoad() {
     // View the database log report (to generate access denied event).
     $this->drupalGet('admin/reports/dblog');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Generate a 2nd log event.
     $this->drupalGet('admin/reports/dblog');
@@ -61,15 +65,15 @@ class DblogPagerTest extends BrowserTestBase {
     // Login user and verify correct links on event details page.
     $this->drupalLogin($this->user);
     $this->drupalGet('admin/reports/dblog/event/1');
-    $this->assertResponse(200);
-    $this->assertLink('Next');
-    $this->assertNoLink('Previous');
-    $this->assertNoLink('First');
-    $this->assertLink('Last');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->linkExists('Next');
+    $this->assertSession()->linkNotExists('Previous');
+    $this->assertSession()->linkNotExists('First');
+    $this->assertSession()->linkExists('Last');
     $this->drupalGet('admin/reports/dblog/event/2');
-    $this->assertResponse(200);
-    $this->assertLink('Previous');
-    $this->assertLink('First');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->linkExists('Previous');
+    $this->assertSession()->linkExists('First');
   }
 
 }
