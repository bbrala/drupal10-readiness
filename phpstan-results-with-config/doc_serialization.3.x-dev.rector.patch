diff --git a/src/Encoder/Doc.php b/src/Encoder/Doc.php
index 490a714..aed70ae 100644
--- a/src/Encoder/Doc.php
+++ b/src/Encoder/Doc.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\doc_serialization\Encoder;
 
+use Drupal\views\ViewExecutable;
 use Drupal\Component\Serialization\Exception\InvalidDataTypeException;
 use Drupal\Component\Utility\Html;
 use PhpOffice\PhpWord\IOFactory;
@@ -70,7 +71,7 @@ class Doc implements EncoderInterface {
 
       if (!empty($context)) {
         if (!empty($context['views_style_plugin']->view)) {
-          /** @var \Drupal\views\ViewExecutable $view */
+          /** @var ViewExecutable $view */
           $view = $context['views_style_plugin']->view;
           // Set the document title based on the view title within the context.
           if (!empty($view->getTitle())) {
@@ -102,7 +103,7 @@ class Doc implements EncoderInterface {
   /**
    * Set document data.
    *
-   * @param \PhpOffice\PhpWord\PhpWord $word
+   * @param PhpWord $word
    *   The document to put the data in.
    * @param array $data
    *   The data to be put in the document.
@@ -175,7 +176,7 @@ class Doc implements EncoderInterface {
     $labels = [];
     if ($first_row = reset($data)) {
       if (!empty($context)) {
-        /** @var \Drupal\views\ViewExecutable $view */
+        /** @var ViewExecutable $view */
         $view = $context['views_style_plugin']->view;
         $fields = $view->field;
         foreach ($first_row as $key => $value) {
diff --git a/src/Encoder/Docx.php b/src/Encoder/Docx.php
index 65be6c6..708bda5 100644
--- a/src/Encoder/Docx.php
+++ b/src/Encoder/Docx.php
@@ -43,10 +43,10 @@ class Docx implements EncoderInterface {
   }
 
   /**
-  * {@inheritdoc}
-  *
-  * @throws \Drupal\Component\Serialization\Exception\InvalidDataTypeException
-  */
+   * {@inheritdoc}
+   *
+   * @throws InvalidDataTypeException
+   */
   public function encode($data, $format, array $context = []) {
     switch (gettype($data)) {
       case 'array':
diff --git a/src/EventSubscriber/Subscriber.php b/src/EventSubscriber/Subscriber.php
index 77bdfae..28a32cf 100644
--- a/src/EventSubscriber/Subscriber.php
+++ b/src/EventSubscriber/Subscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\doc_serialization\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -22,10 +22,10 @@ class Subscriber implements EventSubscriberInterface {
   /**
    * Register content formats on the request object.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The event to get the request object to register on.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $event->getRequest()->setFormat('docx', ['application/vnd.openxmlformats-officedocument.wordprocessingml.document']);
   }
 
diff --git a/src/Plugin/views/display/WordExport.php b/src/Plugin/views/display/WordExport.php
index a466005..03e1044 100644
--- a/src/Plugin/views/display/WordExport.php
+++ b/src/Plugin/views/display/WordExport.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\doc_serialization\Plugin\views\display;
 
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Cache\CacheableResponse;
 use Drupal\Core\Form\FormStateInterface;
@@ -50,7 +51,7 @@ class WordExport extends RestExport {
     $response = new CacheableResponse('', 200);
     $build['#response'] = $response;
 
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
 
     $output = (string) $renderer->renderRoot($build);
diff --git a/src/Plugin/views/style/WordExport.php b/src/Plugin/views/style/WordExport.php
index 54c877f..1f6619b 100644
--- a/src/Plugin/views/style/WordExport.php
+++ b/src/Plugin/views/style/WordExport.php
@@ -29,7 +29,7 @@ class WordExport extends Serializer {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Symfony\Component\Serializer\SerializerInterface $serializer
+   * @param SerializerInterface $serializer
    *   The serializer for the plugin instance.
    * @param array $serializer_formats
    *   The serializer formats for the plugin instance.
diff --git a/tests/src/Unit/EventSubscriber/SubscriberTest.php b/tests/src/Unit/EventSubscriber/SubscriberTest.php
index d2cbd8a..9f5ef3f 100644
--- a/tests/src/Unit/EventSubscriber/SubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/SubscriberTest.php
@@ -2,10 +2,11 @@
 
 namespace Drupal\Tests\doc_serialization\Unit\EventSubscriber;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Tests\UnitTestCase;
 use Drupal\doc_serialization\EventSubscriber\Subscriber;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 
 /**
  * Tests the DOC serialization event subscriber.
@@ -16,15 +17,16 @@ use Symfony\Component\HttpKernel\Event\GetResponseEvent;
  */
 class SubscriberTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * @covers ::onKernelRequest
    */
   public function testOnKernelRequest() {
     // Both doc and docx should be set.
-    /** @var \Symfony\Component\HttpFoundation\Request $request */
+    /** @var Request $request */
     $request = $this->prophesize(Request::class);
     $request->setFormat('docx', ['application/vnd.openxmlformats-officedocument.wordprocessingml.document'])->shouldBeCalled();
-    $event = $this->prophesize(GetResponseEvent::class);
+    $event = $this->prophesize(RequestEvent::class);
     $event->getRequest()->willReturn($request->reveal());
     $subscriber = new Subscriber();
     $subscriber->onKernelRequest($event->reveal());
diff --git a/vendor/composer/autoload_real.php b/vendor/composer/autoload_real.php
index 0f9ef9e..a73f433 100644
--- a/vendor/composer/autoload_real.php
+++ b/vendor/composer/autoload_real.php
@@ -1,7 +1,8 @@
 <?php
 
+use Composer\Autoload\ClassLoader;
+use Composer\Autoload\ComposerStaticInit51c476b0fff401a1d6a2636b55420e13;
 // autoload_real.php @generated by Composer
-
 class ComposerAutoloaderInit51c476b0fff401a1d6a2636b55420e13
 {
     private static $loader;
@@ -20,14 +21,14 @@ class ComposerAutoloaderInit51c476b0fff401a1d6a2636b55420e13
         }
 
         spl_autoload_register(array('ComposerAutoloaderInit51c476b0fff401a1d6a2636b55420e13', 'loadClassLoader'), true, true);
-        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
+        self::$loader = $loader = new ClassLoader();
         spl_autoload_unregister(array('ComposerAutoloaderInit51c476b0fff401a1d6a2636b55420e13', 'loadClassLoader'));
 
         $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION');
         if ($useStaticLoader) {
             require_once __DIR__ . '/autoload_static.php';
 
-            call_user_func(\Composer\Autoload\ComposerStaticInit51c476b0fff401a1d6a2636b55420e13::getInitializer($loader));
+            call_user_func(ComposerStaticInit51c476b0fff401a1d6a2636b55420e13::getInitializer($loader));
         } else {
             $map = require __DIR__ . '/autoload_namespaces.php';
             foreach ($map as $namespace => $path) {
diff --git a/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php b/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php
index 2bc4a32..91ce915 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php
@@ -5,7 +5,7 @@ namespace Common\Tests\Adapter\Zip;
 use PhpOffice\Common\Adapter\Zip\PclZipAdapter;
 use PhpOffice\Common\Tests\TestHelperZip;
 
-class PclZipAdapterTest extends \PHPUnit_Framework_TestCase
+class PclZipAdapterTest extends \PHPUnit\Framework\TestCase
 {
     protected $zipTest;
 
diff --git a/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php b/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php
index 2799b33..fe5ab4f 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php
@@ -5,7 +5,7 @@ namespace Common\Tests\Adapter\Zip;
 use PhpOffice\Common\Adapter\Zip\ZipArchiveAdapter;
 use PhpOffice\Common\Tests\TestHelperZip;
 
-class ZipArchiveAdapterTest extends \PHPUnit_Framework_TestCase
+class ZipArchiveAdapterTest extends \PHPUnit\Framework\TestCase
 {
     protected $zipTest;
 
diff --git a/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php b/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php
index 7ee8566..ff4c792 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php
@@ -21,7 +21,7 @@ use PhpOffice\Common\Autoloader;
 /**
  * Test class for Autoloader
  */
-class AutoloaderTest extends \PHPUnit_Framework_TestCase
+class AutoloaderTest extends \PHPUnit\Framework\TestCase
 {
     /**
      * Register
diff --git a/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php b/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php
index 6b0b9b9..bbcf4e3 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\Drawing;
  *
  * @coversDefaultClass PhpOffice\Common\IOFactory
  */
-class DrawingTest extends \PHPUnit_Framework_TestCase
+class DrawingTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/common/tests/Common/Tests/FileTest.php b/vendor/phpoffice/common/tests/Common/Tests/FileTest.php
index e19f796..439cc7b 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/FileTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/FileTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\File;
  *
  * @coversDefaultClass PhpOffice\Common\File
  */
-class FileTest extends \PHPUnit_Framework_TestCase
+class FileTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/common/tests/Common/Tests/FontTest.php b/vendor/phpoffice/common/tests/Common/Tests/FontTest.php
index 6d16f20..c661502 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/FontTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/FontTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\Font;
  *
  * @coversDefaultClass PhpOffice\Common\Font
  */
-class FontTest extends \PHPUnit_Framework_TestCase
+class FontTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/common/tests/Common/Tests/TextTest.php b/vendor/phpoffice/common/tests/Common/Tests/TextTest.php
index 0ee2c32..2a216c6 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/TextTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/TextTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\Text;
  *
  * @coversDefaultClass PhpOffice\Common\Text
  */
-class TextTest extends \PHPUnit_Framework_TestCase
+class TextTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php b/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php
index 9b3dee5..30222e5 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\XMLWriter;
  *
  * @coversDefaultClass PhpOffice\Common\XMLWriter
  */
-class XMLWriterTest extends \PHPUnit_Framework_TestCase
+class XMLWriterTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/common/tests/bootstrap.php b/vendor/phpoffice/common/tests/bootstrap.php
index 35fd6f1..577d6f8 100644
--- a/vendor/phpoffice/common/tests/bootstrap.php
+++ b/vendor/phpoffice/common/tests/bootstrap.php
@@ -1,4 +1,5 @@
 <?php
+use PhpOffice\Common\Autoloader;
 /**
  * This file is part of PHPOffice Common
  *
@@ -49,4 +50,4 @@ spl_autoload_register(function ($class) {
 });
 
 require_once __DIR__ . "/../src/Common/Autoloader.php";
-\PhpOffice\Common\Autoloader::register();
+Autoloader::register();
diff --git a/vendor/phpoffice/phpword/samples/Sample_01_SimpleText.php b/vendor/phpoffice/phpword/samples/Sample_01_SimpleText.php
index 5a3393b..480b39e 100644
--- a/vendor/phpoffice/phpword/samples/Sample_01_SimpleText.php
+++ b/vendor/phpoffice/phpword/samples/Sample_01_SimpleText.php
@@ -1,4 +1,7 @@
 <?php
+use PhpOffice\PhpWord\Style\Language;
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\Style\Font;
 use PhpOffice\PhpWord\Style\Paragraph;
 
@@ -7,16 +10,16 @@ include_once 'Sample_Header.php';
 // New Word Document
 echo date('H:i:s') , ' Create new PhpWord object' , EOL;
 
-$languageEnGb = new \PhpOffice\PhpWord\Style\Language(\PhpOffice\PhpWord\Style\Language::EN_GB);
+$languageEnGb = new Language(Language::EN_GB);
 
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 $phpWord->getSettings()->setThemeFontLang($languageEnGb);
 
 $fontStyleName = 'rStyle';
 $phpWord->addFontStyle($fontStyleName, array('bold' => true, 'italic' => true, 'size' => 16, 'allCaps' => true, 'doubleStrikethrough' => true));
 
 $paragraphStyleName = 'pStyle';
-$phpWord->addParagraphStyle($paragraphStyleName, array('alignment' => \PhpOffice\PhpWord\SimpleType\Jc::CENTER, 'spaceAfter' => 100));
+$phpWord->addParagraphStyle($paragraphStyleName, array('alignment' => Jc::CENTER, 'spaceAfter' => 100));
 
 $phpWord->addTitleStyle(1, array('bold' => true), array('spaceAfter' => 240));
 
@@ -29,7 +32,7 @@ $section->addText('Hello World!');
 
 // $pStyle = new Font();
 // $pStyle->setLang()
-$section->addText('Ce texte-ci est en français.', array('lang' => \PhpOffice\PhpWord\Style\Language::FR_BE));
+$section->addText('Ce texte-ci est en français.', array('lang' => Language::FR_BE));
 
 // Two text break
 $section->addTextBreak(2);
diff --git a/vendor/phpoffice/phpword/samples/Sample_02_TabStops.php b/vendor/phpoffice/phpword/samples/Sample_02_TabStops.php
index 4f588ee..4f0a03a 100644
--- a/vendor/phpoffice/phpword/samples/Sample_02_TabStops.php
+++ b/vendor/phpoffice/phpword/samples/Sample_02_TabStops.php
@@ -1,9 +1,11 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Style\Tab;
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // Define styles
 $multipleTabsStyleName = 'multipleTab';
@@ -11,18 +13,18 @@ $phpWord->addParagraphStyle(
     $multipleTabsStyleName,
     array(
         'tabs' => array(
-            new \PhpOffice\PhpWord\Style\Tab('left', 1550),
-            new \PhpOffice\PhpWord\Style\Tab('center', 3200),
-            new \PhpOffice\PhpWord\Style\Tab('right', 5300),
+            new Tab('left', 1550),
+            new Tab('center', 3200),
+            new Tab('right', 5300),
         ),
     )
 );
 
 $rightTabStyleName = 'rightTab';
-$phpWord->addParagraphStyle($rightTabStyleName, array('tabs' => array(new \PhpOffice\PhpWord\Style\Tab('right', 9090))));
+$phpWord->addParagraphStyle($rightTabStyleName, array('tabs' => array(new Tab('right', 9090))));
 
 $leftTabStyleName = 'centerTab';
-$phpWord->addParagraphStyle($leftTabStyleName, array('tabs' => array(new \PhpOffice\PhpWord\Style\Tab('center', 4680))));
+$phpWord->addParagraphStyle($leftTabStyleName, array('tabs' => array(new Tab('center', 4680))));
 
 // New portrait section
 $section = $phpWord->addSection();
diff --git a/vendor/phpoffice/phpword/samples/Sample_03_Sections.php b/vendor/phpoffice/phpword/samples/Sample_03_Sections.php
index a7b5b13..65cc27e 100644
--- a/vendor/phpoffice/phpword/samples/Sample_03_Sections.php
+++ b/vendor/phpoffice/phpword/samples/Sample_03_Sections.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New portrait section
 $section = $phpWord->addSection(array('borderColor' => '00FF00', 'borderSize' => 12));
diff --git a/vendor/phpoffice/phpword/samples/Sample_04_Textrun.php b/vendor/phpoffice/phpword/samples/Sample_04_Textrun.php
index 48978dd..1028132 100644
--- a/vendor/phpoffice/phpword/samples/Sample_04_Textrun.php
+++ b/vendor/phpoffice/phpword/samples/Sample_04_Textrun.php
@@ -1,9 +1,11 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Style\Font;
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // Define styles
 $paragraphStyleName = 'pStyle';
@@ -16,7 +18,7 @@ $coloredFontStyleName = 'ColoredText';
 $phpWord->addFontStyle($coloredFontStyleName, array('color' => 'FF8080', 'bgColor' => 'FFFFCC'));
 
 $linkFontStyleName = 'NLink';
-$phpWord->addLinkStyle($linkFontStyleName, array('color' => '0000FF', 'underline' => \PhpOffice\PhpWord\Style\Font::UNDERLINE_SINGLE));
+$phpWord->addLinkStyle($linkFontStyleName, array('color' => '0000FF', 'underline' => Font::UNDERLINE_SINGLE));
 
 // New portrait section
 $section = $phpWord->addSection();
diff --git a/vendor/phpoffice/phpword/samples/Sample_05_Multicolumn.php b/vendor/phpoffice/phpword/samples/Sample_05_Multicolumn.php
index f7cefa5..b12fe17 100644
--- a/vendor/phpoffice/phpword/samples/Sample_05_Multicolumn.php
+++ b/vendor/phpoffice/phpword/samples/Sample_05_Multicolumn.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 $filler = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
         . 'Nulla fermentum, tortor id adipiscing adipiscing, tortor turpis commodo. '
         . 'Donec vulputate iaculis metus, vel luctus dolor hendrerit ac. '
diff --git a/vendor/phpoffice/phpword/samples/Sample_06_Footnote.php b/vendor/phpoffice/phpword/samples/Sample_06_Footnote.php
index 19d6a52..2918d81 100644
--- a/vendor/phpoffice/phpword/samples/Sample_06_Footnote.php
+++ b/vendor/phpoffice/phpword/samples/Sample_06_Footnote.php
@@ -1,4 +1,7 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Settings;
+use PhpOffice\PhpWord\Style\Font;
 use PhpOffice\PhpWord\ComplexType\FootnoteProperties;
 use PhpOffice\PhpWord\SimpleType\NumberFormat;
 
@@ -6,8 +9,8 @@ include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
-\PhpOffice\PhpWord\Settings::setCompatibility(false);
+$phpWord = new PhpWord();
+Settings::setCompatibility(false);
 
 // Define styles
 $paragraphStyleName = 'pStyle';
@@ -20,7 +23,7 @@ $coloredFontStyleName = 'ColoredText';
 $phpWord->addFontStyle($coloredFontStyleName, array('color' => 'FF8080', 'bgColor' => 'FFFFCC'));
 
 $linkFontStyleName = 'NLink';
-$phpWord->addLinkStyle($linkFontStyleName, array('color' => '0000FF', 'underline' => \PhpOffice\PhpWord\Style\Font::UNDERLINE_SINGLE));
+$phpWord->addLinkStyle($linkFontStyleName, array('color' => '0000FF', 'underline' => Font::UNDERLINE_SINGLE));
 
 // New portrait section
 $section = $phpWord->addSection();
diff --git a/vendor/phpoffice/phpword/samples/Sample_07_TemplateCloneRow.php b/vendor/phpoffice/phpword/samples/Sample_07_TemplateCloneRow.php
index e845362..ca646dd 100644
--- a/vendor/phpoffice/phpword/samples/Sample_07_TemplateCloneRow.php
+++ b/vendor/phpoffice/phpword/samples/Sample_07_TemplateCloneRow.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\TemplateProcessor;
 include_once 'Sample_Header.php';
 
 // Template processor instance creation
 echo date('H:i:s'), ' Creating new TemplateProcessor instance...', EOL;
-$templateProcessor = new \PhpOffice\PhpWord\TemplateProcessor('resources/Sample_07_TemplateCloneRow.docx');
+$templateProcessor = new TemplateProcessor('resources/Sample_07_TemplateCloneRow.docx');
 
 // Variables on different parts of document
 $templateProcessor->setValue('weekday', date('l'));            // On section/content
diff --git a/vendor/phpoffice/phpword/samples/Sample_08_ParagraphPagination.php b/vendor/phpoffice/phpword/samples/Sample_08_ParagraphPagination.php
index 3c21b13..8dd365d 100644
--- a/vendor/phpoffice/phpword/samples/Sample_08_ParagraphPagination.php
+++ b/vendor/phpoffice/phpword/samples/Sample_08_ParagraphPagination.php
@@ -1,13 +1,16 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\SimpleType\Jc;
+use PhpOffice\PhpWord\Shared\Converter;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 $phpWord->setDefaultParagraphStyle(
     array(
-        'alignment'  => \PhpOffice\PhpWord\SimpleType\Jc::BOTH,
-        'spaceAfter' => \PhpOffice\PhpWord\Shared\Converter::pointToTwip(12),
+        'alignment'  => Jc::BOTH,
+        'spaceAfter' => Converter::pointToTwip(12),
         'spacing'    => 120,
     )
 );
diff --git a/vendor/phpoffice/phpword/samples/Sample_09_Tables.php b/vendor/phpoffice/phpword/samples/Sample_09_Tables.php
index c4be7c9..f6bcdaf 100644
--- a/vendor/phpoffice/phpword/samples/Sample_09_Tables.php
+++ b/vendor/phpoffice/phpword/samples/Sample_09_Tables.php
@@ -1,9 +1,13 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\SimpleType\JcTable;
+use PhpOffice\PhpWord\Style\Cell;
+use PhpOffice\PhpWord\SimpleType\Jc;
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 $section = $phpWord->addSection();
 $header = array('size' => 16, 'bold' => true);
 
@@ -27,10 +31,10 @@ $section->addTextBreak(1);
 $section->addText('Fancy table', $header);
 
 $fancyTableStyleName = 'Fancy Table';
-$fancyTableStyle = array('borderSize' => 6, 'borderColor' => '006699', 'cellMargin' => 80, 'alignment' => \PhpOffice\PhpWord\SimpleType\JcTable::CENTER);
+$fancyTableStyle = array('borderSize' => 6, 'borderColor' => '006699', 'cellMargin' => 80, 'alignment' => JcTable::CENTER);
 $fancyTableFirstRowStyle = array('borderBottomSize' => 18, 'borderBottomColor' => '0000FF', 'bgColor' => '66BBFF');
 $fancyTableCellStyle = array('valign' => 'center');
-$fancyTableCellBtlrStyle = array('valign' => 'center', 'textDirection' => \PhpOffice\PhpWord\Style\Cell::TEXT_DIR_BTLR);
+$fancyTableCellBtlrStyle = array('valign' => 'center', 'textDirection' => Cell::TEXT_DIR_BTLR);
 $fancyTableFontStyle = array('bold' => true);
 $phpWord->addTableStyle($fancyTableStyleName, $fancyTableStyle, $fancyTableFirstRowStyle);
 $table = $section->addTable($fancyTableStyleName);
@@ -66,7 +70,7 @@ $fancyTableStyle = array('borderSize' => 6, 'borderColor' => '999999');
 $cellRowSpan = array('vMerge' => 'restart', 'valign' => 'center', 'bgColor' => 'FFFF00');
 $cellRowContinue = array('vMerge' => 'continue');
 $cellColSpan = array('gridSpan' => 2, 'valign' => 'center');
-$cellHCentered = array('alignment' => \PhpOffice\PhpWord\SimpleType\Jc::CENTER);
+$cellHCentered = array('alignment' => Jc::CENTER);
 $cellVCentered = array('valign' => 'center');
 
 $spanTableStyleName = 'Colspan Rowspan';
@@ -133,10 +137,10 @@ $row->addCell()->addText('3');
 $section->addTextBreak(2);
 $section->addText('Nested table in a centered and 50% width table.', $header);
 
-$table = $section->addTable(array('width' => 50 * 50, 'unit' => 'pct', 'alignment' => \PhpOffice\PhpWord\SimpleType\JcTable::CENTER));
+$table = $section->addTable(array('width' => 50 * 50, 'unit' => 'pct', 'alignment' => JcTable::CENTER));
 $cell = $table->addRow()->addCell();
 $cell->addText('This cell contains nested table.');
-$innerCell = $cell->addTable(array('alignment' => \PhpOffice\PhpWord\SimpleType\JcTable::CENTER))->addRow()->addCell();
+$innerCell = $cell->addTable(array('alignment' => JcTable::CENTER))->addRow()->addCell();
 $innerCell->addText('Inside nested table');
 
 // Save file
diff --git a/vendor/phpoffice/phpword/samples/Sample_10_EastAsianFontStyle.php b/vendor/phpoffice/phpword/samples/Sample_10_EastAsianFontStyle.php
index 87345ae..68fc3b7 100644
--- a/vendor/phpoffice/phpword/samples/Sample_10_EastAsianFontStyle.php
+++ b/vendor/phpoffice/phpword/samples/Sample_10_EastAsianFontStyle.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 $section = $phpWord->addSection();
 $header = array('size' => 16, 'bold' => true);
 //1.Use EastAisa FontStyle
diff --git a/vendor/phpoffice/phpword/samples/Sample_11_ReadWord2007.php b/vendor/phpoffice/phpword/samples/Sample_11_ReadWord2007.php
index c0b54c7..d550e08 100644
--- a/vendor/phpoffice/phpword/samples/Sample_11_ReadWord2007.php
+++ b/vendor/phpoffice/phpword/samples/Sample_11_ReadWord2007.php
@@ -1,4 +1,5 @@
 <?php
+use PhpOffice\PhpWord\IOFactory;
 include_once 'Sample_Header.php';
 
 // Read contents
@@ -6,7 +7,7 @@ $name = basename(__FILE__, '.php');
 $source = __DIR__ . "/resources/{$name}.docx";
 
 echo date('H:i:s'), " Reading contents from `{$source}`", EOL;
-$phpWord = \PhpOffice\PhpWord\IOFactory::load($source);
+$phpWord = IOFactory::load($source);
 
 // Save file
 echo write($phpWord, basename(__FILE__, '.php'), $writers);
diff --git a/vendor/phpoffice/phpword/samples/Sample_11_ReadWord97.php b/vendor/phpoffice/phpword/samples/Sample_11_ReadWord97.php
index 68a30d3..e401a3b 100644
--- a/vendor/phpoffice/phpword/samples/Sample_11_ReadWord97.php
+++ b/vendor/phpoffice/phpword/samples/Sample_11_ReadWord97.php
@@ -1,17 +1,18 @@
 <?php
+use PhpOffice\PhpWord\IOFactory;
 include_once 'Sample_Header.php';
 
 // Read contents
 $name = basename(__FILE__, '.php');
 $source = "resources/{$name}.doc";
 echo date('H:i:s'), " Reading contents from `{$source}`", EOL;
-$phpWord = \PhpOffice\PhpWord\IOFactory::load($source, 'MsDoc');
+$phpWord = IOFactory::load($source, 'MsDoc');
 
 // (Re)write contents
 $writers = array('Word2007' => 'docx', 'ODText' => 'odt', 'RTF' => 'rtf');
 foreach ($writers as $writer => $extension) {
     echo date('H:i:s'), " Write to {$writer} format", EOL;
-    $xmlWriter = \PhpOffice\PhpWord\IOFactory::createWriter($phpWord, $writer);
+    $xmlWriter = IOFactory::createWriter($phpWord, $writer);
     $xmlWriter->save("{$name}.{$extension}");
     rename("{$name}.{$extension}", "results/{$name}.{$extension}");
 }
diff --git a/vendor/phpoffice/phpword/samples/Sample_12_HeaderFooter.php b/vendor/phpoffice/phpword/samples/Sample_12_HeaderFooter.php
index b99d81f..9d9fea1 100644
--- a/vendor/phpoffice/phpword/samples/Sample_12_HeaderFooter.php
+++ b/vendor/phpoffice/phpword/samples/Sample_12_HeaderFooter.php
@@ -1,9 +1,11 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\SimpleType\Jc;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New portrait section
 $section = $phpWord->addSection();
@@ -17,7 +19,7 @@ $cell = $table->addCell(4500);
 $textrun = $cell->addTextRun();
 $textrun->addText('This is the header with ');
 $textrun->addLink('https://github.com/PHPOffice/PHPWord', 'PHPWord on GitHub');
-$table->addCell(4500)->addImage('resources/PhpWord.png', array('width' => 80, 'height' => 80, 'alignment' => \PhpOffice\PhpWord\SimpleType\Jc::END));
+$table->addCell(4500)->addImage('resources/PhpWord.png', array('width' => 80, 'height' => 80, 'alignment' => Jc::END));
 
 // Add header for all other pages
 $subsequent = $section->addHeader();
@@ -26,7 +28,7 @@ $subsequent->addImage('resources/_mars.jpg', array('width' => 80, 'height' => 80
 
 // Add footer
 $footer = $section->addFooter();
-$footer->addPreserveText('Page {PAGE} of {NUMPAGES}.', null, array('alignment' => \PhpOffice\PhpWord\SimpleType\Jc::CENTER));
+$footer->addPreserveText('Page {PAGE} of {NUMPAGES}.', null, array('alignment' => Jc::CENTER));
 $footer->addLink('https://github.com/PHPOffice/PHPWord', 'PHPWord on GitHub');
 
 // Write some text
diff --git a/vendor/phpoffice/phpword/samples/Sample_13_Images.php b/vendor/phpoffice/phpword/samples/Sample_13_Images.php
index 6c7033b..940e14a 100644
--- a/vendor/phpoffice/phpword/samples/Sample_13_Images.php
+++ b/vendor/phpoffice/phpword/samples/Sample_13_Images.php
@@ -1,9 +1,13 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\SimpleType\Jc;
+use PhpOffice\PhpWord\Shared\Converter;
+use PhpOffice\PhpWord\Style\Image;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // Begin code
 $section = $phpWord->addSection();
@@ -12,7 +16,7 @@ $section->addImage('resources/_mars.jpg');
 $section->addTextBreak(2);
 
 $section->addText('Local image with styles:');
-$section->addImage('resources/_earth.jpg', array('width' => 210, 'height' => 210, 'alignment' => \PhpOffice\PhpWord\SimpleType\Jc::CENTER));
+$section->addImage('resources/_earth.jpg', array('width' => 210, 'height' => 210, 'alignment' => Jc::CENTER));
 $section->addTextBreak(2);
 
 // Remote image
@@ -52,14 +56,14 @@ $section->addText('Absolute positioning: see top right corner of page');
 $section->addImage(
     'resources/_mars.jpg',
     array(
-        'width'            => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(3),
-        'height'           => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(3),
-        'positioning'      => \PhpOffice\PhpWord\Style\Image::POSITION_ABSOLUTE,
-        'posHorizontal'    => \PhpOffice\PhpWord\Style\Image::POSITION_HORIZONTAL_RIGHT,
-        'posHorizontalRel' => \PhpOffice\PhpWord\Style\Image::POSITION_RELATIVE_TO_PAGE,
-        'posVerticalRel'   => \PhpOffice\PhpWord\Style\Image::POSITION_RELATIVE_TO_PAGE,
-        'marginLeft'       => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(15.5),
-        'marginTop'        => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(1.55),
+        'width'            => Converter::cmToPixel(3),
+        'height'           => Converter::cmToPixel(3),
+        'positioning'      => Image::POSITION_ABSOLUTE,
+        'posHorizontal'    => Image::POSITION_HORIZONTAL_RIGHT,
+        'posHorizontalRel' => Image::POSITION_RELATIVE_TO_PAGE,
+        'posVerticalRel'   => Image::POSITION_RELATIVE_TO_PAGE,
+        'marginLeft'       => Converter::cmToPixel(15.5),
+        'marginTop'        => Converter::cmToPixel(1.55),
     )
 );
 
@@ -70,13 +74,13 @@ $section->addText('Vertical position top relative to line');
 $section->addImage(
     'resources/_mars.jpg',
     array(
-        'width'            => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(3),
-        'height'           => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(3),
-        'positioning'      => \PhpOffice\PhpWord\Style\Image::POSITION_RELATIVE,
-        'posHorizontal'    => \PhpOffice\PhpWord\Style\Image::POSITION_HORIZONTAL_CENTER,
-        'posHorizontalRel' => \PhpOffice\PhpWord\Style\Image::POSITION_RELATIVE_TO_COLUMN,
-        'posVertical'      => \PhpOffice\PhpWord\Style\Image::POSITION_VERTICAL_TOP,
-        'posVerticalRel'   => \PhpOffice\PhpWord\Style\Image::POSITION_RELATIVE_TO_LINE,
+        'width'            => Converter::cmToPixel(3),
+        'height'           => Converter::cmToPixel(3),
+        'positioning'      => Image::POSITION_RELATIVE,
+        'posHorizontal'    => Image::POSITION_HORIZONTAL_CENTER,
+        'posHorizontalRel' => Image::POSITION_RELATIVE_TO_COLUMN,
+        'posVertical'      => Image::POSITION_VERTICAL_TOP,
+        'posVerticalRel'   => Image::POSITION_RELATIVE_TO_LINE,
     )
 );
 
diff --git a/vendor/phpoffice/phpword/samples/Sample_14_ListItem.php b/vendor/phpoffice/phpword/samples/Sample_14_ListItem.php
index 689ac3d..e97599b 100644
--- a/vendor/phpoffice/phpword/samples/Sample_14_ListItem.php
+++ b/vendor/phpoffice/phpword/samples/Sample_14_ListItem.php
@@ -1,9 +1,11 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Style\ListItem;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // Define styles
 $fontStyleName = 'myOwnStyle';
@@ -24,7 +26,7 @@ $phpWord->addNumberingStyle(
     )
 );
 
-$predefinedMultilevelStyle = array('listType' => \PhpOffice\PhpWord\Style\ListItem::TYPE_NUMBER_NESTED);
+$predefinedMultilevelStyle = array('listType' => ListItem::TYPE_NUMBER_NESTED);
 
 // New section
 $section = $phpWord->addSection();
diff --git a/vendor/phpoffice/phpword/samples/Sample_15_Link.php b/vendor/phpoffice/phpword/samples/Sample_15_Link.php
index 86c7973..99e9c83 100644
--- a/vendor/phpoffice/phpword/samples/Sample_15_Link.php
+++ b/vendor/phpoffice/phpword/samples/Sample_15_Link.php
@@ -1,9 +1,11 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Style\Font;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // Define styles
 $linkFontStyleName = 'myOwnLinStyle';
@@ -16,7 +18,7 @@ $section = $phpWord->addSection();
 $section->addLink(
     'https://github.com/PHPOffice/PHPWord',
     'PHPWord on GitHub',
-    array('color' => '0000FF', 'underline' => \PhpOffice\PhpWord\Style\Font::UNDERLINE_SINGLE)
+    array('color' => '0000FF', 'underline' => Font::UNDERLINE_SINGLE)
 );
 $section->addTextBreak(2);
 $section->addLink('http://www.bing.com', null, $linkFontStyleName);
diff --git a/vendor/phpoffice/phpword/samples/Sample_16_Object.php b/vendor/phpoffice/phpword/samples/Sample_16_Object.php
index 8b05b9e..4fea442 100644
--- a/vendor/phpoffice/phpword/samples/Sample_16_Object.php
+++ b/vendor/phpoffice/phpword/samples/Sample_16_Object.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // Begin code
 $section = $phpWord->addSection();
diff --git a/vendor/phpoffice/phpword/samples/Sample_17_TitleTOC.php b/vendor/phpoffice/phpword/samples/Sample_17_TitleTOC.php
index f99b73e..fec00ae 100644
--- a/vendor/phpoffice/phpword/samples/Sample_17_TitleTOC.php
+++ b/vendor/phpoffice/phpword/samples/Sample_17_TitleTOC.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 $phpWord->getSettings()->setUpdateFields(true);
 
 // New section
diff --git a/vendor/phpoffice/phpword/samples/Sample_18_Watermark.php b/vendor/phpoffice/phpword/samples/Sample_18_Watermark.php
index dbab2b7..c8a8002 100644
--- a/vendor/phpoffice/phpword/samples/Sample_18_Watermark.php
+++ b/vendor/phpoffice/phpword/samples/Sample_18_Watermark.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // Begin code
 $section = $phpWord->addSection();
diff --git a/vendor/phpoffice/phpword/samples/Sample_19_TextBreak.php b/vendor/phpoffice/phpword/samples/Sample_19_TextBreak.php
index 17e2b1c..6b7b218 100644
--- a/vendor/phpoffice/phpword/samples/Sample_19_TextBreak.php
+++ b/vendor/phpoffice/phpword/samples/Sample_19_TextBreak.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // Define styles
 $fontStyle24 = array('size' => 24);
diff --git a/vendor/phpoffice/phpword/samples/Sample_20_BGColor.php b/vendor/phpoffice/phpword/samples/Sample_20_BGColor.php
index 628ae89..7b344f2 100644
--- a/vendor/phpoffice/phpword/samples/Sample_20_BGColor.php
+++ b/vendor/phpoffice/phpword/samples/Sample_20_BGColor.php
@@ -1,16 +1,18 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Style\Font;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New section
 $section = $phpWord->addSection();
 
 $section->addText(
     'This is some text highlighted using fgColor (limited to 15 colors)',
-    array('fgColor' => \PhpOffice\PhpWord\Style\Font::FGCOLOR_YELLOW)
+    array('fgColor' => Font::FGCOLOR_YELLOW)
 );
 $section->addText('This one uses bgColor and is using hex value (0xfbbb10)', array('bgColor' => 'fbbb10'));
 $section->addText('Compatible with font colors', array('color' => '0000ff', 'bgColor' => 'fbbb10'));
diff --git a/vendor/phpoffice/phpword/samples/Sample_21_TableRowRules.php b/vendor/phpoffice/phpword/samples/Sample_21_TableRowRules.php
index ca33de3..8d3ecae 100644
--- a/vendor/phpoffice/phpword/samples/Sample_21_TableRowRules.php
+++ b/vendor/phpoffice/phpword/samples/Sample_21_TableRowRules.php
@@ -1,9 +1,11 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\SimpleType\Jc;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New section
 $section = $phpWord->addSection();
@@ -18,7 +20,7 @@ $section->addText(
 $table1 = $section->addTable(array('cellMargin' => 0, 'cellMarginRight' => 0, 'cellMarginBottom' => 0, 'cellMarginLeft' => 0));
 $table1->addRow(3750);
 $cell1 = $table1->addCell(null, array('valign' => 'top', 'borderSize' => 30, 'borderColor' => 'ff0000'));
-$cell1->addImage('./resources/_earth.jpg', array('width' => 250, 'height' => 250, 'alignment' => \PhpOffice\PhpWord\SimpleType\Jc::CENTER));
+$cell1->addImage('./resources/_earth.jpg', array('width' => 250, 'height' => 250, 'alignment' => Jc::CENTER));
 
 $section->addTextBreak();
 $section->addText("But if we set the rowStyle 'exactHeight' to true, the real row height is used, removing the textbreak:");
@@ -33,7 +35,7 @@ $table2 = $section->addTable(
 );
 $table2->addRow(3750, array('exactHeight' => true));
 $cell2 = $table2->addCell(null, array('valign' => 'top', 'borderSize' => 30, 'borderColor' => '00ff00'));
-$cell2->addImage('./resources/_earth.jpg', array('width' => 250, 'height' => 250, 'alignment' => \PhpOffice\PhpWord\SimpleType\Jc::CENTER));
+$cell2->addImage('./resources/_earth.jpg', array('width' => 250, 'height' => 250, 'alignment' => Jc::CENTER));
 
 $section->addTextBreak();
 $section->addText('In this example, image is 250px height. Rows are calculated in twips, and 1px = 15twips.');
diff --git a/vendor/phpoffice/phpword/samples/Sample_22_CheckBox.php b/vendor/phpoffice/phpword/samples/Sample_22_CheckBox.php
index 5a2ac3e..c565ffc 100644
--- a/vendor/phpoffice/phpword/samples/Sample_22_CheckBox.php
+++ b/vendor/phpoffice/phpword/samples/Sample_22_CheckBox.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New section
 $section = $phpWord->addSection();
diff --git a/vendor/phpoffice/phpword/samples/Sample_23_TemplateBlock.php b/vendor/phpoffice/phpword/samples/Sample_23_TemplateBlock.php
index 2b7e9f6..f12f53d 100644
--- a/vendor/phpoffice/phpword/samples/Sample_23_TemplateBlock.php
+++ b/vendor/phpoffice/phpword/samples/Sample_23_TemplateBlock.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\TemplateProcessor;
 include_once 'Sample_Header.php';
 
 // Template processor instance creation
 echo date('H:i:s') , ' Creating new TemplateProcessor instance...' , EOL;
-$templateProcessor = new \PhpOffice\PhpWord\TemplateProcessor('resources/Sample_23_TemplateBlock.docx');
+$templateProcessor = new TemplateProcessor('resources/Sample_23_TemplateBlock.docx');
 
 // Will clone everything between ${tag} and ${/tag}, the number of times. By default, 1.
 $templateProcessor->cloneBlock('CLONEME', 3);
diff --git a/vendor/phpoffice/phpword/samples/Sample_24_ReadODText.php b/vendor/phpoffice/phpword/samples/Sample_24_ReadODText.php
index 42df23a..b322957 100644
--- a/vendor/phpoffice/phpword/samples/Sample_24_ReadODText.php
+++ b/vendor/phpoffice/phpword/samples/Sample_24_ReadODText.php
@@ -1,4 +1,5 @@
 <?php
+use PhpOffice\PhpWord\IOFactory;
 include_once 'Sample_Header.php';
 
 // Read contents
@@ -6,7 +7,7 @@ $name = basename(__FILE__, '.php');
 $source = __DIR__ . "/resources/{$name}.odt";
 
 echo date('H:i:s'), " Reading contents from `{$source}`", EOL;
-$phpWord = \PhpOffice\PhpWord\IOFactory::load($source, 'ODText');
+$phpWord = IOFactory::load($source, 'ODText');
 
 // Save file
 echo write($phpWord, basename(__FILE__, '.php'), $writers);
diff --git a/vendor/phpoffice/phpword/samples/Sample_25_TextBox.php b/vendor/phpoffice/phpword/samples/Sample_25_TextBox.php
index 7655e25..ac92c8e 100644
--- a/vendor/phpoffice/phpword/samples/Sample_25_TextBox.php
+++ b/vendor/phpoffice/phpword/samples/Sample_25_TextBox.php
@@ -1,9 +1,11 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\SimpleType\Jc;
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New section
 $section = $phpWord->addSection();
@@ -11,7 +13,7 @@ $section = $phpWord->addSection();
 // In section
 $textbox = $section->addTextBox(
     array(
-        'alignment'   => \PhpOffice\PhpWord\SimpleType\Jc::CENTER,
+        'alignment'   => Jc::CENTER,
         'width'       => 400,
         'height'      => 150,
         'borderSize'  => 1,
diff --git a/vendor/phpoffice/phpword/samples/Sample_26_Html.php b/vendor/phpoffice/phpword/samples/Sample_26_Html.php
index ba06b06..8276c40 100644
--- a/vendor/phpoffice/phpword/samples/Sample_26_Html.php
+++ b/vendor/phpoffice/phpword/samples/Sample_26_Html.php
@@ -1,9 +1,11 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Shared\Html;
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s') , ' Create new PhpWord object' , EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 $section = $phpWord->addSection();
 $html = '<h1>Adding element via HTML</h1>';
@@ -42,7 +44,7 @@ $html .= '<table style="width: 50%; border: 6px #0000FF double;">
                 </tbody>
             </table>';
 
-\PhpOffice\PhpWord\Shared\Html::addHtml($section, $html, false, false);
+Html::addHtml($section, $html, false, false);
 
 // Save file
 echo write($phpWord, basename(__FILE__, '.php'), $writers);
diff --git a/vendor/phpoffice/phpword/samples/Sample_27_Field.php b/vendor/phpoffice/phpword/samples/Sample_27_Field.php
index ec9dbe2..a031cec 100644
--- a/vendor/phpoffice/phpword/samples/Sample_27_Field.php
+++ b/vendor/phpoffice/phpword/samples/Sample_27_Field.php
@@ -1,11 +1,13 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\Element\TextRun;
 
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New section
 $section = $phpWord->addSection();
@@ -39,7 +41,7 @@ $textrun->addText('here:');
 $section->addText('The actual index:');
 $section->addField('INDEX', array(), array('\\e "	"'), 'right click to update the index');
 
-$textrun = $section->addTextRun(array('alignment' => \PhpOffice\PhpWord\SimpleType\Jc::CENTER));
+$textrun = $section->addTextRun(array('alignment' => Jc::CENTER));
 $textrun->addText('This is the date of lunar calendar ');
 $textrun->addField('DATE', array('dateformat' => 'd-M-yyyy H:mm:ss'), array('PreserveFormat', 'LunarCalendar'));
 $textrun->addText(' written in a textrun.');
diff --git a/vendor/phpoffice/phpword/samples/Sample_28_ReadRTF.php b/vendor/phpoffice/phpword/samples/Sample_28_ReadRTF.php
index 76ac3d4..ee54c5a 100644
--- a/vendor/phpoffice/phpword/samples/Sample_28_ReadRTF.php
+++ b/vendor/phpoffice/phpword/samples/Sample_28_ReadRTF.php
@@ -1,4 +1,5 @@
 <?php
+use PhpOffice\PhpWord\IOFactory;
 include_once 'Sample_Header.php';
 
 // Read contents
@@ -6,7 +7,7 @@ $name = basename(__FILE__, '.php');
 $source = __DIR__ . "/resources/{$name}.rtf";
 
 echo date('H:i:s'), " Reading contents from `{$source}`", EOL;
-$phpWord = \PhpOffice\PhpWord\IOFactory::load($source, 'RTF');
+$phpWord = IOFactory::load($source, 'RTF');
 
 // Save file
 echo write($phpWord, basename(__FILE__, '.php'), $writers);
diff --git a/vendor/phpoffice/phpword/samples/Sample_29_Line.php b/vendor/phpoffice/phpword/samples/Sample_29_Line.php
index 030308e..343b695 100644
--- a/vendor/phpoffice/phpword/samples/Sample_29_Line.php
+++ b/vendor/phpoffice/phpword/samples/Sample_29_Line.php
@@ -1,9 +1,13 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Shared\Converter;
+use PhpOffice\PhpWord\Style\Image;
+use PhpOffice\PhpWord\Style\Line;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New section
 $section = $phpWord->addSection();
@@ -13,16 +17,16 @@ $section = $phpWord->addSection();
 $section->addText('Horizontal Line (Inline style):');
 $section->addLine(
     array(
-        'width'       => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(4),
-        'height'      => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(0),
+        'width'       => Converter::cmToPixel(4),
+        'height'      => Converter::cmToPixel(0),
         'positioning' => 'absolute',
     )
 );
 $section->addText('Vertical Line (Inline style):');
 $section->addLine(
     array(
-        'width'       => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(0),
-        'height'      => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(1),
+        'width'       => Converter::cmToPixel(0),
+        'height'      => Converter::cmToPixel(1),
         'positioning' => 'absolute',
     )
 );
@@ -32,14 +36,14 @@ $section->addTextBreak(1);
 $section->addText('Positioned Line (red):');
 $section->addLine(
     array(
-        'width'            => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(4),
-        'height'           => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(1),
+        'width'            => Converter::cmToPixel(4),
+        'height'           => Converter::cmToPixel(1),
         'positioning'      => 'absolute',
         'posHorizontalRel' => 'page',
         'posVerticalRel'   => 'page',
-        'marginLeft'       => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(10),
-        'marginTop'        => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(8),
-        'wrappingStyle'    => \PhpOffice\PhpWord\Style\Image::WRAPPING_STYLE_SQUARE,
+        'marginLeft'       => Converter::cmToPixel(10),
+        'marginTop'        => Converter::cmToPixel(8),
+        'wrappingStyle'    => Image::WRAPPING_STYLE_SQUARE,
         'color'            => 'red',
     )
 );
@@ -47,12 +51,12 @@ $section->addLine(
 $section->addText('Horizontal Formatted Line');
 $section->addLine(
     array(
-        'width'       => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(15),
-        'height'      => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(0),
+        'width'       => Converter::cmToPixel(15),
+        'height'      => Converter::cmToPixel(0),
         'positioning' => 'absolute',
-        'beginArrow'  => \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_BLOCK,
-        'endArrow'    => \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_OVAL,
-        'dash'        => \PhpOffice\PhpWord\Style\Line::DASH_STYLE_LONG_DASH_DOT_DOT,
+        'beginArrow'  => Line::ARROW_STYLE_BLOCK,
+        'endArrow'    => Line::ARROW_STYLE_OVAL,
+        'dash'        => Line::DASH_STYLE_LONG_DASH_DOT_DOT,
         'weight'      => 10,
     )
 );
diff --git a/vendor/phpoffice/phpword/samples/Sample_30_ReadHTML.php b/vendor/phpoffice/phpword/samples/Sample_30_ReadHTML.php
index 029f8c8..f426df1 100644
--- a/vendor/phpoffice/phpword/samples/Sample_30_ReadHTML.php
+++ b/vendor/phpoffice/phpword/samples/Sample_30_ReadHTML.php
@@ -1,4 +1,5 @@
 <?php
+use PhpOffice\PhpWord\IOFactory;
 include_once 'Sample_Header.php';
 
 // Read contents
@@ -6,7 +7,7 @@ $name = basename(__FILE__, '.php');
 $source = realpath(__DIR__ . "/resources/{$name}.html");
 
 echo date('H:i:s'), " Reading contents from `{$source}`", EOL;
-$phpWord = \PhpOffice\PhpWord\IOFactory::load($source, 'HTML');
+$phpWord = IOFactory::load($source, 'HTML');
 
 // Save file
 echo write($phpWord, basename(__FILE__, '.php'), $writers);
diff --git a/vendor/phpoffice/phpword/samples/Sample_31_Shape.php b/vendor/phpoffice/phpword/samples/Sample_31_Shape.php
index 33628fc..25d0971 100644
--- a/vendor/phpoffice/phpword/samples/Sample_31_Shape.php
+++ b/vendor/phpoffice/phpword/samples/Sample_31_Shape.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New section
 $section = $phpWord->addSection();
diff --git a/vendor/phpoffice/phpword/samples/Sample_32_Chart.php b/vendor/phpoffice/phpword/samples/Sample_32_Chart.php
index 2c6458c..bd26fff 100644
--- a/vendor/phpoffice/phpword/samples/Sample_32_Chart.php
+++ b/vendor/phpoffice/phpword/samples/Sample_32_Chart.php
@@ -1,11 +1,12 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 use PhpOffice\PhpWord\Shared\Converter;
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // Define styles
 $phpWord->addTitleStyle(1, array('size' => 14, 'bold' => true), array('keepNext' => true, 'spaceBefore' => 240));
diff --git a/vendor/phpoffice/phpword/samples/Sample_33_FormField.php b/vendor/phpoffice/phpword/samples/Sample_33_FormField.php
index a855d42..ee9f006 100644
--- a/vendor/phpoffice/phpword/samples/Sample_33_FormField.php
+++ b/vendor/phpoffice/phpword/samples/Sample_33_FormField.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 $phpWord->getProtection()->setEditing('forms');
 
 // New section
diff --git a/vendor/phpoffice/phpword/samples/Sample_34_SDT.php b/vendor/phpoffice/phpword/samples/Sample_34_SDT.php
index f9077a1..9a92d43 100644
--- a/vendor/phpoffice/phpword/samples/Sample_34_SDT.php
+++ b/vendor/phpoffice/phpword/samples/Sample_34_SDT.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New section
 $section = $phpWord->addSection();
diff --git a/vendor/phpoffice/phpword/samples/Sample_35_InternalLink.php b/vendor/phpoffice/phpword/samples/Sample_35_InternalLink.php
index 5ab7d9b..a2207a8 100644
--- a/vendor/phpoffice/phpword/samples/Sample_35_InternalLink.php
+++ b/vendor/phpoffice/phpword/samples/Sample_35_InternalLink.php
@@ -1,9 +1,10 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 $section = $phpWord->addSection();
 $section->addTitle('This is page 1', 1);
diff --git a/vendor/phpoffice/phpword/samples/Sample_36_RTL.php b/vendor/phpoffice/phpword/samples/Sample_36_RTL.php
index 615557d..b91c37f 100644
--- a/vendor/phpoffice/phpword/samples/Sample_36_RTL.php
+++ b/vendor/phpoffice/phpword/samples/Sample_36_RTL.php
@@ -1,9 +1,11 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\SimpleType\Jc;
 include_once 'Sample_Header.php';
 
 // New Word document
 echo date('H:i:s'), ' Create new PhpWord object', EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // New section
 $section = $phpWord->addSection();
@@ -11,7 +13,7 @@ $section = $phpWord->addSection();
 $textrun = $section->addTextRun();
 $textrun->addText('This is a Left to Right paragraph.');
 
-$textrun = $section->addTextRun(array('alignment' => \PhpOffice\PhpWord\SimpleType\Jc::END));
+$textrun = $section->addTextRun(array('alignment' => Jc::END));
 $textrun->addText('سلام این یک پاراگراف راست به چپ است', array('rtl' => true));
 
 // Save file
diff --git a/vendor/phpoffice/phpword/samples/Sample_37_Comments.php b/vendor/phpoffice/phpword/samples/Sample_37_Comments.php
index 268739b..564aed0 100644
--- a/vendor/phpoffice/phpword/samples/Sample_37_Comments.php
+++ b/vendor/phpoffice/phpword/samples/Sample_37_Comments.php
@@ -1,12 +1,14 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Element\Comment;
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s') , ' Create new PhpWord object' , EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 // A comment
-$comment = new \PhpOffice\PhpWord\Element\Comment('Authors name', new \DateTime(), 'my_initials');
+$comment = new Comment('Authors name', new \DateTime(), 'my_initials');
 $comment->addText('Test', array('bold' => true));
 $phpWord->addComment($comment);
 
@@ -21,7 +23,7 @@ $textrun->addText(' a test');
 $section->addTextBreak(2);
 
 // Let's create a comment that we will link to a start element and an end element
-$commentWithStartAndEnd = new \PhpOffice\PhpWord\Element\Comment('Foo Bar', new \DateTime());
+$commentWithStartAndEnd = new Comment('Foo Bar', new \DateTime());
 $commentWithStartAndEnd->addText('A comment with a start and an end');
 $phpWord->addComment($commentWithStartAndEnd);
 
@@ -36,7 +38,7 @@ $textToEndOn->setCommentRangeEnd($commentWithStartAndEnd);
 $section->addTextBreak(2);
 
 // Let's add a comment on an image
-$commentOnImage = new \PhpOffice\PhpWord\Element\Comment('Mr Smart', new \DateTime());
+$commentOnImage = new Comment('Mr Smart', new \DateTime());
 $imageComment = $commentOnImage->addTextRun();
 $imageComment->addText('Hey, Mars does look ');
 $imageComment->addText('red', array('color' => 'FF0000'));
@@ -49,7 +51,7 @@ $section->addTextBreak(2);
 // We can also do things the other way round, link the comment to the element
 $anotherText = $section->addText('another text');
 
-$comment1 = new \PhpOffice\PhpWord\Element\Comment('Authors name', new \DateTime(), 'my_initials');
+$comment1 = new Comment('Authors name', new \DateTime(), 'my_initials');
 $comment1->addText('Test', array('bold' => true));
 $comment1->setStartElement($anotherText);
 $comment1->setEndElement($anotherText);
diff --git a/vendor/phpoffice/phpword/samples/Sample_38_Protection.php b/vendor/phpoffice/phpword/samples/Sample_38_Protection.php
index ee2b460..0060af3 100644
--- a/vendor/phpoffice/phpword/samples/Sample_38_Protection.php
+++ b/vendor/phpoffice/phpword/samples/Sample_38_Protection.php
@@ -1,11 +1,12 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\DocProtect;
 
 include_once 'Sample_Header.php';
 
 // New Word Document
 echo date('H:i:s') , ' Create new PhpWord object' , EOL;
-$phpWord = new \PhpOffice\PhpWord\PhpWord();
+$phpWord = new PhpWord();
 
 $documentProtection = $phpWord->getSettings()->getDocumentProtection();
 $documentProtection->setEditing(DocProtect::READ_ONLY);
diff --git a/vendor/phpoffice/phpword/samples/Sample_Header.php b/vendor/phpoffice/phpword/samples/Sample_Header.php
index c499604..c375ab2 100644
--- a/vendor/phpoffice/phpword/samples/Sample_Header.php
+++ b/vendor/phpoffice/phpword/samples/Sample_Header.php
@@ -1,4 +1,5 @@
 <?php
+use PhpOffice\PhpWord\PhpWord;
 require_once __DIR__ . '/../bootstrap.php';
 
 use PhpOffice\PhpWord\Settings;
@@ -55,7 +56,7 @@ if ($handle = opendir('.')) {
 /**
  * Write documents
  *
- * @param \PhpOffice\PhpWord\PhpWord $phpWord
+ * @param PhpWord $phpWord
  * @param string $filename
  * @param array $writers
  *
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractContainer.php b/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractContainer.php
index e3022b5..33e5225 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractContainer.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractContainer.php
@@ -37,7 +37,7 @@ namespace PhpOffice\PhpWord\Element;
  * @method PageBreak addPageBreak()
  * @method Table addTable(mixed $style = null)
  * @method Image addImage(string $source, mixed $style = null, bool $isWatermark = false)
- * @method \PhpOffice\PhpWord\Element\Object addObject(string $source, mixed $style = null)
+ * @method Object addObject(string $source, mixed $style = null)
  * @method TextBox addTextBox(mixed $style = null)
  * @method Field addField(string $type = null, array $properties = array(), array $options = array(), mixed $text = null)
  * @method Line addLine(mixed $lineStyle = null)
@@ -74,7 +74,7 @@ abstract class AbstractContainer extends AbstractElement
      *
      * @param mixed $function
      * @param mixed $args
-     * @return \PhpOffice\PhpWord\Element\AbstractElement
+     * @return AbstractElement
      */
     public function __call($function, $args)
     {
@@ -121,7 +121,7 @@ abstract class AbstractContainer extends AbstractElement
      * Each element has different number of parameters passed
      *
      * @param string $elementName
-     * @return \PhpOffice\PhpWord\Element\AbstractElement
+     * @return AbstractElement
      */
     protected function addElement($elementName)
     {
@@ -139,8 +139,7 @@ abstract class AbstractContainer extends AbstractElement
         $reflection = new \ReflectionClass($elementClass);
         $elementArgs = $args;
         array_shift($elementArgs); // Shift the $elementName off the beginning of array
-
-        /** @var \PhpOffice\PhpWord\Element\AbstractElement $element Type hint */
+        /** @var AbstractElement $element Type hint */
         $element = $reflection->newInstanceArgs($elementArgs);
 
         // Set parent container
@@ -252,7 +251,7 @@ abstract class AbstractContainer extends AbstractElement
      *
      * @param mixed $paragraphStyle
      *
-     * @return \PhpOffice\PhpWord\Element\TextRun
+     * @return TextRun
      *
      * @codeCoverageIgnore
      */
@@ -268,7 +267,7 @@ abstract class AbstractContainer extends AbstractElement
      *
      * @param mixed $paragraphStyle
      *
-     * @return \PhpOffice\PhpWord\Element\Footnote
+     * @return Footnote
      *
      * @codeCoverageIgnore
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractElement.php b/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractElement.php
index a65c50f..ab2be4e 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractElement.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractElement.php
@@ -30,7 +30,7 @@ abstract class AbstractElement
     /**
      * PhpWord object
      *
-     * @var \PhpOffice\PhpWord\PhpWord
+     * @var PhpWord
      */
     protected $phpWord;
 
@@ -131,7 +131,7 @@ abstract class AbstractElement
     /**
      * Get PhpWord
      *
-     * @return \PhpOffice\PhpWord\PhpWord
+     * @return PhpWord
      */
     public function getPhpWord()
     {
@@ -141,7 +141,7 @@ abstract class AbstractElement
     /**
      * Set PhpWord as reference.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function setPhpWord(PhpWord $phpWord = null)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Comment.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Comment.php
index 1883692..5ee2819 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Comment.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Comment.php
@@ -77,7 +77,7 @@ class Comment extends TrackChange
     /**
      * Sets the element where this comment starts
      *
-     * @param \PhpOffice\PhpWord\Element\AbstractElement $value
+     * @param AbstractElement $value
      */
     public function setStartElement(AbstractElement $value)
     {
@@ -90,7 +90,7 @@ class Comment extends TrackChange
     /**
      * Get the element where this comment starts
      *
-     * @return \PhpOffice\PhpWord\Element\AbstractElement
+     * @return AbstractElement
      */
     public function getStartElement()
     {
@@ -100,7 +100,7 @@ class Comment extends TrackChange
     /**
      * Sets the element where this comment ends
      *
-     * @param \PhpOffice\PhpWord\Element\AbstractElement $value
+     * @param AbstractElement $value
      */
     public function setEndElement(AbstractElement $value)
     {
@@ -113,7 +113,7 @@ class Comment extends TrackChange
     /**
      * Get the element where this comment ends
      *
-     * @return \PhpOffice\PhpWord\Element\AbstractElement
+     * @return AbstractElement
      */
     public function getEndElement()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Endnote.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Endnote.php
index b6e94fb..9eaf99a 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Endnote.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Endnote.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PhpOffice\PhpWord\Style\Paragraph;
 /**
  * Endnote element
  *
@@ -32,7 +33,7 @@ class Endnote extends Footnote
     /**
      * Create new instance
      *
-     * @param string|array|\PhpOffice\PhpWord\Style\Paragraph $paragraphStyle
+     * @param string|array|Paragraph $paragraphStyle
      */
     public function __construct($paragraphStyle = null)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Footnote.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Footnote.php
index e9a1bfc..2132bbb 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Footnote.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Footnote.php
@@ -29,7 +29,7 @@ class Footnote extends AbstractContainer
     /**
      * Paragraph style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Paragraph
+     * @var string|Paragraph
      */
     protected $paragraphStyle;
 
@@ -43,7 +43,7 @@ class Footnote extends AbstractContainer
     /**
      * Create new instance
      *
-     * @param string|array|\PhpOffice\PhpWord\Style\Paragraph $paragraphStyle
+     * @param string|array|Paragraph $paragraphStyle
      */
     public function __construct($paragraphStyle = null)
     {
@@ -54,7 +54,7 @@ class Footnote extends AbstractContainer
     /**
      * Get paragraph style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Paragraph
+     * @return string|Paragraph
      */
     public function getParagraphStyle()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Image.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Image.php
index f1f6bab..cf50907 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Image.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Image.php
@@ -128,8 +128,8 @@ class Image extends AbstractElement
      * @param mixed $style
      * @param bool $watermark
      *
-     * @throws \PhpOffice\PhpWord\Exception\InvalidImageException
-     * @throws \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
+     * @throws InvalidImageException
+     * @throws UnsupportedImageTypeException
      */
     public function __construct($source, $style = null, $watermark = false)
     {
@@ -366,8 +366,8 @@ class Image extends AbstractElement
     /**
      * Check memory image, supported type, image functions, and proportional width/height.
      *
-     * @throws \PhpOffice\PhpWord\Exception\InvalidImageException
-     * @throws \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
+     * @throws InvalidImageException
+     * @throws UnsupportedImageTypeException
      */
     private function checkImage()
     {
@@ -437,7 +437,7 @@ class Image extends AbstractElement
      *
      * @param string $source
      *
-     * @throws \PhpOffice\PhpWord\Exception\CreateTemporaryFileException
+     * @throws CreateTemporaryFileException
      *
      * @return array|null
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Link.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Link.php
index 4637120..00963b2 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Link.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Link.php
@@ -43,14 +43,14 @@ class Link extends AbstractElement
     /**
      * Font style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Font
+     * @var string|Font
      */
     private $fontStyle;
 
     /**
      * Paragraph style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Paragraph
+     * @var string|Paragraph
      */
     private $paragraphStyle;
 
@@ -109,7 +109,7 @@ class Link extends AbstractElement
     /**
      * Get Text style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Font
+     * @return string|Font
      */
     public function getFontStyle()
     {
@@ -119,7 +119,7 @@ class Link extends AbstractElement
     /**
      * Get Paragraph style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Paragraph
+     * @return string|Paragraph
      */
     public function getParagraphStyle()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Object.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Object.php
index 8fe8322..4c03430 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Object.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Object.php
@@ -66,7 +66,7 @@ class Object extends AbstractElement
      * @param string $source
      * @param mixed $style
      *
-     * @throws \PhpOffice\PhpWord\Exception\InvalidObjectException
+     * @throws InvalidObjectException
      */
     public function __construct($source, $style = null)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/PreserveText.php b/vendor/phpoffice/phpword/src/PhpWord/Element/PreserveText.php
index ad20d7a..979ddd5 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/PreserveText.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/PreserveText.php
@@ -36,14 +36,14 @@ class PreserveText extends AbstractElement
     /**
      * Text style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Font
+     * @var string|Font
      */
     private $fontStyle;
 
     /**
      * Paragraph style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Paragraph
+     * @var string|Paragraph
      */
     private $paragraphStyle;
 
@@ -71,7 +71,7 @@ class PreserveText extends AbstractElement
     /**
      * Get Text style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Font
+     * @return string|Font
      */
     public function getFontStyle()
     {
@@ -81,7 +81,7 @@ class PreserveText extends AbstractElement
     /**
      * Get Paragraph style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Paragraph
+     * @return string|Paragraph
      */
     public function getParagraphStyle()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Row.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Row.php
index 2e89b35..3bb0b36 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Row.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Row.php
@@ -43,7 +43,7 @@ class Row extends AbstractElement
     /**
      * Row cells
      *
-     * @var \PhpOffice\PhpWord\Element\Cell[]
+     * @var Cell[]
      */
     private $cells = array();
 
@@ -64,7 +64,7 @@ class Row extends AbstractElement
      *
      * @param int $width
      * @param mixed $style
-     * @return \PhpOffice\PhpWord\Element\Cell
+     * @return Cell
      */
     public function addCell($width = null, $style = null)
     {
@@ -78,7 +78,7 @@ class Row extends AbstractElement
     /**
      * Get all cells
      *
-     * @return \PhpOffice\PhpWord\Element\Cell[]
+     * @return Cell[]
      */
     public function getCells()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Section.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Section.php
index 06acf1f..209b292 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Section.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Section.php
@@ -204,7 +204,7 @@ class Section extends AbstractContainer
 
         if (in_array($type, array(Header::AUTO, Header::FIRST, Header::EVEN))) {
             $index = count($collection);
-            /** @var \PhpOffice\PhpWord\Element\AbstractContainer $container Type hint */
+            /** @var AbstractContainer $container Type hint */
             $container = new $containerClass($this->sectionId, ++$index, $type);
             $container->setPhpWord($this->phpWord);
 
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/TOC.php b/vendor/phpoffice/phpword/src/PhpWord/Element/TOC.php
index e3ca0a0..673f2d3 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/TOC.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/TOC.php
@@ -36,7 +36,7 @@ class TOC extends AbstractElement
     /**
      * Font style
      *
-     * @var \PhpOffice\PhpWord\Style\Font|string
+     * @var Font|string
      */
     private $fontStyle;
 
@@ -94,7 +94,7 @@ class TOC extends AbstractElement
 
         $titles = $this->phpWord->getTitles()->getItems();
         foreach ($titles as $i => $title) {
-            /** @var \PhpOffice\PhpWord\Element\Title $title Type hint */
+            /** @var Title $title Type hint */
             $depth = $title->getDepth();
             if ($this->minDepth > $depth) {
                 unset($titles[$i]);
@@ -120,7 +120,7 @@ class TOC extends AbstractElement
     /**
      * Get Font Style
      *
-     * @return \PhpOffice\PhpWord\Style\Font|string
+     * @return Font|string
      */
     public function getStyleFont()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Table.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Table.php
index 3a04503..62ae420 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Table.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Table.php
@@ -34,7 +34,7 @@ class Table extends AbstractElement
     /**
      * Table rows
      *
-     * @var \PhpOffice\PhpWord\Element\Row[]
+     * @var Row[]
      */
     private $rows = array();
 
@@ -60,7 +60,7 @@ class Table extends AbstractElement
      *
      * @param int $height
      * @param mixed $style
-     * @return \PhpOffice\PhpWord\Element\Row
+     * @return Row
      */
     public function addRow($height = null, $style = null)
     {
@@ -76,7 +76,7 @@ class Table extends AbstractElement
      *
      * @param int $width
      * @param mixed $style
-     * @return \PhpOffice\PhpWord\Element\Cell
+     * @return Cell
      */
     public function addCell($width = null, $style = null)
     {
@@ -90,7 +90,7 @@ class Table extends AbstractElement
     /**
      * Get all rows
      *
-     * @return \PhpOffice\PhpWord\Element\Row[]
+     * @return Row[]
      */
     public function getRows()
     {
@@ -138,7 +138,7 @@ class Table extends AbstractElement
         if (is_array($this->rows)) {
             $rowCount = count($this->rows);
             for ($i = 0; $i < $rowCount; $i++) {
-                /** @var \PhpOffice\PhpWord\Element\Row $row Type hint */
+                /** @var Row $row Type hint */
                 $row = $this->rows[$i];
                 $cellCount = count($row->getCells());
                 if ($columnCount < $cellCount) {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/Text.php b/vendor/phpoffice/phpword/src/PhpWord/Element/Text.php
index 4de1217..6e86a84 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/Text.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/Text.php
@@ -36,14 +36,14 @@ class Text extends AbstractElement
     /**
      * Text style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Font
+     * @var string|Font
      */
     protected $fontStyle;
 
     /**
      * Paragraph style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Paragraph
+     * @var string|Paragraph
      */
     protected $paragraphStyle;
 
@@ -64,9 +64,9 @@ class Text extends AbstractElement
     /**
      * Set Text style
      *
-     * @param string|array|\PhpOffice\PhpWord\Style\Font $style
-     * @param string|array|\PhpOffice\PhpWord\Style\Paragraph $paragraphStyle
-     * @return string|\PhpOffice\PhpWord\Style\Font
+     * @param string|array|Font $style
+     * @param string|array|Paragraph $paragraphStyle
+     * @return string|Font
      */
     public function setFontStyle($style = null, $paragraphStyle = null)
     {
@@ -89,7 +89,7 @@ class Text extends AbstractElement
     /**
      * Get Text style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Font
+     * @return string|Font
      */
     public function getFontStyle()
     {
@@ -99,8 +99,8 @@ class Text extends AbstractElement
     /**
      * Set Paragraph style
      *
-     * @param string|array|\PhpOffice\PhpWord\Style\Paragraph $style
-     * @return string|\PhpOffice\PhpWord\Style\Paragraph
+     * @param string|array|Paragraph $style
+     * @return string|Paragraph
      */
     public function setParagraphStyle($style = null)
     {
@@ -121,7 +121,7 @@ class Text extends AbstractElement
     /**
      * Get Paragraph style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Paragraph
+     * @return string|Paragraph
      */
     public function getParagraphStyle()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/TextBreak.php b/vendor/phpoffice/phpword/src/PhpWord/Element/TextBreak.php
index 4cf65f3..ec9e594 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/TextBreak.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/TextBreak.php
@@ -28,14 +28,14 @@ class TextBreak extends AbstractElement
     /**
      * Paragraph style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Paragraph
+     * @var string|Paragraph
      */
     private $paragraphStyle = null;
 
     /**
      * Text style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Font
+     * @var string|Font
      */
     private $fontStyle = null;
 
@@ -60,7 +60,7 @@ class TextBreak extends AbstractElement
      *
      * @param mixed $style
      * @param mixed $paragraphStyle
-     * @return string|\PhpOffice\PhpWord\Style\Font
+     * @return string|Font
      */
     public function setFontStyle($style = null, $paragraphStyle = null)
     {
@@ -81,7 +81,7 @@ class TextBreak extends AbstractElement
     /**
      * Get Text style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Font
+     * @return string|Font
      */
     public function getFontStyle()
     {
@@ -91,8 +91,8 @@ class TextBreak extends AbstractElement
     /**
      * Set Paragraph style
      *
-     * @param   string|array|\PhpOffice\PhpWord\Style\Paragraph $style
-     * @return  string|\PhpOffice\PhpWord\Style\Paragraph
+     * @param string|array|Paragraph $style
+     * @return string|Paragraph
      */
     public function setParagraphStyle($style = null)
     {
@@ -111,7 +111,7 @@ class TextBreak extends AbstractElement
     /**
      * Get Paragraph style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Paragraph
+     * @return string|Paragraph
      */
     public function getParagraphStyle()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Element/TextRun.php b/vendor/phpoffice/phpword/src/PhpWord/Element/TextRun.php
index 6d9ae9f..f053754 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Element/TextRun.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Element/TextRun.php
@@ -32,14 +32,14 @@ class TextRun extends AbstractContainer
     /**
      * Paragraph style
      *
-     * @var string|\PhpOffice\PhpWord\Style\Paragraph
+     * @var string|Paragraph
      */
     protected $paragraphStyle;
 
     /**
      * Create new instance
      *
-     * @param string|array|\PhpOffice\PhpWord\Style\Paragraph $paragraphStyle
+     * @param string|array|Paragraph $paragraphStyle
      */
     public function __construct($paragraphStyle = null)
     {
@@ -49,7 +49,7 @@ class TextRun extends AbstractContainer
     /**
      * Get Paragraph style
      *
-     * @return string|\PhpOffice\PhpWord\Style\Paragraph
+     * @return string|Paragraph
      */
     public function getParagraphStyle()
     {
@@ -59,8 +59,8 @@ class TextRun extends AbstractContainer
     /**
      * Set Paragraph style
      *
-     * @param string|array|\PhpOffice\PhpWord\Style\Paragraph $style
-     * @return string|\PhpOffice\PhpWord\Style\Paragraph
+     * @param string|array|Paragraph $style
+     * @return string|Paragraph
      */
     public function setParagraphStyle($style = null)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/IOFactory.php b/vendor/phpoffice/phpword/src/PhpWord/IOFactory.php
index eed1f16..163ba4e 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/IOFactory.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/IOFactory.php
@@ -29,7 +29,7 @@ abstract class IOFactory
      * @param PhpWord $phpWord
      * @param string $name
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
      * @return WriterInterface
      */
@@ -63,11 +63,11 @@ abstract class IOFactory
      *
      * @param string $type
      * @param string $name
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
-     * @return \PhpOffice\PhpWord\Writer\WriterInterface|\PhpOffice\PhpWord\Reader\ReaderInterface
+     * @return WriterInterface|ReaderInterface
      */
     private static function createObject($type, $name, $phpWord = null)
     {
@@ -83,11 +83,11 @@ abstract class IOFactory
      *
      * @param string $filename The name of the file
      * @param string $readerName
-     * @return \PhpOffice\PhpWord\PhpWord $phpWord
+     * @return PhpWord $phpWord
      */
     public static function load($filename, $readerName = 'Word2007')
     {
-        /** @var \PhpOffice\PhpWord\Reader\ReaderInterface $reader */
+        /** @var ReaderInterface $reader */
         $reader = self::createReader($readerName);
 
         return $reader->load($filename);
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Media.php b/vendor/phpoffice/phpword/src/PhpWord/Media.php
index d987901..ab421c2 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Media.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Media.php
@@ -41,9 +41,9 @@ class Media
      * @param string $container section|headerx|footerx|footnote|endnote
      * @param string $mediaType image|object|link
      * @param string $source
-     * @param \PhpOffice\PhpWord\Element\Image $image
+     * @param Image $image
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
      * @return int
      */
@@ -208,7 +208,7 @@ class Media
      *
      * @param  string $src
      * @param  string $type
-     * @param  \PhpOffice\PhpWord\Element\Image $image
+     * @param Image $image
      *
      * @return int
      *
@@ -274,7 +274,7 @@ class Media
      *
      * @param  int $headerCount
      * @param  string $src
-     * @param  \PhpOffice\PhpWord\Element\Image $image
+     * @param Image $image
      *
      * @return int
      *
@@ -322,7 +322,7 @@ class Media
      *
      * @param  int $footerCount
      * @param  string $src
-     * @param  \PhpOffice\PhpWord\Element\Image $image
+     * @param Image $image
      *
      * @return int
      *
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Metadata/Settings.php b/vendor/phpoffice/phpword/src/PhpWord/Metadata/Settings.php
index 728cc82..80a7daa 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Metadata/Settings.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Metadata/Settings.php
@@ -91,14 +91,14 @@ class Settings
     /**
      * Spelling and Grammatical Checking State
      *
-     * @var \PhpOffice\PhpWord\ComplexType\ProofState
+     * @var ProofState
      */
     private $proofState;
 
     /**
      * Document Editing Restrictions
      *
-     * @var \PhpOffice\PhpWord\Metadata\Protection
+     * @var Protection
      */
     private $documentProtection;
 
@@ -229,7 +229,7 @@ class Settings
     /**
      * Get the Visibility of Annotation Types
      *
-     * @return \PhpOffice\PhpWord\ComplexType\TrackChangesView
+     * @return TrackChangesView
      */
     public function getRevisionView()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/PhpWord.php b/vendor/phpoffice/phpword/src/PhpWord/PhpWord.php
index d7c2348..e49f427 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/PhpWord.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/PhpWord.php
@@ -17,6 +17,11 @@
 
 namespace PhpOffice\PhpWord;
 
+use PhpOffice\PhpWord\Collection\AbstractCollection;
+use PhpOffice\PhpWord\Metadata\DocInfo;
+use PhpOffice\PhpWord\Metadata\Protection;
+use PhpOffice\PhpWord\Metadata\Compatibility;
+use PhpOffice\PhpWord\Style\Paragraph;
 use PhpOffice\PhpWord\Element\Section;
 use PhpOffice\PhpWord\Exception\Exception;
 
@@ -59,7 +64,7 @@ class PhpWord
     /**
      * Collection of sections
      *
-     * @var \PhpOffice\PhpWord\Element\Section[]
+     * @var Section[]
      */
     private $sections = array();
 
@@ -142,7 +147,7 @@ class PhpWord
         if (in_array($function, $addCollection)) {
             $key = ucfirst(str_replace('add', '', $function) . 's');
 
-            /** @var \PhpOffice\PhpWord\Collection\AbstractCollection $collectionObject */
+            /** @var AbstractCollection $collectionObject */
             $collectionObject = $this->collections[$key];
 
             return $collectionObject->addItem(isset($args[0]) ? $args[0] : null);
@@ -160,7 +165,7 @@ class PhpWord
     /**
      * Get document properties object
      *
-     * @return \PhpOffice\PhpWord\Metadata\DocInfo
+     * @return DocInfo
      */
     public function getDocInfo()
     {
@@ -170,7 +175,7 @@ class PhpWord
     /**
      * Get protection
      *
-     * @return \PhpOffice\PhpWord\Metadata\Protection
+     * @return Protection
      * @since 0.12.0
      * @deprecated Get the Document protection from PhpWord->getSettings()->getDocumentProtection();
      * @codeCoverageIgnore
@@ -183,7 +188,7 @@ class PhpWord
     /**
      * Get compatibility
      *
-     * @return \PhpOffice\PhpWord\Metadata\Compatibility
+     * @return Compatibility
      * @since 0.12.0
      */
     public function getCompatibility()
@@ -205,7 +210,7 @@ class PhpWord
     /**
      * Get all sections
      *
-     * @return \PhpOffice\PhpWord\Element\Section[]
+     * @return Section[]
      */
     public function getSections()
     {
@@ -216,7 +221,7 @@ class PhpWord
      * Create new section
      *
      * @param array $style
-     * @return \PhpOffice\PhpWord\Element\Section
+     * @return Section
      */
     public function addSection($style = null)
     {
@@ -271,7 +276,7 @@ class PhpWord
      * Set default paragraph style definition to styles.xml
      *
      * @param array $styles Paragraph style definition
-     * @return \PhpOffice\PhpWord\Style\Paragraph
+     * @return Paragraph
      */
     public function setDefaultParagraphStyle($styles)
     {
@@ -285,7 +290,7 @@ class PhpWord
      *
      * @param  string $filename Fully qualified filename
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
      * @return TemplateProcessor
      *
@@ -343,7 +348,7 @@ class PhpWord
      *
      * @param array $settings
      *
-     * @return \PhpOffice\PhpWord\Element\Section
+     * @return Section
      *
      * @codeCoverageIgnore
      */
@@ -357,7 +362,7 @@ class PhpWord
      *
      * @deprecated 0.12.0
      *
-     * @return \PhpOffice\PhpWord\Metadata\DocInfo
+     * @return DocInfo
      *
      * @codeCoverageIgnore
      */
@@ -371,7 +376,7 @@ class PhpWord
      *
      * @deprecated 0.12.0
      *
-     * @param \PhpOffice\PhpWord\Metadata\DocInfo $documentProperties
+     * @param DocInfo $documentProperties
      *
      * @return self
      *
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/AbstractReader.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/AbstractReader.php
index f59a955..5559311 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/AbstractReader.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/AbstractReader.php
@@ -71,7 +71,7 @@ abstract class AbstractReader implements ReaderInterface
      *
      * @param string $filename
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
      * @return resource
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/HTML.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/HTML.php
index 4e8b5e8..4511980 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/HTML.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/HTML.php
@@ -34,7 +34,7 @@ class HTML extends AbstractReader implements ReaderInterface
      *
      * @throws \Exception
      *
-     * @return \PhpOffice\PhpWord\PhpWord
+     * @return PhpWord
      */
     public function load($docFile)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/MsDoc.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/MsDoc.php
index c134377..856c95e 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/MsDoc.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/MsDoc.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Reader;
 
+use PhpOffice\PhpWord\Style\Font;
 use PhpOffice\Common\Drawing;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Shared\OLERead;
@@ -1677,61 +1678,61 @@ class MsDoc extends AbstractReader implements ReaderInterface
                         case 0x3E:
                             switch (dechex($operand)) {
                                 case 0x00:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_NONE;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_NONE;
                                     break;
                                 case 0x01:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_SINGLE;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_SINGLE;
                                     break;
                                 case 0x02:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_WORDS;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_WORDS;
                                     break;
                                 case 0x03:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DOUBLE;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DOUBLE;
                                     break;
                                 case 0x04:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DOTTED;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DOTTED;
                                     break;
                                 case 0x06:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_HEAVY;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_HEAVY;
                                     break;
                                 case 0x07:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DASH;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DASH;
                                     break;
                                 case 0x09:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DOTDASH;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DOTDASH;
                                     break;
                                 case 0x0A:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DOTDOTDASH;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DOTDOTDASH;
                                     break;
                                 case 0x0B:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_WAVY;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_WAVY;
                                     break;
                                 case 0x14:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DOTTEDHEAVY;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DOTTEDHEAVY;
                                     break;
                                 case 0x17:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DASHHEAVY;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DASHHEAVY;
                                     break;
                                 case 0x19:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DOTDASHHEAVY;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DOTDASHHEAVY;
                                     break;
                                 case 0x1A:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DOTDOTDASHHEAVY;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DOTDOTDASHHEAVY;
                                     break;
                                 case 0x1B:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_WAVYHEAVY;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_WAVYHEAVY;
                                     break;
                                 case 0x27:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DASHLONG;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DASHLONG;
                                     break;
                                 case 0x2B:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_WAVYDOUBLE;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_WAVYDOUBLE;
                                     break;
                                 case 0x37:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_DASHLONGHEAVY;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_DASHLONGHEAVY;
                                     break;
                                 default:
-                                    $oStylePrl->styleFont['underline'] = Style\Font::UNDERLINE_NONE;
+                                    $oStylePrl->styleFont['underline'] = Font::UNDERLINE_NONE;
                                     break;
                             }
                             break;
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText.php
index 5a22b4b..f28412e 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Reader;
 
+use PhpOffice\PhpWord\Reader\ODText\AbstractPart;
 use PhpOffice\Common\XMLReader;
 use PhpOffice\PhpWord\PhpWord;
 
@@ -31,7 +32,7 @@ class ODText extends AbstractReader implements ReaderInterface
      * Loads PhpWord from file
      *
      * @param string $docFile
-     * @return \PhpOffice\PhpWord\PhpWord
+     * @return PhpWord
      */
     public function load($docFile)
     {
@@ -53,7 +54,7 @@ class ODText extends AbstractReader implements ReaderInterface
     /**
      * Read document part.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      * @param array $relationships
      * @param string $partName
      * @param string $docFile
@@ -63,7 +64,7 @@ class ODText extends AbstractReader implements ReaderInterface
     {
         $partClass = "PhpOffice\\PhpWord\\Reader\\ODText\\{$partName}";
         if (class_exists($partClass)) {
-            /** @var \PhpOffice\PhpWord\Reader\ODText\AbstractPart $part Type hint */
+            /** @var AbstractPart $part Type hint */
             $part = new $partClass($docFile, $xmlFile);
             $part->setRels($relationships);
             $part->read($phpWord);
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Content.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Content.php
index 8843d8a..c617e7f 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Content.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Content.php
@@ -30,7 +30,7 @@ class Content extends AbstractPart
     /**
      * Read content.xml.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function read(PhpWord $phpWord)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Meta.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Meta.php
index 98832d1..2e71caf 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Meta.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Meta.php
@@ -30,7 +30,7 @@ class Meta extends AbstractPart
     /**
      * Read meta.xml.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      * @todo Process property type
      */
     public function read(PhpWord $phpWord)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF.php
index 2d09a04..cb8fb30 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF.php
@@ -34,7 +34,7 @@ class RTF extends AbstractReader implements ReaderInterface
      *
      * @throws \Exception
      *
-     * @return \PhpOffice\PhpWord\PhpWord
+     * @return PhpWord
      */
     public function load($docFile)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF/Document.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF/Document.php
index be16d70..86e0275 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF/Document.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF/Document.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Reader\RTF;
 
+use PhpOffice\PhpWord\Element\Section;
+use PhpOffice\PhpWord\Element\TextRun;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 
@@ -41,21 +43,21 @@ class Document
     /**
      * PhpWord object
      *
-     * @var \PhpOffice\PhpWord\PhpWord
+     * @var PhpWord
      */
     private $phpWord;
 
     /**
      * Section object
      *
-     * @var \PhpOffice\PhpWord\Element\Section
+     * @var Section
      */
     private $section;
 
     /**
      * Textrun object
      *
-     * @var \PhpOffice\PhpWord\Element\TextRun
+     * @var TextRun
      */
     private $textrun;
 
@@ -130,7 +132,7 @@ class Document
      * - Builds control words and control symbols
      * - Pushes every other character into the text queue
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      * @todo Use `fread` stream for scalability
      */
     public function read(PhpWord $phpWord)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007.php
index 6c2178a..f6cc7f7 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Reader;
 
+use PhpOffice\PhpWord\Reader\Word2007\AbstractPart;
 use PhpOffice\Common\XMLReader;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Shared\ZipArchive;
@@ -34,7 +35,7 @@ class Word2007 extends AbstractReader implements ReaderInterface
      * Loads PhpWord from file
      *
      * @param string $docFile
-     * @return \PhpOffice\PhpWord\PhpWord
+     * @return PhpWord
      */
     public function load($docFile)
     {
@@ -78,7 +79,7 @@ class Word2007 extends AbstractReader implements ReaderInterface
     /**
      * Read document part.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      * @param array $relationships
      * @param string $partName
      * @param string $docFile
@@ -88,7 +89,7 @@ class Word2007 extends AbstractReader implements ReaderInterface
     {
         $partClass = "PhpOffice\\PhpWord\\Reader\\Word2007\\{$partName}";
         if (class_exists($partClass)) {
-            /** @var \PhpOffice\PhpWord\Reader\Word2007\AbstractPart $part Type hint */
+            /** @var AbstractPart $part Type hint */
             $part = new $partClass($docFile, $xmlFile);
             $part->setRels($relationships);
             $part->read($phpWord);
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/AbstractPart.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/AbstractPart.php
index 6a48fd4..c0b80a7 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/AbstractPart.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/AbstractPart.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Reader\Word2007;
 
+use PhpOffice\PhpWord\Element\Table;
 use PhpOffice\Common\XMLReader;
 use PhpOffice\PhpWord\PhpWord;
 
@@ -91,7 +92,7 @@ abstract class AbstractPart
     /**
      * Read w:p.
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $domNode
      * @param mixed $parent
      * @param string $docPart
@@ -175,7 +176,7 @@ abstract class AbstractPart
     /**
      * Read w:r.
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $domNode
      * @param mixed $parent
      * @param string $docPart
@@ -237,7 +238,7 @@ abstract class AbstractPart
     /**
      * Read w:tbl.
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $domNode
      * @param mixed $parent
      * @param string $docPart
@@ -250,7 +251,7 @@ abstract class AbstractPart
             $tblStyle = $this->readTableStyle($xmlReader, $domNode);
         }
 
-        /** @var \PhpOffice\PhpWord\Element\Table $table Type hint */
+        /** @var Table $table Type hint */
         $table = $parent->addTable($tblStyle);
         $tblNodes = $xmlReader->getElements('*', $domNode);
         foreach ($tblNodes as $tblNode) {
@@ -295,7 +296,7 @@ abstract class AbstractPart
     /**
      * Read w:pPr.
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $domNode
      * @return array|null
      */
@@ -329,7 +330,7 @@ abstract class AbstractPart
     /**
      * Read w:rPr
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $domNode
      * @return array|null
      */
@@ -375,7 +376,7 @@ abstract class AbstractPart
     /**
      * Read w:tblPr
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $domNode
      * @return string|array|null
      * @todo Capture w:tblStylePr w:type="firstRow"
@@ -411,7 +412,7 @@ abstract class AbstractPart
     /**
      * Read w:tcPr
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $domNode
      * @return array
      */
@@ -431,7 +432,7 @@ abstract class AbstractPart
     /**
      * Read style definition
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $parentNode
      * @param array $styleDefs
      * @ignoreScrutinizerPatch
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCore.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCore.php
index f82c6b4..4a210d8 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCore.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCore.php
@@ -54,7 +54,7 @@ class DocPropsCore extends AbstractPart
     /**
      * Read core/extended document properties.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function read(PhpWord $phpWord)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCustom.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCustom.php
index a3d6b90..3ff2a4e 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCustom.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCustom.php
@@ -31,7 +31,7 @@ class DocPropsCustom extends AbstractPart
     /**
      * Read custom document properties.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function read(PhpWord $phpWord)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Document.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Document.php
index ff094bc..f8e0563 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Document.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Document.php
@@ -32,14 +32,14 @@ class Document extends AbstractPart
     /**
      * PhpWord object
      *
-     * @var \PhpOffice\PhpWord\PhpWord
+     * @var PhpWord
      */
     private $phpWord;
 
     /**
      * Read document.xml.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function read(PhpWord $phpWord)
     {
@@ -64,7 +64,7 @@ class Document extends AbstractPart
      * Read header footer.
      *
      * @param array $settings
-     * @param \PhpOffice\PhpWord\Element\Section &$section
+     * @param Section $section
      */
     private function readHeaderFooter($settings, Section &$section)
     {
@@ -97,7 +97,7 @@ class Document extends AbstractPart
     /**
      * Read w:sectPr
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $domNode
      * @ignoreScrutinizerPatch
      * @return array
@@ -140,9 +140,9 @@ class Document extends AbstractPart
     /**
      * Read w:p node.
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $node
-     * @param \PhpOffice\PhpWord\Element\Section &$section
+     * @param Section $section
      *
      * @todo <w:lastRenderedPageBreak>
      */
@@ -169,9 +169,9 @@ class Document extends AbstractPart
     /**
      * Read w:sectPr node.
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $node
-     * @param \PhpOffice\PhpWord\Element\Section &$section
+     * @param Section $section
      */
     private function readWSectPrNode(XMLReader $xmlReader, \DOMElement $node, Section &$section)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Footnotes.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Footnotes.php
index 6198872..ebd1db3 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Footnotes.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Footnotes.php
@@ -44,7 +44,7 @@ class Footnotes extends AbstractPart
     /**
      * Read (footnotes|endnotes).xml.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function read(PhpWord $phpWord)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Numbering.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Numbering.php
index c2a81dd..7881c85 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Numbering.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Numbering.php
@@ -30,7 +30,7 @@ class Numbering extends AbstractPart
     /**
      * Read numbering.xml.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function read(PhpWord $phpWord)
     {
@@ -89,7 +89,7 @@ class Numbering extends AbstractPart
     /**
      * Read numbering level definition from w:abstractNum and w:num
      *
-     * @param \PhpOffice\Common\XMLReader $xmlReader
+     * @param XMLReader $xmlReader
      * @param \DOMElement $subnode
      * @param int $levelId
      * @return array
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Settings.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Settings.php
index ccdbed2..2d2376e 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Settings.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Settings.php
@@ -34,7 +34,7 @@ class Settings extends AbstractPart
     /**
      * Read settings.xml.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function read(PhpWord $phpWord)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Styles.php b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Styles.php
index b8e6f22..98c5a69 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Styles.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Styles.php
@@ -30,7 +30,7 @@ class Styles extends AbstractPart
     /**
      * Read styles.xml.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function read(PhpWord $phpWord)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Shared/Html.php b/vendor/phpoffice/phpword/src/PhpWord/Shared/Html.php
index d8a10b5..70a52e6 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Shared/Html.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Shared/Html.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Shared;
 
+use PhpOffice\PhpWord\Element\TextRun;
+use PhpOffice\PhpWord\Element\Image;
 use PhpOffice\PhpWord\Element\AbstractContainer;
 use PhpOffice\PhpWord\Element\Cell;
 use PhpOffice\PhpWord\Element\Row;
@@ -35,7 +37,7 @@ class Html
      *
      * Note: $stylesheet parameter is removed to avoid PHPMD error for unused parameter
      *
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element Where the parts need to be added
+     * @param AbstractContainer $element Where the parts need to be added
      * @param string $html The code to parse
      * @param bool $fullHTML If it's a full HTML, no need to add 'body' tag
      * @param bool $preserveWhiteSpace If false, the whitespaces between nodes will be removed
@@ -96,7 +98,7 @@ class Html
      * Parse a node and add a corresponding element to the parent element.
      *
      * @param \DOMNode $node node to parse
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element object to add an element corresponding with the node
+     * @param AbstractContainer $element object to add an element corresponding with the node
      * @param array $styles Array with all styles
      * @param array $data Array to transport data to a next level in the DOM tree, for example level of listitems
      */
@@ -176,7 +178,7 @@ class Html
      * Parse child nodes.
      *
      * @param \DOMNode $node
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element
+     * @param AbstractContainer $element
      * @param array $styles
      * @param array $data
      */
@@ -198,9 +200,9 @@ class Html
      * Parse paragraph node
      *
      * @param \DOMNode $node
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element
+     * @param AbstractContainer $element
      * @param array &$styles
-     * @return \PhpOffice\PhpWord\Element\TextRun
+     * @return TextRun
      */
     private static function parseParagraph($node, $element, &$styles)
     {
@@ -213,10 +215,10 @@ class Html
     /**
      * Parse heading node
      *
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element
+     * @param AbstractContainer $element
      * @param array &$styles
      * @param string $argument1 Name of heading style
-     * @return \PhpOffice\PhpWord\Element\TextRun
+     * @return TextRun
      *
      * @todo Think of a clever way of defining header styles, now it is only based on the assumption, that
      * Heading1 - Heading6 are already defined somewhere
@@ -233,7 +235,7 @@ class Html
      * Parse text node
      *
      * @param \DOMNode $node
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element
+     * @param AbstractContainer $element
      * @param array &$styles
      */
     private static function parseText($node, $element, &$styles)
@@ -277,7 +279,7 @@ class Html
      * Parse table node
      *
      * @param \DOMNode $node
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element
+     * @param AbstractContainer $element
      * @param array &$styles
      * @return Table $element
      *
@@ -308,7 +310,7 @@ class Html
      * Parse a table row
      *
      * @param \DOMNode $node
-     * @param \PhpOffice\PhpWord\Element\Table $element
+     * @param Table $element
      * @param array &$styles
      * @return Row $element
      */
@@ -326,7 +328,7 @@ class Html
      * Parse table cell
      *
      * @param \DOMNode $node
-     * @param \PhpOffice\PhpWord\Element\Table $element
+     * @param Table $element
      * @param array &$styles
      * @return Cell $element
      */
@@ -381,7 +383,7 @@ class Html
      * Parse list item node
      *
      * @param \DOMNode $node
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element
+     * @param AbstractContainer $element
      * @param array &$styles
      * @param array $data
      *
@@ -511,9 +513,9 @@ class Html
      * Parse image node
      *
      * @param \DOMNode $node
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element
+     * @param AbstractContainer $element
      *
-     * @return \PhpOffice\PhpWord\Element\Image
+     * @return Image
      **/
     private static function parseImage($node, $element)
     {
@@ -587,7 +589,7 @@ class Html
     /**
      * Parse line break
      *
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $element
+     * @param AbstractContainer $element
      */
     private static function parseLineBreak($element)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Shared/ZipArchive.php b/vendor/phpoffice/phpword/src/PhpWord/Shared/ZipArchive.php
index 3d8d0a4..c333648 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Shared/ZipArchive.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Shared/ZipArchive.php
@@ -151,7 +151,7 @@ class ZipArchive
     /**
      * Close the active archive
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
      * @return bool
      *
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Style.php b/vendor/phpoffice/phpword/src/PhpWord/Style.php
index 1939aab..39ed049 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Style.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Style.php
@@ -40,7 +40,7 @@ class Style
      *
      * @param string $styleName
      * @param array $styles
-     * @return \PhpOffice\PhpWord\Style\Paragraph
+     * @return Paragraph
      */
     public static function addParagraphStyle($styleName, $styles)
     {
@@ -53,7 +53,7 @@ class Style
      * @param string $styleName
      * @param array $fontStyle
      * @param array $paragraphStyle
-     * @return \PhpOffice\PhpWord\Style\Font
+     * @return Font
      */
     public static function addFontStyle($styleName, $fontStyle, $paragraphStyle = null)
     {
@@ -65,7 +65,7 @@ class Style
      *
      * @param string $styleName
      * @param array $styles
-     * @return \PhpOffice\PhpWord\Style\Font
+     * @return Font
      */
     public static function addLinkStyle($styleName, $styles)
     {
@@ -77,7 +77,7 @@ class Style
      *
      * @param string $styleName
      * @param array $styleValues
-     * @return \PhpOffice\PhpWord\Style\Numbering
+     * @return Numbering
      * @since 0.10.0
      */
     public static function addNumberingStyle($styleName, $styleValues)
@@ -91,7 +91,7 @@ class Style
      * @param int $depth
      * @param array $fontStyle
      * @param array $paragraphStyle
-     * @return \PhpOffice\PhpWord\Style\Font
+     * @return Font
      */
     public static function addTitleStyle($depth, $fontStyle, $paragraphStyle = null)
     {
@@ -104,7 +104,7 @@ class Style
      * @param string $styleName
      * @param array $styleTable
      * @param array|null $styleFirstRow
-     * @return \PhpOffice\PhpWord\Style\Table
+     * @return Table
      */
     public static function addTableStyle($styleName, $styleTable, $styleFirstRow = null)
     {
@@ -136,7 +136,7 @@ class Style
      * Set default paragraph style
      *
      * @param array $styles Paragraph style definition
-     * @return \PhpOffice\PhpWord\Style\Paragraph
+     * @return Paragraph
      */
     public static function setDefaultParagraphStyle($styles)
     {
@@ -146,7 +146,7 @@ class Style
     /**
      * Get all styles
      *
-     * @return \PhpOffice\PhpWord\Style\AbstractStyle[]
+     * @return AbstractStyle[]
      */
     public static function getStyles()
     {
@@ -157,7 +157,7 @@ class Style
      * Get style by name
      *
      * @param string $styleName
-     * @return \PhpOffice\PhpWord\Style\AbstractStyle Paragraph|Font|Table|Numbering
+     * @return AbstractStyle Paragraph|Font|Table|Numbering
      */
     public static function getStyle($styleName)
     {
@@ -174,9 +174,9 @@ class Style
      * The $styleValues could be an array or object
      *
      * @param string $name
-     * @param \PhpOffice\PhpWord\Style\AbstractStyle $style
-     * @param array|\PhpOffice\PhpWord\Style\AbstractStyle $value
-     * @return \PhpOffice\PhpWord\Style\AbstractStyle
+     * @param AbstractStyle $style
+     * @param array|AbstractStyle $value
+     * @return AbstractStyle
      */
     private static function setStyleValues($name, $style, $value = null)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Style/Cell.php b/vendor/phpoffice/phpword/src/PhpWord/Style/Cell.php
index c281f99..cf9e49e 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Style/Cell.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Style/Cell.php
@@ -107,7 +107,7 @@ class Cell extends Border
     /**
      * Shading
      *
-     * @var \PhpOffice\PhpWord\Style\Shading
+     * @var Shading
      */
     private $shading;
 
@@ -248,7 +248,7 @@ class Cell extends Border
     /**
      * Get shading
      *
-     * @return \PhpOffice\PhpWord\Style\Shading
+     * @return Shading
      */
     public function getShading()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Style/Font.php b/vendor/phpoffice/phpword/src/PhpWord/Style/Font.php
index 8bfb3ac..84ff7e7 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Style/Font.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Style/Font.php
@@ -219,14 +219,14 @@ class Font extends AbstractStyle
     /**
      * Paragraph style
      *
-     * @var \PhpOffice\PhpWord\Style\Paragraph
+     * @var Paragraph
      */
     private $paragraph;
 
     /**
      * Shading
      *
-     * @var \PhpOffice\PhpWord\Style\Shading
+     * @var Shading
      */
     private $shading;
 
@@ -238,7 +238,7 @@ class Font extends AbstractStyle
 
     /**
      * Languages
-     * @var \PhpOffice\PhpWord\Style\Language
+     * @var Language
      */
     private $lang;
 
@@ -630,7 +630,7 @@ class Font extends AbstractStyle
      * Set background
      *
      * @param string $value
-     * @return \PhpOffice\PhpWord\Style\Table
+     * @return Table
      */
     public function setBgColor($value = null)
     {
@@ -732,7 +732,7 @@ class Font extends AbstractStyle
     /**
      * Get paragraph style
      *
-     * @return \PhpOffice\PhpWord\Style\Paragraph
+     * @return Paragraph
      */
     public function getParagraph()
     {
@@ -778,7 +778,7 @@ class Font extends AbstractStyle
     /**
      * Get shading
      *
-     * @return \PhpOffice\PhpWord\Style\Shading
+     * @return Shading
      */
     public function getShading()
     {
@@ -801,7 +801,7 @@ class Font extends AbstractStyle
     /**
      * Get language
      *
-     * @return \PhpOffice\PhpWord\Style\Language
+     * @return Language
      */
     public function getLang()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Style/Paragraph.php b/vendor/phpoffice/phpword/src/PhpWord/Style/Paragraph.php
index c00dc97..03d9b65 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Style/Paragraph.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Style/Paragraph.php
@@ -86,14 +86,14 @@ class Paragraph extends Border
     /**
      * Indentation
      *
-     * @var \PhpOffice\PhpWord\Style\Indentation
+     * @var Indentation
      */
     private $indentation;
 
     /**
      * Spacing
      *
-     * @var \PhpOffice\PhpWord\Style\Spacing
+     * @var Spacing
      */
     private $spacing;
 
@@ -149,14 +149,14 @@ class Paragraph extends Border
     /**
      * Set of Custom Tab Stops
      *
-     * @var \PhpOffice\PhpWord\Style\Tab[]
+     * @var Tab[]
      */
     private $tabs = array();
 
     /**
      * Shading
      *
-     * @var \PhpOffice\PhpWord\Style\Shading
+     * @var Shading
      */
     private $shading;
 
@@ -340,7 +340,7 @@ class Paragraph extends Border
     /**
      * Get shading
      *
-     * @return \PhpOffice\PhpWord\Style\Indentation
+     * @return Indentation
      */
     public function getIndentation()
     {
@@ -405,7 +405,7 @@ class Paragraph extends Border
     /**
      * Get spacing
      *
-     * @return \PhpOffice\PhpWord\Style\Spacing
+     * @return Spacing
      * @todo Rename to getSpacing in 1.0
      */
     public function getSpace()
@@ -526,7 +526,7 @@ class Paragraph extends Border
      *
      * @param int|float|string $lineHeight
      *
-     * @throws \PhpOffice\PhpWord\Exception\InvalidStyleException
+     * @throws InvalidStyleException
      * @return self
      */
     public function setLineHeight($lineHeight)
@@ -686,7 +686,7 @@ class Paragraph extends Border
     /**
      * Get tabs
      *
-     * @return \PhpOffice\PhpWord\Style\Tab[]
+     * @return Tab[]
      */
     public function getTabs()
     {
@@ -759,7 +759,7 @@ class Paragraph extends Border
     /**
      * Get shading
      *
-     * @return \PhpOffice\PhpWord\Style\Shading
+     * @return Shading
      */
     public function getShading()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Style/Section.php b/vendor/phpoffice/phpword/src/PhpWord/Style/Section.php
index 476846f..b592e49 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Style/Section.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Style/Section.php
@@ -55,7 +55,7 @@ class Section extends Border
     /**
      * Paper size
      *
-     * @var \PhpOffice\PhpWord\Style\Paper
+     * @var Paper
      */
     private $paper;
 
@@ -161,7 +161,7 @@ class Section extends Border
     /**
      * Line numbering
      *
-     * @var \PhpOffice\PhpWord\Style\LineNumbering
+     * @var LineNumbering
      * @see  http://www.schemacentral.com/sc/ooxml/e-w_lnNumType-1.html
      */
     private $lineNumbering;
@@ -580,7 +580,7 @@ class Section extends Border
     /**
      * Get line numbering
      *
-     * @return \PhpOffice\PhpWord\Style\LineNumbering
+     * @return LineNumbering
      */
     public function getLineNumbering()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Style/Shape.php b/vendor/phpoffice/phpword/src/PhpWord/Style/Shape.php
index fc84241..6807f20 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Style/Shape.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Style/Shape.php
@@ -50,35 +50,35 @@ class Shape extends AbstractStyle
     /**
      * Frame
      *
-     * @var \PhpOffice\PhpWord\Style\Frame
+     * @var Frame
      */
     private $frame;
 
     /**
      * Fill
      *
-     * @var \PhpOffice\PhpWord\Style\Fill
+     * @var Fill
      */
     private $fill;
 
     /**
      * Outline
      *
-     * @var \PhpOffice\PhpWord\Style\Outline
+     * @var Outline
      */
     private $outline;
 
     /**
      * Shadow
      *
-     * @var \PhpOffice\PhpWord\Style\Shadow
+     * @var Shadow
      */
     private $shadow;
 
     /**
      * 3D extrusion
      *
-     * @var \PhpOffice\PhpWord\Style\Extrusion
+     * @var Extrusion
      */
     private $extrusion;
 
@@ -141,7 +141,7 @@ class Shape extends AbstractStyle
     /**
      * Get frame
      *
-     * @return \PhpOffice\PhpWord\Style\Frame
+     * @return Frame
      */
     public function getFrame()
     {
@@ -164,7 +164,7 @@ class Shape extends AbstractStyle
     /**
      * Get fill
      *
-     * @return \PhpOffice\PhpWord\Style\Fill
+     * @return Fill
      */
     public function getFill()
     {
@@ -187,7 +187,7 @@ class Shape extends AbstractStyle
     /**
      * Get outline
      *
-     * @return \PhpOffice\PhpWord\Style\Outline
+     * @return Outline
      */
     public function getOutline()
     {
@@ -210,7 +210,7 @@ class Shape extends AbstractStyle
     /**
      * Get shadow
      *
-     * @return \PhpOffice\PhpWord\Style\Shadow
+     * @return Shadow
      */
     public function getShadow()
     {
@@ -233,7 +233,7 @@ class Shape extends AbstractStyle
     /**
      * Get 3D extrusion
      *
-     * @return \PhpOffice\PhpWord\Style\Extrusion
+     * @return Extrusion
      */
     public function getExtrusion()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Style/Table.php b/vendor/phpoffice/phpword/src/PhpWord/Style/Table.php
index a3d454f..c41ee04 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Style/Table.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Style/Table.php
@@ -102,7 +102,7 @@ class Table extends Border
     /**
      * Shading
      *
-     * @var \PhpOffice\PhpWord\Style\Shading
+     * @var Shading
      */
     private $shading;
 
@@ -463,7 +463,7 @@ class Table extends Border
     /**
      * Get shading
      *
-     * @return \PhpOffice\PhpWord\Style\Shading
+     * @return Shading
      */
     public function getShading()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/TemplateProcessor.php b/vendor/phpoffice/phpword/src/PhpWord/TemplateProcessor.php
index c46038e..9e8a3e2 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/TemplateProcessor.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/TemplateProcessor.php
@@ -67,8 +67,8 @@ class TemplateProcessor
      *
      * @param string $documentTemplate The fully qualified template filename
      *
-     * @throws \PhpOffice\PhpWord\Exception\CreateTemporaryFileException
-     * @throws \PhpOffice\PhpWord\Exception\CopyFileException
+     * @throws CreateTemporaryFileException
+     * @throws CopyFileException
      */
     public function __construct($documentTemplate)
     {
@@ -107,7 +107,7 @@ class TemplateProcessor
      * @param string $xml
      * @param \XSLTProcessor $xsltProcessor
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
      * @return string
      */
@@ -155,7 +155,7 @@ class TemplateProcessor
      * @param array $xslOptions
      * @param string $xslOptionsUri
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      */
     public function applyXslStyleSheet($xslDomDocument, $xslOptions = array(), $xslOptionsUri = '')
     {
@@ -258,7 +258,7 @@ class TemplateProcessor
      * @param string $search
      * @param int $numberOfClones
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      */
     public function cloneRow($search, $numberOfClones)
     {
@@ -382,7 +382,7 @@ class TemplateProcessor
     /**
      * Saves the result document.
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
      * @return string
      */
@@ -526,7 +526,7 @@ class TemplateProcessor
      *
      * @param int $offset
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
      * @return int
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/AbstractWriter.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/AbstractWriter.php
index 884769d..f20c59d 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/AbstractWriter.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/AbstractWriter.php
@@ -33,7 +33,7 @@ abstract class AbstractWriter implements WriterInterface
     /**
      * PHPWord object
      *
-     * @var \PhpOffice\PhpWord\PhpWord
+     * @var PhpWord
      */
     protected $phpWord = null;
 
@@ -97,7 +97,7 @@ abstract class AbstractWriter implements WriterInterface
      * Get PhpWord object
      *
      * @throws \PhpOffice\PhpWord\Exception\Exception
-     * @return \PhpOffice\PhpWord\PhpWord
+     * @return PhpWord
      */
     public function getPhpWord()
     {
@@ -234,7 +234,7 @@ abstract class AbstractWriter implements WriterInterface
     /**
      * Cleanup temporary file.
      *
-     * @throws \PhpOffice\PhpWord\Exception\CopyFileException
+     * @throws CopyFileException
      */
     protected function cleanupTempFile()
     {
@@ -268,7 +268,7 @@ abstract class AbstractWriter implements WriterInterface
      *
      * @throws \Exception
      *
-     * @return \PhpOffice\PhpWord\Shared\ZipArchive
+     * @return ZipArchive
      */
     protected function getZipArchive($filename)
     {
@@ -335,7 +335,7 @@ abstract class AbstractWriter implements WriterInterface
     /**
      * Add files to package.
      *
-     * @param \PhpOffice\PhpWord\Shared\ZipArchive $zip
+     * @param ZipArchive $zip
      * @param mixed $elements
      */
     protected function addFilesToPackage(ZipArchive $zip, $elements)
@@ -369,7 +369,7 @@ abstract class AbstractWriter implements WriterInterface
      *
      * Get the actual source from an archive image.
      *
-     * @param \PhpOffice\PhpWord\Shared\ZipArchive $zipPackage
+     * @param ZipArchive $zipPackage
      * @param string $source
      * @param string $target
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML.php
index 9b098dd..25f14f2 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer;
 
+use PhpOffice\PhpWord\Writer\HTML\Part\AbstractPart;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\PhpWord;
 
 /**
@@ -52,7 +54,7 @@ class HTML extends AbstractWriter implements WriterInterface
         foreach ($this->parts as $partName) {
             $partClass = 'PhpOffice\\PhpWord\\Writer\\HTML\\Part\\' . $partName;
             if (class_exists($partClass)) {
-                /** @var \PhpOffice\PhpWord\Writer\HTML\Part\AbstractPart $part Type hint */
+                /** @var AbstractPart $part Type hint */
                 $part = new $partClass();
                 $part->setParentWriter($this);
                 $this->writerParts[strtolower($partName)] = $part;
@@ -65,7 +67,7 @@ class HTML extends AbstractWriter implements WriterInterface
      *
      * @param string $filename
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      */
     public function save($filename = null)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/AbstractElement.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/AbstractElement.php
index 47f0f93..1eba1fa 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/AbstractElement.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/AbstractElement.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\HTML\Element;
 
+use PhpOffice\PhpWord\Escaper\AbstractEscaper;
 use PhpOffice\PhpWord\Element\AbstractElement as Element;
 use PhpOffice\PhpWord\Writer\AbstractWriter;
 use Zend\Escaper\Escaper;
@@ -31,7 +32,7 @@ abstract class AbstractElement
     /**
      * Parent writer
      *
-     * @var \PhpOffice\PhpWord\Writer\AbstractWriter
+     * @var AbstractWriter
      */
     protected $parentWriter;
 
@@ -50,7 +51,7 @@ abstract class AbstractElement
     protected $withoutP = false;
 
     /**
-     * @var \Zend\Escaper\Escaper|\PhpOffice\PhpWord\Escaper\AbstractEscaper
+     * @var Escaper|AbstractEscaper
      */
     protected $escaper;
 
@@ -62,7 +63,7 @@ abstract class AbstractElement
     /**
      * Create new instance
      *
-     * @param \PhpOffice\PhpWord\Writer\AbstractWriter $parentWriter
+     * @param AbstractWriter $parentWriter
      * @param \PhpOffice\PhpWord\Element\AbstractElement $element
      * @param bool $withoutP
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Container.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Container.php
index 677b617..50e6aae 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Container.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Container.php
@@ -53,7 +53,7 @@ class Container extends AbstractElement
             $elementClass = get_class($element);
             $writerClass = str_replace('PhpOffice\\PhpWord\\Element', $this->namespace, $elementClass);
             if (class_exists($writerClass)) {
-                /** @var \PhpOffice\PhpWord\Writer\HTML\Element\AbstractElement $writer Type hint */
+                /** @var AbstractElement $writer Type hint */
                 $writer = new $writerClass($this->parentWriter, $element, $withoutP);
                 $content .= $writer->write();
             }
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Footnote.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Footnote.php
index 60b246f..3d1e8d2 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Footnote.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Footnote.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\HTML\Element;
 
+use PhpOffice\PhpWord\Writer\HTML;
 /**
  * Footnote element HTML writer
  *
@@ -41,7 +42,7 @@ class Footnote extends AbstractElement
         if (!$this->element instanceof \PhpOffice\PhpWord\Element\Footnote) {
             return '';
         }
-        /** @var \PhpOffice\PhpWord\Writer\HTML $parentWriter Type hint */
+        /** @var HTML $parentWriter Type hint */
         $parentWriter = $this->parentWriter;
 
         $noteId = count($parentWriter->getNotes()) + 1;
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/PageBreak.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/PageBreak.php
index 5cab272..3f5d17a 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/PageBreak.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/PageBreak.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\HTML\Element;
 
+use PhpOffice\PhpWord\Writer\HTML;
 /**
  * PageBreak element HTML writer
  *
@@ -33,7 +34,7 @@ class PageBreak extends TextBreak
      */
     public function write()
     {
-        /** @var \PhpOffice\PhpWord\Writer\HTML $parentWriter Type hint */
+        /** @var HTML $parentWriter Type hint */
         $parentWriter = $this->parentWriter;
         if ($parentWriter->isPdf()) {
             return '<pagebreak style="page-break-before: always;" pagebreak="true"></pagebreak>';
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/AbstractPart.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/AbstractPart.php
index 7b6e0c3..d073cd8 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/AbstractPart.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/AbstractPart.php
@@ -27,12 +27,12 @@ use Zend\Escaper\Escaper;
 abstract class AbstractPart
 {
     /**
-     * @var \PhpOffice\PhpWord\Writer\AbstractWriter
+     * @var AbstractWriter
      */
     private $parentWriter;
 
     /**
-     * @var \Zend\Escaper\Escaper
+     * @var Escaper
      */
     protected $escaper;
 
@@ -47,7 +47,7 @@ abstract class AbstractPart
     abstract public function write();
 
     /**
-     * @param \PhpOffice\PhpWord\Writer\AbstractWriter $writer
+     * @param AbstractWriter $writer
      */
     public function setParentWriter(AbstractWriter $writer = null)
     {
@@ -55,9 +55,9 @@ abstract class AbstractPart
     }
 
     /**
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      *
-     * @return \PhpOffice\PhpWord\Writer\AbstractWriter
+     * @return AbstractWriter
      */
     public function getParentWriter()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/Body.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/Body.php
index eea1735..6edf2d1 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/Body.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/Body.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\HTML\Part;
 
+use PhpOffice\PhpWord\Writer\HTML;
 use PhpOffice\PhpWord\Writer\HTML\Element\Container;
 use PhpOffice\PhpWord\Writer\HTML\Element\TextRun as TextRunWriter;
 
@@ -58,7 +59,7 @@ class Body extends AbstractPart
      */
     private function writeNotes()
     {
-        /** @var \PhpOffice\PhpWord\Writer\HTML $parentWriter Type hint */
+        /** @var HTML $parentWriter Type hint */
         $parentWriter = $this->getParentWriter();
         $phpWord = $parentWriter->getPhpWord();
         $notes = $parentWriter->getNotes();
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Style/AbstractStyle.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Style/AbstractStyle.php
index fa27c08..412578e 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Style/AbstractStyle.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Style/AbstractStyle.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\HTML\Style;
 
+use PhpOffice\PhpWord\Writer\AbstractWriter;
 use PhpOffice\PhpWord\Style\AbstractStyle as Style;
 
 /**
@@ -29,7 +30,7 @@ abstract class AbstractStyle
     /**
      * Parent writer
      *
-     * @var \PhpOffice\PhpWord\Writer\AbstractWriter
+     * @var AbstractWriter
      */
     private $parentWriter;
 
@@ -58,7 +59,7 @@ abstract class AbstractStyle
     /**
      * Set parent writer.
      *
-     * @param \PhpOffice\PhpWord\Writer\AbstractWriter $writer
+     * @param AbstractWriter $writer
      */
     public function setParentWriter($writer)
     {
@@ -68,7 +69,7 @@ abstract class AbstractStyle
     /**
      * Get parent writer
      *
-     * @return \PhpOffice\PhpWord\Writer\AbstractWriter
+     * @return AbstractWriter
      */
     public function getParentWriter()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText.php
index 7158874..0a5e9e6 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText.php
@@ -30,7 +30,7 @@ class ODText extends AbstractWriter implements WriterInterface
     /**
      * Create new ODText writer
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function __construct(PhpWord $phpWord = null)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/AbstractPart.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/AbstractPart.php
index 74412fd..2d38df4 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/AbstractPart.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/AbstractPart.php
@@ -36,7 +36,7 @@ abstract class AbstractPart extends Word2007AbstractPart
     /**
      * Write common root attributes.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     protected function writeCommonRootAttributes(XMLWriter $xmlWriter)
     {
@@ -72,7 +72,7 @@ abstract class AbstractPart extends Word2007AbstractPart
     /**
      * Write font faces declaration.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     protected function writeFontFaces(XMLWriter $xmlWriter)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Content.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Content.php
index 8ae4dca..3b6a085 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Content.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Content.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\ODText\Part;
 
+use PhpOffice\PhpWord\Writer\ODText\Style\AbstractStyle;
+use PhpOffice\PhpWord\Element\AbstractContainer;
 use PhpOffice\Common\XMLWriter;
 use PhpOffice\PhpWord\Element\Image;
 use PhpOffice\PhpWord\Element\Table;
@@ -110,7 +112,7 @@ class Content extends AbstractPart
      *
      * @since 0.11.0
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     private function writeAutoStyles(XMLWriter $xmlWriter)
     {
@@ -120,7 +122,7 @@ class Content extends AbstractPart
         foreach ($this->autoStyles as $element => $styles) {
             $writerClass = 'PhpOffice\\PhpWord\\Writer\\ODText\\Style\\' . $element;
             foreach ($styles as $style) {
-                /** @var \PhpOffice\PhpWord\Writer\ODText\Style\AbstractStyle $styleWriter Type hint */
+                /** @var AbstractStyle $styleWriter Type hint */
                 $styleWriter = new $writerClass($xmlWriter, $style);
                 $styleWriter->write();
             }
@@ -132,7 +134,7 @@ class Content extends AbstractPart
     /**
      * Write automatic styles.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     private function writeTextStyles(XMLWriter $xmlWriter)
     {
@@ -143,7 +145,7 @@ class Content extends AbstractPart
                 if ($style->isAuto() === true) {
                     $styleClass = str_replace('\\Style\\', '\\Writer\\ODText\\Style\\', get_class($style));
                     if (class_exists($styleClass)) {
-                        /** @var \PhpOffice\PhpWord\Writer\ODText\Style\AbstractStyle $styleWriter Type hint */
+                        /** @var AbstractStyle $styleWriter Type hint */
                         $styleWriter = new $styleClass($xmlWriter, $style);
                         $styleWriter->write();
                     }
@@ -165,7 +167,7 @@ class Content extends AbstractPart
     /**
      * Get automatic styles.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     private function getAutoStyles(PhpWord $phpWord)
     {
@@ -185,7 +187,7 @@ class Content extends AbstractPart
      *
      * Table style can be null or string of the style name
      *
-     * @param \PhpOffice\PhpWord\Element\AbstractContainer $container
+     * @param AbstractContainer $container
      * @param int &$paragraphStyleCount
      * @param int &$fontStyleCount
      * @todo Simplify the logic
@@ -218,7 +220,7 @@ class Content extends AbstractPart
     /**
      * Get style of individual element
      *
-     * @param \PhpOffice\PhpWord\Element\Text &$element
+     * @param Text $element
      * @param int &$paragraphStyleCount
      * @param int &$fontStyleCount
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Meta.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Meta.php
index f592c5f..d8ad8da 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Meta.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Meta.php
@@ -86,7 +86,7 @@ class Meta extends AbstractPart
     /**
      * Write individual property
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string $property
      * @param string $value
      *
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Styles.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Styles.php
index e49fa25..edc4b93 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Styles.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Styles.php
@@ -65,7 +65,7 @@ class Styles extends AbstractPart
     /**
      * Write default styles.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     private function writeDefault(XMLWriter $xmlWriter)
     {
@@ -114,7 +114,7 @@ class Styles extends AbstractPart
     /**
      * Write named styles.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     private function writeNamed(XMLWriter $xmlWriter)
     {
@@ -136,7 +136,7 @@ class Styles extends AbstractPart
     /**
      * Write page layout styles.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     private function writePageLayout(XMLWriter $xmlWriter)
     {
@@ -187,7 +187,7 @@ class Styles extends AbstractPart
     /**
      * Write master style.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     private function writeMaster(XMLWriter $xmlWriter)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF.php
index 45fe8f3..6197073 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer;
 
+use PhpOffice\PhpWord\Writer\PDF\AbstractRenderer;
 use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Settings;
@@ -31,16 +32,16 @@ class PDF
     /**
      * The wrapper for the requested PDF rendering engine
      *
-     * @var \PhpOffice\PhpWord\Writer\PDF\AbstractRenderer
+     * @var AbstractRenderer
      */
     private $renderer = null;
 
     /**
      * Instantiate a new renderer of the configured type within this container class
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      */
     public function __construct(PhpWord $phpWord)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF/AbstractRenderer.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF/AbstractRenderer.php
index 7b668e0..7ae30b6 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF/AbstractRenderer.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF/AbstractRenderer.php
@@ -78,7 +78,7 @@ abstract class AbstractRenderer extends HTML
      *
      * @param PhpWord $phpWord PhpWord object
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      */
     public function __construct(PhpWord $phpWord)
     {
@@ -175,7 +175,7 @@ abstract class AbstractRenderer extends HTML
      *
      * @param string $filename Name of the file to save as
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      * @return resource
      */
     protected function prepareForSave($filename = null)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF.php
index 7756253..ea6085e 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer;
 
+use PhpOffice\PhpWord\Writer\RTF\Part\AbstractPart;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\PhpWord;
 
 /**
@@ -36,7 +38,7 @@ class RTF extends AbstractWriter implements WriterInterface
     /**
      * Create new instance
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      */
     public function __construct(PhpWord $phpWord = null)
     {
@@ -46,7 +48,7 @@ class RTF extends AbstractWriter implements WriterInterface
         foreach ($this->parts as $partName) {
             $partClass = get_class($this) . '\\Part\\' . $partName;
             if (class_exists($partClass)) {
-                /** @var \PhpOffice\PhpWord\Writer\RTF\Part\AbstractPart $part Type hint */
+                /** @var AbstractPart $part Type hint */
                 $part = new $partClass();
                 $part->setParentWriter($this);
                 $this->writerParts[strtolower($partName)] = $part;
@@ -58,7 +60,7 @@ class RTF extends AbstractWriter implements WriterInterface
      * Save content to file.
      *
      * @param string $filename
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      */
     public function save($filename = null)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/TextBreak.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/TextBreak.php
index 2009fcf..3196a7c 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/TextBreak.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/TextBreak.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\RTF\Element;
 
+use PhpOffice\PhpWord\Writer\RTF;
 /**
  * TextBreak element RTF writer
  *
@@ -31,7 +32,7 @@ class TextBreak extends AbstractElement
      */
     public function write()
     {
-        /** @var \PhpOffice\PhpWord\Writer\RTF $parentWriter Type hint */
+        /** @var RTF $parentWriter Type hint */
         $parentWriter = $this->parentWriter;
         $parentWriter->setLastParagraphStyle();
 
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/AbstractPart.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/AbstractPart.php
index 7569a10..26b6109 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/AbstractPart.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/AbstractPart.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\RTF\Part;
 
+use PhpOffice\PhpWord\Escaper\EscaperInterface;
 use PhpOffice\PhpWord\Escaper\Rtf;
 use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\Writer\AbstractWriter;
@@ -27,12 +28,12 @@ use PhpOffice\PhpWord\Writer\AbstractWriter;
 abstract class AbstractPart
 {
     /**
-     * @var \PhpOffice\PhpWord\Writer\AbstractWriter
+     * @var AbstractWriter
      */
     private $parentWriter;
 
     /**
-     * @var \PhpOffice\PhpWord\Escaper\EscaperInterface
+     * @var EscaperInterface
      */
     protected $escaper;
 
@@ -47,7 +48,7 @@ abstract class AbstractPart
     abstract public function write();
 
     /**
-     * @param \PhpOffice\PhpWord\Writer\AbstractWriter $writer
+     * @param AbstractWriter $writer
      */
     public function setParentWriter(AbstractWriter $writer = null)
     {
@@ -55,8 +56,8 @@ abstract class AbstractPart
     }
 
     /**
-     * @throws \PhpOffice\PhpWord\Exception\Exception
-     * @return \PhpOffice\PhpWord\Writer\AbstractWriter
+     * @throws Exception
+     * @return AbstractWriter
      */
     public function getParentWriter()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/Header.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/Header.php
index 73f1351..525134c 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/Header.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/Header.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\RTF\Part;
 
+use PhpOffice\PhpWord\Style\Border;
+use PhpOffice\PhpWord\Style\AbstractStyle;
 use PhpOffice\PhpWord\Settings;
 use PhpOffice\PhpWord\Shared\Converter;
 use PhpOffice\PhpWord\Style;
@@ -210,7 +212,7 @@ class Header extends AbstractPart
     /**
      * Register border colors.
      *
-     * @param \PhpOffice\PhpWord\Style\Border $style
+     * @param Border $style
      */
     private function registerBorderColor($style)
     {
@@ -225,7 +227,7 @@ class Header extends AbstractPart
     /**
      * Register fonts and colors.
      *
-     * @param \PhpOffice\PhpWord\Style\AbstractStyle $style
+     * @param AbstractStyle $style
      */
     private function registerFontItems($style)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Style/Border.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Style/Border.php
index 0ba9f60..99aeedb 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Style/Border.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Style/Border.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\RTF\Style;
 
+use PhpOffice\PhpWord\Writer\RTF;
 /**
  * Border style writer
  *
@@ -77,7 +78,7 @@ class Border extends AbstractStyle
      */
     private function writeSide($side, $width, $color = '')
     {
-        /** @var \PhpOffice\PhpWord\Writer\RTF $rtfWriter */
+        /** @var RTF $rtfWriter */
         $rtfWriter = $this->getParentWriter();
         $colorIndex = 0;
         if ($rtfWriter !== null) {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007.php
index fcef982..0e847f0 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007.php
@@ -17,6 +17,10 @@
 
 namespace PhpOffice\PhpWord\Writer;
 
+use PhpOffice\PhpWord\Writer\Word2007\Part\AbstractPart;
+use PhpOffice\PhpWord\Element\AbstractElement;
+use PhpOffice\PhpWord\Collection\AbstractCollection;
+use PhpOffice\PhpWord\Element\Chart;
 use PhpOffice\PhpWord\Element\Section;
 use PhpOffice\PhpWord\Media;
 use PhpOffice\PhpWord\PhpWord;
@@ -77,7 +81,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
         foreach (array_keys($this->parts) as $partName) {
             $partClass = get_class($this) . '\\Part\\' . $partName;
             if (class_exists($partClass)) {
-                /** @var \PhpOffice\PhpWord\Writer\Word2007\Part\AbstractPart $part Type hint */
+                /** @var AbstractPart $part Type hint */
                 $part = new $partClass();
                 $part->setParentWriter($this);
                 $this->writerParts[strtolower($partName)] = $part;
@@ -167,7 +171,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
     /**
      * Add header/footer media files, e.g. footer1.xml.rels.
      *
-     * @param \PhpOffice\PhpWord\Shared\ZipArchive $zip
+     * @param ZipArchive $zip
      * @param string $docPart
      */
     private function addHeaderFooterMedia(ZipArchive $zip, $docPart)
@@ -181,7 +185,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
                         $this->registerContentTypes($media);
                     }
 
-                    /** @var \PhpOffice\PhpWord\Writer\Word2007\Part\AbstractPart $writerPart Type hint */
+                    /** @var AbstractPart $writerPart Type hint */
                     $writerPart = $this->getWriterPart('relspart')->setMedia($media);
                     $zip->addFromString("word/_rels/{$file}.xml.rels", $writerPart->write());
                 }
@@ -192,8 +196,8 @@ class Word2007 extends AbstractWriter implements WriterInterface
     /**
      * Add header/footer content.
      *
-     * @param \PhpOffice\PhpWord\Element\Section &$section
-     * @param \PhpOffice\PhpWord\Shared\ZipArchive $zip
+     * @param Section $section
+     * @param ZipArchive $zip
      * @param string $elmType header|footer
      * @param int &$rId
      */
@@ -202,7 +206,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
         $getFunction = $elmType == 'header' ? 'getHeaders' : 'getFooters';
         $elmCount = ($section->getSectionId() - 1) * 3;
         $elements = $section->$getFunction();
-        /** @var \PhpOffice\PhpWord\Element\AbstractElement $element Type hint */
+        /** @var AbstractElement $element Type hint */
         foreach ($elements as &$element) {
             $elmCount++;
             $element->setRelationId(++$rId);
@@ -210,7 +214,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
             $this->contentTypes['override']["/word/$elmFile"] = $elmType;
             $this->relationships[] = array('target' => $elmFile, 'type' => $elmType, 'rID' => $rId);
 
-            /** @var \PhpOffice\PhpWord\Writer\Word2007\Part\AbstractPart $writerPart Type hint */
+            /** @var AbstractPart $writerPart Type hint */
             $writerPart = $this->getWriterPart($elmType)->setElement($element);
             $zip->addFromString("word/$elmFile", $writerPart->write());
         }
@@ -219,7 +223,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
     /**
      * Add footnotes/endnotes
      *
-     * @param \PhpOffice\PhpWord\Shared\ZipArchive $zip
+     * @param ZipArchive $zip
      * @param int &$rId
      * @param string $noteType
      */
@@ -232,7 +236,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
         $collection = $phpWord->$method();
 
         // Add footnotes media files, relations, and contents
-        /** @var \PhpOffice\PhpWord\Collection\AbstractCollection $collection Type hint */
+        /** @var AbstractCollection $collection Type hint */
         if ($collection->countItems() > 0) {
             $media = Media::getElements($noteType);
             $this->addFilesToPackage($zip, $media);
@@ -242,7 +246,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
 
             // Write relationships file, e.g. word/_rels/footnotes.xml
             if (!empty($media)) {
-                /** @var \PhpOffice\PhpWord\Writer\Word2007\Part\AbstractPart $writerPart Type hint */
+                /** @var AbstractPart $writerPart Type hint */
                 $writerPart = $this->getWriterPart('relspart')->setMedia($media);
                 $zip->addFromString("word/_rels/{$partName}.xml.rels", $writerPart->write());
             }
@@ -256,7 +260,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
     /**
      * Add comments
      *
-     * @param \PhpOffice\PhpWord\Shared\ZipArchive $zip
+     * @param ZipArchive $zip
      * @param int &$rId
      */
     private function addComments(ZipArchive $zip, &$rId)
@@ -266,7 +270,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
         $partName = 'comments';
 
         // Add comment relations and contents
-        /** @var \PhpOffice\PhpWord\Collection\AbstractCollection $collection Type hint */
+        /** @var AbstractCollection $collection Type hint */
         if ($collection->countItems() > 0) {
             $this->relationships[] = array('target' => "{$partName}.xml", 'type' => $partName, 'rID' => ++$rId);
 
@@ -279,7 +283,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
     /**
      * Add chart.
      *
-     * @param \PhpOffice\PhpWord\Shared\ZipArchive $zip
+     * @param ZipArchive $zip
      * @param int &$rId
      */
     private function addChart(ZipArchive $zip, &$rId)
@@ -289,7 +293,7 @@ class Word2007 extends AbstractWriter implements WriterInterface
         $collection = $phpWord->getCharts();
         $index = 0;
         if ($collection->countItems() > 0) {
-            /** @var \PhpOffice\PhpWord\Element\Chart $chart */
+            /** @var Chart $chart */
             foreach ($collection->getItems() as $chart) {
                 $index++;
                 $rId++;
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/AbstractElement.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/AbstractElement.php
index 8c9f0bb..4ad2ee6 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/AbstractElement.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/AbstractElement.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Element;
 
+use PhpOffice\PhpWord\Writer\Word2007\Style\AbstractStyle;
 use PhpOffice\Common\Text as CommonText;
 use PhpOffice\Common\XMLWriter;
 use PhpOffice\PhpWord\Element\AbstractElement as Element;
@@ -32,7 +33,7 @@ abstract class AbstractElement
     /**
      * XML writer
      *
-     * @var \PhpOffice\Common\XMLWriter
+     * @var XMLWriter
      */
     private $xmlWriter;
 
@@ -58,7 +59,7 @@ abstract class AbstractElement
     /**
      * Create new instance
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\AbstractElement $element
      * @param bool $withoutP
      */
@@ -72,7 +73,7 @@ abstract class AbstractElement
     /**
      * Get XML Writer
      *
-     * @return \PhpOffice\Common\XMLWriter
+     * @return XMLWriter
      */
     protected function getXmlWriter()
     {
@@ -190,7 +191,7 @@ abstract class AbstractElement
         $class = "PhpOffice\\PhpWord\\Writer\\Word2007\\Style\\{$styleType}";
         $styleObject = $this->element->$method();
 
-        /** @var \PhpOffice\PhpWord\Writer\Word2007\Style\AbstractStyle $styleWriter Type Hint */
+        /** @var AbstractStyle $styleWriter Type Hint */
         $styleWriter = new $class($this->xmlWriter, $styleObject);
         if (method_exists($styleWriter, 'setIsInline')) {
             $styleWriter->setIsInline(true);
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Container.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Container.php
index 47dae29..0273f63 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Container.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Container.php
@@ -71,7 +71,7 @@ class Container extends AbstractElement
     /**
      * Write individual element
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\AbstractElement $element
      * @param bool $withoutP
      * @return string
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Field.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Field.php
index 75d4983..f23adaf 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Field.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Field.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Element;
 
+use PhpOffice\PhpWord\Element\TextRun;
 /**
  * Field element writer
  *
@@ -62,7 +63,7 @@ class Field extends Text
         $xmlWriter->endElement(); // w:r
 
         if ($element->getText() != null) {
-            if ($element->getText() instanceof \PhpOffice\PhpWord\Element\TextRun) {
+            if ($element->getText() instanceof TextRun) {
                 $containerWriter = new Container($xmlWriter, $element->getText(), true);
                 $containerWriter->write();
 
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/FormField.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/FormField.php
index c77ca37..10a0384 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/FormField.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/FormField.php
@@ -105,7 +105,7 @@ class FormField extends Text
      * Write textinput.
      *
      * @see  http://www.datypic.com/sc/ooxml/t-w_CT_FFTextInput.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\FormField $element
      */
     private function writeTextInput(XMLWriter $xmlWriter, FormFieldElement $element)
@@ -121,7 +121,7 @@ class FormField extends Text
      * Write checkbox.
      *
      * @see  http://www.datypic.com/sc/ooxml/t-w_CT_FFCheckBox.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\FormField $element
      */
     private function writeCheckBox(XMLWriter $xmlWriter, FormFieldElement $element)
@@ -144,7 +144,7 @@ class FormField extends Text
      * Write dropdown.
      *
      * @see  http://www.datypic.com/sc/ooxml/t-w_CT_FFDDList.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\FormField $element
      */
     private function writeDropDown(XMLWriter $xmlWriter, FormFieldElement $element)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/SDT.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/SDT.php
index 6a20256..584fdf6 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/SDT.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/SDT.php
@@ -77,7 +77,7 @@ class SDT extends Text
      * Write combo box.
      *
      * @see  http://www.datypic.com/sc/ooxml/t-w_CT_SdtComboBox.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\SDT $element
      */
     private function writeComboBox(XMLWriter $xmlWriter, SDTElement $element)
@@ -96,7 +96,7 @@ class SDT extends Text
      * Write drop down list.
      *
      * @see  http://www.datypic.com/sc/ooxml/t-w_CT_SdtDropDownList.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\SDT $element
      */
     private function writeDropDownList(XMLWriter $xmlWriter, SDTElement $element)
@@ -108,7 +108,7 @@ class SDT extends Text
      * Write date.
      *
      * @see  http://www.datypic.com/sc/ooxml/t-w_CT_SdtDate.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\SDT $element
      */
     private function writeDate(XMLWriter $xmlWriter, SDTElement $element)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Shape.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Shape.php
index e384db0..d407158 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Shape.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Shape.php
@@ -77,7 +77,7 @@ class Shape extends AbstractElement
     /**
      * Write arc.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Shape $style
      */
     private function writeArc(XMLWriter $xmlWriter, ShapeStyle $style)
@@ -91,7 +91,7 @@ class Shape extends AbstractElement
     /**
      * Write curve.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Shape $style
      */
     private function writeCurve(XMLWriter $xmlWriter, ShapeStyle $style)
@@ -106,7 +106,7 @@ class Shape extends AbstractElement
     /**
      * Write line.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Shape $style
      */
     private function writeLine(XMLWriter $xmlWriter, ShapeStyle $style)
@@ -120,7 +120,7 @@ class Shape extends AbstractElement
     /**
      * Write polyline.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Shape $style
      */
     private function writePolyline(XMLWriter $xmlWriter, ShapeStyle $style)
@@ -131,7 +131,7 @@ class Shape extends AbstractElement
     /**
      * Write rectangle.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Shape $style
      */
     private function writeRoundRect(XMLWriter $xmlWriter, ShapeStyle $style)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/TOC.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/TOC.php
index 36ed7f8..bfbc8bf 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/TOC.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/TOC.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Element;
 
+use PhpOffice\PhpWord\Element\Title;
 use PhpOffice\Common\XMLWriter;
 use PhpOffice\PhpWord\Element\TOC as TOCElement;
 use PhpOffice\PhpWord\Style\Font;
@@ -64,9 +65,9 @@ class TOC extends AbstractElement
     /**
      * Write title
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\TOC $element
-     * @param \PhpOffice\PhpWord\Element\Title $title
+     * @param Title $title
      * @param bool $writeFieldMark
      */
     private function writeTitle(XMLWriter $xmlWriter, TOCElement $element, $title, $writeFieldMark)
@@ -132,7 +133,7 @@ class TOC extends AbstractElement
     /**
      * Write style
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\TOC $element
      * @param int $indent
      */
@@ -178,7 +179,7 @@ class TOC extends AbstractElement
     /**
      * Write TOC Field.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\TOC $element
      */
     private function writeFieldMark(XMLWriter $xmlWriter, TOCElement $element)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Table.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Table.php
index c059077..ce2a9f5 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Table.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Table.php
@@ -71,7 +71,7 @@ class Table extends AbstractElement
     /**
      * Write column.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\Table $element
      */
     private function writeColumns(XMLWriter $xmlWriter, TableElement $element)
@@ -107,7 +107,7 @@ class Table extends AbstractElement
     /**
      * Write row.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\Row $row
      */
     private function writeRow(XMLWriter $xmlWriter, RowElement $row)
@@ -133,7 +133,7 @@ class Table extends AbstractElement
     /**
      * Write cell.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\Cell $cell
      */
     private function writeCell(XMLWriter $xmlWriter, CellElement $cell)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/AbstractPart.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/AbstractPart.php
index 038eb21..42500f1 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/AbstractPart.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/AbstractPart.php
@@ -30,7 +30,7 @@ abstract class AbstractPart
     /**
      * Parent writer
      *
-     * @var \PhpOffice\PhpWord\Writer\AbstractWriter
+     * @var AbstractWriter
      */
     protected $parentWriter;
 
@@ -49,7 +49,7 @@ abstract class AbstractPart
     /**
      * Set parent writer.
      *
-     * @param \PhpOffice\PhpWord\Writer\AbstractWriter $writer
+     * @param AbstractWriter $writer
      */
     public function setParentWriter(AbstractWriter $writer = null)
     {
@@ -59,8 +59,8 @@ abstract class AbstractPart
     /**
      * Get parent writer
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
-     * @return \PhpOffice\PhpWord\Writer\AbstractWriter
+     * @throws Exception
+     * @return AbstractWriter
      */
     public function getParentWriter()
     {
@@ -73,7 +73,7 @@ abstract class AbstractPart
     /**
      * Get XML Writer
      *
-     * @return \PhpOffice\Common\XMLWriter
+     * @return XMLWriter
      */
     protected function getXmlWriter()
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Chart.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Chart.php
index c3703f9..fc18586 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Chart.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Chart.php
@@ -95,7 +95,7 @@ class Chart extends AbstractPart
      * Write chart
      *
      * @see  http://www.datypic.com/sc/ooxml/t-draw-chart_CT_Chart.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     private function writeChart(XMLWriter $xmlWriter)
     {
@@ -119,7 +119,7 @@ class Chart extends AbstractPart
      * @see  http://www.datypic.com/sc/ooxml/t-draw-chart_CT_AreaChart.html
      * @see  http://www.datypic.com/sc/ooxml/t-draw-chart_CT_RadarChart.html
      * @see  http://www.datypic.com/sc/ooxml/t-draw-chart_CT_ScatterChart.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      */
     private function writePlotArea(XMLWriter $xmlWriter)
     {
@@ -177,7 +177,7 @@ class Chart extends AbstractPart
     /**
      * Write series.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param bool $scatter
      */
     private function writeSeries(XMLWriter $xmlWriter, $scatter = false)
@@ -214,7 +214,7 @@ class Chart extends AbstractPart
     /**
      * Write series items.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string $type
      * @param array $values
      */
@@ -250,7 +250,7 @@ class Chart extends AbstractPart
      * Write axis
      *
      * @see  http://www.datypic.com/sc/ooxml/t-draw-chart_CT_CatAx.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string $type
      */
     private function writeAxis(XMLWriter $xmlWriter, $type)
@@ -292,7 +292,7 @@ class Chart extends AbstractPart
      * Write shape
      *
      * @see  http://www.datypic.com/sc/ooxml/t-a_CT_ShapeProperties.html
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param bool $line
      */
     private function writeShape(XMLWriter $xmlWriter, $line = false)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Comments.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Comments.php
index 2b8f926..4f29b81 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Comments.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Comments.php
@@ -29,7 +29,7 @@ class Comments extends AbstractPart
     /**
      * Comments collection to be written
      *
-     * @var \PhpOffice\PhpWord\Element\Comment[]
+     * @var Comment[]
      */
     protected $elements;
 
@@ -70,8 +70,8 @@ class Comments extends AbstractPart
     /**
      * Write comment item.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
-     * @param \PhpOffice\PhpWord\Element\Comment $comment
+     * @param XMLWriter $xmlWriter
+     * @param Comment $comment
      */
     protected function writeComment(XMLWriter $xmlWriter, Comment $comment)
     {
@@ -92,7 +92,7 @@ class Comments extends AbstractPart
     /**
      * Set element
      *
-     * @param \PhpOffice\PhpWord\Element\Comment[] $elements
+     * @param Comment[] $elements
      * @return self
      */
     public function setElements($elements)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/ContentTypes.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/ContentTypes.php
index 9be988d..a41a89d 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/ContentTypes.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/ContentTypes.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PhpOffice\PhpWord\Writer\Word2007;
 use PhpOffice\Common\XMLWriter;
 
 /**
@@ -31,7 +32,7 @@ class ContentTypes extends AbstractPart
      */
     public function write()
     {
-        /** @var \PhpOffice\PhpWord\Writer\Word2007 $parentWriter Type hint */
+        /** @var Word2007 $parentWriter Type hint */
         $parentWriter = $this->getParentWriter();
         $contentTypes = $parentWriter->getContentTypes();
 
@@ -80,7 +81,7 @@ class ContentTypes extends AbstractPart
     /**
      * Write content types element
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter XML Writer
+     * @param XMLWriter $xmlWriter XML Writer
      * @param array $parts
      * @param bool $isDefault
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Document.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Document.php
index 72e4fcd..89c1d70 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Document.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Document.php
@@ -80,7 +80,7 @@ class Document extends AbstractPart
     /**
      * Write begin section.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\Section $section
      */
     private function writeSection(XMLWriter $xmlWriter, Section $section)
@@ -95,7 +95,7 @@ class Document extends AbstractPart
     /**
      * Write end section.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Element\Section $section
      */
     private function writeSectionSettings(XMLWriter $xmlWriter, Section $section)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footer.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footer.php
index cfc9dd4..2ca396c 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footer.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footer.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PhpOffice\PhpWord\Element\Header;
 use PhpOffice\PhpWord\Writer\Word2007\Element\Container;
 
 /**
@@ -71,7 +72,7 @@ class Footer extends AbstractPart
     /**
      * Set element
      *
-     * @param \PhpOffice\PhpWord\Element\Footer|\PhpOffice\PhpWord\Element\Header $element
+     * @param \PhpOffice\PhpWord\Element\Footer|Header $element
      * @return self
      */
     public function setElement($element)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footnotes.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footnotes.php
index c9e3bca..bf635f7 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footnotes.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footnotes.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PhpOffice\PhpWord\Collection\Endnotes;
+use PhpOffice\PhpWord\Element\Endnote;
 use PhpOffice\Common\XMLWriter;
 use PhpOffice\PhpWord\Element\Footnote;
 use PhpOffice\PhpWord\Writer\Word2007\Element\Container;
@@ -58,7 +60,7 @@ class Footnotes extends AbstractPart
     /**
      * Footnotes/endnotes collection to be written
      *
-     * @var \PhpOffice\PhpWord\Collection\Footnotes|\PhpOffice\PhpWord\Collection\Endnotes
+     * @var \PhpOffice\PhpWord\Collection\Footnotes|Endnotes
      */
     protected $elements;
 
@@ -122,7 +124,7 @@ class Footnotes extends AbstractPart
     /**
      * Set element
      *
-     * @param \PhpOffice\PhpWord\Collection\Footnotes|\PhpOffice\PhpWord\Collection\Endnotes $elements
+     * @param \PhpOffice\PhpWord\Collection\Footnotes|Endnotes $elements
      * @return self
      */
     public function setElements($elements)
@@ -135,8 +137,8 @@ class Footnotes extends AbstractPart
     /**
      * Write note item.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
-     * @param \PhpOffice\PhpWord\Element\Footnote|\PhpOffice\PhpWord\Element\Endnote $element
+     * @param XMLWriter $xmlWriter
+     * @param Footnote|Endnote $element
      */
     protected function writeNote(XMLWriter $xmlWriter, $element)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Numbering.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Numbering.php
index 6233a6b..4c65a58 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Numbering.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Numbering.php
@@ -97,8 +97,8 @@ class Numbering extends AbstractPart
     /**
      * Write level.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
-     * @param \PhpOffice\PhpWord\Style\NumberingLevel $level
+     * @param XMLWriter $xmlWriter
+     * @param NumberingLevel $level
      */
     private function writeLevel(XMLWriter $xmlWriter, NumberingLevel $level)
     {
@@ -137,8 +137,8 @@ class Numbering extends AbstractPart
      *
      * @since 0.11.0
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
-     * @param \PhpOffice\PhpWord\Style\NumberingLevel $level
+     * @param XMLWriter $xmlWriter
+     * @param NumberingLevel $level
      * @todo Use paragraph style writer
      */
     private function writeParagraph(XMLWriter $xmlWriter, NumberingLevel $level)
@@ -169,8 +169,8 @@ class Numbering extends AbstractPart
      *
      * @since 0.11.0
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
-     * @param \PhpOffice\PhpWord\Style\NumberingLevel $level
+     * @param XMLWriter $xmlWriter
+     * @param NumberingLevel $level
      * @todo Use font style writer
      */
     private function writeFont(XMLWriter $xmlWriter, NumberingLevel $level)
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Rels.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Rels.php
index 154c7e8..f83f754 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Rels.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Rels.php
@@ -49,7 +49,7 @@ class Rels extends AbstractPart
     /**
      * Write relationships.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param array $xmlRels
      * @param array $mediaRels
      * @param int $relId
@@ -76,7 +76,7 @@ class Rels extends AbstractPart
     /**
      * Write media relationships.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param int $relId
      * @param array $mediaRel
      */
@@ -101,13 +101,13 @@ class Rels extends AbstractPart
      * Format:
      * <Relationship Id="rId..." Type="http://..." Target="....xml" TargetMode="..." />
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param int $relId Relationship ID
      * @param string $type Relationship type
      * @param string $target Relationship target
      * @param string $targetMode Relationship target mode
      *
-     * @throws \PhpOffice\PhpWord\Exception\Exception
+     * @throws Exception
      */
     private function writeRel(XMLWriter $xmlWriter, $relId, $type, $target, $targetMode = '')
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/RelsDocument.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/RelsDocument.php
index 505aa22..b6d6591 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/RelsDocument.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/RelsDocument.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PhpOffice\PhpWord\Writer\Word2007;
 /**
  * Word2007 document relationship writer: word/_rels/document.xml.rels
  *
@@ -41,7 +42,7 @@ class RelsDocument extends Rels
         );
         $xmlWriter = $this->getXmlWriter();
 
-        /** @var \PhpOffice\PhpWord\Writer\Word2007 $parentWriter Type hint */
+        /** @var Word2007 $parentWriter Type hint */
         $parentWriter = $this->getParentWriter();
         $this->writeRels($xmlWriter, $xmlRels, $parentWriter->getRelationships());
 
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Settings.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Settings.php
index e56e261..f6e693f 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Settings.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Settings.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PhpOffice\Common\XMLWriter;
+use PhpOffice\PhpWord\Metadata\Protection;
 use PhpOffice\PhpWord\ComplexType\ProofState;
 use PhpOffice\PhpWord\ComplexType\TrackChangesView;
 use PhpOffice\PhpWord\Shared\Microsoft\PasswordEncoder;
@@ -69,7 +71,7 @@ class Settings extends AbstractPart
     /**
      * Write indivual setting, recursive to any child settings.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string $settingKey
      * @param array|string $settingValue
      */
@@ -178,7 +180,7 @@ class Settings extends AbstractPart
     /**
      * Get protection settings.
      *
-     * @param \PhpOffice\PhpWord\Metadata\Protection $documentProtection
+     * @param Protection $documentProtection
      */
     private function setDocumentProtection($documentProtection)
     {
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Styles.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Styles.php
index 126cda4..cacb8f6 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Styles.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Styles.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PhpOffice\PhpWord\Style\AbstractStyle;
 use PhpOffice\Common\XMLWriter;
 use PhpOffice\PhpWord\Settings as PhpWordSettings;
 use PhpOffice\PhpWord\Style;
@@ -77,8 +78,8 @@ class Styles extends AbstractPart
     /**
      * Write default font and other default styles.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
-     * @param \PhpOffice\PhpWord\Style\AbstractStyle[] $styles
+     * @param XMLWriter $xmlWriter
+     * @param AbstractStyle[] $styles
      */
     private function writeDefaultStyles(XMLWriter $xmlWriter, $styles)
     {
@@ -150,7 +151,7 @@ class Styles extends AbstractPart
     /**
      * Write font style.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string $styleName
      * @param \PhpOffice\PhpWord\Style\Font $style
      */
@@ -212,7 +213,7 @@ class Styles extends AbstractPart
     /**
      * Write paragraph style.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string $styleName
      * @param \PhpOffice\PhpWord\Style\Paragraph $style
      */
@@ -244,7 +245,7 @@ class Styles extends AbstractPart
     /**
      * Write table style.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string $styleName
      * @param \PhpOffice\PhpWord\Style\Table $style
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/AbstractStyle.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/AbstractStyle.php
index d775693..5af9659 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/AbstractStyle.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/AbstractStyle.php
@@ -30,7 +30,7 @@ abstract class AbstractStyle
     /**
      * XML writer
      *
-     * @var \PhpOffice\Common\XMLWriter
+     * @var XMLWriter
      */
     private $xmlWriter;
 
@@ -49,7 +49,7 @@ abstract class AbstractStyle
     /**
      * Create new instance.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string|\PhpOffice\PhpWord\Style\AbstractStyle $style
      */
     public function __construct(XMLWriter $xmlWriter, $style = null)
@@ -61,7 +61,7 @@ abstract class AbstractStyle
     /**
      * Get XML Writer
      *
-     * @return \PhpOffice\Common\XMLWriter
+     * @return XMLWriter
      */
     protected function getXmlWriter()
     {
@@ -106,7 +106,7 @@ abstract class AbstractStyle
     /**
      * Write child style.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string $name
      * @param mixed $value
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Frame.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Frame.php
index 9bd5db6..201822d 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Frame.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Frame.php
@@ -104,7 +104,7 @@ class Frame extends AbstractStyle
     /**
      * Write wrap.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Frame $style
      * @param string $wrap
      */
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/MarginBorder.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/MarginBorder.php
index 5c3ecde..002b221 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/MarginBorder.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/MarginBorder.php
@@ -78,7 +78,7 @@ class MarginBorder extends AbstractStyle
     /**
      * Write side.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param string $side
      * @param int $width
      * @param string $color
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Paragraph.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Paragraph.php
index 424b87f..5d38649 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Paragraph.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Paragraph.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Style;
 
+use PhpOffice\PhpWord\Style\Numbering;
 use PhpOffice\Common\XMLWriter;
 use PhpOffice\PhpWord\Style;
 use PhpOffice\PhpWord\Style\Paragraph as ParagraphStyle;
@@ -143,7 +144,7 @@ class Paragraph extends AbstractStyle
     /**
      * Write tabs.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Tab[] $tabs
      */
     private function writeTabs(XMLWriter $xmlWriter, $tabs)
@@ -161,7 +162,7 @@ class Paragraph extends AbstractStyle
     /**
      * Write numbering.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param array $numbering
      */
     private function writeNumbering(XMLWriter $xmlWriter, $numbering)
@@ -169,7 +170,7 @@ class Paragraph extends AbstractStyle
         $numStyle = $numbering['style'];
         $numLevel = $numbering['level'];
 
-        /** @var \PhpOffice\PhpWord\Style\Numbering $numbering */
+        /** @var Numbering $numbering */
         $numbering = Style::getStyle($numStyle);
         if ($numStyle !== null && $numbering !== null) {
             $xmlWriter->startElement('w:numPr');
diff --git a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Table.php b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Table.php
index 620e4fb..b55e692 100644
--- a/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Table.php
+++ b/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Table.php
@@ -58,7 +58,7 @@ class Table extends AbstractStyle
     /**
      * Write full style.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Table $style
      */
     private function writeStyle(XMLWriter $xmlWriter, TableStyle $style)
@@ -94,7 +94,7 @@ class Table extends AbstractStyle
     /**
      * Write width.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param int $width
      * @param string $unit
      */
@@ -109,7 +109,7 @@ class Table extends AbstractStyle
     /**
      * Write margin.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Table $style
      */
     private function writeMargin(XMLWriter $xmlWriter, TableStyle $style)
@@ -128,7 +128,7 @@ class Table extends AbstractStyle
     /**
      * Write border.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Table $style
      */
     private function writeBorder(XMLWriter $xmlWriter, TableStyle $style)
@@ -148,7 +148,7 @@ class Table extends AbstractStyle
     /**
      * Write row style.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Table $style
      */
     private function writeFirstRow(XMLWriter $xmlWriter, TableStyle $style)
@@ -167,7 +167,7 @@ class Table extends AbstractStyle
     /**
      * Write shading.
      *
-     * @param \PhpOffice\Common\XMLWriter $xmlWriter
+     * @param XMLWriter $xmlWriter
      * @param \PhpOffice\PhpWord\Style\Table $style
      */
     private function writeShading(XMLWriter $xmlWriter, TableStyle $style)
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Collection/CollectionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Collection/CollectionTest.php
index a875717..30b084f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Collection/CollectionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Collection/CollectionTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Collection;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Element\Footnote;
 
 /**
@@ -24,7 +25,7 @@ use PhpOffice\PhpWord\Element\Footnote;
  *
  * Using concrete class Footnotes instead of AbstractCollection
  */
-class CollectionTest extends \PHPUnit\Framework\TestCase
+class CollectionTest extends TestCase
 {
     /**
      * Test collection
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php b/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php
index b8df9bb..c22a449 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\ComplexType;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\SimpleType\NumberFormat;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\SimpleType\NumberFormat;
  * @coversDefaultClass \PhpOffice\PhpWord\ComplexType\FootnoteProperties
  * @runTestsInSeparateProcesses
  */
-class FootnotePropertiesTest extends \PHPUnit\Framework\TestCase
+class FootnotePropertiesTest extends TestCase
 {
     /**
      * Test setting style with normal value
@@ -46,33 +47,30 @@ class FootnotePropertiesTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test throws exception if wrong position given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongPos()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $footnoteProp = new FootnoteProperties();
         $footnoteProp->setPos(NumberFormat::LOWER_ROMAN);
     }
 
     /**
      * Test throws exception if wrong number format given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongNumFmt()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $footnoteProp = new FootnoteProperties();
         $footnoteProp->setNumFmt(FootnoteProperties::POSITION_DOC_END);
     }
 
     /**
      * Test throws exception if wrong number restart given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongNumRestart()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $footnoteProp = new FootnoteProperties();
         $footnoteProp->setNumRestart(NumberFormat::LOWER_ROMAN);
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php b/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php
index baf2009..15691a4 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\ComplexType;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\ComplexType\ProofState
  *
  * @coversDefaultClass \PhpOffice\PhpWord\ComplexType\ProofState
  */
-class ProofStateTest extends \PHPUnit\Framework\TestCase
+class ProofStateTest extends TestCase
 {
     /**
      * Tests the getters and setters
@@ -39,22 +40,20 @@ class ProofStateTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test throws exception if wrong grammar proof state value given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongGrammar()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $pState = new ProofState();
         $pState->setGrammar('Wrong');
     }
 
     /**
      * Test throws exception if wrong spelling proof state value given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongSpelling()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $pState = new ProofState();
         $pState->setSpelling('Wrong');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/AbstractElementTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/AbstractElementTest.php
index 87bb5e1..4036e6f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/AbstractElementTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/AbstractElementTest.php
@@ -17,10 +17,11 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\AbstractElement
  */
-class AbstractElementTest extends \PHPUnit\Framework\TestCase
+class AbstractElementTest extends TestCase
 {
     /**
      * Test set/get element index
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/BookmarkTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/BookmarkTest.php
index bd5d27a..82362a9 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/BookmarkTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/BookmarkTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\Footer
  *
  * @runTestsInSeparateProcesses
  */
-class BookmarkTest extends \PHPUnit\Framework\TestCase
+class BookmarkTest extends TestCase
 {
     /**
      * New instance
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php
index 4e8daa0..347536d 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php
@@ -17,12 +17,14 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\InvalidObjectException;
 /**
  * Test class for PhpOffice\PhpWord\Element\Cell
  *
  * @runTestsInSeparateProcesses
  */
-class CellTest extends \PHPUnit\Framework\TestCase
+class CellTest extends TestCase
 {
     /**
      * New instance
@@ -186,11 +188,10 @@ class CellTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test add object exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidObjectException
      */
     public function testAddObjectException()
     {
+        $this->expectException(InvalidObjectException::class);
         $src = __DIR__ . '/../_files/xsl/passthrough.xsl';
         $oCell = new Cell();
         $oCell->addObject($src);
@@ -225,11 +226,10 @@ class CellTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Add preserve text exception
-     *
-     * @expectedException \BadMethodCallException
      */
     public function testAddPreserveTextException()
     {
+        $this->expectException(\BadMethodCallException::class);
         $oCell = new Cell();
         $oCell->setDocPart('Section', 1);
         $oCell->addPreserveText('text');
@@ -266,6 +266,6 @@ class CellTest extends \PHPUnit\Framework\TestCase
     {
         $oCell = new Cell();
 
-        $this->assertInternalType('array', $oCell->getElements());
+        $this->assertIsArray($oCell->getElements());
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/CheckBoxTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/CheckBoxTest.php
index d5bda9b..e546429 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/CheckBoxTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/CheckBoxTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\Style\Font;
 
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\Style\Font;
  *
  * @runTestsInSeparateProcesses
  */
-class CheckBoxTest extends \PHPUnit\Framework\TestCase
+class CheckBoxTest extends TestCase
 {
     /**
      * Construct
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php
index d33a54f..7bb04da 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\Header
  *
  * @runTestsInSeparateProcesses
  */
-class CommentTest extends \PHPUnit\Framework\TestCase
+class CommentTest extends TestCase
 {
     /**
      * New instance
@@ -66,7 +67,7 @@ class CommentTest extends \PHPUnit\Framework\TestCase
     {
         $oComment = new Comment('Test User', new \DateTime(), 'my_initials');
 
-        $this->assertInternalType('array', $oComment->getElements());
+        $this->assertIsArray($oComment->getElements());
     }
 
     /**
@@ -81,21 +82,17 @@ class CommentTest extends \PHPUnit\Framework\TestCase
         $this->assertEquals($iVal, $oComment->getRelationId());
     }
 
-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testExceptionOnCommentStartOnComment()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $dummyComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment->setCommentRangeStart($dummyComment);
     }
 
-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testExceptionOnCommentEndOnComment()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $dummyComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment->setCommentRangeEnd($dummyComment);
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php
index 8baa68e..f463376 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\Field
  *
  * @runTestsInSeparateProcesses
  */
-class FieldTest extends \PHPUnit\Framework\TestCase
+class FieldTest extends TestCase
 {
     /**
      * New instance
@@ -113,48 +114,44 @@ class FieldTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setType exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid type
      */
     public function testSetTypeException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid type');
         $object = new Field();
         $object->setType('foo');
     }
 
     /**
      * Test setProperties exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid property
      */
     public function testSetPropertiesException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid property');
         $object = new Field('PAGE');
         $object->setProperties(array('foo' => 'bar'));
     }
 
     /**
      * Test setOptions exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid option
      */
     public function testSetOptionsException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid option');
         $object = new Field('PAGE');
         $object->setOptions(array('foo' => 'bar'));
     }
 
     /**
      * Test setText exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid text
      */
     public function testSetTextException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid text');
         $object = new Field('XE');
         $object->setText(array());
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php
index b68e80c..bdafdb0 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\Footer
  *
  * @runTestsInSeparateProcesses
  */
-class FooterTest extends \PHPUnit\Framework\TestCase
+class FooterTest extends TestCase
 {
     /**
      * New instance
@@ -154,7 +155,7 @@ class FooterTest extends \PHPUnit\Framework\TestCase
     {
         $oFooter = new Footer(1);
 
-        $this->assertInternalType('array', $oFooter->getElements());
+        $this->assertIsArray($oFooter->getElements());
     }
 
     /**
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php
index fd4c8d0..e81cddb 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\Footnote
  *
  * @runTestsInSeparateProcesses
  */
-class FootnoteTest extends \PHPUnit\Framework\TestCase
+class FootnoteTest extends TestCase
 {
     /**
      * New instance without parameter
@@ -112,6 +113,6 @@ class FootnoteTest extends \PHPUnit\Framework\TestCase
     public function testGetElements()
     {
         $oFootnote = new Footnote();
-        $this->assertInternalType('array', $oFootnote->getElements());
+        $this->assertIsArray($oFootnote->getElements());
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php
index 29b2fef..6464cbb 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\Header
  *
  * @runTestsInSeparateProcesses
  */
-class HeaderTest extends \PHPUnit\Framework\TestCase
+class HeaderTest extends TestCase
 {
     /**
      * New instance
@@ -176,7 +177,7 @@ class HeaderTest extends \PHPUnit\Framework\TestCase
     {
         $oHeader = new Header(1);
 
-        $this->assertInternalType('array', $oHeader->getElements());
+        $this->assertIsArray($oHeader->getElements());
     }
 
     /**
@@ -227,11 +228,10 @@ class HeaderTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Add footnote exception
-     *
-     * @expectedException \BadMethodCallException
      */
     public function testAddFootnoteException()
     {
+        $this->expectException(\BadMethodCallException::class);
         $header = new Header(1);
         $header->addFootnote();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php
index 0966ea4..1715e27 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php
@@ -17,6 +17,9 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\InvalidImageException;
+use PhpOffice\PhpWord\Exception\UnsupportedImageTypeException;
 use PhpOffice\PhpWord\SimpleType\Jc;
 
 /**
@@ -24,7 +27,7 @@ use PhpOffice\PhpWord\SimpleType\Jc;
  *
  * @runTestsInSeparateProcesses
  */
-class ImageTest extends \PHPUnit\Framework\TestCase
+class ImageTest extends TestCase
 {
     /**
      * New instance
@@ -105,32 +108,29 @@ class ImageTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test invalid local image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testInvalidImageLocal()
     {
+        $this->expectException(InvalidImageException::class);
         new Image(__DIR__ . '/../_files/images/thisisnotarealimage');
     }
 
     /**
      * Test invalid PHP Image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testInvalidImagePhp()
     {
+        $this->expectException(InvalidImageException::class);
         $object = new Image('test.php');
         $object->getSource();
     }
 
     /**
      * Test unsupported image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
      */
     public function testUnsupportedImage()
     {
+        $this->expectException(UnsupportedImageTypeException::class);
         //disable ssl verification, never do this in real application, you should pass the certiciate instead!!!
         $arrContextOptions = array(
             'ssl' => array(
@@ -212,11 +212,10 @@ class ImageTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test invalid string image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testInvalidImageString()
     {
+        $this->expectException(InvalidImageException::class);
         $object = new Image('this_is-a_non_valid_image');
         $object->getSource();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/LineTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/LineTest.php
index 4d41494..ac9b457 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/LineTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/LineTest.php
@@ -17,13 +17,16 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Shared\Converter;
+use PhpOffice\PhpWord\Style\Image;
 /**
  * Test class for PhpOffice\PhpWord\Element\Line
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\Line
  * @runTestsInSeparateProcesses
  */
-class LineTest extends \PHPUnit\Framework\TestCase
+class LineTest extends TestCase
 {
     /**
      * Create new instance
@@ -53,15 +56,15 @@ class LineTest extends \PHPUnit\Framework\TestCase
     {
         $oLine = new Line(
             array(
-                'width'            => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(14),
-                'height'           => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(4),
+                'width'            => Converter::cmToPixel(14),
+                'height'           => Converter::cmToPixel(4),
                 'positioning'      => 'absolute',
                 'posHorizontalRel' => 'page',
                 'posVerticalRel'   => 'page',
                 'flip'             => true,
-                'marginLeft'       => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(5),
-                'marginTop'        => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(3),
-                'wrappingStyle'    => \PhpOffice\PhpWord\Style\Image::WRAPPING_STYLE_SQUARE,
+                'marginLeft'       => Converter::cmToPixel(5),
+                'marginTop'        => Converter::cmToPixel(3),
+                'wrappingStyle'    => Image::WRAPPING_STYLE_SQUARE,
                 'beginArrow'       => \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_BLOCK,
                 'endArrow'         => \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_OVAL,
                 'dash'             => \PhpOffice\PhpWord\Style\Line::DASH_STYLE_LONG_DASH_DOT_DOT,
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/LinkTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/LinkTest.php
index 63e8f1d..179a0d7 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/LinkTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/LinkTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Style\Font;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\Style\Font;
  * @coversDefaultClass \PhpOffice\PhpWord\Element\Link
  * @runTestsInSeparateProcesses
  */
-class LinkTest extends \PHPUnit\Framework\TestCase
+class LinkTest extends TestCase
 {
     /**
      * Create new instance
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemRunTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemRunTest.php
index 84beec0..87a0d4a 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemRunTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemRunTest.php
@@ -17,12 +17,14 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Style\ListItem;
 /**
  * Test class for PhpOffice\PhpWord\Element\ListItemRun
  *
  * @runTestsInSeparateProcesses
  */
-class ListItemRunTest extends \PHPUnit\Framework\TestCase
+class ListItemRunTest extends TestCase
 {
     /**
      * New instance
@@ -76,10 +78,10 @@ class ListItemRunTest extends \PHPUnit\Framework\TestCase
      */
     public function testStyle()
     {
-        $oListItemRun = new ListItemRun(1, array('listType' => \PhpOffice\PhpWord\Style\ListItem::TYPE_NUMBER));
+        $oListItemRun = new ListItemRun(1, array('listType' => ListItem::TYPE_NUMBER));
 
         $this->assertInstanceOf('PhpOffice\\PhpWord\\Style\\ListItem', $oListItemRun->getStyle());
-        $this->assertEquals(\PhpOffice\PhpWord\Style\ListItem::TYPE_NUMBER, $oListItemRun->getStyle()->getListType());
+        $this->assertEquals(ListItem::TYPE_NUMBER, $oListItemRun->getStyle()->getListType());
     }
 
     /**
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemTest.php
index 5fae34d..3df588f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\ListItem
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\ListItem
  * @runTestsInSeparateProcesses
  */
-class ListItemTest extends \PHPUnit\Framework\TestCase
+class ListItemTest extends TestCase
 {
     /**
      * Get text object
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php
index 71f1297..10d7de3 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php
@@ -17,13 +17,15 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\InvalidObjectException;
 /**
  * Test class for PhpOffice\PhpWord\Element\Object
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\Object
  * @runTestsInSeparateProcesses
  */
-class ObjectTest extends \PHPUnit\Framework\TestCase
+class ObjectTest extends TestCase
 {
     /**
      * Create new instance with supported files, 4 character extention
@@ -53,11 +55,10 @@ class ObjectTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Create new instance with non-supported files
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidObjectException
      */
     public function testConstructWithNotSupportedFiles()
     {
+        $this->expectException(InvalidObjectException::class);
         $src = __DIR__ . '/../_files/xsl/passthrough.xsl';
         $oObject = new Object($src);
         $oObject->getSource();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/PageBreakTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/PageBreakTest.php
index 3b08184..0bb9c4c 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/PageBreakTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/PageBreakTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\PageBreak
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\PageBreak
  * @runTestsInSeparateProcesses
  */
-class PageBreakTest extends \PHPUnit\Framework\TestCase
+class PageBreakTest extends TestCase
 {
     /**
      * Executed before each method of the class
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/PreserveTextTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/PreserveTextTest.php
index c2767a4..d21ffd7 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/PreserveTextTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/PreserveTextTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\SimpleType\Jc;
 
 /**
@@ -24,7 +25,7 @@ use PhpOffice\PhpWord\SimpleType\Jc;
  *
  * @runTestsInSeparateProcesses
  */
-class PreserveTextTest extends \PHPUnit\Framework\TestCase
+class PreserveTextTest extends TestCase
 {
     /**
      * Create new instance
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php
index 9abf377..936b721 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\Row
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\Row
  * @runTestsInSeparateProcesses
  */
-class RowTest extends \PHPUnit\Framework\TestCase
+class RowTest extends TestCase
 {
     /**
      * Create new instance
@@ -34,7 +35,7 @@ class RowTest extends \PHPUnit\Framework\TestCase
 
         $this->assertInstanceOf('PhpOffice\\PhpWord\\Element\\Row', $oRow);
         $this->assertNull($oRow->getHeight());
-        $this->assertInternalType('array', $oRow->getCells());
+        $this->assertIsArray($oRow->getCells());
         $this->assertCount(0, $oRow->getCells());
         $this->assertInstanceOf('PhpOffice\\PhpWord\\Style\\Row', $oRow->getStyle());
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php
index 41eae21..b6c0e76 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\SDT
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\SDT
  */
-class SDTTest extends \PHPUnit\Framework\TestCase
+class SDTTest extends TestCase
 {
     /**
      * Create new instance
@@ -50,12 +51,11 @@ class SDTTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test set type exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid style value
      */
     public function testSetTypeException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid style value');
         $object = new SDT('comboBox');
         $object->setType('foo');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php
index 8b6c9a4..5aff914 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\InvalidObjectException;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Style;
 
@@ -25,7 +27,7 @@ use PhpOffice\PhpWord\Style;
  * @coversDefaultClass \PhpOffice\PhpWord\Element\Section
  * @runTestsInSeparateProcesses
  */
-class SectionTest extends \PHPUnit\Framework\TestCase
+class SectionTest extends TestCase
 {
     /**
      * @covers ::setStyle
@@ -87,10 +89,10 @@ class SectionTest extends \PHPUnit\Framework\TestCase
 
     /**
      * @coversNothing
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidObjectException
      */
     public function testAddObjectException()
     {
+        $this->expectException(InvalidObjectException::class);
         $source = __DIR__ . '/_files/xsl/passthrough.xsl';
         $section = new Section(0);
         $section->addObject($source);
@@ -154,11 +156,11 @@ class SectionTest extends \PHPUnit\Framework\TestCase
 
     /**
      * @covers ::addHeader
-     * @expectedException \Exception
-     * @expectedExceptionMessage Invalid header/footer type.
      */
     public function testAddHeaderException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Invalid header/footer type.');
         $object = new Section(1);
         $object->addHeader('ODD');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/TOCTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/TOCTest.php
index d826a1a..2ea1224 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/TOCTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/TOCTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Style\Tab;
 use PhpOffice\PhpWord\PhpWord;
 
 /**
@@ -24,7 +26,7 @@ use PhpOffice\PhpWord\PhpWord;
  *
  * @runTestsInSeparateProcesses
  */
-class TOCTest extends \PHPUnit\Framework\TestCase
+class TOCTest extends TestCase
 {
     /**
      * Construct with font and TOC style in array format
@@ -33,7 +35,7 @@ class TOCTest extends \PHPUnit\Framework\TestCase
     {
         $expected = array(
             'position' => 9062,
-            'leader'   => \PhpOffice\PhpWord\Style\Tab::TAB_LEADER_DOT,
+            'leader'   => Tab::TAB_LEADER_DOT,
             'indent'   => 200,
         );
         $object = new TOC(array('size' => 11), array('position' => $expected['position']));
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/TableTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/TableTest.php
index 0bbefb2..14f56c9 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/TableTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/TableTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\Table
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\Table
  * @runTestsInSeparateProcesses
  */
-class TableTest extends \PHPUnit\Framework\TestCase
+class TableTest extends TestCase
 {
     /**
      * Create new instance
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBoxTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBoxTest.php
index 63b093c..d95b077 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBoxTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBoxTest.php
@@ -17,13 +17,15 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Shared\Converter;
 /**
  * Test class for PhpOffice\PhpWord\Element\TextBox
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\TextBox
  * @runTestsInSeparateProcesses
  */
-class TextBoxTest extends \PHPUnit\Framework\TestCase
+class TextBoxTest extends TestCase
 {
     /**
      * Create new instance
@@ -53,11 +55,11 @@ class TextBoxTest extends \PHPUnit\Framework\TestCase
     {
         $oTextBox = new TextBox(
             array(
-                'width'       => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(4.5),
-                'height'      => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(17.5),
+                'width'       => Converter::cmToPixel(4.5),
+                'height'      => Converter::cmToPixel(17.5),
                 'positioning' => 'absolute',
-                'marginLeft'  => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(15.4),
-                'marginTop'   => \PhpOffice\PhpWord\Shared\Converter::cmToPixel(9.9),
+                'marginLeft'  => Converter::cmToPixel(15.4),
+                'marginTop'   => Converter::cmToPixel(9.9),
                 'stroke'      => 0,
                 'innerMargin' => 0,
                 'borderSize'  => 1,
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBreakTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBreakTest.php
index 9b25bac..dde4b13 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBreakTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBreakTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Style\Font;
 use PhpOffice\PhpWord\Style\Paragraph;
 
@@ -26,7 +27,7 @@ use PhpOffice\PhpWord\Style\Paragraph;
  * @coversDefaultClass \PhpOffice\PhpWord\Element\TextBreak
  * @runTestsInSeparateProcesses
  */
-class TextBreakTest extends \PHPUnit\Framework\TestCase
+class TextBreakTest extends TestCase
 {
     /**
      * Construct with empty value
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/TextRunTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/TextRunTest.php
index 59b8b89..3ea55cd 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/TextRunTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/TextRunTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\Style\Paragraph;
@@ -26,7 +27,7 @@ use PhpOffice\PhpWord\Style\Paragraph;
  *
  * @runTestsInSeparateProcesses
  */
-class TextRunTest extends \PHPUnit\Framework\TestCase
+class TextRunTest extends TestCase
 {
     /**
      * New instance
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/TextTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/TextTest.php
index 09027ad..7fc8fe0 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/TextTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/TextTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\Style\Font;
 
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\Style\Font;
  *
  * @runTestsInSeparateProcesses
  */
-class TextTest extends \PHPUnit\Framework\TestCase
+class TextTest extends TestCase
 {
     /**
      * New instance
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/TitleTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/TitleTest.php
index 3ea6242..e85088d 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/TitleTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/TitleTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Element;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Element\Title
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\Title
  * @runTestsInSeparateProcesses
  */
-class TitleTest extends \PHPUnit\Framework\TestCase
+class TitleTest extends TestCase
 {
     /**
      * Create new instance
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php
index fa9949e..76ac2ae 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php
@@ -17,21 +17,22 @@
 
 namespace PhpOffice\PhpWord\Exception;
 
+use PHPUnit\Framework\TestCase;
 /**
  * @covers \PhpOffice\PhpWord\Exception\CopyFileException
  * @coversDefaultClass \PhpOffice\PhpWord\Exception\CopyFileException
  */
-class CopyFileExceptionTest extends \PHPUnit\Framework\TestCase
+class CopyFileExceptionTest extends TestCase
 {
     /**
      * CopyFileException can be thrown.
      *
      * @covers            ::__construct()
-     * @expectedException \PhpOffice\PhpWord\Exception\CopyFileException
      * @test
      */
     public function testCopyFileExceptionCanBeThrown()
     {
+        $this->expectException(CopyFileException::class);
         throw new CopyFileException('C:\source\dummy.txt', 'C:\destination\dummy.txt');
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php
index 6b4d14b..c722289 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php
@@ -17,21 +17,22 @@
 
 namespace PhpOffice\PhpWord\Exception;
 
+use PHPUnit\Framework\TestCase;
 /**
  * @covers \PhpOffice\PhpWord\Exception\CreateTemporaryFileException
  * @coversDefaultClass \PhpOffice\PhpWord\Exception\CreateTemporaryFileException
  */
-class CreateTemporaryFileExceptionTest extends \PHPUnit\Framework\TestCase
+class CreateTemporaryFileExceptionTest extends TestCase
 {
     /**
      * CreateTemporaryFileException can be thrown.
      *
      * @covers            ::__construct()
-     * @expectedException \PhpOffice\PhpWord\Exception\CreateTemporaryFileException
      * @test
      */
     public function testCreateTemporaryFileExceptionCanBeThrown()
     {
+        $this->expectException(CreateTemporaryFileException::class);
         throw new CreateTemporaryFileException();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php
index 255477f..1515ee3 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php
@@ -17,22 +17,23 @@
 
 namespace PhpOffice\PhpWord\Exception;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Exception\Exception
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Exception\Exception
  * @runTestsInSeparateProcesses
  */
-class ExceptionTest extends \PHPUnit\Framework\TestCase
+class ExceptionTest extends TestCase
 {
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      * @covers            \PhpOffice\PhpWord\Exception\Exception
      */
     public function testThrowException()
     {
+        $this->expectException(Exception::class);
         throw new Exception();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php
index c0285dc..cfe88c4 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php
@@ -17,22 +17,23 @@
 
 namespace PhpOffice\PhpWord\Exception;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Exception\InvalidImageException
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Exception\InvalidImageException
  * @runTestsInSeparateProcesses
  */
-class InvalidImageExceptionTest extends \PHPUnit\Framework\TestCase
+class InvalidImageExceptionTest extends TestCase
 {
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      * @covers            \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testThrowException()
     {
+        $this->expectException(InvalidImageException::class);
         throw new InvalidImageException();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php
index d516019..29c2421 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php
@@ -17,22 +17,23 @@
 
 namespace PhpOffice\PhpWord\Exception;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Exception\InvalidStyleException
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Exception\InvalidStyleException
  * @runTestsInSeparateProcesses
  */
-class InvalidStyleExceptionTest extends \PHPUnit\Framework\TestCase
+class InvalidStyleExceptionTest extends TestCase
 {
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidStyleException
      * @covers            \PhpOffice\PhpWord\Exception\InvalidStyleException
      */
     public function testThrowException()
     {
+        $this->expectException(InvalidStyleException::class);
         throw new InvalidStyleException();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php
index 559d634..6dcf9dc 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php
@@ -17,22 +17,23 @@
 
 namespace PhpOffice\PhpWord\Exception;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Exception\UnsupportedImageTypeExceptionTest
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Exception\UnsupportedImageTypeExceptionTest
  * @runTestsInSeparateProcesses
  */
-class UnsupportedImageTypeExceptionTest extends \PHPUnit\Framework\TestCase
+class UnsupportedImageTypeExceptionTest extends TestCase
 {
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
      * @covers            \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
      */
     public function testThrowException()
     {
+        $this->expectException(UnsupportedImageTypeException::class);
         throw new UnsupportedImageTypeException();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php b/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php
index 581b7d4..cbcd95f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php
@@ -17,12 +17,14 @@
 
 namespace PhpOffice\PhpWord;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\Exception;
 /**
  * Test class for PhpOffice\PhpWord\IOFactory
  *
  * @runTestsInSeparateProcesses
  */
-class IOFactoryTest extends \PHPUnit\Framework\TestCase
+class IOFactoryTest extends TestCase
 {
     /**
      * Create existing writer
@@ -37,11 +39,10 @@ class IOFactoryTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Create non-existing writer
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testNonexistentWriterCanNotBeCreated()
     {
+        $this->expectException(Exception::class);
         IOFactory::createWriter(new PhpWord(), 'Word2006');
     }
 
@@ -58,11 +59,10 @@ class IOFactoryTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Create non-existing reader
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testNonexistentReaderCanNotBeCreated()
     {
+        $this->expectException(Exception::class);
         IOFactory::createReader('Word2006');
     }
 
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php b/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php
index ed56376..9fa2eb6 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Element\Image;
 
 /**
@@ -24,7 +25,7 @@ use PhpOffice\PhpWord\Element\Image;
  *
  * @runTestsInSeparateProcesses
  */
-class MediaTest extends \PHPUnit\Framework\TestCase
+class MediaTest extends TestCase
 {
     /**
      * Get section media elements
@@ -105,12 +106,11 @@ class MediaTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Add image element exception
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage Image object not assigned.
      */
     public function testAddElementImageException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Image object not assigned.');
         Media::addElement('section', 'image', __DIR__ . '/_files/images/mars.jpg');
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Metadata/DocInfoTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Metadata/DocInfoTest.php
index d9b44dc..4e0042f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Metadata/DocInfoTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Metadata/DocInfoTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Metadata;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Metadata\DocInfo
  *
  * @runTestsInSeparateProcesses
  */
-class DocInfoTest extends \PHPUnit\Framework\TestCase
+class DocInfoTest extends TestCase
 {
     /**
      * Creator
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php
index 5086356..ad95997 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Metadata;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\ComplexType\ProofState;
 use PhpOffice\PhpWord\SimpleType\Zoom;
 
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\SimpleType\Zoom;
  *
  * @runTestsInSeparateProcesses
  */
-class SettingsTest extends \PHPUnit\Framework\TestCase
+class SettingsTest extends TestCase
 {
     /**
      * EvenAndOddHeaders
@@ -71,10 +72,10 @@ class SettingsTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setting an invalid salt
-     * @expectedException \InvalidArgumentException
      */
     public function testInvalidSalt()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $protection = new Protection();
         $protection->setSalt('123');
     }
@@ -125,20 +126,16 @@ class SettingsTest extends \PHPUnit\Framework\TestCase
         $this->assertEquals(ProofState::DIRTY, $oSettings->getProofState()->getSpelling());
     }
 
-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testWrongProofStateGrammar()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $proofState = new ProofState();
         $proofState->setGrammar('wrong');
     }
 
-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testWrongProofStateSpelling()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $proofState = new ProofState();
         $proofState->setSpelling('wrong');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php b/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php
index f8a2245..7fdedf3 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\Metadata\DocInfo;
 
 /**
@@ -24,7 +26,7 @@ use PhpOffice\PhpWord\Metadata\DocInfo;
  *
  * @runTestsInSeparateProcesses
  */
-class PhpWordTest extends \PHPUnit\Framework\TestCase
+class PhpWordTest extends TestCase
 {
     /**
      * Test object creation
@@ -133,11 +135,10 @@ class PhpWordTest extends \PHPUnit\Framework\TestCase
      * Test load template exception
      *
      * @deprecated 0.12.0
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testLoadTemplateException()
     {
+        $this->expectException(Exception::class);
         $templateFqfn = implode(
             DIRECTORY_SEPARATOR,
             array(PHPWORD_TESTS_BASE_DIR, 'PhpWord', 'Tests', '_files', 'templates', 'blanks.docx')
@@ -162,12 +163,11 @@ class PhpWordTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test calling undefined method
-     *
-     * @expectedException \BadMethodCallException
-     * @expectedExceptionMessage is not defined
      */
     public function testCallUndefinedMethod()
     {
+        $this->expectException(\BadMethodCallException::class);
+        $this->expectExceptionMessage('is not defined');
         $phpWord = new PhpWord();
         $phpWord->undefinedMethod();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php
index c56fc1f..f07ff50 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Reader;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\IOFactory;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\IOFactory;
  * @coversDefaultClass \PhpOffice\PhpWord\Reader\HTML
  * @runTestsInSeparateProcesses
  */
-class HTMLTest extends \PHPUnit\Framework\TestCase
+class HTMLTest extends TestCase
 {
     /**
      * Test load
@@ -39,12 +40,11 @@ class HTMLTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test load exception
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage Cannot read
      */
     public function testLoadException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Cannot read');
         $filename = __DIR__ . '/../_files/documents/foo.html';
         IOFactory::load($filename, 'HTML');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php
index e407547..be1c76b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Reader;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\IOFactory;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\IOFactory;
  * @coversDefaultClass \PhpOffice\PhpWord\Reader\MsDoc
  * @runTestsInSeparateProcesses
  */
-class MsDocTest extends \PHPUnit\Framework\TestCase
+class MsDocTest extends TestCase
 {
     /**
      * Test canRead() method
@@ -59,20 +60,20 @@ class MsDocTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test exception on not existing file
-     * @expectedException \Exception
      */
     public function testFailIfFileNotReadable()
     {
+        $this->expectException(\Exception::class);
         $filename = __DIR__ . '/../_files/documents/not_existing_reader.doc';
         IOFactory::load($filename, 'MsDoc');
     }
 
     /**
      * Test exception on non OLE document
-     * @expectedException \Exception
      */
     public function testFailIfFileNotOle()
     {
+        $this->expectException(\Exception::class);
         $filename = __DIR__ . '/../_files/documents/reader.odt';
         IOFactory::load($filename, 'MsDoc');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Reader/ODTextTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Reader/ODTextTest.php
index 7041e13..604215f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Reader/ODTextTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Reader/ODTextTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Reader;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\IOFactory;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\IOFactory;
  * @coversDefaultClass \PhpOffice\PhpWord\Reader\ODText
  * @runTestsInSeparateProcesses
  */
-class ODTextTest extends \PHPUnit\Framework\TestCase
+class ODTextTest extends TestCase
 {
     /**
      * Load
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php
index ca1f6ed..0e254dd 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Reader;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\IOFactory;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\IOFactory;
  * @coversDefaultClass \PhpOffice\PhpWord\Reader\RTF
  * @runTestsInSeparateProcesses
  */
-class RTFTest extends \PHPUnit\Framework\TestCase
+class RTFTest extends TestCase
 {
     /**
      * Test load
@@ -39,12 +40,11 @@ class RTFTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test load exception
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage Cannot read
      */
     public function testLoadException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Cannot read');
         $filename = __DIR__ . '/../_files/documents/foo.rtf';
         IOFactory::load($filename, 'RTF');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Reader/Word2007Test.php b/vendor/phpoffice/phpword/tests/PhpWord/Reader/Word2007Test.php
index 9a55567..a18d9e3 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Reader/Word2007Test.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Reader/Word2007Test.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Reader;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\IOFactory;
 use PhpOffice\PhpWord\TestHelperDOCX;
 
@@ -26,7 +27,7 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  * @coversDefaultClass \PhpOffice\PhpWord\Reader\Word2007
  * @runTestsInSeparateProcesses
  */
-class Word2007Test extends \PHPUnit\Framework\TestCase
+class Word2007Test extends TestCase
 {
     /**
      * Test canRead() method
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/SettingsTest.php b/vendor/phpoffice/phpword/tests/PhpWord/SettingsTest.php
index d8752b2..085eda1 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/SettingsTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/SettingsTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Settings
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Settings
  * @runTestsInSeparateProcesses
  */
-class SettingsTest extends \PHPUnit\Framework\TestCase
+class SettingsTest extends TestCase
 {
     /**
      * Test set/get compatibity option
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php
index 752b9a8..8619127 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Shared;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Shared\Converter
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Shared\Converter
  */
-class ConverterTest extends \PHPUnit\Framework\TestCase
+class ConverterTest extends TestCase
 {
     /**
      * Test unit conversion functions with various numbers
@@ -89,7 +90,8 @@ class ConverterTest extends \PHPUnit\Framework\TestCase
             $this->assertEquals(round($value / 9525), $result);
 
             $result = Converter::picaToPoint($value);
-            $this->assertEquals($value / 6 * 72, $result, '', 0.00001);
+            $this->assertEquals($value / 6 * 72, $result, '');
+            $this->assertEqualsWithDelta($value / 6 * 72, $result, 0.00001, '');
 
             $result = Converter::degreeToAngle($value);
             $this->assertEquals((int) round($value * 60000), $result);
@@ -127,7 +129,9 @@ class ConverterTest extends \PHPUnit\Framework\TestCase
         $this->assertEquals(7.5, Converter::cssToPoint('10px'));
         $this->assertEquals(720, Converter::cssToPoint('10in'));
         $this->assertEquals(120, Converter::cssToPoint('10pc'));
-        $this->assertEquals(28.346457, Converter::cssToPoint('10mm'), '', 0.000001);
-        $this->assertEquals(283.464567, Converter::cssToPoint('10cm'), '', 0.000001);
+        $this->assertEquals(28.346457, Converter::cssToPoint('10mm'), '');
+        $this->assertEqualsWithDelta(28.346457, Converter::cssToPoint('10mm'), 0.000001, '');
+        $this->assertEquals(283.464567, Converter::cssToPoint('10cm'), '');
+        $this->assertEqualsWithDelta(283.464567, Converter::cssToPoint('10cm'), 0.000001, '');
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Shared/HtmlTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Shared/HtmlTest.php
index d168c09..afe969e 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Shared/HtmlTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Shared/HtmlTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Shared;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Element\Section;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\TestHelperDOCX;
@@ -25,7 +27,7 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  * Test class for PhpOffice\PhpWord\Shared\Html
  * @coversDefaultClass \PhpOffice\PhpWord\Shared\Html
  */
-class HtmlTest extends \PHPUnit\Framework\TestCase
+class HtmlTest extends TestCase
 {
     /**
      * Test unit conversion functions with various numbers
@@ -89,7 +91,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
     public function testParseUnderline()
     {
         $html = '<u>test</u>';
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         Html::addHtml($section, $html);
 
@@ -104,7 +106,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
     public function testParseTextDecoration()
     {
         $html = '<span style="text-decoration: underline;">test</span>';
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         Html::addHtml($section, $html);
 
@@ -118,7 +120,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
      */
     public function testParseTextAlign()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         Html::addHtml($section, '<p style="text-align: left;">test</p>');
         Html::addHtml($section, '<p style="text-align: right;">test</p>');
@@ -138,7 +140,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
      */
     public function testParseFontSize()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         Html::addHtml($section, '<span style="font-size: 10pt;">test</span>');
         Html::addHtml($section, '<span style="font-size: 10px;">test</span>');
@@ -154,7 +156,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
      */
     public function testParseFontFamily()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         Html::addHtml($section, '<span style="font-family: Arial">test</span>');
         Html::addHtml($section, '<span style="font-family: Times New Roman;">test</span>');
@@ -170,7 +172,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
      */
     public function testParseParagraphAndSpanStyle()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         Html::addHtml($section, '<p style="text-align: center;"><span style="text-decoration: underline;">test</span></p>');
 
@@ -185,7 +187,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
      */
     public function testParseTable()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         $html = '<table style="width: 50%; border: 6px #0000FF solid;">
                 <thead>
@@ -212,7 +214,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
      */
     public function testParseList()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         $html = '<ul>
                 <li>
@@ -240,7 +242,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
      */
     public function testParseLineBreak()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         $html = '<p>This is some text<br/>with a linebreak.</p>';
         Html::addHtml($section, $html);
@@ -257,7 +259,7 @@ class HtmlTest extends \PHPUnit\Framework\TestCase
     {
         $src = __DIR__ . '/../_files/images/firefox.png';
 
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         $html = '<p><img src="' . $src . '" width="150" height="200" style="float: right;"/><img src="' . $src . '" style="float: left;"/></p>';
         Html::addHtml($section, $html);
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Shared/Microsoft/PasswordEncoderTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Shared/Microsoft/PasswordEncoderTest.php
index c42a6eb..1f8a78b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Shared/Microsoft/PasswordEncoderTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Shared/Microsoft/PasswordEncoderTest.php
@@ -24,7 +24,7 @@ use PHPUnit\Framework\TestCase;
  * Test class for PhpOffice\PhpWord\Shared\Html
  * @coversDefaultClass \PhpOffice\PhpWord\Shared\Html
  */
-class PasswordEncoderTest extends \PHPUnit\Framework\TestCase
+class PasswordEncoderTest extends TestCase
 {
     /**
      * Test that a password can be hashed without specifying any additional parameters
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Shared/ZipArchiveTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Shared/ZipArchiveTest.php
index cb09512..8f4a607 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Shared/ZipArchiveTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Shared/ZipArchiveTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Shared;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Settings;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\Settings;
  * @coversDefaultClass \PhpOffice\PhpWord\Shared\ZipArchive
  * @runTestsInSeparateProcesses
  */
-class ZipArchiveTest extends \PHPUnit\Framework\TestCase
+class ZipArchiveTest extends TestCase
 {
 //     /**
 //      * Test close method exception: Working in local, not working in Travis
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php
index c0263b1..990da39 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\AbstractStyle
  *
  * @runTestsInSeparateProcesses
  */
-class AbstractStyleTest extends \PHPUnit\Framework\TestCase
+class AbstractStyleTest extends TestCase
 {
     /**
      * Test set style by array
@@ -64,11 +65,10 @@ class AbstractStyleTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setEnumVal exception
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testSetValEnumException()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $stub = $this->getMockForAbstractClass('\PhpOffice\PhpWord\Style\AbstractStyle');
 
         $this->assertEquals('b', self::callProtectedMethod($stub, 'setEnumVal', array('z', array('a', 'b'), 'b')));
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/CellTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/CellTest.php
index 79b22ee..e321751 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/CellTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/CellTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Cell
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Cell
  * @runTestsInSeparateProcesses
  */
-class CellTest extends \PHPUnit\Framework\TestCase
+class CellTest extends TestCase
 {
     /**
      * Test setting style with normal value
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php
index 91bba97..59a192f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\InvalidStyleException;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\TestHelperDOCX;
@@ -26,12 +28,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  *
  * @runTestsInSeparateProcesses
  */
-class FontTest extends \PHPUnit\Framework\TestCase
+class FontTest extends TestCase
 {
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -45,7 +47,7 @@ class FontTest extends \PHPUnit\Framework\TestCase
 
         $this->assertEquals('text', $object->getStyleType());
         $this->assertInstanceOf('PhpOffice\\PhpWord\\Style\\Paragraph', $object->getParagraphStyle());
-        $this->assertInternalType('array', $object->getStyleValues());
+        $this->assertIsArray($object->getStyleValues());
     }
 
     /**
@@ -168,11 +170,10 @@ class FontTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test line height exception by using nonnumeric value
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidStyleException
      */
     public function testLineHeightException()
     {
+        $this->expectException(InvalidStyleException::class);
         $object = new Font();
         $object->setLineHeight('a');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php
index 5d9e556..baee577 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\SimpleType\Jc;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\SimpleType\Jc;
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Image
  * @runTestsInSeparateProcesses
  */
-class ImageTest extends \PHPUnit\Framework\TestCase
+class ImageTest extends TestCase
 {
     /**
      * Test setting style with normal value
@@ -63,11 +64,11 @@ class ImageTest extends \PHPUnit\Framework\TestCase
             'alignment'        => Jc::START,
             'marginTop'        => 240,
             'marginLeft'       => 240,
-            'positioning'      => \PhpOffice\PhpWord\Style\Image::POSITION_ABSOLUTE,
-            'posHorizontal'    => \PhpOffice\PhpWord\Style\Image::POSITION_HORIZONTAL_CENTER,
-            'posVertical'      => \PhpOffice\PhpWord\Style\Image::POSITION_VERTICAL_TOP,
-            'posHorizontalRel' => \PhpOffice\PhpWord\Style\Image::POSITION_RELATIVE_TO_COLUMN,
-            'posVerticalRel'   => \PhpOffice\PhpWord\Style\Image::POSITION_RELATIVE_TO_IMARGIN,
+            'positioning'      => Image::POSITION_ABSOLUTE,
+            'posHorizontal'    => Image::POSITION_HORIZONTAL_CENTER,
+            'posVertical'      => Image::POSITION_VERTICAL_TOP,
+            'posHorizontalRel' => Image::POSITION_RELATIVE_TO_COLUMN,
+            'posVerticalRel'   => Image::POSITION_RELATIVE_TO_IMARGIN,
         );
         foreach ($properties as $key => $value) {
             $get = "get{$key}";
@@ -78,11 +79,10 @@ class ImageTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setWrappingStyle exception
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testSetWrappingStyleException()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $object = new Image();
         $object->setWrappingStyle('foo');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/IndentationTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/IndentationTest.php
index 63a9662..7ec9a64 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/IndentationTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/IndentationTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Indentation
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Indentation
  */
-class IndentationTest extends \PHPUnit\Framework\TestCase
+class IndentationTest extends TestCase
 {
     /**
      * Test get/set
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php
index 74b2067..e698cc5 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Language
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Language
  */
-class LanguageTest extends \PHPUnit\Framework\TestCase
+class LanguageTest extends TestCase
 {
     /**
      * Test get/set
@@ -51,11 +52,10 @@ class LanguageTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test throws exception if wrong locale is given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongLanguage()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $language = new Language();
         $language->setLatin('fr');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/LineNumberingTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/LineNumberingTest.php
index 9ec1e3b..cb88c4d 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/LineNumberingTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/LineNumberingTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\LineNumbering
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\LineNumbering
  */
-class LineNumberingTest extends \PHPUnit\Framework\TestCase
+class LineNumberingTest extends TestCase
 {
     /**
      * Test get/set
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/LineTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/LineTest.php
index ab77b32..268c169 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/LineTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/LineTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Image
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Image
  * @runTestsInSeparateProcesses
  */
-class LineTest extends \PHPUnit\Framework\TestCase
+class LineTest extends TestCase
 {
     /**
      * Test setting style with normal value
@@ -33,10 +34,10 @@ class LineTest extends \PHPUnit\Framework\TestCase
         $object = new Line();
 
         $properties = array(
-            'connectorType' => \PhpOffice\PhpWord\Style\Line::CONNECTOR_TYPE_STRAIGHT,
-            'beginArrow'    => \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_BLOCK,
-            'endArrow'      => \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_OVAL,
-            'dash'          => \PhpOffice\PhpWord\Style\Line::DASH_STYLE_LONG_DASH_DOT_DOT,
+            'connectorType' => Line::CONNECTOR_TYPE_STRAIGHT,
+            'beginArrow'    => Line::ARROW_STYLE_BLOCK,
+            'endArrow'      => Line::ARROW_STYLE_OVAL,
+            'dash'          => Line::DASH_STYLE_LONG_DASH_DOT_DOT,
             'weight'        => 10,
             'color'         => 'red',
         );
@@ -56,10 +57,10 @@ class LineTest extends \PHPUnit\Framework\TestCase
         $object = new Line();
 
         $properties = array(
-            'connectorType' => \PhpOffice\PhpWord\Style\Line::CONNECTOR_TYPE_STRAIGHT,
-            'beginArrow'    => \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_BLOCK,
-            'endArrow'      => \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_OVAL,
-            'dash'          => \PhpOffice\PhpWord\Style\Line::DASH_STYLE_LONG_DASH_DOT_DOT,
+            'connectorType' => Line::CONNECTOR_TYPE_STRAIGHT,
+            'beginArrow'    => Line::ARROW_STYLE_BLOCK,
+            'endArrow'      => Line::ARROW_STYLE_OVAL,
+            'dash'          => Line::DASH_STYLE_LONG_DASH_DOT_DOT,
             'weight'        => 10,
             'color'         => 'red',
         );
@@ -86,7 +87,7 @@ class LineTest extends \PHPUnit\Framework\TestCase
      */
     public function testSetGetConnectorType()
     {
-        $expected = \PhpOffice\PhpWord\Style\Line::CONNECTOR_TYPE_STRAIGHT;
+        $expected = Line::CONNECTOR_TYPE_STRAIGHT;
         $object = new Line();
         $object->setConnectorType($expected);
         $this->assertEquals($expected, $object->getConnectorType());
@@ -119,7 +120,7 @@ class LineTest extends \PHPUnit\Framework\TestCase
      */
     public function testSetGetDash()
     {
-        $expected = \PhpOffice\PhpWord\Style\Line::DASH_STYLE_LONG_DASH_DOT_DOT;
+        $expected = Line::DASH_STYLE_LONG_DASH_DOT_DOT;
         $object = new Line();
         $object->setDash($expected);
         $this->assertEquals($expected, $object->getDash());
@@ -130,7 +131,7 @@ class LineTest extends \PHPUnit\Framework\TestCase
      */
     public function testSetGetBeginArrow()
     {
-        $expected = \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_BLOCK;
+        $expected = Line::ARROW_STYLE_BLOCK;
         $object = new Line();
         $object->setBeginArrow($expected);
         $this->assertEquals($expected, $object->getBeginArrow());
@@ -141,7 +142,7 @@ class LineTest extends \PHPUnit\Framework\TestCase
      */
     public function testSetGetEndArrow()
     {
-        $expected = \PhpOffice\PhpWord\Style\Line::ARROW_STYLE_CLASSIC;
+        $expected = Line::ARROW_STYLE_CLASSIC;
         $object = new Line();
         $object->setEndArrow($expected);
         $this->assertEquals($expected, $object->getEndArrow());
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/ListItemTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/ListItemTest.php
index a8155fa..7270a1b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/ListItemTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/ListItemTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\ListItem
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\ListItem
  * @runTestsInSeparateProcesses
  */
-class ListItemTest extends \PHPUnit\Framework\TestCase
+class ListItemTest extends TestCase
 {
     /**
      * Test construct
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingLevelTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingLevelTest.php
index 9b512eb..77ffbd2 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingLevelTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingLevelTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\SimpleType\Jc;
 
 /**
@@ -24,7 +25,7 @@ use PhpOffice\PhpWord\SimpleType\Jc;
  *
  * @runTestsInSeparateProcesses
  */
-class NumberingLevelTest extends \PHPUnit\Framework\TestCase
+class NumberingLevelTest extends TestCase
 {
     /**
      * Test setting style with normal value
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingTest.php
index 4ec1236..c61c0cf 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Numbering
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Numbering
  */
-class NumberingTest extends \PHPUnit\Framework\TestCase
+class NumberingTest extends TestCase
 {
     /**
      * Test get/set
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php
index 687e23c..c36b7be 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\TestHelperDOCX;
 
@@ -25,12 +26,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  *
  * @runTestsInSeparateProcesses
  */
-class PaperTest extends \PHPUnit\Framework\TestCase
+class PaperTest extends TestCase
 {
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -53,8 +54,10 @@ class PaperTest extends \PHPUnit\Framework\TestCase
         $object = new Paper('B5');
 
         $this->assertEquals('B5', $object->getSize());
-        $this->assertEquals(9977.9527559055, $object->getWidth(), '', 0.000000001);
-        $this->assertEquals(14173.228346457, $object->getHeight(), '', 0.000000001);
+        $this->assertEquals(9977.9527559055, $object->getWidth(), '');
+        $this->assertEqualsWithDelta(9977.9527559055, $object->getWidth(), 0.000000001, '');
+        $this->assertEquals(14173.228346457, $object->getHeight(), '');
+        $this->assertEqualsWithDelta(14173.228346457, $object->getHeight(), 0.000000001, '');
     }
 
     /**
@@ -66,7 +69,9 @@ class PaperTest extends \PHPUnit\Framework\TestCase
         $object->setSize('Folio');
 
         $this->assertEquals('Folio', $object->getSize());
-        $this->assertEquals(12240, $object->getWidth(), '', 0.1);
-        $this->assertEquals(18720, $object->getHeight(), '', 0.1);
+        $this->assertEquals(12240, $object->getWidth(), '');
+        $this->assertEqualsWithDelta(12240, $object->getWidth(), 0.1, '');
+        $this->assertEquals(18720, $object->getHeight(), '');
+        $this->assertEqualsWithDelta(18720, $object->getHeight(), 0.1, '');
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php
index e961f36..63b684f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\InvalidStyleException;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\LineSpacingRule;
 use PhpOffice\PhpWord\TestHelperDOCX;
@@ -26,12 +28,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  *
  * @runTestsInSeparateProcesses
  */
-class ParagraphTest extends \PHPUnit\Framework\TestCase
+class ParagraphTest extends TestCase
 {
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -178,11 +180,10 @@ class ParagraphTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test line height exception by using nonnumeric value
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidStyleException
      */
     public function testLineHeightException()
     {
+        $this->expectException(InvalidStyleException::class);
         $object = new Paragraph();
         $object->setLineHeight('a');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/RowTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/RowTest.php
index 2daad7e..2aa65db 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/RowTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/RowTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Row
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Row
  * @runTestsInSeparateProcesses
  */
-class RowTest extends \PHPUnit\Framework\TestCase
+class RowTest extends TestCase
 {
     /**
      * Test properties with boolean value
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php
index c9b7003..89027cb 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php
@@ -17,13 +17,14 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Section
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Element\Section
  * @runTestsInSeparateProcesses
  */
-class SectionTest extends \PHPUnit\Framework\TestCase
+class SectionTest extends TestCase
 {
     /**
      * Executed before each method of the class
@@ -33,14 +34,18 @@ class SectionTest extends \PHPUnit\Framework\TestCase
         $oSettings = new Section();
 
         $this->assertEquals('portrait', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), 0.000000001, '');
         $this->assertEquals('A4', $oSettings->getPaperSize());
 
         $oSettings->setSettingValue('orientation', 'landscape');
         $this->assertEquals('landscape', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), 0.000000001, '');
 
         $iVal = rand(1, 1000);
         $oSettings->setSettingValue('borderSize', $iVal);
@@ -110,7 +115,8 @@ class SectionTest extends \PHPUnit\Framework\TestCase
         // Section Settings
         $oSettings = new Section();
 
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), 0.000000001, '');
         $iVal = rand(1, 1000);
         $oSettings->setSettingValue('pageSizeW', $iVal);
         $this->assertEquals($iVal, $oSettings->getPageSizeW());
@@ -124,7 +130,8 @@ class SectionTest extends \PHPUnit\Framework\TestCase
         // Section Settings
         $oSettings = new Section();
 
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), 0.000000001, '');
         $iVal = rand(1, 1000);
         $oSettings->setSettingValue('pageSizeH', $iVal);
         $this->assertEquals($iVal, $oSettings->getPageSizeH());
@@ -140,8 +147,10 @@ class SectionTest extends \PHPUnit\Framework\TestCase
 
         $oSettings->setLandscape();
         $this->assertEquals('landscape', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), 0.000000001, '');
     }
 
     /**
@@ -154,8 +163,10 @@ class SectionTest extends \PHPUnit\Framework\TestCase
 
         $oSettings->setPortrait();
         $this->assertEquals('portrait', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), 0.000000001, '');
     }
 
     /**
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/ShadingTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/ShadingTest.php
index ab991a5..fd6069e 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/ShadingTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/ShadingTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Shading
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Shading
  */
-class ShadingTest extends \PHPUnit\Framework\TestCase
+class ShadingTest extends TestCase
 {
     /**
      * Test get/set
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/SpacingTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/SpacingTest.php
index 65be809..a4e3eda 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/SpacingTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/SpacingTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Spacing
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Spacing
  */
-class SpacingTest extends \PHPUnit\Framework\TestCase
+class SpacingTest extends TestCase
 {
     /**
      * Test get/set
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/TOCTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/TOCTest.php
index 5981b00..b6b5c96 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/TOCTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/TOCTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\TOC
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\TOC
  */
-class TOCTest extends \PHPUnit\Framework\TestCase
+class TOCTest extends TestCase
 {
     /**
      * Test get/set
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/TabTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/TabTest.php
index c11f055..dcc8e5a 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/TabTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/TabTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Style\Tab
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Tab
  */
-class TabTest extends \PHPUnit\Framework\TestCase
+class TabTest extends TestCase
 {
     /**
      * Test get/set
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/TableTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/TableTest.php
index 2d57b1b..2cd21c5 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/TableTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/TableTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\SimpleType\JcTable;
 
 /**
@@ -24,7 +25,7 @@ use PhpOffice\PhpWord\SimpleType\JcTable;
  *
  * @runTestsInSeparateProcesses
  */
-class TableTest extends \PHPUnit\Framework\TestCase
+class TableTest extends TestCase
 {
     /**
      * Test class construction
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php
index 5a6bc76..a1914d3 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Style;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\SimpleType\Jc;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\SimpleType\Jc;
  * @coversDefaultClass \PhpOffice\PhpWord\Style\Image
  * @runTestsInSeparateProcesses
  */
-class TextBoxTest extends \PHPUnit\Framework\TestCase
+class TextBoxTest extends TestCase
 {
     /**
      * Test setting style with normal value
@@ -96,11 +97,10 @@ class TextBoxTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setWrappingStyle exception
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testSetWrappingStyleException()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $object = new TextBox();
         $object->setWrappingStyle('foo');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/StyleTest.php b/vendor/phpoffice/phpword/tests/PhpWord/StyleTest.php
index 6f2f098..5af9057 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/StyleTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/StyleTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\SimpleType\Jc;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\SimpleType\Jc;
  * @coversDefaultClass \PhpOffice\PhpWord\Style
  * @runTestsInSeparateProcesses
  */
-class StyleTest extends \PHPUnit\Framework\TestCase
+class StyleTest extends TestCase
 {
     /**
      * Add and get paragraph, font, link, title, and table styles
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php b/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php
index 7b064ef..b21b5cb 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord;
 
+use PHPUnit\Framework\TestCase;
 /**
  * @covers \PhpOffice\PhpWord\TemplateProcessor
  * @coversDefaultClass \PhpOffice\PhpWord\TemplateProcessor
  * @runTestsInSeparateProcesses
  */
-final class TemplateProcessorTest extends \PHPUnit\Framework\TestCase
+final class TemplateProcessorTest extends TestCase
 {
     /**
      * Template can be saved in temporary location.
@@ -113,12 +114,12 @@ final class TemplateProcessorTest extends \PHPUnit\Framework\TestCase
      * XSL stylesheet cannot be applied on failure in setting parameter value.
      *
      * @covers                   ::applyXslStyleSheet
-     * @expectedException        \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage Could not set values for the given XSL style sheet parameters.
      * @test
      */
     final public function testXslStyleSheetCanNotBeAppliedOnFailureOfSettingParameterValue()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('Could not set values for the given XSL style sheet parameters.');
         $templateProcessor = new TemplateProcessor(__DIR__ . '/_files/templates/blank.docx');
 
         $xslDomDocument = new \DOMDocument();
@@ -135,12 +136,12 @@ final class TemplateProcessorTest extends \PHPUnit\Framework\TestCase
      * XSL stylesheet can be applied on failure of loading XML from template.
      *
      * @covers                   ::applyXslStyleSheet
-     * @expectedException        \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage Could not load the given XML document.
      * @test
      */
     final public function testXslStyleSheetCanNotBeAppliedOnFailureOfLoadingXmlFromTemplate()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('Could not load the given XML document.');
         $templateProcessor = new TemplateProcessor(__DIR__ . '/_files/templates/corrupted_main_document_part.docx');
 
         $xslDomDocument = new \DOMDocument();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/ElementTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/ElementTest.php
index 86856d5..7ff3dec 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/ElementTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/ElementTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\HTML;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Element\PageBreak;
 use PhpOffice\PhpWord\Element\Text as TextElement;
 use PhpOffice\PhpWord\Writer\HTML;
 use PhpOffice\PhpWord\Writer\HTML\Element\Text;
@@ -24,7 +26,7 @@ use PhpOffice\PhpWord\Writer\HTML\Element\Text;
 /**
  * Test class for PhpOffice\PhpWord\Writer\HTML\Element subnamespace
  */
-class ElementTest extends \PHPUnit\Framework\TestCase
+class ElementTest extends TestCase
 {
     /**
      * Test unmatched elements
@@ -35,7 +37,7 @@ class ElementTest extends \PHPUnit\Framework\TestCase
         foreach ($elements as $element) {
             $objectClass = 'PhpOffice\\PhpWord\\Writer\\HTML\\Element\\' . $element;
             $parentWriter = new HTML();
-            $newElement = new \PhpOffice\PhpWord\Element\PageBreak();
+            $newElement = new PageBreak();
             $object = new $objectClass($parentWriter, $newElement);
 
             $this->assertEquals('', $object->write());
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php
index 3d56f98..24497b5 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php
@@ -17,20 +17,21 @@
 
 namespace PhpOffice\PhpWord\Writer\HTML;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\Writer\HTML\Part\Body;
 
 /**
  * Test class for PhpOffice\PhpWord\Writer\HTML\Part subnamespace
  */
-class PartTest extends \PHPUnit\Framework\TestCase
+class PartTest extends TestCase
 {
     /**
      * Test get parent writer exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testGetParentWriterException()
     {
+        $this->expectException(Exception::class);
         $object = new Body();
         $object->getParentWriter();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/StyleTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/StyleTest.php
index e9117de..85a39d7 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/StyleTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/StyleTest.php
@@ -17,10 +17,11 @@
 
 namespace PhpOffice\PhpWord\Writer\HTML;
 
+use PHPUnit\Framework\TestCase;
 /**
  * Test class for PhpOffice\PhpWord\Writer\HTML\Style subnamespace
  */
-class StyleTest extends \PHPUnit\Framework\TestCase
+class StyleTest extends TestCase
 {
     /**
      * Test empty styles
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php
index bdfc44e..05201e5 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Settings;
 use PhpOffice\PhpWord\SimpleType\Jc;
@@ -26,7 +28,7 @@ use PhpOffice\PhpWord\SimpleType\Jc;
  *
  * @runTestsInSeparateProcesses
  */
-class HTMLTest extends \PHPUnit\Framework\TestCase
+class HTMLTest extends TestCase
 {
     /**
      * Construct
@@ -40,12 +42,11 @@ class HTMLTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Construct with null
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage No PhpWord assigned.
      */
     public function testConstructWithNull()
     {
+        $this->expectException(Exception::class);
+        $this->expectExceptionMessage('No PhpWord assigned.');
         $object = new HTML();
         $object->getPhpWord();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/ElementTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/ElementTest.php
index f56114e..68cc852 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/ElementTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/ElementTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\ODText;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Element\PageBreak;
 use PhpOffice\Common\XMLWriter;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\TestHelperDOCX;
@@ -24,7 +26,7 @@ use PhpOffice\PhpWord\TestHelperDOCX;
 /**
  * Test class for PhpOffice\PhpWord\Writer\ODText\Element subnamespace
  */
-class ElementTest extends \PHPUnit\Framework\TestCase
+class ElementTest extends TestCase
 {
     /**
      * Test unmatched elements
@@ -35,7 +37,7 @@ class ElementTest extends \PHPUnit\Framework\TestCase
         foreach ($elements as $element) {
             $objectClass = 'PhpOffice\\PhpWord\\Writer\\ODText\\Element\\' . $element;
             $xmlWriter = new XMLWriter();
-            $newElement = new \PhpOffice\PhpWord\Element\PageBreak();
+            $newElement = new PageBreak();
             $object = new $objectClass($xmlWriter, $newElement);
             $object->write();
 
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php
index f91e6dd..a64a79b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\ODText\Part;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Writer\ODText;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\Writer\ODText;
  * @coversDefaultClass \PhpOffice\PhpWord\Writer\ODText\Part\AbstractPart
  * @runTestsInSeparateProcesses
  */
-class AbstractPartTest extends \PHPUnit\Framework\TestCase
+class AbstractPartTest extends TestCase
 {
     /**
      * covers   ::setParentWriter
@@ -40,12 +41,11 @@ class AbstractPartTest extends \PHPUnit\Framework\TestCase
 
     /**
      * covers   ::getParentWriter
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage No parent WriterInterface assigned.
      */
     public function testSetGetParentWriterNull()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('No parent WriterInterface assigned.');
         $object = $this->getMockForAbstractClass('PhpOffice\\PhpWord\\Writer\\ODText\\Part\\AbstractPart');
         $object->getParentWriter();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php
index d568114..3a9496e 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\ODText\Part;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\TestHelperDOCX;
@@ -27,12 +28,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  * @coversDefaultClass \PhpOffice\PhpWord\Writer\ODText\Part\Content
  * @runTestsInSeparateProcesses
  */
-class ContentTest extends \PHPUnit\Framework\TestCase
+class ContentTest extends TestCase
 {
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/StyleTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/StyleTest.php
index 5bd862f..05947f9 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/StyleTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/StyleTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Writer\ODText;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\Common\XMLWriter;
 
 /**
  * Test class for PhpOffice\PhpWord\Writer\ODText\Style subnamespace
  */
-class StyleTest extends \PHPUnit\Framework\TestCase
+class StyleTest extends TestCase
 {
     /**
      * Test empty styles
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php
index 1984de0..9a4cc72 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 
@@ -25,7 +27,7 @@ use PhpOffice\PhpWord\SimpleType\Jc;
  *
  * @runTestsInSeparateProcesses
  */
-class ODTextTest extends \PHPUnit\Framework\TestCase
+class ODTextTest extends TestCase
 {
     /**
      * Construct
@@ -51,12 +53,11 @@ class ODTextTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Construct with null
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage No PhpWord assigned.
      */
     public function testConstructWithNull()
     {
+        $this->expectException(Exception::class);
+        $this->expectExceptionMessage('No PhpWord assigned.');
         $object = new ODText();
         $object->getPhpWord();
     }
@@ -135,11 +136,10 @@ class ODTextTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Use disk caching exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testSetUseDiskCachingException()
     {
+        $this->expectException(Exception::class);
         $dir = implode(DIRECTORY_SEPARATOR, array(PHPWORD_TESTS_BASE_DIR, 'foo'));
 
         $object = new ODText();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/DomPDFTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/DomPDFTest.php
index 61c3d29..5145b6d 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/DomPDFTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/DomPDFTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\PDF;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Settings;
 use PhpOffice\PhpWord\Writer\PDF;
@@ -26,7 +27,7 @@ use PhpOffice\PhpWord\Writer\PDF;
  *
  * @runTestsInSeparateProcesses
  */
-class DomPDFTest extends \PHPUnit\Framework\TestCase
+class DomPDFTest extends TestCase
 {
     /**
      * Test construct
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/MPDFTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/MPDFTest.php
index 330125f..7a3930b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/MPDFTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/MPDFTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\PDF;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Settings;
 use PhpOffice\PhpWord\Writer\PDF;
@@ -26,7 +27,7 @@ use PhpOffice\PhpWord\Writer\PDF;
  *
  * @runTestsInSeparateProcesses
  */
-class MPDFTest extends \PHPUnit\Framework\TestCase
+class MPDFTest extends TestCase
 {
     /**
      * Test construct
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/TCPDFTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/TCPDFTest.php
index e697eee..cac9984 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/TCPDFTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/TCPDFTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\PDF;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Settings;
 use PhpOffice\PhpWord\Writer\PDF;
@@ -26,7 +27,7 @@ use PhpOffice\PhpWord\Writer\PDF;
  *
  * @runTestsInSeparateProcesses
  */
-class TCPDFTest extends \PHPUnit\Framework\TestCase
+class TCPDFTest extends TestCase
 {
     /**
      * Test construct
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php
index a7ca9f6..7174195 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\Settings;
 
@@ -25,7 +27,7 @@ use PhpOffice\PhpWord\Settings;
  *
  * @runTestsInSeparateProcesses
  */
-class PDFTest extends \PHPUnit\Framework\TestCase
+class PDFTest extends TestCase
 {
     /**
      * Test normal construct
@@ -48,12 +50,11 @@ class PDFTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test construct exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage PDF rendering library or library path has not been defined.
      */
     public function testConstructException()
     {
+        $this->expectException(Exception::class);
+        $this->expectExceptionMessage('PDF rendering library or library path has not been defined.');
         $writer = new PDF(new PhpWord());
         $writer->save();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/ElementTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/ElementTest.php
index e85d209..4a42790 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/ElementTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/ElementTest.php
@@ -17,12 +17,14 @@
 
 namespace PhpOffice\PhpWord\Writer\RTF;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Element\PageBreak;
 use PhpOffice\PhpWord\Writer\RTF;
 
 /**
  * Test class for PhpOffice\PhpWord\Writer\RTF\Element subnamespace
  */
-class ElementTest extends \PHPUnit\Framework\TestCase
+class ElementTest extends TestCase
 {
     /**
      * Test unmatched elements
@@ -33,7 +35,7 @@ class ElementTest extends \PHPUnit\Framework\TestCase
         foreach ($elements as $element) {
             $objectClass = 'PhpOffice\\PhpWord\\Writer\\RTF\\Element\\' . $element;
             $parentWriter = new RTF();
-            $newElement = new \PhpOffice\PhpWord\Element\PageBreak();
+            $newElement = new PageBreak();
             $object = new $objectClass($parentWriter, $newElement);
 
             $this->assertEquals('', $object->write());
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/StyleTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/StyleTest.php
index 42f7643..7acef6a 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/StyleTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/StyleTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Writer\RTF;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Writer\RTF\Style\Border;
 
 /**
  * Test class for PhpOffice\PhpWord\Writer\RTF\Style subnamespace
  */
-class StyleTest extends \PHPUnit\Framework\TestCase
+class StyleTest extends TestCase
 {
     /**
      * Test empty styles
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php
index 803087e..fd62150 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 
@@ -25,7 +27,7 @@ use PhpOffice\PhpWord\SimpleType\Jc;
  *
  * @runTestsInSeparateProcesses
  */
-class RTFTest extends \PHPUnit\Framework\TestCase
+class RTFTest extends TestCase
 {
     /**
      * Construct
@@ -39,12 +41,11 @@ class RTFTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Construct with null
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage No PhpWord assigned.
      */
     public function testConstructWithNull()
     {
+        $this->expectException(Exception::class);
+        $this->expectExceptionMessage('No PhpWord assigned.');
         $object = new RTF();
         $object->getPhpWord();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php
index 12f810c..856b80f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php
@@ -17,6 +17,9 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Element\PageBreak;
+use PhpOffice\PhpWord\SimpleType\JcTable;
 use PhpOffice\Common\XMLWriter;
 use PhpOffice\PhpWord\Element\Comment;
 use PhpOffice\PhpWord\Element\Text;
@@ -27,12 +30,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
 /**
  * Test class for PhpOffice\PhpWord\Writer\Word2007\Element subnamespace
  */
-class ElementTest extends \PHPUnit\Framework\TestCase
+class ElementTest extends TestCase
 {
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -50,7 +53,7 @@ class ElementTest extends \PHPUnit\Framework\TestCase
         foreach ($elements as $element) {
             $objectClass = 'PhpOffice\\PhpWord\\Writer\\Word2007\\Element\\' . $element;
             $xmlWriter = new XMLWriter();
-            $newElement = new \PhpOffice\PhpWord\Element\PageBreak();
+            $newElement = new PageBreak();
             $object = new $objectClass($xmlWriter, $newElement);
             $object->write();
 
@@ -120,7 +123,7 @@ class ElementTest extends \PHPUnit\Framework\TestCase
         $phpWord = new PhpWord();
         $section = $phpWord->addSection();
 
-        $table = $section->addTable(array('alignment' => \PhpOffice\PhpWord\SimpleType\JcTable::CENTER));
+        $table = $section->addTable(array('alignment' => JcTable::CENTER));
         $table->addRow(900);
         $table->addCell(2000)->addText('Row 1');
         $table->addCell(2000)->addText('Row 2');
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php
index 7796c02..1b121c4 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Writer\Word2007;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\Writer\Word2007;
  * @coversDefaultClass \PhpOffice\PhpWord\Writer\Word2007\Part\AbstractWriterPart
  * @runTestsInSeparateProcesses
  */
-class AbstractPartTest extends \PHPUnit\Framework\TestCase
+class AbstractPartTest extends TestCase
 {
     /**
      * covers   ::setParentWriter
@@ -40,12 +41,11 @@ class AbstractPartTest extends \PHPUnit\Framework\TestCase
 
     /**
      * covers   ::getParentWriter
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage No parent WriterInterface assigned.
      */
     public function testSetGetParentWriterNull()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('No parent WriterInterface assigned.');
         $object = $this->getMockForAbstractClass('PhpOffice\\PhpWord\\Writer\\Word2007\\Part\\AbstractPart');
         $object->getParentWriter();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php
index 83af284..e83b5e7 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Element\Comment;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\TestHelperDOCX;
 
@@ -25,12 +27,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  *
  * @runTestsInSeparateProcesses
  */
-class CommentsTest extends \PHPUnit\Framework\TestCase
+class CommentsTest extends TestCase
 {
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -40,7 +42,7 @@ class CommentsTest extends \PHPUnit\Framework\TestCase
      */
     public function testWriteComments()
     {
-        $comment = new \PhpOffice\PhpWord\Element\Comment('Authors name', new \DateTime(), 'my_initials');
+        $comment = new Comment('Authors name', new \DateTime(), 'my_initials');
         $comment->addText('Test');
 
         $phpWord = new PhpWord();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php
index 6998e71..0903ce0 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Style\Tab;
 use PhpOffice\PhpWord\ComplexType\FootnoteProperties;
 use PhpOffice\PhpWord\Metadata\DocInfo;
 use PhpOffice\PhpWord\PhpWord;
@@ -32,12 +34,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  *
  * @runTestsInSeparateProcesses
  */
-class DocumentTest extends \PHPUnit\Framework\TestCase
+class DocumentTest extends TestCase
 {
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -215,7 +217,7 @@ class DocumentTest extends \PHPUnit\Framework\TestCase
     {
         $objectSrc = __DIR__ . '/../../../_files/documents/sheet.xls';
 
-        $tabs = array(new \PhpOffice\PhpWord\Style\Tab('right', 9090));
+        $tabs = array(new Tab('right', 9090));
         $phpWord = new PhpWord();
         $phpWord->addParagraphStyle(
             'pStyle',
@@ -408,7 +410,7 @@ class DocumentTest extends \PHPUnit\Framework\TestCase
         // behind
         $element = $doc->getElement('/w:document/w:body/w:p[2]/w:r/w:pict/v:shape');
         $style = $element->getAttribute('style');
-        $this->assertRegExp('/z\-index:\-[0-9]*/', $style);
+        $this->assertMatchesRegularExpression('/z\-index:\-[0-9]*/', $style);
 
         // square
         $element = $doc->getElement('/w:document/w:body/w:p[4]/w:r/w:pict/v:shape/w10:wrap');
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FooterTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FooterTest.php
index 82bb7b7..705de57 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FooterTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FooterTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Writer\Word2007;
 
 /**
@@ -25,7 +26,7 @@ use PhpOffice\PhpWord\Writer\Word2007;
  * @coversDefaultClass \PhpOffice\PhpWord\Writer\Word2007\Part\Footer
  * @runTestsInSeparateProcesses
  */
-class FooterTest extends \PHPUnit\Framework\TestCase
+class FooterTest extends TestCase
 {
     /**
      * Write footer
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php
index 3d11174..23134d0 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\TestHelperDOCX;
@@ -25,9 +26,9 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  * @coversNothing
  * @runTestsInSeparateProcesses
  */
-class FootnotesTest extends \PHPUnit\Framework\TestCase
+class FootnotesTest extends TestCase
 {
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/HeaderTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/HeaderTest.php
index afa81cf..57fb1eb 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/HeaderTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/HeaderTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\Writer\Word2007;
 
 /**
@@ -24,7 +25,7 @@ use PhpOffice\PhpWord\Writer\Word2007;
  *
  * @runTestsInSeparateProcesses
  */
-class HeaderTest extends \PHPUnit\Framework\TestCase
+class HeaderTest extends TestCase
 {
     /**
      * Write header
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php
index 62127e2..1fc2066 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\SimpleType\NumberFormat;
@@ -29,12 +30,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  * @runTestsInSeparateProcesses
  * @since 0.10.0
  */
-class NumberingTest extends \PHPUnit\Framework\TestCase
+class NumberingTest extends TestCase
 {
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php
index 50b444b..7cdad20 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\ComplexType\ProofState;
 use PhpOffice\PhpWord\ComplexType\TrackChangesView;
 use PhpOffice\PhpWord\PhpWord;
@@ -31,12 +32,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  *
  * @coversDefaultClass \PhpOffice\PhpWord\Writer\Word2007\Part\Settings
  */
-class SettingsTest extends \PHPUnit\Framework\TestCase
+class SettingsTest extends TestCase
 {
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php
index 0cdb444..082b917 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php
@@ -17,6 +17,7 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Part;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\Style\Font;
@@ -29,12 +30,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  * @coversDefaultClass \PhpOffice\PhpWord\Writer\Word2007\Part\Styles
  * @runTestsInSeparateProcesses
  */
-class StylesTest extends \PHPUnit\Framework\TestCase
+class StylesTest extends TestCase
 {
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php
index 160bf55..052c75e 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\Writer\Word2007\Part\RelsPart;
 
 /**
@@ -24,17 +26,17 @@ use PhpOffice\PhpWord\Writer\Word2007\Part\RelsPart;
  *
  * Covers miscellaneous tests
  */
-class PartTest extends \PHPUnit\Framework\TestCase
+class PartTest extends TestCase
 {
     /**
      * Test exception when no type or target assigned to a relation
      *
      * @covers \PhpOffice\PhpWord\Writer\Word2007\Part\Rels::writeRel
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage Invalid parameters passed.
      */
     public function testRelsWriteRelException()
     {
+        $this->expectException(Exception::class);
+        $this->expectExceptionMessage('Invalid parameters passed.');
         $object = new RelsPart();
         $object->setMedia(array(array('type' => '', 'target' => '')));
         $object->write();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php
index d36a303..61bdc75 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php
@@ -17,6 +17,9 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Style;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\PhpWord;
+use PhpOffice\PhpWord\Style\Language;
 use PhpOffice\PhpWord\TestHelperDOCX;
 
 /**
@@ -25,12 +28,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  * @coversDefaultClass \PhpOffice\PhpWord\Writer\Word2007\Style\Font
  * @runTestsInSeparateProcesses
  */
-class FontTest extends \PHPUnit\Framework\TestCase
+class FontTest extends TestCase
 {
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -40,7 +43,7 @@ class FontTest extends \PHPUnit\Framework\TestCase
      */
     public function testFontRTL()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
         $textrun = $section->addTextRun();
         $textrun->addText('سلام این یک پاراگراف راست به چپ است', array('rtl' => true));
@@ -56,9 +59,9 @@ class FontTest extends \PHPUnit\Framework\TestCase
      */
     public function testFontWithLang()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $section = $phpWord->addSection();
-        $section->addText('Ce texte-ci est en français.', array('lang' => \PhpOffice\PhpWord\Style\Language::FR_BE));
+        $section->addText('Ce texte-ci est en français.', array('lang' => Language::FR_BE));
         $doc = TestHelperDOCX::getDocument($phpWord, 'Word2007');
 
         $file = 'word/document.xml';
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php
index 9bc2756..3486bc7 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007\Style;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\TestHelperDOCX;
 
 /**
@@ -25,12 +27,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  * @coversDefaultClass \PhpOffice\PhpWord\Writer\Word2007\Style\Paragraph
  * @runTestsInSeparateProcesses
  */
-class ParagraphTest extends \PHPUnit\Framework\TestCase
+class ParagraphTest extends TestCase
 {
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -40,7 +42,7 @@ class ParagraphTest extends \PHPUnit\Framework\TestCase
      */
     public function testParagraphNumbering()
     {
-        $phpWord = new \PhpOffice\PhpWord\PhpWord();
+        $phpWord = new PhpWord();
         $phpWord->addParagraphStyle('testStyle', array('indent' => '10'));
         $section = $phpWord->addSection();
         $section->addText('test', null, array('numStyle' => 'testStyle', 'numLevel' => '1'));
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/StyleTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/StyleTest.php
index f48597d..56c0dee 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/StyleTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/StyleTest.php
@@ -17,12 +17,13 @@
 
 namespace PhpOffice\PhpWord\Writer\Word2007;
 
+use PHPUnit\Framework\TestCase;
 use PhpOffice\Common\XMLWriter;
 
 /**
  * Test class for PhpOffice\PhpWord\Writer\Word2007\Style subnamespace
  */
-class StyleTest extends \PHPUnit\Framework\TestCase
+class StyleTest extends TestCase
 {
     /**
      * Test empty styles
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php
index 3e1edb3..140d300 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php
@@ -17,6 +17,8 @@
 
 namespace PhpOffice\PhpWord\Writer;
 
+use PHPUnit\Framework\TestCase;
+use PhpOffice\PhpWord\Exception\Exception;
 use PhpOffice\PhpWord\PhpWord;
 use PhpOffice\PhpWord\SimpleType\Jc;
 use PhpOffice\PhpWord\TestHelperDOCX;
@@ -26,12 +28,12 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  *
  * @runTestsInSeparateProcesses
  */
-class Word2007Test extends \PHPUnit\Framework\TestCase
+class Word2007Test extends TestCase
 {
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -181,11 +183,10 @@ class Word2007Test extends \PHPUnit\Framework\TestCase
 
     /**
      * Use disk caching exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testSetUseDiskCachingException()
     {
+        $this->expectException(Exception::class);
         $dir = implode(DIRECTORY_SEPARATOR, array(PHPWORD_TESTS_BASE_DIR, 'foo'));
 
         $object = new Word2007();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/_includes/TestHelperDOCX.php b/vendor/phpoffice/phpword/tests/PhpWord/_includes/TestHelperDOCX.php
index bef060e..e699a28 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/_includes/TestHelperDOCX.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/_includes/TestHelperDOCX.php
@@ -36,11 +36,11 @@ class TestHelperDOCX
      *
      * @since 0.12.0 Throws CreateTemporaryFileException.
      *
-     * @param \PhpOffice\PhpWord\PhpWord $phpWord
+     * @param PhpWord $phpWord
      * @param string $writerName
      *
-     * @throws \PhpOffice\PhpWord\Exception\CreateTemporaryFileException
-     * @return \PhpOffice\PhpWord\XmlDocument
+     * @throws CreateTemporaryFileException
+     * @return XmlDocument
      */
     public static function getDocument(PhpWord $phpWord, $writerName = 'Word2007')
     {
diff --git a/vendor/zendframework/zend-escaper/src/Escaper.php b/vendor/zendframework/zend-escaper/src/Escaper.php
index e68e32b..7b9789e 100644
--- a/vendor/zendframework/zend-escaper/src/Escaper.php
+++ b/vendor/zendframework/zend-escaper/src/Escaper.php
@@ -9,6 +9,8 @@
 
 namespace Zend\Escaper;
 
+use Zend\Escaper\Exception\InvalidArgumentException;
+use Zend\Escaper\Exception\RuntimeException;
 /**
  * Context specific methods for use in secure output escaping
  */
@@ -97,14 +99,14 @@ class Escaper
         if ($encoding !== null) {
             $encoding = (string) $encoding;
             if ($encoding === '') {
-                throw new Exception\InvalidArgumentException(
+                throw new InvalidArgumentException(
                     get_class($this) . ' constructor parameter does not allow a blank value'
                 );
             }
 
             $encoding = strtolower($encoding);
             if (!in_array($encoding, $this->supportedEncodings)) {
-                throw new Exception\InvalidArgumentException(
+                throw new InvalidArgumentException(
                     'Value of \'' . $encoding . '\' passed to ' . get_class($this)
                     . ' constructor parameter is invalid. Provide an encoding supported by htmlspecialchars()'
                 );
@@ -322,7 +324,7 @@ class Escaper
         }
 
         if (!$this->isUtf8($result)) {
-            throw new Exception\RuntimeException(
+            throw new RuntimeException(
                 sprintf('String to be escaped was not valid UTF-8 or could not be converted: %s', $result)
             );
         }
@@ -373,7 +375,7 @@ class Escaper
         } elseif (function_exists('mb_convert_encoding')) {
             $result = mb_convert_encoding($string, $to, $from);
         } else {
-            throw new Exception\RuntimeException(
+            throw new RuntimeException(
                 get_class($this)
                 . ' requires either the iconv or mbstring extension to be installed'
                 . ' when escaping for non UTF-8 strings.'
diff --git a/vendor/zendframework/zend-stdlib/src/AbstractOptions.php b/vendor/zendframework/zend-stdlib/src/AbstractOptions.php
index 172f5d3..0191dac 100644
--- a/vendor/zendframework/zend-stdlib/src/AbstractOptions.php
+++ b/vendor/zendframework/zend-stdlib/src/AbstractOptions.php
@@ -9,6 +9,8 @@
 
 namespace Zend\Stdlib;
 
+use Zend\Stdlib\Exception\InvalidArgumentException;
+use Zend\Stdlib\Exception\BadMethodCallException;
 use Traversable;
 
 abstract class AbstractOptions implements ParameterObjectInterface
@@ -49,7 +51,7 @@ abstract class AbstractOptions implements ParameterObjectInterface
         }
 
         if (! is_array($options) && ! $options instanceof Traversable) {
-            throw new Exception\InvalidArgumentException(
+            throw new InvalidArgumentException(
                 sprintf(
                     'Parameter provided to %s must be an %s, %s or %s',
                     __METHOD__,
@@ -109,7 +111,7 @@ abstract class AbstractOptions implements ParameterObjectInterface
         }
 
         if ($this->__strictMode__) {
-            throw new Exception\BadMethodCallException(sprintf(
+            throw new BadMethodCallException(sprintf(
                 'The option "%s" does not have a callable "%s" ("%s") setter method which must be defined',
                 $key,
                 'set' . str_replace(' ', '', ucwords(str_replace('_', ' ', $key))),
@@ -134,7 +136,7 @@ abstract class AbstractOptions implements ParameterObjectInterface
             return $this->{$getter}();
         }
 
-        throw new Exception\BadMethodCallException(sprintf(
+        throw new BadMethodCallException(sprintf(
             'The option "%s" does not have a callable "%s" getter method which must be defined',
             $key,
             'get' . str_replace(' ', '', ucwords(str_replace('_', ' ', $key)))
@@ -166,8 +168,8 @@ abstract class AbstractOptions implements ParameterObjectInterface
     {
         try {
             $this->__set($key, null);
-        } catch (Exception\BadMethodCallException $e) {
-            throw new Exception\InvalidArgumentException(
+        } catch (BadMethodCallException $e) {
+            throw new InvalidArgumentException(
                 'The class property $' . $key . ' cannot be unset as'
                 . ' NULL is an invalid value for it',
                 0,
diff --git a/vendor/zendframework/zend-stdlib/src/ArrayObject.php b/vendor/zendframework/zend-stdlib/src/ArrayObject.php
index 926ff6e..d8944c4 100644
--- a/vendor/zendframework/zend-stdlib/src/ArrayObject.php
+++ b/vendor/zendframework/zend-stdlib/src/ArrayObject.php
@@ -9,6 +9,7 @@
 
 namespace Zend\Stdlib;
 
+use Zend\Stdlib\Exception\InvalidArgumentException;
 use ArrayAccess;
 use Countable;
 use IteratorAggregate;
@@ -79,7 +80,7 @@ class ArrayObject implements IteratorAggregate, ArrayAccess, Serializable, Count
             return $this->offsetExists($key);
         }
         if (in_array($key, $this->protectedProperties)) {
-            throw new Exception\InvalidArgumentException('$key is a protected property, use a different key');
+            throw new InvalidArgumentException('$key is a protected property, use a different key');
         }
 
         return isset($this->$key);
@@ -98,7 +99,7 @@ class ArrayObject implements IteratorAggregate, ArrayAccess, Serializable, Count
             return $this->offsetSet($key, $value);
         }
         if (in_array($key, $this->protectedProperties)) {
-            throw new Exception\InvalidArgumentException('$key is a protected property, use a different key');
+            throw new InvalidArgumentException('$key is a protected property, use a different key');
         }
         $this->$key = $value;
     }
@@ -115,7 +116,7 @@ class ArrayObject implements IteratorAggregate, ArrayAccess, Serializable, Count
             return $this->offsetUnset($key);
         }
         if (in_array($key, $this->protectedProperties)) {
-            throw new Exception\InvalidArgumentException('$key is a protected property, use a different key');
+            throw new InvalidArgumentException('$key is a protected property, use a different key');
         }
         unset($this->$key);
     }
@@ -135,7 +136,7 @@ class ArrayObject implements IteratorAggregate, ArrayAccess, Serializable, Count
             return $ret;
         }
         if (in_array($key, $this->protectedProperties)) {
-            throw new Exception\InvalidArgumentException('$key is a protected property, use a different key');
+            throw new InvalidArgumentException('$key is a protected property, use a different key');
         }
 
         return $this->$key;
@@ -181,7 +182,7 @@ class ArrayObject implements IteratorAggregate, ArrayAccess, Serializable, Count
     public function exchangeArray($data)
     {
         if (! is_array($data) && ! is_object($data)) {
-            throw new Exception\InvalidArgumentException(
+            throw new InvalidArgumentException(
                 'Passed variable is not an array or object, using empty array instead'
             );
         }
@@ -369,7 +370,7 @@ class ArrayObject implements IteratorAggregate, ArrayAccess, Serializable, Count
             }
         }
 
-        throw new Exception\InvalidArgumentException('The iterator class does not exist');
+        throw new InvalidArgumentException('The iterator class does not exist');
     }
 
     /**
diff --git a/vendor/zendframework/zend-stdlib/src/ArrayUtils.php b/vendor/zendframework/zend-stdlib/src/ArrayUtils.php
index 0e2b738..95ae42a 100644
--- a/vendor/zendframework/zend-stdlib/src/ArrayUtils.php
+++ b/vendor/zendframework/zend-stdlib/src/ArrayUtils.php
@@ -9,6 +9,7 @@
 
 namespace Zend\Stdlib;
 
+use Zend\Stdlib\Exception\InvalidArgumentException;
 use Traversable;
 use Zend\Stdlib\ArrayUtils\MergeRemoveKey;
 use Zend\Stdlib\ArrayUtils\MergeReplaceKeyInterface;
@@ -216,7 +217,7 @@ abstract class ArrayUtils
     public static function iteratorToArray($iterator, $recursive = true)
     {
         if (! is_array($iterator) && ! $iterator instanceof Traversable) {
-            throw new Exception\InvalidArgumentException(__METHOD__ . ' expects an array or Traversable object');
+            throw new InvalidArgumentException(__METHOD__ . ' expects an array or Traversable object');
         }
 
         if (! $recursive) {
@@ -302,7 +303,7 @@ abstract class ArrayUtils
     public static function filter(array $data, $callback, $flag = null)
     {
         if (! is_callable($callback)) {
-            throw new Exception\InvalidArgumentException(sprintf(
+            throw new InvalidArgumentException(sprintf(
                 'Second parameter of %s must be callable',
                 __METHOD__
             ));
diff --git a/vendor/zendframework/zend-stdlib/src/FastPriorityQueue.php b/vendor/zendframework/zend-stdlib/src/FastPriorityQueue.php
index 16d2bcc..674c2c4 100644
--- a/vendor/zendframework/zend-stdlib/src/FastPriorityQueue.php
+++ b/vendor/zendframework/zend-stdlib/src/FastPriorityQueue.php
@@ -9,6 +9,7 @@
 
 namespace Zend\Stdlib;
 
+use Zend\Stdlib\Exception\InvalidArgumentException;
 use Iterator;
 use Countable;
 use Serializable;
@@ -91,7 +92,7 @@ class FastPriorityQueue implements Iterator, Countable, Serializable
     public function insert($value, $priority)
     {
         if (! is_int($priority)) {
-            throw new Exception\InvalidArgumentException('The priority must be an integer');
+            throw new InvalidArgumentException('The priority must be an integer');
         }
         $this->values[$priority][] = $value;
         if (! isset($this->priorities[$priority])) {
@@ -300,7 +301,7 @@ class FastPriorityQueue implements Iterator, Countable, Serializable
                 $this->extractFlag = $flag;
                 break;
             default:
-                throw new Exception\InvalidArgumentException("The extract flag specified is not valid");
+                throw new InvalidArgumentException("The extract flag specified is not valid");
         }
     }
 
diff --git a/vendor/zendframework/zend-stdlib/src/Glob.php b/vendor/zendframework/zend-stdlib/src/Glob.php
index ded3fc5..8137b4d 100644
--- a/vendor/zendframework/zend-stdlib/src/Glob.php
+++ b/vendor/zendframework/zend-stdlib/src/Glob.php
@@ -9,6 +9,7 @@
 
 namespace Zend\Stdlib;
 
+use Zend\Stdlib\Exception\RuntimeException;
 /**
  * Wrapper for glob with fallback if GLOB_BRACE is not available.
  */
@@ -81,7 +82,7 @@ abstract class Glob
         $res = glob($pattern, $globFlags);
         $err = ErrorHandler::stop();
         if ($res === false) {
-            throw new Exception\RuntimeException("glob('{$pattern}', {$globFlags}) failed", 0, $err);
+            throw new RuntimeException("glob('{$pattern}', {$globFlags}) failed", 0, $err);
         }
         return $res;
     }
diff --git a/vendor/zendframework/zend-stdlib/src/Message.php b/vendor/zendframework/zend-stdlib/src/Message.php
index 11ec163..a9b732b 100644
--- a/vendor/zendframework/zend-stdlib/src/Message.php
+++ b/vendor/zendframework/zend-stdlib/src/Message.php
@@ -9,6 +9,7 @@
 
 namespace Zend\Stdlib;
 
+use Zend\Stdlib\Exception\InvalidArgumentException;
 use Traversable;
 
 class Message implements MessageInterface
@@ -41,7 +42,7 @@ class Message implements MessageInterface
             return $this;
         }
         if (! is_array($spec) && ! $spec instanceof Traversable) {
-            throw new Exception\InvalidArgumentException(sprintf(
+            throw new InvalidArgumentException(sprintf(
                 'Expected a string, array, or Traversable argument in first position; received "%s"',
                 (is_object($spec) ? get_class($spec) : gettype($spec))
             ));
@@ -67,7 +68,7 @@ class Message implements MessageInterface
         }
 
         if (! is_scalar($key)) {
-            throw new Exception\InvalidArgumentException('Non-scalar argument provided for key');
+            throw new InvalidArgumentException('Non-scalar argument provided for key');
         }
 
         if (array_key_exists($key, $this->metadata)) {
diff --git a/vendor/zendframework/zend-stdlib/src/PriorityQueue.php b/vendor/zendframework/zend-stdlib/src/PriorityQueue.php
index 2a16287..a2d195c 100644
--- a/vendor/zendframework/zend-stdlib/src/PriorityQueue.php
+++ b/vendor/zendframework/zend-stdlib/src/PriorityQueue.php
@@ -9,6 +9,7 @@
 
 namespace Zend\Stdlib;
 
+use Zend\Stdlib\Exception\DomainException;
 use Countable;
 use IteratorAggregate;
 use Serializable;
@@ -278,7 +279,7 @@ class PriorityQueue implements Countable, IteratorAggregate, Serializable
         if (null === $this->queue) {
             $this->queue = new $this->queueClass();
             if (! $this->queue instanceof \SplPriorityQueue) {
-                throw new Exception\DomainException(sprintf(
+                throw new DomainException(sprintf(
                     'PriorityQueue expects an internal queue of type SplPriorityQueue; received "%s"',
                     get_class($this->queue)
                 ));
diff --git a/vendor/zendframework/zend-stdlib/src/StringUtils.php b/vendor/zendframework/zend-stdlib/src/StringUtils.php
index 79a22a4..bad8464 100644
--- a/vendor/zendframework/zend-stdlib/src/StringUtils.php
+++ b/vendor/zendframework/zend-stdlib/src/StringUtils.php
@@ -9,6 +9,7 @@
 
 namespace Zend\Stdlib;
 
+use Zend\Stdlib\Exception\RuntimeException;
 use Zend\Stdlib\StringWrapper\StringWrapperInterface;
 
 /**
@@ -132,7 +133,7 @@ abstract class StringUtils
             }
         }
 
-        throw new Exception\RuntimeException(
+        throw new RuntimeException(
             'No wrapper found supporting "' . $encoding . '"'
             . (($convertEncoding !== null) ? ' and "' . $convertEncoding . '"' : '')
         );
diff --git a/vendor/zendframework/zend-stdlib/src/StringWrapper/AbstractStringWrapper.php b/vendor/zendframework/zend-stdlib/src/StringWrapper/AbstractStringWrapper.php
index cf26250..bb133a1 100644
--- a/vendor/zendframework/zend-stdlib/src/StringWrapper/AbstractStringWrapper.php
+++ b/vendor/zendframework/zend-stdlib/src/StringWrapper/AbstractStringWrapper.php
@@ -9,6 +9,9 @@
 
 namespace Zend\Stdlib\StringWrapper;
 
+use Zend\Stdlib\Exception\InvalidArgumentException;
+use Zend\Stdlib\Exception\LogicException;
+use Zend\Stdlib\Exception\RuntimeException;
 use Zend\Stdlib\Exception;
 use Zend\Stdlib\StringUtils;
 
@@ -62,7 +65,7 @@ abstract class AbstractStringWrapper implements StringWrapperInterface
 
         $encodingUpper = strtoupper($encoding);
         if (! in_array($encodingUpper, $supportedEncodings)) {
-            throw new Exception\InvalidArgumentException(
+            throw new InvalidArgumentException(
                 'Wrapper doesn\'t support character encoding "' . $encoding . '"'
             );
         }
@@ -70,7 +73,7 @@ abstract class AbstractStringWrapper implements StringWrapperInterface
         if ($convertEncoding !== null) {
             $convertEncodingUpper = strtoupper($convertEncoding);
             if (! in_array($convertEncodingUpper, $supportedEncodings)) {
-                throw new Exception\InvalidArgumentException(
+                throw new InvalidArgumentException(
                     'Wrapper doesn\'t support character encoding "' . $convertEncoding . '"'
                 );
             }
@@ -117,7 +120,7 @@ abstract class AbstractStringWrapper implements StringWrapperInterface
         $encoding        = $this->getEncoding();
         $convertEncoding = $this->getConvertEncoding();
         if ($convertEncoding === null) {
-            throw new Exception\LogicException(
+            throw new LogicException(
                 'No convert encoding defined'
             );
         }
@@ -128,7 +131,7 @@ abstract class AbstractStringWrapper implements StringWrapperInterface
 
         $from = $reverse ? $convertEncoding : $encoding;
         $to   = $reverse ? $encoding : $convertEncoding;
-        throw new Exception\RuntimeException(sprintf(
+        throw new RuntimeException(sprintf(
             'Converting from "%s" to "%s" isn\'t supported by this string wrapper',
             $from,
             $to
@@ -153,12 +156,12 @@ abstract class AbstractStringWrapper implements StringWrapperInterface
 
         $break = (string) $break;
         if ($break === '') {
-            throw new Exception\InvalidArgumentException('Break string cannot be empty');
+            throw new InvalidArgumentException('Break string cannot be empty');
         }
 
         $width = (int) $width;
         if ($width === 0 && $cut) {
-            throw new Exception\InvalidArgumentException('Cannot force cut when width is zero');
+            throw new InvalidArgumentException('Cannot force cut when width is zero');
         }
 
         if (StringUtils::isSingleByteEncoding($this->getEncoding())) {
diff --git a/vendor/zendframework/zend-stdlib/src/StringWrapper/Iconv.php b/vendor/zendframework/zend-stdlib/src/StringWrapper/Iconv.php
index bc791b8..2feff9b 100644
--- a/vendor/zendframework/zend-stdlib/src/StringWrapper/Iconv.php
+++ b/vendor/zendframework/zend-stdlib/src/StringWrapper/Iconv.php
@@ -9,6 +9,8 @@
 
 namespace Zend\Stdlib\StringWrapper;
 
+use Zend\Stdlib\Exception\ExtensionNotLoadedException;
+use Zend\Stdlib\Exception\LogicException;
 use Zend\Stdlib\Exception;
 
 class Iconv extends AbstractStringWrapper
@@ -215,7 +217,7 @@ class Iconv extends AbstractStringWrapper
     public function __construct()
     {
         if (! extension_loaded('iconv')) {
-            throw new Exception\ExtensionNotLoadedException(
+            throw new ExtensionNotLoadedException(
                 'PHP extension "iconv" is required for this wrapper'
             );
         }
@@ -270,7 +272,7 @@ class Iconv extends AbstractStringWrapper
         $encoding        = $this->getEncoding();
         $convertEncoding = $this->getConvertEncoding();
         if ($convertEncoding === null) {
-            throw new Exception\LogicException(
+            throw new LogicException(
                 'No convert encoding defined'
             );
         }
diff --git a/vendor/zendframework/zend-stdlib/src/StringWrapper/Intl.php b/vendor/zendframework/zend-stdlib/src/StringWrapper/Intl.php
index 4644db3..1b4cfd9 100644
--- a/vendor/zendframework/zend-stdlib/src/StringWrapper/Intl.php
+++ b/vendor/zendframework/zend-stdlib/src/StringWrapper/Intl.php
@@ -9,6 +9,7 @@
 
 namespace Zend\Stdlib\StringWrapper;
 
+use Zend\Stdlib\Exception\ExtensionNotLoadedException;
 use Zend\Stdlib\Exception;
 
 class Intl extends AbstractStringWrapper
@@ -38,7 +39,7 @@ class Intl extends AbstractStringWrapper
     public function __construct()
     {
         if (! extension_loaded('intl')) {
-            throw new Exception\ExtensionNotLoadedException(
+            throw new ExtensionNotLoadedException(
                 'PHP extension "intl" is required for this wrapper'
             );
         }
diff --git a/vendor/zendframework/zend-stdlib/src/StringWrapper/MbString.php b/vendor/zendframework/zend-stdlib/src/StringWrapper/MbString.php
index a0f80f6..17d5e2e 100644
--- a/vendor/zendframework/zend-stdlib/src/StringWrapper/MbString.php
+++ b/vendor/zendframework/zend-stdlib/src/StringWrapper/MbString.php
@@ -9,6 +9,8 @@
 
 namespace Zend\Stdlib\StringWrapper;
 
+use Zend\Stdlib\Exception\ExtensionNotLoadedException;
+use Zend\Stdlib\Exception\LogicException;
 use Zend\Stdlib\Exception;
 
 class MbString extends AbstractStringWrapper
@@ -49,7 +51,7 @@ class MbString extends AbstractStringWrapper
     public function __construct()
     {
         if (! extension_loaded('mbstring')) {
-            throw new Exception\ExtensionNotLoadedException(
+            throw new ExtensionNotLoadedException(
                 'PHP extension "mbstring" is required for this wrapper'
             );
         }
@@ -105,7 +107,7 @@ class MbString extends AbstractStringWrapper
         $convertEncoding = $this->getConvertEncoding();
 
         if ($convertEncoding === null) {
-            throw new Exception\LogicException(
+            throw new LogicException(
                 'No convert encoding defined'
             );
         }
diff --git a/vendor/zendframework/zend-stdlib/src/StringWrapper/Native.php b/vendor/zendframework/zend-stdlib/src/StringWrapper/Native.php
index ce9dbfc..34c6257 100644
--- a/vendor/zendframework/zend-stdlib/src/StringWrapper/Native.php
+++ b/vendor/zendframework/zend-stdlib/src/StringWrapper/Native.php
@@ -9,6 +9,7 @@
 
 namespace Zend\Stdlib\StringWrapper;
 
+use Zend\Stdlib\Exception\InvalidArgumentException;
 use Zend\Stdlib\Exception;
 use Zend\Stdlib\StringUtils;
 
@@ -70,7 +71,7 @@ class Native extends AbstractStringWrapper
 
         $encodingUpper = strtoupper($encoding);
         if (! in_array($encodingUpper, $supportedEncodings)) {
-            throw new Exception\InvalidArgumentException(
+            throw new InvalidArgumentException(
                 'Wrapper doesn\'t support character encoding "' . $encoding . '"'
             );
         }
@@ -81,7 +82,7 @@ class Native extends AbstractStringWrapper
 
         if ($convertEncoding !== null) {
             if ($encodingUpper !== strtoupper($convertEncoding)) {
-                throw new Exception\InvalidArgumentException(
+                throw new InvalidArgumentException(
                     'Wrapper doesn\'t support to convert between character encodings'
                 );
             }
