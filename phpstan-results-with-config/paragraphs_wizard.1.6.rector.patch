diff --git a/src/Plugin/Field/FieldFormatter/ParagraphsWizardFieldFormatter.php b/src/Plugin/Field/FieldFormatter/ParagraphsWizardFieldFormatter.php
index 6763de8..b724702 100644
--- a/src/Plugin/Field/FieldFormatter/ParagraphsWizardFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ParagraphsWizardFieldFormatter.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\paragraphs_wizard\Plugin\Field\FieldFormatter;
 
+use Drupal\field_ui\Form\EntityViewDisplayEditForm;
+use Drupal\Core\Entity\Entity\EntityViewDisplay;
+use Drupal\paragraphs\Entity\Paragraph;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemInterface;
@@ -35,9 +38,9 @@ class ParagraphsWizardFieldFormatter extends FormatterBase {
    */
   public function settingsForm(array $form, FormStateInterface $form_state) {
     $form = [];
-    /** @var \Drupal\field_ui\Form\EntityViewDisplayEditForm  $callback_object */
+    /** @var EntityViewDisplayEditForm $callback_object */
     $callback_object = $form_state->getBuildInfo()['callback_object'];
-    /** @var \Drupal\Core\Entity\Entity\EntityViewDisplay  $entity_view_display */
+    /** @var EntityViewDisplay $entity_view_display */
     $entity_view_display = $callback_object->getEntity();
     $entity_type_id = $entity_view_display->getTargetEntityTypeId();
     $bundle = $entity_view_display->getTargetBundle();
@@ -80,7 +83,7 @@ class ParagraphsWizardFieldFormatter extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
@@ -89,13 +92,13 @@ class ParagraphsWizardFieldFormatter extends FormatterBase {
   protected function viewValue(FieldItemInterface $item) {
     $values = $item->getValue();
     $entity_id = $values['target_id'];
-    /** @var \Drupal\paragraphs\Entity\Paragraph $entity */
+    /** @var Paragraph $entity */
     $entity_type = 'paragraph';
     $view_mode = $this->getSetting('view_mode');
     $entity = \Drupal::entityTypeManager()->getStorage($entity_type)->load($entity_id);
     $view_builder = \Drupal::entityTypeManager()->getViewBuilder($entity_type);
     $pre_render = $view_builder->view($entity, $view_mode);
-    $render_output = render($pre_render);
+    $render_output = \Drupal::service('renderer')->render($pre_render);
     return $render_output;
   }
 
