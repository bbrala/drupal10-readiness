diff --git a/duration_field.info.yml b/duration_field.info.yml
index d0209bc..91b08bd 100644
--- a/duration_field.info.yml
+++ b/duration_field.info.yml
@@ -2,5 +2,4 @@ name: Duration Field
 description: Creates a duration Field API field, that collects a period of time, whether that be hours, minutes, seconds, days, months, years, or any combination of those.
 type: module
 package: Field types
-core: '8.x'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
diff --git a/duration_field.install b/duration_field.install
index 2744165..4f52819 100644
--- a/duration_field.install
+++ b/duration_field.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface;
+use Drupal\Core\Entity\EntityFieldManager;
 /**
  * @file
  * Holds install hooks for the Duration Field module.
@@ -39,7 +41,7 @@ function duration_field_update_8200() {
  *   - Removes the now unused 'duration' setting for duration field widget
  *     settings.
  *
- * @param \Drupal\Core\Field\FieldConfigInterface $field
+ * @param FieldConfigInterface $field
  *   The field to be updated.
  */
 function duration_field_update_config_v1_v2(FieldConfigInterface $field) {
@@ -104,7 +106,7 @@ function duration_field_update_config_v1_v2(FieldConfigInterface $field) {
 /**
  * Helper function to convert 8.x-1.x DB tables to 8.x-2.x DB tables.
  *
- * @param \Drupal\Core\Field\FieldConfigInterface $field
+ * @param FieldConfigInterface $field
  *   The field to be updated.
  */
 function duration_field_update_db_v1_v2(FieldConfigInterface $field) {
@@ -118,9 +120,9 @@ function duration_field_update_db_v1_v2(FieldConfigInterface $field) {
   $entity_manager = \Drupal::service('entity_type.manager');
   $entity_manager->useCaches(FALSE);
 
-  /** @var \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface $schema_repository */
+  /** @var EntityLastInstalledSchemaRepositoryInterface $schema_repository */
   $schema_repository = \Drupal::service('entity.last_installed_schema.repository');
-  /** @var \Drupal\Core\Entity\EntityFieldManager $entity_field_manager */
+  /** @var EntityFieldManager $entity_field_manager */
   $entity_field_manager = \Drupal::service('entity_field.manager');
   $field_storage_definitions = $schema_repository->getLastInstalledFieldStorageDefinitions($entity_type_id);
   $schema = $field_storage_definitions[$field_name]->getSchema();
diff --git a/src/Drush/DurationFieldCommand.php b/src/Drush/DurationFieldCommand.php
index b13eea8..5d4bd46 100644
--- a/src/Drush/DurationFieldCommand.php
+++ b/src/Drush/DurationFieldCommand.php
@@ -17,32 +17,32 @@ class DurationFieldCommand extends DrushCommands {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Constructs a DurationFieldCommand object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entityTypeBundleInfo
+   * @param EntityTypeBundleInfoInterface $entityTypeBundleInfo
    *   The entity type bundle info service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
+   * @param EntityFieldManagerInterface $entityFieldManager
    *   The entity field manager.
    */
   public function __construct(
diff --git a/src/Plugin/Field/FieldFormatter/DurationHumanDisplayFormatter.php b/src/Plugin/Field/FieldFormatter/DurationHumanDisplayFormatter.php
index 25d7dbb..3e6bee6 100644
--- a/src/Plugin/Field/FieldFormatter/DurationHumanDisplayFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/DurationHumanDisplayFormatter.php
@@ -27,21 +27,21 @@ class DurationHumanDisplayFormatter extends FormatterBase implements ContainerFa
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The granularity service.
    *
-   * @var \Drupal\duration_field\Service\GranularityServiceInterface
+   * @var GranularityServiceInterface
    */
   protected $granularityService;
 
   /**
    * The Duration service.
    *
-   * @var \Drupal\duration_field\Service\DurationServiceInterface
+   * @var DurationServiceInterface
    */
   protected $durationService;
 
@@ -62,11 +62,11 @@ class DurationHumanDisplayFormatter extends FormatterBase implements ContainerFa
    *   The current view mode.
    * @param array $third_party_settings
    *   The third party settings.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler service.
-   * @param \Drupal\duration_field\Service\GranularityServiceInterface $granularityService
+   * @param GranularityServiceInterface $granularityService
    *   The granularity service.
-   * @param \Drupal\duration_field\Service\DurationServiceInterface $durationService
+   * @param DurationServiceInterface $durationService
    *   The duration service.
    */
   public function __construct(
diff --git a/src/Plugin/Field/FieldFormatter/DurationTimeFormatter.php b/src/Plugin/Field/FieldFormatter/DurationTimeFormatter.php
index 9d63215..58981f3 100644
--- a/src/Plugin/Field/FieldFormatter/DurationTimeFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/DurationTimeFormatter.php
@@ -24,7 +24,7 @@ class DurationTimeFormatter extends FormatterBase implements ContainerFactoryPlu
   /**
    * The granularity service.
    *
-   * @var \Drupal\duration_field\Service\GranularityServiceInterface
+   * @var GranularityServiceInterface
    */
   protected $granularityService;
 
@@ -45,7 +45,7 @@ class DurationTimeFormatter extends FormatterBase implements ContainerFactoryPlu
    *   The current view mode.
    * @param array $third_party_settings
    *   The third party settings.
-   * @param \Drupal\duration_field\Service\GranularityServiceInterface $granularityService
+   * @param GranularityServiceInterface $granularityService
    *   The granularity service.
    */
   public function __construct(
diff --git a/src/Plugin/Field/FieldWidget/DurationWidget.php b/src/Plugin/Field/FieldWidget/DurationWidget.php
index 2b70c38..fe1cb1d 100644
--- a/src/Plugin/Field/FieldWidget/DurationWidget.php
+++ b/src/Plugin/Field/FieldWidget/DurationWidget.php
@@ -27,7 +27,7 @@ class DurationWidget extends WidgetBase implements WidgetInterface, ContainerFac
   /**
    * The Duration service.
    *
-   * @var \Drupal\duration_field\Service\DurationServiceInterface
+   * @var DurationServiceInterface
    */
   protected $durationService;
 
@@ -38,13 +38,13 @@ class DurationWidget extends WidgetBase implements WidgetInterface, ContainerFac
    *   The plugin ID.
    * @param mixed $plugin_definition
    *   The plugin definition.
-   * @param Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The field definition.
    * @param array $settings
    *   The field settings.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\duration_field\Service\DurationServiceInterface $duration_service
+   * @param DurationServiceInterface $duration_service
    *   The duration service.
    */
   public function __construct(
diff --git a/src/Service/DurationService.php b/src/Service/DurationService.php
index fd56eac..def7ab2 100644
--- a/src/Service/DurationService.php
+++ b/src/Service/DurationService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\duration_field\Service;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use DateInterval;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\duration_field\Exception\InvalidDurationException;
@@ -175,7 +176,7 @@ class DurationService implements DurationServiceInterface {
    * @param string $textLength
    *   The length of text to use. Allowed values are 'full' and 'short'.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The translated text value of the given type.
    */
   protected function getTimePeriod($type, $value, $textLength) {
diff --git a/src/Service/DurationServiceInterface.php b/src/Service/DurationServiceInterface.php
index 5598e8a..d68782c 100644
--- a/src/Service/DurationServiceInterface.php
+++ b/src/Service/DurationServiceInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\duration_field\Service;
 
+use Drupal\duration_field\Exception\InvalidDurationException;
 use DateInterval;
 
 /**
@@ -51,7 +52,7 @@ interface DurationServiceInterface {
    * @return \DateInterval
    *   A PHP DateInterval object for the given ISO 8601 duration string.
    *
-   * @throws Drupal\duration_field\Exception\InvalidDurationException
+   * @throws InvalidDurationException
    *   Thrown if $value is not a valid ISO 8601 Duration string.
    */
   public function getDateIntervalFromDurationString($durationString);
@@ -71,7 +72,7 @@ interface DurationServiceInterface {
    * @return \DateInterval
    *   A PHP DateInterval object for the given ISO 8601 duration string.
    *
-   * @throws Drupal\duration_field\Exception\InvalidDurationException
+   * @throws InvalidDurationException
    *   Thrown if $value is not a valid ISO 8601 Duration string.
    */
   public function convertDateArrayToDateInterval(array $input);
diff --git a/tests/src/Functional/DurationFieldFunctionalTest.php b/tests/src/Functional/DurationFieldFunctionalTest.php
index 85ccf88..77f7f39 100644
--- a/tests/src/Functional/DurationFieldFunctionalTest.php
+++ b/tests/src/Functional/DurationFieldFunctionalTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\duration_field\Functional;
 
+use Drupal\user\UserInterface;
 /**
  * Functional tests for the Duration Field module.
  *
@@ -12,7 +13,7 @@ class DurationFieldFunctionalTest extends DurationFieldBrowserTestBase {
   /**
    * Admin user for testing.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/FunctionalJavascript/DurationElementStatesTest.php b/tests/src/FunctionalJavascript/DurationElementStatesTest.php
index 48b08df..8628b30 100644
--- a/tests/src/FunctionalJavascript/DurationElementStatesTest.php
+++ b/tests/src/FunctionalJavascript/DurationElementStatesTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\duration_field\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 
 /**
@@ -31,14 +32,14 @@ class DurationElementStatesTest extends WebDriverTestBase {
   /**
    * Regular authenticated User for tests.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->testUser = $this->createUser();
diff --git a/tests/src/Kernel/DurationFormElementTest.php b/tests/src/Kernel/DurationFormElementTest.php
index c422480..aa930a2 100644
--- a/tests/src/Kernel/DurationFormElementTest.php
+++ b/tests/src/Kernel/DurationFormElementTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\duration_field\Kernel;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Form\FormInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,7 +19,7 @@ class DurationFormElementTest extends KernelTestBase implements FormInterface {
   /**
    * User for testing.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
@@ -32,7 +33,7 @@ class DurationFormElementTest extends KernelTestBase implements FormInterface {
   /**
    * Sets up the test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('system', ['sequences', 'key_value_expire']);
     $this->installEntitySchema('user');
@@ -170,7 +171,7 @@ class DurationFormElementTest extends KernelTestBase implements FormInterface {
     ];
     $this->assertCount(count($expected_errors), $errors);
     foreach ($expected_errors as $field => $name) {
-      $this->assertEqual($errors[$field], t('%name is not a valid number.', ['%name' => $name]));
+      $this->assertEquals($errors[$field], t('%name is not a valid number.', ['%name' => $name]));
     }
   }
 
