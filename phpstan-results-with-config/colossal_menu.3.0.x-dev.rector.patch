diff --git a/colossal_menu.post_update.php b/colossal_menu.post_update.php
index e6528e2..b097dbf 100644
--- a/colossal_menu.post_update.php
+++ b/colossal_menu.post_update.php
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\colossal_menu\LinkTypeInterface;
+use Drupal\colossal_menu\Entity\Link;
+use Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface;
 /**
  * @file
  * Post update functions for Colossal Menu.
@@ -13,7 +17,7 @@
  * Remove deprecated link `machine_name` field.
  */
 function colossal_menu_post_update_remove_link_machine_name() {
-  /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository */
+  /** @var EntityDisplayRepositoryInterface $entity_display_repository */
   $entity_display_repository = \Drupal::service('entity_display.repository');
   $link_type_storage = Drupal::entityTypeManager()
     ->getStorage('colossal_menu_link_type');
@@ -32,7 +36,7 @@ function colossal_menu_post_update_remove_link_machine_name() {
   ])->save();
 
   // Add new field instance to all link types.
-  /** @var \Drupal\colossal_menu\LinkTypeInterface $link_type */
+  /** @var LinkTypeInterface $link_type */
   foreach ($link_type_storage->loadMultiple() as $link_type) {
     FieldConfig::create([
       'field_name' => $field_name,
@@ -56,14 +60,14 @@ function colossal_menu_post_update_remove_link_machine_name() {
     ->fetchAllKeyed();
   $link_storage = Drupal::entityTypeManager()
     ->getStorage('colossal_menu_link');
-  /** @var \Drupal\colossal_menu\Entity\Link $link */
+  /** @var Link $link */
   foreach ($link_storage->loadMultiple() as $link) {
     $link->set($field_name, $machine_names[$link->id()]);
     $link->save();
   }
 
   // Uninstall base field.
-  /** @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface $update_manager */
+  /** @var EntityDefinitionUpdateManagerInterface $update_manager */
   $update_manager = Drupal::service('entity.definition_update_manager');
   $definition = $update_manager->getFieldStorageDefinition('machine_name', 'colossal_menu_link');
   $update_manager->uninstallFieldStorageDefinition($definition);
diff --git a/docroot/modules/contrib/colossal_menu/colossal_menu.post_update.php b/docroot/modules/contrib/colossal_menu/colossal_menu.post_update.php
index 43945bc..6e2dc31 100644
--- a/docroot/modules/contrib/colossal_menu/colossal_menu.post_update.php
+++ b/docroot/modules/contrib/colossal_menu/colossal_menu.post_update.php
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\colossal_menu\LinkTypeInterface;
+use Drupal\colossal_menu\Entity\Link;
+use Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface;
 /**
  * @file
  * Post update functions for Colossal Menu.
@@ -13,7 +17,7 @@
  * Remove deprecated link `machine_name` field.
  */
 function colossal_menu_post_update_remove_link_machine_name(&$sandbox = NULL) {
-  /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository */
+  /** @var EntityDisplayRepositoryInterface $entity_display_repository */
   $entity_display_repository = \Drupal::service('entity_display.repository');
   $link_type_storage = Drupal::entityTypeManager()
     ->getStorage('colossal_menu_link_type');
@@ -31,7 +35,7 @@ function colossal_menu_post_update_remove_link_machine_name(&$sandbox = NULL) {
   ])->save();
 
   // Add new field instance to all link types.
-  /** @var \Drupal\colossal_menu\LinkTypeInterface $link_type */
+  /** @var LinkTypeInterface $link_type */
   foreach ($link_type_storage->loadMultiple() as $link_type) {
     FieldConfig::create([
       'field_name' => $field_name,
@@ -55,14 +59,14 @@ function colossal_menu_post_update_remove_link_machine_name(&$sandbox = NULL) {
     ->fetchAllKeyed();
   $link_storage = Drupal::entityTypeManager()
     ->getStorage('colossal_menu_link');
-  /** @var \Drupal\colossal_menu\Entity\Link $link */
+  /** @var Link $link */
   foreach ($link_storage->loadMultiple() as $link) {
     $link->set($field_name, $machine_names[$link->id()]);
     $link->save();
   }
 
   // Uninstall base field.
-  /** @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface $update_manager */
+  /** @var EntityDefinitionUpdateManagerInterface $update_manager */
   $update_manager = Drupal::service('entity.definition_update_manager');
   $definition = $update_manager->getFieldStorageDefinition('machine_name', 'colossal_menu_link');
   $update_manager->uninstallFieldStorageDefinition($definition);
diff --git a/src/Controller/LinkController.php b/src/Controller/LinkController.php
index 376892d..b049350 100644
--- a/src/Controller/LinkController.php
+++ b/src/Controller/LinkController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\colossal_menu\Controller;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -22,32 +23,32 @@ class LinkController extends ControllerBase {
   /**
    * Current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * Colossal Menu Link storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;
 
   /**
    * Colossal Menu Link Type storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $typeStorage;
 
   /**
    * LinkController constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   Colossal Menu Link storage.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $type_storage
+   * @param EntityStorageInterface $type_storage
    *   Colossal Menu Link Type storage.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   Current route match.
    */
   public function __construct(
@@ -64,7 +65,7 @@ public function __construct(
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager */
+    /** @var EntityTypeManagerInterface $entity_manager */
     $entity_type_manager = $container->get('entity_type.manager');
     return new static(
       $entity_type_manager->getStorage('colossal_menu_link'),
@@ -79,9 +80,9 @@ public static function create(ContainerInterface $container) {
    * Displays add links for available bundles/types for entity
    * colossal_menu_link.
    *
-   * @param \Drupal\system\MenuInterface $colossal_menu
+   * @param MenuInterface $colossal_menu
    *   An entity representing a custom menu.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ -136,11 +137,11 @@ public function add(MenuInterface $colossal_menu, Request $request) {
    * Presents the creation form for colossal_menu_link entities of given
    * bundle/type.
    *
-   * @param \Drupal\system\MenuInterface $colossal_menu
+   * @param MenuInterface $colossal_menu
    *   An entity representing a custom menu.
-   * @param \Drupal\Core\Entity\EntityInterface $colossal_menu_link_type
+   * @param EntityInterface $colossal_menu_link_type
    *   The custom bundle to add.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ -159,7 +160,7 @@ public function addForm(MenuInterface $colossal_menu,
   /**
    * Provides the page title for this controller.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $colossal_menu_link_type
+   * @param EntityInterface $colossal_menu_link_type
    *   The custom bundle/type being added.
    *
    * @return string
@@ -177,7 +178,7 @@ public function getAddFormTitle(EntityInterface $colossal_menu_link_type) {
    * Presents the creation form for colossal_menu_link entities of given
    * bundle/type.
    *
-   * @param \Drupal\colossal_menu\LinkInterface $colossal_menu_link
+   * @param LinkInterface $colossal_menu_link
    *   The custom bundle to add.
    *
    * @return array
@@ -190,7 +191,7 @@ public function editForm(LinkInterface $colossal_menu_link) {
   /**
    * Provides the page title for this controller.
    *
-   * @param \Drupal\colossal_menu\LinkInterface $colossal_menu_link
+   * @param LinkInterface $colossal_menu_link
    *   Link type being edited.
    *
    * @return string
diff --git a/src/Entity/Link.php b/src/Entity/Link.php
index e18fbdb..501017b 100644
--- a/src/Entity/Link.php
+++ b/src/Entity/Link.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\colossal_menu\Entity;
 
+use Drupal\Core\Database\Connection;
+use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Database\Query\Condition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -62,14 +64,14 @@ class Link extends ContentEntityBase implements LinkInterface {
   /**
    * Database Connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Url Object.
    *
-   * @var \Drupal\Core\Url
+   * @var Url
    */
   protected $url;
 
@@ -587,7 +589,7 @@ public static function loadByMachineName($machine_name) {
   /**
    * Get the database connection.
    *
-   * @return \Drupal\Core\Database\Connection
+   * @return Connection
    *   The database connection.
    */
   protected function getConnection() {
@@ -614,7 +616,7 @@ public function getCacheTagsToInvalidate() {
    * This method is marked private to prevent sub-classes from retrieving
    * services from the container through it.
    *
-   * @return \Symfony\Component\DependencyInjection\ContainerInterface
+   * @return ContainerInterface
    *   The service container.
    */
   private function container() {
diff --git a/src/Entity/Menu.php b/src/Entity/Menu.php
index d9bfae8..68ce6bf 100644
--- a/src/Entity/Menu.php
+++ b/src/Entity/Menu.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\colossal_menu\Entity;
 
+use Drupal\colossal_menu\Menu\MenuTreeStorage;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\system\MenuInterface;
@@ -77,7 +78,7 @@ public function isLocked() {
    */
   public static function preDelete(EntityStorageInterface $storage, array $entities) {
     parent::preDelete($storage, $entities);
-    /** @var \Drupal\colossal_menu\Menu\MenuTreeStorage $menu_tree_storage */
+    /** @var MenuTreeStorage $menu_tree_storage */
     $menu_tree_storage = \Drupal::service('colossal_menu.tree_storage');
     foreach ($entities as $menu) {
       $links = $menu_tree_storage->loadByProperties(['menu' => $menu->id()]);
diff --git a/src/Form/LinkForm.php b/src/Form/LinkForm.php
index ce66dac..b2efebd 100644
--- a/src/Form/LinkForm.php
+++ b/src/Form/LinkForm.php
@@ -24,22 +24,22 @@ class LinkForm extends ContentEntityForm implements MenuLinkFormInterface {
   /**
    * The link tree.
    *
-   * @var \Drupal\colossal_menu\Menu\MenuLinkTree
+   * @var MenuLinkTree
    */
   protected $linkTree;
 
   /**
    * Constructs a LinkForm object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
-   * @param \Drupal\colossal_menu\Menu\MenuLinkTree $link_tree
+   * @param MenuLinkTree $link_tree
    *   The colossal menu link tree.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeManagerInterface $entity_type_manager, MenuLinkTree $link_tree, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL) {
diff --git a/src/Form/MenuForm.php b/src/Form/MenuForm.php
index 7ce30c6..c345f35 100644
--- a/src/Form/MenuForm.php
+++ b/src/Form/MenuForm.php
@@ -22,14 +22,14 @@ class MenuForm extends EntityForm {
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Menu Tree.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;
 
@@ -238,7 +238,7 @@ protected function buildOverviewForm(array &$form, FormStateInterface $form_stat
    *
    * @param array $elements
    *   An array of form elements to be filled.
-   * @param \Drupal\Core\Menu\MenuLinkTreeElement $item
+   * @param MenuLinkTreeElement $item
    *   Menu Link Tree element.
    * @param int $depth
    *   The current depth.
diff --git a/src/LinkAccessControlHandler.php b/src/LinkAccessControlHandler.php
index d4268ff..e062176 100644
--- a/src/LinkAccessControlHandler.php
+++ b/src/LinkAccessControlHandler.php
@@ -18,7 +18,7 @@ class LinkAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\colossal_menu\LinkInterface $entity */
+    /** @var LinkInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isEnabled()) {
diff --git a/src/LinkTypeAccessControlHandler.php b/src/LinkTypeAccessControlHandler.php
index 0749691..7f2bf47 100644
--- a/src/LinkTypeAccessControlHandler.php
+++ b/src/LinkTypeAccessControlHandler.php
@@ -18,7 +18,7 @@ class LinkTypeAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\colossal_menu\LinkInterface $entity */
+    /** @var LinkInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIf($account->hasPermission('view colossal_menu_link_type'));
diff --git a/src/Menu/MenuLinkTree.php b/src/Menu/MenuLinkTree.php
index 4a390c7..a168930 100644
--- a/src/Menu/MenuLinkTree.php
+++ b/src/Menu/MenuLinkTree.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\colossal_menu\Menu;
 
+use Drupal\colossal_menu\LinkInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Access\AccessibleInterface;
 use Drupal\Core\Controller\ControllerResolverInterface;
@@ -20,22 +21,22 @@ class MenuLinkTree extends CoreMenuLinkTree {
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a \Drupal\Core\Menu\MenuLinkTree object.
    *
-   * @param \Drupal\Core\Menu\MenuTreeStorageInterface $tree_storage
+   * @param MenuTreeStorageInterface $tree_storage
    *   The menu link tree storage.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider to load routes by name.
-   * @param \Drupal\Core\Menu\MenuActiveTrailInterface $menu_active_trail
+   * @param MenuActiveTrailInterface $menu_active_trail
    *   The active menu trail service.
-   * @param \Drupal\Core\Controller\ControllerResolverInterface $controller_resolver
+   * @param ControllerResolverInterface $controller_resolver
    *   The controller resolver.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The EntityTypeManager service.
    */
   public function __construct(MenuTreeStorageInterface $tree_storage,
@@ -112,7 +113,7 @@ public function build(array $tree) {
    */
   protected function addItemContent(array &$tree) {
     foreach ($tree as &$item) {
-      /** @var \Drupal\colossal_menu\LinkInterface $link */
+      /** @var LinkInterface $link */
       $link = $item['original_link'];
 
       $item['show_title'] = $link->showTitle();
diff --git a/src/Menu/MenuTreeStorage.php b/src/Menu/MenuTreeStorage.php
index 2926b9c..f311b61 100644
--- a/src/Menu/MenuTreeStorage.php
+++ b/src/Menu/MenuTreeStorage.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\colossal_menu\Menu;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\colossal_menu\Entity\Link;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Menu\MenuTreeParameters;
@@ -24,21 +28,21 @@ class MenuTreeStorage implements MenuTreeStorageInterface {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;
 
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $currentRouteMatch;
 
@@ -52,19 +56,19 @@ class MenuTreeStorage implements MenuTreeStorageInterface {
   /**
    * Constructs a new \Drupal\Core\Menu\MenuTreeStorage.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   A Database connection to use for reading and writing configuration data.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The EntityTypeManager service.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $current_route_match
+   * @param RouteMatchInterface $current_route_match
    *   The currently active route match object.
    * @param string $entity_type
    *   The entity type name.
    * @param string $table
    *   A database table name to store configuration data in.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(Connection $connection, EntityTypeManagerInterface $entity_type_manager, RouteMatchInterface $current_route_match, string $entity_type, string $table) {
     $this->connection = $connection;
@@ -112,7 +116,7 @@ public function loadMultiple(array $ids) {
    * {@inheritdoc}
    */
   public function loadByProperties(array $properties) {
-    /** @var \Drupal\colossal_menu\Entity\Link[] $entities */
+    /** @var Link[] $entities */
     $entities = $this->storage->loadByProperties($properties);
     return $entities;
   }
diff --git a/src/MenuAccessControlHandler.php b/src/MenuAccessControlHandler.php
index 5ab76a7..3c8c8e0 100644
--- a/src/MenuAccessControlHandler.php
+++ b/src/MenuAccessControlHandler.php
@@ -18,7 +18,7 @@ class MenuAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\colossal_menu\LinkInterface $entity */
+    /** @var LinkInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIfHasPermission($account, 'view colossal_menu');
diff --git a/src/MenuListBuilder.php b/src/MenuListBuilder.php
index 9ad42ba..062a7db 100644
--- a/src/MenuListBuilder.php
+++ b/src/MenuListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\colossal_menu;
 
+use Drupal\Core\Url;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 
@@ -37,7 +38,7 @@ public function getDefaultOperations(EntityInterface $entity) {
 
     // Since links are managed from the menu edit page we remove the destination
     // parameter to make it easier to modify and save link changes quickly.
-    /** @var \Drupal\Core\Url $url */
+    /** @var Url $url */
     $url = $operations['edit']['url'];
     $query = $url->getOption('query');
     unset($query['destination']);
diff --git a/src/Plugin/Block/MenuBlock.php b/src/Plugin/Block/MenuBlock.php
index 0329394..77c22ae 100644
--- a/src/Plugin/Block/MenuBlock.php
+++ b/src/Plugin/Block/MenuBlock.php
@@ -24,7 +24,7 @@ class MenuBlock extends SystemMenuBlock {
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -37,11 +37,11 @@ class MenuBlock extends SystemMenuBlock {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_tree
+   * @param MenuLinkTreeInterface $menu_tree
    *   The menu tree service.
-   * @param \Drupal\Core\Menu\MenuActiveTrailInterface $menu_active_trail
+   * @param MenuActiveTrailInterface $menu_active_trail
    *   The active menu trail service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MenuLinkTreeInterface $menu_tree, MenuActiveTrailInterface $menu_active_trail, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/tests/src/Functional/ColossalMenuFunctionalTestBase.php b/tests/src/Functional/ColossalMenuFunctionalTestBase.php
index 6fde0e4..ec5583d 100644
--- a/tests/src/Functional/ColossalMenuFunctionalTestBase.php
+++ b/tests/src/Functional/ColossalMenuFunctionalTestBase.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\colossal_menu\Functional;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -56,12 +60,12 @@ protected function setUp(): void {
    * @param array $values
    *   Entity values for the menu.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   protected function addMenu(array $values = []): void {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $entity = \Drupal::entityTypeManager()
       ->getStorage('colossal_menu')
       ->create(['id' => 'tests', 'label' => 'Tests'] + $values);
@@ -74,12 +78,12 @@ protected function addMenu(array $values = []): void {
    * @param array $values
    *   Entity values for the link type.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   protected function addLinkType(array $values = []): void {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $entity = \Drupal::entityTypeManager()
       ->getStorage('colossal_menu_link_type')
       ->create(['id' => 'test_type', 'label' => 'Test Type'] + $values);
