diff --git a/composer.json b/composer.json
index c9d5e80..19bd3c6 100644
--- a/composer.json
+++ b/composer.json
@@ -6,7 +6,7 @@
     "homepage": "https://www.drupal.org/project/purge_everything_queuer",
     "require": {
         "php": ">=7.2",
-        "drupal/core": "^8.8.6 || ^9",
-        "drupal/purge": "^3.0.0"
+        "drupal/purge": "^3.0.0",
+        "drupal/core": "^9.3 || ^10"
     }
 }
diff --git a/purge_everything_queuer.info.yml b/purge_everything_queuer.info.yml
index c5b49ba..8192330 100644
--- a/purge_everything_queuer.info.yml
+++ b/purge_everything_queuer.info.yml
@@ -1,4 +1,4 @@
-core_version_requirement: '^8.8.6 || ^9.0.0'
+core_version_requirement: ^9.3 || ^10
 name: 'Purge Everything Queuer'
 type: module
 description: 'Provides a queuer and a service to queue everything invalidation.'
diff --git a/purge_everything_queuer.module b/purge_everything_queuer.module
index 23d2c22..8f4cae1 100644
--- a/purge_everything_queuer.module
+++ b/purge_everything_queuer.module
@@ -14,7 +14,7 @@ function purge_everything_queuer_help($route_name, RouteMatchInterface $route_ma
   switch ($route_name) {
     // Main module help for the purge_everything_queuer module.
     case 'help.page.purge_everything_queuer':
-      $output = '<pre>' . file_get_contents(drupal_get_path('module', 'purge_everything_queuer') . '/README.md') . '</pre>';
+      $output = '<pre>' . file_get_contents(\Drupal::service('extension.list.module')->getPath('purge_everything_queuer') . '/README.md') . '</pre>';
       return $output;
 
     default:
diff --git a/src/QueueEverything.php b/src/QueueEverything.php
index 7516123..285500b 100644
--- a/src/QueueEverything.php
+++ b/src/QueueEverything.php
@@ -16,32 +16,32 @@ class QueueEverything {
   /**
    * The 'purge.invalidation.factory' service.
    *
-   * @var \Drupal\purge\Plugin\Purge\Invalidation\InvalidationsServiceInterface
+   * @var InvalidationsServiceInterface
    */
   protected $purgeInvalidationFactory;
 
   /**
    * The 'purge.queue' service.
    *
-   * @var \Drupal\purge\Plugin\Purge\Queue\QueueServiceInterface
+   * @var QueueServiceInterface
    */
   protected $purgeQueue;
 
   /**
    * The 'purge.queuers' service.
    *
-   * @var \Drupal\purge\Plugin\Purge\Queuer\QueuersServiceInterface
+   * @var QueuersServiceInterface
    */
   protected $purgeQueuers;
 
   /**
    * Constructs a QueueEverything object.
    *
-   * @param Drupal\purge\Plugin\Purge\Invalidation\InvalidationsServiceInterface $purgeInvalidationFactory
+   * @param InvalidationsServiceInterface $purgeInvalidationFactory
    *   The 'purge.invalidation.factory' service.
-   * @param \Drupal\purge\Plugin\Purge\Queue\QueueServiceInterface $purgeQueue
+   * @param QueueServiceInterface $purgeQueue
    *   The 'purge.queue' service.
-   * @param \Drupal\purge\Plugin\Purge\Queuer\QueuersServiceInterface $purgeQueuers
+   * @param QueuersServiceInterface $purgeQueuers
    *   The 'purge.queuers' service.
    */
   public function __construct(InvalidationsServiceInterface $purgeInvalidationFactory, QueueServiceInterface $purgeQueue, QueuersServiceInterface $purgeQueuers) {
