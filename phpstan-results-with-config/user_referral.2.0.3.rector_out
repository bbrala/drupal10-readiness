modules/contrib/user_referral/modules/user_referral_domain/src/Plugin/Derivative/ReferralLinkForDomainDeriver.php
modules/contrib/user_referral/modules/user_referral_domain/src/Plugin/ExtraField/Display/ReferralLinkForDomain.php
modules/contrib/user_referral/modules/user_referral_domain/user_referral_domain.module
modules/contrib/user_referral/src/Access/UserReferralAccess.php
modules/contrib/user_referral/src/Controller/UserReferralController.php
modules/contrib/user_referral/src/Element/ReferralLink.php
modules/contrib/user_referral/src/Element/Referrer.php
modules/contrib/user_referral/src/Entity/UserReferralType.php
modules/contrib/user_referral/src/Event/UserReferralCookieEvent.php
modules/contrib/user_referral/src/Event/UserReferralReferralEntryEvent.php
modules/contrib/user_referral/src/Form/ReferrelLinkAliasDeleteForm.php
modules/contrib/user_referral/src/Form/SettingsForm.php
modules/contrib/user_referral/src/Form/UserReferralTypeDeleteConfirm.php
modules/contrib/user_referral/src/Plugin/Derivative/ReferralLinkDeriver.php
modules/contrib/user_referral/src/Plugin/EntityReferenceSelection/ReferrerSelection.php
modules/contrib/user_referral/src/Plugin/ExtraField/Display/ReferralLink.php
modules/contrib/user_referral/src/Plugin/ExtraField/Display/Referrer.php
modules/contrib/user_referral/src/Plugin/Field/FieldType/ReferralID.php
modules/contrib/user_referral/src/Plugin/Field/FieldWidget/ReferralIDTextfieldWidget.php
modules/contrib/user_referral/src/Plugin/Validation/Constraint/SpaceNotAllowedConstraint.php
modules/contrib/user_referral/src/Plugin/Validation/Constraint/SpaceNotAllowedValidator.php
modules/contrib/user_referral/src/Plugin/Validation/Constraint/UniqueReferralIDConstraint.php
modules/contrib/user_referral/src/Plugin/Validation/Constraint/UniqueReferralIDValueValidator.php
modules/contrib/user_referral/src/Plugin/views/field/UserReferralType.php
modules/contrib/user_referral/src/ReferralRedirectResponse.php
modules/contrib/user_referral/src/Tests/Functional/UserReferralBasicTest.php
modules/contrib/user_referral/src/Tests/Functional/UserReferralUserRegisterTest.php
modules/contrib/user_referral/src/UserReferral.php
modules/contrib/user_referral/src/UserReferralPermissions.php
modules/contrib/user_referral/src/UserReferralTypeAccessControlHandler.php
modules/contrib/user_referral/src/UserReferralTypeForm.php
modules/contrib/user_referral/src/UserReferralTypeInterface.php
modules/contrib/user_referral/src/UserReferralTypeListBuilder.php
modules/contrib/user_referral/tests/src/Traits/ReferralIdFieldTrait.php
modules/contrib/user_referral/tests/src/Traits/UserReferralTypeTestTrait.php
modules/contrib/user_referral/tests/src/Traits/UserRegistrationTrait.php
modules/contrib/user_referral/user_referral.install
modules/contrib/user_referral/user_referral.module
modules/contrib/user_referral/user_referral.rules.inc
modules/contrib/user_referral/user_referral.tokens.inc
modules/contrib/user_referral/user_referral.variable.inc
modules/contrib/user_referral/user_referral.views.inc

15 files with changes
=====================

1) modules/contrib/user_referral/user_referral.tokens.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\user_referral\UserReferralTypeInterface;
 /**
  * @file
  * Builds placeholder replacement tokens for user referral related data.
@@ @@
   $replacements = [];

   if ($type == 'user_referral_type' && !empty($data['user_referral_type'])) {
-    /** @var \Drupal\user_referral\UserReferralTypeInterface; $user_referral_type */
+    /** @var UserReferralTypeInterface ; $user_referral_type */
     $user_referral_type = $data['user_referral_type'];

     foreach ($tokens as $name => $original) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/user_referral/tests/src/Traits/UserReferralTypeTestTrait.php:19

    ---------- begin diff ----------
@@ @@
    *   An array of settings to change from the defaults.
    *   Example: 'type' => 'foo'.
    *
-   * @return \Drupal\user_referral\Entity\UserReferralType
+   * @return UserReferralType
    *   Created user referral type.
    */
   protected function createUserReferralType(array $values = []) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/user_referral/src/UserReferralTypeForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The Plugin Block Manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;

@@ @@
   /**
    * Constructs the NodeTypeForm object.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager, BlockManagerInterface $block_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/user_referral/src/UserReferralPermissions.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Returns a list of permissions for a given user referral type.
    *
-   * @param \Drupal\user_referral\Entity\UserReferralType $type
+   * @param UserReferralType $type
    *   The user referral type.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/user_referral/src/Tests/Functional/UserReferralUserRegisterTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/user_referral/src/Tests/Functional/UserReferralBasicTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/user_referral/src/Plugin/Validation/Constraint/UniqueReferralIDValueValidator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_referral\Plugin\Validation\Constraint;

+use Drupal\Core\Entity\EntityInterface;
 use Symfony\Component\Validator\Constraint;
 use Symfony\Component\Validator\ConstraintValidator;

@@ @@
       return;
     }
     $field_name = $items->getFieldDefinition()->getName();
-    /** @var \Drupal\Core\Entity\EntityInterface $entity */
+    /** @var EntityInterface $entity */
     $entity = $items->getEntity();
     $entity_type_id = $entity->getEntityTypeId();
     $id_key = $entity->getEntityType()->getKey('id');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/user_referral/src/Plugin/Field/FieldWidget/ReferralIDTextfieldWidget.php:149

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function validateFormElement(array &$element, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/user_referral/src/Form/UserReferralTypeDeleteConfirm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The Plugin Block Manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;

@@ @@
   /**
    * Constructs the NodeTypeForm object.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager, BlockManagerInterface $block_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/user_referral/src/Event/UserReferralReferralEntryEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_referral\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 class UserReferralReferralEntryEvent extends Event {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/user_referral/src/Event/UserReferralCookieEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_referral\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 class UserReferralCookieEvent extends Event {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/user_referral/src/Entity/UserReferralType.php:304

    ---------- begin diff ----------
@@ @@
    *
    * @param string
    *  Referral ID
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *  User account
    */
   public function getReferralIDAccount($referral_id) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/user_referral/src/Element/Referrer.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_referral\Element;

+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Render\Element\FormElement;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
    *
    * @param array $element
    *   The form element whose value is being processed.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
@@ @@
    *
    * @return array
    *   The form element whose value has been processed.
-   *
    */
   public static function processReferrer(&$element, FormStateInterface $form_state, &$complete_form) {
     // The value callback has populated the #value array.
@@ @@
    *
    * @param array $form
    *  The form array
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *  The form state object
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *  The current request for the ajax
    */
   public static function refreshReferralTypeField(array &$form, FormStateInterface $form_state, Request $request) {
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');

     $form_parents = explode('/', $request->query->get('element_parents'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/user_referral/src/Controller/UserReferralController.php:24

    ---------- begin diff ----------
@@ @@
    * In order to never disclose a reset link via a referrer header this
    * controller must always return a redirect response.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    * @param int $uid
    *   User ID of the user requesting reset.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The redirect response.
    */
   public function referralLinkProcess(Request $request, $uid, $type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/user_referral/src/Access/UserReferralAccess.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_referral\Access;

+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;

@@ @@
   /**
    * Check whether the user can view referral link list.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public static function checkUserReferrralLinksListAccess(AccountInterface $user) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [ERROR] Could not process                                                      
         "modules/contrib/user_referral/src/Element/ReferralLink.php" file, due 
         to:                                                                    
         "Analyze error: "Class Drupal\core\Render\Element\RenderElement not    
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [WARNING] 2 nodes were removed                                                 

