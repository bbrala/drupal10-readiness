diff --git a/src/Access/WebformJiraAccess.php b/src/Access/WebformJiraAccess.php
index 9c89900..2b38a1c 100644
--- a/src/Access/WebformJiraAccess.php
+++ b/src/Access/WebformJiraAccess.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_jira_service_desk\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\webform\WebformInterface;
@@ -14,12 +15,12 @@ class WebformJiraAccess {
   /**
    * Check that webform Jira can be updated by a user.
    *
-   * @param \Drupal\webform\WebformInterface $webform
+   * @param WebformInterface $webform
    *   A webform.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function checkWebformJiraAccess(WebformInterface $webform, AccountInterface $account) {
diff --git a/src/Form/JiraServiceDeskConfigurationForm.php b/src/Form/JiraServiceDeskConfigurationForm.php
index e33e04a..44a096f 100644
--- a/src/Form/JiraServiceDeskConfigurationForm.php
+++ b/src/Form/JiraServiceDeskConfigurationForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\webform_jira_service_desk\Form;
 
+use Drupal\Core\Messenger\MessengerInterface;
+use Drupal\key\KeyInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -23,31 +25,31 @@ class JiraServiceDeskConfigurationForm extends ConfigFormBase {
   /**
    * The key repository.
    *
-   * @var \Drupal\key\KeyRepositoryInterface
+   * @var KeyRepositoryInterface
    */
   protected $keyRepository;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * JiraServiceConfiguration constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
-   * @param \Drupal\key\KeyRepositoryInterface $key_repository
-   * @param \Drupal\Core\Messenger\Messenger $messenger
-   * @param \GuzzleHttp\Client $http_client
+   * @param ConfigFactoryInterface $config_factory
+   * @param KeyRepositoryInterface $key_repository
+   * @param Messenger $messenger
+   * @param Client $http_client
    */
   public function __construct(ConfigFactoryInterface $config_factory, KeyRepositoryInterface $key_repository, Messenger $messenger, Client $http_client) {
     $this->keyRepository = $key_repository;
@@ -120,7 +122,7 @@ class JiraServiceDeskConfigurationForm extends ConfigFormBase {
   public function validateForm(array &$form, FormStateInterface $form_state) {
 
     $user_password_key = $form_state->getValue('user_password_key');
-    /** @var \Drupal\key\KeyInterface $key_entity */
+    /** @var KeyInterface $key_entity */
     $key_entity = $this->keyRepository->getKey($user_password_key);
     if (!$key_entity->getKeyType() instanceof UserPasswordKeyType) {
       $form_state->setErrorByName('user_password_key', $this->t('The key should be a Username/password type.'));
diff --git a/src/Form/WebformJiraConfigurationForm.php b/src/Form/WebformJiraConfigurationForm.php
index 713053b..584a2b6 100644
--- a/src/Form/WebformJiraConfigurationForm.php
+++ b/src/Form/WebformJiraConfigurationForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_jira_service_desk\Form;
 
+use Drupal\webform\WebformInterface;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Entity\BundleEntityFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -25,7 +26,7 @@ class WebformJiraConfigurationForm extends BundleEntityFormBase {
     $options_service_desk = $this->getServiceDeskOptions();
     if ($options_service_desk) {
 
-      /** @var \Drupal\webform\WebformInterface $webform */
+      /** @var WebformInterface $webform */
       $webform = $this->getEntity();
 
       $form['jira_configuration'] = [
@@ -155,7 +156,7 @@ class WebformJiraConfigurationForm extends BundleEntityFormBase {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\webform\WebformInterface $webform */
+    /** @var WebformInterface $webform */
     $webform = $this->getEntity();
 
     $webform->setThirdPartySetting(
@@ -226,7 +227,7 @@ class WebformJiraConfigurationForm extends BundleEntityFormBase {
    *   The header elements.
    */
   protected function getTableRows() {
-    /** @var \Drupal\webform\WebformInterface $webform */
+    /** @var WebformInterface $webform */
     $webform = $this->getEntity();
     $fields = (array) WebformYaml::decode($webform->getThirdPartySetting(
       'webform_jira_service_desk',
@@ -267,7 +268,7 @@ class WebformJiraConfigurationForm extends BundleEntityFormBase {
    */
   protected function getWebformElementOptions() {
     $element_options = [];
-    /** @var \Drupal\webform\WebformInterface $webform */
+    /** @var WebformInterface $webform */
     $webform = $this->getEntity();
     $decoded_elements = $webform->getElementsDecodedAndFlattened();
     if ($decoded_elements) {
diff --git a/src/Form/WebformJiraFieldDeleteForm.php b/src/Form/WebformJiraFieldDeleteForm.php
index 4faadbf..2fbebc5 100644
--- a/src/Form/WebformJiraFieldDeleteForm.php
+++ b/src/Form/WebformJiraFieldDeleteForm.php
@@ -17,7 +17,7 @@ use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 class WebformJiraFieldDeleteForm extends WebformDeleteFormBase {
 
   /**
-   * @var \Drupal\webform\WebformInterface
+   * @var WebformInterface
    */
   protected $webform;
 
@@ -125,7 +125,7 @@ class WebformJiraFieldDeleteForm extends WebformDeleteFormBase {
    * @return array
    */
   protected function getFields() {
-    /** @var \Drupal\webform\WebformInterface $webform */
+    /** @var WebformInterface $webform */
     $webform = $this->webform;
     return (array) WebformYaml::decode($webform->getThirdPartySetting(
       'webform_jira_service_desk',
diff --git a/src/Form/WebformJiraFieldForm.php b/src/Form/WebformJiraFieldForm.php
index a47b745..5e94fd1 100644
--- a/src/Form/WebformJiraFieldForm.php
+++ b/src/Form/WebformJiraFieldForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_jira_service_desk\Form;
 
+use Drupal\webform\WebformInterface;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Entity\BundleEntityFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -22,12 +23,12 @@ class WebformJiraFieldForm extends BundleEntityFormBase {
   use WebformDialogFormTrait;
 
   /**
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
-   * @var \Drupal\webform\WebformTokenManagerInterface
+   * @var WebformTokenManagerInterface
    */
   protected $webformTokenManager;
 
@@ -39,8 +40,8 @@ class WebformJiraFieldForm extends BundleEntityFormBase {
   /**
    * WebformJiraFieldForm constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
-   * @param \Drupal\webform\WebformTokenManagerInterface $webform_token_manager
+   * @param MessengerInterface $messenger
+   * @param WebformTokenManagerInterface $webform_token_manager
    */
   public function __construct(MessengerInterface $messenger, WebformTokenManagerInterface $webform_token_manager) {
     $this->messenger = $messenger;
@@ -61,7 +62,7 @@ class WebformJiraFieldForm extends BundleEntityFormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\webform\WebformInterface $webform */
+    /** @var WebformInterface $webform */
     $webform = $this->getEntity();
     $serviceDeskId = $webform->getThirdPartySetting('webform_jira_service_desk', 'servicedesk_id');
     $requestTypeId = $webform->getThirdPartySetting('webform_jira_service_desk', 'request_type_id');
@@ -200,7 +201,7 @@ class WebformJiraFieldForm extends BundleEntityFormBase {
    */
   public function save(array $form, FormStateInterface $form_state) {
 
-    /** @var \Drupal\webform\WebformInterface $webform */
+    /** @var WebformInterface $webform */
     $webform = $this->getEntity();
 
     $fields = $this->processField($form_state) + $this->getFields();
@@ -245,7 +246,7 @@ class WebformJiraFieldForm extends BundleEntityFormBase {
    */
   protected function getWebformElementOptions() {
     $element_options = [];
-    /** @var \Drupal\webform\WebformInterface $webform */
+    /** @var WebformInterface $webform */
     $webform = $this->getEntity();
     $decoded_elements = $webform->getElementsDecodedAndFlattened();
     if ($decoded_elements) {
@@ -262,7 +263,7 @@ class WebformJiraFieldForm extends BundleEntityFormBase {
    * @return array
    */
   protected function getFields() {
-    /** @var \Drupal\webform\WebformInterface $webform */
+    /** @var WebformInterface $webform */
     $webform = $this->getEntity();
     return (array) WebformYaml::decode($webform->getThirdPartySetting(
       'webform_jira_service_desk',
@@ -289,7 +290,7 @@ class WebformJiraFieldForm extends BundleEntityFormBase {
   /**
    * Convert form state to storage format
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *
    * @return array
    */
diff --git a/src/JiraServiceDeskService.php b/src/JiraServiceDeskService.php
index b3c311e..c6847a3 100644
--- a/src/JiraServiceDeskService.php
+++ b/src/JiraServiceDeskService.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\webform_jira_service_desk;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use GuzzleHttp\Client;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -27,37 +29,37 @@ class JiraServiceDeskService {
   use StringTranslationTrait;
 
   /**
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
-   * @var \Drupal\webform\WebformTokenManagerInterface
+   * @var WebformTokenManagerInterface
    */
   protected $webformTokenManager;
 
   /**
-   * @var \Drupal\webform\Plugin\WebformElementManagerInterface
+   * @var WebformElementManagerInterface
    */
   protected $webformElementManager;
 
   /**
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * JiraServiceDeskService constructor.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
-   * @param \Drupal\webform\WebformTokenManagerInterface $webform_token_manager
+   * @param LoggerChannelFactoryInterface $logger_factory
+   * @param WebformTokenManagerInterface $webform_token_manager
    * @param \Drupa\webform\WebformElementManagerInterface $webform_element_manager
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    */
   public function __construct(
     LoggerChannelFactoryInterface $logger_factory,
@@ -164,7 +166,7 @@ class JiraServiceDeskService {
   /**
    * Formats and submits the webform submission to JIRA Service Desk
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *
    * @return \JiraRestApi\Issue\Issue|null
    */
@@ -216,7 +218,7 @@ class JiraServiceDeskService {
   /**
    * Maps Submission data to the format and names that JIRA is expecting
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $submission
+   * @param WebformSubmissionInterface $submission
    * @param array $fields
    *
    * @return array
@@ -235,7 +237,7 @@ class JiraServiceDeskService {
    * Converts an individual field to the correct data type and field name for JIRA
    *
    * @param $field
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *
    * @return array|null|string
    * @throws \Exception
@@ -294,7 +296,7 @@ class JiraServiceDeskService {
    * Will process tokens as required.
    *
    * @param $field
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *
    * @return array|null|string
    */
diff --git a/webform_jira_service_desk.module b/webform_jira_service_desk.module
index ef2a1d3..076749f 100644
--- a/webform_jira_service_desk.module
+++ b/webform_jira_service_desk.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\webform\WebformInterface;
+use Drupal\webform_jira_service_desk\JiraServiceDeskService;
 use Drupal\webform\WebformSubmissionInterface;
 use Drupal\webform_jira_service_desk\Form\WebformJiraConfigurationForm;
 use Drupal\webform_jira_service_desk\Form\WebformJiraFieldEditForm;
@@ -22,13 +24,13 @@ function webform_jira_service_desk_entity_type_alter(array &$entity_types) {
 /**
  * Implements hook_ENTITY_TYPE_presave().
  *
- * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+ * @param WebformSubmissionInterface $webform_submission
  */
 function webform_jira_service_desk_webform_submission_presave(WebformSubmissionInterface $webform_submission) {
-  /** @var \Drupal\webform\WebformInterface $webform */
+  /** @var WebformInterface $webform */
   $webform = $webform_submission->getWebform();
   if ($webform->getThirdPartySetting('webform_jira_service_desk', 'status')) {
-    /** @var \Drupal\webform_jira_service_desk\JiraServiceDeskService $jira_service_desk_service */
+    /** @var JiraServiceDeskService $jira_service_desk_service */
     $jira_service_desk_service = Drupal::service('webform_jira_service_desk.jira_service');
 
     $issue = $jira_service_desk_service->createRequestFromSubmission($webform_submission);
