diff --git a/src/Plugin/views/style/Table.php b/src/Plugin/views/style/Table.php
index 2050aa2..c152ba5 100644
--- a/src/Plugin/views/style/Table.php
+++ b/src/Plugin/views/style/Table.php
@@ -1380,9 +1380,9 @@ class Table extends ViewsTable {
   /**
    * Compare function for aggregated groups, for use in sorting functions.
    *
-   * @param \Drupal\views\ResultRow $row1
+   * @param ResultRow $row1
    *   The first aggregated group of result rows.
-   * @param \Drupal\views\ResultRow $row2
+   * @param ResultRow $row2
    *   The second aggregated group of result rows.
    *
    * @return int
diff --git a/tests/src/Functional/Plugin/ViewsAggregatorStyleTableTest.php b/tests/src/Functional/Plugin/ViewsAggregatorStyleTableTest.php
index b630b70..6d3d1dc 100644
--- a/tests/src/Functional/Plugin/ViewsAggregatorStyleTableTest.php
+++ b/tests/src/Functional/Plugin/ViewsAggregatorStyleTableTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\views_aggregator\Functional\Plugin;
 
+use Drupal\views\ViewEntityInterface;
 use Drupal\dynamic_page_cache\EventSubscriber\DynamicPageCacheSubscriber;
 use Drupal\Tests\views\Functional\ViewTestBase;
 use Drupal\views\Tests\ViewTestData;
@@ -173,7 +174,7 @@ class ViewsAggregatorStyleTableTest extends ViewTestBase {
    * Tests grouping by a field.
    */
   public function testGrouping() {
-    /** @var \Drupal\views\ViewEntityInterface $view */
+    /** @var ViewEntityInterface $view */
     $view = \Drupal::entityTypeManager()->getStorage('view')->load('va_test_style_table');
     // Get a reference to the display configuration so we can alter some
     // specific style options.
diff --git a/tests/src/Kernel/Plugin/ViewsAggregatorStyleTableUnitTest.php b/tests/src/Kernel/Plugin/ViewsAggregatorStyleTableUnitTest.php
index 1fcf9ec..ad1b202 100644
--- a/tests/src/Kernel/Plugin/ViewsAggregatorStyleTableUnitTest.php
+++ b/tests/src/Kernel/Plugin/ViewsAggregatorStyleTableUnitTest.php
@@ -169,7 +169,7 @@ class ViewsAggregatorStyleTableUnitTest extends PluginKernelTestBase {
   /**
    * Prepares a view executable by initializing everything which is needed.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The executable to prepare.
    */
   protected function prepareView(ViewExecutable $view) {
