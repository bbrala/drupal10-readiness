diff --git a/mailgroup.module b/mailgroup.module
index b9b7e4c..3c70e89 100644
--- a/mailgroup.module
+++ b/mailgroup.module
@@ -1,5 +1,10 @@
 <?php
 
+use Drupal\mailgroup\Entity\MailGroupInterface;
+use Drupal\mailgroup\Entity\MailGroupMembershipInterface;
+use Drupal\mailgroup\Entity\MailGroupMessageInterface;
+use Drupal\mailgroup\Entity\Storage\MailGroupMembershipStorageInterface;
+use Drupal\mailgroup\Entity\Storage\MailGroupStorageInterface;
 /**
  * @file
  * Contains mailgroup.module.
@@ -23,14 +28,13 @@ function mailgroup_preprocess_menu__toolbar(&$variables) {
  * Implements hook_entity_delete().
  */
 function mailgroup_entity_delete(EntityInterface $entity) {
-  /** @var \Drupal\mailgroup\Entity\MailGroupInterface $entity */
-
+  /** @var MailGroupInterface $entity */
   if ($entity->getEntityTypeId() == 'mailgroup') {
     $logger = \Drupal::logger('mailgroup');
     $members = $entity->getMembers();
     $messages = $entity->getMessages();
 
-    /** @var \Drupal\mailgroup\Entity\MailGroupMembershipInterface $membership */
+    /** @var MailGroupMembershipInterface $membership */
     foreach ($members as $membership) {
       try {
         $membership->delete();
@@ -42,7 +46,7 @@ function mailgroup_entity_delete(EntityInterface $entity) {
       }
     }
 
-    /** @var \Drupal\mailgroup\Entity\MailGroupMessageInterface $message */
+    /** @var MailGroupMessageInterface $message */
     foreach ($messages as $message) {
       try {
         $message->delete();
@@ -166,7 +170,7 @@ function mailgroup_user_view(array &$build, EntityInterface $entity, EntityViewD
 
     if ($is_manager || $is_owner_allowed || $is_view_allowed) {
 
-      /** @var \Drupal\mailgroup\Entity\Storage\MailGroupMembershipStorageInterface $storage */
+      /** @var MailGroupMembershipStorageInterface $storage */
       $storage = \Drupal::entityTypeManager()->getStorage('mailgroup_membership');
       $memberships = $storage->loadByUid($entity->id(), NULL, FALSE);
 
@@ -229,7 +233,7 @@ function template_preprocess_mailgroup_message(array &$variables) {
  *   An array of mail groups.
  */
 function mailgroup_get_groups($active = TRUE) {
-  /** @var \Drupal\mailgroup\Entity\Storage\MailGroupStorageInterface $storage */
+  /** @var MailGroupStorageInterface $storage */
   $storage = \Drupal::entityTypeManager()->getStorage('mailgroup');
   return $storage->loadMailGroups($active);
 }
diff --git a/src/Annotation/Connection.php b/src/Annotation/Connection.php
index af04ad1..dd63699 100644
--- a/src/Annotation/Connection.php
+++ b/src/Annotation/Connection.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -24,7 +25,7 @@ class Connection extends Plugin {
   /**
    * The human-readable name of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/ConnectionBase.php b/src/ConnectionBase.php
index 10bf54f..a4bae37 100644
--- a/src/ConnectionBase.php
+++ b/src/ConnectionBase.php
@@ -17,7 +17,7 @@ abstract class ConnectionBase extends PluginBase implements ConnectionInterface,
   /**
    * The mail group logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
@@ -32,7 +32,7 @@ abstract class ConnectionBase extends PluginBase implements ConnectionInterface,
   /**
    * Set the mail group logger.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   The mail group logger.
    *
    * @return $this
diff --git a/src/ConnectionManager.php b/src/ConnectionManager.php
index 23286eb..564b063 100644
--- a/src/ConnectionManager.php
+++ b/src/ConnectionManager.php
@@ -17,9 +17,9 @@ class ConnectionManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Controller/MailGroupEntityController.php b/src/Controller/MailGroupEntityController.php
index 710fea4..fc5be54 100644
--- a/src/Controller/MailGroupEntityController.php
+++ b/src/Controller/MailGroupEntityController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Controller;
 
+use Drupal\mailgroup\Entity\ListBuilder\MailGroupEntityListBuilder;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\mailgroup\Entity\MailGroupInterface;
 
@@ -14,7 +15,7 @@ class MailGroupEntityController extends ControllerBase {
    * {@inheritdoc}
    */
   public function listing($entity_type, MailGroupInterface $mailgroup) {
-    /** @var \Drupal\mailgroup\Entity\ListBuilder\MailGroupEntityListBuilder $list_builder */
+    /** @var MailGroupEntityListBuilder $list_builder */
     $list_builder = $this->entityTypeManager()->getListBuilder($entity_type);
     return $list_builder->setGroup($mailgroup)->render();
   }
diff --git a/src/Controller/MailGroupEntityFormController.php b/src/Controller/MailGroupEntityFormController.php
index ccbbccd..d575bcc 100644
--- a/src/Controller/MailGroupEntityFormController.php
+++ b/src/Controller/MailGroupEntityFormController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\mailgroup\Controller;
 
+use Drupal\Core\Entity\ContentEntityFormInterface;
+use Drupal\mailgroup\Entity\MailGroupEntityInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\HtmlEntityFormController;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ -17,7 +19,7 @@ class MailGroupEntityFormController extends HtmlEntityFormController implements
   /**
    * The group to list entities for.
    *
-   * @var \Drupal\mailgroup\Entity\MailGroupInterface
+   * @var MailGroupInterface
    */
   protected $group;
 
@@ -45,10 +47,10 @@ class MailGroupEntityFormController extends HtmlEntityFormController implements
    * {@inheritdoc}
    */
   protected function getFormObject(RouteMatchInterface $route_match, $form_arg) {
-    /** @var \Drupal\Core\Entity\ContentEntityFormInterface $form_object */
+    /** @var ContentEntityFormInterface $form_object */
     $form_object = parent::getFormObject($route_match, $form_arg);
 
-    /** @var \Drupal\mailgroup\Entity\MailGroupEntityInterface $entity */
+    /** @var MailGroupEntityInterface $entity */
     $entity = $form_object->getEntity();
     $entity->setGroup($this->group);
     $form_object->setEntity($entity);
diff --git a/src/Entity/Access/MailGroupAccessControlHandler.php b/src/Entity/Access/MailGroupAccessControlHandler.php
index 7d90166..f11ceec 100644
--- a/src/Entity/Access/MailGroupAccessControlHandler.php
+++ b/src/Entity/Access/MailGroupAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\Access;
 
+use Drupal\mailgroup\Entity\MailGroupInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
@@ -16,8 +17,7 @@ class MailGroupAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupInterface $entity */
-
+    /** @var MailGroupInterface $entity */
     if ($account->hasPermission('administer mail groups')) {
       return AccessResult::allowed();
     }
diff --git a/src/Entity/Access/MailGroupEntityAccessControlHandler.php b/src/Entity/Access/MailGroupEntityAccessControlHandler.php
index 215d88f..4ccd0b6 100644
--- a/src/Entity/Access/MailGroupEntityAccessControlHandler.php
+++ b/src/Entity/Access/MailGroupEntityAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\Access;
 
+use Drupal\mailgroup\Entity\MailGroupEntityInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
@@ -16,8 +17,7 @@ class MailGroupEntityAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupEntityInterface $entity */
-
+    /** @var MailGroupEntityInterface $entity */
     switch ($operation) {
       case 'view':
       case 'update':
diff --git a/src/Entity/Form/MailGroupForm.php b/src/Entity/Form/MailGroupForm.php
index aca9dad..d6c0354 100644
--- a/src/Entity/Form/MailGroupForm.php
+++ b/src/Entity/Form/MailGroupForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\mailgroup\Entity\Form;
 
+use Drupal\mailgroup\Entity\MailGroupInterface;
+use Drupal\mailgroup\ConnectionInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\mailgroup\ConnectionManager;
@@ -15,7 +17,7 @@ class MailGroupForm extends ContentEntityForm {
   /**
    * The mail group connection plugin manager.
    *
-   * @var \Drupal\mailgroup\ConnectionManager
+   * @var ConnectionManager
    */
   protected $connectionManager;
 
@@ -33,7 +35,7 @@ class MailGroupForm extends ContentEntityForm {
   /**
    * Set the connection plugin manager.
    *
-   * @param \Drupal\mailgroup\ConnectionManager $connection_manager
+   * @param ConnectionManager $connection_manager
    *   The connection plugin manager.
    *
    * @return $this
@@ -47,7 +49,7 @@ class MailGroupForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupInterface $group */
+    /** @var MailGroupInterface $group */
     $group = $this->getEntity();
 
     $form = parent::buildForm($form, $form_state);
@@ -111,7 +113,7 @@ class MailGroupForm extends ContentEntityForm {
       $plugin_id = $connection[0]['value'];
       $config = $group->getConnectionConfig();
 
-      /** @var \Drupal\mailgroup\ConnectionInterface $plugin */
+      /** @var ConnectionInterface $plugin */
       $plugin = $this->connectionManager->createInstance($plugin_id, $config);
     }
     else {
@@ -134,7 +136,7 @@ class MailGroupForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupInterface $group */
+    /** @var MailGroupInterface $group */
     $group = $this->getEntity();
     $group->setConnectionConfig($form_state->getValue('connection_config'));
     $status = parent::save($form, $form_state);
@@ -160,7 +162,7 @@ class MailGroupForm extends ContentEntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Entity/Form/MailGroupMembershipForm.php b/src/Entity/Form/MailGroupMembershipForm.php
index 6376c65..b681822 100644
--- a/src/Entity/Form/MailGroupMembershipForm.php
+++ b/src/Entity/Form/MailGroupMembershipForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\Form;
 
+use Drupal\mailgroup\Entity\MailGroupMembershipInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -14,7 +15,7 @@ class MailGroupMembershipForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupMembershipInterface $membership */
+    /** @var MailGroupMembershipInterface $membership */
     $membership = $this->getEntity();
     $status = parent::save($form, $form_state);
 
diff --git a/src/Entity/Form/MailGroupMessageForm.php b/src/Entity/Form/MailGroupMessageForm.php
index 5863ca7..9f82308 100644
--- a/src/Entity/Form/MailGroupMessageForm.php
+++ b/src/Entity/Form/MailGroupMessageForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\Form;
 
+use Drupal\mailgroup\Entity\MailGroupMessageInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -17,7 +18,7 @@ class MailGroupMessageForm extends ContentEntityForm {
     parent::validateForm($form, $form_state);
 
     try {
-      /** @var \Drupal\mailgroup\Entity\MailGroupMessageInterface $message */
+      /** @var MailGroupMessageInterface $message */
       $message = $this->getEntity();
       $message->getGroup()->isAllowedToSend($message->getSender());
     }
@@ -30,7 +31,7 @@ class MailGroupMessageForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupMessageInterface $message */
+    /** @var MailGroupMessageInterface $message */
     $message = $this->getEntity();
 
     $status = parent::save($form, $form_state);
diff --git a/src/Entity/Form/MailGroupTypeForm.php b/src/Entity/Form/MailGroupTypeForm.php
index ba99af4..1e4ee05 100644
--- a/src/Entity/Form/MailGroupTypeForm.php
+++ b/src/Entity/Form/MailGroupTypeForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\Form;
 
+use Drupal\mailgroup\Entity\MailGroupTypeInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -14,7 +15,7 @@ class MailGroupTypeForm extends EntityForm {
    * {@inheritdoc}
    */
   public function form(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupTypeInterface $type */
+    /** @var MailGroupTypeInterface $type */
     $type = $this->entity;
     $form = parent::form($form, $form_state);
 
@@ -50,7 +51,7 @@ class MailGroupTypeForm extends EntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupTypeInterface $type */
+    /** @var MailGroupTypeInterface $type */
     $type = $this->getEntity();
     $status = $type->save();
 
diff --git a/src/Entity/ListBuilder/MailGroupEntityListBuilder.php b/src/Entity/ListBuilder/MailGroupEntityListBuilder.php
index c3b0249..d4d5ba2 100644
--- a/src/Entity/ListBuilder/MailGroupEntityListBuilder.php
+++ b/src/Entity/ListBuilder/MailGroupEntityListBuilder.php
@@ -13,7 +13,7 @@ class MailGroupEntityListBuilder extends EntityListBuilder {
   /**
    * The group to list entities for.
    *
-   * @var \Drupal\mailgroup\Entity\MailGroupInterface
+   * @var MailGroupInterface
    */
   protected $group;
 
@@ -47,13 +47,13 @@ class MailGroupEntityListBuilder extends EntityListBuilder {
   /**
    * Set the group to list entities for.
    *
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface $mailgroup
+   * @param MailGroupInterface $mailgroup
    *   The group to list entities for.
    *
    * @return $this
    */
   public function setGroup(MailGroupInterface $mailgroup) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupInterface $mailgroup */
+    /** @var MailGroupInterface $mailgroup */
     $this->group = $mailgroup;
     return $this;
   }
diff --git a/src/Entity/ListBuilder/MailGroupListBuilder.php b/src/Entity/ListBuilder/MailGroupListBuilder.php
index de68111..af04e8d 100644
--- a/src/Entity/ListBuilder/MailGroupListBuilder.php
+++ b/src/Entity/ListBuilder/MailGroupListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\ListBuilder;
 
+use Drupal\mailgroup\Entity\MailGroupInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Link;
@@ -27,8 +28,7 @@ class MailGroupListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupInterface $entity */
-
+    /** @var MailGroupInterface $entity */
     $row['name'] = Link::createFromRoute(
       $entity->label(),
       'entity.mailgroup.canonical',
diff --git a/src/Entity/ListBuilder/MailGroupMembershipListBuilder.php b/src/Entity/ListBuilder/MailGroupMembershipListBuilder.php
index f22a4f4..1533a29 100644
--- a/src/Entity/ListBuilder/MailGroupMembershipListBuilder.php
+++ b/src/Entity/ListBuilder/MailGroupMembershipListBuilder.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\mailgroup\Entity\ListBuilder;
 
+use Drupal\mailgroup\Entity\MailGroup;
+use Drupal\mailgroup\Entity\MailGroupMembershipInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Link;
 
@@ -13,7 +15,7 @@ class MailGroupMembershipListBuilder extends MailGroupEntityListBuilder {
   /**
    * The group to list members for.
    *
-   * @var \Drupal\mailgroup\Entity\MailGroup
+   * @var MailGroup
    */
   protected $group;
 
@@ -32,8 +34,7 @@ class MailGroupMembershipListBuilder extends MailGroupEntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupMembershipInterface $entity */
-
+    /** @var MailGroupMembershipInterface $entity */
     $account = $entity->getOwner();
 
     $row['user'] = Link::createFromRoute(
diff --git a/src/Entity/ListBuilder/MailGroupMessageListBuilder.php b/src/Entity/ListBuilder/MailGroupMessageListBuilder.php
index 5f3784c..3a1edaa 100644
--- a/src/Entity/ListBuilder/MailGroupMessageListBuilder.php
+++ b/src/Entity/ListBuilder/MailGroupMessageListBuilder.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\mailgroup\Entity\ListBuilder;
 
+use Drupal\mailgroup\Entity\MailGroup;
+use Drupal\mailgroup\Entity\MailGroupMessage;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Link;
 
@@ -13,7 +15,7 @@ class MailGroupMessageListBuilder extends MailGroupEntityListBuilder {
   /**
    * The group to list messages for.
    *
-   * @var \Drupal\mailgroup\Entity\MailGroup
+   * @var MailGroup
    */
   protected $group;
 
@@ -30,7 +32,7 @@ class MailGroupMessageListBuilder extends MailGroupEntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupMessage $entity */
+    /** @var MailGroupMessage $entity */
     $row['id'] = $entity->id();
     $row['name'] = Link::createFromRoute(
       $entity->label(),
diff --git a/src/Entity/ListBuilder/MailGroupTypeListBuilder.php b/src/Entity/ListBuilder/MailGroupTypeListBuilder.php
index f9a7a02..0ac6dd0 100644
--- a/src/Entity/ListBuilder/MailGroupTypeListBuilder.php
+++ b/src/Entity/ListBuilder/MailGroupTypeListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\ListBuilder;
 
+use Drupal\mailgroup\Entity\MailGroupTypeInterface;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Url;
@@ -26,8 +27,7 @@ class MailGroupTypeListBuilder extends ConfigEntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupTypeInterface $entity */
-
+    /** @var MailGroupTypeInterface $entity */
     $row['label'] = $entity->label();
     $row['id'] = $entity->id();
     $row['description'] = $entity->getDescription();
diff --git a/src/Entity/MailGroup.php b/src/Entity/MailGroup.php
index f258b25..0b2bf8d 100644
--- a/src/Entity/MailGroup.php
+++ b/src/Entity/MailGroup.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\mailgroup\Entity;
 
+use Drupal\mailgroup\ConnectionInterface;
+use Drupal\mailgroup\Entity\Storage\MailGroupMembershipStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
@@ -210,7 +214,7 @@ class MailGroup extends ContentEntityBase implements MailGroupInterface {
    * {@inheritdoc}
    */
   public function testConnection() {
-    /** @var \Drupal\mailgroup\ConnectionInterface $plugin */
+    /** @var ConnectionInterface $plugin */
     $plugin = $this->getConnectionPlugin();
     $status = $plugin->testConnection();
 
@@ -223,7 +227,7 @@ class MailGroup extends ContentEntityBase implements MailGroupInterface {
   public function getMessages() {
     $storage = $this->entityTypeManager()->getStorage('mailgroup_message');
 
-    /** @var \Drupal\mailgroup\Entity\MailGroupMessageInterface[] $messages */
+    /** @var MailGroupMessageInterface[] $messages */
     $messages = $storage->loadByProperties([
       'gid' => $this->id(),
     ]);
@@ -296,7 +300,7 @@ class MailGroup extends ContentEntityBase implements MailGroupInterface {
    * {@inheritdoc}
    */
   public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
-    /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
+    /** @var BaseFieldDefinition[] $fields */
     $fields = parent::baseFieldDefinitions($entity_type);
     $fields += static::ownerBaseFieldDefinitions($entity_type);
 
@@ -446,15 +450,15 @@ class MailGroup extends ContentEntityBase implements MailGroupInterface {
   /**
    * Get the Mail Group Membership storage.
    *
-   * @return \Drupal\mailgroup\Entity\Storage\MailGroupMembershipStorageInterface
+   * @return MailGroupMembershipStorageInterface
    *   The Membership storage.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getMembershipStorage() {
 
-    /** @var \Drupal\mailgroup\Entity\Storage\MailGroupMembershipStorageInterface $storage */
+    /** @var MailGroupMembershipStorageInterface $storage */
     $storage = $this->entityTypeManager()->getStorage('mailgroup_membership');
     return $storage;
   }
diff --git a/src/Entity/MailGroupEntityBase.php b/src/Entity/MailGroupEntityBase.php
index b9492b6..3e83f39 100644
--- a/src/Entity/MailGroupEntityBase.php
+++ b/src/Entity/MailGroupEntityBase.php
@@ -17,7 +17,7 @@ class MailGroupEntityBase extends ContentEntityBase implements MailGroupEntityIn
    * {@inheritdoc}
    */
   public function getGroup() {
-    /** @var \Drupal\mailgroup\Entity\MailGroupInterface $group */
+    /** @var MailGroupInterface $group */
     $group = $this->get('gid')->entity;
     return $group;
   }
diff --git a/src/Entity/MailGroupEntityInterface.php b/src/Entity/MailGroupEntityInterface.php
index 36e3073..b73d8a9 100644
--- a/src/Entity/MailGroupEntityInterface.php
+++ b/src/Entity/MailGroupEntityInterface.php
@@ -13,7 +13,7 @@ interface MailGroupEntityInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Gets the group entity.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupInterface
+   * @return MailGroupInterface
    *   Group of the membership.
    */
   public function getGroup();
@@ -21,7 +21,7 @@ interface MailGroupEntityInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Sets the group entity.
    *
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface $group
+   * @param MailGroupInterface $group
    *   The group entity.
    *
    * @return $this
diff --git a/src/Entity/MailGroupInterface.php b/src/Entity/MailGroupInterface.php
index 653c5ed..2f4b5a1 100644
--- a/src/Entity/MailGroupInterface.php
+++ b/src/Entity/MailGroupInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\mailgroup\Entity;
 
+use Drupal\mailgroup\ConnectionInterface;
+use Drupal\mailgroup\Exception\MailGroupInactiveException;
+use Drupal\mailgroup\Exception\MemberNotFoundException;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\user\EntityOwnerInterface;
 
@@ -123,7 +126,7 @@ interface MailGroupInterface extends ContentEntityInterface, EntityOwnerInterfac
   /**
    * Gets the group email connection plugin.
    *
-   * @return \Drupal\mailgroup\ConnectionInterface|null
+   * @return ConnectionInterface|null
    *   The group email connection plugin, or NULL if it has not been set.
    */
   public function getConnectionPlugin();
@@ -186,7 +189,7 @@ interface MailGroupInterface extends ContentEntityInterface, EntityOwnerInterfac
   /**
    * Gets the messages belonging to a group.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMessageInterface[]
+   * @return MailGroupMessageInterface[]
    *   An array of loaded message entities.
    */
   public function getMessages();
@@ -197,7 +200,7 @@ interface MailGroupInterface extends ContentEntityInterface, EntityOwnerInterfac
    * @param string $email
    *   The email address of the user to check.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMembershipInterface|null
+   * @return MailGroupMembershipInterface|null
    *   The membership entity.
    */
   public function getMember($email);
@@ -205,7 +208,7 @@ interface MailGroupInterface extends ContentEntityInterface, EntityOwnerInterfac
   /**
    * Gets the members of the group.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMembershipInterface[]
+   * @return MailGroupMembershipInterface[]
    *   An array of loaded membership entities.
    */
   public function getMembers();
@@ -237,11 +240,11 @@ interface MailGroupInterface extends ContentEntityInterface, EntityOwnerInterfac
    * @param string $email
    *   The email address of the user to check.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMembershipInterface|null
+   * @return MailGroupMembershipInterface|null
    *   The membership entity.
    *
-   * @throws \Drupal\mailgroup\Exception\MailGroupInactiveException
-   * @throws \Drupal\mailgroup\Exception\MemberNotFoundException
+   * @throws MailGroupInactiveException
+   * @throws MemberNotFoundException
    */
   public function isAllowedToSend($email);
 
diff --git a/src/Entity/MailGroupMembership.php b/src/Entity/MailGroupMembership.php
index 808fc41..06e3777 100644
--- a/src/Entity/MailGroupMembership.php
+++ b/src/Entity/MailGroupMembership.php
@@ -81,7 +81,7 @@ class MailGroupMembership extends MailGroupEntityBase implements MailGroupMember
    * {@inheritdoc}
    */
   public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
-    /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
+    /** @var BaseFieldDefinition[] $fields */
     $fields = parent::baseFieldDefinitions($entity_type);
     $fields += static::ownerBaseFieldDefinitions($entity_type);
 
diff --git a/src/Entity/MailGroupMessage.php b/src/Entity/MailGroupMessage.php
index 0e0c9b8..9c84012 100644
--- a/src/Entity/MailGroupMessage.php
+++ b/src/Entity/MailGroupMessage.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\mailgroup\Entity;
 
+use Drupal\mailgroup\Exception\MailGroupInactiveException;
+use Drupal\mailgroup\Exception\MemberNotFoundException;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Drupal\Core\Entity\EntityChangedTrait;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -128,7 +131,7 @@ class MailGroupMessage extends MailGroupEntityBase implements MailGroupMessageIn
    * {@inheritdoc}
    */
   public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
-    /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
+    /** @var BaseFieldDefinition[] $fields */
     $fields = parent::baseFieldDefinitions($entity_type);
     $fields += static::ownerBaseFieldDefinitions($entity_type);
 
@@ -187,8 +190,8 @@ class MailGroupMessage extends MailGroupEntityBase implements MailGroupMessageIn
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\mailgroup\Exception\MailGroupInactiveException
-   * @throws \Drupal\mailgroup\Exception\MemberNotFoundException
+   * @throws MailGroupInactiveException
+   * @throws MemberNotFoundException
    */
   public function preSave(EntityStorageInterface $storage) {
 
@@ -206,7 +209,7 @@ class MailGroupMessage extends MailGroupEntityBase implements MailGroupMessageIn
 
     $event = new MailGroupMessageEvent($this);
 
-    /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher */
+    /** @var EventDispatcherInterface $event_dispatcher */
     $event_dispatcher = \Drupal::service('event_dispatcher');
     $event_dispatcher->dispatch($event, MailGroupMessageEvent::CREATE);
   }
diff --git a/src/Entity/Routing/MailGroupEntityRouteProvider.php b/src/Entity/Routing/MailGroupEntityRouteProvider.php
index dd54cf5..12bff5d 100644
--- a/src/Entity/Routing/MailGroupEntityRouteProvider.php
+++ b/src/Entity/Routing/MailGroupEntityRouteProvider.php
@@ -54,12 +54,12 @@ class MailGroupEntityRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Modify a group entity route.
    *
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   The route to modify.
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route
+   * @return Route
    *   The route being modified.
    */
   protected function modifyFormRoute(Route $route, EntityTypeInterface $entity_type) {
diff --git a/src/Entity/Storage/MailGroupMembershipStorage.php b/src/Entity/Storage/MailGroupMembershipStorage.php
index 3c81a91..2fbc9fc 100644
--- a/src/Entity/Storage/MailGroupMembershipStorage.php
+++ b/src/Entity/Storage/MailGroupMembershipStorage.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\Storage;
 
+use Drupal\mailgroup\Entity\MailGroupMembershipInterface;
 use Drupal\Core\Entity\Sql\SqlContentEntityStorage;
 use Drupal\mailgroup\Entity\MailGroupInterface;
 
@@ -53,12 +54,12 @@ class MailGroupMembershipStorage extends SqlContentEntityStorage implements Mail
    *
    * @param array $properties
    *   The custom properies to filter on.
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface|null $group
+   * @param MailGroupInterface|null $group
    *   A group to load the membership for.
    * @param bool $active
    *   Return active memberships only. Defaults to TRUE.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMembershipInterface[]
+   * @return MailGroupMembershipInterface[]
    *   An array of memberships indexed by their ids.
    */
   protected function loadByCustomProperties(array $properties = [], MailGroupInterface $group = NULL, bool $active = TRUE) {
@@ -71,7 +72,7 @@ class MailGroupMembershipStorage extends SqlContentEntityStorage implements Mail
       $properties['status'] = TRUE;
     }
 
-    /** @var \Drupal\mailgroup\Entity\MailGroupMembershipInterface[] $memberships */
+    /** @var MailGroupMembershipInterface[] $memberships */
     $memberships = $this->loadByProperties($properties);
     return $memberships;
   }
diff --git a/src/Entity/Storage/MailGroupMembershipStorageInterface.php b/src/Entity/Storage/MailGroupMembershipStorageInterface.php
index 635d75a..b995e34 100644
--- a/src/Entity/Storage/MailGroupMembershipStorageInterface.php
+++ b/src/Entity/Storage/MailGroupMembershipStorageInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\Storage;
 
+use Drupal\mailgroup\Entity\MailGroupMembershipInterface;
 use Drupal\Core\Entity\ContentEntityStorageInterface;
 use Drupal\mailgroup\Entity\MailGroupInterface;
 
@@ -15,12 +16,12 @@ interface MailGroupMembershipStorageInterface extends ContentEntityStorageInterf
    *
    * @param string $email
    *   The membership email address.
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface|null $group
+   * @param MailGroupInterface|null $group
    *   A group to load the membership for.
    * @param bool $active
    *   Return active memberships only. Defaults to TRUE.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMembershipInterface[]
+   * @return MailGroupMembershipInterface[]
    *   An array of memberships indexed by their ids.
    */
   public function loadByEmail(string $email, MailGroupInterface $group = NULL, bool $active = TRUE);
@@ -28,12 +29,12 @@ interface MailGroupMembershipStorageInterface extends ContentEntityStorageInterf
   /**
    * Load Memberships by Mail Group.
    *
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface $group
+   * @param MailGroupInterface $group
    *   The Mail Group to load the membership for.
    * @param bool $active
    *   Return active memberships only. Defaults to TRUE.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMembershipInterface[]
+   * @return MailGroupMembershipInterface[]
    *   An array of memberships indexed by their ids.
    */
   public function loadByGroup(MailGroupInterface $group, bool $active = TRUE);
@@ -43,12 +44,12 @@ interface MailGroupMembershipStorageInterface extends ContentEntityStorageInterf
    *
    * @param int $uid
    *   The User ID.
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface|null $group
+   * @param MailGroupInterface|null $group
    *   A group to load the membership for.
    * @param bool $active
    *   Return active memberships only. Defaults to TRUE.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMembershipInterface[]
+   * @return MailGroupMembershipInterface[]
    *   An array of memberships indexed by their ids.
    */
   public function loadByUid(int $uid, MailGroupInterface $group = NULL, bool $active = TRUE);
@@ -58,12 +59,12 @@ interface MailGroupMembershipStorageInterface extends ContentEntityStorageInterf
    *
    * @param array $uids
    *   The User IDs.
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface|null $group
+   * @param MailGroupInterface|null $group
    *   A group to load the membership for.
    * @param bool $active
    *   Return active memberships only. Defaults to TRUE.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMembershipInterface[]
+   * @return MailGroupMembershipInterface[]
    *   An array of memberships indexed by their ids.
    */
   public function loadByUids(array $uids, MailGroupInterface $group = NULL, bool $active = TRUE);
diff --git a/src/Entity/Storage/MailGroupStorageInterface.php b/src/Entity/Storage/MailGroupStorageInterface.php
index 4701f25..8eb8a54 100644
--- a/src/Entity/Storage/MailGroupStorageInterface.php
+++ b/src/Entity/Storage/MailGroupStorageInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\Entity\Storage;
 
+use Drupal\mailgroup\Entity\MailGroupInterface;
 use Drupal\Core\Entity\ContentEntityStorageInterface;
 
 /**
@@ -15,7 +16,7 @@ interface MailGroupStorageInterface extends ContentEntityStorageInterface {
    * @param bool $active
    *   Return active Mail Groups only. Defaults to TRUE.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupInterface[]
+   * @return MailGroupInterface[]
    *   An array of Mail Groups entities indexed by their IDs.
    */
   public function loadMailGroups($active = TRUE);
@@ -26,7 +27,7 @@ interface MailGroupStorageInterface extends ContentEntityStorageInterface {
    * @param string $email
    *   The group email address.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupInterface|false
+   * @return MailGroupInterface|false
    *   The group object, or FALSE if no group could be found.
    */
   public function loadByEmail($email);
diff --git a/src/Event/MailGroupMessageEvent.php b/src/Event/MailGroupMessageEvent.php
index 6cd71f0..92b188b 100644
--- a/src/Event/MailGroupMessageEvent.php
+++ b/src/Event/MailGroupMessageEvent.php
@@ -15,14 +15,14 @@ class MailGroupMessageEvent extends Event {
   /**
    * The message.
    *
-   * @var \Drupal\mailgroup\Entity\MailGroupMessage
+   * @var MailGroupMessage
    */
   protected $message;
 
   /**
    * Constructs the object.
    *
-   * @param \Drupal\mailgroup\Entity\MailGroupMessage $message
+   * @param MailGroupMessage $message
    *   The account of the user logged in.
    */
   public function __construct(MailGroupMessage $message) {
@@ -32,7 +32,7 @@ class MailGroupMessageEvent extends Event {
   /**
    * Gets the message that triggered the event.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMessage
+   * @return MailGroupMessage
    *   The message that triggered the event.
    */
   public function getMessage() {
diff --git a/src/EventSubscriber/MailGroupMessageEventSubscriber.php b/src/EventSubscriber/MailGroupMessageEventSubscriber.php
index 7ab8abb..b82e949 100644
--- a/src/EventSubscriber/MailGroupMessageEventSubscriber.php
+++ b/src/EventSubscriber/MailGroupMessageEventSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup\EventSubscriber;
 
+use Drupal\mailgroup\Entity\MailGroupMessage;
 use Drupal\mailgroup\Event\MailGroupMessageEvent;
 use Drupal\mailgroup\MailHandlerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
@@ -14,14 +15,14 @@ class MailGroupMessageEventSubscriber implements EventSubscriberInterface {
   /**
    * The mail handler service.
    *
-   * @var \Drupal\mailgroup\MailHandlerInterface
+   * @var MailHandlerInterface
    */
   protected $handler;
 
   /**
    * Sets the mail handler service.
    *
-   * @param \Drupal\mailgroup\MailHandlerInterface $mail_handler
+   * @param MailHandlerInterface $mail_handler
    *   The mail handler service.
    */
   public function setHandler(MailHandlerInterface $mail_handler) {
@@ -40,11 +41,11 @@ class MailGroupMessageEventSubscriber implements EventSubscriberInterface {
   /**
    * Send a message to group members.
    *
-   * @param \Drupal\mailgroup\Event\MailGroupMessageEvent $event
+   * @param MailGroupMessageEvent $event
    *   The message event.
    */
   public function sendMessage(MailGroupMessageEvent $event) {
-    /** @var \Drupal\mailgroup\Entity\MailGroupMessage $message */
+    /** @var MailGroupMessage $message */
     $message = $event->getMessage();
 
     $this->handler->sendMessage($message);
diff --git a/src/MailHandler.php b/src/MailHandler.php
index bbe3720..076fcdd 100644
--- a/src/MailHandler.php
+++ b/src/MailHandler.php
@@ -18,28 +18,28 @@ class MailHandler implements MailHandlerInterface {
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The mail group logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * Sets the mail manager.
    *
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager.
    */
   public function setMailManager(MailManagerInterface $mail_manager) {
@@ -49,7 +49,7 @@ class MailHandler implements MailHandlerInterface {
   /**
    * Sets the language manager.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function setLanguageManager(LanguageManagerInterface $language_manager) {
@@ -59,7 +59,7 @@ class MailHandler implements MailHandlerInterface {
   /**
    * Sets the mail group logger.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   The mail group logger.
    */
   public function setLogger(LoggerChannelInterface $logger) {
@@ -69,7 +69,7 @@ class MailHandler implements MailHandlerInterface {
   /**
    * Send a message to members of the group.
    *
-   * @param \Drupal\mailgroup\Entity\MailGroupMessageInterface $message
+   * @param MailGroupMessageInterface $message
    *   The message to send.
    */
   public function sendMessage(MailGroupMessageInterface $message) {
diff --git a/src/MailHandlerInterface.php b/src/MailHandlerInterface.php
index 06acfc9..f04aabd 100644
--- a/src/MailHandlerInterface.php
+++ b/src/MailHandlerInterface.php
@@ -12,7 +12,7 @@ interface MailHandlerInterface {
   /**
    * Send a message to members of the group.
    *
-   * @param \Drupal\mailgroup\Entity\MailGroupMessageInterface $message
+   * @param MailGroupMessageInterface $message
    *   The message to send.
    */
   public function sendMessage(MailGroupMessageInterface $message);
diff --git a/src/MessageParser.php b/src/MessageParser.php
index bbeb197..7d74782 100644
--- a/src/MessageParser.php
+++ b/src/MessageParser.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailgroup;
 
+use Drupal\mailgroup\Entity\MailGroupMessageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\mailgroup\Entity\MailGroupInterface;
@@ -15,28 +16,28 @@ class MessageParser implements MessageParserInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The group this message belongs to.
    *
-   * @var \Drupal\mailgroup\Entity\MailGroupInterface
+   * @var MailGroupInterface
    */
   protected $group;
 
   /**
    * The Message object.
    *
-   * @var \ZBateson\MailMimeParser\IMessage
+   * @var IMessage
    */
   protected $message;
 
   /**
    * Set the entity type manager.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    *
    * @return $this
@@ -49,7 +50,7 @@ class MessageParser implements MessageParserInterface {
   /**
    * Set the group entity.
    *
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface $group
+   * @param MailGroupInterface $group
    *   The group entity.
    *
    * @return $this
@@ -62,7 +63,7 @@ class MessageParser implements MessageParserInterface {
   /**
    * Set the message object.
    *
-   * @param \ZBateson\MailMimeParser\IMessage $message
+   * @param IMessage $message
    *   The message object.
    *
    * @return $this
@@ -90,7 +91,7 @@ class MessageParser implements MessageParserInterface {
       'body' => $this->message->getTextContent(),
     ];
 
-    /** @var \Drupal\mailgroup\Entity\MailGroupMessageInterface $message */
+    /** @var MailGroupMessageInterface $message */
     $message = $message_storage->create($values);
     return $message;
   }
diff --git a/src/MessageParserFactory.php b/src/MessageParserFactory.php
index 4182442..94736fa 100644
--- a/src/MessageParserFactory.php
+++ b/src/MessageParserFactory.php
@@ -19,10 +19,10 @@ class MessageParserFactory implements ContainerAwareInterface {
    *
    * @param string $string
    *   A MIME string of the raw email.
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface $group
+   * @param MailGroupInterface $group
    *   The group this message belongs to.
    *
-   * @return \Drupal\mailgroup\MessageParserInterface
+   * @return MessageParserInterface
    *   The MessageParser object.
    */
   public function createFromString($string, MailGroupInterface $group) {
diff --git a/src/MessageParserInterface.php b/src/MessageParserInterface.php
index 8e7a2f1..0fb8c9c 100644
--- a/src/MessageParserInterface.php
+++ b/src/MessageParserInterface.php
@@ -2,16 +2,19 @@
 
 namespace Drupal\mailgroup;
 
+use Drupal\mailgroup\Entity\MailGroupMessageInterface;
+use Drupal\mailgroup\Exception\MailGroupInactiveException;
+use Drupal\mailgroup\Exception\MemberNotFoundException;
 interface MessageParserInterface {
 
   /**
    * Create a Mail Group message entity.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMessageInterface
+   * @return MailGroupMessageInterface
    *   The message entity.
    *
-   * @throws \Drupal\mailgroup\Exception\MailGroupInactiveException
-   * @throws \Drupal\mailgroup\Exception\MemberNotFoundException
+   * @throws MailGroupInactiveException
+   * @throws MemberNotFoundException
    */
   public function createMessageEntity();
 
diff --git a/src/Plugin/views/field/MailGroupMemberships.php b/src/Plugin/views/field/MailGroupMemberships.php
index 870b9f4..06d95e7 100644
--- a/src/Plugin/views/field/MailGroupMemberships.php
+++ b/src/Plugin/views/field/MailGroupMemberships.php
@@ -20,21 +20,21 @@ class MailGroupMemberships extends PrerenderList {
   /**
    * The current User.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The Mail Group Membership storage.
    *
-   * @var \Drupal\mailgroup\Entity\Storage\MailGroupMembershipStorageInterface
+   * @var MailGroupMembershipStorageInterface
    */
   protected $mailGroupMembershipStorage;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -47,11 +47,11 @@ class MailGroupMemberships extends PrerenderList {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current User.
-   * @param \Drupal\mailgroup\Entity\Storage\MailGroupMembershipStorageInterface $mailgroup_membership_storage
+   * @param MailGroupMembershipStorageInterface $mailgroup_membership_storage
    *   The Mail Group Membership storage.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(
diff --git a/tests/src/Kernel/KernelTestBase.php b/tests/src/Kernel/KernelTestBase.php
index 5c743f7..a222a49 100644
--- a/tests/src/Kernel/KernelTestBase.php
+++ b/tests/src/Kernel/KernelTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\mailgroup\Kernel;
 
+use Drupal\mailgroup\Entity\MailGroupMembershipInterface;
+use Drupal\mailgroup\Entity\MailGroupMessageInterface;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 use Drupal\mailgroup\Entity\MailGroupInterface;
 use Drupal\Tests\mailgroup\Traits\MailGroupTestTrait;
@@ -41,7 +43,7 @@ abstract class KernelTestBase extends EntityKernelTestBase {
   /**
    * Create a mail group.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupInterface
+   * @return MailGroupInterface
    *   The mail group entity.
    */
   protected function createGroup() {
@@ -67,12 +69,12 @@ abstract class KernelTestBase extends EntityKernelTestBase {
   /**
    * Create a group membership.
    *
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface $group
+   * @param MailGroupInterface $group
    *   The group to add the membership to.
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user to create the membership for.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMembershipInterface
+   * @return MailGroupMembershipInterface
    *   The membership entity.
    */
   protected function createMembership(MailGroupInterface $group, UserInterface $user) {
@@ -90,12 +92,12 @@ abstract class KernelTestBase extends EntityKernelTestBase {
   /**
    * Create a group message.
    *
-   * @param \Drupal\mailgroup\Entity\MailGroupInterface $group
+   * @param MailGroupInterface $group
    *   The group to add the membership to.
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user to create the membership for.
    *
-   * @return \Drupal\mailgroup\Entity\MailGroupMessageInterface
+   * @return MailGroupMessageInterface
    *   The membership entity.
    */
   protected function createMessage(MailGroupInterface $group, UserInterface $user) {
diff --git a/tests/src/Kernel/MailGroupTest.php b/tests/src/Kernel/MailGroupTest.php
index ea8dd0f..d20117b 100644
--- a/tests/src/Kernel/MailGroupTest.php
+++ b/tests/src/Kernel/MailGroupTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\mailgroup\Kernel;
 
+use Drupal\mailgroup\Entity\MailGroupInterface;
 use Drupal\mailgroup\Entity\MailGroupMembershipInterface;
 use Drupal\mailgroup\Entity\MailGroupMessageInterface;
 use Drupal\mailgroup\Exception\MailGroupInactiveException;
@@ -17,14 +18,14 @@ class MailGroupTest extends KernelTestBase {
   /**
    * The mail group.
    *
-   * @var \Drupal\mailgroup\Entity\MailGroupInterface
+   * @var MailGroupInterface
    */
   protected $group;
 
   /**
    * The mail group membership.
    *
-   * @var \Drupal\mailgroup\Entity\MailGroupMembershipInterface
+   * @var MailGroupMembershipInterface
    */
   protected $membership;
 
diff --git a/tests/src/Traits/MailGroupTestTrait.php b/tests/src/Traits/MailGroupTestTrait.php
index 0abab56..2bba4e9 100644
--- a/tests/src/Traits/MailGroupTestTrait.php
+++ b/tests/src/Traits/MailGroupTestTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\mailgroup\Traits;
 
+use Drupal\user\UserInterface;
 /**
  * Common functionality for mail group tests.
  */
@@ -10,21 +11,21 @@ trait MailGroupTestTrait {
   /**
    * User with admin permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * User with permission to use mail groups.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $groupUser;
 
   /**
    * User with no additional permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $basicUser;
 
