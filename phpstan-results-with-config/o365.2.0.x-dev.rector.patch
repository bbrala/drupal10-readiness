diff --git a/modules/o365_onedrive/src/Controller/OneDriveListController.php b/modules/o365_onedrive/src/Controller/OneDriveListController.php
index cff5650..f302d44 100644
--- a/modules/o365_onedrive/src/Controller/OneDriveListController.php
+++ b/modules/o365_onedrive/src/Controller/OneDriveListController.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365_onedrive\Controller;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
+use Microsoft\Graph\Exception\GraphException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,14 +17,14 @@ class OneDriveListController extends ControllerBase {
   /**
    * The get files and folders service.
    *
-   * @var \Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface
+   * @var GetFilesAndFoldersServiceInterface
    */
   protected $getFilesAndFoldersService;
 
   /**
    * Constructs a new OneDriveListController object.
    *
-   * @param \Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface $getFilesAndFoldersService
+   * @param GetFilesAndFoldersServiceInterface $getFilesAndFoldersService
    *   The GetFilesAndFoldersServiceInterface definition.
    */
   public function __construct(GetFilesAndFoldersServiceInterface $getFilesAndFoldersService) {
@@ -44,9 +47,9 @@ class OneDriveListController extends ControllerBase {
    * @return mixed
    *   The list of files and folders.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   public function listFiles($folder = FALSE) {
     return $this->getFilesAndFoldersService->listFilesAndFolders($folder);
@@ -58,9 +61,9 @@ class OneDriveListController extends ControllerBase {
    * @return array|mixed
    *   The list of files and folders.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   public function listSharedFiles() {
     return $this->getFilesAndFoldersService->listSharedFilesAndFolders();
diff --git a/modules/o365_onedrive/src/GetFilesAndFoldersService.php b/modules/o365_onedrive/src/GetFilesAndFoldersService.php
index f4ee9bc..0817a83 100644
--- a/modules/o365_onedrive/src/GetFilesAndFoldersService.php
+++ b/modules/o365_onedrive/src/GetFilesAndFoldersService.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\o365_onedrive;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\o365\GraphService;
@@ -14,7 +16,7 @@ class GetFilesAndFoldersService implements GetFilesAndFoldersServiceInterface {
   /**
    * Drupal\o365\GraphService definition.
    *
-   * @var \Drupal\o365\GraphService
+   * @var GraphService
    */
   protected $graphService;
 
@@ -28,7 +30,7 @@ class GetFilesAndFoldersService implements GetFilesAndFoldersServiceInterface {
   /**
    * Constructs a new GetFilesAndFoldersService object.
    *
-   * @param \Drupal\o365\GraphService $o365_graph
+   * @param GraphService $o365_graph
    *   The GraphService definition.
    */
   public function __construct(GraphService $o365_graph) {
@@ -74,8 +76,8 @@ class GetFilesAndFoldersService implements GetFilesAndFoldersServiceInterface {
    * @param string $endPoint
    *   The endpoint we want the content from.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   private function getDrive($endPoint) {
     $this->drive = $this->graphService->getGraphData($endPoint);
diff --git a/modules/o365_onedrive/src/GetFilesAndFoldersServiceInterface.php b/modules/o365_onedrive/src/GetFilesAndFoldersServiceInterface.php
index e33caab..3f3da6e 100644
--- a/modules/o365_onedrive/src/GetFilesAndFoldersServiceInterface.php
+++ b/modules/o365_onedrive/src/GetFilesAndFoldersServiceInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365_onedrive;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
+use Microsoft\Graph\Exception\GraphException;
 /**
  * Interface GetFilesAndFoldersServiceInterface.
  */
@@ -16,9 +19,9 @@ interface GetFilesAndFoldersServiceInterface {
    * @return mixed
    *   The list of files and folders.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   public function listFilesAndFolders($folder = FALSE);
 
@@ -27,7 +30,6 @@ interface GetFilesAndFoldersServiceInterface {
    *
    * @return mixed
    */
-
   /**
    * List all the shared files and folders.
    *
@@ -37,9 +39,9 @@ interface GetFilesAndFoldersServiceInterface {
    * @return array|mixed
    *   The list of files and folders.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   public function listSharedFilesAndFolders($limit = 10);
 
@@ -52,9 +54,9 @@ interface GetFilesAndFoldersServiceInterface {
    * @return array|mixed
    *   The list of files and folders.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   public function listSpecialFilesAndFolders($type);
 
diff --git a/modules/o365_onedrive/src/Plugin/Block/PinnedFilesBlock.php b/modules/o365_onedrive/src/Plugin/Block/PinnedFilesBlock.php
index 7a605f9..99237f8 100644
--- a/modules/o365_onedrive/src/Plugin/Block/PinnedFilesBlock.php
+++ b/modules/o365_onedrive/src/Plugin/Block/PinnedFilesBlock.php
@@ -20,7 +20,7 @@ class PinnedFilesBlock extends BlockBase implements ContainerFactoryPluginInterf
   /**
    * Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface definition.
    *
-   * @var \Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface
+   * @var GetFilesAndFoldersServiceInterface
    */
   protected $o365OnedriveGetFiles;
 
@@ -33,7 +33,7 @@ class PinnedFilesBlock extends BlockBase implements ContainerFactoryPluginInterf
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface $o365_onedrive_get_files
+   * @param GetFilesAndFoldersServiceInterface $o365_onedrive_get_files
    *   The GetFilesAndFoldersServiceInterface definition.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GetFilesAndFoldersServiceInterface $o365_onedrive_get_files) {
diff --git a/modules/o365_onedrive/src/Plugin/Block/RecentFilesBlock.php b/modules/o365_onedrive/src/Plugin/Block/RecentFilesBlock.php
index 270a93f..49fbace 100644
--- a/modules/o365_onedrive/src/Plugin/Block/RecentFilesBlock.php
+++ b/modules/o365_onedrive/src/Plugin/Block/RecentFilesBlock.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365_onedrive\Plugin\Block;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
+use Microsoft\Graph\Exception\GraphException;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -20,7 +23,7 @@ class RecentFilesBlock extends BlockBase implements ContainerFactoryPluginInterf
   /**
    * Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface definition.
    *
-   * @var \Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface
+   * @var GetFilesAndFoldersServiceInterface
    */
   protected $getFilesAndFoldersService;
 
@@ -33,7 +36,7 @@ class RecentFilesBlock extends BlockBase implements ContainerFactoryPluginInterf
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface $o365_onedrive_get_files
+   * @param GetFilesAndFoldersServiceInterface $o365_onedrive_get_files
    *   The GetFilesAndFoldersServiceInterface definition.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GetFilesAndFoldersServiceInterface $o365_onedrive_get_files) {
@@ -51,9 +54,9 @@ class RecentFilesBlock extends BlockBase implements ContainerFactoryPluginInterf
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   public function build() {
     return $this->getFilesAndFoldersService->listSpecialFilesAndFolders('recent');
diff --git a/modules/o365_onedrive/src/Plugin/Block/SharedFilesBlock.php b/modules/o365_onedrive/src/Plugin/Block/SharedFilesBlock.php
index 2838af3..95abde9 100644
--- a/modules/o365_onedrive/src/Plugin/Block/SharedFilesBlock.php
+++ b/modules/o365_onedrive/src/Plugin/Block/SharedFilesBlock.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365_onedrive\Plugin\Block;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
+use Microsoft\Graph\Exception\GraphException;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -20,7 +23,7 @@ class SharedFilesBlock extends BlockBase implements ContainerFactoryPluginInterf
   /**
    * Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface definition.
    *
-   * @var \Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface
+   * @var GetFilesAndFoldersServiceInterface
    */
   protected $getFilesAndFoldersService;
 
@@ -33,7 +36,7 @@ class SharedFilesBlock extends BlockBase implements ContainerFactoryPluginInterf
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\o365_onedrive\GetFilesAndFoldersServiceInterface $o365_onedrive_get_files
+   * @param GetFilesAndFoldersServiceInterface $o365_onedrive_get_files
    *   The GetFilesAndFoldersServiceInterface definition.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GetFilesAndFoldersServiceInterface $o365_onedrive_get_files) {
@@ -51,9 +54,9 @@ class SharedFilesBlock extends BlockBase implements ContainerFactoryPluginInterf
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   public function build() {
     return $this->getFilesAndFoldersService->listSharedFilesAndFolders();
diff --git a/modules/o365_outlook_calendar/src/Plugin/Block/CalendarBlock.php b/modules/o365_outlook_calendar/src/Plugin/Block/CalendarBlock.php
index 0d03863..c511bee 100644
--- a/modules/o365_outlook_calendar/src/Plugin/Block/CalendarBlock.php
+++ b/modules/o365_outlook_calendar/src/Plugin/Block/CalendarBlock.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\o365_outlook_calendar\Plugin\Block;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Datetime\DateFormatter;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -22,21 +24,21 @@ class CalendarBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * Drupal\o365\GraphService definition.
    *
-   * @var \Drupal\o365\GraphService
+   * @var GraphService
    */
   protected $o365Graph;
 
   /**
    * Drupal\o365\HelperService definition.
    *
-   * @var \Drupal\o365\HelperService
+   * @var HelperService
    */
   protected $helperService;
 
   /**
    * Drupal\Core\Datetime\DateFormatter definition.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
@@ -49,11 +51,11 @@ class CalendarBlock extends BlockBase implements ContainerFactoryPluginInterface
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\o365\GraphService $o365_graph
+   * @param GraphService $o365_graph
    *   The GraphService definition.
-   * @param \Drupal\o365\HelperService $helperService
+   * @param HelperService $helperService
    *   The HelperService definition.
-   * @param \Drupal\Core\Datetime\DateFormatter $dateFormatter
+   * @param DateFormatter $dateFormatter
    *   The DateFormatter definition.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GraphService $o365_graph, HelperService $helperService, DateFormatter $dateFormatter) {
@@ -73,8 +75,8 @@ class CalendarBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    * @throws \Exception
    */
   public function build() {
diff --git a/modules/o365_outlook_mail/src/Controller/MyMailController.php b/modules/o365_outlook_mail/src/Controller/MyMailController.php
index b753985..18039bc 100644
--- a/modules/o365_outlook_mail/src/Controller/MyMailController.php
+++ b/modules/o365_outlook_mail/src/Controller/MyMailController.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365_outlook_mail\Controller;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
+use Microsoft\Graph\Exception\GraphException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
@@ -17,23 +20,23 @@ class MyMailController extends ControllerBase {
   /**
    * Drupal\o365_outlook_mail\GetMailServiceInterface definition.
    *
-   * @var \Drupal\o365_outlook_mail\GetMailServiceInterface
+   * @var GetMailServiceInterface
    */
   protected $getMailService;
 
   /**
    * The o365 helper service with handy methods.
    *
-   * @var \Drupal\o365\HelperService
+   * @var HelperService
    */
   protected $helperService;
 
   /**
    * Constructs a new MyMailController object.
    *
-   * @param \Drupal\o365_outlook_mail\GetMailServiceInterface $getMailService
+   * @param GetMailServiceInterface $getMailService
    *   The GetMailServiceInterface definition.
-   * @param \Drupal\o365\HelperService $helperService
+   * @param HelperService $helperService
    * The HelperService definition.
    */
   public function __construct(GetMailServiceInterface $getMailService, HelperService $helperService) {
@@ -57,9 +60,9 @@ class MyMailController extends ControllerBase {
    * @return array
    *   The render array with the list of mails.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    * @throws \Exception
    */
   public function getMail() {
diff --git a/modules/o365_outlook_mail/src/GetMailService.php b/modules/o365_outlook_mail/src/GetMailService.php
index 8ac3842..8d5ab1b 100644
--- a/modules/o365_outlook_mail/src/GetMailService.php
+++ b/modules/o365_outlook_mail/src/GetMailService.php
@@ -12,14 +12,14 @@ class GetMailService implements GetMailServiceInterface {
   /**
    * Drupal\o365\GraphService definition.
    *
-   * @var \Drupal\o365\GraphService
+   * @var GraphService
    */
   protected $o365Graph;
 
   /**
    * Constructs a new GetMailService object.
    *
-   * @param \Drupal\o365\GraphService $o365_graph
+   * @param GraphService $o365_graph
    *   The GraphService definition.
    */
   public function __construct(GraphService $o365_graph) {
diff --git a/modules/o365_outlook_mail/src/GetMailServiceInterface.php b/modules/o365_outlook_mail/src/GetMailServiceInterface.php
index c8730f0..7f19e6d 100644
--- a/modules/o365_outlook_mail/src/GetMailServiceInterface.php
+++ b/modules/o365_outlook_mail/src/GetMailServiceInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365_outlook_mail;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
+use Microsoft\Graph\Exception\GraphException;
 /**
  * Interface GetMailServiceInterface.
  */
@@ -18,9 +21,9 @@ interface GetMailServiceInterface {
    * @return array|bool
    *   The list of mails or FALSE if no mails.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   public function getMail($limit = 10, array $fields = []);
 
diff --git a/modules/o365_outlook_mail/src/Plugin/Block/LatestMailBlock.php b/modules/o365_outlook_mail/src/Plugin/Block/LatestMailBlock.php
index 7c97791..3fb90ae 100644
--- a/modules/o365_outlook_mail/src/Plugin/Block/LatestMailBlock.php
+++ b/modules/o365_outlook_mail/src/Plugin/Block/LatestMailBlock.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365_outlook_mail\Plugin\Block;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
+use Microsoft\Graph\Exception\GraphException;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\o365_outlook_mail\GetMailServiceInterface;
@@ -20,7 +23,7 @@ class LatestMailBlock extends BlockBase implements ContainerFactoryPluginInterfa
   /**
    * The mail service interface.
    *
-   * @var \Drupal\o365_outlook_mail\GetMailServiceInterface
+   * @var GetMailServiceInterface
    */
   protected $getMailService;
 
@@ -33,7 +36,7 @@ class LatestMailBlock extends BlockBase implements ContainerFactoryPluginInterfa
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\o365_outlook_mail\GetMailServiceInterface $getMailService
+   * @param GetMailServiceInterface $getMailService
    *   The get mail service definition.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GetMailServiceInterface $getMailService) {
@@ -51,9 +54,9 @@ class LatestMailBlock extends BlockBase implements ContainerFactoryPluginInterfa
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   public function build() {
     return $this->getMails();
@@ -68,9 +71,9 @@ class LatestMailBlock extends BlockBase implements ContainerFactoryPluginInterfa
    * @return mixed
    *   The item list or FALSE.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   * @throws \Microsoft\Graph\Exception\GraphException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
+   * @throws GraphException
    */
   private function getMails($count = 10) {
     $mailData = $this->getMailService->getMail($count);
diff --git a/modules/o365_profile/src/Plugin/Block/ProfileBlock.php b/modules/o365_profile/src/Plugin/Block/ProfileBlock.php
index b917031..c00608c 100644
--- a/modules/o365_profile/src/Plugin/Block/ProfileBlock.php
+++ b/modules/o365_profile/src/Plugin/Block/ProfileBlock.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\o365_profile\Plugin\Block;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -20,7 +22,7 @@ class ProfileBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * Drupal\o365\GraphService definition.
    *
-   * @var \Drupal\o365\GraphService
+   * @var GraphService
    */
   protected $o365Graph;
 
@@ -33,7 +35,7 @@ class ProfileBlock extends BlockBase implements ContainerFactoryPluginInterface
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\o365\GraphService $o365_graph
+   * @param GraphService $o365_graph
    *   The GraphService definition.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GraphService $o365_graph) {
@@ -51,8 +53,8 @@ class ProfileBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   public function build() {
     $userData = $this->o365Graph->getGraphData('/me');
diff --git a/modules/o365_rest/src/Plugin/rest/resource/GetAccessTokenResource.php b/modules/o365_rest/src/Plugin/rest/resource/GetAccessTokenResource.php
index ba84f50..a0af43d 100644
--- a/modules/o365_rest/src/Plugin/rest/resource/GetAccessTokenResource.php
+++ b/modules/o365_rest/src/Plugin/rest/resource/GetAccessTokenResource.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365_rest\Plugin\rest\resource;
 
+use Drupal\o365\AuthenticationService;
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ResourceResponse;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -22,7 +25,7 @@ class GetAccessTokenResource extends ResourceBase {
   /**
    * The authentication service, used to handle all kinds of auth stuff.
    *
-   * @var \Drupal\o365\AuthenticationService
+   * @var AuthenticationService
    */
   protected $authenticationService;
 
@@ -44,16 +47,15 @@ class GetAccessTokenResource extends ResourceBase {
      * @throws \Symfony\Component\HttpKernel\Exception\HttpException
      *   Throws exception expected.
      */
-
-  /**
-   * Return the current users access token.
-   *
-   * @return \Drupal\rest\ResourceResponse
-   *   The HTTP response object.
-   *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
-   */
+    /**
+     * Return the current users access token.
+     *
+     * @return ResourceResponse
+     *   The HTTP response object.
+     *
+     * @throws TempStoreException
+     * @throws IdentityProviderException
+     */
     public function get() {
         return new ResourceResponse($this->authenticationService->getAccessToken(), 200);
     }
diff --git a/modules/o365_sso/o365_sso.module b/modules/o365_sso/o365_sso.module
index db2610a..0abd9da 100644
--- a/modules/o365_sso/o365_sso.module
+++ b/modules/o365_sso/o365_sso.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\o365\O365ConnectorInterface;
 /**
  * @file
  * Contains o365_sso.module.
@@ -12,7 +13,7 @@ use Drupal\Core\Url;
  */
 function o365_sso_form_user_login_form_alter(array &$form): void {
   // Get all Office 365 connectors.
-  /** @var \Drupal\o365\O365ConnectorInterface[] $o365_connectors */
+  /** @var O365ConnectorInterface[] $o365_connectors */
   $o365_connectors = \Drupal::entityTypeManager()->getStorage('o365_connector')
     ->loadByProperties([
       'status' => TRUE,
diff --git a/modules/o365_sso/src/Controller/LoginCallbackController.php b/modules/o365_sso/src/Controller/LoginCallbackController.php
index 5b17481..02f149d 100644
--- a/modules/o365_sso/src/Controller/LoginCallbackController.php
+++ b/modules/o365_sso/src/Controller/LoginCallbackController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\o365_sso\Controller;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
 use Drupal\o365\AuthenticationService;
@@ -19,32 +21,32 @@ class LoginCallbackController extends ControllerBase {
   /**
    * The authentication service, used to handle all kinds of auth stuff.
    *
-   * @var \Drupal\o365\AuthenticationService
+   * @var AuthenticationService
    */
   protected $authenticationService;
 
   /**
    * The o365 GraphService.
    *
-   * @var \Drupal\o365\GraphService
+   * @var GraphService
    */
   protected $graphService;
 
   /**
    * The o365 logger service.
    *
-   * @var \Drupal\o365\O365LoggerServiceInterface
+   * @var O365LoggerServiceInterface
    */
   protected $loggerService;
 
   /**
    * Constructs a new LoginController object.
    *
-   * @param \Drupal\o365\AuthenticationService $authenticationService
+   * @param AuthenticationService $authenticationService
    *   The AuthenticationService definition.
-   * @param \Drupal\o365\GraphService $graphService
+   * @param GraphService $graphService
    *   The GraphService definition.
-   * @param \Drupal\o365\O365LoggerServiceInterface $loggerService
+   * @param O365LoggerServiceInterface $loggerService
    *   The logger service from the o365 module.
    */
   public function __construct(AuthenticationService $authenticationService, GraphService $graphService, O365LoggerServiceInterface $loggerService) {
@@ -67,16 +69,16 @@ class LoginCallbackController extends ControllerBase {
   /**
    * Callback for the login.
    *
-   * @param \Drupal\o365\O365ConnectorInterface $o365_connector
+   * @param O365ConnectorInterface $o365_connector
    *   The Office 365 connector entity.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    *
    * @return array
    *   A redirect to the set URL.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   public function callback(O365ConnectorInterface $o365_connector, Request $request): array {
     $authCode = $request->get('code');
diff --git a/modules/o365_sso/src/Controller/LoginController.php b/modules/o365_sso/src/Controller/LoginController.php
index 3ba04a5..b4bf430 100644
--- a/modules/o365_sso/src/Controller/LoginController.php
+++ b/modules/o365_sso/src/Controller/LoginController.php
@@ -15,14 +15,14 @@ class LoginController extends ControllerBase {
   /**
    * The authentication service, used to handle all kinds of auth stuff.
    *
-   * @var \Drupal\o365\AuthenticationService
+   * @var AuthenticationService
    */
   protected $authenticationService;
 
   /**
    * Constructs a new LoginController object.
    *
-   * @param \Drupal\o365\AuthenticationService $authenticationService
+   * @param AuthenticationService $authenticationService
    *   The AuthenticationService definition.
    */
   public function __construct(AuthenticationService $authenticationService) {
@@ -41,7 +41,7 @@ class LoginController extends ControllerBase {
   /**
    * The user login method.
    *
-   * @param \Drupal\o365\O365ConnectorInterface $o365_connector
+   * @param O365ConnectorInterface $o365_connector
    *   The Office 365 connector entity.
    *
    * @return mixed
diff --git a/modules/o365_sso/src/Controller/UserLoginController.php b/modules/o365_sso/src/Controller/UserLoginController.php
index cf730ec..a62a257 100644
--- a/modules/o365_sso/src/Controller/UserLoginController.php
+++ b/modules/o365_sso/src/Controller/UserLoginController.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\o365_sso\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\externalauth\ExternalAuth;
@@ -20,34 +24,34 @@ class UserLoginController extends ControllerBase {
   /**
    * Drupal\o365\GraphService definition.
    *
-   * @var \Drupal\o365\GraphService
+   * @var GraphService
    */
   protected $graphService;
 
   /**
    * Drupal\o365\AuthenticationService definition.
    *
-   * @var \Drupal\o365\AuthenticationService
+   * @var AuthenticationService
    */
   protected $authenticationService;
 
   /**
    * The external auth service.
    *
-   * @var \Drupal\externalauth\ExternalAuth
+   * @var ExternalAuth
    */
   protected $externalAuth;
 
   /**
    * Constructs a new UserLoginController object.
    *
-   * @param \Drupal\o365\GraphService $o365_graph
+   * @param GraphService $o365_graph
    *   The GraphService definition.
-   * @param \Drupal\o365\AuthenticationService $authentication_service
+   * @param AuthenticationService $authentication_service
    *   The AuthenticationService definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The EntityTypeManager definition.
-   * @param \Drupal\externalauth\ExternalAuth $external_auth
+   * @param ExternalAuth $external_auth
    *   The external auth.
    */
   public function __construct(
@@ -77,16 +81,16 @@ class UserLoginController extends ControllerBase {
   /**
    * Login a user.
    *
-   * @param \Drupal\o365\O365ConnectorInterface $o365_connector
+   * @param O365ConnectorInterface $o365_connector
    *   The Office 365 connector entity.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The redirect to the set URL in config.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   public function login(O365ConnectorInterface $o365_connector) {
     // Enable cookie auth.
@@ -110,7 +114,7 @@ class UserLoginController extends ControllerBase {
     }
 
     if ($account) {
-      /** @var \Drupal\user\UserInterface $account */
+      /** @var UserInterface $account */
       $this->externalAuth->linkExistingAccount($o365_id, 'o365_sso', $account);
     }
 
diff --git a/modules/o365_sso_user/src/EventSubscriber/UserLoginEventSubscriber.php b/modules/o365_sso_user/src/EventSubscriber/UserLoginEventSubscriber.php
index 99bcaed..200a0f1 100644
--- a/modules/o365_sso_user/src/EventSubscriber/UserLoginEventSubscriber.php
+++ b/modules/o365_sso_user/src/EventSubscriber/UserLoginEventSubscriber.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\o365_sso_user\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\externalauth\Event\ExternalAuthEvents;
@@ -18,23 +22,23 @@ class UserLoginEventSubscriber implements EventSubscriberInterface {
   /**
    * Drupal\Core\Config\ImmutableConfig definition.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Drupal\o365\GraphService definition.
    *
-   * @var \Drupal\o365\GraphService
+   * @var GraphService
    */
   protected $graphService;
 
   /**
    * UserLoginEventSubscriber constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\o365\GraphService $o365_graph
+   * @param GraphService $o365_graph
    *   The graph service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, GraphService $o365_graph) {
@@ -53,12 +57,12 @@ class UserLoginEventSubscriber implements EventSubscriberInterface {
   /**
    * Update a users data with data dfrom the Graph API.
    *
-   * @param \Drupal\externalauth\Event\ExternalAuthLoginEvent $event
+   * @param ExternalAuthLoginEvent $event
    *   The ExternalAuthLoginEvent event containing the user.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws EntityStorageException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   public function updateUserData(ExternalAuthLoginEvent $event) {
     // Only do this when we want to use graph data.
diff --git a/src/AuthenticationService.php b/src/AuthenticationService.php
index 16742b9..8be3fcb 100644
--- a/src/AuthenticationService.php
+++ b/src/AuthenticationService.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\o365;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\TempStore\TempStoreException;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -21,56 +26,56 @@ class AuthenticationService implements AuthenticationServiceInterface {
   /**
    * The config factory interface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The modules base config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $moduleConfig;
 
   /**
    * The private temp store.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStore;
 
   /**
    * A oauth provider.
    *
-   * @var \League\OAuth2\Client\Provider\GenericProvider
+   * @var GenericProvider
    */
   protected $oauthClient;
 
   /**
    * The ConstantsService implementation.
    *
-   * @var \Drupal\o365\ConstantsService
+   * @var ConstantsService
    */
   protected $constants;
 
   /**
    * The logger service.
    *
-   * @var \Drupal\o365\O365LoggerServiceInterface
+   * @var O365LoggerServiceInterface
    */
   protected $loggerService;
 
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -98,17 +103,17 @@ class AuthenticationService implements AuthenticationServiceInterface {
   /**
    * Constructs a new AuthenticationService object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory interface.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $tempStoreFactory
+   * @param PrivateTempStoreFactory $tempStoreFactory
    *   The private store factory.
-   * @param \Drupal\o365\ConstantsService $constantsService
+   * @param ConstantsService $constantsService
    *   The constants service from the o365 module.
-   * @param \Drupal\o365\O365LoggerServiceInterface $loggerService
+   * @param O365LoggerServiceInterface $loggerService
    *   The logger service from the o365 module.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(
@@ -231,13 +236,13 @@ class AuthenticationService implements AuthenticationServiceInterface {
    * @return string
    *   The new access token.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   private function refreshToken(string $refreshToken, string $connector_id): string {
-    /** @var \Drupal\o365\O365ConnectorInterface $o365_connector */
+    /** @var O365ConnectorInterface $o365_connector */
     $o365_connector = $this->entityTypeManager->getStorage('o365_connector')->load($connector_id);
     $this->generateProvider($o365_connector);
 
@@ -253,7 +258,7 @@ class AuthenticationService implements AuthenticationServiceInterface {
   /**
    * Generate a basic oAuth2 provider.
    *
-   * @param \Drupal\o365\O365ConnectorInterface $o365_connector
+   * @param O365ConnectorInterface $o365_connector
    *   The Office 365 connector entity.
    */
   private function generateProvider(O365ConnectorInterface $o365_connector): void {
@@ -301,12 +306,12 @@ class AuthenticationService implements AuthenticationServiceInterface {
   /**
    * Save the auth data to the temp store.
    *
-   * @param \League\OAuth2\Client\Token\AccessTokenInterface $accessToken
+   * @param AccessTokenInterface $accessToken
    *   The access token object.
-   * @param \Drupal\o365\O365ConnectorInterface $o365_connector
+   * @param O365ConnectorInterface $o365_connector
    *   The Office 365 connector entity.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
+   * @throws TempStoreException
    */
   private function saveAuthData(AccessTokenInterface $accessToken, O365ConnectorInterface $o365_connector): void {
     $this->authValues = [
@@ -333,7 +338,7 @@ class AuthenticationService implements AuthenticationServiceInterface {
    * @param mixed $value
    *   The value.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
+   * @throws TempStoreException
    */
   private function saveDataToTempStore(string $name, $value): void {
     $tempstore = $this->tempStore->get($this->constants->getUserTempStoreName());
diff --git a/src/AuthenticationServiceInterface.php b/src/AuthenticationServiceInterface.php
index 8778d37..4a6aa63 100644
--- a/src/AuthenticationServiceInterface.php
+++ b/src/AuthenticationServiceInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\o365;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
 /**
  * The AuthenticationServiceInterface interface.
  */
@@ -10,7 +12,7 @@ interface AuthenticationServiceInterface {
   /**
    * Redirect the user to the correct Microsoft pages for oAuth2.
    *
-   * @param \Drupal\o365\O365ConnectorInterface $o365_connector
+   * @param O365ConnectorInterface $o365_connector
    *   The Office 365 connector entity.
    */
   public function loginUser(O365ConnectorInterface $o365_connector);
@@ -24,8 +26,8 @@ interface AuthenticationServiceInterface {
    * @return string|bool
    *   The access token or FALSE.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   public function getAccessToken(bool $login = FALSE);
 
@@ -34,20 +36,20 @@ interface AuthenticationServiceInterface {
    *
    * @param string $code
    *   The code we got from Microsoft.
-   * @param \Drupal\o365\O365ConnectorInterface $o365_connector
+   * @param O365ConnectorInterface $o365_connector
    *   The Office 365 connector entity.
    * @param mixed $redirect
    *   Either FALSE or a url where to redirect to.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   public function setAccessToken(string $code, O365ConnectorInterface $o365_connector, $redirect);
 
   /**
    * Save the auth data from the cookie in the user session storage.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
+   * @throws TempStoreException
    */
   public function saveAuthDataFromCookie();
 
diff --git a/src/ConstantsService.php b/src/ConstantsService.php
index e9c6331..6694388 100644
--- a/src/ConstantsService.php
+++ b/src/ConstantsService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\o365;
 
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
 
@@ -13,14 +14,14 @@ class ConstantsService {
   /**
    * The config factory interface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The request object.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
@@ -76,9 +77,9 @@ class ConstantsService {
   /**
    * Constructs a new ConstantsService object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory interface.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack object.
    */
   public function __construct(ConfigFactoryInterface $configFactory, RequestStack $request_stack) {
@@ -99,7 +100,7 @@ class ConstantsService {
   /**
    * Get the authorize url.
    *
-   * @param \Drupal\o365\O365ConnectorInterface $o365_connector
+   * @param O365ConnectorInterface $o365_connector
    *   The Office 365 connector entity.
    *
    * @return string
@@ -114,7 +115,7 @@ class ConstantsService {
   /**
    * Get the token url.
    *
-   * @param \Drupal\o365\O365ConnectorInterface $o365_connector
+   * @param O365ConnectorInterface $o365_connector
    *   The Office 365 connector entity.
    *
    * @return string
diff --git a/src/Form/O365ConnectorForm.php b/src/Form/O365ConnectorForm.php
index 6d117b2..22107da 100644
--- a/src/Form/O365ConnectorForm.php
+++ b/src/Form/O365ConnectorForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365\Form;
 
+use Drupal\o365\O365ConnectorInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -15,7 +18,7 @@ class O365ConnectorForm extends EntityForm {
   /**
    * Constructs an ExampleForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entityTypeManager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
@@ -37,7 +40,7 @@ class O365ConnectorForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state): array {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\o365\O365ConnectorInterface $o365_connector */
+    /** @var O365ConnectorInterface $o365_connector */
     $o365_connector = $this->entity;
 
     $form['label'] = [
@@ -121,7 +124,7 @@ class O365ConnectorForm extends EntityForm {
    */
   public function validateForm(array &$form, FormStateInterface $form_state): void {
     if (empty($form_state->getValue('client_secret'))) {
-      /** @var \Drupal\o365\O365ConnectorInterface $o365_connector */
+      /** @var O365ConnectorInterface $o365_connector */
       $o365_connector = $this->entityTypeManager->getStorage('o365_connector')
         ->load($this->entity->id());
       $form_state->setValue('client_secret', $o365_connector->getClientSecret());
@@ -161,8 +164,8 @@ class O365ConnectorForm extends EntityForm {
    * @return bool
    *   TRUE if connector exists, FALSE otherwise.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function exist(string $id): bool {
     $entity = $this->entityTypeManager->getStorage('o365_connector')->getQuery()
diff --git a/src/GraphService.php b/src/GraphService.php
index 7c03590..5629442 100644
--- a/src/GraphService.php
+++ b/src/GraphService.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\o365;
 
+use Drupal\Core\TempStore\TempStoreException;
+use League\OAuth2\Client\Provider\Exception\IdentityProviderException;
+use Microsoft\Graph\Http\GraphResponse;
 use Microsoft\Graph\Exception\GraphException;
 use Microsoft\Graph\Graph;
 
@@ -13,23 +16,23 @@ class GraphService {
   /**
    * Drupal\o365\AuthenticationServiceInterface definition.
    *
-   * @var \Drupal\o365\AuthenticationServiceInterface
+   * @var AuthenticationServiceInterface
    */
   protected $authService;
 
   /**
    * The logger service.
    *
-   * @var \Drupal\o365\O365LoggerServiceInterface
+   * @var O365LoggerServiceInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new GraphService object.
    *
-   * @param \Drupal\o365\AuthenticationServiceInterface $authenticationService
+   * @param AuthenticationServiceInterface $authenticationService
    *   The AuthenticationServiceInterface definition.
-   * @param \Drupal\o365\O365LoggerServiceInterface $messenger
+   * @param O365LoggerServiceInterface $messenger
    *   The O365LoggerServiceInterface definition.
    */
   public function __construct(AuthenticationServiceInterface $authenticationService, O365LoggerServiceInterface $messenger) {
@@ -52,8 +55,8 @@ class GraphService {
    * @return mixed
    *   The data retrieved from the Graph API.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   public function getGraphData($endpoint, $type = 'GET', $raw = FALSE, $version = FALSE) {
     try {
@@ -67,7 +70,7 @@ class GraphService {
 
       $graph->setAccessToken($accessToken);
 
-      /** @var \Microsoft\Graph\Http\GraphResponse $request */
+      /** @var GraphResponse $request */
       $request = $graph->createRequest($type, $endpoint)->execute();
 
       if ($raw) {
@@ -101,8 +104,8 @@ class GraphService {
    * @return mixed
    *   The data retrieved from the Graph API.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
-   * @throws \League\OAuth2\Client\Provider\Exception\IdentityProviderException
+   * @throws TempStoreException
+   * @throws IdentityProviderException
    */
   public function sendGraphData($endpoint, $data = [], $type = 'POST', $raw = FALSE, $version = FALSE) {
     try {
@@ -116,7 +119,7 @@ class GraphService {
 
       $graph->setAccessToken($accessToken);
 
-      /** @var \Microsoft\Graph\Http\GraphResponse $request */
+      /** @var GraphResponse $request */
       $request = $graph->createRequest($type, $endpoint)
         ->attachBody($data)
         ->execute();
diff --git a/src/HelperService.php b/src/HelperService.php
index b333604..01b35a5 100644
--- a/src/HelperService.php
+++ b/src/HelperService.php
@@ -14,14 +14,14 @@ class HelperService {
   /**
    * Drupal\Core\Datetime\DateFormatterInterface definition.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Constructs a new HelperService object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The DateFormatterInterface definition.
    */
   public function __construct(DateFormatterInterface $date_formatter) {
diff --git a/src/O365LoggerService.php b/src/O365LoggerService.php
index ac52792..0723a2c 100644
--- a/src/O365LoggerService.php
+++ b/src/O365LoggerService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\o365;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
@@ -14,30 +15,30 @@ class O365LoggerService implements O365LoggerServiceInterface {
   /**
    * Drupal\Core\Logger\LoggerChannelFactoryInterface definition.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
    * The logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The drupal messenger.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Constructs a new O365LoggerService object.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The LoggerChannelFactoryInterface definition.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The Messenger definition.
    */
   public function __construct(LoggerChannelFactoryInterface $logger_factory, Messenger $messenger) {
@@ -64,7 +65,7 @@ class O365LoggerService implements O365LoggerServiceInterface {
   /**
    * Render a drupal message.
    *
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup $message
+   * @param TranslatableMarkup $message
    *   The message to print.
    * @param string $severity
    *   The severity of the message.
diff --git a/src/O365LoggerServiceInterface.php b/src/O365LoggerServiceInterface.php
index 6b2ab0b..a2f327d 100644
--- a/src/O365LoggerServiceInterface.php
+++ b/src/O365LoggerServiceInterface.php
@@ -12,7 +12,7 @@ interface O365LoggerServiceInterface {
   /**
    * Log a message into the watchdog.
    *
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup $message
+   * @param TranslatableMarkup $message
    *   The translatable message.
    * @param string $severity
    *   The severity of the log message.
@@ -22,7 +22,7 @@ interface O365LoggerServiceInterface {
   /**
    * Log a debug message into the watchdog.
    *
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup $message
+   * @param TranslatableMarkup $message
    *   The translatable message.
    */
   public function debug(TranslatableMarkup $message);
