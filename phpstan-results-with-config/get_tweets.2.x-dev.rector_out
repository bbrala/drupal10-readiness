modules/contrib/get_tweets/get_tweets.install
modules/contrib/get_tweets/get_tweets.module
modules/contrib/get_tweets/src/Form/GetTweetsSettings.php
modules/contrib/get_tweets/src/GetTweetsBase.php
modules/contrib/get_tweets/src/RenderTweet.php
modules/contrib/get_tweets/tests/src/Functional/GetTweetsTest.php

4 files with changes
====================

1) modules/contrib/get_tweets/tests/src/Functional/GetTweetsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\get_tweets\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'administer site configuration',
@@ @@
       'consumer_key' => 'invalid',
       'consumer_secret' => 'invalid',
     ];
+    $this->drupalGet('admin/config/services/get-tweets');

     // Post the form.
-    $this->drupalPostForm('admin/config/services/get-tweets', $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));

     $this->assertSession()->pageTextContains(t('Error: "Could not authenticate you." on query: "@query"', [
       '@query' => $test_query,
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/get_tweets/src/RenderTweet.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\get_tweets;

+use Drupal\Core\GeneratedLink;
 use Drupal\Core\Url;
 use Drupal\Core\Link;

@@ @@
    * @param string $uri
    *   Link for replace.
    *
-   * @return \Drupal\Core\GeneratedLink
+   * @return GeneratedLink
    *   Link object.
    */
   private function createLink($text, $uri) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/get_tweets/src/GetTweetsBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\get_tweets;

+use Drupal\node\NodeStorage;
+use Drupal\Core\Config\Config;
 use Abraham\TwitterOAuth\TwitterOAuth;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The node storage.
    *
-   * @var \Drupal\node\NodeStorage
+   * @var NodeStorage
    */
   protected $nodeStorage;

@@ @@
   /**
    * The GetTweets settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $getTweetsSettings;

@@ @@
   /**
    * Drupal logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $logger;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * Constructs a GetTweetsBase object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   The logger.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   A Database connection to use for reading and writing configuration data.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ConfigFactoryInterface $config_factory, LoggerChannelFactoryInterface $logger, FileSystemInterface $file_system, Connection $connection) {
@@ @@
    * @param string|null $oauth_token_secret
    *   The Client Token Secret (optional).
    *
-   * @return \Abraham\TwitterOAuth\TwitterOAuth|null
+   * @return TwitterOAuth|null
    *   Returns TwitterOAuth object or null.
    */
   public function getTwitterConnection($consumer_key, $consumer_secret, $oauth_token = NULL, $oauth_token_secret = NULL) {
@@ @@
   public function createNode(\stdClass $tweet, $tweet_type = 'statuses/user_timeline', $query_name = '') {
     $render_tweet = new RenderTweet($tweet);

-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = $this->nodeStorage->create([
       'type' => 'tweet',
       'field_tweet_id' => $tweet->id,
@@ @@
   /**
    * Saves the twitter asset on a node field.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node instance.
    * @param \stdClass $media
    *   Twitter media obj.
@@ @@
         $data &&
         $this->fileSystem->prepareDirectory($dir, FileSystemInterface::CREATE_DIRECTORY)
       ) {
-        $file = file_save_data($data, $dir . $path_info['basename'], FileSystemInterface::EXISTS_RENAME);
+        $file = \Drupal::service('file.repository')->writeData($data, $dir . $path_info['basename'], FileSystemInterface::EXISTS_RENAME);
         $node->set('field_tweet_local_image', $file);
       }
     }
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/get_tweets/src/Form/GetTweetsSettings.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\get_tweets\Form;

+use Drupal\core\datetime\DateFormatter;
 use Abraham\TwitterOAuth\TwitterOAuth;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
@@ @@
   /**
    * Date formatter.
    *
-   * @var \Drupal\core\datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;

@@ @@
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, DateFormatterInterface $date_formatter) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addMore(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function removeCallback(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

