modules/contrib/eboks/eboks.module
modules/contrib/eboks/src/Controller/EboksController.php
modules/contrib/eboks/src/EboksSenderInterface.php
modules/contrib/eboks/src/EboksSenderMSOutlook.php
modules/contrib/eboks/src/EboksSenderNets.php
modules/contrib/eboks/src/EboksStatusChecker.php
modules/contrib/eboks/src/Entity/Controller/EboksListBuilder.php
modules/contrib/eboks/src/Entity/EboksMessage.php
modules/contrib/eboks/src/Entity/EboksMessageInterface.php
modules/contrib/eboks/src/Form/EboksDeleteForm.php
modules/contrib/eboks/src/Plugin/Field/FieldType/EboksReceiver.php

6 files with changes
====================

1) modules/contrib/eboks/src/Entity/Controller/EboksListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\eboks\Entity\Controller;

+use Drupal\eboks\Entity\EboksMessage;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ @@
   /**
    * The url generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;

@@ @@
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Constructs a new EboksListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, UrlGeneratorInterface $url_generator, DateFormatterInterface $date_formatter) {
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\eboks\Entity\EboksMessage $entity */
+    /** @var EboksMessage $entity */
     $row['id'] = $entity->id();
     $row['status'] = $entity->status->value;
     $row['timestamp'] = $this->dateFormatter->format($entity->timestamp->value, 'short');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/eboks/src/EboksStatusChecker.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\eboks;

+use Psr\Log\LoggerInterface;
 use Drupal\eboks\Entity\EboksMessage;
 use Symfony\Component\Serializer\Encoder\XmlEncoder;
 use phpseclib\Net\SFTP;
@@ @@
   /**
    * Logger interface.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
       ];
       $this->logger(t('Downloaded @count new receipts: @files', [
         '@count' => count($new_files),
-        '@files' => render($items),
+        '@files' => \Drupal::service('renderer')->render($items),
       ]), 'status');
     }
     else {
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/eboks/src/EboksSenderNets.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\eboks;

+use Psr\Log\LoggerInterface;
+use Drupal\eboks\Entity\EboksMessageInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\eboks\Entity\EboksMessage;
 use phpseclib\Net\SFTP;
 use phpseclib\Crypt\RSA;
@@ @@
   /**
    * Logger interface.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * Eboks message entity.
    *
-   * @var \Drupal\eboks\Entity\EboksMessageInterface
+   * @var EboksMessageInterface
    */
   protected $entity;

@@ @@
   /**
    * Send e-Boks message callback.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   In case of failures an exception is thrown.
    */
   public function send() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/eboks/src/EboksSenderMSOutlook.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\eboks;

+use Psr\Log\LoggerInterface;
+use Drupal\eboks\Entity\EboksMessageInterface;
+use Drupal\Core\Mail\MailManagerInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\eboks\Entity\EboksMessage;
 use Mpdf\Mpdf;

@@ @@
   /**
    * Logger interface.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * Eboks message entity.
    *
-   * @var \Drupal\eboks\Entity\EboksMessageInterface
+   * @var EboksMessageInterface
    */
   protected $entity;

@@ @@
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * Send e-Boks message callback.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   In case of failures an exception is thrown.
    */
   public function send() {
@@ @@
     foreach ($this->messages as $message) {

       $mpdf = new Mpdf(['tempDir' => \Drupal::service('file_system')->realpath('temporary://mpdf')]);
-      $mpdf->WriteHTML(render($message['content']));
+      $mpdf->WriteHTML(\Drupal::service('renderer')->render($message['content']));
       $filename = 'attachment.pdf';
       $attachament_content = $mpdf->Output($filename, 'S');
       $attachment = [
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/eboks/src/EboksSenderInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\eboks;

+use Drupal\Core\Entity\EntityStorageException;
 /**
  * Class e-Boks sender.
  *
@@ @@
   /**
    * Send e-Boks message callback.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   In case of failures an exception is thrown.
    */
   public function send();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/eboks/src/Controller/EboksController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\eboks\Controller;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
 use Drupal\eboks\EboksSenderMSOutlook;
@@ @@
   /**
    * Configuration object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

