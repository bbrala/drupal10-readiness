diff --git a/src/Plugin/Derivative/MenuItemsLinkProviderDeriver.php b/src/Plugin/Derivative/MenuItemsLinkProviderDeriver.php
index 7ade71f..3ea7a0c 100644
--- a/src/Plugin/Derivative/MenuItemsLinkProviderDeriver.php
+++ b/src/Plugin/Derivative/MenuItemsLinkProviderDeriver.php
@@ -15,14 +15,14 @@ class MenuItemsLinkProviderDeriver extends DeriverBase implements ContainerDeriv
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuStorage;
 
   /**
    * Constructs new MenuItemsLinkProvider.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $menu_storage
+   * @param EntityStorageInterface $menu_storage
    *   The menu storage.
    */
   public function __construct(EntityStorageInterface $menu_storage) {
diff --git a/src/Resource/MenuItemsResource.php b/src/Resource/MenuItemsResource.php
index 2f08cfd..a5fc4ac 100644
--- a/src/Resource/MenuItemsResource.php
+++ b/src/Resource/MenuItemsResource.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\jsonapi_menu_items\Resource;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\GeneratedUrl;
@@ -32,16 +34,16 @@ final class MenuItemsResource extends ResourceBase {
   /**
    * Process the resource request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
-   * @param \Drupal\system\MenuInterface $menu
+   * @param MenuInterface $menu
    *   The menu.
    *
-   * @return \Drupal\jsonapi\ResourceResponse
+   * @return ResourceResponse
    *   The response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function process(Request $request, MenuInterface $menu): ResourceResponse {
     $cacheability = new CacheableMetadata();
@@ -98,12 +100,12 @@ final class MenuItemsResource extends ResourceBase {
   /**
    * Apply filters to the menu parameters.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
-   * @param \Drupal\Core\Menu\MenuTreeParameters $parameters
+   * @param MenuTreeParameters $parameters
    *   The cache metadata.
    *
-   * @return \Drupal\Core\Menu\MenuTreeParameters
+   * @return MenuTreeParameters
    *   The Menu Tree Parameters object.
    */
   protected function applyFiltersToParams(Request $request, MenuTreeParameters $parameters) {
@@ -146,7 +148,7 @@ final class MenuItemsResource extends ResourceBase {
    *   The menu tree.
    * @param array $items
    *   The already created items.
-   * @param \Drupal\Core\Cache\CacheableMetadata $cache
+   * @param CacheableMetadata $cache
    *   The cacheable metadata.
    */
   protected function getMenuItems(array $tree, array &$items, CacheableMetadata $cache) {
diff --git a/tests/src/Functional/JsonapiMenuItemsTest.php b/tests/src/Functional/JsonapiMenuItemsTest.php
index f2df8d3..40f2e19 100644
--- a/tests/src/Functional/JsonapiMenuItemsTest.php
+++ b/tests/src/Functional/JsonapiMenuItemsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\jsonapi_menu_items\Functional;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Url;
 use Drupal\menu_link_content\Entity\MenuLinkContent;
@@ -20,7 +21,7 @@ class JsonapiMenuItemsTest extends BrowserTestBase {
   /**
    * The account to use for authentication.
    *
-   * @var null|\Drupal\Core\Session\AccountInterface
+   * @var null|AccountInterface
    */
   protected $account;
 
@@ -84,7 +85,7 @@ class JsonapiMenuItemsTest extends BrowserTestBase {
       '%title' => $link_title,
       '%base_path' => Url::fromRoute('<front>')->toString(),
     ]));
-    $this->assertEqual($expected_items['data'], $content['data']);
+    $this->assertEquals($expected_items['data'], $content['data']);
 
     // Assert response is cached with appropriate cacheability metadata such
     // that re-saving the link with a new title yields the new title in a
@@ -96,7 +97,7 @@ class JsonapiMenuItemsTest extends BrowserTestBase {
     $match = array_filter($content['data'], function (array $item) use ($content_link) {
       return $item['id'] === 'menu_link_content:' . $content_link->uuid();
     });
-    $this->assertEqual($new_title, reset($match)['attributes']['title']);
+    $this->assertEquals($new_title, reset($match)['attributes']['title']);
 
     // Add another link and ensue cacheability metadata ensures the new item
     // appears in a subsequent request.
@@ -290,7 +291,7 @@ class JsonapiMenuItemsTest extends BrowserTestBase {
    * @param string $parent
    *   The menu link parent id.
    *
-   * @return Drupal\menu_link_content\Entity\MenuLinkContent
+   * @return MenuLinkContent
    *   The menu link.
    */
   protected function createMenuLink(string $title, string $parent) {
