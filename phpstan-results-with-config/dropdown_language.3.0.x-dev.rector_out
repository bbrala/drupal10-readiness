modules/contrib/dropdown_language/dropdown_language.install
modules/contrib/dropdown_language/dropdown_language.module
modules/contrib/dropdown_language/src/Form/DropdownLanguageSettings.php
modules/contrib/dropdown_language/src/Plugin/Block/DropdownLanguage.php
modules/contrib/dropdown_language/src/Plugin/Derivative/DropdownLanguage.php

2 files with changes
====================

1) modules/contrib/dropdown_language/src/Plugin/Block/DropdownLanguage.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;

@@ @@
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;

@@ @@
   /**
    * The Route Matcher.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route Matcher.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The request.
    */
   public function __construct(array $block_configuration, $plugin_id, $plugin_definition, LanguageManagerInterface $language_manager, ConfigFactoryInterface $config_factory, PathMatcherInterface $path_matcher, RouteMatchInterface $route_match, RequestStack $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/dropdown_language/dropdown_language.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\block\Entity\Block;
 /**
  * @file
  * Install, update, and uninstall functions for dropdown_language.
@@ @@
  *
  * @ingroup dropdown_language
  */
-
 /**
  * Update labels block schema.
  */
 function dropdown_language_update_8201() {
-  /** @var \Drupal\block\Entity\Block[] $blocks */
+  /** @var Block[] $blocks */
   $blocks = \Drupal::entityTypeManager()
     ->getStorage('block')
     ->loadByProperties(['plugin' => 'dropdown_language:language_interface']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

