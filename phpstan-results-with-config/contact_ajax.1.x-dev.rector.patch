diff --git a/contact_ajax.info.yml b/contact_ajax.info.yml
index 0737d12..b5b5b15 100644
--- a/contact_ajax.info.yml
+++ b/contact_ajax.info.yml
@@ -2,6 +2,6 @@ name: Contact Ajax
 description: Submit contact form using ajax.
 package: Contact
 type: module
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 dependencies:
   - drupal:contact
diff --git a/contact_ajax.module b/contact_ajax.module
index 9c82b37..5fbbd70 100644
--- a/contact_ajax.module
+++ b/contact_ajax.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityForm;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
 /**
  * @file
  * Overrides core contact form functionality
@@ -48,7 +50,7 @@ const ANONYMOUS_ID = AccountInterface::ANONYMOUS_ROLE;
  * Implements hook_form_FORM_ID_alter() for contact_form_form().
  */
 function contact_ajax_form_contact_form_form_alter(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\contact\ContactFormInterface $contact_form */
+  /** @var ContactFormInterface $contact_form */
   $contact_form = $form_state->getFormObject()->getEntity();
 
   $form['contact_ajax'] = [
@@ -186,14 +188,14 @@ function contact_ajax_contact_form_form_builder($entity_type, ContactFormInterfa
  * Implements hook_form_FORM_ID_alter() for contact_form_form().
  */
 function contact_ajax_form_contact_message_form_alter(&$form, &$form_state, $form_id) {
-  /** @var \Drupal\Core\Entity\ContentEntityForm $form_object */
+  /** @var ContentEntityForm $form_object */
   $form_object = $form_state->getFormObject();
   /* @var \Drupal\contact\MessageInterface $contact_message */
   $contact_message = $form_object->getEntity();
 
   $contact_form = ContactForm::load($contact_message->bundle());
 
-  /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $form_mode */
+  /** @var EntityFormDisplayInterface $form_mode */
   if ($form_object instanceof MessageForm) {
 
     $ajax_enabled = $contact_form->getThirdPartySetting('contact_ajax', 'enabled', FALSE);
@@ -231,7 +233,7 @@ function contact_ajax_form_contact_message_form_alter(&$form, &$form_state, $for
  */
 function contact_ajax_contact_site_form_ajax_callback($form, FormStateInterface &$form_state) {
 
-  /** @var \Drupal\Core\Entity\ContentEntityForm $form_object */
+  /** @var ContentEntityForm $form_object */
   $form_object = $form_state->getFormObject();
   /* @var \Drupal\contact\MessageInterface $contact_message */
   $contact_message = $form_object->getEntity();
diff --git a/tests/src/FunctionalJavascript/ContactAjaxTest.php b/tests/src/FunctionalJavascript/ContactAjaxTest.php
index 0955f44..296f97c 100644
--- a/tests/src/FunctionalJavascript/ContactAjaxTest.php
+++ b/tests/src/FunctionalJavascript/ContactAjaxTest.php
@@ -130,14 +130,14 @@ class ContactAjaxTest extends WebDriverTestBase {
     // 8.2.x added the message field, which is by default empty. Conditionally
     // submit it if the field can be found.
     $this->drupalGet('admin/structure/contact/add');
-    if ($this->xpath($this->constructFieldXpath('name', 'message'))) {
+    if ($this->xpath($this->getSession()->getPage()->findField('message'))) {
       $edit['message'] = $message;
     }
 
     // First submit the common configs. Because 'id' fields and ajax
     // 'advanced settings' are not available until this first step is done, we
     // can't submit all at once.
-    $this->drupalPostForm(NULL, $common, t('Save'));
+    $this->submitForm($common, t('Save'));
 
     // Open the advanced settings.
     $this->click('#edit-advanced summary');
@@ -146,7 +146,7 @@ class ContactAjaxTest extends WebDriverTestBase {
     $assert->waitForElementVisible('css', '[name="id"]');
 
     // Post the full form.
-    $this->drupalPostForm(NULL, $common + $edit, t('Save'));
+    $this->submitForm($common + $edit, t('Save'));
 
     $assert->pageTextContains(t('Contact form test_label has been added.'));
   }
@@ -167,21 +167,21 @@ class ContactAjaxTest extends WebDriverTestBase {
     // Send form reload the same form.
     $form_id = 'test_id';
     $this->drupalGet('contact/' . $form_id);
-    $this->drupalPostForm(NULL, $edit, t('Send message'));
+    $this->submitForm($edit, t('Send message'));
     $assert->assertWaitOnAjaxRequest();
     $assert->pageTextContains('Your message has been sent.', '[OK] Your message has been sent.');
 
     // Submit form reload custom message.
     $form_id = 'test_custom_message_id';
     $this->drupalGet('contact/' . $form_id);
-    $this->drupalPostForm(NULL, $edit, t('Send message'));
+    $this->submitForm($edit, t('Send message'));
     $assert->assertWaitOnAjaxRequest();
     $assert->pageTextContains('test ajax message', '[OK] test ajax message.');
 
     // Send form reload another node.
     $form_id = 'test_node_content';
     $this->drupalGet('contact/' . $form_id);
-    $this->drupalPostForm(NULL, $edit, t('Send message'));
+    $this->submitForm($edit, t('Send message'));
     $assert->assertWaitOnAjaxRequest();
     $assert->pageTextContains('test ajax title', '[OK] test ajax title');
 
@@ -189,7 +189,7 @@ class ContactAjaxTest extends WebDriverTestBase {
     $form_id = 'test_load_other_element';
     $this->drupalGet('contact/' . $form_id);
     $assert->responseContains('id="ajax-contact-prefix"', '[OK] ajax prefix wrapper added');
-    $this->drupalPostForm(NULL, $edit, t('Send message'));
+    $this->submitForm($edit, t('Send message'));
     $assert->assertWaitOnAjaxRequest();
     $assert->pageTextContains('Your message has been sent.', '[OK] Your message has been sent.');
     $assert->responseNotContains('<form', '[OK] Form has been removed.');
@@ -198,7 +198,7 @@ class ContactAjaxTest extends WebDriverTestBase {
     unset($edit['name']);
     $form_id = 'test_load_with_validation_errors';
     $this->drupalGet('contact/' . $form_id);
-    $this->drupalPostForm(NULL, $edit, t('Send message'));
+    $this->submitForm($edit, t('Send message'));
     $assert->assertWaitOnAjaxRequest();
     $assert->pageTextContains('Your name field is required.', '[OK] test render with form errors.');
   }
