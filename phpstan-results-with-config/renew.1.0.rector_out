modules/contrib/renew/renew.install
modules/contrib/renew/renew.module
modules/contrib/renew/src/EventSubscriber/MaintainRequestSubscriber.php
modules/contrib/renew/src/Form/AdminForm.php
modules/contrib/renew/src/RenewUninstallValidator.php

3 files with changes
====================

1) modules/contrib/renew/src/RenewUninstallValidator.php:8

    ---------- begin diff ----------
@@ @@

 namespace Drupal\renew;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\StringTranslation\TranslationInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   use StringTranslationTrait;

   /**
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * Constructs a new RenewUninstallValidator.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface          $config_factory
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param ConfigFactoryInterface $config_factory
+   * @param TranslationInterface $string_translation
    */
   public function __construct(ConfigFactoryInterface $config_factory, TranslationInterface $string_translation) {
     $this->config = $config_factory->get('renew.admin');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/renew/src/Form/AdminForm.php:20

    ---------- begin diff ----------
@@ @@
 class AdminForm extends FormBase {

   /**
-   * @var \Drupal\Core\Config\Config|null
+   * @var Config|null
    */
   protected $config = NULL;

@@ @@
   protected $isLogin = FALSE;

   /**
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    */
   public function __construct(Config $config) {
     $this->config = $config;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/renew/src/EventSubscriber/MaintainRequestSubscriber.php:9

    ---------- begin diff ----------
@@ @@

 namespace Drupal\renew\EventSubscriber;

+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Routing\RouteMatch;
@@ @@
   /**
    * the renew config
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a new MaintainRequestSubscriber
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface          $config_factory
-   * @param \Drupal\Core\Messenger\MessengerInterface           $messenger
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param ConfigFactoryInterface $config_factory
+   * @param MessengerInterface $messenger
+   * @param TranslationInterface $translation
    */
   public function __construct(ConfigFactoryInterface $config_factory, MessengerInterface $messenger, TranslationInterface $translation) {
     $this->config = $config_factory->get('renew.admin');
@@ @@
   /**
    * Notify the user that a renewal is required.
    *
-   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
+   * @param RequestEvent $event
    *   The event to process.
    */
   public function onRequest(RequestEvent $event) {
@@ @@
    * @param $message
    *
    * @return bool
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function sendEmail($message = '') {
     if (empty($message)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 3 files have been changed by Rector                                       

