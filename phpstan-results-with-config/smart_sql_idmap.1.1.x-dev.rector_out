modules/contrib/smart_sql_idmap/src/Plugin/migrate/id_map/SmartSql.php
modules/contrib/smart_sql_idmap/tests/src/Kernel/SmartSqlMigrateExecutableTest.php
modules/contrib/smart_sql_idmap/tests/src/Unit/Plugin/migrate/id_map/SmartSqlTest.php
modules/contrib/smart_sql_idmap/tests/src/Unit/Plugin/migrate/id_map/SmartSqlWithLongDerivedPluginIdTest.php
modules/contrib/smart_sql_idmap/tests/src/Unit/Plugin/migrate/id_map/SmartSqlWithLongPluginIdTest.php
modules/contrib/smart_sql_idmap/tests/src/Unit/TestSmartSqlIdMap.php

3 files with changes
====================

1) modules/contrib/smart_sql_idmap/tests/src/Unit/TestSmartSqlIdMap.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The migration plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface
+   * @var MigrationPluginManagerInterface
    */
   protected $migrationPluginManager;

@@ @@
   /**
    * Constructs a TestSqlIdMap object.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database.
-   * @param \Drupal\migrate\Plugin\MigrationPluginManagerInterface $migration_plugin_manager
+   * @param MigrationPluginManagerInterface $migration_plugin_manager
    *   The migration plugin manager.
    * @param array $configuration
    *   The configuration.
@@ @@
    *   The plugin ID for the migration process to do.
    * @param mixed $plugin_definition
    *   The configuration for the plugin.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The migration to do.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(Connection $database, MigrationPluginManagerInterface $migration_plugin_manager, array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, EventDispatcherInterface $event_dispatcher) {
@@ @@
    *   A field schema depending on value of key 'type'.  An empty array is
    *   returned if 'type' is not defined.
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    */
   protected function getFieldSchema(array $id_definition) {
     if (!isset($id_definition['type'])) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/smart_sql_idmap/tests/src/Unit/Plugin/migrate/id_map/SmartSqlTest.php:74

    ---------- begin diff ----------
@@ @@
   /**
    * Creates a test SQL ID map plugin.
    *
-   * @return \Drupal\Tests\smart_sql_idmap\Unit\TestSmartSqlIdMap
+   * @return TestSmartSqlIdMap
    *   A SQL ID map plugin test instance.
    */
   protected function getIdMap() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/smart_sql_idmap/tests/src/Kernel/SmartSqlMigrateExecutableTest.php:151

    ---------- begin diff ----------
@@ @@
   /**
    * Returns the actual records found in a sql ID map table.
    *
-   * @param \Drupal\migrate\Plugin\migrate\id_map\Sql $id_map
+   * @param Sql $id_map
    *   A sql ID map plugin instance.
    *
    * @return string[][]
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

