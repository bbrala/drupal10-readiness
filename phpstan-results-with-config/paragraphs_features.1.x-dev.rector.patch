diff --git a/paragraphs_features.module b/paragraphs_features.module
index 1844f27..5284ffa 100644
--- a/paragraphs_features.module
+++ b/paragraphs_features.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\paragraphs\Entity\Paragraph;
 /**
  * @file
  * Contains hooks for Paragraphs Feature module.
@@ -16,7 +17,7 @@ use Drupal\paragraphs_features\ParagraphsFeatures;
  * Implements hook_field_widget_multivalue_form_alter().
  */
 function paragraphs_features_field_widget_multivalue_form_alter(array &$elements, FormStateInterface $form_state, array $context) {
-  /** @var \Drupal\paragraphs\Plugin\Field\FieldWidget\ParagraphsWidget $widget */
+  /** @var ParagraphsWidget $widget */
   $widget = $context['widget'];
   if (!($widget instanceof ParagraphsWidget)) {
     return;
@@ -46,7 +47,7 @@ function paragraphs_features_field_widget_third_party_settings_form(WidgetInterf
  * Implements hook_paragraphs_widget_actions_alter().
  */
 function paragraphs_features_paragraphs_widget_actions_alter(array &$widget_actions, array &$context) {
-  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraphs_entity */
+  /** @var Paragraph $paragraphs_entity */
   $paragraphs_entity = $context['paragraphs_entity'];
 
   foreach ($widget_actions as $grouping => $buttons) {
diff --git a/src/ParagraphsFeatures.php b/src/ParagraphsFeatures.php
index 37fceb1..6a8b453 100644
--- a/src/ParagraphsFeatures.php
+++ b/src/ParagraphsFeatures.php
@@ -49,7 +49,7 @@ class ParagraphsFeatures {
    *
    * @param array $elements
    *   Render array for the field widget.
-   * @param \Drupal\paragraphs\Plugin\Field\FieldWidget\ParagraphsWidget $widget
+   * @param ParagraphsWidget $widget
    *   Field widget object.
    * @param string $fieldWrapperId
    *   Field Wrapper ID, usually provided by ::getWrapperId().
@@ -65,7 +65,7 @@ class ParagraphsFeatures {
           $widget->getThirdPartySetting('paragraphs_features', 'add_in_between_link_count');
       }
       // Set module path for split_text feature.
-      $elements['add_more']['#attached']['drupalSettings']['paragraphs_features']['_path'] = drupal_get_path('module', 'paragraphs_features');
+      $elements['add_more']['#attached']['drupalSettings']['paragraphs_features']['_path'] = \Drupal::service('extension.list.module')->getPath('paragraphs_features');
     }
 
     $elements['add_more']['#attached']['library'][] = 'paragraphs_features/drupal.paragraphs_features.scroll_to_element';
@@ -87,10 +87,10 @@ class ParagraphsFeatures {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The ajax response with the paragraph to add.
    */
   public static function addMoreAjax(array $form, FormStateInterface $form_state) {
@@ -105,7 +105,7 @@ class ParagraphsFeatures {
   /**
    * Get 3rd party setting form for paragraphs features.
    *
-   * @param \Drupal\Core\Field\WidgetInterface $plugin
+   * @param WidgetInterface $plugin
    *   Widget plugin.
    * @param string $field_name
    *   Field name.
diff --git a/src/Plugin/CKEditorPlugin/SplitText.php b/src/Plugin/CKEditorPlugin/SplitText.php
index e745026..e74491f 100644
--- a/src/Plugin/CKEditorPlugin/SplitText.php
+++ b/src/Plugin/CKEditorPlugin/SplitText.php
@@ -49,7 +49,7 @@ class SplitText extends PluginBase implements CKEditorPluginInterface, CKEditorP
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'paragraphs_features') . '/js/plugins/splittext/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('paragraphs_features') . '/js/plugins/splittext/plugin.js';
   }
 
   /**
diff --git a/tests/src/FunctionalJavascript/ParagraphsFeaturesAddInBetweenTest.php b/tests/src/FunctionalJavascript/ParagraphsFeaturesAddInBetweenTest.php
index e51ebc6..2ed2c9e 100644
--- a/tests/src/FunctionalJavascript/ParagraphsFeaturesAddInBetweenTest.php
+++ b/tests/src/FunctionalJavascript/ParagraphsFeaturesAddInBetweenTest.php
@@ -64,9 +64,9 @@ class ParagraphsFeaturesAddInBetweenTest extends ParagraphsFeaturesJavascriptTes
     $page->uncheckField('fields[field_paragraphs][settings_edit_form][third_party_settings][paragraphs_features][add_in_between]');
     $this->assertSession()->assertWaitOnAjaxRequest();
 
-    $this->drupalPostForm(NULL, [], 'Update');
+    $this->submitForm([], 'Update');
     $this->assertSession()->assertWaitOnAjaxRequest();
-    $this->drupalPostForm(NULL, [], $this->t('Save'));
+    $this->submitForm([], $this->t('Save'));
 
     // Check that default add mode functionality is used.
     $this->drupalGet("node/add/$content_type");
@@ -81,9 +81,9 @@ class ParagraphsFeaturesAddInBetweenTest extends ParagraphsFeaturesJavascriptTes
     $page->checkField('fields[field_paragraphs][settings_edit_form][third_party_settings][paragraphs_features][add_in_between]');
     $page->fillField('fields[field_paragraphs][settings_edit_form][third_party_settings][paragraphs_features][add_in_between_link_count]', 0);
 
-    $this->drupalPostForm(NULL, [], 'Update');
+    $this->submitForm([], 'Update');
     $this->assertSession()->assertWaitOnAjaxRequest();
-    $this->drupalPostForm(NULL, [], $this->t('Save'));
+    $this->submitForm([], $this->t('Save'));
 
     // Check that add in between functionality is used.
     $this->drupalGet("node/add/$content_type");
@@ -143,9 +143,9 @@ class ParagraphsFeaturesAddInBetweenTest extends ParagraphsFeaturesJavascriptTes
     $page->pressButton('field_paragraphs_settings_edit');
     $this->assertSession()->assertWaitOnAjaxRequest();
     $page->uncheckField('fields[field_paragraphs][settings_edit_form][third_party_settings][paragraphs_features][add_in_between]');
-    $this->drupalPostForm(NULL, [], 'Update');
+    $this->submitForm([], 'Update');
     $this->assertSession()->assertWaitOnAjaxRequest();
-    $this->drupalPostForm(NULL, [], $this->t('Save'));
+    $this->submitForm([], $this->t('Save'));
 
     // Set modal add mode with add in between option for nested paragraph.
     $this->drupalGet("admin/structure/paragraphs_type/test_nested/form-display");
@@ -156,9 +156,9 @@ class ParagraphsFeaturesAddInBetweenTest extends ParagraphsFeaturesJavascriptTes
     $this->assertSession()->assertWaitOnAjaxRequest();
     $page->checkField('fields[field_paragraphs][settings_edit_form][third_party_settings][paragraphs_features][add_in_between]');
     $page->fillField('fields[field_paragraphs][settings_edit_form][third_party_settings][paragraphs_features][add_in_between_link_count]', 0);
-    $this->drupalPostForm(NULL, [], 'Update');
+    $this->submitForm([], 'Update');
     $this->assertSession()->assertWaitOnAjaxRequest();
-    $this->drupalPostForm(NULL, [], $this->t('Save'));
+    $this->submitForm([], $this->t('Save'));
 
     // Check that add in between functionality is not available for base
     // paragraphs and it's used for nested paragraph.
diff --git a/tests/src/FunctionalJavascript/ParagraphsFeaturesDeleteConfirmationTest.php b/tests/src/FunctionalJavascript/ParagraphsFeaturesDeleteConfirmationTest.php
index 2417e3d..1946c08 100644
--- a/tests/src/FunctionalJavascript/ParagraphsFeaturesDeleteConfirmationTest.php
+++ b/tests/src/FunctionalJavascript/ParagraphsFeaturesDeleteConfirmationTest.php
@@ -226,9 +226,9 @@ class ParagraphsFeaturesDeleteConfirmationTest extends ParagraphsFeaturesJavascr
 
     $action = "{$op}Field";
     $page->$action('fields[field_paragraphs][settings_edit_form][third_party_settings][paragraphs_features][delete_confirmation]');
-    $this->drupalPostForm(NULL, [], 'Update');
+    $this->submitForm([], 'Update');
     $this->assertSession()->assertWaitOnAjaxRequest();
-    $this->drupalPostForm(NULL, [], $this->t('Save'));
+    $this->submitForm([], $this->t('Save'));
   }
 
 }
diff --git a/tests/src/FunctionalJavascript/ParagraphsFeaturesExtendedParagraphsWidgetTest.php b/tests/src/FunctionalJavascript/ParagraphsFeaturesExtendedParagraphsWidgetTest.php
index da2675d..700feb9 100644
--- a/tests/src/FunctionalJavascript/ParagraphsFeaturesExtendedParagraphsWidgetTest.php
+++ b/tests/src/FunctionalJavascript/ParagraphsFeaturesExtendedParagraphsWidgetTest.php
@@ -47,10 +47,10 @@ class ParagraphsFeaturesExtendedParagraphsWidgetTest extends ParagraphsFeaturesJ
     $is_checked = $session->evaluateScript("document.querySelector('.paragraphs-features__add-in-between__option').checked");
     $this->assertEquals(TRUE, $is_checked, 'Checkbox should be checked.');
 
-    $this->drupalPostForm(NULL, [], 'Update');
+    $this->submitForm([], 'Update');
     $this->assertSession()->assertWaitOnAjaxRequest();
 
-    $this->drupalPostForm(NULL, [], $this->t('Save'));
+    $this->submitForm([], $this->t('Save'));
 
     // Check that add in between functionality is used.
     $this->drupalGet("node/add/$content_type");
diff --git a/tests/src/FunctionalJavascript/ParagraphsFeaturesJavascriptTestBase.php b/tests/src/FunctionalJavascript/ParagraphsFeaturesJavascriptTestBase.php
index e3e2f1c..6eb888b 100644
--- a/tests/src/FunctionalJavascript/ParagraphsFeaturesJavascriptTestBase.php
+++ b/tests/src/FunctionalJavascript/ParagraphsFeaturesJavascriptTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\paragraphs_features\FunctionalJavascript;
 
+use Behat\Mink\Exception\DriverException;
+use Behat\Mink\Exception\UnsupportedDriverActionException;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\editor\Entity\Editor;
@@ -49,7 +51,7 @@ abstract class ParagraphsFeaturesJavascriptTestBase extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     if ($theme = getenv('THEME')) {
@@ -217,8 +219,8 @@ abstract class ParagraphsFeaturesJavascriptTestBase extends WebDriverTestBase {
    * @param string|array $locator
    *   Selector locator.
    *
-   * @throws \Behat\Mink\Exception\DriverException
-   * @throws \Behat\Mink\Exception\UnsupportedDriverActionException
+   * @throws DriverException
+   * @throws UnsupportedDriverActionException
    */
   public function scrollClick($selector, $locator) {
     $this->scrollElementInView($selector, $locator);
diff --git a/tests/src/FunctionalJavascript/ParagraphsFeaturesSplitTextTest.php b/tests/src/FunctionalJavascript/ParagraphsFeaturesSplitTextTest.php
index dc0869a..dd184ca 100644
--- a/tests/src/FunctionalJavascript/ParagraphsFeaturesSplitTextTest.php
+++ b/tests/src/FunctionalJavascript/ParagraphsFeaturesSplitTextTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\paragraphs_features\FunctionalJavascript;
 
+use Behat\Mink\Exception\DriverException;
+use Behat\Mink\Exception\UnsupportedDriverActionException;
 /**
  * Tests the paragraph text split feature.
  *
@@ -20,8 +22,8 @@ class ParagraphsFeaturesSplitTextTest extends ParagraphsFeaturesJavascriptTestBa
    * @return string
    *   Returns CKEditor ID.
    *
-   * @throws \Behat\Mink\Exception\DriverException
-   * @throws \Behat\Mink\Exception\UnsupportedDriverActionException
+   * @throws DriverException
+   * @throws UnsupportedDriverActionException
    */
   protected function createNewTextParagraph($index, $text) {
     $session = $this->getSession();
@@ -88,9 +90,9 @@ class ParagraphsFeaturesSplitTextTest extends ParagraphsFeaturesJavascriptTestBa
     $is_checked = $session->evaluateScript("jQuery('.paragraphs-features__split-text__option').is(':checked')");
     $this->assertEquals(TRUE, $is_checked, 'Checkbox should be checked.');
 
-    $this->drupalPostForm(NULL, [], 'Update');
+    $this->submitForm([], 'Update');
     $this->assertSession()->assertWaitOnAjaxRequest();
-    $this->drupalPostForm(NULL, [], $this->t('Save'));
+    $this->submitForm([], $this->t('Save'));
 
     // Case 1 - simple text split.
     $paragraph_content_0 = '<p>Content that will be in the first paragraph after the split.</p>';
@@ -307,9 +309,9 @@ class ParagraphsFeaturesSplitTextTest extends ParagraphsFeaturesJavascriptTestBa
     $session->executeScript("jQuery('[name=\"fields[field_paragraphs][settings_edit_form][settings][autocollapse]\"]').trigger('change');");
     $this->assertSession()->assertWaitOnAjaxRequest();
 
-    $this->drupalPostForm(NULL, [], 'Update');
+    $this->submitForm([], 'Update');
     $this->assertSession()->assertWaitOnAjaxRequest();
-    $this->drupalPostForm(NULL, [], $this->t('Save'));
+    $this->submitForm([], $this->t('Save'));
 
     // 7.2 - Test that simple text split works with auto-collapse.
     $paragraph_content_0 = '<p>Content that will be in the first paragraph after the split.</p>';
