diff --git a/keycloak.module b/keycloak.module
index a6e19cc..3908f71 100644
--- a/keycloak.module
+++ b/keycloak.module
@@ -74,7 +74,7 @@ function keycloak_form_openid_connect_admin_settings_alter(array &$form, FormSta
  *
  * @param array $form
  *   An associative array containing the structure of the plugin form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  */
 function keycloak_form_openid_connect_admin_settings_validate(array &$form, FormStateInterface $form_state) {
@@ -111,7 +111,7 @@ function keycloak_form_openid_connect_admin_settings_validate(array &$form, Form
  *
  * @param array $form
  *   An associative array containing the structure of the plugin form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  */
 function keycloak_form_openid_connect_admin_settings_submit(array &$form, FormStateInterface $form_state) {
diff --git a/src/Controller/KeycloakController.php b/src/Controller/KeycloakController.php
index a4c371f..a8ca24d 100644
--- a/src/Controller/KeycloakController.php
+++ b/src/Controller/KeycloakController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\keycloak\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\keycloak\Service\KeycloakServiceInterface;
@@ -22,50 +23,50 @@ class KeycloakController extends ControllerBase {
   /**
    * The Keycloak service.
    *
-   * @var \Drupal\keycloak\Service\KeycloakServiceInterface
+   * @var KeycloakServiceInterface
    */
   protected $keycloak;
 
   /**
    * The OpenID Connect plug-in manager.
    *
-   * @var \Drupal\openid_connect\Plugin\OpenIDConnectClientManager
+   * @var OpenIDConnectClientManager
    */
   protected $pluginManager;
 
   /**
    * The OpenID Connect claims.
    *
-   * @var \Drupal\openid_connect\OpenIDConnectClaims
+   * @var OpenIDConnectClaims
    */
   protected $claims;
 
   /**
    * The request stack used to access request globals.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a KeycloakController object.
    *
-   * @param \Drupal\keycloak\Service\KeycloakServiceInterface $keycloak
+   * @param KeycloakServiceInterface $keycloak
    *   A Keycloak service instance.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   Account proxy for the currently logged-in user.
-   * @param \Drupal\openid_connect\Plugin\OpenIDConnectClientManager $plugin_manager
+   * @param OpenIDConnectClientManager $plugin_manager
    *   The OpenID Connect plug-in manager.
-   * @param \Drupal\openid_connect\OpenIDConnectClaims $claims
+   * @param OpenIDConnectClaims $claims
    *   The OpenID Connect claims.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(
@@ -118,7 +119,7 @@ class KeycloakController extends ControllerBase {
   /**
    * Log out the current user.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect to either Keycloak or the front page.
    */
   public function logout() {
diff --git a/src/EventSubscriber/KeycloakRequestSubscriber.php b/src/EventSubscriber/KeycloakRequestSubscriber.php
index 0dde5e1..2b7436c 100644
--- a/src/EventSubscriber/KeycloakRequestSubscriber.php
+++ b/src/EventSubscriber/KeycloakRequestSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\keycloak\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Path\PathMatcherInterface;
@@ -11,7 +12,6 @@ use Drupal\Core\Url;
 use Drupal\keycloak\Service\KeycloakServiceInterface;
 use Drupal\openid_connect\OpenIDConnectStateToken;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 /**
@@ -29,34 +29,34 @@ class KeycloakRequestSubscriber implements EventSubscriberInterface {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * A path processor manager for resolving the system path.
    *
-   * @var \Drupal\Core\PathProcessor\InboundPathProcessorInterface
+   * @var InboundPathProcessorInterface
    */
   protected $pathProcessor;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * Constructs a RedirectRequestSubscriber.
    *
-   * @param \Drupal\keycloak\Service\KeycloakServiceInterface $keycloak
+   * @param KeycloakServiceInterface $keycloak
    *   The Keycloak service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
-   * @param \Drupal\Core\PathProcessor\InboundPathProcessorInterface $path_processor
+   * @param InboundPathProcessorInterface $path_processor
    *   Inbound path processor manager.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
    */
   public function __construct(KeycloakServiceInterface $keycloak, LanguageManagerInterface $language_manager, InboundPathProcessorInterface $path_processor, PathMatcherInterface $path_matcher) {
@@ -69,10 +69,10 @@ class KeycloakRequestSubscriber implements EventSubscriberInterface {
   /**
    * Redirects keycloak logout requests to Keycloak.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The event to process.
    */
-  public function onKernelRequestCheckKeycloakRedirect(GetResponseEvent $event) {
+  public function onKernelRequestCheckKeycloakRedirect(RequestEvent $event) {
     // Whether Keycloak is enabled and configured for RP initiated
     // Single Sign-Out.
     if (!$this->keycloak->isKeycloakSignOutEnabled()) {
