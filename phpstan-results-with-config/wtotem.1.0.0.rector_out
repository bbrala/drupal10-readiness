modules/contrib/wtotem/src/Controller/WTotemAjaxController.php
modules/contrib/wtotem/src/Controller/WTotemController.php
modules/contrib/wtotem/src/EventSubscriber/WTotemSubscriber.php
modules/contrib/wtotem/src/Form/WTotemAVFilterForm.php
modules/contrib/wtotem/src/Form/WTotemLoginForm.php
modules/contrib/wtotem/src/Form/WTotemPortsForm.php
modules/contrib/wtotem/src/Form/WTotemReportsForm.php
modules/contrib/wtotem/src/Form/WTotemSettingsForm.php
modules/contrib/wtotem/src/Form/WTotemWafFilterForm.php
modules/contrib/wtotem/src/lib/Common/API.php
modules/contrib/wtotem/src/lib/Common/AgentManager.php
modules/contrib/wtotem/src/lib/Common/App.php
modules/contrib/wtotem/src/lib/Common/Helper.php
modules/contrib/wtotem/wtotem.install
modules/contrib/wtotem/wtotem.module
modules/contrib/wtotem/wtotem.theme.inc

9 files with changes
====================

1) modules/contrib/wtotem/wtotem.module:11

    ---------- begin diff ----------
@@ @@
  * Defining constants.
  */
 if (!defined('WTOTEM_MODULE_PATH')) {
-  define('WTOTEM_MODULE_PATH', '/' . drupal_get_path('module', 'wtotem'));
+  define('WTOTEM_MODULE_PATH', '/' . \Drupal::service('extension.list.module')->getPath('wtotem'));
 }

 if (!defined('WTOTEM_ROOT_PATH')) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


2) modules/contrib/wtotem/src/lib/Common/App.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wtotem\lib\Common;

+use Drupal\Core\Config\Config;
 /**
  * WebTotem App class.
  */
@@ @@
   /**
    * Returns a mutable configuration object for a given name.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   A configuration object.
    */
   protected static function config() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/wtotem/src/Form/WTotemWafFilterForm.php:78

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function dateFilter(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/wtotem/src/Form/WTotemSettingsForm.php:503

    ---------- begin diff ----------
@@ @@
   /**
    * Toggle WAF module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleModuleWaf() {
@@ @@
   /**
    * Toggle AV module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleModuleAv() {
@@ @@
   /**
    * Toggle server status module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleModuleSs() {
@@ @@
   /**
    * Toggle WA module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleModuleWa() {
@@ @@
   /**
    * Toggle deface module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleModuleDc() {
@@ @@
   /**
    * Toggle reputation module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleModuleRc() {
@@ @@
   /**
    * Toggle port scanner module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleModulePs() {
@@ @@
   /**
    * Toggle technologies module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleModuleCms() {
@@ @@
   /**
    * Toggle WA notification.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleNotificationWa() {
@@ @@
   /**
    * Toggle AV notification.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleNotificationAv() {
@@ @@
   /**
    * Toggle deface notification.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleNotificationDc() {
@@ @@
   /**
    * Toggle reputation notification.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleNotificationRc() {
@@ @@
   /**
    * Toggle port scanner notification.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleNotificationPs() {
@@ @@
   /**
    * Toggle WAF notification.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxToggleNotificationWaf() {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxSubmitAllowIp(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxSubmitDenyIp(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxSubmitAllowUrl(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxSubmitCallback(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxSubmitIp(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/wtotem/src/Form/WTotemReportsForm.php:34

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/wtotem/src/Form/WTotemAVFilterForm.php:83

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxFilter(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/wtotem/src/EventSubscriber/WTotemSubscriber.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
    */
   public function __construct(AccountInterface $currentUser) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/wtotem/src/Controller/WTotemController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wtotem\Controller;

+use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\Core\Form\EnforcedResponseException;
+use Drupal\Core\Form\FormAjaxException;
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
   /**
    * Dashboard page.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   Returns a render array.
    *
-   * @throws \Drupal\Core\Form\EnforcedResponseException
-   * @throws \Drupal\Core\Form\FormAjaxException
+   * @throws EnforcedResponseException
+   * @throws FormAjaxException
    */
   public function dashboard() {

@@ @@
   /**
    * Firewall page.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   Returns a render array.
    *
-   * @throws \Drupal\Core\Form\EnforcedResponseException
-   * @throws \Drupal\Core\Form\FormAjaxException
+   * @throws EnforcedResponseException
+   * @throws FormAjaxException
    */
   public function firewall() {

@@ @@
   /**
    * Antivirus page.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   Returns a render array.
    *
-   * @throws \Drupal\Core\Form\EnforcedResponseException
-   * @throws \Drupal\Core\Form\FormAjaxException
+   * @throws EnforcedResponseException
+   * @throws FormAjaxException
    */
   public function antivirus() {

@@ @@
   /**
    * Reports page.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   Returns a render array.
    *
-   * @throws \Drupal\Core\Form\EnforcedResponseException
-   * @throws \Drupal\Core\Form\FormAjaxException
+   * @throws EnforcedResponseException
+   * @throws FormAjaxException
    */
   public function reports() {

@@ @@
   /**
    * Information page.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   Returns a render array.
    *
-   * @throws \Drupal\Core\Form\EnforcedResponseException
-   * @throws \Drupal\Core\Form\FormAjaxException
+   * @throws EnforcedResponseException
+   * @throws FormAjaxException
    */
   public function information() {

@@ @@
   /**
    * Checks whether the user has activated the module using the API key.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/wtotem/src/Controller/WTotemAjaxController.php:27

    ---------- begin diff ----------
@@ @@
    * @param int|array $days
    *   Requested period.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ajaxChart($name, $days = 7) {
@@ @@
    * @param string $name
    *   Service name.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function lazyLoad($name) {
@@ @@
    * @param int $port
    *   Port by the user.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function ignorePorts($action, $port) {
@@ @@
    * @param string $param
    *   File id or url.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function quarantine($action, $param) {
@@ @@
    * @param string $action
    *   Action to be performed.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function antivirus($action) {
@@ @@
   /**
    * Changing the theme mode.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function changeThemeMode() {
@@ @@
    * @param string $offset
    *   Time zone offset from user browser.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function userTimeZone($offset) {
@@ @@
    * @param string $id
    *   Id assigned to the report.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function reports($action, $id) {
@@ @@
    * First delete all agent files,
    * folders and records in the database, then install Agents.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function reinstallAgents() {
@@ @@
   /**
    * The process of installing agents (WAF, AV) on the main page.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function agentsInstallationProgress() {
@@ @@
    * @param string $id
    *   Id assigned to the ip or url address.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function remove($action, $id) {
@@ @@
   /**
    * Updating the page data in the specified time interval.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function reloadPage($page) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 9 files have been changed by Rector                                       

