modules/contrib/views_infinite_scroll/src/EventSubscriber/AjaxResponseSubscriber.php
modules/contrib/views_infinite_scroll/src/Plugin/views/pager/InfiniteScroll.php
modules/contrib/views_infinite_scroll/tests/src/Functional/IntegrationSmokeTest.php
modules/contrib/views_infinite_scroll/tests/src/FunctionalJavascript/InfiniteScrollTest.php
modules/contrib/views_infinite_scroll/views_infinite_scroll.module

2 files with changes
====================

1) modules/contrib/views_infinite_scroll/views_infinite_scroll.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Pager\PagerManagerInterface;
 /**
  * @file
  * Module file for views_infinite_scroll.
@@ @@
 function views_infinite_scroll_preprocess_views_infinite_scroll_pager(&$vars) {
   // The important parts we needed lifted wholesale from
   // template_preprocess_views_mini_pager().
-  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+  /** @var PagerManagerInterface $pager_manager */
   $pager_manager = \Drupal::service('pager.manager');
   $element = $vars['element'];
   $parameters = $vars['parameters'];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/views_infinite_scroll/src/EventSubscriber/AjaxResponseSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\views_infinite_scroll\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\views\Ajax\ViewAjaxResponse;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Renders the ajax commands right before preparing the result.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   The response event, which contains the possible AjaxResponse object.
    */
-  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
+  public function onResponse(ResponseEvent $event) {
     $response = $event->getResponse();

     // Only alter views ajax responses.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 2 files have been changed by Rector                                       

