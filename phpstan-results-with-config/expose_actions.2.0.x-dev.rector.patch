diff --git a/expose_actions.module b/expose_actions.module
index 18bdc82..9810244 100644
--- a/expose_actions.module
+++ b/expose_actions.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\system\Entity\Action;
 use Drupal\expose_actions\Plugin\Menu\LocalAction\ExposeAction;
 
 /**
@@ -7,11 +10,11 @@ use Drupal\expose_actions\Plugin\Menu\LocalAction\ExposeAction;
  *
  * @param $local_actions
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function expose_actions_menu_local_actions_alter(&$local_actions) {
-  /** @var \Drupal\system\Entity\Action $action */
+  /** @var Action $action */
   foreach (Drupal::entityTypeManager()->getStorage('action')->loadMultiple() as $id => $action) {
     if ($action->status()) {
       $def = $action->getPluginDefinition();
diff --git a/src/Form/Confirm.php b/src/Form/Confirm.php
index d911051..bbbcf82 100644
--- a/src/Form/Confirm.php
+++ b/src/Form/Confirm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\expose_actions\Form;
 
+use Drupal\System\Entity\Action;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Access\AccessResult;
@@ -20,24 +23,24 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class Confirm extends ConfirmFormBase {
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\System\Entity\Action
+   * @var Action
    */
   protected $action;
 
   /**
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;
 
   /**
    * Confirm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
     $this->entityTypeManager = $entity_type_manager;
@@ -63,8 +66,8 @@ class Confirm extends ConfirmFormBase {
   /**
    * @param string|null $action_id
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function loadAction($action_id = NULL): void {
     if ($action_id !== NULL && $this->action === NULL) {
@@ -77,8 +80,8 @@ class Confirm extends ConfirmFormBase {
    * @param string|null $entity_type
    * @param int|null $entity_id
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function loadEntity($entity_type = NULL, $entity_id = NULL): void {
     if ($entity_type !== NULL && $entity_id !== NULL && $this->entity === NULL) {
@@ -90,17 +93,17 @@ class Confirm extends ConfirmFormBase {
   /**
    * Check whether the user has 'administer' or 'overview' permission.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
    * @param string $action
    * @param string $entity_type
    * @param int $entity_id
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function checkAccess(AccountInterface $account, $action, $entity_type, $entity_id): AccessResultInterface {
     $this->loadAction($action);
@@ -138,7 +141,7 @@ class Confirm extends ConfirmFormBase {
 
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function getCancelUrl(): Url {
     return $this->entity->toUrl();
@@ -146,7 +149,7 @@ class Confirm extends ConfirmFormBase {
 
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
     $this->action->execute([$this->entity]);
diff --git a/src/Permissions.php b/src/Permissions.php
index 7c9c2fa..f346b2d 100644
--- a/src/Permissions.php
+++ b/src/Permissions.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\expose_actions;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\system\Entity\Action;
 use Drupal;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
@@ -15,12 +18,12 @@ class Permissions {
 
   /**
    * @return array
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function permissions(): array {
     $permissions = [];
-    /** @var \Drupal\system\Entity\Action $action */
+    /** @var Action $action */
     foreach (Drupal::entityTypeManager()->getStorage('action')->loadMultiple() as $id => $action) {
       $permissions['access exposed action ' . $id] = [
         'title' => $this->t('Use the exposed action <a href="@url">@label</a>', ['@url' => $action->toUrl()->toString(), '@label' => $action->label()]),
diff --git a/src/Plugin/Menu/LocalAction/ExposeAction.php b/src/Plugin/Menu/LocalAction/ExposeAction.php
index 5d0a376..bc24143 100644
--- a/src/Plugin/Menu/LocalAction/ExposeAction.php
+++ b/src/Plugin/Menu/LocalAction/ExposeAction.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\expose_actions\Plugin\Menu\LocalAction;
 
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Menu\LocalActionDefault;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ -10,7 +11,7 @@ class ExposeAction extends LocalActionDefault {
 
   public function getRouteParameters(RouteMatchInterface $route_match) {
     $parameters = parent::getRouteParameters($route_match);
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     foreach ($route_match->getParameters()->all() as $paramater) {
       if ($paramater instanceof EntityInterface) {
         $parameters['entity_type'] = $paramater->getEntityTypeId();
