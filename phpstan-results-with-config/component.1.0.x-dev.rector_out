modules/contrib/component/component.module
modules/contrib/component/src/ComponentDiscovery.php
modules/contrib/component/src/ComponentDiscoveryException.php
modules/contrib/component/src/ComponentDiscoveryInterface.php
modules/contrib/component/src/Form/ComponentAdminForm.php
modules/contrib/component/src/Plugin/Block/ComponentBlock.php
modules/contrib/component/src/Plugin/Derivative/ComponentBlockDeriver.php
modules/contrib/component/src/RecursiveComponentFilterIterator.php

4 files with changes
====================

1) modules/contrib/component/src/Plugin/Derivative/ComponentBlockDeriver.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The component discovery service.
    *
-   * @var \Drupal\Component\ComponentDiscoveryInterface
+   * @var ComponentDiscoveryInterface
    */
   protected $componentDiscovery;

@@ @@
   /**
    * ComponentBlockDeriver constructor.
    *
-   * @param \Drupal\Component\ComponentDiscoveryInterface $component_discovery
+   * @param ComponentDiscoveryInterface $component_discovery
    *   The component discovery service.
    */
   public function __construct(ComponentDiscoveryInterface $component_discovery) {
@@ @@
    * @param array $contexts
    *   Contexts as defined in component label.
    *
-   * @return \Drupal\Core\Plugin\Context\ContextDefinition[]
+   * @return ContextDefinition[]
    *   Array of context to be used by block module
    *
    * @todo where is this defined in block module
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/component/src/Plugin/Block/ComponentBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Component\Plugin\Block;

+use Drupal\Core\Field\FieldItemListInterface;
+use Drupal\Component\Plugin\Context\ContextInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Entity\Plugin\DataType\EntityAdapter;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Build settings form configuration settings form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state array.
    *
    * @return array
@@ @@
    *
    * @param array $configuration
    *   The configuration array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state array.
    *
    * @return array
@@ @@
    *
    * @todo
    */
-
   /**
    * Add serialized entity to the JS Contexts.
    *
-   * @param \Drupal\Core\Entity\Plugin\DataType\EntityAdapter $data
+   * @param EntityAdapter $data
    *   The entity to serialize.
    * @param array $js_contexts
    *   The full array of JS contexts.
@@ @@
       return;
     }
     foreach ($entity as $field_name => $field) {
-      /** @var \Drupal\Core\Field\FieldItemListInterface $field */
+      /** @var FieldItemListInterface $field */
       $field_access = $field->access('view', NULL, TRUE);

       // @todo Used addCacheableDependency($field_access);
@@ @@
   /**
    * Get an array of serialized JS contexts.
    *
-   * @param \Drupal\Component\Plugin\Context\ContextInterface[] $contexts
+   * @param ContextInterface[] $contexts
    *   The contexts to serialize.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/component/src/ComponentDiscoveryInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Component;

+use Drupal\Core\Extension\Extension;
 /**
  * Defines the interface for services which discover front-end components.
  */
@@ @@
   /**
    * Find all available front-end components.
    *
-   * @return \Drupal\Core\Extension\Extension[]
+   * @return Extension[]
    *   The discovered components.
    */
   public function getComponents();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/component/src/ComponentDiscovery.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
    *
    * @param string $root
    *   The root web directory of the Drupal installation.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct($root, ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler, LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 4 files have been changed by Rector                                       

