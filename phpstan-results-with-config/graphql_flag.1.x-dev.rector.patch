diff --git a/src/Plugin/GraphQL/Fields/EntityFlagging.php b/src/Plugin/GraphQL/Fields/EntityFlagging.php
index 65b512a..e9986c6 100644
--- a/src/Plugin/GraphQL/Fields/EntityFlagging.php
+++ b/src/Plugin/GraphQL/Fields/EntityFlagging.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\graphql_flag\Plugin\GraphQL\Fields;
 
+use Drupal\flag\FlagServiceInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\flag\FlagInterface;
@@ -32,7 +33,7 @@ class EntityFlagging extends FieldPluginBase implements ContainerFactoryPluginIn
   /**
    * Drupal\flag\FlagServiceInterface definition.
    *
-   * @var \Drupal\flag\FlagServiceInterface
+   * @var FlagServiceInterface
    */
   protected $flag;
 
diff --git a/src/Plugin/GraphQL/Fields/EntityFlaggingCount.php b/src/Plugin/GraphQL/Fields/EntityFlaggingCount.php
index 837254c..8cad216 100644
--- a/src/Plugin/GraphQL/Fields/EntityFlaggingCount.php
+++ b/src/Plugin/GraphQL/Fields/EntityFlaggingCount.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\graphql_flag\Plugin\GraphQL\Fields;
 
+use Drupal\flag\FlagServiceInterface;
+use Drupal\flag\FlagCountManagerInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\flag\FlagInterface;
@@ -34,14 +36,14 @@ class EntityFlaggingCount extends FieldPluginBase implements ContainerFactoryPlu
   /**
    * Drupal\flag\FlagServiceInterface definition.
    *
-   * @var \Drupal\flag\FlagServiceInterface
+   * @var FlagServiceInterface
    */
   protected $flag;
 
   /**
    * Drupal\flag\FlagCountManagerInterface definition.
    *
-   * @var \Drupal\flag\FlagCountManagerInterface
+   * @var FlagCountManagerInterface
    */
   protected $flagCount;
 
diff --git a/src/Plugin/GraphQL/Fields/UserFlagging.php b/src/Plugin/GraphQL/Fields/UserFlagging.php
index 720b5a4..bd3146a 100644
--- a/src/Plugin/GraphQL/Fields/UserFlagging.php
+++ b/src/Plugin/GraphQL/Fields/UserFlagging.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\graphql_flag\Plugin\GraphQL\Fields;
 
+use Drupal\flag\FlagServiceInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\flag\FlagInterface;
 use Drupal\graphql\GraphQL\Execution\ResolveContext;
@@ -34,7 +35,7 @@ class UserFlagging extends FieldPluginBase implements ContainerFactoryPluginInte
   /**
    * Drupal\flag\FlagServiceInterface definition.
    *
-   * @var \Drupal\flag\FlagServiceInterface
+   * @var FlagServiceInterface
    */
   protected $flag;
 
diff --git a/src/Plugin/GraphQL/Mutations/Flag.php b/src/Plugin/GraphQL/Mutations/Flag.php
index 1fa7d8b..6f65548 100644
--- a/src/Plugin/GraphQL/Mutations/Flag.php
+++ b/src/Plugin/GraphQL/Mutations/Flag.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\graphql_flag\Plugin\GraphQL\Mutations;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\flag\FlaggingInterface;
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -36,21 +41,21 @@ class Flag extends MutationPluginBase implements ContainerFactoryPluginInterface
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The Flag service.
    *
-   * @var \Drupal\flag\FlagServiceInterface
+   * @var FlagServiceInterface
    */
   protected $flagService;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -88,11 +93,11 @@ class Flag extends MutationPluginBase implements ContainerFactoryPluginInterface
   /**
    * Flags the given entity.
    *
-   * @param \Drupal\flag\FlagInterface $flag
+   * @param FlagInterface $flag
    *   The flag entity.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to flag.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (optional) The account of the user flagging the entity. If not given,
    *   the current user is used.
    * @param string $session_id
@@ -100,12 +105,12 @@ class Flag extends MutationPluginBase implements ContainerFactoryPluginInterface
    *   anonymous, then this can also be omitted to use the current session.
    *   to identify an anonymous user.
    *
-   * @return \Drupal\graphql_core\GraphQL\EntityCrudOutputWrapper
+   * @return EntityCrudOutputWrapper
    *   Entity crud output wrapper.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   private function flag(FlagInterface $flag, EntityInterface $entity, AccountInterface $account = NULL, $session_id = NULL) {
     // The flag() method cannot be reused here as it returns the entity
@@ -138,7 +143,7 @@ class Flag extends MutationPluginBase implements ContainerFactoryPluginInterface
       );
     }
 
-    /** @var \Drupal\flag\FlaggingInterface $flaggingEntity */
+    /** @var FlaggingInterface $flaggingEntity */
     $flaggingEntity = $this->entityTypeManager->getStorage('flagging')
       ->create([
         'uid' => $account->id(),
@@ -158,11 +163,11 @@ class Flag extends MutationPluginBase implements ContainerFactoryPluginInterface
   /**
    * Unflags the given entity.
    *
-   * @param \Drupal\flag\FlagInterface $flag
+   * @param FlagInterface $flag
    *   The flag being unflagged.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to unflag.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (optional) The account of the user that created the flagging. Defaults
    *   to the current user.
    * @param string $session_id
@@ -171,10 +176,10 @@ class Flag extends MutationPluginBase implements ContainerFactoryPluginInterface
    *   and the current user is anonymous then the current session_id will be
    *   used.
    *
-   * @return \Drupal\graphql_core\GraphQL\EntityCrudOutputWrapper
+   * @return EntityCrudOutputWrapper
    *   Entity crud output wrapper.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function unflag(FlagInterface $flag, EntityInterface $entity, AccountInterface $account = NULL, $session_id = NULL) {
     $bundles = $flag->getBundles();
@@ -195,7 +200,7 @@ class Flag extends MutationPluginBase implements ContainerFactoryPluginInterface
         [$this->t('The flag does not apply to the bundle of the entity.')]
       );
     }
-    /** @var \Drupal\flag\FlaggingInterface $flaggingEntity */
+    /** @var FlaggingInterface $flaggingEntity */
     $flaggingEntity = $this->flagService->getFlagging($flag, $entity, $account, $session_id);
     // Check whether there is an existing flagging for the combination of flag,
     // entity, and user.
@@ -250,11 +255,11 @@ class Flag extends MutationPluginBase implements ContainerFactoryPluginInterface
     }
 
     try {
-      /** @var \Drupal\flag\FlagInterface $flag */
+      /** @var FlagInterface $flag */
       $flag = $this->entityTypeManager->getStorage('flag')->load($flagId);
-      /** @var \Drupal\Core\Entity\EntityInterface $entity */
+      /** @var EntityInterface $entity */
       $entity = $this->entityTypeManager->getStorage($entityType)->load($entityId);
-      /** @var \Drupal\user\UserInterface $account */
+      /** @var UserInterface $account */
       $account = $this->entityTypeManager->getStorage('user')->load($userId);
 
       // Introducing some of the FlagService logic here so errors can be
