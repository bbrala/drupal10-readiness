diff --git a/ga_login.install b/ga_login.install
index 5353251..e8b12c4 100644
--- a/ga_login.install
+++ b/ga_login.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Config\Config;
+use Drupal\user\UserData;
 /**
  * @file
  * Installation related functions for GA Login module.
@@ -54,7 +56,7 @@ function ga_login_update_8001() {
  * Update plugin names from tfa prefix to ga_login.
  */
 function ga_login_update_8002() {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::configFactory()->getEditable('tfa.settings');
 
   // Update default_validation_plugin.
@@ -97,7 +99,7 @@ function ga_login_update_8002() {
  * Update plugin names from tfa prefix to ga_login in users_data.
  */
 function ga_login_update_8003(&$sandbox) {
-  /** @var \Drupal\user\UserData $user_data */
+  /** @var UserData $user_data */
   $user_data = \Drupal::service('user.data');
   $tfa_settings = $user_data->get('tfa', NULL, 'tfa_user_settings');
 
diff --git a/src/Plugin/TfaSetup/GALoginHotpSetup.php b/src/Plugin/TfaSetup/GALoginHotpSetup.php
index 1a04a6b..ec8b238 100644
--- a/src/Plugin/TfaSetup/GALoginHotpSetup.php
+++ b/src/Plugin/TfaSetup/GALoginHotpSetup.php
@@ -177,7 +177,7 @@ class GALoginHotpSetup extends GALoginHotpValidation implements TfaSetupInterfac
    *   URL encoded string.
    */
   protected function accountName() {
-    /** @var \Drupal\user\Entity\User $account */
+    /** @var User $account */
     $account = User::load($this->configuration['uid']);
     $prefix = $this->siteNamePrefix ? preg_replace('@[^a-z0-9-]+@', '-', strtolower(\Drupal::config('system.site')->get('name'))) : $this->namePrefix;
     return urlencode($prefix . '-' . $account->getAccountName());
diff --git a/src/Plugin/TfaSetup/GALoginTotpSetup.php b/src/Plugin/TfaSetup/GALoginTotpSetup.php
index 01c192c..2af38f0 100644
--- a/src/Plugin/TfaSetup/GALoginTotpSetup.php
+++ b/src/Plugin/TfaSetup/GALoginTotpSetup.php
@@ -173,7 +173,7 @@ class GALoginTotpSetup extends GALoginTotpValidation implements TfaSetupInterfac
    *   URL encoded string.
    */
   protected function accountName() {
-    /** @var \Drupal\user\Entity\User $account */
+    /** @var User $account */
     $account = User::load($this->configuration['uid']);
     $prefix = $this->siteNamePrefix ? preg_replace('@[^a-z0-9-]+@', '-', strtolower(\Drupal::config('system.site')->get('name'))) : $this->namePrefix;
     return urlencode($prefix . '-' . $account->getAccountName());
diff --git a/src/Plugin/TfaValidation/GALoginHotpValidation.php b/src/Plugin/TfaValidation/GALoginHotpValidation.php
index 819fb79..94563fc 100644
--- a/src/Plugin/TfaValidation/GALoginHotpValidation.php
+++ b/src/Plugin/TfaValidation/GALoginHotpValidation.php
@@ -76,7 +76,7 @@ class GALoginHotpValidation extends TfaBasePlugin implements TfaValidationInterf
   /**
    * The Datetime service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
@@ -157,7 +157,7 @@ class GALoginHotpValidation extends TfaBasePlugin implements TfaValidationInterf
   /**
    * The configuration form for this validation plugin.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   Config object for tfa settings.
    * @param array $state
    *   Form state array determines if this form should be shown.
diff --git a/src/Plugin/TfaValidation/GALoginTotpValidation.php b/src/Plugin/TfaValidation/GALoginTotpValidation.php
index e45a49b..89ef4b1 100644
--- a/src/Plugin/TfaValidation/GALoginTotpValidation.php
+++ b/src/Plugin/TfaValidation/GALoginTotpValidation.php
@@ -76,7 +76,7 @@ class GALoginTotpValidation extends TfaBasePlugin implements TfaValidationInterf
   /**
    * The Datetime service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
@@ -161,7 +161,7 @@ class GALoginTotpValidation extends TfaBasePlugin implements TfaValidationInterf
   /**
    * The configuration form for this validation plugin.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   Config object for tfa settings.
    * @param array $state
    *   Form state array determines if this form should be shown.
diff --git a/tests/src/Functional/GALoginHotpSetupPluginTest.php b/tests/src/Functional/GALoginHotpSetupPluginTest.php
index 4992d85..2194d32 100644
--- a/tests/src/Functional/GALoginHotpSetupPluginTest.php
+++ b/tests/src/Functional/GALoginHotpSetupPluginTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\ga_login\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\ga_login\Plugin\TfaSetup\GALoginHotpSetup;
 use Drupal\Tests\tfa\Functional\TfaTestBase;
 use ParagonIE\ConstantTime\Encoding;
 
@@ -17,7 +19,7 @@ class GALoginHotpSetupPluginTest extends TfaTestBase {
   /**
    * Non-admin user account. Standard tfa user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   public $userAccount;
 
@@ -31,7 +33,7 @@ class GALoginHotpSetupPluginTest extends TfaTestBase {
   /**
    * Instance of the setup plugin for the $validationPluginId.
    *
-   * @var \Drupal\ga_login\Plugin\TfaSetup\GALoginHotpSetup
+   * @var GALoginHotpSetup
    */
   public $setupPlugin;
 
@@ -84,7 +86,7 @@ class GALoginHotpSetupPluginTest extends TfaTestBase {
     $edit = [
       'current_pass' => $this->userAccount->passRaw,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Confirm');
+    $this->submitForm($edit, 'Confirm');
     $assert->statusCodeEquals(200);
     $assert->pageTextContains('Application verification code');
 
@@ -102,7 +104,7 @@ class GALoginHotpSetupPluginTest extends TfaTestBase {
     $edit = [
       'code' => substr(str_shuffle('1234567890'), 0, 6),
     ];
-    $this->drupalPostForm(NULL, $edit, 'Verify and save');
+    $this->submitForm($edit, 'Verify and save');
     $assert->statusCodeEquals(200);
     $assert->pageTextContains('Invalid application code. Please try again.');
 
@@ -110,7 +112,7 @@ class GALoginHotpSetupPluginTest extends TfaTestBase {
     $edit = [
       'code' => $this->setupPlugin->auth->otp->hotp(Encoding::base32DecodeUpper($seed), 1),
     ];
-    $this->drupalPostForm(NULL, $edit, 'Verify and save');
+    $this->submitForm($edit, 'Verify and save');
     $assert->statusCodeEquals(200);
 
     $assert->linkExists('Disable TFA');
