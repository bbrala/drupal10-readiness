diff --git a/responsive_menu.module b/responsive_menu.module
index 913c41f..4287a79 100644
--- a/responsive_menu.module
+++ b/responsive_menu.module
@@ -21,9 +21,9 @@ define('RESPONSIVE_MENU_BREAKPOINT_FILENAME', '/responsive_menu_breakpoint.css')
 function responsive_menu_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     case 'responsive_menu.settings':
-      $readme = Link::fromTextAndUrl('README.md', Url::fromUri('base:' . drupal_get_path('module', 'responsive_menu') . '/README.md'))->toRenderable();
+      $readme = Link::fromTextAndUrl('README.md', Url::fromUri('base:' . \Drupal::service('extension.list.module')->getPath('responsive_menu') . '/README.md'))->toRenderable();
       return '<p>' . t('3rd party libraries are required to enable some of the features. See the @readme file for more information about where to download and place them.', [
-        '@readme' => render($readme),
+        '@readme' => \Drupal::service('renderer')->render($readme),
       ]) . '</p><p>' . t("At a minimum you need to place the 'Responsive menu mobile icon' block in a region. If you want to display a horizontal menu at a specified breakpoint then you also need to place the 'Horizontal menu' block, although this is optional.") . '</p>';
   }
 }
@@ -355,7 +355,7 @@ function responsive_menu_assign_attributes_to_item(array &$item) {
 /**
  * Determines whether the flyleft menu link attribute has been set.
  *
- * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link_content_plugin
+ * @param MenuLinkInterface $menu_link_content_plugin
  *   The menu link content plugin.
  *
  * @return bool
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 8fe819f..d17855d 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\responsive_menu\Form;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\system\MenuInterface;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -25,7 +29,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    * @noinspection PhpUnnecessaryFullyQualifiedNameInspection
    */
   protected $entityTypeManager;
@@ -33,7 +37,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Stored configuration for the module.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    * @noinspection PhpFullyQualifiedNameUsageInspection
    */
   protected $config;
@@ -392,15 +396,15 @@ class SettingsForm extends ConfigFormBase {
    * @return array
    *   Keys are menu names (ids) values are the menu labels.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    *
    * @noinspection PhpFullyQualifiedNameUsageInspection
    */
   protected function getMenuOptions(array $menu_names = NULL) {
     $menus = $this->entityTypeManager->getStorage('menu')->loadMultiple($menu_names);
     $options = [];
-    /** @var \Drupal\system\MenuInterface[] $menus */
+    /** @var MenuInterface[] $menus */
     foreach ($menus as $menu) {
       $options[$menu->id()] = $menu->label();
     }
diff --git a/src/Plugin/Block/HorizontalMenu.php b/src/Plugin/Block/HorizontalMenu.php
index d459a81..46dafec 100644
--- a/src/Plugin/Block/HorizontalMenu.php
+++ b/src/Plugin/Block/HorizontalMenu.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\responsive_menu\Plugin\Block;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Menu\MenuActiveTrailInterface;
@@ -24,35 +25,35 @@ class HorizontalMenu extends BlockBase implements ContainerFactoryPluginInterfac
   /**
    * The menu link tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuTree;
 
   /**
    * The active menu trail service.
    *
-   * @var \Drupal\Core\Menu\MenuActiveTrailInterface
+   * @var MenuActiveTrailInterface
    */
   protected $menuActiveTrail;
 
   /**
    * Configuration Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Stored configuration for the module.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
diff --git a/tests/modules/responsive_menu_test/responsive_menu_test.install b/tests/modules/responsive_menu_test/responsive_menu_test.install
index 30f91d8..c6e853c 100644
--- a/tests/modules/responsive_menu_test/responsive_menu_test.install
+++ b/tests/modules/responsive_menu_test/responsive_menu_test.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityStorageException;
 /**
  * @file
  * Install file for responsive_menu_test module.
@@ -14,7 +15,7 @@ use Drupal\node\Entity\Node;
 /**
  * Implements hook_install().
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  *
  * @noinspection PhpFullyQualifiedNameUsageInspection
  */
@@ -118,7 +119,7 @@ function responsive_menu_test_install() {
  * @param array $node_data
  *   An array of data for the new node.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  *
  * @noinspection PhpFullyQualifiedNameUsageInspection
  */
diff --git a/tests/src/Functional/ResponsiveMenuAdminTest.php b/tests/src/Functional/ResponsiveMenuAdminTest.php
index e10fe7d..dda3f9b 100644
--- a/tests/src/Functional/ResponsiveMenuAdminTest.php
+++ b/tests/src/Functional/ResponsiveMenuAdminTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\responsive_menu\Functional;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -43,7 +44,7 @@ class ResponsiveMenuAdminTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setUp(): void {
     parent::setUp();
diff --git a/tests/src/Functional/ResponsiveMenuHooks.php b/tests/src/Functional/ResponsiveMenuHooks.php
index bf36a9c..8bc7a62 100644
--- a/tests/src/Functional/ResponsiveMenuHooks.php
+++ b/tests/src/Functional/ResponsiveMenuHooks.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\responsive_menu\Functional;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -43,7 +44,7 @@ class ResponsiveMenuHooks extends BrowserTestBase {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setUp(): void {
     parent::setUp();
diff --git a/tests/src/Functional/ResponsiveMenuTest.php b/tests/src/Functional/ResponsiveMenuTest.php
index 390a84b..8a294ba 100644
--- a/tests/src/Functional/ResponsiveMenuTest.php
+++ b/tests/src/Functional/ResponsiveMenuTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\responsive_menu\Functional;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -42,7 +43,7 @@ class ResponsiveMenuTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setUp(): void {
     parent::setUp();
