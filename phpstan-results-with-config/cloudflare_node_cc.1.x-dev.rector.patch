diff --git a/cloudflare_node_cc.module b/cloudflare_node_cc.module
index 068fa38..5d8bf92 100644
--- a/cloudflare_node_cc.module
+++ b/cloudflare_node_cc.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\node\Entity\Node;
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\cloudflare_node_cc\CloudflareService;
 /**
  * @file
  * Contains cloudflare_node_cc.module.
@@ -33,11 +36,11 @@ function cloudflare_node_cc_help(string $route_name, RouteMatchInterface $route_
  * Implements hook_form_alter().
  *
  * @param array $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  * @param string $form_id
  */
 function cloudflare_node_cc_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var Drupal\node\Entity\Node $entity */
+  /** @var Node $entity */
   if ($form_state->getFormObject() && $entity = $form_state->getFormObject()->getEntity()) {
     $type = $entity->getEntityTypeId();
     $bundle = $entity->bundle();
@@ -59,15 +62,15 @@ function cloudflare_node_cc_form_node_form_alter(&$form, FormStateInterface $for
  * Purge Entity Cloudflare Cache by Entity/Node Alias/Url.
  *
  * @param array $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *
- * @throws \Drupal\Core\Entity\EntityMalformedException
+ * @throws EntityMalformedException
  */
 function _cloudflare_node_cc_purge_node(&$form, FormStateInterface $form_state) {
-  /** @var Drupal\node\Entity\Node $entity */
+  /** @var Node $entity */
   if ($form_state->getFormObject() && $entity = $form_state->getFormObject()->getEntity()) {
     $messenger = \Drupal::messenger();
-    /** @var \Drupal\cloudflare_node_cc\CloudflareService $cloudflareService */
+    /** @var CloudflareService $cloudflareService */
     $cloudflareService = \Drupal::service('cloudflare_node_cc.cloudflare_service');
     if ($cloudflareService) {
       // Handle multiple zones
diff --git a/src/CloudflareService.php b/src/CloudflareService.php
index 46185f4..a6a6c1f 100644
--- a/src/CloudflareService.php
+++ b/src/CloudflareService.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\cloudflare_node_cc;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -27,68 +30,68 @@ class CloudflareService {
   /**
    * The logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The key repository object.
    *
-   * @var \Drupal\key\KeyRepository
+   * @var KeyRepository
    */
   protected $keyRepository;
 
   /**
    * CloudflareService constructor.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   The logger.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The config factory.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\key\KeyRepository $keyRepository
+   * @param KeyRepository $keyRepository
    *   Key repository object.
    */
   public function __construct(
@@ -112,7 +115,7 @@ class CloudflareService {
   /**
    * Get configuration.
    *
-   * @return \Drupal\Core\Config\Config|null
+   * @return Config|null
    *   Returns the config.
    */
   public function getConfig() {
diff --git a/src/Controller/CloudflareController.php b/src/Controller/CloudflareController.php
index 2208b38..11d30b3 100644
--- a/src/Controller/CloudflareController.php
+++ b/src/Controller/CloudflareController.php
@@ -18,23 +18,23 @@ class CloudflareController extends ControllerBase {
   /**
    * The request.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The cloudflare service.
    *
-   * @var \Drupal\cloudflare_node_cc\CloudflareService
+   * @var CloudflareService
    */
   protected $cloudflareService;
 
   /**
    * CloudflareController constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request.
-   * @param \Drupal\cloudflare_node_cc\CloudflareService $cloudflare_service
+   * @param CloudflareService $cloudflare_service
    *   The cloudflare service.
    */
   public function __construct(RequestStack $request_stack, CloudflareService $cloudflare_service) {
@@ -71,7 +71,7 @@ class CloudflareController extends ControllerBase {
   /**
    * Purge everything in Cloudflare zones.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Returns the redirect response.
    */
   public function purgeCache(): RedirectResponse {
diff --git a/src/EventSubscriber/CloudflareClientIpRestore.php b/src/EventSubscriber/CloudflareClientIpRestore.php
index ee9e34b..63d0cdd 100644
--- a/src/EventSubscriber/CloudflareClientIpRestore.php
+++ b/src/EventSubscriber/CloudflareClientIpRestore.php
@@ -2,12 +2,12 @@
 
 namespace Drupal\cloudflare_node_cc\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\cloudflare_node_cc\CloudflareService;
 use GuzzleHttp\ClientInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Psr\Log\LoggerInterface;
 
@@ -29,28 +29,28 @@ class CloudflareClientIpRestore implements EventSubscriberInterface {
   /**
    * The Cache backend service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The cloudflare service.
    *
-   * @var \Drupal\cloudflare_node_cc\CloudflareService
+   * @var CloudflareService
    */
   protected $cloudflareService;
 
   /**
    * The HTTP client to fetch the feed data with.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -64,13 +64,13 @@ class CloudflareClientIpRestore implements EventSubscriberInterface {
   /**
    * CloudflareClientIpRestore constructor.
    *
-   * @param \Drupal\cloudflare_node_cc\CloudflareService $cloudflare_service
+   * @param CloudflareService $cloudflare_service
    *   The cloudflare service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache backend.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The http client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger.
    */
   public function __construct(CloudflareService $cloudflare_service, CacheBackendInterface $cache, ClientInterface $http_client, LoggerInterface $logger) {
@@ -97,10 +97,10 @@ class CloudflareClientIpRestore implements EventSubscriberInterface {
   /**
    * Restores the origination client IP delivered to Drupal from CloudFlare.
    *
-   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
+   * @param RequestEvent $event
    *   The response event.
    */
-  public function onRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
+  public function onRequest(RequestEvent $event) {
 
     // Make sure client ip restore is enabled first.
     if (!$this->isClientIpRestoreEnabled) {
diff --git a/src/Form/CloudflareConfigForm.php b/src/Form/CloudflareConfigForm.php
index 289befa..d2de260 100644
--- a/src/Form/CloudflareConfigForm.php
+++ b/src/Form/CloudflareConfigForm.php
@@ -19,25 +19,25 @@ class CloudflareConfigForm extends ConfigFormBase {
   /**
    * The Cloudflare service.
    *
-   * @var \Drupal\cloudflare_node_cc\CloudflareService
+   * @var CloudflareService
    */
   protected $cloudflareService;
 
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManager
+   * @var LanguageManager
    */
   protected $languageManager;
 
   /**
    * CloudflareConfigForm constructor.
    *
-   * @param \Drupal\cloudflare_node_cc\CloudflareService $cloudflare_service
+   * @param CloudflareService $cloudflare_service
    *   The Cloudflare service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The Config factory service.
-   * @param \Drupal\Core\Language\LanguageManager $language_manager
+   * @param LanguageManager $language_manager
    *   The Language manager service.
    */
   public function __construct(
