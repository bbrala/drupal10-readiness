modules/contrib/licenses_vocabulary/licenses_vocabulary.install
modules/contrib/licenses_vocabulary/licenses_vocabulary.module
modules/contrib/licenses_vocabulary/src/Form/LicensesImportForm.php
modules/contrib/licenses_vocabulary/src/LicensesManager.php
modules/contrib/licenses_vocabulary/src/LicensesManagerInterface.php
modules/contrib/licenses_vocabulary/tests/src/Functional/LoadTest.php

4 files with changes
====================

1) modules/contrib/licenses_vocabulary/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\licenses_vocabulary\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/licenses_vocabulary/src/LicensesManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\licenses_vocabulary;

+use Drupal\taxonomy\TermInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\taxonomy\Entity\Term;
 use Drupal\file\Entity\File;
@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a new LicensesManager object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, MessengerInterface $messenger) {
@@ @@
    * {@inheritdoc}
    */
   public function loadDefaultLicenses() {
-    $file_path = drupal_get_path('module', 'licenses_vocabulary') . '/licenses_vocabulary.default.licenses.yml';
+    $file_path = \Drupal::service('extension.list.module')->getPath('licenses_vocabulary') . '/licenses_vocabulary.default.licenses.yml';
     $file_contents = file_get_contents($file_path);
     return $this->loadFromText($file_contents);
   }
@@ @@
    * @param string $license_url
    *   The url to the license.
    *
-   * @return Drupal\taxonomy\TermInterface|null
+   * @return TermInterface|null
    *   The recently created term or null if it exists.
    */
   protected function createLicenseTerm($term_title, $term_short_label, $icon_filename, $license_url) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/licenses_vocabulary/src/Form/LicensesImportForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Licenses manager.
    *
-   * @var \Drupal\licenses_vocabulary\LicensesManagerInterface
+   * @var LicensesManagerInterface
    */
   protected $LicensesManager;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
       '#markup' => $info,
     ];

-    $image_path = substr(file_url_transform_relative(file_create_url('public://licenses_vocabulary/cc')), 1);
+    $image_path = substr(\Drupal::service('file_url_generator')->generateString('public://licenses_vocabulary/cc'), 1);
     $example_text = "-\n";
     $example_text .= "  title: Attribution 4.0 International (CC BY 4.0)\n";
     $example_text .= "  short_label: CC BY 4.0\n";
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/licenses_vocabulary/licenses_vocabulary.install:11

    ---------- begin diff ----------
@@ @@
  * Implements hook_install().
  */
 function licenses_vocabulary_install() {
-  $source = drupal_get_path('module', 'licenses_vocabulary') . '/images/';
+  $source = \Drupal::service('extension.list.module')->getPath('licenses_vocabulary') . '/images/';
   $destination = \Drupal::config('licenses_vocabulary.settings')->get('icon_base_uri');
-  /** @var \Drupal\Core\File\FileSystemInterface $file_system */
+  /** @var FileSystemInterface $file_system */
   $file_system = \Drupal::service('file_system');
   $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

