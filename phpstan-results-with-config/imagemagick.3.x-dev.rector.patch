diff --git a/composer.json b/composer.json
index 6a7684b..649627c 100644
--- a/composer.json
+++ b/composer.json
@@ -3,8 +3,8 @@
     "type": "drupal-module",
     "description": "Provides an image toolkit to integrate ImageMagick with the Image API.",
     "require": {
-        "drupal/core": "^9.2",
         "drupal/file_mdm": "^2",
-        "drupal/sophron": "^1.2"
+        "drupal/sophron": "^1.2",
+        "drupal/core": "^9.3 || ^10"
     }
 }
diff --git a/imagemagick.info.yml b/imagemagick.info.yml
index f663337..17d6c79 100644
--- a/imagemagick.info.yml
+++ b/imagemagick.info.yml
@@ -1,5 +1,5 @@
 type: module
-core_version_requirement: ^9.2
+core_version_requirement: ^9.3 || ^10
 name: ImageMagick
 description: 'Provides ImageMagick integration.'
 package: Media
diff --git a/src/Event/ImagemagickExecutionEvent.php b/src/Event/ImagemagickExecutionEvent.php
index 3f6b53f..f8af97a 100644
--- a/src/Event/ImagemagickExecutionEvent.php
+++ b/src/Event/ImagemagickExecutionEvent.php
@@ -57,14 +57,14 @@ class ImagemagickExecutionEvent extends Event {
   /**
    * The ImageMagick/GraphicsMagick execution arguments object.
    *
-   * @var \Drupal\imagemagick\ImagemagickExecArguments
+   * @var ImagemagickExecArguments
    */
   protected $arguments;
 
   /**
    * Constructs the object.
    *
-   * @param \Drupal\imagemagick\ImagemagickExecArguments $arguments
+   * @param ImagemagickExecArguments $arguments
    *   The ImageMagick/GraphicsMagick execution arguments object.
    */
   public function __construct(ImagemagickExecArguments $arguments) {
@@ -74,7 +74,7 @@ class ImagemagickExecutionEvent extends Event {
   /**
    * Returns the ImagemagickExecArguments object.
    *
-   * @return \Drupal\imagemagick\ImagemagickExecArguments
+   * @return ImagemagickExecArguments
    *   The ImageMagick/GraphicsMagick execution arguments object.
    */
   public function getExecArguments(): ImagemagickExecArguments {
diff --git a/src/EventSubscriber/ImagemagickEventSubscriber.php b/src/EventSubscriber/ImagemagickEventSubscriber.php
index e9190c4..46b1b99 100644
--- a/src/EventSubscriber/ImagemagickEventSubscriber.php
+++ b/src/EventSubscriber/ImagemagickEventSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\imagemagick\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\File\Exception\FileException;
@@ -21,57 +22,57 @@ class ImagemagickEventSubscriber implements EventSubscriberInterface {
   /**
    * The logger service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The mudule configuration settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $imagemagickSettings;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The stream wrapper manager service.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
   /**
    * The file metadata manager service.
    *
-   * @var \Drupal\file_mdm\FileMetadataManagerInterface
+   * @var FileMetadataManagerInterface
    */
   protected $fileMetadataManager;
 
   /**
    * Constructs an ImagemagickEventSubscriber object.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager service.
-   * @param \Drupal\file_mdm\FileMetadataManagerInterface $file_metadata_manager
+   * @param FileMetadataManagerInterface $file_metadata_manager
    *   The file metadata manager service.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory, FileSystemInterface $file_system, StreamWrapperManagerInterface $stream_wrapper_manager, FileMetadataManagerInterface $file_metadata_manager) {
@@ -98,7 +99,7 @@ class ImagemagickEventSubscriber implements EventSubscriberInterface {
   /**
    * Ensures source image URI to a local filesystem path.
    *
-   * @param \Drupal\imagemagick\ImagemagickExecArguments $arguments
+   * @param ImagemagickExecArguments $arguments
    *   The ImageMagick/GraphicsMagick execution arguments object.
    */
   protected function doEnsureSourceLocalPath(ImagemagickExecArguments $arguments) {
@@ -143,7 +144,7 @@ class ImagemagickEventSubscriber implements EventSubscriberInterface {
   /**
    * Ensures destination image URI to a local filesystem path.
    *
-   * @param \Drupal\imagemagick\ImagemagickExecArguments $arguments
+   * @param ImagemagickExecArguments $arguments
    *   The ImageMagick/GraphicsMagick execution arguments object.
    */
   protected function doEnsureDestinationLocalPath(ImagemagickExecArguments $arguments) {
@@ -184,7 +185,7 @@ class ImagemagickEventSubscriber implements EventSubscriberInterface {
   /**
    * Adds configured arguments at the beginning of the list.
    *
-   * @param \Drupal\imagemagick\ImagemagickExecArguments $arguments
+   * @param ImagemagickExecArguments $arguments
    *   The ImageMagick/GraphicsMagick execution arguments object.
    */
   protected function prependArguments(ImagemagickExecArguments $arguments) {
@@ -204,7 +205,7 @@ class ImagemagickEventSubscriber implements EventSubscriberInterface {
    * Modules can also decide to move files from remote systems to the local
    * file system to allow processing.
    *
-   * @param \Drupal\imagemagick\Event\ImagemagickExecutionEvent $event
+   * @param ImagemagickExecutionEvent $event
    *   Imagemagick execution event.
    *
    * @see \Drupal\imagemagick\Plugin\ImageToolkit\ImagemagickToolkit::parseFile()
@@ -226,7 +227,7 @@ class ImagemagickEventSubscriber implements EventSubscriberInterface {
    * to move temporary files from the local file system to remote destination
    * systems.
    *
-   * @param \Drupal\imagemagick\Event\ImagemagickExecutionEvent $event
+   * @param ImagemagickExecutionEvent $event
    *   Imagemagick execution event.
    *
    * @see \Drupal\imagemagick\Plugin\ImageToolkit\ImagemagickToolkit::save()
@@ -261,7 +262,7 @@ class ImagemagickEventSubscriber implements EventSubscriberInterface {
    * or the event subscribers. You can add/get/find such arguments by specifying
    * ImagemagickExecArguments::INTERNAL as the argument $mode in the methods.
    *
-   * @param \Drupal\imagemagick\Event\ImagemagickExecutionEvent $event
+   * @param ImagemagickExecutionEvent $event
    *   Imagemagick execution event.
    *
    * @see http://www.imagemagick.org/script/command-line-processing.php#output
@@ -298,7 +299,7 @@ class ImagemagickEventSubscriber implements EventSubscriberInterface {
    * When the destination format is set, it is passed to ImageMagick's convert
    * binary with the syntax "[format]:[destination]".
    *
-   * @param \Drupal\imagemagick\Event\ImagemagickExecutionEvent $event
+   * @param ImagemagickExecutionEvent $event
    *   Imagemagick execution event.
    *
    * @see http://www.imagemagick.org/script/command-line-processing.php#output
diff --git a/src/ImagemagickExecArguments.php b/src/ImagemagickExecArguments.php
index a5f5a4d..573542b 100644
--- a/src/ImagemagickExecArguments.php
+++ b/src/ImagemagickExecArguments.php
@@ -30,7 +30,7 @@ class ImagemagickExecArguments {
   /**
    * The ImageMagick execution manager service.
    *
-   * @var \Drupal\imagemagick\ImagemagickExecManagerInterface
+   * @var ImagemagickExecManagerInterface
    */
   protected $execManager;
 
@@ -93,7 +93,7 @@ class ImagemagickExecArguments {
   /**
    * Constructs an ImagemagickExecArguments object.
    *
-   * @param \Drupal\imagemagick\ImagemagickExecManagerInterface $exec_manager
+   * @param ImagemagickExecManagerInterface $exec_manager
    *   The ImageMagick execution manager service.
    */
   public function __construct(ImagemagickExecManagerInterface $exec_manager) {
diff --git a/src/ImagemagickExecManager.php b/src/ImagemagickExecManager.php
index c8a9fde..526fb80 100644
--- a/src/ImagemagickExecManager.php
+++ b/src/ImagemagickExecManager.php
@@ -46,52 +46,52 @@ class ImagemagickExecManager implements ImagemagickExecManagerInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The logger service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The format mapper service.
    *
-   * @var \Drupal\imagemagick\ImagemagickFormatMapperInterface
+   * @var ImagemagickFormatMapperInterface
    */
   protected $formatMapper;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs an ImagemagickExecManager object.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    * @param string $app_root
    *   The app root.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
-   * @param \Drupal\imagemagick\ImagemagickFormatMapperInterface $format_mapper
+   * @param ImagemagickFormatMapperInterface $format_mapper
    *   The format mapper service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory, string $app_root, AccountProxyInterface $current_user, ImagemagickFormatMapperInterface $format_mapper, MessengerInterface $messenger) {
diff --git a/src/ImagemagickExecManagerInterface.php b/src/ImagemagickExecManagerInterface.php
index 2605e20..0b9496b 100644
--- a/src/ImagemagickExecManagerInterface.php
+++ b/src/ImagemagickExecManagerInterface.php
@@ -10,7 +10,7 @@ interface ImagemagickExecManagerInterface {
   /**
    * Returns the format mapper.
    *
-   * @return \Drupal\imagemagick\ImagemagickFormatMapperInterface
+   * @return ImagemagickFormatMapperInterface
    *   The format mapper service.
    */
   public function getFormatMapper(): ImagemagickFormatMapperInterface;
@@ -72,7 +72,7 @@ interface ImagemagickExecManagerInterface {
    *
    * @param string $command
    *   The executable to run.
-   * @param \Drupal\imagemagick\ImagemagickExecArguments $arguments
+   * @param ImagemagickExecArguments $arguments
    *   An ImageMagick execution arguments object.
    * @param string &$output
    *   (optional) A variable to assign the shell stdout to, passed by
diff --git a/src/ImagemagickFormatMapper.php b/src/ImagemagickFormatMapper.php
index 49d8787..b7b8b15 100644
--- a/src/ImagemagickFormatMapper.php
+++ b/src/ImagemagickFormatMapper.php
@@ -21,41 +21,41 @@ class ImagemagickFormatMapper implements ImagemagickFormatMapperInterface {
   /**
    * The cache service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The typed config service.
    *
-   * @var \Drupal\Core\Config\TypedConfigManagerInterface
+   * @var TypedConfigManagerInterface
    */
   protected $typedConfig;
 
   /**
    * The MIME map manager service.
    *
-   * @var \Drupal\sophron\MimeMapManagerInterface
+   * @var MimeMapManagerInterface
    */
   protected $mimeMapManager;
 
   /**
    * Constructs an ImagemagickFormatMapper object.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_service
+   * @param CacheBackendInterface $cache_service
    *   The cache service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Config\TypedConfigManagerInterface $typed_config
+   * @param TypedConfigManagerInterface $typed_config
    *   The typed config service.
-   * @param \Drupal\sophron\MimeMapManagerInterface $mime_map_manager
+   * @param MimeMapManagerInterface $mime_map_manager
    *   The MIME map manager service.
    */
   public function __construct(CacheBackendInterface $cache_service, ConfigFactoryInterface $config_factory, TypedConfigManagerInterface $typed_config, MimeMapManagerInterface $mime_map_manager) {
diff --git a/src/Plugin/FileMetadata/ImagemagickIdentify.php b/src/Plugin/FileMetadata/ImagemagickIdentify.php
index a130199..cf9ce6d 100644
--- a/src/Plugin/FileMetadata/ImagemagickIdentify.php
+++ b/src/Plugin/FileMetadata/ImagemagickIdentify.php
@@ -27,14 +27,14 @@ class ImagemagickIdentify extends FileMetadataPluginBase {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The ImageMagick execution manager service.
    *
-   * @var \Drupal\imagemagick\ImagemagickExecManagerInterface
+   * @var ImagemagickExecManagerInterface
    */
   protected $execManager;
 
@@ -47,15 +47,15 @@ class ImagemagickIdentify extends FileMetadataPluginBase {
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_service
+   * @param CacheBackendInterface $cache_service
    *   The cache service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\imagemagick\ImagemagickExecManagerInterface $exec_manager
+   * @param ImagemagickExecManagerInterface $exec_manager
    *   The ImageMagick execution manager service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, CacheBackendInterface $cache_service, ConfigFactoryInterface $config_factory, ImagemagickExecManagerInterface $exec_manager, EventDispatcherInterface $dispatcher, StreamWrapperManagerInterface $stream_wrapper_manager) {
@@ -121,7 +121,7 @@ class ImagemagickIdentify extends FileMetadataPluginBase {
    * @return bool
    *   TRUE if the key is valid.
    *
-   * @throws \Drupal\file_mdm\FileMetadataException
+   * @throws FileMetadataException
    *   In case the key is invalid.
    */
   protected function validateKey($key, $method) {
diff --git a/src/Plugin/ImageToolkit/ImagemagickToolkit.php b/src/Plugin/ImageToolkit/ImagemagickToolkit.php
index 91e7ef0..025c1ca 100644
--- a/src/Plugin/ImageToolkit/ImagemagickToolkit.php
+++ b/src/Plugin/ImageToolkit/ImagemagickToolkit.php
@@ -39,35 +39,35 @@ class ImagemagickToolkit extends ImageToolkitBase {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The format mapper service.
    *
-   * @var \Drupal\imagemagick\ImagemagickFormatMapperInterface
+   * @var ImagemagickFormatMapperInterface
    */
   protected $formatMapper;
 
   /**
    * The file metadata manager service.
    *
-   * @var \Drupal\file_mdm\FileMetadataManagerInterface
+   * @var FileMetadataManagerInterface
    */
   protected $fileMetadataManager;
 
   /**
    * The ImageMagick execution manager service.
    *
-   * @var \Drupal\imagemagick\ImagemagickExecManagerInterface
+   * @var ImagemagickExecManagerInterface
    */
   protected $execManager;
 
   /**
    * The execution arguments object.
    *
-   * @var \Drupal\imagemagick\ImagemagickExecArguments
+   * @var ImagemagickExecArguments
    */
   protected $arguments;
 
@@ -122,19 +122,19 @@ class ImagemagickToolkit extends ImageToolkitBase {
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\ImageToolkit\ImageToolkitOperationManagerInterface $operation_manager
+   * @param ImageToolkitOperationManagerInterface $operation_manager
    *   The toolkit operation manager.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\imagemagick\ImagemagickFormatMapperInterface $format_mapper
+   * @param ImagemagickFormatMapperInterface $format_mapper
    *   The format mapper service.
-   * @param \Drupal\file_mdm\FileMetadataManagerInterface $file_metadata_manager
+   * @param FileMetadataManagerInterface $file_metadata_manager
    *   The file metadata manager service.
-   * @param \Drupal\imagemagick\ImagemagickExecManagerInterface $exec_manager
+   * @param ImagemagickExecManagerInterface $exec_manager
    *   The ImageMagick execution manager service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   The event dispatcher.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, ImageToolkitOperationManagerInterface $operation_manager, LoggerInterface $logger, ConfigFactoryInterface $config_factory, ImagemagickFormatMapperInterface $format_mapper, FileMetadataManagerInterface $file_metadata_manager, ImagemagickExecManagerInterface $exec_manager, EventDispatcherInterface $dispatcher) {
@@ -412,7 +412,7 @@ class ImagemagickToolkit extends ImageToolkitBase {
   /**
    * Returns the ImageMagick execution manager service.
    *
-   * @return \Drupal\imagemagick\ImagemagickExecManagerInterface
+   * @return ImagemagickExecManagerInterface
    *   The ImageMagick execution manager service.
    */
   public function getExecManager(): ImagemagickExecManagerInterface {
@@ -707,7 +707,7 @@ class ImagemagickToolkit extends ImageToolkitBase {
   /**
    * Returns the current ImagemagickExecArguments object.
    *
-   * @return \Drupal\imagemagick\ImagemagickExecArguments
+   * @return ImagemagickExecArguments
    *   The current ImagemagickExecArguments object.
    */
   public function arguments(): ImagemagickExecArguments {
diff --git a/src/Plugin/ImageToolkit/Operation/imagemagick/ImagemagickImageToolkitOperationBase.php b/src/Plugin/ImageToolkit/Operation/imagemagick/ImagemagickImageToolkitOperationBase.php
index 5659598..aa454d8 100644
--- a/src/Plugin/ImageToolkit/Operation/imagemagick/ImagemagickImageToolkitOperationBase.php
+++ b/src/Plugin/ImageToolkit/Operation/imagemagick/ImagemagickImageToolkitOperationBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick;
 
+use Drupal\imagemagick\Plugin\ImageToolkit\ImagemagickToolkit;
 use Drupal\Core\ImageToolkit\ImageToolkitOperationBase;
 use Drupal\imagemagick\ImagemagickExecArguments;
 
@@ -13,7 +14,7 @@ abstract class ImagemagickImageToolkitOperationBase extends ImageToolkitOperatio
   /**
    * The correctly typed image toolkit for imagemagick operations.
    *
-   * @return \Drupal\imagemagick\Plugin\ImageToolkit\ImagemagickToolkit
+   * @return ImagemagickToolkit
    *   The correctly typed image toolkit for imagemagick operations.
    */
   // @codingStandardsIgnoreStart
@@ -21,7 +22,6 @@ abstract class ImagemagickImageToolkitOperationBase extends ImageToolkitOperatio
     return parent::getToolkit();
   }
   // @codingStandardsIgnoreEnd
-
   /**
    * Helper to add a command line argument.
    *
@@ -41,7 +41,7 @@ abstract class ImagemagickImageToolkitOperationBase extends ImageToolkitOperatio
    *   (optional) An optional array with information about the argument.
    *   Defaults to an empty array.
    *
-   * @return \Drupal\imagemagick\ImagemagickExecArguments
+   * @return ImagemagickExecArguments
    *   The Imagemagick arguments.
    */
   protected function addArgument(string $argument, int $mode = ImagemagickExecArguments::POST_SOURCE, int $index = ImagemagickExecArguments::APPEND, array $info = []): ImagemagickExecArguments {
diff --git a/tests/src/Functional/EventSubscriberTest.php b/tests/src/Functional/EventSubscriberTest.php
index f1ceb51..4ee8226 100644
--- a/tests/src/Functional/EventSubscriberTest.php
+++ b/tests/src/Functional/EventSubscriberTest.php
@@ -133,7 +133,7 @@ class EventSubscriberTest extends BrowserTestBase {
     $this->setUpToolkit($toolkit_id, $toolkit_config, $toolkit_settings);
     $this->prepareImageFileHandling();
 
-    $image_uri = drupal_get_path('module', 'imagemagick') . '/misc/test-multi-frame.gif';
+    $image_uri = \Drupal::service('extension.list.module')->getPath('imagemagick') . '/misc/test-multi-frame.gif';
 
     // By default, no coalesce of animated GIFs.
     $image = $this->imageFactory->get($image_uri);
diff --git a/tests/src/Functional/ToolkitImagemagickFileMetadataTest.php b/tests/src/Functional/ToolkitImagemagickFileMetadataTest.php
index d029d6b..8e36323 100644
--- a/tests/src/Functional/ToolkitImagemagickFileMetadataTest.php
+++ b/tests/src/Functional/ToolkitImagemagickFileMetadataTest.php
@@ -138,9 +138,9 @@ class ToolkitImagemagickFileMetadataTest extends BrowserTestBase {
     $fmdm = $this->container->get('file_metadata_manager');
 
     // Prepare a copy of test files.
-    $this->fileSystem->copy(drupal_get_path('module', 'imagemagick') . '/misc/test-multi-frame.gif', 'public://', FileSystemInterface::EXISTS_REPLACE);
-    $this->fileSystem->copy(drupal_get_path('module', 'imagemagick') . '/misc/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
-    $this->fileSystem->copy(drupal_get_path('module', 'imagemagick') . '/misc/test-exif-icc.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('imagemagick') . '/misc/test-multi-frame.gif', 'public://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('imagemagick') . '/misc/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('imagemagick') . '/misc/test-exif-icc.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
 
     // Perform tests without caching.
     $config_mdm->set('metadata_cache.enabled', FALSE)->save();
@@ -366,7 +366,7 @@ class ToolkitImagemagickFileMetadataTest extends BrowserTestBase {
     }
 
     // Files in temporary:// must not be cached.
-    $this->fileSystem->copy(drupal_get_path('module', 'imagemagick') . '/misc/test-multi-frame.gif', 'temporary://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('imagemagick') . '/misc/test-multi-frame.gif', 'temporary://', FileSystemInterface::EXISTS_REPLACE);
     $source_uri = 'temporary://test-multi-frame.gif';
     $fmdm->release($source_uri);
     $source_image_md = $fmdm->uri($source_uri);
diff --git a/tests/src/Functional/ToolkitImagemagickTest.php b/tests/src/Functional/ToolkitImagemagickTest.php
index 0cb5429..af8004f 100644
--- a/tests/src/Functional/ToolkitImagemagickTest.php
+++ b/tests/src/Functional/ToolkitImagemagickTest.php
@@ -505,11 +505,11 @@ class ToolkitImagemagickTest extends BrowserTestBase {
     $this->assertSame('', $image->getToolkit()->arguments()->getDestinationLocalPath());
 
     // Test retrieval of EXIF information.
-    $this->fileSystem->copy(drupal_get_path('module', 'imagemagick') . '/misc/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('imagemagick') . '/misc/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
     // The image files that will be tested.
     $image_files = [
       [
-        'path' => drupal_get_path('module', 'imagemagick') . '/misc/test-exif.jpeg',
+        'path' => \Drupal::service('extension.list.module')->getPath('imagemagick') . '/misc/test-exif.jpeg',
         'orientation' => 8,
       ],
       [
@@ -545,7 +545,7 @@ class ToolkitImagemagickTest extends BrowserTestBase {
     // Test multi-frame GIF image.
     $image_files = [
       [
-        'source' => drupal_get_path('module', 'imagemagick') . '/misc/test-multi-frame.gif',
+        'source' => \Drupal::service('extension.list.module')->getPath('imagemagick') . '/misc/test-multi-frame.gif',
         'destination' => $this->testDirectory . '/test-multi-frame.gif',
         'width' => 60,
         'height' => 29,
@@ -779,7 +779,7 @@ class ToolkitImagemagickTest extends BrowserTestBase {
     // Test multi-frame GIF image.
     $image_files = [
       [
-        'source' => drupal_get_path('module', 'imagemagick') . '/misc/test-multi-frame.gif',
+        'source' => \Drupal::service('extension.list.module')->getPath('imagemagick') . '/misc/test-multi-frame.gif',
         'destination' => $this->testDirectory . '/test-multi-frame.gif',
         'width' => 60,
         'height' => 29,
diff --git a/tests/src/Kernel/ToolkitSetupTrait.php b/tests/src/Kernel/ToolkitSetupTrait.php
index 1df5e6c..8e1dc80 100644
--- a/tests/src/Kernel/ToolkitSetupTrait.php
+++ b/tests/src/Kernel/ToolkitSetupTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\imagemagick\Kernel;
 
+use Drupal\Core\Image\ImageFactory;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Tests\TestFileCreationTrait;
 use Drupal\Tests\BrowserTestBase;
@@ -16,14 +17,14 @@ trait ToolkitSetupTrait {
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
@@ -133,7 +134,7 @@ trait ToolkitSetupTrait {
     // Prepare a copy of test files.
     $this->getTestFiles('image');
 
-    /** @var \Drupal\Core\File\FileSystemInterface $file_system */
+    /** @var FileSystemInterface $file_system */
     $file_system = \Drupal::service('file_system');
     $original = \Drupal::root() . '/core/tests/fixtures/files';
     $files = $file_system->scanDirectory($original, '/img-.*/');
