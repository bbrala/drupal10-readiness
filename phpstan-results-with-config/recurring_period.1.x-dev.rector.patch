diff --git a/src/Annotation/RecurringPeriod.php b/src/Annotation/RecurringPeriod.php
index 499b1dd..75f87d2 100644
--- a/src/Annotation/RecurringPeriod.php
+++ b/src/Annotation/RecurringPeriod.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\recurring_period\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class RecurringPeriod extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -34,7 +35,7 @@ class RecurringPeriod extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/DateTime/Period.php b/src/DateTime/Period.php
index f3c65d6..7f1c2ad 100644
--- a/src/DateTime/Period.php
+++ b/src/DateTime/Period.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\recurring_period\Datetime;
 
+use Drupal\Core\Entity\EntityBase;
 use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;
 
 /**
@@ -68,7 +69,7 @@ class Period {
    *   for the label field, it will be taken over any label from the Period
    *   object.
    *
-   * @return \Drupal\Core\Entity\EntityBase
+   * @return EntityBase
    *   The unsaved entity.
    */
   public function toEntity($entity_type_id, $values = []) {
diff --git a/src/Entity/PeriodEntityInterface.php b/src/Entity/PeriodEntityInterface.php
index 7c0bf8e..07e69aa 100644
--- a/src/Entity/PeriodEntityInterface.php
+++ b/src/Entity/PeriodEntityInterface.php
@@ -14,14 +14,14 @@ interface PeriodEntityInterface {
   /**
    * Gets the start date/time.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime
+   * @return DrupalDateTime
    *   The start date/time.
    */
   public function getStartDate();
   /**
    * Gets the end date/time.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime
+   * @return DrupalDateTime
    *   The end date/time.
    */
   public function getEndDate();
@@ -37,7 +37,7 @@ interface PeriodEntityInterface {
   /**
    * Checks whether the given date/time is contained in the period.
    *
-   * @param \Drupal\Core\Datetime\DrupalDateTime $date
+   * @param DrupalDateTime $date
    *   The date/time.
    *
    * @return bool
diff --git a/src/Entity/PeriodEntityTrait.php b/src/Entity/PeriodEntityTrait.php
index f0f95f2..7655499 100644
--- a/src/Entity/PeriodEntityTrait.php
+++ b/src/Entity/PeriodEntityTrait.php
@@ -79,13 +79,13 @@ trait PeriodEntityTrait {
   /**
    * Returns an array of base field definitions for representing a time period.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type to add the period fields to.
    *
-   * @return \Drupal\Core\Field\BaseFieldDefinition[]
+   * @return BaseFieldDefinition[]
    *   An array of base field definitions.
    *
-   * @throws \Drupal\Core\Entity\Exception\UnsupportedEntityTypeDefinitionException
+   * @throws UnsupportedEntityTypeDefinitionException
    *   Thrown when the entity type does not implement PeriodEntityInterface
    *   or if it does not the necessary entity keys.
    */
diff --git a/src/Plugin/RecurringPeriod/RecurringPeriodBase.php b/src/Plugin/RecurringPeriod/RecurringPeriodBase.php
index db46f0e..3324c56 100644
--- a/src/Plugin/RecurringPeriod/RecurringPeriodBase.php
+++ b/src/Plugin/RecurringPeriod/RecurringPeriodBase.php
@@ -21,7 +21,7 @@ abstract class RecurringPeriodBase extends PluginBase implements ContainerFactor
   /**
    * The Interval Plugin Manager service.
    *
-   * @var \Drupal\interval\IntervalPluginManagerInterface
+   * @var IntervalPluginManagerInterface
    */
   protected $pluginManagerIntervals;
 
@@ -34,7 +34,7 @@ abstract class RecurringPeriodBase extends PluginBase implements ContainerFactor
    *   The pluginId for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\interval\IntervalPluginManagerInterface $plugin_manager_interval_intervals
+   * @param IntervalPluginManagerInterface $plugin_manager_interval_intervals
    *   The Interval Plugin Manager service.
    */
   public function __construct(
diff --git a/src/Plugin/RecurringPeriod/RecurringPeriodInterface.php b/src/Plugin/RecurringPeriod/RecurringPeriodInterface.php
index 9cc020d..870334b 100644
--- a/src/Plugin/RecurringPeriod/RecurringPeriodInterface.php
+++ b/src/Plugin/RecurringPeriod/RecurringPeriodInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\recurring_period\Plugin\RecurringPeriod;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\recurring_period\Datetime\Period;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Component\Plugin\DependentPluginInterface;
@@ -105,7 +106,7 @@ interface RecurringPeriodInterface extends ConfigurableInterface, DependentPlugi
    * @param \DateTimeImmutable $end
    *   The date and time on which the period ends.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The label.
    */
   public function getPeriodLabel(\DateTimeImmutable $start, \DateTimeImmutable $end);
@@ -116,7 +117,7 @@ interface RecurringPeriodInterface extends ConfigurableInterface, DependentPlugi
    * @param \DateTimeImmutable $start
    *   The date and time to begin the period from.
    *
-   * @return \Drupal\recurring_period\Datetime\Period
+   * @return Period
    *   The period value object.
    */
   public function getPeriodFromDate(\DateTimeImmutable $start);
@@ -130,7 +131,7 @@ interface RecurringPeriodInterface extends ConfigurableInterface, DependentPlugi
    * @param \DateTimeImmutable $date
    *   A date and time that should be contained in the period.
    *
-   * @return \Drupal\recurring_period\Datetime\Period
+   * @return Period
    *   The period value object.
    */
   public function getPeriodContainingDate(\DateTimeImmutable $date);
@@ -138,10 +139,10 @@ interface RecurringPeriodInterface extends ConfigurableInterface, DependentPlugi
   /**
    * Calculates the period after the given period.
    *
-   * @param \Drupal\recurring_period\Datetime\Period $period
+   * @param Period $period
    *   The date and time to begin the period from.
    *
-   * @return \Drupal\recurring_period\Datetime\Period
+   * @return Period
    *   The period value object.
    */
   public function getNextPeriod(Period $period);
diff --git a/src/RecurringPeriodManager.php b/src/RecurringPeriodManager.php
index 4ec15e2..fe7e052 100644
--- a/src/RecurringPeriodManager.php
+++ b/src/RecurringPeriodManager.php
@@ -20,9 +20,9 @@ class RecurringPeriodManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/tests/src/Kernel/FixedReferenceDateIntervalTest.php b/tests/src/Kernel/FixedReferenceDateIntervalTest.php
index 838fd1a..be69636 100644
--- a/tests/src/Kernel/FixedReferenceDateIntervalTest.php
+++ b/tests/src/Kernel/FixedReferenceDateIntervalTest.php
@@ -14,7 +14,7 @@ class FixedReferenceDateIntervalTest extends RecurringPeriodTestBase {
   /**
    * Tests the fixed interval plugin.
    *
-   * @dataProvider testFixedIntervalPluginProvider
+   * @dataProvider fixedIntervalPluginProvider
    */
   public function testFixedIntervalPlugin($timezone_name, $reference_date, $interval, $start_date, $expected_next, $expected_start) {
     $timezone = new \DateTimeZone($timezone_name);
@@ -37,7 +37,7 @@ class FixedReferenceDateIntervalTest extends RecurringPeriodTestBase {
   /**
    * Data provider for testSteppedByItem().
    */
-  public function testFixedIntervalPluginProvider() {
+  public function fixedIntervalPluginProvider() {
     return [
       'annual recurring, due later this year' => [
         // Timezone.
diff --git a/tests/src/Kernel/RecurringPeriodTestBase.php b/tests/src/Kernel/RecurringPeriodTestBase.php
index f0a9a5b..e0af5c2 100644
--- a/tests/src/Kernel/RecurringPeriodTestBase.php
+++ b/tests/src/Kernel/RecurringPeriodTestBase.php
@@ -23,14 +23,14 @@ abstract class RecurringPeriodTestBase extends KernelTestBase {
   /**
    * The recurring period plugin manager.
    *
-   * @var \Drupal\recurring_period\RecurringPeriodManager
+   * @var RecurringPeriodManager
    */
   protected $recurringPeriodManager;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->recurringPeriodManager = $this->container->get('plugin.manager.recurring_period');
