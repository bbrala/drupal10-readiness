diff --git a/modules/video_transcode/src/Annotation/Transcoder.php b/modules/video_transcode/src/Annotation/Transcoder.php
index f15f54a..f46faec 100644
--- a/modules/video_transcode/src/Annotation/Transcoder.php
+++ b/modules/video_transcode/src/Annotation/Transcoder.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\video_transcode\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -30,7 +31,7 @@ class Transcoder extends Plugin {
   /**
    * The label of the transcoder.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -41,7 +42,7 @@ class Transcoder extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation (optional)
+   * @var Translation (optional)
    */
   public $description = '';
   
diff --git a/modules/video_transcode/src/Controller/TranscodeJobListBuilder.php b/modules/video_transcode/src/Controller/TranscodeJobListBuilder.php
index cd59d65..095397c 100644
--- a/modules/video_transcode/src/Controller/TranscodeJobListBuilder.php
+++ b/modules/video_transcode/src/Controller/TranscodeJobListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\video_transcode\Controller;
 
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\EntityListBuilder;
@@ -19,7 +20,7 @@ class TranscodeJobListBuilder extends EntityListBuilder {
   /**
    * The url generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
@@ -38,11 +39,11 @@ class TranscodeJobListBuilder extends EntityListBuilder {
   /**
    * Constructs a new TranscodeJobListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, UrlGeneratorInterface $url_generator) {
@@ -80,7 +81,7 @@ class TranscodeJobListBuilder extends EntityListBuilder {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function buildRow(EntityInterface $entity) {
     /* @var $entity \Drupal\video_transcode\Entity\TranscodeJob */
diff --git a/modules/video_transcode/src/Form/PresetAddForm.php b/modules/video_transcode/src/Form/PresetAddForm.php
index aecdaa6..efdf967 100644
--- a/modules/video_transcode/src/Form/PresetAddForm.php
+++ b/modules/video_transcode/src/Form/PresetAddForm.php
@@ -22,7 +22,7 @@ class PresetAddForm extends PresetFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
diff --git a/modules/video_transcode/src/Form/PresetDeleteForm.php b/modules/video_transcode/src/Form/PresetDeleteForm.php
index c668dbb..2d7fbef 100644
--- a/modules/video_transcode/src/Form/PresetDeleteForm.php
+++ b/modules/video_transcode/src/Form/PresetDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\video_transcode\Form;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Url;
 use Drupal\Core\Form\FormStateInterface;
@@ -57,7 +58,7 @@ class PresetDeleteForm extends EntityConfirmFormBase {
    * delete forms, this is typically the route that points at the list
    * controller.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The URL to go to if the user cancels the deletion.
    */
   public function getCancelUrl() {
@@ -72,10 +73,10 @@ class PresetDeleteForm extends EntityConfirmFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     // Delete the entity.
diff --git a/modules/video_transcode/src/Form/PresetEditForm.php b/modules/video_transcode/src/Form/PresetEditForm.php
index fdc4b27..6a8feaa 100644
--- a/modules/video_transcode/src/Form/PresetEditForm.php
+++ b/modules/video_transcode/src/Form/PresetEditForm.php
@@ -22,7 +22,7 @@ class PresetEditForm extends PresetFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
diff --git a/modules/video_transcode/src/Form/PresetFormBase.php b/modules/video_transcode/src/Form/PresetFormBase.php
index ecef42d..84254e8 100644
--- a/modules/video_transcode/src/Form/PresetFormBase.php
+++ b/modules/video_transcode/src/Form/PresetFormBase.php
@@ -24,7 +24,7 @@ use Drupal\Core\Url;
 class PresetFormBase extends EntityForm {
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -36,7 +36,7 @@ class PresetFormBase extends EntityForm {
    * from the container. We later use this query factory to build an entity
    * query for the exists() method.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   An entity query factory for the preset entity type.
    */
   public function __construct(EntityTypeManager $entity_type_manager) {
@@ -68,7 +68,7 @@ class PresetFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
@@ -539,7 +539,7 @@ class PresetFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
@@ -561,7 +561,7 @@ class PresetFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    */
   public function validate(array $form, FormStateInterface $form_state) {
@@ -580,7 +580,7 @@ class PresetFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    */
   public function save(array $form, FormStateInterface $form_state) {
diff --git a/modules/video_transcode/src/TranscoderBase.php b/modules/video_transcode/src/TranscoderBase.php
index 65a9f14..5ade012 100644
--- a/modules/video_transcode/src/TranscoderBase.php
+++ b/modules/video_transcode/src/TranscoderBase.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\video_transcode;
 
+use Drupal\file\Entity\File;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use GuzzleHttp\ClientInterface;
@@ -17,14 +18,14 @@ abstract class TranscoderBase extends PluginBase implements TranscoderInterface,
   /**
    * File object to transcode
    *
-   * @var Drupal\file\Entity\File $file
+   * @var File $file
    */
   protected $file;
   
   /**
    * An http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
   
@@ -34,7 +35,7 @@ abstract class TranscoderBase extends PluginBase implements TranscoderInterface,
    *
    * @param string $configuration
    *   The configuration of the plugin.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *    An HTTP client.
    *
    * @throws \Exception
diff --git a/modules/video_transcode/src/TranscoderManager.php b/modules/video_transcode/src/TranscoderManager.php
index 920f8ec..0e8bb98 100644
--- a/modules/video_transcode/src/TranscoderManager.php
+++ b/modules/video_transcode/src/TranscoderManager.php
@@ -21,9 +21,9 @@ class TranscoderManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Annotation/VideoEmbeddableProvider.php b/src/Annotation/VideoEmbeddableProvider.php
index d67fecb..cbf2f5a 100644
--- a/src/Annotation/VideoEmbeddableProvider.php
+++ b/src/Annotation/VideoEmbeddableProvider.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\video\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class VideoEmbeddableProvider extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -32,7 +33,7 @@ class VideoEmbeddableProvider extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation (optional)
+   * @var Translation (optional)
    */
   public $description = '';
   
diff --git a/src/Plugin/Field/FieldFormatter/VideoEmbedPlayerFormatter.php b/src/Plugin/Field/FieldFormatter/VideoEmbedPlayerFormatter.php
index 264720e..ddf204d 100644
--- a/src/Plugin/Field/FieldFormatter/VideoEmbedPlayerFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VideoEmbedPlayerFormatter.php
@@ -27,7 +27,7 @@ class VideoEmbedPlayerFormatter extends FormatterBase implements ContainerFactor
   /**
    * The embed provider plugin manager.
    *
-   * @var \Drupal\video\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;
 
@@ -113,7 +113,7 @@ class VideoEmbedPlayerFormatter extends FormatterBase implements ContainerFactor
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -123,7 +123,7 @@ class VideoEmbedPlayerFormatter extends FormatterBase implements ContainerFactor
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\video\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   The video embed provider manager.
    */
   public function __construct($plugin_id, $plugin_definition, $field_definition, $settings, $label, $view_mode, $third_party_settings, ProviderManagerInterface $provider_manager) {
diff --git a/src/Plugin/Field/FieldFormatter/VideoEmbedThumbnailFormatter.php b/src/Plugin/Field/FieldFormatter/VideoEmbedThumbnailFormatter.php
index a269df8..4134cd9 100644
--- a/src/Plugin/Field/FieldFormatter/VideoEmbedThumbnailFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VideoEmbedThumbnailFormatter.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\video\Plugin\Field\FieldFormatter;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Field\FormatterBase;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -37,7 +40,7 @@ class VideoEmbedThumbnailFormatter extends FormatterBase implements ContainerFac
   /**
    * The stream wrapper manager.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
@@ -54,13 +57,13 @@ class VideoEmbedThumbnailFormatter extends FormatterBase implements ContainerFac
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    * @param $langcode
    *
    * @return array
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityMalformedException
    */
   public function viewElements(FieldItemListInterface $items, $langcode) {
     // load widget settings
@@ -92,7 +95,7 @@ class VideoEmbedThumbnailFormatter extends FormatterBase implements ContainerFac
         $url = $items->getEntity()->toUrl();
       }
       elseif ($this->getSetting('link_image_to') == static::LINK_PROVIDER) {
-        $url = Url::fromUri(file_create_url($file->getFileUri()));
+        $url = \Drupal::service('file_url_generator')->generate($file->getFileUri());
       }
       $element[$delta] = $provider->renderThumbnail($this->getSetting('image_style'), $url);
     }
@@ -149,7 +152,7 @@ class VideoEmbedThumbnailFormatter extends FormatterBase implements ContainerFac
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -159,9 +162,9 @@ class VideoEmbedThumbnailFormatter extends FormatterBase implements ContainerFac
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\video\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   The video embed provider manager.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *`  The stream wrapper manager.
    */
   public function __construct($plugin_id, $plugin_definition, $field_definition, $settings, $label, $view_mode, $third_party_settings, ProviderManagerInterface $provider_manager, StreamWrapperManagerInterface $stream_wrapper_manager) {
diff --git a/src/Plugin/Field/FieldFormatter/VideoPlayerFormatter.php b/src/Plugin/Field/FieldFormatter/VideoPlayerFormatter.php
index 8d69ee8..9be1a78 100644
--- a/src/Plugin/Field/FieldFormatter/VideoPlayerFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VideoPlayerFormatter.php
@@ -29,7 +29,7 @@ class VideoPlayerFormatter extends VideoPlayerFormatterBase implements Container
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
@@ -40,7 +40,7 @@ class VideoPlayerFormatter extends VideoPlayerFormatterBase implements Container
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -50,7 +50,7 @@ class VideoPlayerFormatter extends VideoPlayerFormatterBase implements Container
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user) {
@@ -170,7 +170,7 @@ class VideoPlayerFormatter extends VideoPlayerFormatterBase implements Container
     foreach ($files as $delta => $file) {
       $elements[$delta] = [
         '#theme' => 'video_player_formatter',
-        '#items' => [file_create_url($file->getFileUri())],
+        '#items' => [\Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri())],
         '#player_attributes' => $this->getSettings(),
       ];
     }
diff --git a/src/Plugin/Field/FieldFormatter/VideoPlayerListFormatter.php b/src/Plugin/Field/FieldFormatter/VideoPlayerListFormatter.php
index 12817dc..d2a2664 100644
--- a/src/Plugin/Field/FieldFormatter/VideoPlayerListFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VideoPlayerListFormatter.php
@@ -42,7 +42,7 @@ class VideoPlayerListFormatter extends VideoPlayerFormatter implements Container
     // Collect cache tags to be added for each item in the field.
     $video_items = [];
     foreach ($files as $delta => $file) {
-      $video_items[] = file_create_url($file->getFileUri());
+      $video_items[] = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     }
     $elements[] = [
       '#theme' => 'video_player_formatter',
diff --git a/src/Plugin/Field/FieldFormatter/VideoUrlFormatter.php b/src/Plugin/Field/FieldFormatter/VideoUrlFormatter.php
index 12c1839..53ba67a 100644
--- a/src/Plugin/Field/FieldFormatter/VideoUrlFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VideoUrlFormatter.php
@@ -34,7 +34,7 @@ class VideoUrlFormatter extends VideoPlayerFormatterBase implements ContainerFac
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
@@ -45,7 +45,7 @@ class VideoUrlFormatter extends VideoPlayerFormatterBase implements ContainerFac
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -55,7 +55,7 @@ class VideoUrlFormatter extends VideoPlayerFormatterBase implements ContainerFac
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user) {
@@ -100,7 +100,7 @@ class VideoUrlFormatter extends VideoPlayerFormatterBase implements ContainerFac
 
     // Collect cache tags to be added for each item in the field.
     foreach ($files as $delta => $file) {
-      $video_uri = file_create_url($file->getFileUri());
+      $video_uri = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       $elements[$delta] = ['#markup' => $video_uri];
     }
     return $elements;
diff --git a/src/Plugin/Field/FieldType/VideoItem.php b/src/Plugin/Field/FieldType/VideoItem.php
index 5d3e6be..b50696d 100644
--- a/src/Plugin/Field/FieldType/VideoItem.php
+++ b/src/Plugin/Field/FieldType/VideoItem.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\video\Plugin\Field\FieldType;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -40,7 +41,7 @@ class VideoItem extends FileItem {
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -159,7 +160,7 @@ class VideoItem extends FileItem {
     // Generate a file entity.
     $destination = $dirname . '/' . $random->name(10, TRUE) . '.mp4';
     $data = $random->paragraphs(3);
-    $file = file_save_data($data, $destination, FileSystemInterface::EXISTS_ERROR);
+    $file = \Drupal::service('file.repository')->writeData($data, $destination, FileSystemInterface::EXISTS_ERROR);
     $values = [
       'target_id' => $file->id(),
     ];
@@ -177,7 +178,7 @@ class VideoItem extends FileItem {
   /**
    * Gets the entity manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface.
+   * @return EntityTypeManagerInterface .
    */
   protected function getEntityTypeManager() {
     if (!isset($this->entityTypeManager)) {
diff --git a/src/Plugin/Field/FieldWidget/VideoEmbedWidget.php b/src/Plugin/Field/FieldWidget/VideoEmbedWidget.php
index b438a3b..a6d167a 100644
--- a/src/Plugin/Field/FieldWidget/VideoEmbedWidget.php
+++ b/src/Plugin/Field/FieldWidget/VideoEmbedWidget.php
@@ -338,7 +338,7 @@ class VideoEmbedWidget extends FileWidget {
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function validateFormElement(array &$element, FormStateInterface $form_state) {
diff --git a/src/ProviderManager.php b/src/ProviderManager.php
index 61a6618..e54c816 100644
--- a/src/ProviderManager.php
+++ b/src/ProviderManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\video;
 
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Plugin\Mapper\MapperInterface;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -66,7 +67,7 @@ class ProviderManager extends DefaultPluginManager implements ProviderManagerInt
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function loadProviderFromStream($stream, $file, $metadata = [], $settings = []) {
     $definitions = $this->getDefinitions();
diff --git a/src/ProviderManagerInterface.php b/src/ProviderManagerInterface.php
index 81996ba..e74c4f3 100644
--- a/src/ProviderManagerInterface.php
+++ b/src/ProviderManagerInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\video;
 
+use Drupal\file\Entity\File;
 /**
  * Interface for the class that gathers the provider plugins.
  */
@@ -33,7 +34,7 @@ interface ProviderManagerInterface {
    * @param $user_input
    *   The user input to test against the plugins.
    *
-   * @return \Drupal\video\ProviderPluginInterface|bool
+   * @return ProviderPluginInterface|bool
    *   The relevant plugin or FALSE on failure.
    */
   public function loadApplicableDefinitionMatches(array $definitions, $user_input);
@@ -44,13 +45,13 @@ interface ProviderManagerInterface {
    * @param string $stream
    *   Stream used from the file.
    *
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   The source file.
    *
    * @param array $data
    *   Source file metadata.
    *
-   * @return \Drupal\video\ProviderPluginInterface|bool
+   * @return ProviderPluginInterface|bool
    *   The loaded plugin.
    */
   public function loadProviderFromStream($stream, $file, $data = []);
diff --git a/src/ProviderPluginBase.php b/src/ProviderPluginBase.php
index 08db2ce..7298175 100644
--- a/src/ProviderPluginBase.php
+++ b/src/ProviderPluginBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\video;
 
+use Drupal\file\Entity\File;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Component\Render\PlainTextOutput;
@@ -17,7 +18,7 @@ abstract class ProviderPluginBase implements ProviderPluginInterface, ContainerF
   /**
    * File object to handle
    *
-   * @var Drupal\file\Entity\File $file
+   * @var File $file
    */
   protected $file;
 
@@ -38,7 +39,7 @@ abstract class ProviderPluginBase implements ProviderPluginInterface, ContainerF
   /**
    * An http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
@@ -47,7 +48,7 @@ abstract class ProviderPluginBase implements ProviderPluginInterface, ContainerF
    *
    * @param string $configuration
    *   The configuration of the plugin.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *    An HTTP client.
    *
    * @throws \Exception
diff --git a/tests/src/Kernel/VideoItemSerializationTest.php b/tests/src/Kernel/VideoItemSerializationTest.php
index 3abd14f..19d603f 100644
--- a/tests/src/Kernel/VideoItemSerializationTest.php
+++ b/tests/src/Kernel/VideoItemSerializationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\video\Kernel;
 
+use Symfony\Component\Serializer\SerializerInterface;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\entity_test\Entity\EntityTest;
@@ -27,14 +28,14 @@ class VideoItemSerializationTest extends FieldKernelTestBase {
   /**
    * The serializer service.
    *
-   * @var \Symfony\Component\Serializer\SerializerInterface
+   * @var SerializerInterface
    */
   protected $serializer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
diff --git a/video.module b/video.module
index f9a9c37..31b94a0 100644
--- a/video.module
+++ b/video.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\video\ProviderManager;
 /**
  * @file
  * Exposes global functionality for video fields.
@@ -27,7 +28,7 @@ function video_theme() {
 function video_file_access(EntityInterface $entity, $operation, AccountInterface $account) {
   switch ($operation) {
     case 'view':
-      /** @var \Drupal\video\ProviderManager $provider_manager */
+      /** @var ProviderManager $provider_manager */
       $provider_manager = \Drupal::service('video.provider_manager');
       $stream_wrappers = [];
       foreach ($provider_manager->getDefinitions() as $definition) {
