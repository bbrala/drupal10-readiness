diff --git a/src/Form/UserPasswordRandomizerSettingsForm.php b/src/Form/UserPasswordRandomizerSettingsForm.php
index 4f0d55f..831eb8d 100644
--- a/src/Form/UserPasswordRandomizerSettingsForm.php
+++ b/src/Form/UserPasswordRandomizerSettingsForm.php
@@ -18,25 +18,25 @@ class UserPasswordRandomizerSettingsForm extends ConfigFormBase {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Constructs a new UserPasswordRandomizerSettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date formatter.
    */
   public function __construct(ConfigFactoryInterface $configFactory, ModuleHandlerInterface $moduleHandler, DateFormatterInterface $dateFormatter) {
diff --git a/src/RandomizerJobExecutor.php b/src/RandomizerJobExecutor.php
index f80c738..c07323d 100644
--- a/src/RandomizerJobExecutor.php
+++ b/src/RandomizerJobExecutor.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\user_password_randomizer;
 
+use Drupal\user\UserStorageInterface;
+use Drupal\user\UserInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityStorageException;
@@ -17,42 +19,42 @@ class RandomizerJobExecutor {
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The user password randomizer.
    *
-   * @var \Drupal\user_password_randomizer\UserPasswordRandomizerInterface
+   * @var UserPasswordRandomizerInterface
    */
   protected $randomizer;
 
   /**
    * The user entity storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;
 
@@ -100,7 +102,7 @@ class RandomizerJobExecutor {
     // @todo allow users to be configured.
     $userId = 1;
 
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     $user = $this->userStorage->load($userId);
     $loggerArgs = [
       '@user' => 'user ' . $user->id(),
diff --git a/src/UserPasswordRandomizer.php b/src/UserPasswordRandomizer.php
index a94ee94..9a60fab 100644
--- a/src/UserPasswordRandomizer.php
+++ b/src/UserPasswordRandomizer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\user_password_randomizer;
 
+use Drupal\user\UserStorageInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Utility\Token;
@@ -15,32 +16,32 @@ class UserPasswordRandomizer implements UserPasswordRandomizerInterface {
   /**
    * The token replacement instance.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * User storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;
 
   /**
    * UserPasswordRandomizer constructor.
    *
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token replacement instance.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(Token $token, ConfigFactoryInterface $configFactory, EntityTypeManagerInterface $entityTypeManager) {
@@ -77,7 +78,7 @@ class UserPasswordRandomizer implements UserPasswordRandomizerInterface {
       else {
         // When pattern is empty we generate a random (not cryptographically
         // secure) string.
-        $newUsername = user_password(16);
+        $newUsername = \Drupal::service('password_generator')->generate(16);
       }
     } while ($countUsers($newUsername) > 0);
 
@@ -90,7 +91,7 @@ class UserPasswordRandomizer implements UserPasswordRandomizerInterface {
   public function generatePassword(UserInterface $user): string {
     // @todo Replace user_password() with password component.
     // @see https://www.drupal.org/project/drupal/issues/3153085
-    return \user_password(16);
+    return \Drupal::service('password_generator')->generate(16);
   }
 
 }
diff --git a/src/UserPasswordRandomizerInterface.php b/src/UserPasswordRandomizerInterface.php
index 2a8f4a2..9d5237f 100644
--- a/src/UserPasswordRandomizerInterface.php
+++ b/src/UserPasswordRandomizerInterface.php
@@ -14,7 +14,7 @@ interface UserPasswordRandomizerInterface {
    *
    * This ensures no other username than the user passed have this username.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   Generate a new username for this user.
    *
    * @return string
@@ -25,7 +25,7 @@ interface UserPasswordRandomizerInterface {
   /**
    * Generates a password for a user.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   Generate a new password for this user.
    *
    * @return string
diff --git a/tests/src/Unit/RandomizerJobExecutorTest.php b/tests/src/Unit/RandomizerJobExecutorTest.php
index 2062748..46e0e58 100644
--- a/tests/src/Unit/RandomizerJobExecutorTest.php
+++ b/tests/src/Unit/RandomizerJobExecutorTest.php
@@ -3,6 +3,9 @@
 namespace Drupal\Tests\user_password_randomizer\Unit {
 
 
+  use Prophecy\PhpUnit\ProphecyTrait;
+  use Drupal\Core\Config\ConfigFactoryInterface;
+  use PHPUnit\Framework\MockObject\MockBuilder;
   use Drupal\Component\Datetime\TimeInterface;
   use Drupal\Core\Entity\EntityStorageInterface;
   use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -20,11 +23,12 @@ namespace Drupal\Tests\user_password_randomizer\Unit {
    */
   class RandomizerJobExecutorTest extends UnitTestCase {
 
+    use ProphecyTrait;
     /**
      * @covers ::execute
      */
     public function testExecute() {
-      /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockBuilder $configFactory */
+      /** @var ConfigFactoryInterface|MockBuilder $configFactory */
       $configFactory = $this->getConfigFactoryStub([
         'user_password_randomizer.settings' => [
           'update_interval' => 60,
diff --git a/user_password_randomizer.info.yml b/user_password_randomizer.info.yml
index 28e4313..99c0ecb 100644
--- a/user_password_randomizer.info.yml
+++ b/user_password_randomizer.info.yml
@@ -1,6 +1,6 @@
 name: 'User Password Randomizer'
 type: module
 description: 'Prevents password based logins by uid 1.'
-core_version_requirement: ^8.9 || ^9
+core_version_requirement: ^9.1 || ^10
 php: 7.3
 configure: user_password_randomizer.settings
diff --git a/user_password_randomizer.module b/user_password_randomizer.module
index b1a56ca..279a9d3 100644
--- a/user_password_randomizer.module
+++ b/user_password_randomizer.module
@@ -1,15 +1,15 @@
 <?php
 
+use Drupal\user_password_randomizer\RandomizerJobExecutor;
 /**
  * @file
  * Drupal hooks and functions for user_password_randomizer.
  */
-
 /**
  * Implements hook_cron().
  */
 function user_password_randomizer_cron() {
-  /** @var \Drupal\user_password_randomizer\RandomizerJobExecutor $jobExecutor */
+  /** @var RandomizerJobExecutor $jobExecutor */
   $jobExecutor = \Drupal::service('user_password_randomizer.job_executor');
   $jobExecutor->cron();
 }
