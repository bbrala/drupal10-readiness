modules/contrib/aws_polly/aws_polly.form.inc
modules/contrib/aws_polly/aws_polly.install
modules/contrib/aws_polly/aws_polly.module
modules/contrib/aws_polly/src/Form/AwsPollySettingsForm.php
modules/contrib/aws_polly/src/Service/TextToSpeech.php

2 files with changes
====================

1) modules/contrib/aws_polly/src/Service/TextToSpeech.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\aws_polly\Service;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Session\AccountProxy;
 use Drupal\file\Entity\File;
@@ @@
   /**
    * The aws polly configuration object.
    *
-   * @var Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   public $config;

@@ @@
   /**
    * The aws polly client object.
    *
-   * @var Aws\Polly\PollyClient
+   * @var PollyClient
    */
   protected $client;

@@ @@
   /**
    * Drupal\Core\Session\AccountProxy definition.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;

@@ @@
   /**
    * Creates a config of aws_polly.settings.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountProxy $current_user
+   * @param AccountProxy $current_user
    *   The current user object.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AccountProxy $current_user) {
@@ @@
    * @param array $parameters
    *   Parameters pass to generate file.
    *
-   * @return Drupal\file\Entity\File
+   * @return File
    *   Returns drupal file object.
    */
   public function generateFile(array $parameters = []) {
@@ @@
    * @param string $uri_schema
    *   Uri scheme to get file.
    *
-   * @return Drupal\file\Entity\File
+   * @return File
    *   Return drupal file object.
    *
    * @TODO: give to filename more info about content (ie: node title)
-   *
    */
   public function getFile(array $parameters = [], $uri_schema = "public://") {
     $format = isset($parameters['format']) ? $parameters['format'] : 'mp3';
@@ @@
   /**
    * Function uploads the file from given content.
    *
-   * @param Drupal\file\Entity\File $file
+   * @param File $file
    *   The drupal File object.
    * @param string $content
    *   The audio file content from aws polly service.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/aws_polly/aws_polly.module:78

    ---------- begin diff ----------
@@ @@
         $entity_type = 'node';
         $builder = \Drupal::entityTypeManager()->getViewBuilder($entity_type);
         $build = $builder->view($node, $view_mode);
-        $output = render($build);
+        $output = \Drupal::service('renderer')->render($build);
         $output = strip_tags($output);

         if ($node->original) {
           $build = $builder->view($node->original, $view_mode);
-          $output_original = render($build);
+          $output_original = \Drupal::service('renderer')->render($build);
           $output_original = strip_tags($output_original);
         }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

