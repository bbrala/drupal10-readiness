diff --git a/linkyreplacer.install b/linkyreplacer.install
index baac89f..1b28944 100644
--- a/linkyreplacer.install
+++ b/linkyreplacer.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Extension\ModuleInstallerInterface;
 /**
  * @file
  * Installation functionality for Linky Replacer.
@@ -30,7 +31,7 @@ function linkyreplacer_update_8202(&$sandbox): void {
  */
 function linkyreplacer_update_8203(&$sandbox): void {
   // Install the Entity Route Context module.
-  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $moduleInstaller */
+  /** @var ModuleInstallerInterface $moduleInstaller */
   $moduleInstaller = \Drupal::service('module_installer');
   $moduleInstaller->install(['entity_route_context']);
 }
diff --git a/linkyreplacer.module b/linkyreplacer.module
index de20123..2ea058c 100644
--- a/linkyreplacer.module
+++ b/linkyreplacer.module
@@ -11,7 +11,7 @@ use Drupal\linkyreplacer\LinkyReplacerEntityOperations;
  * Implements hook_entity_presave().
  */
 function linkyreplacer_entity_presave(EntityInterface $entity): void {
-  /** @var \Drupal\linkyreplacer\LinkyReplacerEntityOperations $entityOperations */
+  /** @var LinkyReplacerEntityOperations $entityOperations */
   $entityOperations = \Drupal::service('class_resolver')->getInstanceFromDefinition(LinkyReplacerEntityOperations::class);
   $entityOperations->entityPreSave($entity);
 }
diff --git a/src/Form/LinkyReplacerConfigurationForm.php b/src/Form/LinkyReplacerConfigurationForm.php
index 28215dd..5d54570 100644
--- a/src/Form/LinkyReplacerConfigurationForm.php
+++ b/src/Form/LinkyReplacerConfigurationForm.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\linkyreplacer\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -107,7 +108,7 @@ class LinkyReplacerConfigurationForm extends ConfigFormBase {
    * @param string[] $domains
    *   An array of domain rules.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   An array of errors, if any.
    */
   protected function checkRedundantDomains(array $domains): array {
diff --git a/src/LinkyEntityUtility.php b/src/LinkyEntityUtility.php
index d072155..eed9895 100644
--- a/src/LinkyEntityUtility.php
+++ b/src/LinkyEntityUtility.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\linkyreplacer;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -19,41 +20,41 @@ class LinkyEntityUtility implements LinkyEntityUtilityInterface {
   /**
    * Linky storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $linkyStorage;
 
   /**
    * Service for determining whether a URL is internal or external.
    *
-   * @var \Drupal\linkyreplacer\LinkyRealmDeterminatorInterface
+   * @var LinkyRealmDeterminatorInterface
    */
   protected $realmDeterminator;
 
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Entity route context route helper.
    *
-   * @var \Drupal\entity_route_context\EntityRouteContextRouteHelperInterface
+   * @var EntityRouteContextRouteHelperInterface
    */
   protected $entityRouteContextRouteHelper;
 
   /**
    * LinkyEntityUtility constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\linkyreplacer\LinkyRealmDeterminatorInterface $realmDeterminator
+   * @param LinkyRealmDeterminatorInterface $realmDeterminator
    *   Service for determining whether a URL is internal or external.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory.
-   * @param \Drupal\entity_route_context\EntityRouteContextRouteHelperInterface $entityRouteContextRouteHelper
+   * @param EntityRouteContextRouteHelperInterface $entityRouteContextRouteHelper
    *   Entity route context route helper.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, LinkyRealmDeterminatorInterface $realmDeterminator, ConfigFactoryInterface $configFactory, EntityRouteContextRouteHelperInterface $entityRouteContextRouteHelper) {
diff --git a/src/LinkyEntityUtilityInterface.php b/src/LinkyEntityUtilityInterface.php
index 3392126..cdbf521 100644
--- a/src/LinkyEntityUtilityInterface.php
+++ b/src/LinkyEntityUtilityInterface.php
@@ -32,7 +32,7 @@ interface LinkyEntityUtilityInterface {
    *   The href. If the href is converted to Linky then the original href is
    *   updated.
    *
-   * @return \Drupal\linky\LinkyInterface|null
+   * @return LinkyInterface|null
    *   Linky for entity, or NULL if no Linky exists for this uri.
    *
    * @throws \InvalidArgumentException
@@ -48,7 +48,7 @@ interface LinkyEntityUtilityInterface {
    * @param string $title
    *   The link title.
    *
-   * @return \Drupal\linky\LinkyInterface
+   * @return LinkyInterface
    *   The created Linky entity.
    *
    * @throws \InvalidArgumentException
@@ -62,7 +62,7 @@ interface LinkyEntityUtilityInterface {
    * @param int $id
    *   The link ID.
    *
-   * @return \Drupal\linky\LinkyInterface|null
+   * @return LinkyInterface|null
    *   Linky, or NULL if no linky exists for this uri.
    */
   public function getLinkyById(int $id): ?LinkyInterface;
@@ -73,7 +73,7 @@ interface LinkyEntityUtilityInterface {
    * @param string $uri
    *   The link URI.
    *
-   * @return \Drupal\linky\LinkyInterface|null
+   * @return LinkyInterface|null
    *   Linky, or NULL if no Linky exists for this uri.
    */
   public function getLinkyByUri(string $uri): ?LinkyInterface;
diff --git a/src/LinkyRealmDeterminator.php b/src/LinkyRealmDeterminator.php
index 336e0ba..d49f970 100644
--- a/src/LinkyRealmDeterminator.php
+++ b/src/LinkyRealmDeterminator.php
@@ -21,14 +21,14 @@ class LinkyRealmDeterminator implements LinkyRealmDeterminatorInterface {
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs a new LinkyRealmDeterminator service.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration object factory.
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
diff --git a/src/LinkyReplacerEntityOperations.php b/src/LinkyReplacerEntityOperations.php
index 3144b36..dd8337e 100644
--- a/src/LinkyReplacerEntityOperations.php
+++ b/src/LinkyReplacerEntityOperations.php
@@ -27,14 +27,14 @@ class LinkyReplacerEntityOperations implements ContainerInjectionInterface {
   /**
    * Link replacer.
    *
-   * @var \Drupal\linkyreplacer\LinkyReplacerLinkReplacerInterface
+   * @var LinkyReplacerLinkReplacerInterface
    */
   protected $linkReplacer;
 
   /**
    * Constructs a new LinkyReplacerEntityOperations.
    *
-   * @param \Drupal\linkyreplacer\LinkyReplacerLinkReplacerInterface $linkReplacer
+   * @param LinkyReplacerLinkReplacerInterface $linkReplacer
    *   Link replacer.
    */
   public function __construct(LinkyReplacerLinkReplacerInterface $linkReplacer) {
diff --git a/src/LinkyReplacerLinkReplacer.php b/src/LinkyReplacerLinkReplacer.php
index d58a466..8ea96ea 100644
--- a/src/LinkyReplacerLinkReplacer.php
+++ b/src/LinkyReplacerLinkReplacer.php
@@ -17,23 +17,23 @@ class LinkyReplacerLinkReplacer implements LinkyReplacerLinkReplacerInterface {
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Utility for dealing with Linky entities.
    *
-   * @var \Drupal\linkyreplacer\LinkyEntityUtilityInterface
+   * @var LinkyEntityUtilityInterface
    */
   protected $linkyUtility;
 
   /**
    * LinkyReplacerLinkReplacer constructor.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\linkyreplacer\LinkyEntityUtilityInterface $linkyUtility
+   * @param LinkyEntityUtilityInterface $linkyUtility
    *   Utility for dealing with Linky entities.
    */
   public function __construct(LoggerInterface $logger, LinkyEntityUtilityInterface $linkyUtility) {
diff --git a/tests/src/Unit/LinkyReplacerRealmDeterminatorUnitTest.php b/tests/src/Unit/LinkyReplacerRealmDeterminatorUnitTest.php
index 2afbe98..9837413 100644
--- a/tests/src/Unit/LinkyReplacerRealmDeterminatorUnitTest.php
+++ b/tests/src/Unit/LinkyReplacerRealmDeterminatorUnitTest.php
@@ -29,8 +29,7 @@ final class LinkyReplacerRealmDeterminatorUnitTest extends UnitTestCase {
    * @covers ::isInternal
    */
   public function testIsInternal(string $assertUrlString, bool $expectIsInternal): void {
-    $configFactory = $this->getMockBuilder(ConfigFactoryInterface::class)
-      ->getMock();
+    $configFactory = $this->createMock(ConfigFactoryInterface::class);
     $config = $this->createMock(ImmutableConfig::class);
     $configFactory->expects($this->any())
       ->method('get')
