diff --git a/src/EventSubscriber/OverviewTerms.php b/src/EventSubscriber/OverviewTerms.php
index 4db9cc5..c36e99f 100644
--- a/src/EventSubscriber/OverviewTerms.php
+++ b/src/EventSubscriber/OverviewTerms.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\term_split\EventSubscriber;
 
+use Drupal\taxonomy\Entity\Term;
 use Drupal\Core\Render\Element;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
@@ -43,11 +44,11 @@ class OverviewTerms implements EventSubscriberInterface {
     $children = Element::getVisibleChildren($form['terms']);
 
     foreach ($children as $child) {
-      /** @var \Drupal\taxonomy\Entity\Term $currentTerm */
+      /** @var Term $currentTerm */
       $currentTerm = $form['terms'][$child]['#term'];
       $routeName = 'entity.taxonomy_term.split_form';
       $routeParameters['taxonomy_term'] = $currentTerm->id();
-      /** @var \Drupal\Core\Url $editUrl */
+      /** @var Url $editUrl */
       $editUrl = $form['terms'][$child]['operations']['#links']['edit']['url'];
       $options = $editUrl->getOptions();
       $splitFormUrl = new Url($routeName, $routeParameters, $options);
diff --git a/src/Form/SplitTerm.php b/src/Form/SplitTerm.php
index 3b78c37..7d3c01d 100644
--- a/src/Form/SplitTerm.php
+++ b/src/Form/SplitTerm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\term_split\Form;
 
+use Drupal\node\NodeInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -20,14 +21,14 @@ class SplitTerm extends FormBase {
   /**
    * The reference finder.
    *
-   * @var \Drupal\term_reference_change\ReferenceFinder
+   * @var ReferenceFinder
    */
   private $referenceFinder;
 
   /**
    * The source term.
    *
-   * @var \Drupal\taxonomy\TermInterface
+   * @var TermInterface
    */
   private $sourceTerm;
 
@@ -51,7 +52,7 @@ class SplitTerm extends FormBase {
   /**
    * SplitTerm constructor.
    *
-   * @param \Drupal\term_reference_change\ReferenceFinder $referenceFinder
+   * @param ReferenceFinder $referenceFinder
    *   The reference finder service.
    * @param \Drupal\user\PrivateTempStoreFactory $tempStoreFactory
    *   The temp store factory service.
@@ -101,7 +102,7 @@ class SplitTerm extends FormBase {
       '#size' => 25,
     ];
 
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     foreach ($this->getReferencingNodes($taxonomy_term) as $node) {
       $form['nodes'][$node->id()]['link'] = [
         '#type' => 'link',
@@ -178,10 +179,10 @@ class SplitTerm extends FormBase {
   /**
    * A callback for the form title.
    *
-   * @param \Drupal\taxonomy\TermInterface $taxonomy_term
+   * @param TermInterface $taxonomy_term
    *   The source term.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The title.
    *
    * @SuppressWarnings(camelCase)
@@ -193,10 +194,10 @@ class SplitTerm extends FormBase {
   /**
    * Creates a cancel url object.
    *
-   * @param \Drupal\taxonomy\TermInterface $sourceTerm
+   * @param TermInterface $sourceTerm
    *   The source term.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The cancel url.
    *
    * @SuppressWarnings(static)
@@ -221,10 +222,10 @@ class SplitTerm extends FormBase {
   /**
    * Retrieves all nodes referencing the given term.
    *
-   * @param \Drupal\taxonomy\TermInterface $term
+   * @param TermInterface $term
    *   The term to retrieve references for.
    *
-   * @return \Drupal\node\NodeInterface[]
+   * @return NodeInterface[]
    *   The referencing nodes.
    */
   private function getReferencingNodes(TermInterface $term) {
@@ -240,7 +241,7 @@ class SplitTerm extends FormBase {
   /**
    * Retrieves the name for the given target term.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    * @param string $target
    *   The target.
@@ -255,7 +256,7 @@ class SplitTerm extends FormBase {
   /**
    * Retrieves the selected node ids for the given target from the form state.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    * @param string $target
    *   The target.
diff --git a/src/Form/SplitTermConfirm.php b/src/Form/SplitTermConfirm.php
index 0add09e..10e662e 100644
--- a/src/Form/SplitTermConfirm.php
+++ b/src/Form/SplitTermConfirm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\term_split\Form;
 
+use Drupal\node\NodeInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormBase;
@@ -24,7 +25,7 @@ class SplitTermConfirm extends FormBase {
   /**
    * The term splitter.
    *
-   * @var \Drupal\term_split\TermSplitterInterface
+   * @var TermSplitterInterface
    */
   private $termSplitter;
 
@@ -38,7 +39,7 @@ class SplitTermConfirm extends FormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
@@ -56,11 +57,11 @@ class SplitTermConfirm extends FormBase {
   /**
    * SplitTerm constructor.
    *
-   * @param \Drupal\term_split\TermSplitterInterface $termSplitter
+   * @param TermSplitterInterface $termSplitter
    *   The term splitter service.
    * @param \Drupal\user\PrivateTempStoreFactory $tempStoreFactory
    *   The temp store factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager service.
    */
   public function __construct(TermSplitterInterface $termSplitter, PrivateTempStoreFactory $tempStoreFactory, EntityTypeManagerInterface $entityTypeManager) {
@@ -146,7 +147,7 @@ class SplitTermConfirm extends FormBase {
   /**
    * A callback for the form title.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The title.
    */
   public function titleCallback() {
@@ -157,10 +158,10 @@ class SplitTermConfirm extends FormBase {
   /**
    * Creates a cancel url object.
    *
-   * @param \Drupal\taxonomy\TermInterface $sourceTerm
+   * @param TermInterface $sourceTerm
    *   The source term.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The cancel url.
    *
    * @SuppressWarnings(static)
@@ -185,13 +186,13 @@ class SplitTermConfirm extends FormBase {
   /**
    * Loads the source term.
    *
-   * @return \Drupal\taxonomy\TermInterface
+   * @return TermInterface
    *   The loaded source term.
    */
   protected function getSourceTerm() {
     $settings = $this->getSplitSettings();
 
-    /** @var \Drupal\taxonomy\TermInterface $term */
+    /** @var TermInterface $term */
     $term = $this->entityTypeManager->getStorage('taxonomy_term')
       ->load($settings['tid']);
 
@@ -201,14 +202,14 @@ class SplitTermConfirm extends FormBase {
   /**
    * Loads all nodes referencing the term to be split.
    *
-   * @return \Drupal\node\NodeInterface[]
+   * @return NodeInterface[]
    *   The loaded nodes.
    */
   protected function loadNodesReferencingSourceTerm() {
     $settings = $this->getSplitSettings();
 
     $allConfiguredNids = array_merge($settings['a']['nids'], $settings['b']['nids']);
-    /** @var \Drupal\node\NodeInterface[] $nodes */
+    /** @var NodeInterface[] $nodes */
     $nodes = $this->entityTypeManager->getStorage('node')
       ->loadMultiple($allConfiguredNids);
     return $nodes;
diff --git a/src/TermSplitter.php b/src/TermSplitter.php
index 0221b90..a309371 100644
--- a/src/TermSplitter.php
+++ b/src/TermSplitter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\term_split;
 
+use Drupal\taxonomy\TermStorageInterface;
 use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -18,30 +19,30 @@ class TermSplitter implements TermSplitterInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
   /**
    * The taxonomy term storage.
    *
-   * @var \Drupal\taxonomy\TermStorageInterface
+   * @var TermStorageInterface
    */
   private $termStorage;
 
   /**
    * The term reference migration service.
    *
-   * @var \Drupal\term_reference_change\ReferenceMigrator
+   * @var ReferenceMigrator
    */
   private $migrator;
 
   /**
    * TermSplitter constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager service.
-   * @param \Drupal\term_reference_change\ReferenceMigrator $migrator
+   * @param ReferenceMigrator $migrator
    *   The reference migration service.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, ReferenceMigrator $migrator) {
@@ -67,7 +68,7 @@ class TermSplitter implements TermSplitterInterface {
       '%a' => $term1->label(),
       '%b' => $term2->label(),
     ];
-    drupal_set_message($this->t('%source has been split into %a and %b', $args));
+    \Drupal::messenger()->addStatus($this->t('%source has been split into %a and %b', $args));
   }
 
   /**
@@ -78,7 +79,7 @@ class TermSplitter implements TermSplitterInterface {
    * @param string $vocabularyId
    *   The vocabulary id.
    *
-   * @return \Drupal\taxonomy\TermInterface
+   * @return TermInterface
    *   The created or loaded term.
    */
   private function createTermIfNotExists($termName, $vocabularyId) {
@@ -99,7 +100,7 @@ class TermSplitter implements TermSplitterInterface {
   /**
    * Delete a taxonomy term.
    *
-   * @param \Drupal\taxonomy\TermInterface $term
+   * @param TermInterface $term
    *   The term to delete.
    */
   private function deleteTerm(TermInterface $term) {
@@ -114,10 +115,10 @@ class TermSplitter implements TermSplitterInterface {
    * @param string $vocabularyId
    *   The vocabulary id.
    *
-   * @return \Drupal\taxonomy\TermInterface
+   * @return TermInterface
    *   The loaded or created taxonomy term.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function loadTerm($name, $vocabularyId) {
     $result = $this->termStorage->loadByProperties([
@@ -135,9 +136,9 @@ class TermSplitter implements TermSplitterInterface {
   /**
    * Migrates node references from source term to the target term.
    *
-   * @param \Drupal\taxonomy\TermInterface $sourceTerm
+   * @param TermInterface $sourceTerm
    *   The term to migrate from.
-   * @param \Drupal\taxonomy\TermInterface $targetTerm
+   * @param TermInterface $targetTerm
    *   The term to migrate to.
    * @param int[] $limitByNids
    *   Only change nodes with an id in this list.
diff --git a/src/TermSplitterInterface.php b/src/TermSplitterInterface.php
index 9d7861c..1c15290 100644
--- a/src/TermSplitterInterface.php
+++ b/src/TermSplitterInterface.php
@@ -12,7 +12,7 @@ interface TermSplitterInterface {
   /**
    * Splits a source term into two new target terms.
    *
-   * @param \Drupal\taxonomy\TermInterface $sourceTerm
+   * @param TermInterface $sourceTerm
    *   The term to split.
    * @param string $target1
    *   The name of the first target term.
diff --git a/tests/src/Kernel/Form/SplitTermTest.php b/tests/src/Kernel/Form/SplitTermTest.php
index e28d303..34dc298 100644
--- a/tests/src/Kernel/Form/SplitTermTest.php
+++ b/tests/src/Kernel/Form/SplitTermTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\term_split\Kernel\Form;
 
+use Drupal\taxonomy\TermInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\Core\Url;
 use Drupal\node\Entity\Node;
@@ -19,21 +20,21 @@ class SplitTermTest extends TermSplitTestBase {
   /**
    * The term.
    *
-   * @var \Drupal\taxonomy\TermInterface
+   * @var TermInterface
    */
   private $term;
 
   /**
    * The term splitter.
    *
-   * @var \Drupal\Tests\term_split\Kernel\TestDoubles\TermSplitterSpy
+   * @var TermSplitterSpy
    */
   private $termSplitter;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->termSplitter = new TermSplitterSpy();
diff --git a/tests/src/Kernel/TermSplitTestBase.php b/tests/src/Kernel/TermSplitTestBase.php
index 08f6627..0b062b8 100644
--- a/tests/src/Kernel/TermSplitTestBase.php
+++ b/tests/src/Kernel/TermSplitTestBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\term_split\Kernel;
 
+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\taxonomy\Entity\Vocabulary;
+use Drupal\taxonomy\TermStorage;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\field\Traits\EntityReferenceTestTrait;
@@ -39,21 +42,21 @@ abstract class TermSplitTestBase extends KernelTestBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * The vocabulary.
    *
-   * @var \Drupal\taxonomy\Entity\Vocabulary
+   * @var Vocabulary
    */
   protected $vocabulary;
 
   /**
    * The term storage.
    *
-   * @var \Drupal\taxonomy\TermStorage
+   * @var TermStorage
    */
   protected $termStorage;
 
@@ -67,7 +70,7 @@ abstract class TermSplitTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['filter']);
     $this->installSchema('system', ['key_value_expire', 'sequences']);
diff --git a/tests/src/Kernel/TermSplitterTest.php b/tests/src/Kernel/TermSplitterTest.php
index e9be840..9eb4617 100644
--- a/tests/src/Kernel/TermSplitterTest.php
+++ b/tests/src/Kernel/TermSplitterTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\term_split\Kernel;
 
+use Drupal\term_reference_change\ReferenceMigrator;
+use Drupal\node\Entity\Node;
 use Drupal\term_split\TermSplitter;
 
 /**
@@ -14,14 +16,14 @@ class TermSplitterTest extends TermSplitTestBase {
   /**
    * The term reference migrator.
    *
-   * @var \Drupal\term_reference_change\ReferenceMigrator
+   * @var ReferenceMigrator
    */
   private $termReferenceMigrator;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->termReferenceMigrator = \Drupal::getContainer()->get('term_reference_change.migrator');
   }
@@ -94,9 +96,9 @@ class TermSplitterTest extends TermSplitTestBase {
     $term2Result = $this->termStorage->loadByProperties(['name' => 'Term 2']);
     $term2 = reset($term2Result);
 
-    /** @var \Drupal\node\Entity\Node $node1 */
+    /** @var Node $node1 */
     $node1 = $this->entityTypeManager->getStorage('node')->load($node1->id());
-    /** @var \Drupal\node\Entity\Node $node2 */
+    /** @var Node $node2 */
     $node2 = $this->entityTypeManager->getStorage('node')->load($node2->id());
     self::assertEquals($term1->id(), $node1->get('field_terms')->getString());
     self::assertEquals($term2->id(), $node2->get('field_terms')->getString());
