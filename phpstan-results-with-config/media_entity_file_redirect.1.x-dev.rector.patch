diff --git a/media_entity_file_redirect.info.yml b/media_entity_file_redirect.info.yml
index c0ac2db..da204ce 100644
--- a/media_entity_file_redirect.info.yml
+++ b/media_entity_file_redirect.info.yml
@@ -4,4 +4,4 @@ type: module
 package: Media
 dependencies:
 - drupal:media
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^9.3 || ^10
diff --git a/media_entity_file_redirect.module b/media_entity_file_redirect.module
index 97760b9..ecd5508 100644
--- a/media_entity_file_redirect.module
+++ b/media_entity_file_redirect.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\media\Entity\MediaType;
 /**
  * @file
  * Media Entity File Redirect module.
@@ -15,7 +16,7 @@ use Drupal\media\MediaTypeInterface;
  * Adds crop configuration fields to media form.
  */
 function media_entity_file_redirect_form_media_type_edit_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\media\Entity\MediaType $entityType */
+  /** @var MediaType $entityType */
   $entityType = $form_state->getFormObject()->getEntity();
   $mediaSource = $entityType->getSource();
   if ($mediaSource instanceof File) {
diff --git a/src/Controller/MediaEntityFileRedirectController.php b/src/Controller/MediaEntityFileRedirectController.php
index b7087cf..93cbb87 100644
--- a/src/Controller/MediaEntityFileRedirectController.php
+++ b/src/Controller/MediaEntityFileRedirectController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\media_entity_file_redirect\Controller;
 
+use Drupal\media\Entity\MediaType;
+use Drupal\file\FileInterface;
 use Drupal\Core\Cache\CacheableRedirectResponse;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -19,14 +21,14 @@ class MediaEntityFileRedirectController implements ContainerInjectionInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
@@ -44,7 +46,7 @@ class MediaEntityFileRedirectController implements ContainerInjectionInterface {
    * Returns a redirect to file source associated with passed in media entity.
    */
   public function redirectToFile(MediaInterface $media) {
-    /** @var \Drupal\media\Entity\MediaType $mediaType */
+    /** @var MediaType $mediaType */
     $mediaType = $this
       ->entityTypeManager
       ->getStorage('media_type')
@@ -56,7 +58,7 @@ class MediaEntityFileRedirectController implements ContainerInjectionInterface {
       // Now load the file and return a redirect response to the file URL.
       $fid = $media->getSource()->getSourceFieldValue($media);
       if ($fid) {
-        /** @var \Drupal\file\FileInterface $file */
+        /** @var FileInterface $file */
         $file = $this->entityTypeManager->getStorage('file')->load($fid);
         if ($file) {
 
@@ -66,7 +68,7 @@ class MediaEntityFileRedirectController implements ContainerInjectionInterface {
           // See https://drupal.stackexchange.com/questions/273579
           $context = new RenderContext();
           $url = \Drupal::service('renderer')->executeInRenderContext($context, function () use ($file) {
-            return file_create_url($file->getFileUri());
+            return \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
           });
 
           $response = new CacheableRedirectResponse($url);
