diff --git a/src/Plugin/tmgmt/Translator/TransifexTranslator.php b/src/Plugin/tmgmt/Translator/TransifexTranslator.php
index 7df1cae..f26c93c 100755
--- a/src/Plugin/tmgmt/Translator/TransifexTranslator.php
+++ b/src/Plugin/tmgmt/Translator/TransifexTranslator.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\tmgmt_transifex\Plugin\tmgmt\Translator;
 
+use Drupal\tmgmt\Entity\JobItem;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\tmgmt\ContinuousTranslatorInterface;
@@ -261,7 +262,7 @@ class TransifexTranslator extends TranslatorPluginBase implements ContainerFacto
     */
     public function requestJobItemsTranslation(array $job_items)
     {
-        /** @var \Drupal\tmgmt\Entity\JobItem $job_item */
+        /** @var JobItem $job_item */
         foreach ($job_items as $job_item) {
             $this->checkForTranslations($job_item->getJob());
         }
diff --git a/src/TransifexTranslatorUi.php b/src/TransifexTranslatorUi.php
index 4a6c603..f36ccaa 100755
--- a/src/TransifexTranslatorUi.php
+++ b/src/TransifexTranslatorUi.php
@@ -1,6 +1,7 @@
 <?php
 namespace Drupal\tmgmt_transifex;
 
+use Drupal\tmgmt\TranslatorInterface;
 use Drupal\tmgmt\TranslatorPluginUiBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\tmgmt\JobInterface;
@@ -39,7 +40,7 @@ class TransifexTranslatorUi extends TranslatorPluginUiBase
     {
         $form = parent::buildConfigurationForm($form, $form_state);
 
-        /** @var \Drupal\tmgmt\TranslatorInterface $translator */
+        /** @var TranslatorInterface $translator */
         $translator = $form_state->getFormObject()->getEntity();
         $instruction_url = 'https://transifex.com/docs';
         $form['api'] = array(
diff --git a/src/Utils/Helpers.php b/src/Utils/Helpers.php
index 9e22532..0ac4619 100755
--- a/src/Utils/Helpers.php
+++ b/src/Utils/Helpers.php
@@ -468,7 +468,9 @@ class Helpers
         $locale_lid = $job_item->item_id;
 
         // Check existence of assigned lid.
-        $exists = db_query("SELECT COUNT(lid) FROM {locales_source} WHERE lid = :lid", array(':lid' => $locale_lid))->fetchField();
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $exists = \Drupal::database()->query("SELECT COUNT(lid) FROM {locales_source} WHERE lid = :lid", array(':lid' => $locale_lid))->fetchField();
         if (!$exists) {
             throw new TMGMTException(t('Unable to load locale with id %id', array('%id' => $job_item->item_id)));
         }
@@ -483,7 +485,9 @@ class Helpers
         }
 
         if ($source_language == 'en') {
-            $query = db_select('locales_source', 'ls');
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+            $query = \Drupal::database()->select('locales_source', 'ls');
             $query
                 ->fields('ls')
                 ->condition('ls.lid', $locale_lid);
@@ -500,7 +504,9 @@ class Helpers
             $locale_object->origin = 'source';
         }
         else {
-            $query = db_select('locales_target', 'lt');
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+            $query = \Drupal::database()->select('locales_target', 'lt');
             $query->join('locales_source', 'ls', 'ls.lid = lt.lid');
             $query
                 ->fields('lt')
