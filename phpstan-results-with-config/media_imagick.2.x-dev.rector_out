modules/contrib/media_imagick/media_imagick.install
modules/contrib/media_imagick/src/Plugin/MediaSourceDecoratorBase.php
modules/contrib/media_imagick/src/Plugin/PluginDecorator/Imagick.php
modules/contrib/media_imagick/tests/src/Functional/AdminPageTest.php

3 files with changes
====================

1) modules/contrib/media_imagick/tests/src/Functional/AdminPageTest.php:32

    ---------- begin diff ----------
@@ @@
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/media_imagick/src/Plugin/PluginDecorator/Imagick.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_imagick\Plugin\PluginDecorator;

+use Drupal\media\Plugin\media\Source\Image;
+use Drupal\file\FileInterface;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\media\MediaInterface;
@@ @@
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ @@
   /**
    * The decorated Image source plugin.
    *
-   * @var \Drupal\media\Plugin\media\Source\Image
+   * @var Image
    */
   protected $decorated;

@@ @@
   /**
    * Get Imagick object for a media item.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   The media object to get Imagick for. As this is expensive, it will be
    *   statically cached.
    *
@@ @@
     if (!$source_field) {
       return FALSE;
     }
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = $media->{$source_field}->entity;
     if (!$file) {
       return FALSE;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/media_imagick/src/Plugin/MediaSourceDecoratorBase.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The decorated object.
    *
-   * @var \Drupal\media\MediaSourceInterface
+   * @var MediaSourceInterface
    */
   protected $decorated;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

