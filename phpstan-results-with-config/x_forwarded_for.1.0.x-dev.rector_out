modules/contrib/x_forwarded_for/src/EventSubscriber/XforwardedSubscriber.php

1 file with changes
===================

1) modules/contrib/x_forwarded_for/src/EventSubscriber/XforwardedSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\x_forwarded_for\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation;
 use Drupal\Component\Utility\Html;
@@ @@
   /**
    * Drupal's settings manager.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
   /**
    * XframeSubscriber constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Executes actions on the respose event.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   Filter Response Event object.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     // Add the x-forwarded-for response header with the configured directive.
     $response = $event->getResponse();
     $response->headers->set('X-Forwarded-For', \Drupal::request()->getClientIp());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 1 file has been changed by Rector                                         

