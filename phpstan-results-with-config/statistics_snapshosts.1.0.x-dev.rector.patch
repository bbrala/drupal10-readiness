diff --git a/src/Annotation/StatisticsSnapshotsCalculator.php b/src/Annotation/StatisticsSnapshotsCalculator.php
index ff067e0..7e9a445 100644
--- a/src/Annotation/StatisticsSnapshotsCalculator.php
+++ b/src/Annotation/StatisticsSnapshotsCalculator.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\statistics_snapshots\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -27,7 +28,7 @@ class StatisticsSnapshotsCalculator extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Entity/StatisticsSnapshotInterface.php b/src/Entity/StatisticsSnapshotInterface.php
index 821f6d4..f16b323 100644
--- a/src/Entity/StatisticsSnapshotInterface.php
+++ b/src/Entity/StatisticsSnapshotInterface.php
@@ -39,7 +39,7 @@ interface StatisticsSnapshotInterface extends ContentEntityInterface {
    * to allow the plugins to have useful fieldnames (for DX),
    * but not exceed 32 characters for field name length.
    *
-   * @param \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface $plugin
+   * @param StatisticsSnapshotsCalculatorInterface $plugin
    *   Plugin instance.
    * @param string $fieldName
    *   Statistic full fieldname.
@@ -55,7 +55,7 @@ interface StatisticsSnapshotInterface extends ContentEntityInterface {
    * to allow the plugins to have useful fieldnames (for DX),
    * but not exceed 32 characters for field name length.
    *
-   * @param \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface $plugin
+   * @param StatisticsSnapshotsCalculatorInterface $plugin
    *   Plugin instance.
    * @param string $fieldName
    *   Statistic full fieldname.
@@ -67,7 +67,7 @@ interface StatisticsSnapshotInterface extends ContentEntityInterface {
   /**
    * Convert a friendly plugin fieldname to a hash for use as drupal fieldname.
    *
-   * @param \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface $plugin
+   * @param StatisticsSnapshotsCalculatorInterface $plugin
    *   Plugin instance.
    * @param string $fieldName
    *   Field name.
@@ -80,7 +80,7 @@ interface StatisticsSnapshotInterface extends ContentEntityInterface {
   /**
    * Get the value of a statistic.
    *
-   * @param \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface $plugin
+   * @param StatisticsSnapshotsCalculatorInterface $plugin
    *   Plugin instance.
    * @param string $fieldName
    *   Field name.
diff --git a/src/Event/SnapshotCreatedEvent.php b/src/Event/SnapshotCreatedEvent.php
index b7f1729..421ed23 100644
--- a/src/Event/SnapshotCreatedEvent.php
+++ b/src/Event/SnapshotCreatedEvent.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\statistics_snapshots\Event;
 
+use Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface;
 use Druapl\Component\EventDispatcher\Event;
 use Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface;
 use Drupal\user\UserInterface;
@@ -10,7 +11,7 @@ use Symfony\Component\EventDispatcher\Event as EventDispatcherEvent;
 /**
  * Event that is fired when a user logs in.
  */
-class SnapshotCreatedEvent extends EventDispatcherEvent {
+class SnapshotCreatedEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const EVENT_NAME = 'statistics_snapshots_snapshot_created';
 
@@ -24,7 +25,7 @@ class SnapshotCreatedEvent extends EventDispatcherEvent {
   /**
    * Constructs the object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of the user logged in.
    */
   public function __construct(StatisticsSnapshotInterface $snapshot) {
@@ -32,7 +33,7 @@ class SnapshotCreatedEvent extends EventDispatcherEvent {
   }
 
   /**
-   * @return \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface
+   * @return StatisticsSnapshotsCalculatorInterface
    *   Snapshot entity.
    */
   public function getSnapshot() {
diff --git a/src/Plugin/QueueWorker/StatisticsRunPluginQueueWorker.php b/src/Plugin/QueueWorker/StatisticsRunPluginQueueWorker.php
index 43611ba..ee04792 100644
--- a/src/Plugin/QueueWorker/StatisticsRunPluginQueueWorker.php
+++ b/src/Plugin/QueueWorker/StatisticsRunPluginQueueWorker.php
@@ -30,7 +30,7 @@ class StatisticsRunPluginQueueWorker extends QueueWorkerBase implements Containe
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
diff --git a/src/Plugin/StatisticsSnapshotsCalculatorBase.php b/src/Plugin/StatisticsSnapshotsCalculatorBase.php
index 371e000..ef101b3 100644
--- a/src/Plugin/StatisticsSnapshotsCalculatorBase.php
+++ b/src/Plugin/StatisticsSnapshotsCalculatorBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\statistics_snapshots\Plugin;
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\field\Entity\FieldConfig;
@@ -113,7 +114,7 @@ abstract class StatisticsSnapshotsCalculatorBase extends PluginBase implements S
         ]);
         $field->save();
 
-        /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
+        /** @var EntityDisplayRepositoryInterface $display_repository */
         $display_repository = \Drupal::service('entity_display.repository');
         $display_repository->getViewDisplay('statistics_snapshot', 'statistics_snapshot')
           ->setComponent($fieldName, [
diff --git a/src/Plugin/StatisticsSnapshotsCalculatorInterface.php b/src/Plugin/StatisticsSnapshotsCalculatorInterface.php
index 9c296df..a81dae8 100644
--- a/src/Plugin/StatisticsSnapshotsCalculatorInterface.php
+++ b/src/Plugin/StatisticsSnapshotsCalculatorInterface.php
@@ -29,7 +29,7 @@ interface StatisticsSnapshotsCalculatorInterface extends PluginInspectionInterfa
    *
    * This is a private function - all calculations should be initiated via runCalculation()
    *
-   * @param \Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface $snapshot
+   * @param StatisticsSnapshotInterface $snapshot
    *   Snapshot to save it to.
    * @param array $segment_data
    *   Data to process if we are doing a split/segmented calculation.
@@ -42,7 +42,7 @@ interface StatisticsSnapshotsCalculatorInterface extends PluginInspectionInterfa
    *
    * By chunking the dataset. A bit like the Batch API.
    *
-   * @param \Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface $snapshot
+   * @param StatisticsSnapshotInterface $snapshot
    * @param array $dataset
    */
   public function splitIntoQueues(StatisticsSnapshotInterface $snapshot, array $dataset);
@@ -57,7 +57,7 @@ interface StatisticsSnapshotsCalculatorInterface extends PluginInspectionInterfa
    *
    * Always do this instead of calculate to ensure fields etc.
    *
-   * @param \Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface $snapshot
+   * @param StatisticsSnapshotInterface $snapshot
    *   Snapshot to save it to.
    * @param null $segment_data
    *   Data to process if we are doing a split/segmented calculation.
diff --git a/src/Plugin/StatisticsSnapshotsCalculatorManager.php b/src/Plugin/StatisticsSnapshotsCalculatorManager.php
index 14526ea..ba6f21b 100644
--- a/src/Plugin/StatisticsSnapshotsCalculatorManager.php
+++ b/src/Plugin/StatisticsSnapshotsCalculatorManager.php
@@ -17,9 +17,9 @@ class StatisticsSnapshotsCalculatorManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/StatisticsSnapshotAccessControlHandler.php b/src/StatisticsSnapshotAccessControlHandler.php
index df5bb99..b310b93 100644
--- a/src/StatisticsSnapshotAccessControlHandler.php
+++ b/src/StatisticsSnapshotAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\statistics_snapshots;
 
+use Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,8 +19,7 @@ class StatisticsSnapshotAccessControlHandler extends EntityAccessControlHandler
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface $entity */
-
+    /** @var StatisticsSnapshotInterface $entity */
     switch ($operation) {
 
       case 'view':
