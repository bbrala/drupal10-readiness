diff --git a/src/Plugin/views/row/XmlFeedViewsFields.php b/src/Plugin/views/row/XmlFeedViewsFields.php
index bab9d9e..20d4523 100644
--- a/src/Plugin/views/row/XmlFeedViewsFields.php
+++ b/src/Plugin/views/row/XmlFeedViewsFields.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\xmlfeedviews\Plugin\views\row;
 
+use Drupal\Core\Render\Markup;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\row\RowPluginBase;
 use Drupal\Core\Url;
@@ -45,7 +47,7 @@ class XmlFeedViewsFields extends RowPluginBase {
    *
    * @param array &$form
    *   Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return array
@@ -163,7 +165,7 @@ class XmlFeedViewsFields extends RowPluginBase {
       ) {
         $field_id = isset($fieldArray[1][0]) ? $fieldArray[1][0] : '';
 
-        /** @var \Drupal\Core\Render\Markup $data */
+        /** @var Markup $data */
         $data = $this->getField($index, trim($field_id));
         if (is_object($data)) {
           $data = $data->__toString();
@@ -187,7 +189,7 @@ class XmlFeedViewsFields extends RowPluginBase {
    * @param string $field_id
    *   The ID assigned to the required field in the display.
    *
-   * @return string|null|\Drupal\Component\Render\MarkupInterface
+   * @return string|null|MarkupInterface
    *   An empty string if there is no style plugin, or the field ID is empty.
    *   NULL if the field value is empty. If neither of these conditions apply,
    *   a MarkupInterface object containing the rendered field value.
diff --git a/src/Tests/Views/XmlFeedViewsTest.php b/src/Tests/Views/XmlFeedViewsTest.php
index dec58a2..89a12fb 100644
--- a/src/Tests/Views/XmlFeedViewsTest.php
+++ b/src/Tests/Views/XmlFeedViewsTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\xmlfeedviews\Tests\Views;
 
+use Drupal\user\Entity\User;
+use Drupal\node\NodeStorage;
 use Drupal\Component\Utility\Html;
 use Drupal\node\Entity\Node;
 use Drupal\Tests\views\Functional\ViewTestBase;
@@ -32,7 +34,7 @@ class XmlFeedViewsTest extends ViewTestBase {
   /**
    * The admin user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   public $adminUser;
 
@@ -46,7 +48,7 @@ class XmlFeedViewsTest extends ViewTestBase {
   /**
    * The entity storage for nodes.
    *
-   * @var \Drupal\node\NodeStorage
+   * @var NodeStorage
    */
   protected $nodeStorage;
 
@@ -81,7 +83,7 @@ class XmlFeedViewsTest extends ViewTestBase {
     // Retrieve node default view.
     $actual_json = $this->drupalGet("callback/nodes");
     $expected = [];
-    $this->assertIdentical($actual_json, json_encode($expected), 'The expected JSON output was found.');
+    $this->assertSame($actual_json, json_encode($expected), 'The expected JSON output was found.');
 
     // Create some published nodes of type article and page.
     $this->createNodes(5, "article", $expected);
@@ -95,11 +97,11 @@ class XmlFeedViewsTest extends ViewTestBase {
 
     // Check the view result using serializer service.
     $expected_string = json_encode($expected);
-    $this->assertIdentical($actual_json, $expected_string);
+    $this->assertSame($actual_json, $expected_string);
 
     // Re-test as anonymous user.
     $actual_json = $this->drupalGet("callback/nodes");
-    $this->assertIdentical($actual_json, $expected_string);
+    $this->assertSame($actual_json, $expected_string);
   }
 
   /**
diff --git a/xmlfeedviews.info.yml b/xmlfeedviews.info.yml
index 535d872..5772229 100644
--- a/xmlfeedviews.info.yml
+++ b/xmlfeedviews.info.yml
@@ -2,8 +2,7 @@ name: XML Feed Views
 type: module
 description: XML feed for views
 package: Custom
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 
 # Information added by Drupal.org packaging script on 2021-05-12
 version: '1.2.3-beta6'
