diff --git a/ik_modals.api.php b/ik_modals.api.php
index e9b8f15..758eae4 100644
--- a/ik_modals.api.php
+++ b/ik_modals.api.php
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ik_modals\Entity\Modal;
 /**
  * hook_ik_modals_alter_module_settings
  * Alters the modal module sitewide settings
@@ -16,12 +17,12 @@ function hook_ik_modals_alter_module_settings(array &$settings) {
  * hook_ik_modals_alter_modal_settings
  * Alters individual modal settings
  *
- * @param \Drupal\ik_modals\Entity\Modal $entity
+ * @param Modal $entity
  * @param [array] $settings
  * @param [array] $geolocationData - see ModalService::getGeoloationData and hook_ik_modals_alter_user_geolocation
  * @return [array] $settings
  */
-function hook_ik_modals_alter_modal_settings(\Drupal\ik_modals\Entity\Modal $entity, array &$settings, array $geolocationData) {
+function hook_ik_modals_alter_modal_settings(Modal $entity, array &$settings, array $geolocationData) {
   // Make all modals of a specific bundle inactive.
   if ($entity->bundle() === 'general') {
     $settings['active'] = false;
@@ -52,4 +53,4 @@ function hook_ik_modals_alter_user_geolocation(array &$returnData) {
   // Add it to $returnData.
   $returnData['country_code'] = 'US';
   $returnData['region_code'] = 'NC';
-}
\ No newline at end of file
+}
diff --git a/src/Controller/ModalController.php b/src/Controller/ModalController.php
index 56fcbce..794332e 100644
--- a/src/Controller/ModalController.php
+++ b/src/Controller/ModalController.php
@@ -23,32 +23,32 @@ class ModalController extends ControllerBase implements ContainerInjectionInterf
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Constructs a NodeController object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(DateFormatterInterface $date_formatter, RendererInterface $renderer, EntityRepositoryInterface $entity_repository = NULL) {
@@ -101,7 +101,7 @@ class ModalController extends ControllerBase implements ContainerInjectionInterf
   /**
    * Generates an overview table of older revisions of a Modal .
    *
-   * @param \Drupal\ik_modals\Entity\ModalInterface $modal
+   * @param ModalInterface $modal
    *   A Modal  object.
    *
    * @return array
diff --git a/src/Entity/ModalInterface.php b/src/Entity/ModalInterface.php
index 70867ec..03f01b9 100644
--- a/src/Entity/ModalInterface.php
+++ b/src/Entity/ModalInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ik_modals\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -181,7 +182,7 @@ interface ModalInterface extends ContentEntityInterface, RevisionLogInterface, E
   /**
    * Gets the Modal revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/src/Form/ModalForm.php b/src/Form/ModalForm.php
index f61e11c..a73bdbd 100644
--- a/src/Form/ModalForm.php
+++ b/src/Form/ModalForm.php
@@ -20,35 +20,35 @@ class ModalForm extends ContentEntityForm {
   /**
    * The account interface.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $accountInterface;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $timeInterface;
 
   /**
    * The messanger interface.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messengerInterface;
 
diff --git a/src/Form/ModalModuleSettingsForm.php b/src/Form/ModalModuleSettingsForm.php
index 8fed084..53f4d8f 100755
--- a/src/Form/ModalModuleSettingsForm.php
+++ b/src/Form/ModalModuleSettingsForm.php
@@ -19,7 +19,7 @@ class ModalModuleSettingsForm extends ConfigFormBase {
   /**
    * Drupal\Core\Config\ConfigFactoryInterface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    *   Config Factory Interface.
    */
   protected $configFactory;
@@ -27,7 +27,7 @@ class ModalModuleSettingsForm extends ConfigFormBase {
   /**
    * Drupal\Core\Messenger\MessengerInterface.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    *   Messenger Interface.
    */
   protected $messenger;
@@ -35,18 +35,18 @@ class ModalModuleSettingsForm extends ConfigFormBase {
   /**
    * Symfony\Component\HttpFoundation\RequestStack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * ModalModuleSettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Drupal\Core\Config\ConfigFactoryInterface.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Drupal\Core\Messenger\MessengerInterface.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Symfony\Component\HttpFoundation\RequestStack.
    */
   public function __construct(ConfigFactoryInterface $configFactory, MessengerInterface $messenger, RequestStack $requestStack) {
diff --git a/src/Form/ModalRevisionDeleteForm.php b/src/Form/ModalRevisionDeleteForm.php
index 9ddade8..cf503e1 100644
--- a/src/Form/ModalRevisionDeleteForm.php
+++ b/src/Form/ModalRevisionDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ik_modals\Form;
 
+use Drupal\ik_modals\Entity\ModalInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\ConfirmFormBase;
@@ -21,21 +22,21 @@ class ModalRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The Modal revision.
    *
-   * @var \Drupal\ik_modals\Entity\ModalInterface
+   * @var ModalInterface
    */
   protected $revision;
 
   /**
    * The Modal storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $ModalStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
@@ -49,11 +50,11 @@ class ModalRevisionDeleteForm extends ConfirmFormBase {
   /**
    * Constructs a new ModalRevisionDeleteForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The entity storage.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Datetime\DateFormatter $dateFormatter
+   * @param DateFormatter $dateFormatter
    *   The date formatter.
    */
   public function __construct(EntityStorageInterface $entity_storage, Connection $connection, DateFormatter $dateFormatter) {
diff --git a/src/Form/ModalRevisionRevertForm.php b/src/Form/ModalRevisionRevertForm.php
index 7f55f6f..ae4e0cc 100644
--- a/src/Form/ModalRevisionRevertForm.php
+++ b/src/Form/ModalRevisionRevertForm.php
@@ -22,39 +22,39 @@ class ModalRevisionRevertForm extends ConfirmFormBase {
   /**
    * The Modal revision.
    *
-   * @var \Drupal\ik_modals\Entity\ModalInterface
+   * @var ModalInterface
    */
   protected $revision;
 
   /**
    * The Modal storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $ModalStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The messanger interface.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new ModalRevisionRevertForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entityStorage
+   * @param EntityStorageInterface $entityStorage
    *   The Modal storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date formatter service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The message interface.
    */
   public function __construct(EntityStorageInterface $entityStorage, DateFormatterInterface $dateFormatter, MessengerInterface $messenger) {
@@ -142,12 +142,12 @@ class ModalRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\ik_modals\Entity\ModalInterface $revision
+   * @param ModalInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\ik_modals\Entity\ModalInterface
+   * @return ModalInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(ModalInterface $revision, FormStateInterface $form_state) {
diff --git a/src/Form/ModalRevisionRevertTranslationForm.php b/src/Form/ModalRevisionRevertTranslationForm.php
index cbeb9a1..7c5f121 100644
--- a/src/Form/ModalRevisionRevertTranslationForm.php
+++ b/src/Form/ModalRevisionRevertTranslationForm.php
@@ -27,18 +27,18 @@ class ModalRevisionRevertTranslationForm extends ModalRevisionRevertForm {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Constructs a new ModalRevisionRevertTranslationForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The Modal storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter, LanguageManagerInterface $language_manager) {
@@ -93,7 +93,7 @@ class ModalRevisionRevertTranslationForm extends ModalRevisionRevertForm {
   protected function prepareRevertedRevision(ModalInterface $revision, FormStateInterface $form_state) {
     $revert_untranslated_fields = $form_state->getValue('revert_untranslated_fields');
 
-    /** @var \Drupal\ik_modals\Entity\ModalInterface $default_revision */
+    /** @var ModalInterface $default_revision */
     $latest_revision = $this->ModalStorage->load($revision->id());
     $latest_revision_translation = $latest_revision->getTranslation($this->langcode);
 
diff --git a/src/Form/ModalSettingsForm.php b/src/Form/ModalSettingsForm.php
index 6dd2bdb..cffe6e2 100644
--- a/src/Form/ModalSettingsForm.php
+++ b/src/Form/ModalSettingsForm.php
@@ -27,7 +27,7 @@ class ModalSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class ModalSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/ModalAccessControlHandler.php b/src/ModalAccessControlHandler.php
index 6d514ee..6b954d6 100644
--- a/src/ModalAccessControlHandler.php
+++ b/src/ModalAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ik_modals;
 
+use Drupal\ik_modals\Entity\ModalInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class ModalAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\ik_modals\Entity\ModalInterface $entity */
+    /** @var ModalInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/ModalHtmlRouteProvider.php b/src/ModalHtmlRouteProvider.php
index bebb6e5..53e0200 100644
--- a/src/ModalHtmlRouteProvider.php
+++ b/src/ModalHtmlRouteProvider.php
@@ -52,10 +52,10 @@ class ModalHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -76,10 +76,10 @@ class ModalHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -100,10 +100,10 @@ class ModalHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -124,10 +124,10 @@ class ModalHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -148,10 +148,10 @@ class ModalHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision translation revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionTranslationRevertRoute(EntityTypeInterface $entity_type) {
@@ -172,10 +172,10 @@ class ModalHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/ModalService.php b/src/ModalService.php
index 79b76ba..e18db23 100644
--- a/src/ModalService.php
+++ b/src/ModalService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ik_modals;
 
+use Drupal\Core\Logger\LoggerChannelFactory;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Datetime\DateFormatter;
@@ -25,14 +26,14 @@ class ModalService {
   /**
    * Drupal\Core\Session\AccountInterface definition.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * Drupal\Core\Cache\CacheBackendInterface.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    *   Drupal cache.
    */
   protected $cache;
@@ -40,7 +41,7 @@ class ModalService {
   /**
    * Drupal\Core\Config\ConfigFactory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    *   Drupal config.
    */
   protected $config;
@@ -48,21 +49,21 @@ class ModalService {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * GuzzleHttp\Client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    *   Guzzle HTTP Client.
    */
   protected $httpClient;
@@ -70,7 +71,7 @@ class ModalService {
   /**
    * Drupal\Core\Logger\LoggerChannelFactory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    *   Drupal logging.
    */
   protected $logger;
@@ -78,7 +79,7 @@ class ModalService {
   /**
    * Symfony\Component\HttpFoundation\RequestStack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    *   The request object.
    */
   protected $requestStack;
@@ -86,7 +87,7 @@ class ModalService {
   /**
    * Drupal\Core\TempStore\PrivateTempStoreFactory.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    *   Temporary store user geoloation data.
    */
   protected $tempStore;
@@ -94,7 +95,7 @@ class ModalService {
   /**
    * Drupal\Core\Extension\ModuleHandlerInterface.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    *   ModuleHandlerInterface to initialize custom hooks.
    */
   protected $moduleHandler;
@@ -102,23 +103,23 @@ class ModalService {
   /**
    * Constructs a new ModalService object.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account interface.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The interface for cache implementations.
-   * @param \Drupal\Core\Config\ConfigFactory $configFactory
+   * @param ConfigFactory $configFactory
    *   The configuration object factory.
-   * @param \Drupal\Core\Datetime\DateFormatter $dateFormatter
+   * @param DateFormatter $dateFormatter
    *   The date formatter.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \GuzzleHttp\Client $httpClient
+   * @param Client $httpClient
    *   The client for sending HTTP requests.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   The factory for logging channels.
-   * @param Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request object.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $tempStore
+   * @param PrivateTempStoreFactory $tempStore
    *   The factory for storing temporary private user data.
    * @param \Drupal\Core\Extension\ModuleHandlerInterface
    *   The module handler interface.
@@ -217,7 +218,7 @@ class ModalService {
       // GeoIP2
       elseif ($geoip2 === true) {
         $record = NULL;
-        $reader = new Reader(drupal_get_path('module', 'ik_modals') . '/includes/db/GeoLite2-City.mmdb');
+        $reader = new Reader(\Drupal::service('extension.list.module')->getPath('ik_modals') . '/includes/db/GeoLite2-City.mmdb');
 
         $ip = $this->requestStack->getCurrentRequest()->getClientIp();
 
diff --git a/src/ModalStorageInterface.php b/src/ModalStorageInterface.php
index b2537ac..50c1318 100644
--- a/src/ModalStorageInterface.php
+++ b/src/ModalStorageInterface.php
@@ -20,7 +20,7 @@ interface ModalStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of Modal revision IDs for a specific Modal.
    *
-   * @param \Drupal\ik_modals\Entity\ModalInterface $entity
+   * @param ModalInterface $entity
    *   The Modal entity.
    *
    * @return int[]
@@ -31,7 +31,7 @@ interface ModalStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of revision IDs having a given user as Modal author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ -42,7 +42,7 @@ interface ModalStorageInterface extends ContentEntityStorageInterface {
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\ik_modals\Entity\ModalInterface $entity
+   * @param ModalInterface $entity
    *   The Modal entity.
    *
    * @return int
@@ -53,7 +53,7 @@ interface ModalStorageInterface extends ContentEntityStorageInterface {
   /**
    * Unsets the language for all Modal with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
diff --git a/src/Plugin/Block/ModalBlock.php b/src/Plugin/Block/ModalBlock.php
index 11d6e32..f36cf7f 100644
--- a/src/Plugin/Block/ModalBlock.php
+++ b/src/Plugin/Block/ModalBlock.php
@@ -23,14 +23,14 @@ class ModalBlock extends BlockBase implements ContainerFactoryPluginInterface {
   /**
    * The entity storage for our entity type.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface;
+   * @var EntityStorageInterface ;
    */
   protected $entityStorage;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -43,9 +43,9 @@ class ModalBlock extends BlockBase implements ContainerFactoryPluginInterface {
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entityQuery
+   * @param EntityStorageInterface $entityQuery
    *   The entity type manager service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entityTypeManager) {
