diff --git a/block_style_plugins.module b/block_style_plugins.module
index eca4f9e..25d8982 100644
--- a/block_style_plugins.module
+++ b/block_style_plugins.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\block_style_plugins\Plugin\BlockStyleManager;
+use Drupal\block_style_plugins\Plugin\BlockStyleInterface;
 /**
  * @file
  * Contains block_style_plugins.module.
@@ -31,12 +33,12 @@ function block_style_plugins_help($route_name, RouteMatchInterface $route_match)
  */
 function block_style_plugins_form_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   // Retrieve a list of style plugin definitions.
-  /** @var Drupal\block_style_plugins\Plugin\BlockStyleManager $plugin_manager */
+  /** @var BlockStyleManager $plugin_manager */
   $plugin_manager = \Drupal::service('plugin.manager.block_style.processor');
   $style_plugins = $plugin_manager->getDefinitions();
 
   foreach ($style_plugins as $name => $plugin) {
-    /** @var \Drupal\block_style_plugins\Plugin\BlockStyleInterface $style_plugin */
+    /** @var BlockStyleInterface $style_plugin */
     $style_plugin = $plugin_manager->createInstance($name);
     $form = $style_plugin->prepareForm($form, $form_state);
   }
@@ -47,7 +49,7 @@ function block_style_plugins_form_block_form_alter(&$form, FormStateInterface $f
  */
 function block_style_plugins_preprocess_block(&$variables) {
   // Retrieve a list of style plugin definitions.
-  /** @var Drupal\block_style_plugins\Plugin\BlockStyleManager $plugin_manager */
+  /** @var BlockStyleManager $plugin_manager */
   $plugin_manager = \Drupal::service('plugin.manager.block_style.processor');
   $style_plugins = $plugin_manager->getDefinitions();
 
@@ -61,7 +63,7 @@ function block_style_plugins_preprocess_block(&$variables) {
  */
 function block_style_plugins_theme_suggestions_block_alter(array &$suggestions, array $variables) {
   // Retrieve a list of style plugin definitions.
-  /** @var Drupal\block_style_plugins\Plugin\BlockStyleManager $plugin_manager */
+  /** @var BlockStyleManager $plugin_manager */
   $plugin_manager = \Drupal::service('plugin.manager.block_style.processor');
   $style_plugins = $plugin_manager->getDefinitions();
 
@@ -75,7 +77,7 @@ function block_style_plugins_theme_suggestions_block_alter(array &$suggestions,
  */
 function block_style_plugins_themes_uninstalled(array $themes) {
   // Clear the Plugins cache when a theme using a plugin is uninstalled.
-  /** @var Drupal\block_style_plugins\Plugin\BlockStyleManager $plugin_manager */
+  /** @var BlockStyleManager $plugin_manager */
   $plugin_manager = \Drupal::service('plugin.manager.block_style.processor');
   $style_plugins = $plugin_manager->getDefinitions();
   $clear_cache = FALSE;
diff --git a/src/Annotation/BlockStyle.php b/src/Annotation/BlockStyle.php
index bd463e4..7404c9c 100644
--- a/src/Annotation/BlockStyle.php
+++ b/src/Annotation/BlockStyle.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\block_style_plugins\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class BlockStyle extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Plugin/BlockStyleBase.php b/src/Plugin/BlockStyleBase.php
index df91547..70857c7 100644
--- a/src/Plugin/BlockStyleBase.php
+++ b/src/Plugin/BlockStyleBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\block_style_plugins\Plugin;
 
+use Drupal\block\Entity\Block;
 use Drupal\Core\Form\SubformState;
 use Drupal\Core\Plugin\PluginBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -40,14 +41,14 @@ abstract class BlockStyleBase extends PluginBase implements BlockStyleInterface,
   /**
    * Instance of the Entity Repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Instance of the Entity Type Manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -70,9 +71,9 @@ abstract class BlockStyleBase extends PluginBase implements BlockStyleInterface,
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository
+   * @param EntityRepositoryInterface $entityRepository
    *   An Entity Repository instance.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   An Entity Type Manager instance.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityRepositoryInterface $entityRepository, EntityTypeManagerInterface $entityTypeManager) {
@@ -122,7 +123,7 @@ abstract class BlockStyleBase extends PluginBase implements BlockStyleInterface,
    */
   public function prepareForm(array $form, FormStateInterface $form_state) {
     // Get the current block config entity.
-    /** @var \Drupal\block\Entity\Block $entity */
+    /** @var Block $entity */
     $entity = $form_state->getFormObject()->getEntity();
 
     // Set properties and configuration.
@@ -201,7 +202,7 @@ abstract class BlockStyleBase extends PluginBase implements BlockStyleInterface,
    *
    * @param array $form
    *   The form definition array for the full block configuration form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @deprecated in 8.x-1.4 and will be removed before 8.x-2.x.
@@ -409,7 +410,7 @@ abstract class BlockStyleBase extends PluginBase implements BlockStyleInterface,
     }
 
     // Load the block config entity.
-    /** @var \Drupal\block\Entity\Block $block */
+    /** @var Block $block */
     $block = $this->entityTypeManager->getStorage('block')->load($variables['elements']['#id']);
     $styles = $block->getThirdPartySetting('block_style_plugins', $this->pluginId);
 
diff --git a/src/Plugin/BlockStyleInterface.php b/src/Plugin/BlockStyleInterface.php
index e934b12..f002ea2 100644
--- a/src/Plugin/BlockStyleInterface.php
+++ b/src/Plugin/BlockStyleInterface.php
@@ -20,7 +20,7 @@ interface BlockStyleInterface extends PluginInspectionInterface, ConfigurableInt
    *
    * @param array $form
    *   The form definition array for the block configuration form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -33,7 +33,7 @@ interface BlockStyleInterface extends PluginInspectionInterface, ConfigurableInt
    *
    * @param array $form
    *   The form definition array for the block configuration form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -46,7 +46,7 @@ interface BlockStyleInterface extends PluginInspectionInterface, ConfigurableInt
    *
    * @param array $form
    *   The form definition array for the full block configuration form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm($form, FormStateInterface $form_state);
diff --git a/src/Plugin/BlockStyleManager.php b/src/Plugin/BlockStyleManager.php
index 32dbad0..f1a8abe 100644
--- a/src/Plugin/BlockStyleManager.php
+++ b/src/Plugin/BlockStyleManager.php
@@ -25,7 +25,7 @@ class BlockStyleManager extends DefaultPluginManager {
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
@@ -35,11 +35,11 @@ class BlockStyleManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handle to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler) {
diff --git a/tests/src/Functional/CheckboxWithExcludeTest.php b/tests/src/Functional/CheckboxWithExcludeTest.php
index c76cd21..150e526 100644
--- a/tests/src/Functional/CheckboxWithExcludeTest.php
+++ b/tests/src/Functional/CheckboxWithExcludeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\block_style_plugins\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -22,7 +23,7 @@ class CheckboxWithExcludeTest extends BrowserTestBase {
   /**
    * A user that can edit content types.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -34,7 +35,7 @@ class CheckboxWithExcludeTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
diff --git a/tests/src/Functional/DropdownWithIncludeTest.php b/tests/src/Functional/DropdownWithIncludeTest.php
index f53658e..df66b0c 100644
--- a/tests/src/Functional/DropdownWithIncludeTest.php
+++ b/tests/src/Functional/DropdownWithIncludeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\block_style_plugins\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -22,7 +23,7 @@ class DropdownWithIncludeTest extends BrowserTestBase {
   /**
    * A user that can edit content types.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -34,7 +35,7 @@ class DropdownWithIncludeTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
diff --git a/tests/src/Functional/FormFieldsCreatedWithYaml.php b/tests/src/Functional/FormFieldsCreatedWithYaml.php
index fa39cdb..15a72e9 100644
--- a/tests/src/Functional/FormFieldsCreatedWithYaml.php
+++ b/tests/src/Functional/FormFieldsCreatedWithYaml.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\block_style_plugins\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -22,14 +23,14 @@ class FormFieldsCreatedWithYamlTest extends BrowserTestBase {
   /**
    * A user that can edit content types.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
diff --git a/tests/src/Functional/SimpleClassTest.php b/tests/src/Functional/SimpleClassTest.php
index a2758e3..8e01999 100644
--- a/tests/src/Functional/SimpleClassTest.php
+++ b/tests/src/Functional/SimpleClassTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\block_style_plugins\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -19,7 +20,7 @@ class SimpleClassTest extends BrowserTestBase {
   /**
    * A user that can edit content types.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -31,7 +32,7 @@ class SimpleClassTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer blocks', 'access administration pages']);
diff --git a/tests/src/Functional/TemplateSetWithYamlTest.php b/tests/src/Functional/TemplateSetWithYamlTest.php
index c8c1c45..317ea5f 100644
--- a/tests/src/Functional/TemplateSetWithYamlTest.php
+++ b/tests/src/Functional/TemplateSetWithYamlTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\block_style_plugins\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -22,7 +23,7 @@ class TemplateSetWithYamlTest extends BrowserTestBase {
   /**
    * A user that can edit content types.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -34,7 +35,7 @@ class TemplateSetWithYamlTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
diff --git a/tests/src/Unit/Plugin/BlockStyleBaseTest.php b/tests/src/Unit/Plugin/BlockStyleBaseTest.php
index 553679f..30ba326 100644
--- a/tests/src/Unit/Plugin/BlockStyleBaseTest.php
+++ b/tests/src/Unit/Plugin/BlockStyleBaseTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\block_style_plugins\Unit\Plugin;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Entity\EntityRepository;
+use Drupal\block_style_plugins\Plugin\BlockStyleBase;
 use Drupal\Tests\UnitTestCase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\EntityRepositoryInterface;
@@ -20,45 +23,46 @@ use Drupal\Core\Block\BlockPluginInterface;
  */
 class BlockStyleBaseTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Mocked entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepository
+   * @var EntityRepository
    */
   protected $entityRepository;
 
   /**
    * Mocked entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Mocked form state.
    *
-   * @var \Drupal\Core\Form\FormStateInterface
+   * @var FormStateInterface
    */
   protected $formState;
 
   /**
    * Mocked Block Plugin.
    *
-   * @var \Drupal\Core\Block\BlockPluginInterface
+   * @var BlockPluginInterface
    */
   protected $blockPlugin;
 
   /**
    * Instance of the BlockStyleBase plugin.
    *
-   * @var \Drupal\block_style_plugins\Plugin\BlockStyleBase
+   * @var BlockStyleBase
    */
   protected $plugin;
 
   /**
    * Create the setup for constants and configFactory stub.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Stub the Iconset Finder Service.
diff --git a/tests/src/Unit/Plugin/BlockStyleTest.php b/tests/src/Unit/Plugin/BlockStyleTest.php
index 8c1a2ce..42027f6 100644
--- a/tests/src/Unit/Plugin/BlockStyleTest.php
+++ b/tests/src/Unit/Plugin/BlockStyleTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\block_style_plugins\Unit\Plugin;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Entity\EntityRepository;
 use Drupal\Tests\UnitTestCase;
 use Drupal\block_style_plugins\Plugin\BlockStyle;
 use Drupal\Core\Form\FormStateInterface;
@@ -16,38 +18,39 @@ use Drupal\Core\Entity\EntityStorageInterface;
  */
 class BlockStyleTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Mocked entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepository
+   * @var EntityRepository
    */
   protected $entityRepository;
 
   /**
    * Mocked entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Mocked form state.
    *
-   * @var \Drupal\Core\Form\FormStateInterface
+   * @var FormStateInterface
    */
   protected $formState;
 
   /**
    * Instance of the BlockStyle plugin.
    *
-   * @var \Drupal\block_style_plugins\Plugin\BlockStyle
+   * @var BlockStyle
    */
   protected $plugin;
 
   /**
    * Create the setup for constants and configFactory stub.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Stub the Iconset Finder Service.
