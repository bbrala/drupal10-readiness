modules/contrib/menu_advanced_settings/menu_advanced_settings.install
modules/contrib/menu_advanced_settings/menu_advanced_settings.module
modules/contrib/menu_advanced_settings/src/Form/MenuAdvancedSettings.php
modules/contrib/menu_advanced_settings/src/Services/SchemaManagement.php
modules/contrib/menu_advanced_settings/tests/src/Functional/MenuAdvancedSettingsTest.php

3 files with changes
====================

1) modules/contrib/menu_advanced_settings/tests/src/Functional/MenuAdvancedSettingsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\menu_advanced_settings\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * An users with administration permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create admin user.
@@ @@
       'menu_description_length' => 2000,
       'menu_description_field' => 'textarea',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('The configuration options have been saved.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');

     // Menu UI shows correct field type.
     $this->drupalGet('admin/structure/menu/manage/tools/add');
@@ @@
       'title[0][value]' => $this->randomMachineName(500),
       'description[0][value]' => $this->randomMachineName(2000),
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->statusCodeEquals(200);
     // $this->assertText('The menu link has been saved.');
   }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/menu_advanced_settings/src/Services/SchemaManagement.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\menu_advanced_settings\Services;

+use Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface;
+use Drupal\Core\Entity\EntityFieldManager;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Messenger\MessengerInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $db;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
    *   The new length of the field, must be larger than the previous value.
    */
   private function dbChangeVarcharField($field_name, $field_length) {
-    /** @var \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface $schema_repository */
+    /** @var EntityLastInstalledSchemaRepositoryInterface $schema_repository */
     $schema_repository = \Drupal::service('entity.last_installed_schema.repository');
-    /** @var \Drupal\Core\Entity\EntityFieldManager $entity_field_manager */
+    /** @var EntityFieldManager $entity_field_manager */
     $entity_field_manager = \Drupal::service('entity_field.manager');
     $base_field_definitions = $entity_field_manager->getBaseFieldDefinitions('menu_link_content');
     $schema_repository->setLastInstalledFieldStorageDefinition($base_field_definitions[$field_name]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/menu_advanced_settings/src/Form/MenuAdvancedSettings.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The schema helper.
    *
-   * @var \Drupal\menu_advanced_settings\Services\SchemaManagement
+   * @var SchemaManagement
    */
   protected $schemaManagement;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

