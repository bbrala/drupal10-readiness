diff --git a/multiple_select.info.yml b/multiple_select.info.yml
index 47c8a7e..7bdeb49 100644
--- a/multiple_select.info.yml
+++ b/multiple_select.info.yml
@@ -1,6 +1,5 @@
 name: Multiple Select
 description: "Provides 'select/unselect all' option for configured checkboxs fields as bulk select helper."
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: multiple_select.admin_form
diff --git a/src/Form/BulkConfigForm.php b/src/Form/BulkConfigForm.php
index 360e4a5..6f9bbaf 100644
--- a/src/Form/BulkConfigForm.php
+++ b/src/Form/BulkConfigForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\multiple_select\Form;
 
+use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -18,21 +19,21 @@ class BulkConfigForm extends ConfigFormBase {
   /**
    * Provides an interface for an entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Provides an interface for entity type managers.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
diff --git a/tests/src/Functional/CrudFormTest.php b/tests/src/Functional/CrudFormTest.php
index d23dda3..9d138ac 100644
--- a/tests/src/Functional/CrudFormTest.php
+++ b/tests/src/Functional/CrudFormTest.php
@@ -62,7 +62,10 @@ class CrudFormTest extends BrowserTestBase {
 
     $this->drupalLogin($account);
     $this->drupalGet('/admin/config/content/multiple-config');
-    $this->assertText('Multiple Select Helper');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Multiple Select Helper');
   }
 
 }
