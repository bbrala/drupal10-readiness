modules/contrib/theme_breakpoints_js/src/ThemeBreakpointsJs.php
modules/contrib/theme_breakpoints_js/theme_breakpoints_js.module

2 files with changes
====================

1) modules/contrib/theme_breakpoints_js/theme_breakpoints_js.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\theme_breakpoints_js\ThemeBreakpointsJs;
+use Drupal\breakpoint\BreakpointInterface;
 /**
  * @file
  * Theme Breakpoints for Javascript module file.
@@ @@
  */
 function theme_breakpoints_js_page_attachments(array &$page) {
   $breakpoints = [];
-  /** @var \Drupal\theme_breakpoints_js\ThemeBreakpointsJs $theme_breakpoints_js */
+  /** @var ThemeBreakpointsJs $theme_breakpoints_js */
   $theme_breakpoints_js = \Drupal::service('theme_breakpoints_js');

-  /** @var \Drupal\breakpoint\BreakpointInterface[] $theme_breakpoints */
+  /** @var BreakpointInterface[] $theme_breakpoints */
   $theme_breakpoints = $theme_breakpoints_js->getBreakpointsForActiveTheme();

   foreach ($theme_breakpoints as $name => $definition) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/theme_breakpoints_js/src/ThemeBreakpointsJs.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\theme_breakpoints_js;

+use Drupal\Core\Theme\ActiveTheme;
+use Drupal\breakpoint\BreakpointInterface;
 use Drupal\breakpoint\BreakpointManagerInterface;
 use Drupal\Core\Theme\ThemeInitialization;
 use Drupal\Core\Theme\ThemeManagerInterface;
@@ @@
   /**
    * The breakpoint manager to get the breakpoints of a theme.
    *
-   * @var \Drupal\breakpoint\BreakpointManagerInterface
+   * @var BreakpointManagerInterface
    */
   protected $breakpointManager;

@@ @@
   /**
    * The theme manager to get the active theme.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
    *
    * Is used for getting the base themes.
    *
-   * @var \Drupal\Core\Theme\ThemeInitialization
+   * @var ThemeInitialization
    */
   protected $themeInitialization;

@@ @@
   /**
    * A list of currently known active theme objects.
    *
-   * @var \Drupal\Core\Theme\ActiveTheme[]
+   * @var ActiveTheme[]
    */
   protected $activeThemes;

@@ @@
   /**
    * ThemeBreakpointsJs constructor.
    *
-   * @param \Drupal\breakpoint\BreakpointManagerInterface $breakpoint_manager
+   * @param BreakpointManagerInterface $breakpoint_manager
    *   The breakpoint manager to get the breakpoints of a theme.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager to get the active theme.
-   * @param \Drupal\Core\Theme\ThemeInitialization $theme_initialization
+   * @param ThemeInitialization $theme_initialization
    *   Provides the theme initialization logic.
    */
   public function __construct(BreakpointManagerInterface $breakpoint_manager, ThemeManagerInterface $theme_manager, ThemeInitialization $theme_initialization) {
@@ @@
   /**
    * Gets the defined breakpoints for the active theme of the current route.
    *
-   * @return \Drupal\breakpoint\BreakpointInterface[]
+   * @return BreakpointInterface[]
    *   The breakpoints.
    */
   public function getBreakpointsForActiveTheme() {
@@ @@
    * @param string $theme_name
    *   The machine name of the theme.
    *
-   * @return \Drupal\breakpoint\BreakpointInterface[]
+   * @return BreakpointInterface[]
    *   The breakpoints, keyed by machine name without theme prefix.
    */
   public function getBreakpoints($theme_name) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

