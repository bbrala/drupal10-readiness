diff --git a/composer.json b/composer.json
index e967e73..289a70d 100644
--- a/composer.json
+++ b/composer.json
@@ -18,6 +18,6 @@
   "license": "GPL-2.0-or-later",
   "minimum-stability": "dev",
   "require": {
-    "drupal/core": "~8 || ^9"
+    "drupal/core": "~8 || ^9 || ^10"
   }
 }
diff --git a/interface_string_stats.info.yml b/interface_string_stats.info.yml
index 7aa0b7a..732b382 100755
--- a/interface_string_stats.info.yml
+++ b/interface_string_stats.info.yml
@@ -1,8 +1,7 @@
 name: Interface String Statistics
 type: module
 description: Allows administrators to view usage stats on interface strings.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 dependencies:
   - drupal:locale
 package: Multilingual
diff --git a/src/EventSubscriber/StringStatsExit.php b/src/EventSubscriber/StringStatsExit.php
index 491d8f4..3a009d8 100644
--- a/src/EventSubscriber/StringStatsExit.php
+++ b/src/EventSubscriber/StringStatsExit.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\interface_string_stats\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\TerminateEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\PostResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Drupal\Core\Queue\QueueFactory;
 
@@ -15,14 +15,14 @@ class StringStatsExit implements EventSubscriberInterface {
   /**
    * QueueFactory object.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queue;
 
   /**
    * Constructs a StringStatsExit object.
    *
-   * @param \Drupal\Core\Queue\QueueFactory $queueFactory
+   * @param QueueFactory $queueFactory
    *   The QueueFactory object.
    */
   public function __construct(QueueFactory $queueFactory) {
@@ -41,10 +41,10 @@ class StringStatsExit implements EventSubscriberInterface {
   /**
    * Load strings from the static cache and pass to the queue to process fully.
    *
-   * @param \Symfony\Component\HttpKernel\Event\PostResponseEvent $event
+   * @param TerminateEvent $event
    *   The PostResponseEvent object.
    */
-  public function terminate(PostResponseEvent $event) {
+  public function terminate(TerminateEvent $event) {
     $requested_string_translations = &drupal_static('interface_string_stats_strings', []);
     foreach ($requested_string_translations as $requested_string_translation) {
       $this->queue->createItem($requested_string_translation);
diff --git a/src/Plugin/QueueWorker/StringStatsQueue.php b/src/Plugin/QueueWorker/StringStatsQueue.php
index 95ee5f1..8f0591b 100644
--- a/src/Plugin/QueueWorker/StringStatsQueue.php
+++ b/src/Plugin/QueueWorker/StringStatsQueue.php
@@ -21,7 +21,7 @@ class StringStatsQueue extends QueueWorkerBase implements ContainerFactoryPlugin
   /**
    * StringRequestProcessor object.
    *
-   * @var \Drupal\interface_string_stats\StringRequestProcessor
+   * @var StringRequestProcessor
    */
   protected $stringProcessor;
 
diff --git a/src/StringRequestProcessor.php b/src/StringRequestProcessor.php
index f3b14fd..bacde09 100755
--- a/src/StringRequestProcessor.php
+++ b/src/StringRequestProcessor.php
@@ -13,23 +13,23 @@ class StringRequestProcessor {
   /**
    * The locale storage.
    *
-   * @var \Drupal\locale\StringStorageInterface
+   * @var StringStorageInterface
    */
   protected $stringDatabase;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Constructs a new StringRequestProcessor class.
    *
-   * @param \Drupal\locale\StringStorageInterface $string_storage
+   * @param StringStorageInterface $string_storage
    *   The string storage.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    */
   public function __construct(StringStorageInterface $string_storage, Connection $database) {
diff --git a/src/StringStatsStringDatabaseStorage.php b/src/StringStatsStringDatabaseStorage.php
index 8f4b3da..a13856d 100644
--- a/src/StringStatsStringDatabaseStorage.php
+++ b/src/StringStatsStringDatabaseStorage.php
@@ -15,16 +15,16 @@ class StringStatsStringDatabaseStorage extends StringDatabaseStorage {
   /**
    * Original StringDatabaseStorage object.
    *
-   * @var \Drupal\locale\StringStorageInterface
+   * @var StringStorageInterface
    */
   protected $stringDatabase;
 
   /**
    * Constructs a new StringDatabaseStorage class.
    *
-   * @param \Drupal\locale\StringStorageInterface $string_database
+   * @param StringStorageInterface $string_database
    *   Original StringStorageInterface object.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   A Database connection to use for reading and writing configuration data.
    * @param array $options
    *   (optional) Any additional database connection options to use in queries.
@@ -57,7 +57,7 @@ class StringStatsStringDatabaseStorage extends StringDatabaseStorage {
     $result = $query->execute();
 
     foreach ($result as $item) {
-      /** @var \Drupal\interface_string_stats\StringStatsTranslationString $string */
+      /** @var StringStatsTranslationString $string */
       $string = new StringStatsTranslationString($item);
       $string->setStorage($this);
       $strings[] = $string;
diff --git a/src/StringStatsTranslationManager.php b/src/StringStatsTranslationManager.php
index f3c5186..3f062ee 100755
--- a/src/StringStatsTranslationManager.php
+++ b/src/StringStatsTranslationManager.php
@@ -17,32 +17,32 @@ class StringStatsTranslationManager extends TranslationManager {
   /**
    * Original TranslationManager object.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $translationManager;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The account proxy.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a TranslationManager object.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation_manager
+   * @param TranslationInterface $translation_manager
    *   The original TranslationManager object.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The ConfigFactoryInterface object.
-   * @param \Drupal\Core\Session\AccountProxyInterface $proxyUser
+   * @param AccountProxyInterface $proxyUser
    *   The logged in user.
    */
   public function __construct(
