diff --git a/email_registration.api.php b/email_registration.api.php
index a545667..1fe8998 100644
--- a/email_registration.api.php
+++ b/email_registration.api.php
@@ -11,7 +11,6 @@ use Drupal\user\UserInterface;
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Implement this hook to generate a username for email_registration module.
  *
@@ -19,7 +18,7 @@ use Drupal\user\UserInterface;
  * to generate a username (return a string to be used as the username, NULL
  * to have email_registration generate it).
  *
- * @param \Drupal\user\UserInterface $account
+ * @param UserInterface $account
  *   The user object on which the operation is being performed.
  *
  * @return string
diff --git a/email_registration.module b/email_registration.module
index 3a99b68..bd4027b 100644
--- a/email_registration.module
+++ b/email_registration.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityFormInterface;
 /**
  * @file
  * Allows users to register with an email address as their username.
@@ -132,10 +133,10 @@ function email_registration_form_user_form_alter(&$form, FormStateInterface $for
 
     // Provide a random user name only if we are creating a new user, i.e. this
     // is a registration.
-    /** @var \Drupal\Core\Entity\EntityFormInterface $form_object */
+    /** @var EntityFormInterface $form_object */
     $form_object = $form_state->getFormObject();
     if ($form_object->getEntity()->isNew()) {
-      $form['account']['name']['#value'] = 'email_registration_' . user_password();
+      $form['account']['name']['#value'] = 'email_registration_' . \Drupal::service('password_generator')->generate();
     }
   }
   $form['account']['mail']['#title'] = t('Email');
