modules/contrib/user_action_log/modules/user_action_log_group/src/Plugin/views/filter/UserActionLogCurrentGroup.php
modules/contrib/user_action_log/modules/user_action_log_group/user_action_log_group.install
modules/contrib/user_action_log/modules/user_action_log_group/user_action_log_group.module
modules/contrib/user_action_log/src/Controller/UserActionController.php
modules/contrib/user_action_log/src/Form/UserActionConfigForm.php
modules/contrib/user_action_log/src/Plugin/views/field/UserActionLogEntityLabel.php
modules/contrib/user_action_log/src/Plugin/views/wizard/UserActionLog.php
modules/contrib/user_action_log/user_action_log.install
modules/contrib/user_action_log/user_action_log.module
modules/contrib/user_action_log/user_action_log.post_update.php
modules/contrib/user_action_log/user_action_log.views.inc

4 files with changes
====================

1) modules/contrib/user_action_log/user_action_log.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\user\UserInterface;
 use Drupal\user_action_log\Controller\UserActionController;
@@ @@
 /**
  * Implements hook_user_login().
  *
- * @param \Drupal\user\UserInterface $account
+ * @param UserInterface $account
  *
  * @throws \Exception
  */
@@ @@
 /**
  * Implements hook_user_logout().
  *
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *
  * @throws \Exception
  */
@@ @@
 /**
  * Implements hook_entity_insert().
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  */
-function user_action_log_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
+function user_action_log_entity_insert(EntityInterface $entity) {
   $user_action_controller = new UserActionController();
   $user_action_controller->prepareEntityForActionLog($entity, 'insert');
 }
@@ @@
 /**
  * Implements hook_entity_update().
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  */
-function user_action_log_entity_update(Drupal\Core\Entity\EntityInterface $entity) {
+function user_action_log_entity_update(EntityInterface $entity) {
   $user_action_controller = new UserActionController();
   $user_action_controller->prepareEntityForActionLog($entity, 'update');
 }
@@ @@
       'id' => 'user_action_log_entity_label',
     ),
   );
-}
+}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/user_action_log/src/Plugin/views/field/UserActionLogEntityLabel.php:42

    ---------- begin diff ----------
@@ @@
    * Provide the options form.
    *
    * @param $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function buildOptionsForm(&$form, FormStateInterface $form_state) {
     parent::buildOptionsForm($form, $form_state);
@@ @@
   /**
    * @{inheritdoc}
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *
    * @return string
    */
@@ @@
   /**
    * Check on permission.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *
    * @return bool|mixed
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/user_action_log/src/Controller/UserActionController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_action_log\Controller;

+use Drupal\Core\Database\Connection;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Database\StatementInterface;
 use Drupal\Core\Controller\ControllerBase;

 /**
@@ @@
 class UserActionController extends ControllerBase {

   /**
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * Prepares an entity for logging
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    * @param $operation
    */
   public function prepareEntityForActionLog($entity, $operation) {
@@ @@
    * @param null $entity_type
    * @param null $bundle
    *
-   * @return \Drupal\Core\Database\StatementInterface|int|null
+   * @return StatementInterface|int|null
    * @throws \Exception
    */
   public function logAction($uid, $operation, $entity_id = NULL, $entity_type = NULL, $bundle = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/user_action_log/modules/user_action_log_group/src/Plugin/views/filter/UserActionLogCurrentGroup.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_action_log_group\Plugin\views\filter;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\filter\FilterPluginBase;

@@ @@

   /**
    * @param $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   protected function operatorForm(&$form, FormStateInterface $form_state) {}

@@ @@
   }

   /**
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function query() {
     $table = $this->ensureMyTable();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

