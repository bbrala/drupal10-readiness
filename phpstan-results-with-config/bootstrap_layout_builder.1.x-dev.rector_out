modules/contrib/bootstrap_layout_builder/bootstrap_layout_builder.install
modules/contrib/bootstrap_layout_builder/bootstrap_layout_builder.module
modules/contrib/bootstrap_layout_builder/src/BreakpointInterface.php
modules/contrib/bootstrap_layout_builder/src/BreakpointListBuilder.php
modules/contrib/bootstrap_layout_builder/src/Entity/Breakpoint.php
modules/contrib/bootstrap_layout_builder/src/Entity/Layout.php
modules/contrib/bootstrap_layout_builder/src/Entity/LayoutOption.php
modules/contrib/bootstrap_layout_builder/src/Form/BreakpointDeleteForm.php
modules/contrib/bootstrap_layout_builder/src/Form/BreakpointForm.php
modules/contrib/bootstrap_layout_builder/src/Form/LayoutDeleteForm.php
modules/contrib/bootstrap_layout_builder/src/Form/LayoutForm.php
modules/contrib/bootstrap_layout_builder/src/Form/LayoutOptionDeleteForm.php
modules/contrib/bootstrap_layout_builder/src/Form/LayoutOptionForm.php
modules/contrib/bootstrap_layout_builder/src/Form/LayoutOptionsForm.php
modules/contrib/bootstrap_layout_builder/src/Form/SettingsForm.php
modules/contrib/bootstrap_layout_builder/src/LayoutInterface.php
modules/contrib/bootstrap_layout_builder/src/LayoutListBuilder.php
modules/contrib/bootstrap_layout_builder/src/LayoutOptionInterface.php
modules/contrib/bootstrap_layout_builder/src/Plugin/Deriver/BootstrapLayoutDeriver.php
modules/contrib/bootstrap_layout_builder/src/Plugin/Layout/BootstrapLayout.php

8 files with changes
====================

1) modules/contrib/bootstrap_layout_builder/src/Plugin/Layout/BootstrapLayout.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $configFactory, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
           'title' => $tab['title'],
           'target' => $tab['machine_name'],
           'active' => isset($tab['active']) && $tab['active'] == TRUE ? 'active' : '',
-          'icon' => t('<img class="blb_icon" src="/' . drupal_get_path('module', 'bootstrap_layout_builder') . '/images/ui/' . ($tab['icon'] ? $tab['icon'] : 'default.svg') . '" />'),
+          'icon' => t('<img class="blb_icon" src="/' . \Drupal::service('extension.list.module')->getPath('bootstrap_layout_builder') . '/images/ui/' . ($tab['icon'] ? $tab['icon'] : 'default.svg') . '" />'),
         ],
       ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bootstrap_layout_builder/src/Plugin/Deriver/BootstrapLayoutDeriver.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a new BootstrapLayoutDeriver object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/bootstrap_layout_builder/src/LayoutInterface.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Returns all the options from a layout options sorted correctly.
    *
-   * @return \Drupal\bootstrap_layout_builder\LayoutOptionInterface[]
+   * @return LayoutOptionInterface[]
    *   An array of layout options entities.
    */
   public function getLayoutOptions();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/bootstrap_layout_builder/src/Form/SettingsForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * Constructs a SettingsForm object.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info) {
@@ @@
     $form['hide_section_settings'] = [
       '#type' => 'checkbox',
       '#title' => $this->t('Hide "Advanced Settings"'),
-      '#description' => $this->t('<img src="/' . drupal_get_path('module', 'bootstrap_layout_builder') . '/images/drupal-ui/toggle-advanced-settings.png" alt="Toggle Advanced Settings Tab Visibility" title="Toggle Advanced Settings Tab Visibility">'),
+      '#description' => $this->t('<img src="/' . \Drupal::service('extension.list.module')->getPath('bootstrap_layout_builder') . '/images/drupal-ui/toggle-advanced-settings.png" alt="Toggle Advanced Settings Tab Visibility" title="Toggle Advanced Settings Tab Visibility">'),
       '#default_value' => $config->get('hide_section_settings'),
     ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/bootstrap_layout_builder/src/Form/LayoutOptionForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\bootstrap_layout_builder\Form;

+use Drupal\bootstrap_layout_builder\LayoutOptionInterface;
+use Drupal\bootstrap_layout_builder\LayoutInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityForm;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a BootstrapLayoutBuilderBreakpointsForm object.
    *
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $route_match
+   * @param CurrentRouteMatch $route_match
    *   The route match service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(CurrentRouteMatch $route_match, EntityTypeManagerInterface $entity_type_manager, MessengerInterface $messenger) {
@@ @@
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\bootstrap_layout_builder\LayoutOptionInterface
+   * @var LayoutOptionInterface
    */
   protected $entity;

@@ @@
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);

-    /** @var \Drupal\bootstrap_layout_builder\LayoutInterface $layout */
+    /** @var LayoutInterface $layout */
     $option = $this->entity;

     $form['label'] = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/bootstrap_layout_builder/src/Form/LayoutForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\bootstrap_layout_builder\Form;

+use Drupal\bootstrap_layout_builder\LayoutInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a BootstrapLayoutBuilderBreakpointsForm object.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(MessengerInterface $messenger) {
@@ @@
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);

-    /** @var \Drupal\bootstrap_layout_builder\LayoutInterface $layout */
+    /** @var LayoutInterface $layout */
     $layout = $this->entity;

     $form['label'] = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/bootstrap_layout_builder/src/Form/BreakpointForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\bootstrap_layout_builder\Form;

+use Drupal\bootstrap_layout_builder\BreakpointInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a BootstrapLayoutBuilderBreakpointsForm object.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(MessengerInterface $messenger) {
@@ @@
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);

-    /** @var \Drupal\bootstrap_layout_builder\BreakpointInterface $breakpoint */
+    /** @var BreakpointInterface $breakpoint */
     $breakpoint = $this->entity;

     $form['label'] = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/bootstrap_layout_builder/bootstrap_layout_builder.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\StorageInterface;
 /**
  * @file
  * Installation and updating routines.
@@ @@
  * Creates the new Bootstrap Layout Builder settings.
  */
 function bootstrap_layout_builder_update_8001() {
-  $path = drupal_get_path('module', 'bootstrap_layout_builder') . '/config/install';
+  $path = \Drupal::service('extension.list.module')->getPath('bootstrap_layout_builder') . '/config/install';
   $source = new FileStorage($path);
   $config_name = 'bootstrap_layout_builder.settings';

-  /** @var \Drupal\Core\Config\StorageInterface $active_storage */
+  /** @var StorageInterface $active_storage */
   $active_storage = \Drupal::service('config.storage');
   $active_storage->write($config_name, $source->read($config_name));
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 8 files have been changed by Rector                                       

