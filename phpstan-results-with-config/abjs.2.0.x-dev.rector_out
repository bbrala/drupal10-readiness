modules/contrib/abjs/abjs.install
modules/contrib/abjs/abjs.module
modules/contrib/abjs/src/Controller/AbjsDefaultController.php
modules/contrib/abjs/src/Form/AbjsConditionDeleteConfirmForm.php
modules/contrib/abjs/src/Form/AbjsConditionForm.php
modules/contrib/abjs/src/Form/AbjsExperienceDeleteConfirmForm.php
modules/contrib/abjs/src/Form/AbjsExperienceForm.php
modules/contrib/abjs/src/Form/AbjsSettingsAdmin.php
modules/contrib/abjs/src/Form/AbjsTestDeleteConfirmForm.php
modules/contrib/abjs/src/Form/AbjsTestForm.php
modules/contrib/abjs/tests/src/Kernel/Form/AbjsSettingsAdminTest.php

10 files with changes
=====================

1) modules/contrib/abjs/tests/src/Kernel/Form/AbjsSettingsAdminTest.php:17

    ---------- begin diff ----------
@@ @@
 
   /**
    * The Abjs settings form.
-   *
-   * @var \Drupal\abjs\Form\AbjsSettingsAdmin
-   */
+   *
+   * @var AbjsSettingsAdmin
+   */
   protected $abjsSettingsForm;
 
   /**
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->abjsSettingsForm = new AbjsSettingsAdmin(
       $this->container->get('config.factory')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/abjs/src/Form/AbjsTestForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\abjs\Form;

+use Drupal\Core\Database\Database;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * Provides a class for obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;

@@ @@
   /**
    * Provides database connection service.
    *
-   * @var \Drupal\Core\Database\Database
+   * @var Database
    */
   protected $database;

@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    * @param int $tid
    *   The ID of the item.
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function validateTest(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function saveTest(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function cancelTest(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function deleteTest(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/abjs/src/Form/AbjsTestDeleteConfirmForm.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Provides database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Construct method.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Provides database connection service.
    */
   public function __construct(Connection $database) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    * @param int $tid
    *   The ID of the item to be deleted.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/abjs/src/Form/AbjsSettingsAdmin.php:28

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/abjs/src/Form/AbjsExperienceForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Current account user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;

@@ @@
   /**
    * Database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Provides a class for obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;

@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    * @param int $eid
    *   The ID of the item to be deleted.
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function saveExperience(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function cancelExperience(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function deleteExperience(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/abjs/src/Form/AbjsExperienceDeleteConfirmForm.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * Provides database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Construct method.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Provides database connection service.
    */
   public function __construct(Connection $database) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    * @param int $eid
    *   The ID of the item to be deleted.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/abjs/src/Form/AbjsConditionForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\abjs\Form;

+use Drupal\Core\Database\Database;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
   /**
    * Current account user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;

@@ @@
   /**
    * Provides database connection service.
    *
-   * @var \Drupal\Core\Database\Database
+   * @var Database
    */
   protected $database;

@@ @@
   /**
    * Provides a class for obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;

@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    * @param int $cid
    *   The ID of the item.
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function saveCondition(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function cancelCondition(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of forms.
    */
   public function deleteCondition(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/abjs/src/Form/AbjsConditionDeleteConfirmForm.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection.
    *
-   * @var Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Provides an object containing the current state of a form.
    * @param int $cid
    *   The ID of the item to be deleted.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/abjs/src/Controller/AbjsDefaultController.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Turns a render array into a HTML string.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $userStorage;

@@ @@
   /**
    * Provides a service to handle various date related functionality.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Turns a render array into a HTML string.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The database connection.
    *
-   * @var Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Constructs a new FeedTypeForm object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The services of date.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The render object.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    */
   public function __construct(DateFormatterInterface $date_formatter, RendererInterface $renderer, Connection $database) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/abjs/abjs.module:154

    ---------- begin diff ----------
@@ @@
   // experience scripts are executed for each visitor on every page load, in
   // the order in which the tests are defined. The user will have one cookie
   // for each active test.
-  $common_js = file_get_contents(drupal_get_path('module', 'abjs') . '/js/abjs-common.js');
+  $common_js = file_get_contents(\Drupal::service('extension.list.module')->getPath('abjs') . '/js/abjs-common.js');

   $abjs_script = "'use strict'; (function() {var abjs = $json;\n$common_js})();";
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 10 files have been changed by Rector                                      

