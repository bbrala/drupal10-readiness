modules/contrib/social_media/social_media.api.php
modules/contrib/social_media/social_media.install
modules/contrib/social_media/social_media.module
modules/contrib/social_media/src/Controller/AccessController.php
modules/contrib/social_media/src/Event/SocialMediaEvent.php
modules/contrib/social_media/src/Form/ForwardEmailForm.php
modules/contrib/social_media/src/Form/SocialMediaAdminForm.php
modules/contrib/social_media/src/Plugin/Block/SocialSharingBlock.php
modules/contrib/social_media/src/Plugin/Field/FieldFormatter/SocialMediaFormatter.php
modules/contrib/social_media/src/Plugin/Field/FieldType/SocialMediaItem.php
modules/contrib/social_media/src/Plugin/Field/FieldWidget/SocialMediaWidget.php

6 files with changes
====================

1) modules/contrib/social_media/src/Plugin/Field/FieldFormatter/SocialMediaFormatter.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The block manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/social_media/src/Plugin/Block/SocialSharingBlock.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The configFactory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
   /**
    * An event dispatcher instance to use for configuration events.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
   /**
    * The current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;

@@ @@
     global $base_url;
     $library = ['social_media/basic'];
     $settings = [];
-    $icon_path = $base_url . '/' . drupal_get_path('module', 'social_media') . '/icons/';
+    $icon_path = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('social_media') . '/icons/';
     $elements = [];
     $social_medias = $this->configFactory->get('social_media.settings')
       ->get('social_media');
@@ @@

     // Call pre_execute event before doing anything.
     $event = new SocialMediaEvent($social_medias);
-    $this->eventDispatcher->dispatch('social_media.pre_execute', $event);
+    $this->eventDispatcher->dispatch($event, 'social_media.pre_execute');
     $social_medias = $event->getElement();

     $social_medias = $this->sortSocialMedias($social_medias);
@@ @@

     // Call prerender event before render.
     $event = new SocialMediaEvent($elements);
-    $this->eventDispatcher->dispatch('social_media.pre_render', $event);
+    $this->eventDispatcher->dispatch($event, 'social_media.pre_render');
     $elements = $event->getElement();

     $build['social_sharing_block'] = [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/social_media/src/Form/SocialMediaAdminForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * An event dispatcher instance to use for configuration events.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
     ];

     $event = new SocialMediaEvent($elements);
-    $this->eventDispatcher->dispatch('social_media.add_more_link', $event);
+    $this->eventDispatcher->dispatch($event, 'social_media.add_more_link');
     $elements = $event->getElement();

     return $elements;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/social_media/src/Form/ForwardEmailForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The request object.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack object.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(ConfigFactoryInterface $config_factory, RequestStack $request_stack, MailManagerInterface $mail_manager, LanguageManagerInterface $language_manager, LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/social_media/src/Event/SocialMediaEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_media\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 /**
  * Drupal 9 is shipped with Symfony 4, which places the Event class in a
  * different namespace than Symfony 3 did. In order to support Drupal 8 to
@@ @@
  * Drupal 9 upgrades, we must find whichever class is available and extend it.
  */
 if (class_exists('\Symfony\Contracts\EventDispatcher\Event')) {
-  class EventProxy extends \Symfony\Contracts\EventDispatcher\Event {
+  class EventProxy extends Event {
     // Using the Symfony 4 class.
   }
 }
 elseif (class_exists('\Symfony\Component\EventDispatcher\Event')) {
-  class EventProxy extends \Symfony\Component\EventDispatcher\Event {
+  class EventProxy extends Event {
     // Using the Symfony 3 class.
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/social_media/src/Controller/AccessController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_media\Controller;

+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Controller\ControllerBase;

@@ @@
   /**
    * Check if email option is enabled, if not do not allow this path.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   Return allowed if the social media email is enabled.
    */
   public function access() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

