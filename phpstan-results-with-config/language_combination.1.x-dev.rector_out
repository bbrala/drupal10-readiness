modules/contrib/language_combination/language_combination.module
modules/contrib/language_combination/src/LanguageCombinationFieldItemList.php
modules/contrib/language_combination/src/Plugin/Field/FieldFormatter/LanguageCombinationDefaultFormatter.php
modules/contrib/language_combination/src/Plugin/Field/FieldFormatter/LanguageCombinationTableFormatter.php
modules/contrib/language_combination/src/Plugin/Field/FieldType/LanguageCombination.php
modules/contrib/language_combination/src/Plugin/Field/FieldWidget/LanguageCombinationWidget.php
modules/contrib/language_combination/src/Plugin/Validation/Constraint/LanguageCombinationConstraint.php
modules/contrib/language_combination/src/Plugin/Validation/Constraint/LanguageCombinationConstraintValidator.php
modules/contrib/language_combination/tests/src/Functional/LanguageCombinationTest.php

2 files with changes
====================

1) modules/contrib/language_combination/tests/src/Functional/LanguageCombinationTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $user = $this->drupalCreateUser([
@@ @@
       'language_combination[0][language_source]' => 'fr',
       'language_combination[0][language_target]' => 'fr',
     ];
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->pageTextContains("The 'from' and 'to' language fields can't have the same value.");
   }

@@ @@
       'language_combination[0][language_source]' => 'fr',
       'language_combination[0][language_target]' => 'de',
     ];
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->pageTextContains('French to German');
   }

@@ @@
       'language_combination[1][language_source]' => 'en',
       'language_combination[1][language_target]' => 'de',
     ];
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, t('Save'));

     $node = \Drupal::entityTypeManager()->getStorage('node')->load('1');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/language_combination/language_combination.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Language\LanguageInterface;
+use Drupal\Core\Entity\EntityFieldManager;
 /**
  * @file
  * Main module file for the Local Translator language combination module.
@@ @@
  */
 function language_combination_form_views_exposed_form_alter(&$form, FormStateInterface $form_state) {
   $languages = array_map(function ($language) {
-    /** @var \Drupal\Core\Language\LanguageInterface $language */
+    /** @var LanguageInterface $language */
     return $language->getName();
   }, \Drupal::languageManager()->getLanguages());
   $children = Element::children($form);
@@ @@
  * Implements hook_views_data_alter().
  */
 function language_combination_views_data_alter(array &$data) {
-  /** @var \Drupal\Core\Entity\EntityFieldManager $manager */
+  /** @var EntityFieldManager $manager */
   $manager = \Drupal::service('entity_field.manager');
   $fields  = $manager->getFieldMapByFieldType('language_combination');
   if (!empty($fields)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

