diff --git a/empty_fields.module b/empty_fields.module
index 2c62ca2..863aaa8 100644
--- a/empty_fields.module
+++ b/empty_fields.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\empty_fields\EmptyFieldsPluginManager;
+use Drupal\empty_fields\EmptyFieldPluginInterface;
+use Drupal\Core\Entity\FieldableEntityInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 /**
  * @file
  * Contains the implementation for the empty_fields module.
@@ -29,7 +33,7 @@ function empty_fields_help($route_name, RouteMatchInterface $route_match) {
  * Implements hook_field_formatter_third_party_settings_form().
  */
 function empty_fields_field_formatter_third_party_settings_form(FormatterInterface $plugin, FieldDefinitionInterface $field_definition, $view_mode, $form, FormStateInterface $form_state) {
-  /** @var \Drupal\empty_fields\EmptyFieldsPluginManager $manager */
+  /** @var EmptyFieldsPluginManager $manager */
   $manager = \Drupal::service('plugin.manager.empty_fields');
   $options = ['' => t('- Default -')];
   foreach ($manager->getDefinitions() as $id => $data) {
@@ -85,13 +89,13 @@ function _empty_fields_config_form($form, FormStateInterface $form_state) {
  * Implements hook_field_formatter_settings_summary_alter().
  */
 function empty_fields_field_formatter_settings_summary_alter(&$summary, $context) {
-  /** @var \Drupal\Core\Field\FormatterInterface $formatter */
+  /** @var FormatterInterface $formatter */
   $formatter = $context['formatter'];
   if ($handler = $formatter->getThirdPartySetting('empty_fields', 'handler', '')) {
     $configuration = $formatter->getThirdPartySetting('empty_fields', 'settings', []);
     /* @var \Drupal\empty_fields\EmptyFieldsPluginManager manager */
     $manager = \Drupal::service('plugin.manager.empty_fields');
-    /** @var \Drupal\empty_fields\EmptyFieldPluginInterface $plugin */
+    /** @var EmptyFieldPluginInterface $plugin */
     $plugin = $manager->createInstance($handler, $configuration);
     $summary[] = $plugin->settingsSummary();
   }
@@ -101,11 +105,11 @@ function empty_fields_field_formatter_settings_summary_alter(&$summary, $context
  * Implements hook_entity_display_build_alter().
  */
 function empty_fields_entity_display_build_alter(&$build, $context) {
-  /** @var \Drupal\Core\Entity\FieldableEntityInterface $entity */
+  /** @var FieldableEntityInterface $entity */
   $entity = $context['entity'];
-  /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display */
+  /** @var EntityViewDisplayInterface $display */
   $display = $context['display'];
-  /** @var \Drupal\empty_fields\EmptyFieldsPluginManager $manager */
+  /** @var EmptyFieldsPluginManager $manager */
   $manager = \Drupal::service('plugin.manager.empty_fields');
   foreach (Element::children($build) as $field_name) {
     if ($entity->get($field_name)->isEmpty()
@@ -114,7 +118,7 @@ function empty_fields_entity_display_build_alter(&$build, $context) {
       ($handler = $formatter->getThirdPartySetting('empty_fields', 'handler', ''))
     ) {
       $configuration = $formatter->getThirdPartySetting('empty_fields', 'settings', []);
-      /** @var \Drupal\empty_fields\EmptyFieldPluginInterface $plugin */
+      /** @var EmptyFieldPluginInterface $plugin */
       $plugin = $manager->createInstance($handler, $configuration);
       $definition = $entity->get($field_name)->getFieldDefinition();
       $component = $display->getComponent($field_name);
diff --git a/src/Annotation/EmptyField.php b/src/Annotation/EmptyField.php
index 8c328f7..a469a98 100644
--- a/src/Annotation/EmptyField.php
+++ b/src/Annotation/EmptyField.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\empty_fields\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -30,7 +31,7 @@ class EmptyField extends Plugin {
   /**
    * The human-readable name of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/EmptyFieldPluginInterface.php b/src/EmptyFieldPluginInterface.php
index 0986026..3e63cc1 100644
--- a/src/EmptyFieldPluginInterface.php
+++ b/src/EmptyFieldPluginInterface.php
@@ -36,7 +36,7 @@ interface EmptyFieldPluginInterface {
    *
    * @param array $form
    *   The form definition array for the block configuration form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/EmptyFieldsPluginManager.php b/src/EmptyFieldsPluginManager.php
index 71c7254..368f88f 100644
--- a/src/EmptyFieldsPluginManager.php
+++ b/src/EmptyFieldsPluginManager.php
@@ -24,9 +24,9 @@ class EmptyFieldsPluginManager extends DefaultPluginManager implements FallbackP
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
