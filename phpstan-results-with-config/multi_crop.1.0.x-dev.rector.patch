diff --git a/src/Annotation/MultiCrop.php b/src/Annotation/MultiCrop.php
index 2ecc4f1..cf00bef 100644
--- a/src/Annotation/MultiCrop.php
+++ b/src/Annotation/MultiCrop.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\multi_crop\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class MultiCrop extends Plugin {
   /**
    * The human-readable name of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -30,7 +31,7 @@ class MultiCrop extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/MultiCropPluginBase.php b/src/MultiCropPluginBase.php
index 70582af..e9fa030 100644
--- a/src/MultiCropPluginBase.php
+++ b/src/MultiCropPluginBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\multi_crop;
 
+use Drupal\crop\Entity\Crop;
+use Drupal\file\FileInterface;
 use Drupal\Component\Plugin\PluginBase;
 
 /**
@@ -34,7 +36,7 @@ abstract class MultiCropPluginBase extends PluginBase implements MultiCropInterf
    * @param string $new_uri
    *   Uri of the "copy image".
    *
-   * @return \Drupal\crop\Entity\Crop
+   * @return Crop
    *   Return the crop entity.
    */
   protected function retrievCrop($crop_type, $old_uri, $new_uri) {
@@ -48,11 +50,11 @@ abstract class MultiCropPluginBase extends PluginBase implements MultiCropInterf
     // Try to load crop from source image.
     if ($crop == NULL) {
 
-      /** @var \Drupal\file\FileInterface[] $files */
+      /** @var FileInterface[] $files */
       $files = \Drupal::entityTypeManager()
         ->getStorage('file')
         ->loadByProperties(['uri' => $old_uri]);
-      /** @var \Drupal\file\FileInterface|null $file */
+      /** @var FileInterface|null $file */
       $file = reset($files) ?: NULL;
 
       $values = [
diff --git a/src/MultiCropPluginManager.php b/src/MultiCropPluginManager.php
index fb75888..eeb3e22 100644
--- a/src/MultiCropPluginManager.php
+++ b/src/MultiCropPluginManager.php
@@ -17,9 +17,9 @@ class MultiCropPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/Field/FieldFormatter/MulticropFormatter.php b/src/Plugin/Field/FieldFormatter/MulticropFormatter.php
index 1de8e7c..836e0e1 100644
--- a/src/Plugin/Field/FieldFormatter/MulticropFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/MulticropFormatter.php
@@ -29,7 +29,7 @@ class MulticropFormatter extends ImageFormatter {
   /**
    * The multicrop plugin manager.
    *
-   * @var \Drupal\multi_crop\MultiCropPluginManager
+   * @var MultiCropPluginManager
    */
   private $multiCropManager;
 
@@ -40,7 +40,7 @@ class MulticropFormatter extends ImageFormatter {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -50,13 +50,13 @@ class MulticropFormatter extends ImageFormatter {
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The image style storage.
-   * @param \Drupal\Core\File\FileUrlGeneratorInterface $file_url_generator
+   * @param FileUrlGeneratorInterface $file_url_generator
    *   The file URL generator.
-   * @param \Drupal\multi_crop\MultiCropPluginManager $multiCropManager
+   * @param MultiCropPluginManager $multiCropManager
    *   The multicrop plugin manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, EntityStorageInterface $image_style_storage, FileUrlGeneratorInterface $file_url_generator = NULL, MultiCropPluginManager $multiCropManager) {
