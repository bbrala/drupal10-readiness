diff --git a/google_auth_sso.info.yml b/google_auth_sso.info.yml
index 32cdf27..0f5fd95 100755
--- a/google_auth_sso.info.yml
+++ b/google_auth_sso.info.yml
@@ -1,6 +1,6 @@
 name: Google Auth SSO
 description: Allow google users to connect to drupal and automatically set up user roles based on Google's data.
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 type: module
 package: Social
 dependencies:
diff --git a/google_auth_sso.install b/google_auth_sso.install
index 9fd33fc..a3ce11b 100644
--- a/google_auth_sso.install
+++ b/google_auth_sso.install
@@ -38,7 +38,7 @@ function google_auth_sso_install() {
 
   // Update social auth google icon.
   $config = \Drupal::configFactory()->getEditable('social_auth.settings');
-  $img_path = drupal_get_path('module', 'google_auth_sso') . '/img/google_logo.svg';
+  $img_path = \Drupal::service('extension.list.module')->getPath('google_auth_sso') . '/img/google_logo.svg';
   $config->set('auth.social_auth_google.img_path', $img_path)->save();
 
 }
@@ -50,7 +50,7 @@ function google_auth_sso_install() {
 function google_auth_sso_uninstall() {
 
   // Remove Social Auth block.
-  $block = \Drupal\block\Entity\Block::load('google_auth_sso_login');
+  $block = Block::load('google_auth_sso_login');
   if ($block) {
     $block->delete();
   }
diff --git a/src/EventSubscriber/SyncGoogleRoles.php b/src/EventSubscriber/SyncGoogleRoles.php
index 9341f4b..29ad66a 100755
--- a/src/EventSubscriber/SyncGoogleRoles.php
+++ b/src/EventSubscriber/SyncGoogleRoles.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\google_auth_sso\EventSubscriber;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\user\UserInterface;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -30,52 +33,52 @@ class SyncGoogleRoles implements EventSubscriberInterface {
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The data handler.
    *
-   * @var \Drupal\social_auth\SocialAuthDataHandler
+   * @var SocialAuthDataHandler
    */
   protected $dataHandler;
 
   /**
    * The network plugin manager.
    *
-   * @var \Drupal\social_auth\SocialAuthDataHandler
+   * @var SocialAuthDataHandler
    */
   protected $networkManager;
 
   /**
    * The provider auth manager.
    *
-   * @var \Drupal\social_auth\AuthManager\OAuth2ManagerInterface
+   * @var OAuth2ManagerInterface
    */
   protected $providerAuth;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * SocialAuthSubscriber constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\social_auth\SocialAuthDataHandler $data_handler
+   * @param SocialAuthDataHandler $data_handler
    *   Used to manage session variables.
-   * @param \Drupal\social_api\Plugin\NetworkManager $network_manager
+   * @param NetworkManager $network_manager
    *   Used to get an instance of the social auth implementer network plugin.
-   * @param \Drupal\social_auth\AuthManager\OAuth2ManagerInterface $provider_auth
+   * @param OAuth2ManagerInterface $provider_auth
    *   Used to get the provider auth manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Used for accessing Drupal configuration.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The Entity type manager.
    */
   public function __construct(MessengerInterface $messenger,
@@ -110,10 +113,10 @@ class SyncGoogleRoles implements EventSubscriberInterface {
   /**
    * Auto-activate new user based on "google drupal roles".
    *
-   * @param \Drupal\social_auth\Event\UserEvent $event
+   * @param UserEvent $event
    *   The Social Auth user event object.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function onUserCreated(UserEvent $event) {
 
@@ -126,7 +129,7 @@ class SyncGoogleRoles implements EventSubscriberInterface {
       if (!empty($google_drupal_roles)) {
 
         /**
-         * @var Drupal\user\UserInterface $user
+         * @var UserInterface $user
          */
         $user = $event->getUser();
         $roles = $this->entityTypeManager->getStorage('user_role')->loadMultiple($google_drupal_roles);
@@ -152,10 +155,10 @@ class SyncGoogleRoles implements EventSubscriberInterface {
    * Retrieve "google drupal roles on each user login
    * and update "drupal roles" according to.
    *
-   * @param \Drupal\social_auth\Event\UserEvent $event
+   * @param UserEvent $event
    *   The Social Auth user event object.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function onUserLogin(UserEvent $event) {
 
@@ -165,7 +168,7 @@ class SyncGoogleRoles implements EventSubscriberInterface {
     $this->messenger->addStatus('Google drupal Roles: ' . implode(', ', $google_drupal_roles));
 
     /**
-     * @var Drupal\user\UserInterface $user
+     * @var UserInterface $user
      */
     $drupal_user = $event->getUser();
 
@@ -191,13 +194,13 @@ class SyncGoogleRoles implements EventSubscriberInterface {
   /**
    * Get "google drupal roles" based on current google user.
    *
-   * @param \Drupal\social_auth\Event\UserEvent $event
+   * @param UserEvent $event
    *   The event.
    *
    * @return array
    *   Drupal roles.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   private function getGoogleDrupalRoles(UserEvent $event) {
 
