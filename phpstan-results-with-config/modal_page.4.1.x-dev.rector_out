modules/contrib/modal_page/includes/modal_page.install.inc
modules/contrib/modal_page/modal_page.api.php
modules/contrib/modal_page/modal_page.install
modules/contrib/modal_page/modal_page.module
modules/contrib/modal_page/src/Controller/ModalAjaxController.php
modules/contrib/modal_page/src/Controller/ModalHelpController.php
modules/contrib/modal_page/src/Entity/ListBuilder/ModalListBuilder.php
modules/contrib/modal_page/src/Entity/Modal.php
modules/contrib/modal_page/src/Entity/ModalInterface.php
modules/contrib/modal_page/src/Entity/RouteProvider/ModalHtmlRouteProvider.php
modules/contrib/modal_page/src/Form/ModalDeleteForm.php
modules/contrib/modal_page/src/Form/ModalForm.php
modules/contrib/modal_page/src/Form/ModalPageSettingsForm.php
modules/contrib/modal_page/src/Helper/ModalPageSettersTraitHelper.php
modules/contrib/modal_page/src/Service/ModalPageHelperService.php
modules/contrib/modal_page/src/Service/ModalPageService.php
modules/contrib/modal_page/tests/src/Functional/ModalPageTest.php

8 files with changes
====================

1) modules/contrib/modal_page/src/Service/ModalPageService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\modal_page\Service;

+use Symfony\Component\HttpFoundation\Request;
+use Drupal\user\Entity\User;
 use Drupal\Component\Utility\Xss;
 use Drupal\Component\Uuid\UuidInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The UUID service.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuidService;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Path Matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;

@@ @@
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The user current.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;

@@ @@
   /**
    * The current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;

@@ @@
       return TRUE;
     }

-    /** @var \Drupal\user\Entity\User $user */
+    /** @var User $user */
     $user = $this->entityTypeManager->getStorage('user')->load($this->currentUser->id());

     if (empty($user) || empty($modal->getRoles())) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/modal_page/src/Service/ModalPageHelperService.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The user current.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $loggedUser;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/modal_page/src/Helper/ModalPageSettersTraitHelper.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * Module handler.
    *
-   * @var Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Set Module Handler.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
    */
   public function setModuleHandler(ModuleHandlerInterface $moduleHandler) {
@@ @@
   /**
    * Set Language Manager.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param LanguageManagerInterface $languageManager
    *   The language manager.
    */
   public function setLanguageManager(LanguageManagerInterface $languageManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/modal_page/src/Form/ModalForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\modal_page\Form;

+use Drupal\modal_page\Entity\Modal;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\modal_page\Service\ModalPageService
+   * @var ModalPageService
    */
   protected $modalPageService;

@@ @@
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);

-    /** @var \Drupal\modal_page\Entity\Modal $modal */
+    /** @var Modal $modal */
     $modal = $this->entity;

-    $imagePath = $imageUrl = '/' . drupal_get_path('module', 'modal_page') . '/images/';
+    $imagePath = $imageUrl = '/' . \Drupal::service('extension.list.module')->getPath('modal_page') . '/images/';

     $modalImageMarkup = [
       '#theme' => 'modal_page_helper_admin',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/modal_page/src/Controller/ModalHelpController.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * The extension list module.
    *
-   * @var \Drupal\Core\Extension\ExtensionList
+   * @var ExtensionList
    */
   protected $extensionListModule;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/modal_page/src/Controller/ModalAjaxController.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * The extension list module.
    *
-   * @var \Drupal\Core\Extension\ExtensionList
+   * @var ExtensionList
    */
   protected $extensionListModule;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Modal Page Helper Service.
    *
-   * @var \Drupal\modal_page\Service\ModalPageHelperService
+   * @var ModalPageHelperService
    */
   protected $modalPageHelperService;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/modal_page/modal_page.module:210

    ---------- begin diff ----------
@@ @@
   // Delete cookie for welcome Modal.
   if (!empty(\Drupal::service('request_stack')->getCurrentRequest()->cookies->get('hide_modal_id_thank_you_for_installing_modal_page'))) {
     $response = new Response();
-    $cookie = new Cookie('hide_modal_id_thank_you_for_installing_modal_page', '', time() - 3600, '/', NULL, FALSE);
+    $cookie = Cookie::create('hide_modal_id_thank_you_for_installing_modal_page', '', time() - 3600, '/', NULL, FALSE);
     $response->headers->setCookie($cookie);
     $response->send();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * NewToStaticCallRector


8) modules/contrib/modal_page/modal_page.install:640

    ---------- begin diff ----------
@@ @@
     return FALSE;
   }

-  $config_views_path = drupal_get_path('module', 'modal_page') . '/config/optional/views.view.list_modal.yml';
+  $config_views_path = \Drupal::service('extension.list.module')->getPath('modal_page') . '/config/optional/views.view.list_modal.yml';

   $data = Yaml::decode(file_get_contents($config_views_path));
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 8 files have been changed by Rector                                       

