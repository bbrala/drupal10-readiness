diff --git a/entity_inherit.module b/entity_inherit.module
index a2bccaa..c7ac00b 100644
--- a/entity_inherit.module
+++ b/entity_inherit.module
@@ -11,7 +11,7 @@ use Drupal\entity_inherit\EntityInherit;
 /**
  * Quick access to the entity_inherit service, useful for debugging.
  *
- * @return \Drupal\entity_inherit\EntityInherit
+ * @return EntityInherit
  *   The EntityInherit service.
  */
 function entity_inherit() : EntityInherit {
diff --git a/src/Annotation/EntityInheritPluginAnnotation.php b/src/Annotation/EntityInheritPluginAnnotation.php
index 6835f02..cf23b43 100644
--- a/src/Annotation/EntityInheritPluginAnnotation.php
+++ b/src/Annotation/EntityInheritPluginAnnotation.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_inherit\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -20,7 +21,7 @@ class EntityInheritPluginAnnotation extends Plugin {
   /**
    * A brief, human readable, description of the modifier.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/EntityInherit.php b/src/EntityInherit.php
index d575c8b..8ebf11b 100644
--- a/src/EntityInherit.php
+++ b/src/EntityInherit.php
@@ -38,68 +38,68 @@ class EntityInherit {
   /**
    * The config service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The plugin manager service.
    *
-   * @var \Drupal\entity_inherit\EntityInheritPlugin\EntityInheritPluginManager
+   * @var EntityInheritPluginManager
    */
   protected $pluginManager;
 
   /**
    * Injected entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManager
+   * @var EntityFieldManager
    */
   protected $entityFieldManager;
 
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\State
+   * @var State
    */
   protected $state;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * The injected logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $loggerFactory;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The injected config service.
-   * @param \Drupal\entity_inherit\EntityInheritPlugin\EntityInheritPluginManager $plugin_manager
+   * @param EntityInheritPluginManager $plugin_manager
    *   The injected plugin manager.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   The injected entity type manager.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The injected messenger service.
-   * @param \Drupal\Core\Entity\EntityFieldManager $entity_field_manager
+   * @param EntityFieldManager $entity_field_manager
    *   The injected entity field manager.
-   * @param \Drupal\Core\State\State $state
+   * @param State $state
    *   The state service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $loggerFactory
+   * @param LoggerChannelFactory $loggerFactory
    *   The logger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityInheritPluginManager $plugin_manager, EntityTypeManager $entity_type_manager, Messenger $messenger, EntityFieldManager $entity_field_manager, State $state, LoggerChannelFactory $loggerFactory) {
@@ -115,7 +115,7 @@ class EntityInherit {
   /**
    * Get all field names as an array of strings.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldListInterface
+   * @return EntityInheritFieldListInterface
    *   All field names.
    */
   public function allFields() : EntityInheritFieldListInterface {
@@ -203,7 +203,7 @@ class EntityInherit {
   /**
    * Get the Development singleton.
    *
-   * @return \Drupal\entity_inherit\EntityInheritDev\EntityInheritDev
+   * @return EntityInheritDev
    *   The entity factory singleton.
    */
   public function dev() : EntityInheritDev {
@@ -235,7 +235,7 @@ class EntityInherit {
   /**
    * Get the Entity factory.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritEntityFactory
+   * @return EntityInheritEntityFactory
    *   The entity factory singleton.
    */
   public function getEntityFactory() : EntityInheritEntityFactory {
@@ -245,7 +245,7 @@ class EntityInherit {
   /**
    * Get the Entity field manager.
    *
-   * @return \Drupal\Core\Entity\EntityFieldManager
+   * @return EntityFieldManager
    *   The entity field manager.
    */
   public function getEntityFieldManager() : EntityFieldManager {
@@ -255,7 +255,7 @@ class EntityInherit {
   /**
    * Get the Entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManager
+   * @return EntityTypeManager
    *   The entity type manager.
    */
   public function getEntityTypeManager() : EntityTypeManager {
@@ -290,7 +290,7 @@ class EntityInherit {
   /**
    * Get the field value factory.
    *
-   * @return \Drupal\entity_inherit\EntityInheritFieldValue\EntityInheritFieldValueFactory
+   * @return EntityInheritFieldValueFactory
    *   The field value factory singleton.
    */
   public function getFieldValueFactory() : EntityInheritFieldValueFactory {
@@ -300,7 +300,7 @@ class EntityInherit {
   /**
    * Get the Queue singleton.
    *
-   * @return \Drupal\entity_inherit\EntityInheritQueue\EntityInheritQueue
+   * @return EntityInheritQueue
    *   The Queue singleton.
    */
   public function getQueue() : EntityInheritQueue {
@@ -310,7 +310,7 @@ class EntityInherit {
   /**
    * Get the storage manager class.
    *
-   * @return \Drupal\entity_inherit\EntityInheritStorage\EntityInheritStorageInterface
+   * @return EntityInheritStorageInterface
    *   The storage singleton.
    */
   public function getStorage() : EntityInheritStorageInterface {
@@ -325,7 +325,7 @@ class EntityInherit {
    * @param string $bundle
    *   An entity bundle.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldListInterface
+   * @return EntityInheritFieldListInterface
    *   All inheritable fields for a type and bundle.
    */
   public function inheritableFields($type, $bundle) : EntityInheritFieldListInterface {
@@ -401,7 +401,7 @@ class EntityInherit {
   /**
    * Get the EntityInheritFieldFactory singleton.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldFactory
+   * @return EntityInheritFieldFactory
    *   A factory for a list of fields.
    */
   public function fieldFactory() : EntityInheritFieldFactory {
@@ -411,7 +411,7 @@ class EntityInherit {
   /**
    * Get the messenger service.
    *
-   * @return \Drupal\Core\Messenger\Messenger
+   * @return Messenger
    *   The messenger.
    */
   public function getMessenger() : Messenger {
@@ -421,7 +421,7 @@ class EntityInherit {
   /**
    * Get the fields where parents are stored.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldListInterface
+   * @return EntityInheritFieldListInterface
    *   A list of fields where the parent entities are stored.
    */
   public function getParentEntityFields() : EntityInheritFieldListInterface {
@@ -474,7 +474,7 @@ class EntityInherit {
   /**
    * Get the plugin manager service.
    *
-   * @return \Drupal\entity_inherit\EntityInheritPlugin\EntityInheritPluginManager
+   * @return EntityInheritPluginManager
    *   The plugin manager.
    */
   public function getPluginManager() : EntityInheritPluginManager {
@@ -487,7 +487,7 @@ class EntityInherit {
    * See the modules included in the ./modules directory for an example on how
    * to create a plugin.
    *
-   * @return \Drupal\entity_inherit\EntityInheritPlugin\EntityInheritPluginCollection
+   * @return EntityInheritPluginCollection
    *   All plugins.
    *
    * @throws \Exception
@@ -604,7 +604,7 @@ class EntityInherit {
   /**
    * Whether or not a field name is a valid parent field.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $field_name
+   * @param EntityInheritFieldId $field_name
    *   A field name.
    * @param string $category
    *   Arbitrary category which is then managed by plugins. "inheritable" and
@@ -678,10 +678,10 @@ class EntityInherit {
    * This entity can be in the process of creation, i.e. not have an id and
    * not exist in the database.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   A Drupal entity.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritEntitySingleInterface
+   * @return EntityInheritEntitySingleInterface
    *   Our wrapper around a Drupal entity.
    */
   public function wrap(FieldableEntityInterface $entity) : EntityInheritEntitySingleInterface {
@@ -693,10 +693,10 @@ class EntityInherit {
    *
    * This entity must exist in the database.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   A Drupal entity.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritSingleExistingEntityInterface
+   * @return EntityInheritSingleExistingEntityInterface
    *   Our wrapper around a Drupal entity.
    */
   public function wrapExisting(FieldableEntityInterface $entity) : EntityInheritSingleExistingEntityInterface {
diff --git a/src/EntityInheritDev/EntityInheritDev.php b/src/EntityInheritDev/EntityInheritDev.php
index e7b4eb3..ff2204a 100644
--- a/src/EntityInheritDev/EntityInheritDev.php
+++ b/src/EntityInheritDev/EntityInheritDev.php
@@ -17,14 +17,14 @@ class EntityInheritDev {
   /**
    * The EntityInherit singleton (service).
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The application singleton.
    */
   public function __construct(EntityInherit $app) {
@@ -60,7 +60,7 @@ class EntityInheritDev {
   /**
    * Make sure a node's body value is as expected.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $node
+   * @param FieldableEntityInterface $node
    *   A Drupal node.
    * @param string $value
    *   An expected value.
@@ -180,7 +180,7 @@ class EntityInheritDev {
    * @param array $other
    *   Other information to add to the new node.
    *
-   * @return \Drupal\Core\Entity\FieldableEntityInterface
+   * @return FieldableEntityInterface
    *   A resulting entity.
    */
   public function createNode(string $title, string $type, array $parents = [], array $other = []) {
diff --git a/src/EntityInheritEntity/EntityInheritEntity.php b/src/EntityInheritEntity/EntityInheritEntity.php
index cffd5fd..37e7754 100644
--- a/src/EntityInheritEntity/EntityInheritEntity.php
+++ b/src/EntityInheritEntity/EntityInheritEntity.php
@@ -13,7 +13,7 @@ abstract class EntityInheritEntity extends EntityInheritEntityRevision implement
   /**
    * Check if a field should be applied.
    *
-   * @param \Drupal\entity_inherit\EntityInheritFieldValue\EntityInheritSingleFieldValueInterface $field_value
+   * @param EntityInheritSingleFieldValueInterface $field_value
    *   A field value.
    *
    * @return bool
@@ -48,7 +48,7 @@ abstract class EntityInheritEntity extends EntityInheritEntityRevision implement
   /**
    * Set a field value.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $field_id
+   * @param EntityInheritFieldId $field_id
    *   A field id.
    * @param array $value
    *   A field value.
@@ -64,7 +64,7 @@ abstract class EntityInheritEntity extends EntityInheritEntityRevision implement
   /**
    * Update a field based on field values.
    *
-   * @param \Drupal\entity_inherit\EntityInheritFieldValue\EntityInheritSingleFieldValueInterface $field_value
+   * @param EntityInheritSingleFieldValueInterface $field_value
    *   A field value.
    */
   public function updateField(EntityInheritSingleFieldValueInterface $field_value) {
diff --git a/src/EntityInheritEntity/EntityInheritEntityFactory.php b/src/EntityInheritEntity/EntityInheritEntityFactory.php
index 4764d7e..843e3ba 100644
--- a/src/EntityInheritEntity/EntityInheritEntityFactory.php
+++ b/src/EntityInheritEntity/EntityInheritEntityFactory.php
@@ -16,14 +16,14 @@ class EntityInheritEntityFactory {
   /**
    * The EntityInherit singleton (service).
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The application singleton.
    */
   public function __construct(EntityInherit $app) {
@@ -38,10 +38,10 @@ class EntityInheritEntityFactory {
    *   A type, for example "node".
    * @param string $id
    *   An id, for example "1".
-   * @param null|\Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param null|FieldableEntityInterface $entity
    *   The Drupal entity object, or NULL if we don't have it.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritEntitySingleInterface
+   * @return EntityInheritEntitySingleInterface
    *   An entity.
    */
   public function fromTypeIdEntity(string $type, string $id, $entity) : EntityInheritEntitySingleInterface {
@@ -51,10 +51,10 @@ class EntityInheritEntityFactory {
   /**
    * Get an entity from an entity.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   A Drupal entity.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritEntitySingleInterface
+   * @return EntityInheritEntitySingleInterface
    *   An entity.
    */
   public function fromEntity(FieldableEntityInterface $entity) : EntityInheritEntitySingleInterface {
@@ -67,10 +67,10 @@ class EntityInheritEntityFactory {
   /**
    * Get an entity from an existing entity.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   A Drupal entity.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritSingleExistingEntityInterface
+   * @return EntityInheritSingleExistingEntityInterface
    *   An entity.
    */
   public function fromExistingEntity(FieldableEntityInterface $entity) : EntityInheritSingleExistingEntityInterface {
@@ -89,7 +89,7 @@ class EntityInheritEntityFactory {
    * @param array $item
    *   A queueable item.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritSingleExistingEntityInterface
+   * @return EntityInheritSingleExistingEntityInterface
    *   An entity if possible.
    *
    * @throws \Exception
@@ -117,7 +117,7 @@ class EntityInheritEntityFactory {
    * @param array $drupal_entities
    *   An array of Drupal entities.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritExistingMultipleEntitiesInterface
+   * @return EntityInheritExistingMultipleEntitiesInterface
    *   A new collection.
    */
   public function newCollection(array $drupal_entities = []) : EntityInheritExistingMultipleEntitiesInterface {
diff --git a/src/EntityInheritEntity/EntityInheritEntityRevision.php b/src/EntityInheritEntity/EntityInheritEntityRevision.php
index accd368..3b877e6 100644
--- a/src/EntityInheritEntity/EntityInheritEntityRevision.php
+++ b/src/EntityInheritEntity/EntityInheritEntityRevision.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_inherit\EntityInheritEntity;
 
+use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\entity_inherit\EntityInherit;
 use Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId;
@@ -19,14 +20,14 @@ abstract class EntityInheritEntityRevision implements EntityInheritEntityRevisio
   /**
    * The injected app singleton.
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * The Drupal entity.
    *
-   * @var \Drupal\Core\Entity\FieldableEntityInterface
+   * @var FieldableEntityInterface
    */
   protected $drupalEntity;
 
@@ -42,9 +43,9 @@ abstract class EntityInheritEntityRevision implements EntityInheritEntityRevisio
    *
    * @param string $type
    *   The Drupal entity type such as "node".
-   * @param null|\Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param null|FieldableEntityInterface $entity
    *   The Drupal entity object, or NULL if we don't have it.
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The global app.
    */
   public function __construct(string $type, $entity, EntityInherit $app) {
@@ -66,7 +67,7 @@ abstract class EntityInheritEntityRevision implements EntityInheritEntityRevisio
   /**
    * Get the Drupal entity.
    *
-   * @return \Drupal\Core\Entity\FieldableEntityInterface|null
+   * @return FieldableEntityInterface|null
    *   This Drupal entity.
    */
   abstract public function getDrupalEntity();
@@ -94,7 +95,7 @@ abstract class EntityInheritEntityRevision implements EntityInheritEntityRevisio
   /**
    * Retrieve a field object linked to a Drupal entity.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $field_name
+   * @param EntityInheritFieldId $field_name
    *   A field name.
    *
    * @return mixed
@@ -156,7 +157,7 @@ abstract class EntityInheritEntityRevision implements EntityInheritEntityRevisio
   /**
    * Get the original value of a field.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $field_name
+   * @param EntityInheritFieldId $field_name
    *   A field.
    *
    * @return array
diff --git a/src/EntityInheritEntity/EntityInheritEntityRevisionInterface.php b/src/EntityInheritEntity/EntityInheritEntityRevisionInterface.php
index c0b8aa2..3e192ea 100644
--- a/src/EntityInheritEntity/EntityInheritEntityRevisionInterface.php
+++ b/src/EntityInheritEntity/EntityInheritEntityRevisionInterface.php
@@ -13,7 +13,7 @@ interface EntityInheritEntityRevisionInterface {
   /**
    * Get all the entity's parents.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritExistingMultipleEntitiesInterface
+   * @return EntityInheritExistingMultipleEntitiesInterface
    *   All parents.
    */
   public function getMergedParents() : EntityInheritExistingMultipleEntitiesInterface;
@@ -21,7 +21,7 @@ interface EntityInheritEntityRevisionInterface {
   /**
    * Get all our fields which are candidates to be inherited.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldListInterface
+   * @return EntityInheritFieldListInterface
    *   All inheritable fields for a type and bundle.
    */
   public function inheritableFields() : EntityInheritFieldListInterface;
@@ -29,7 +29,7 @@ interface EntityInheritEntityRevisionInterface {
   /**
    * Get a field value as an array.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $field_name
+   * @param EntityInheritFieldId $field_name
    *   A field name.
    *
    * @return array
@@ -52,10 +52,10 @@ interface EntityInheritEntityRevisionInterface {
   /**
    * Get referenced entities.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldListInterface $fields
+   * @param EntityInheritFieldListInterface $fields
    *   A field name.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritExistingMultipleEntitiesInterface
+   * @return EntityInheritExistingMultipleEntitiesInterface
    *   The referenced entities.
    */
   public function referencedEntities(EntityInheritFieldListInterface $fields) : EntityInheritExistingMultipleEntitiesInterface;
diff --git a/src/EntityInheritEntity/EntityInheritEntitySingleInterface.php b/src/EntityInheritEntity/EntityInheritEntitySingleInterface.php
index f92251d..3d0d40a 100644
--- a/src/EntityInheritEntity/EntityInheritEntitySingleInterface.php
+++ b/src/EntityInheritEntity/EntityInheritEntitySingleInterface.php
@@ -20,7 +20,7 @@ interface EntityInheritEntitySingleInterface extends EntityInheritUpdatableEntit
   /**
    * Check if we have a field.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $field
+   * @param EntityInheritFieldId $field
    *   A field name.
    *
    * @return bool
diff --git a/src/EntityInheritEntity/EntityInheritExistingEntity.php b/src/EntityInheritEntity/EntityInheritExistingEntity.php
index 028622b..5befa59 100644
--- a/src/EntityInheritEntity/EntityInheritExistingEntity.php
+++ b/src/EntityInheritEntity/EntityInheritExistingEntity.php
@@ -31,9 +31,9 @@ class EntityInheritExistingEntity extends EntityInheritEntity implements EntityI
    *   The Drupal entity type such as "node".
    * @param string $id
    *   The Drupal entity id such as 1.
-   * @param null|\Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param null|FieldableEntityInterface $entity
    *   The Drupal entity object, or NULL if we don't have it.
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The global app.
    */
   public function __construct(string $type, string $id, $entity, EntityInherit $app) {
@@ -53,7 +53,7 @@ class EntityInheritExistingEntity extends EntityInheritEntity implements EntityI
   /**
    * Get all children of this entity.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritExistingMultipleEntitiesInterface
+   * @return EntityInheritExistingMultipleEntitiesInterface
    *   This entity's children.
    */
   public function children() : EntityInheritExistingMultipleEntitiesInterface {
@@ -112,7 +112,7 @@ class EntityInheritExistingEntity extends EntityInheritEntity implements EntityI
   /**
    * Get the original entity before it was modified on save.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritEntityRevisionInterface
+   * @return EntityInheritEntityRevisionInterface
    *   The original entity.
    */
   public function original() : EntityInheritEntityRevisionInterface {
diff --git a/src/EntityInheritEntity/EntityInheritExistingEntityCollection.php b/src/EntityInheritEntity/EntityInheritExistingEntityCollection.php
index 1dac8ca..ebb322a 100644
--- a/src/EntityInheritEntity/EntityInheritExistingEntityCollection.php
+++ b/src/EntityInheritEntity/EntityInheritExistingEntityCollection.php
@@ -13,7 +13,7 @@ class EntityInheritExistingEntityCollection implements EntityInheritUpdatableEnt
   /**
    * The app singleton.
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
@@ -27,7 +27,7 @@ class EntityInheritExistingEntityCollection implements EntityInheritUpdatableEnt
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The app singleton.
    */
   public function __construct(EntityInherit $app) {
diff --git a/src/EntityInheritEntity/EntityInheritExistingEntityInterface.php b/src/EntityInheritEntity/EntityInheritExistingEntityInterface.php
index 4be5bc9..7af61a9 100644
--- a/src/EntityInheritEntity/EntityInheritExistingEntityInterface.php
+++ b/src/EntityInheritEntity/EntityInheritExistingEntityInterface.php
@@ -12,7 +12,7 @@ interface EntityInheritExistingEntityInterface {
   /**
    * Get all field values along with their previous values.
    *
-   * @return \Drupal\entity_inherit\EntityInheritFieldValue\EntityInheritFieldValueCollectionInterface
+   * @return EntityInheritFieldValueCollectionInterface
    *   Field values.
    */
   public function fieldValues() : EntityInheritFieldValueCollectionInterface;
diff --git a/src/EntityInheritEntity/EntityInheritExistingMultipleEntitiesInterface.php b/src/EntityInheritEntity/EntityInheritExistingMultipleEntitiesInterface.php
index 11b15e3..3732953 100644
--- a/src/EntityInheritEntity/EntityInheritExistingMultipleEntitiesInterface.php
+++ b/src/EntityInheritEntity/EntityInheritExistingMultipleEntitiesInterface.php
@@ -10,7 +10,7 @@ interface EntityInheritExistingMultipleEntitiesInterface extends EntityInheritEx
   /**
    * Add items to the collection.
    *
-   * @param \Drupal\entity_inherit\EntityInheritEntity\EntityInheritExistingEntityInterface $items
+   * @param EntityInheritExistingEntityInterface $items
    *   Items to add.
    */
   public function add(EntityInheritExistingEntityInterface $items);
diff --git a/src/EntityInheritEntity/EntityInheritNewEntity.php b/src/EntityInheritEntity/EntityInheritNewEntity.php
index 49c232d..71c86ea 100644
--- a/src/EntityInheritEntity/EntityInheritNewEntity.php
+++ b/src/EntityInheritEntity/EntityInheritNewEntity.php
@@ -24,9 +24,9 @@ class EntityInheritNewEntity extends EntityInheritEntity {
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   A Drupal entity.
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The global app.
    */
   public function __construct(FieldableEntityInterface $entity, EntityInherit $app) {
diff --git a/src/EntityInheritEntity/EntityInheritOriginalEntity.php b/src/EntityInheritEntity/EntityInheritOriginalEntity.php
index eb35f66..ddd4071 100644
--- a/src/EntityInheritEntity/EntityInheritOriginalEntity.php
+++ b/src/EntityInheritEntity/EntityInheritOriginalEntity.php
@@ -14,9 +14,9 @@ class EntityInheritOriginalEntity extends EntityInheritEntityRevision {
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   A Drupal entity.
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The global app.
    */
   public function __construct(FieldableEntityInterface $entity, EntityInherit $app) {
diff --git a/src/EntityInheritEntity/EntityInheritReadableEntityInterface.php b/src/EntityInheritEntity/EntityInheritReadableEntityInterface.php
index 6322be6..2110929 100644
--- a/src/EntityInheritEntity/EntityInheritReadableEntityInterface.php
+++ b/src/EntityInheritEntity/EntityInheritReadableEntityInterface.php
@@ -12,7 +12,7 @@ interface EntityInheritReadableEntityInterface {
   /**
    * Update this entity based on its parents.
    *
-   * @return \Drupal\entity_inherit\EntityInheritFieldValue\EntityInheritFieldValueCollectionInterface
+   * @return EntityInheritFieldValueCollectionInterface
    *   Field values.
    */
   public function fieldValues() : EntityInheritFieldValueCollectionInterface;
diff --git a/src/EntityInheritField/EntityInheritField.php b/src/EntityInheritField/EntityInheritField.php
index 86bb343..3c43be5 100644
--- a/src/EntityInheritField/EntityInheritField.php
+++ b/src/EntityInheritField/EntityInheritField.php
@@ -12,7 +12,7 @@ class EntityInheritField implements EntityInheritFieldInterface {
   /**
    * The EntityInherit singleton (service).
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
@@ -26,7 +26,7 @@ class EntityInheritField implements EntityInheritFieldInterface {
   /**
    * The field name.
    *
-   * @var \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId
+   * @var EntityInheritFieldId
    */
   protected $fieldName;
 
@@ -40,11 +40,11 @@ class EntityInheritField implements EntityInheritFieldInterface {
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The global app singleton.
    * @param string $entity_type
    *   Each field can only exist on a single entity type such as 'node'.
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $field_name
+   * @param EntityInheritFieldId $field_name
    *   A field name.
    * @param array $field_info
    *   A field info array from Drupal's field map.
diff --git a/src/EntityInheritField/EntityInheritFieldFactory.php b/src/EntityInheritField/EntityInheritFieldFactory.php
index a8fff6b..3aaaa42 100644
--- a/src/EntityInheritField/EntityInheritFieldFactory.php
+++ b/src/EntityInheritField/EntityInheritFieldFactory.php
@@ -15,14 +15,14 @@ class EntityInheritFieldFactory {
   /**
    * The EntityInherit singleton (service).
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The application singleton.
    */
   public function __construct(EntityInherit $app) {
@@ -33,10 +33,10 @@ class EntityInheritFieldFactory {
   /**
    * Get a field from a field id, if possible.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $id
+   * @param EntityInheritFieldId $id
    *   An id such.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldInterface
+   * @return EntityInheritFieldInterface
    *   A field.
    *
    * @throws \Exception
@@ -52,7 +52,7 @@ class EntityInheritFieldFactory {
    *   A field map as retrieved from the Drupal entityFieldManager's
    *   getFieldMap() method.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldListInterface
+   * @return EntityInheritFieldListInterface
    *   A field list.
    */
   public function fromMap(array $map) : EntityInheritFieldListInterface {
diff --git a/src/EntityInheritField/EntityInheritFieldId.php b/src/EntityInheritField/EntityInheritFieldId.php
index 5e44e25..59755cb 100644
--- a/src/EntityInheritField/EntityInheritFieldId.php
+++ b/src/EntityInheritField/EntityInheritFieldId.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_inherit\EntityInheritField;
 
+use Drupal\Core\Entity\FieldableEntityInterface;
 /**
  * Reprensents a Drupal field ID.
  */
@@ -45,7 +46,7 @@ class EntityInheritFieldId {
   /**
    * Get the field name.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface|null $entity
+   * @param FieldableEntityInterface|null $entity
    *   A Drupal entity. Used to confirm that the field is compatible with that
    *   entity. If NULL, then we don't check.
    *
diff --git a/src/EntityInheritField/EntityInheritFieldInterface.php b/src/EntityInheritField/EntityInheritFieldInterface.php
index 54101e1..b08daef 100644
--- a/src/EntityInheritField/EntityInheritFieldInterface.php
+++ b/src/EntityInheritField/EntityInheritFieldInterface.php
@@ -26,7 +26,7 @@ interface EntityInheritFieldInterface {
   /**
    * Get the field name.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId
+   * @return EntityInheritFieldId
    *   The field name.
    */
   public function fieldName() : EntityInheritFieldId;
diff --git a/src/EntityInheritField/EntityInheritFieldListInterface.php b/src/EntityInheritField/EntityInheritFieldListInterface.php
index a1b93f7..2ffcd3c 100644
--- a/src/EntityInheritField/EntityInheritFieldListInterface.php
+++ b/src/EntityInheritField/EntityInheritFieldListInterface.php
@@ -10,7 +10,7 @@ interface EntityInheritFieldListInterface extends \Countable {
   /**
    * Add a field to the array.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritField $field
+   * @param EntityInheritField $field
    *   A field to add.
    */
   public function add(EntityInheritField $field);
@@ -54,7 +54,7 @@ interface EntityInheritFieldListInterface extends \Countable {
    * @param string $id
    *   An id such as node.field_x.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldInterface
+   * @return EntityInheritFieldInterface
    *   A field.
    *
    * @throws \Exception
diff --git a/src/EntityInheritFieldValue/EntityInheritFieldValue.php b/src/EntityInheritFieldValue/EntityInheritFieldValue.php
index d929f7e..3435de8 100644
--- a/src/EntityInheritFieldValue/EntityInheritFieldValue.php
+++ b/src/EntityInheritFieldValue/EntityInheritFieldValue.php
@@ -13,14 +13,14 @@ class EntityInheritFieldValue implements EntityInheritFieldValueInterface, Entit
   /**
    * The app singleton.
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * The field name.
    *
-   * @var \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId
+   * @var EntityInheritFieldId
    */
   protected $fieldName;
 
@@ -41,9 +41,9 @@ class EntityInheritFieldValue implements EntityInheritFieldValueInterface, Entit
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The app singleton.
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $field_name
+   * @param EntityInheritFieldId $field_name
    *   The field name.
    * @param array $value
    *   The new value.
diff --git a/src/EntityInheritFieldValue/EntityInheritFieldValueCollection.php b/src/EntityInheritFieldValue/EntityInheritFieldValueCollection.php
index cd7d410..c5536ba 100644
--- a/src/EntityInheritFieldValue/EntityInheritFieldValueCollection.php
+++ b/src/EntityInheritFieldValue/EntityInheritFieldValueCollection.php
@@ -12,7 +12,7 @@ class EntityInheritFieldValueCollection implements EntityInheritFieldValueCollec
   /**
    * The app singleton.
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
@@ -26,7 +26,7 @@ class EntityInheritFieldValueCollection implements EntityInheritFieldValueCollec
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The app singleton.
    */
   public function __construct(EntityInherit $app) {
diff --git a/src/EntityInheritFieldValue/EntityInheritFieldValueCollectionInterface.php b/src/EntityInheritFieldValue/EntityInheritFieldValueCollectionInterface.php
index cbfe61e..42f12ed 100644
--- a/src/EntityInheritFieldValue/EntityInheritFieldValueCollectionInterface.php
+++ b/src/EntityInheritFieldValue/EntityInheritFieldValueCollectionInterface.php
@@ -10,7 +10,7 @@ interface EntityInheritFieldValueCollectionInterface extends EntityInheritFieldV
   /**
    * Add items to the collection.
    *
-   * @param \Drupal\entity_inherit\EntityInheritFieldValue\EntityInheritFieldValueInterface $items
+   * @param EntityInheritFieldValueInterface $items
    *   Items to add.
    */
   public function add(EntityInheritFieldValueInterface $items);
diff --git a/src/EntityInheritFieldValue/EntityInheritFieldValueFactory.php b/src/EntityInheritFieldValue/EntityInheritFieldValueFactory.php
index ae0aa94..1d7373f 100644
--- a/src/EntityInheritFieldValue/EntityInheritFieldValueFactory.php
+++ b/src/EntityInheritFieldValue/EntityInheritFieldValueFactory.php
@@ -16,14 +16,14 @@ class EntityInheritFieldValueFactory {
   /**
    * The EntityInherit singleton (service).
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The application singleton.
    */
   public function __construct(EntityInherit $app) {
@@ -34,7 +34,7 @@ class EntityInheritFieldValueFactory {
   /**
    * Get a new collection.
    *
-   * @return \Drupal\entity_inherit\EntityInheritFieldValue\EntityInheritFieldValueCollectionInterface
+   * @return EntityInheritFieldValueCollectionInterface
    *   A new collection.
    */
   public function newCollection() : EntityInheritFieldValueCollectionInterface {
@@ -44,14 +44,14 @@ class EntityInheritFieldValueFactory {
   /**
    * Get a new field value.
    *
-   * @param \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId $field_name
+   * @param EntityInheritFieldId $field_name
    *   The field name.
    * @param array $value
    *   The new value.
    * @param array $previous
    *   The previous value.
    *
-   * @return \Drupal\entity_inherit\EntityInheritFieldValue\EntityInheritFieldValueInterface
+   * @return EntityInheritFieldValueInterface
    *   A new field value object.
    */
   public function newFieldValue(EntityInheritFieldId $field_name, array $value, array $previous) : EntityInheritFieldValueInterface {
diff --git a/src/EntityInheritFieldValue/EntityInheritSingleFieldValueInterface.php b/src/EntityInheritFieldValue/EntityInheritSingleFieldValueInterface.php
index 238a7c2..3c10a69 100644
--- a/src/EntityInheritFieldValue/EntityInheritSingleFieldValueInterface.php
+++ b/src/EntityInheritFieldValue/EntityInheritSingleFieldValueInterface.php
@@ -20,7 +20,7 @@ interface EntityInheritSingleFieldValueInterface {
   /**
    * Get the field name.
    *
-   * @return \Drupal\entity_inherit\EntityInheritField\EntityInheritFieldId
+   * @return EntityInheritFieldId
    *   The field id.
    */
   public function fieldName() : EntityInheritFieldId;
diff --git a/src/EntityInheritPlugin/EntityInheritPluginCollection.php b/src/EntityInheritPlugin/EntityInheritPluginCollection.php
index 92adc71..fc298e5 100644
--- a/src/EntityInheritPlugin/EntityInheritPluginCollection.php
+++ b/src/EntityInheritPlugin/EntityInheritPluginCollection.php
@@ -17,14 +17,14 @@ class EntityInheritPluginCollection implements EntityInheritPluginInterface, \Co
   /**
    * The global app.
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * Constructs a new WWatchdogPluginCollection object.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The injected global app.
    */
   public function __construct(EntityInherit $app) {
@@ -99,7 +99,7 @@ class EntityInheritPluginCollection implements EntityInheritPluginInterface, \Co
   /**
    * Get the injected global app.
    *
-   * @return \Drupal\entity_inherit\EntityInherit
+   * @return EntityInherit
    *   The global app.
    */
   public function getApp() : EntityInherit {
diff --git a/src/EntityInheritPlugin/EntityInheritPluginInterface.php b/src/EntityInheritPlugin/EntityInheritPluginInterface.php
index 53715f1..2cb97ba 100644
--- a/src/EntityInheritPlugin/EntityInheritPluginInterface.php
+++ b/src/EntityInheritPlugin/EntityInheritPluginInterface.php
@@ -16,7 +16,7 @@ interface EntityInheritPluginInterface {
    * @param array $field_names
    *   An array of field names which can be modified. The values are field names
    *   such as node.field_x or node.body or paragraph.field_x.
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The app singleton.
    */
   public function alterFields(array &$field_names, EntityInherit $app);
@@ -33,7 +33,7 @@ interface EntityInheritPluginInterface {
    * @param string $category
    *   Arbitrary category which is then managed by plugins. "inheritable" and
    *   "parent" can be used.
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The app singleton.
    */
   public function filterFields(array &$field_names, array $original, string $category, EntityInherit $app);
@@ -41,9 +41,9 @@ interface EntityInheritPluginInterface {
   /**
    * Act on an entity being saved.
    *
-   * @param \Drupal\entity_inherit\EntityInheritEntity\EntityInheritEntitySingleInterface $entity
+   * @param EntityInheritEntitySingleInterface $entity
    *   An entity being presaved.
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The app singleton.
    */
   public function presave(EntityInheritEntitySingleInterface $entity, EntityInherit $app);
diff --git a/src/EntityInheritPlugin/EntityInheritPluginManager.php b/src/EntityInheritPlugin/EntityInheritPluginManager.php
index dd940e7..b9f6d4c 100644
--- a/src/EntityInheritPlugin/EntityInheritPluginManager.php
+++ b/src/EntityInheritPlugin/EntityInheritPluginManager.php
@@ -15,16 +15,15 @@ use Drupal\entity_inherit\Annotation\EntityInheritPluginAnnotation;
 // @phpstan-ignore-next-line
 class EntityInheritPluginManager extends DefaultPluginManager {
 // @codingStandardsIgnoreEnd
-
   /**
    * Creates the discovery object.
    *
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   // See https://github.com/mglaman/phpstan-drupal/issues/112
diff --git a/src/EntityInheritQueue/EntityInheritQueue.php b/src/EntityInheritQueue/EntityInheritQueue.php
index 503438d..c05ca43 100644
--- a/src/EntityInheritQueue/EntityInheritQueue.php
+++ b/src/EntityInheritQueue/EntityInheritQueue.php
@@ -24,14 +24,14 @@ class EntityInheritQueue implements \Countable {
   /**
    * The EntityInherit singleton (service).
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The application singleton.
    */
   public function __construct(EntityInherit $app) {
diff --git a/src/EntityInheritQueue/EntityInheritQueueProcessor.php b/src/EntityInheritQueue/EntityInheritQueueProcessor.php
index e823e32..d82bbbc 100644
--- a/src/EntityInheritQueue/EntityInheritQueueProcessor.php
+++ b/src/EntityInheritQueue/EntityInheritQueueProcessor.php
@@ -10,14 +10,14 @@ abstract class EntityInheritQueueProcessor implements EntityInheritQueueProcesso
   /**
    * The queue.
    *
-   * @var \Drupal\entity_inherit\EntityInheritQueue\EntityInheritQueue
+   * @var EntityInheritQueue
    */
   protected $queue;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInheritQueue\EntityInheritQueue $queue
+   * @param EntityInheritQueue $queue
    *   The queue.
    */
   public function __construct(EntityInheritQueue $queue) {
diff --git a/src/EntityInheritQueue/EntityInheritQueueProcessorFactory.php b/src/EntityInheritQueue/EntityInheritQueueProcessorFactory.php
index e744c52..e8ffd64 100644
--- a/src/EntityInheritQueue/EntityInheritQueueProcessorFactory.php
+++ b/src/EntityInheritQueue/EntityInheritQueueProcessorFactory.php
@@ -15,14 +15,14 @@ class EntityInheritQueueProcessorFactory {
   /**
    * The EntityInherit singleton (service).
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The application singleton.
    */
   public function __construct(EntityInherit $app) {
@@ -33,10 +33,10 @@ class EntityInheritQueueProcessorFactory {
   /**
    * Obtain an appropriate processor.
    *
-   * @param \Drupal\entity_inherit\EntityInheritQueue\EntityInheritQueue $queue
+   * @param EntityInheritQueue $queue
    *   The queue.
    *
-   * @return \Drupal\entity_inherit\EntityInheritQueue\EntityInheritQueueProcessorInterface
+   * @return EntityInheritQueueProcessorInterface
    *   A processor.
    */
   public function processor(EntityInheritQueue $queue) : EntityInheritQueueProcessorInterface {
diff --git a/src/EntityInheritStorage/EntityInheritStorage.php b/src/EntityInheritStorage/EntityInheritStorage.php
index f872200..f4d1b64 100644
--- a/src/EntityInheritStorage/EntityInheritStorage.php
+++ b/src/EntityInheritStorage/EntityInheritStorage.php
@@ -16,14 +16,14 @@ class EntityInheritStorage implements EntityInheritStorageInterface {
   /**
    * The app singleton.
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The app singleton.
    */
   public function __construct(EntityInherit $app) {
diff --git a/src/EntityInheritStorage/EntityInheritStorageInterface.php b/src/EntityInheritStorage/EntityInheritStorageInterface.php
index a2b0642..5a05828 100644
--- a/src/EntityInheritStorage/EntityInheritStorageInterface.php
+++ b/src/EntityInheritStorage/EntityInheritStorageInterface.php
@@ -17,7 +17,7 @@ interface EntityInheritStorageInterface {
    * @param string $id
    *   The parent entity id.
    *
-   * @return \Drupal\entity_inherit\EntityInheritEntity\EntityInheritExistingMultipleEntitiesInterface
+   * @return EntityInheritExistingMultipleEntitiesInterface
    *   The child entities.
    */
   public function getChildrenOf(string $type, string $id) : EntityInheritExistingMultipleEntitiesInterface;
diff --git a/src/Form/EntityInheritAdminForm.php b/src/Form/EntityInheritAdminForm.php
index 8c32e51..ae13327 100644
--- a/src/Form/EntityInheritAdminForm.php
+++ b/src/Form/EntityInheritAdminForm.php
@@ -15,14 +15,14 @@ class EntityInheritAdminForm extends FormBase {
   /**
    * The EntityInherit singleton (service).
    *
-   * @var \Drupal\entity_inherit\EntityInherit
+   * @var EntityInherit
    */
   protected $app;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\entity_inherit\EntityInherit $app
+   * @param EntityInherit $app
    *   The EntityInherit singleton (service).
    */
   final public function __construct(EntityInherit $app) {
diff --git a/tests/src/Unit/EntityInheritTestBase.php b/tests/src/Unit/EntityInheritTestBase.php
index f89f315..de12854 100644
--- a/tests/src/Unit/EntityInheritTestBase.php
+++ b/tests/src/Unit/EntityInheritTestBase.php
@@ -15,7 +15,7 @@ class EntityInheritTestBase extends TestCase {
   /**
    * Get dummy (mock) app.
    *
-   * @return \Drupal\entity_inherit\EntityInherit
+   * @return EntityInherit
    *   A dummy (mock) app.
    */
   public function mockApp() : EntityInherit {
