diff --git a/modules/outline_graphql/src/Wrappers/QueryConnection.php b/modules/outline_graphql/src/Wrappers/QueryConnection.php
index 4851e89..d34531b 100644
--- a/modules/outline_graphql/src/Wrappers/QueryConnection.php
+++ b/modules/outline_graphql/src/Wrappers/QueryConnection.php
@@ -2,20 +2,21 @@
 
 namespace Drupal\outline_graphql\Wrappers;
 
+use Drupal\Core\Entity\Query\Sql\Query;
 use Drupal\Core\Entity\Query\QueryInterface;
 use GraphQL\Deferred;
 
 class QueryConnection {
 
   /**
-   * @var \Drupal\Core\Entity\Query\Sql\Query
+   * @var Query
    */
   protected $query;
 
   /**
    * QueryConnection constructor.
    *
-   * @param \Drupal\Core\Entity\Query\QueryInterface $query
+   * @param QueryInterface $query
    */
   public function __construct(QueryInterface $query) {
     $this->query = $query;
diff --git a/modules/outline_graphql/src/Wrappers/RootEntryConnection.php b/modules/outline_graphql/src/Wrappers/RootEntryConnection.php
index 177d243..fd4697a 100644
--- a/modules/outline_graphql/src/Wrappers/RootEntryConnection.php
+++ b/modules/outline_graphql/src/Wrappers/RootEntryConnection.php
@@ -2,20 +2,21 @@
 
 namespace Drupal\outline_graphql\Wrappers;
 
+use Drupal\Core\Entity\Query\Sql\Query;
 use Drupal\Core\Entity\Query\QueryInterface;
 use GraphQL\Deferred;
 
 class RootEntryConnection {
 
   /**
-   * @var \Drupal\Core\Entity\Query\Sql\Query
+   * @var Query
    */
   protected $query;
 
   /**
    * QueryConnection constructor.
    *
-   * @param \Drupal\Core\Entity\Query\QueryInterface $query
+   * @param QueryInterface $query
    */
   public function __construct(QueryInterface $query) {
     $this->query = $query;
diff --git a/outline.module b/outline.module
index d4470f6..8773aa7 100755
--- a/outline.module
+++ b/outline.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityMalformedException;
 /**
  * @file
  * Organize entities in an outline.
@@ -40,7 +41,7 @@ function outline_entry_uri($entry) {
 /**
  * Implements hook_page_attachments_alter().
  *
- * @throws \Drupal\Core\Entity\EntityMalformedException
+ * @throws EntityMalformedException
  */
 function outline_page_attachments_alter(array &$page) {
   $route_match = \Drupal::routeMatch();
@@ -92,7 +93,7 @@ function outline_theme() {
 /**
  * Generates an array which displays an entry detail page.
  *
- * @param \Drupal\outline\Entity\Entry $entry
+ * @param Entry $entry
  *   An outline entry object.
  * @param string $view_mode
  *   View mode; e.g., 'full', 'teaser', etc.
@@ -104,7 +105,7 @@ function outline_theme() {
  *   A $page element suitable for use by drupal_render().
  */
 function outline_entry_view(Entry $entry, $view_mode = 'full', $langcode = NULL) {
-  return entity_view($entry, $view_mode, $langcode);
+  return \Drupal::entityTypeManager()->getViewBuilder($entry->getEntityTypeId())->view($entry, $view_mode, $langcode);
 }
 
 /**
@@ -132,7 +133,7 @@ function outline_entry_view(Entry $entry, $view_mode = 'full', $langcode = NULL)
 function outline_theme_suggestions_outline_entry(array $variables) {
   $suggestions = array();
 
-  /** @var \Drupal\outline\EntryInterface $entry */
+  /** @var EntryInterface $entry */
   $entry = $variables['elements']['#outline_entry'];
 
   $suggestions[] = 'outline_entry__' . $entry->bundle();
@@ -155,12 +156,12 @@ function outline_theme_suggestions_outline_entry(array $variables) {
  *       'full' or 'teaser'.
  *   - attributes: HTML attributes for the containing element.
  *
- * @throws \Drupal\Core\Entity\EntityMalformedException
+ * @throws EntityMalformedException
  */
 function template_preprocess_outline_entry(&$variables) {
   $variables['view_mode'] = $variables['elements']['#view_mode'];
   $variables['outline_entry'] = $variables['elements']['#outline_entry'];
-  /** @var \Drupal\outline\EntryInterface $entry */
+  /** @var EntryInterface $entry */
   $entry = $variables['outline_entry'];
 
   $variables['url'] = $entry->toUrl();
@@ -179,7 +180,7 @@ function template_preprocess_outline_entry(&$variables) {
 /**
  * Returns whether the current page is the page of the passed-in entry.
  *
- * @param \Drupal\outline\Entity\Entry $entry
+ * @param Entry $entry
  *   An outline entry entity.
  */
 function outline_entry_is_page(Entry $entry) {
@@ -311,7 +312,7 @@ function outline_load_multiple(array $oids = NULL) {
  * @param int $oid
  *   The outline's ID.
  *
- * @return \Drupal\outline\Entity\Outline|null
+ * @return Outline|null
  *   The outline outline entity, if exists, NULL otherwise. Results are
  *   statically cached.
  */
@@ -328,7 +329,7 @@ function outline_load($oid) {
  * @param $eid
  *   An entry's ID
  *
- * @return \Drupal\outline\Entity\Entry|null
+ * @return Entry|null
  *   An outline entry entity, or NULL if the entry was not found. Results are
  *   statically cached.
  */
@@ -362,7 +363,7 @@ function outline_implode_tags($tags, $oid = NULL) {
 /**
  * Title callback for entry pages.
  *
- * @param \Drupal\outline\Entity\Entry $entry
+ * @param Entry $entry
  *   An outline entry entity.
  *
  * @return
diff --git a/outline.theme.inc b/outline.theme.inc
index 1a553ec..94cec4a 100755
--- a/outline.theme.inc
+++ b/outline.theme.inc
@@ -24,7 +24,7 @@ use Drupal\Component\Utility\Html;
 //  $variables['attributes']['class'][] = 'outline';
 //
 //}
-  
+
   //kint($outline_tree);
   //$variables['attributes']['class'][] = Html::getClass('outline-' . $outline->bundle());
 //   if (!$outline->isPublished()) {
diff --git a/src/Controller/OutlineController.php b/src/Controller/OutlineController.php
index 16a9b8e..bead91e 100755
--- a/src/Controller/OutlineController.php
+++ b/src/Controller/OutlineController.php
@@ -20,7 +20,7 @@ class OutlineController extends ControllerBase {
   /**
    * Returns a form to add a new entry to an outline.
    *
-   * @param \Drupal\outline\OutlineInterface $outline
+   * @param OutlineInterface $outline
    *          The outline this entry will be added to.
    *
    * @return array The entry add form.
@@ -37,7 +37,7 @@ class OutlineController extends ControllerBase {
   /**
    * Route outline title callback.
    *
-   * @param \Drupal\outline\OutlineInterface $outline
+   * @param OutlineInterface $outline
    *          The outline.
    *
    * @return string The outline label as a render array.
@@ -52,7 +52,7 @@ class OutlineController extends ControllerBase {
   /**
    * Route entry title callback.
    *
-   * @param \Drupal\outline\EntryInterface $entry
+   * @param EntryInterface $entry
    *          The outline entry.
    *
    * @return array The entry label as a render array.
diff --git a/src/EntryBreadcrumbBuilder.php b/src/EntryBreadcrumbBuilder.php
index fb5f6d2..47a0bd6 100755
--- a/src/EntryBreadcrumbBuilder.php
+++ b/src/EntryBreadcrumbBuilder.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\outline;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Breadcrumb\BreadcrumbBuilderInterface;
 use Drupal\Core\Breadcrumb\Breadcrumb;
 use Drupal\Core\Entity\EntityManagerInterface;
@@ -26,17 +28,17 @@ class EntryBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * The outline entry storage.
    *
-   * @var \Drupal\outline\EntryStorageInterface
+   * @var EntryStorageInterface
    */
   protected $entryStorage;
 
   /**
    * Constructs the EntryBreadcrumbBuilder.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
     $this->entityManager = $entityTypeManager;
diff --git a/src/EntryInterface.php b/src/EntryInterface.php
index 3a76d68..1ae9e7b 100755
--- a/src/EntryInterface.php
+++ b/src/EntryInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\outline;
 
+use Drupal\outline\Entity\Outline;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
 
@@ -133,7 +134,7 @@ interface EntryInterface extends ContentEntityInterface, EntityChangedInterface
   /**
    * Get the outline this entry belongs to.
    *
-   * @return \Drupal\outline\Entity\Outline
+   * @return Outline
    *   The outline.
    */
   public function getOutline();
diff --git a/src/EntryStorageInterface.php b/src/EntryStorageInterface.php
index 911f5ee..a663b7f 100755
--- a/src/EntryStorageInterface.php
+++ b/src/EntryStorageInterface.php
@@ -17,7 +17,7 @@ interface EntryStorageInterface extends ContentEntityStorageInterface {
    * @param string $oid
    *   An optional outline ID to restrict the child search.
    *
-   * @return \Drupal\outline\EntryInterface[]
+   * @return EntryInterface[]
    *   An array of entry objects that are the children of the entry $eid.
    */
   public function loadChildren($eid, $oid = NULL);
@@ -39,7 +39,7 @@ interface EntryStorageInterface extends ContentEntityStorageInterface {
    *   table to save execution time and memory consumption when listing large
    *   numbers of entries. Defaults to FALSE.
    *
-   * @return object[]|\Drupal\outline\EntryInterface[]
+   * @return object[]|EntryInterface[]
    *   An array of entry objects that are the children of the outline $oid.
    */
   public function loadTree($oid, $parent = 0, $max_depth = NULL, $load_entities = FALSE);
diff --git a/src/OutlineForm.php b/src/OutlineForm.php
index 5ae9faa..7e5f5ea 100755
--- a/src/OutlineForm.php
+++ b/src/OutlineForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\outline;
 
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\BundleEntityFormBase;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -19,14 +21,14 @@ class OutlineForm extends BundleEntityFormBase {
   /**
    * The outline storage.
    *
-   * @var \Drupal\outline\OutlineStorageInterface.
+   * @var OutlineStorageInterface .
    */
   protected $outlineStorage;
 
   /**
    * Constructs a new outline form.
    *
-   * @param \Drupal\outline\OutlineStorageInterface $outline_storage
+   * @param OutlineStorageInterface $outline_storage
    *   The outline storage.
    */
   public function __construct(OutlineStorageInterface $outline_storage) {
@@ -125,7 +127,7 @@ class OutlineForm extends BundleEntityFormBase {
 
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Core\Entity\EntityMalformedException|\Drupal\Core\Entity\EntityStorageException
+   * @throws EntityMalformedException|EntityStorageException
    */
   public
   function save(array $form, FormStateInterface $form_state) {
diff --git a/src/OutlineInterface.php b/src/OutlineInterface.php
index 5ca8b3f..d2f9795 100755
--- a/src/OutlineInterface.php
+++ b/src/OutlineInterface.php
@@ -92,7 +92,7 @@ interface OutlineInterface extends ConfigEntityInterface {
   /**
    * Returns the root entry.
    *
-   * @return \Drupal\outline\EntryInterface
+   * @return EntryInterface
    *   The root entry.
    */
   public function getRootEntry();
diff --git a/src/OutlinePermissions.php b/src/OutlinePermissions.php
index d4ceaf7..f7b6251 100755
--- a/src/OutlinePermissions.php
+++ b/src/OutlinePermissions.php
@@ -20,7 +20,7 @@ class OutlinePermissions implements ContainerInjectionInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
diff --git a/src/Plugin/Field/FieldFormatter/EntityReferenceOutlineEntryRssFormatter.php b/src/Plugin/Field/FieldFormatter/EntityReferenceOutlineEntryRssFormatter.php
index cbaf4f7..a189847 100755
--- a/src/Plugin/Field/FieldFormatter/EntityReferenceOutlineEntryRssFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/EntityReferenceOutlineEntryRssFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\outline\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Url;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\Plugin\Field\FieldFormatter\EntityReferenceFormatterBase;
@@ -32,7 +33,7 @@ class EntityReferenceOutlineEntryRssFormatter extends EntityReferenceFormatterBa
         'key' => 'category',
         'value' => $entity->label(),
         'attributes' => array(
-          'domain' => $entity->id() ? \Drupal::url('entity.outline_entry.canonical', ['outline_entry' => $entity->id()], array('absolute' => TRUE)) : '',
+          'domain' => $entity->id() ? Url::fromRoute('entity.outline_entry.canonical', ['outline_entry' => $entity->id()], array('absolute' => TRUE))->toString() : '',
         ),
       );
     }
diff --git a/tests/modules/outline_crud/outline_crud.module b/tests/modules/outline_crud/outline_crud.module
index 17f2c81..4c83c1a 100644
--- a/tests/modules/outline_crud/outline_crud.module
+++ b/tests/modules/outline_crud/outline_crud.module
@@ -10,7 +10,7 @@ use Drupal\outline\OutlineInterface;
 /**
  * Implements hook_ENTITY_TYPE_presave() for outline entities.
  *
- * @param \Drupal\outline\OutlineInterface $outline
+ * @param OutlineInterface $outline
  */
 function outline_crud_outline_presave(OutlineInterface $outline) {
   $outline->setThirdPartySetting('outline_crud', 'foo', 'bar');
diff --git a/tests/modules/outline_entry_display_configurable_test/outline_term_display_configurable_test.module b/tests/modules/outline_entry_display_configurable_test/outline_term_display_configurable_test.module
index 6e555d4..d8d2056 100644
--- a/tests/modules/outline_entry_display_configurable_test/outline_term_display_configurable_test.module
+++ b/tests/modules/outline_entry_display_configurable_test/outline_term_display_configurable_test.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Field\BaseFieldDefinition;
 /**
  * @file
  * A module for testing making outline_entry base fields' displays
@@ -12,11 +13,11 @@ use Drupal\Core\Entity\EntityTypeInterface;
  * Implements hook_entity_base_field_info_alter().
  *
  * @param $base_field_definitions
- * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+ * @param EntityTypeInterface $entity_type
  */
 function outline_entry_display_configurable_test_entity_base_field_info_alter(&$base_field_definitions, EntityTypeInterface $entity_type) {
   if ($entity_type->id() === 'outline_entry') {
-    /** @var \Drupal\Core\Field\BaseFieldDefinition[] $base_field_definitions */
+    /** @var BaseFieldDefinition[] $base_field_definitions */
     $base_field_definitions['name']->setDisplayConfigurable('view', TRUE);
   }
 }
diff --git a/tests/modules/outline_serialization_test/src/OutlineResponse.php b/tests/modules/outline_serialization_test/src/OutlineResponse.php
index cdc98cf..d1db006 100644
--- a/tests/modules/outline_serialization_test/src/OutlineResponse.php
+++ b/tests/modules/outline_serialization_test/src/OutlineResponse.php
@@ -8,7 +8,7 @@ use Drupal\outline\OutlineInterface;
 class OutlineResponse extends CacheableResponse {
 
   /**
-   * @var \Drupal\outline\OutlineInterface
+   * @var OutlineInterface
    */
   protected $outline;
 
diff --git a/tests/src/Functional/EntryAccessTest.php b/tests/src/Functional/EntryAccessTest.php
index a22e4c9..b061def 100644
--- a/tests/src/Functional/EntryAccessTest.php
+++ b/tests/src/Functional/EntryAccessTest.php
@@ -108,7 +108,7 @@ class EntryAccessTest extends OutlineTestBase {
   /**
    * Checks access on outline entry.
    *
-   * @param \Drupal\outline\EntryInterface $entry
+   * @param EntryInterface $entry
    *   A outline entry entity.
    * @param $access_operation
    *   The entity operation, e.g. 'view', 'edit', 'delete', etc.
diff --git a/tests/src/Functional/EntryAutocompleteTest.php b/tests/src/Functional/EntryAutocompleteTest.php
index 4062e7b..7162324 100644
--- a/tests/src/Functional/EntryAutocompleteTest.php
+++ b/tests/src/Functional/EntryAutocompleteTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\outline\Functional;
 
+use Drupal\outline\Entity\Outline;
+use Drupal\user\Entity\User;
+use Drupal\Core\Url;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
@@ -31,7 +34,7 @@ class EntryAutocompleteTest extends OutlineTestBase {
   /**
    * The outline.
    *
-   * @var \Drupal\outline\Entity\Outline
+   * @var Outline
    */
   protected $outline;
 
@@ -45,7 +48,7 @@ class EntryAutocompleteTest extends OutlineTestBase {
   /**
    * The admin user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $adminUser;
 
@@ -146,7 +149,7 @@ class EntryAutocompleteTest extends OutlineTestBase {
   /**
    * Helper function for JSON formatted requests.
    *
-   * @param string|\Drupal\Core\Url $path
+   * @param string|Url $path
    *   Drupal path or URL to load into Mink controlled browser.
    * @param array $options
    *   (optional) Options to be forwarded to the url generator.
@@ -228,7 +231,7 @@ class EntryAutocompleteTest extends OutlineTestBase {
       ['query' => ['q' => 'bbb']]
     );
 
-    $this->assertIdentical($expected, $data);
+    $this->assertSame($expected, $data);
   }
 
 }
