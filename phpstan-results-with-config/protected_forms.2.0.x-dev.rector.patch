diff --git a/src/Form/ProtectedFormsForm.php b/src/Form/ProtectedFormsForm.php
index 2fc7998..6881fd0 100644
--- a/src/Form/ProtectedFormsForm.php
+++ b/src/Form/ProtectedFormsForm.php
@@ -16,7 +16,7 @@ class ProtectedFormsForm extends ConfigFormBase {
   /**
    * Protected $moduleHandler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -33,9 +33,9 @@ class ProtectedFormsForm extends ConfigFormBase {
   /**
    * ProtectedFormsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The moduler handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $moduleHandler) {
diff --git a/tests/src/Functional/ProtectedFormsTest.php b/tests/src/Functional/ProtectedFormsTest.php
index 1970a72..6f5d89b 100644
--- a/tests/src/Functional/ProtectedFormsTest.php
+++ b/tests/src/Functional/ProtectedFormsTest.php
@@ -68,10 +68,11 @@ class ProtectedFormsTest extends BrowserTestBase {
     $input = [
       'edit-comment-body-0-value' => $inputString,
     ];
-    $this->drupalPostForm('node/1', $input, $this->t('Save'));
+    $this->drupalGet('node/1');
+    $this->submitForm($input, $this->t('Save'));
 
     // Ensure we get a 200 response.
-    $this->assertResponse(Response::HTTP_OK);
+    $this->assertSession()->statusCodeEquals(Response::HTTP_OK);
 
     // Ensure the rejected message is displayed.
     $message = $this->config('protected_forms.settings')->get('protected_forms.reject_message');
@@ -82,10 +83,11 @@ class ProtectedFormsTest extends BrowserTestBase {
     $input = [
       'edit-comment-body-0-value' => 'a normal comment',
     ];
-    $this->drupalPostForm('node/1', $input, $this->t('Save'));
+    $this->drupalGet('node/1');
+    $this->submitForm($input, $this->t('Save'));
 
     // Ensure we get a 200 response.
-    $this->assertResponse(Response::HTTP_OK);
+    $this->assertSession()->statusCodeEquals(Response::HTTP_OK);
 
     // Ensure our normal post was posted.
     $this->assertSession()->responseContains('Your comment has been posted.');
