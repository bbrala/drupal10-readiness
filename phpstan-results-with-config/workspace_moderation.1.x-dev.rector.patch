diff --git a/src/WorkspaceModerationListBuilder.php b/src/WorkspaceModerationListBuilder.php
index 385305e..7232a19 100755
--- a/src/WorkspaceModerationListBuilder.php
+++ b/src/WorkspaceModerationListBuilder.php
@@ -2,13 +2,14 @@
 
 namespace Drupal\workspace_moderation;
 
+use Drupal\workspaces\WorkspaceInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\workspaces\WorkspaceListBuilder;
 
 class WorkspaceModerationListBuilder extends WorkspaceListBuilder {
 
   /**
-   * @var \Drupal\workspace_moderation\WorkspaceModerationManagerInterface
+   * @var WorkspaceModerationManagerInterface
    */
   protected $workspaceManager;
 
@@ -16,7 +17,7 @@ class WorkspaceModerationListBuilder extends WorkspaceListBuilder {
     $build = EntityListBuilder::render();
     $rows = &$build['table']['#rows'];
     $activeWorkspace = $this->workspaceManager->getActiveWorkspace();
-    /** @var \Drupal\workspaces\WorkspaceInterface $parentWorkspace */
+    /** @var WorkspaceInterface $parentWorkspace */
     $parentWorkspace =
       $this->workspaceManager->isShadowWorkspace($activeWorkspace)
       ? $activeWorkspace->parent->entity : NULL;
diff --git a/src/WorkspaceModerationManager.php b/src/WorkspaceModerationManager.php
index d639b4a..dcce84a 100755
--- a/src/WorkspaceModerationManager.php
+++ b/src/WorkspaceModerationManager.php
@@ -15,7 +15,7 @@ class WorkspaceModerationManager implements WorkspaceModerationManagerInterface
   /**
    * The underlying manager service.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspacesManager;
 
@@ -24,9 +24,9 @@ class WorkspaceModerationManager implements WorkspaceModerationManagerInterface
   /**
    * WorkspacesModerationManager constructor.
    *
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspaceManager
+   * @param WorkspaceManagerInterface $workspaceManager
    *   The underlying manager service.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    */
   public function __construct(WorkspaceManagerInterface $workspaceManager, AccountInterface $currentUser) {
     $this->workspacesManager = $workspaceManager;
diff --git a/tests/src/Kernel/WorkspaceModerationIntegrationTest.php b/tests/src/Kernel/WorkspaceModerationIntegrationTest.php
index 64e0548..8ad1a92 100755
--- a/tests/src/Kernel/WorkspaceModerationIntegrationTest.php
+++ b/tests/src/Kernel/WorkspaceModerationIntegrationTest.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\Tests\workspace_moderation\Kernel;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\node\NodeStorageInterface;
+use Drupal\workspace_moderation\WorkspaceModerationManagerInterface;
+use Drupal\node\NodeInterface;
+use Drupal\user\Entity\User;
+use Drupal\workspaces\WorkspaceInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\content_moderation\Traits\ContentModerationTestTrait;
 use Drupal\Tests\node\Traits\ContentTypeCreationTrait;
@@ -26,42 +32,42 @@ class WorkspaceModerationIntegrationTest extends KernelTestBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The node storage.
    *
-   * @var \Drupal\node\NodeStorageInterface
+   * @var NodeStorageInterface
    */
   protected $nodeStorage;
 
   /**
    * The workspaces moderation manager service.
    *
-   * @var \Drupal\workspace_moderation\WorkspaceModerationManagerInterface
+   * @var WorkspaceModerationManagerInterface
    */
   protected $workspaceModerationManager;
 
   /**
    * The checked node.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
   /**
    * The workspace moderator account.
    *
-   * @var \Drupal\user\Entity\User|false
+   * @var User|false
    */
   protected $workspaceModerator;
 
   /**
    * An account that can see the workspace content.
    *
-   * @var \Drupal\user\Entity\User|false
+   * @var User|false
    */
   protected $workspaceViewer;
 
@@ -79,7 +85,7 @@ class WorkspaceModerationIntegrationTest extends KernelTestBase {
     'workspace_moderation',
   ];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->entityTypeManager = \Drupal::entityTypeManager();
@@ -221,7 +227,7 @@ class WorkspaceModerationIntegrationTest extends KernelTestBase {
     // core workspace manager.
     $this->workspaceModerationManager->switchToLive();
 
-    /** @var \Drupal\workspaces\WorkspaceInterface $workspace */
+    /** @var WorkspaceInterface $workspace */
     $workspace = Workspace::load($id);
     $this->workspaceModerationManager->setActiveWorkspace($workspace);
     $this->reloadNode();
diff --git a/workspace_moderation.module b/workspace_moderation.module
index 314a42a..42d2f9b 100755
--- a/workspace_moderation.module
+++ b/workspace_moderation.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\workspace_moderation\WorkspaceModerationManagerInterface;
+use Drupal\content_moderation\ModerationInformationInterface;
+use Drupal\workspaces\WorkspaceAssociationInterface;
+use Drupal\Core\Entity\ContentEntityStorageInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\workspaces\WorkspaceInterface;
@@ -16,7 +20,7 @@ function workspace_moderation_entity_type_alter(array &$entity_types) {
  * Implements hook_entity_preload().
  */
 function workspace_moderation_workspace_update(WorkspaceInterface $workspace) {
-  /** @var \Drupal\workspace_moderation\WorkspaceModerationManagerInterface $workspacesModerationManager */
+  /** @var WorkspaceModerationManagerInterface $workspacesModerationManager */
   $workspacesModerationManager = \Drupal::service('workspaces.manager');
 
   if ($workspacesModerationManager->isShadowWorkspace($workspace)) {
@@ -53,7 +57,7 @@ function workspace_moderation_entity_update(EntityInterface $entity) {
 
     $entityType = $entity->getEntityType();
 
-    /** @var \Drupal\workspace_moderation\WorkspaceModerationManagerInterface $workspaceModerationManager */
+    /** @var WorkspaceModerationManagerInterface $workspaceModerationManager */
     $workspaceModerationManager = \Drupal::service('workspaces.manager');
     if (!$workspaceModerationManager->isEntityTypeSupported($entityType)) {
       return;
@@ -67,7 +71,7 @@ function workspace_moderation_entity_update(EntityInterface $entity) {
       return;
     }
 
-    /** @var \Drupal\content_moderation\ModerationInformationInterface $content_moderation_info */
+    /** @var ModerationInformationInterface $content_moderation_info */
     $content_moderation_info = \Drupal::service('content_moderation.moderation_information');
     $workflow = $content_moderation_info->getWorkflowForEntity($entity);
     if (!($workflow && $workflow->getTypePlugin()->hasState($entity->moderation_state->value))) {
@@ -79,11 +83,11 @@ function workspace_moderation_entity_update(EntityInterface $entity) {
       return;
     }
 
-    /** @var \Drupal\workspaces\WorkspaceAssociationInterface $workspaceAssociation */
+    /** @var WorkspaceAssociationInterface $workspaceAssociation */
     $workspaceAssociation = \Drupal::service('workspaces.association');
-    /** @var \Drupal\workspaces\WorkspaceInterface $parentWorkspace */
+    /** @var WorkspaceInterface $parentWorkspace */
     $parentWorkspace = $activeWorkspace->parent->entity;
-    /** @var \Drupal\Core\Entity\ContentEntityStorageInterface $storage */
+    /** @var ContentEntityStorageInterface $storage */
     $storage = \Drupal::entityTypeManager()->getStorage($entity->getEntityTypeId());
 
     $parentRevisions = $workspaceAssociation->getTrackedEntities(
