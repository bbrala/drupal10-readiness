modules/contrib/security_review/security_review.api.php
modules/contrib/security_review/security_review.drush.inc
modules/contrib/security_review/security_review.install
modules/contrib/security_review/security_review.module
modules/contrib/security_review/src/Check.php
modules/contrib/security_review/src/CheckResult.php
modules/contrib/security_review/src/CheckSettings.php
modules/contrib/security_review/src/CheckSettings/TrustedHostSettings.php
modules/contrib/security_review/src/CheckSettingsInterface.php
modules/contrib/security_review/src/Checklist.php
modules/contrib/security_review/src/Checks/AdminPermissions.php
modules/contrib/security_review/src/Checks/ErrorReporting.php
modules/contrib/security_review/src/Checks/ExecutablePhp.php
modules/contrib/security_review/src/Checks/FailedLogins.php
modules/contrib/security_review/src/Checks/Field.php
modules/contrib/security_review/src/Checks/FilePermissions.php
modules/contrib/security_review/src/Checks/InputFormats.php
modules/contrib/security_review/src/Checks/PrivateFiles.php
modules/contrib/security_review/src/Checks/QueryErrors.php
modules/contrib/security_review/src/Checks/TemporaryFiles.php
modules/contrib/security_review/src/Checks/TrustedHosts.php
modules/contrib/security_review/src/Checks/UploadExtensions.php
modules/contrib/security_review/src/Checks/ViewsAccess.php
modules/contrib/security_review/src/Commands/SecurityReviewCommands.php
modules/contrib/security_review/src/Controller/ChecklistController.php
modules/contrib/security_review/src/Controller/HelpController.php
modules/contrib/security_review/src/Controller/ToggleController.php
modules/contrib/security_review/src/Form/RunForm.php
modules/contrib/security_review/src/Form/SettingsForm.php
modules/contrib/security_review/src/Security.php
modules/contrib/security_review/src/SecurityReview.php
modules/contrib/security_review/tests/modules/security_review_test/security_review_test.module
modules/contrib/security_review/tests/modules/security_review_test/src/Test.php
modules/contrib/security_review/tests/modules/security_review_test/src/TestNoStore.php
modules/contrib/security_review/tests/src/Functional/CheckWebTest.php
modules/contrib/security_review/tests/src/Functional/ChecklistWebTest.php
modules/contrib/security_review/tests/src/Kernel/CheckTest.php
modules/contrib/security_review/tests/src/Kernel/ChecklistTest.php
modules/contrib/security_review/tests/src/Kernel/SecurityReviewTest.php

22 files with changes
=====================

1) modules/contrib/security_review/tests/src/Kernel/SecurityReviewTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\security_review\Kernel;

+use Drupal\security_review\SecurityReview;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;

@@ @@
   /**
    * Sets up the testing environment.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(static::$modules);
     $this->securityReview = \Drupal::getContainer()->get('security_review');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/security_review/tests/src/Kernel/ChecklistTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\security_review\Kernel;

+use Drupal\security_review\Check;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\security_review\Checklist;

@@ @@
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;

@@ @@
   /**
    * The security checks defined by Security Review and Security Review Test.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $checks;

@@ @@
   /**
    * The security checks defined by Security Review.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $realChecks;

@@ @@
   /**
    * The security checks defined by Security Review Test.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $testChecks;

@@ @@
   /**
    * Sets up the environment, populates the $checks variable.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->checklist = \Drupal::getContainer()
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/security_review/tests/src/Kernel/CheckTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\security_review\Kernel;

+use Drupal\security_review\Check;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\security_review\CheckResult;

@@ @@
   /**
    * The security checks defined by Security Review and Security Review Test.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $checks;

@@ @@
   /**
    * The security checks defined by Security Review.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $realChecks;

@@ @@
   /**
    * The security checks defined by Security Review Test.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $testChecks;

@@ @@
   /**
    * Sets up the environment, populates the $checks variable.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->realChecks = security_review_security_review_checks();
     $this->testChecks = security_review_test_security_review_checks();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/security_review/tests/src/Functional/ChecklistWebTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\security_review\Functional;

+use Drupal\user\Entity\User;
+use Drupal\security_review\Check;
 use Drupal\security_review\Checklist;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * The test user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;

@@ @@
   /**
    * The security checks defined by Security Review.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $checks;

@@ @@
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;

@@ @@
   /**
    * Sets up the testing environment.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->checklist = \Drupal::getContainer()
@@ @@
    */
   public function testRun() {
     foreach ($this->checks as $check) {
-      $this->assertEqual(0, $check->lastRun(), $check->getTitle() . ' has not been run yet.');
+      $this->assertEquals(0, $check->lastRun(), $check->getTitle() . ' has not been run yet.');
     }
     $this->checklist->runChecklist();
     foreach ($this->checks as $check) {
-      $this->assertNotEqual(0, $check->lastRun(), $check->getTitle() . ' has been run.');
+      $this->assertNotEquals(0, $check->lastRun(), $check->getTitle() . ' has been run.');
     }
   }

@@ @@
     }
     $this->checklist->runChecklist();
     foreach ($this->checks as $check) {
-      $this->assertEqual(0, $check->lastRun(), $check->getTitle() . ' has not been run.');
+      $this->assertEquals(0, $check->lastRun(), $check->getTitle() . ' has not been run.');
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * AssertNotEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/security_review/tests/src/Functional/CheckWebTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\security_review\Functional;

+use Drupal\user\Entity\User;
+use Drupal\security_review\Check;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * The test user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;

@@ @@
   /**
    * The security checks defined by Security Review.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $checks;

@@ @@
   /**
    * Sets up the testing environment, logs the user in, populates $check.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Login.
@@ @@
       $skipped_by = $check->skippedBy();

       $this->assertTrue($is_skipped, $check->getTitle() . ' skipped.');
-      $this->assertEqual($this->user->id(), $skipped_by->id(), 'Skipped by ' . $skipped_by->label());
+      $this->assertEquals($this->user->id(), $skipped_by->id(), 'Skipped by ' . $skipped_by->label());
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/security_review/src/SecurityReview.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\security_review;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The config storage.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * The state storage.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Constructs a SecurityReview instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state storage.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(ConfigFactoryInterface $config_factory, StateInterface $state, ModuleHandlerInterface $module_handler, AccountProxyInterface $current_user) {
@@ @@
   /**
    * Logs an event.
    *
-   * @param \Drupal\security_review\Check $check
+   * @param Check $check
    *   The Check the message is about.
    * @param string $message
    *   The message.
@@ @@
   /**
    * Logs a check result.
    *
-   * @param \Drupal\security_review\CheckResult $result
+   * @param CheckResult $result
    *   The result to log.
    */
   public function logCheckResult(CheckResult $result = NULL) {
@@ @@
    * Deletes orphaned check data.
    */
   public function cleanStorage() {
-    /** @var \Drupal\security_review\Checklist $checklist */
+    /** @var Checklist $checklist */
     $checklist = \Drupal::service('security_review.checklist');

     // Get list of check configuration names.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


7) modules/contrib/security_review/src/Security.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The Drupal kernel.
    *
-   * @var \Drupal\Core\DrupalKernelInterface
+   * @var DrupalKernelInterface
    */
   protected $kernel;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;

@@ @@
   /**
    * Constructs a Security instance.
    *
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The SecurityReview service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\DrupalKernelInterface $kernel
+   * @param DrupalKernelInterface $kernel
    *   The Drupal kernel.
    */
   public function __construct(SecurityReview $security_review, ModuleHandlerInterface $module_handler, ConfigFactoryInterface $config_factory, DrupalKernelInterface $kernel) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


8) modules/contrib/security_review/src/Form/SettingsForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;

@@ @@
   /**
    * The security_review.security service.
    *
-   * @var \Drupal\security_review\Security
+   * @var Security
    */
   protected $security;

@@ @@
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;

@@ @@
   /**
    * The date.formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   private $dateFormatter;

@@ @@
   /**
    * Constructs a SettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
-   * @param \Drupal\security_review\Security $security
+   * @param Security $security
    *   The security_review.security service.
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The security_review service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date.formatter service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, Checklist $checklist, Security $security, SecurityReview $security_review, DateFormatterInterface $dateFormatter) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/security_review/src/Form/RunForm.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;

@@ @@
   /**
    * Constructs a RunForm.
    *
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
    */
   public function __construct(Checklist $checklist) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/security_review/src/Controller/ToggleController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\security_review\Controller;

+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Access\CsrfTokenGenerator;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Messenger\MessengerInterface;
@@ @@
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;

@@ @@
   /**
    * The CSRF Token generator.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator $csrfToken
+   * @var CsrfTokenGenerator $csrfToken
    */
   protected $csrfToken;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\Request $request
+   * @var Request $request
    */
   protected $request;

@@ @@
   /**
    * Constructs a ToggleController.
    *
-   * @param \Drupal\Core\Access\CsrfTokenGenerator $csrf_token_generator
+   * @param CsrfTokenGenerator $csrf_token_generator
    *   The CSRF Token generator.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The request stack.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(CsrfTokenGenerator $csrf_token_generator, RequestStack $request, Checklist $checklist, MessengerInterface $messenger) {
@@ @@
    * @param string $check_id
    *   The ID of the check.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return JsonResponse|RedirectResponse
    *   The response.
    */
   public function index($check_id) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/security_review/src/Controller/HelpController.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;

@@ @@
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;

@@ @@
   /**
    * The date.formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   private $dateFormatter;

@@ @@
   /**
    * Constructs a HelpController.
    *
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The security_review service.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date.formatter service.
    */
   public function __construct(SecurityReview $security_review, Checklist $checklist, DateFormatterInterface $dateFormatter) {
@@ @@
    * @return array
    *   The check's help page.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   If the check is not found.
    */
   private function checkHelp($namespace, $title) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/security_review/src/Controller/ChecklistController.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The CSRF Token generator.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator $csrfToken
+   * @var CsrfTokenGenerator $csrfToken
    */
   protected $csrfToken;

@@ @@
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;

@@ @@
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;

@@ @@
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a ChecklistController.
    *
-   * @param \Drupal\Core\Access\CsrfTokenGenerator $csrf_token_generator
+   * @param CsrfTokenGenerator $csrf_token_generator
    *   The CSRF Token generator.
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The security_review service.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(CsrfTokenGenerator $csrf_token_generator, SecurityReview $security_review, Checklist $checklist, MessengerInterface $messenger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/security_review/src/Commands/SecurityReviewCommands.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\security_review\Commands;

+use Drupal\security_review\Check;
 use Consolidation\OutputFormatters\StructuredData\RowsOfFields;
 use Drupal\security_review\Checklist;
 use Drupal\security_review\CheckResult;
@@ @@
   /**
    * Security review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReviewService;

@@ @@
   /**
    * Checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklistService;

@@ @@
   /**
    * Constructs a SecurityReviewCommands object.
    *
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   Security review service.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   Checklist service.
    */
   public function __construct(SecurityReview $security_review, Checklist $checklist) {
@@ @@
    *   message: Message
    *   status: Status
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Row of results.
    */
   public function securityReview(
@@ @@
     $results = [];
     if (!$last_run) {
       // Do a normal security review run.
-      /** @var \Drupal\security_review\Check[] $checks */
+      /** @var Check[] $checks */
       $checks = [];
-      /** @var \Drupal\security_review\Check[] $to_skip */
+      /** @var Check[] $to_skip */
       $to_skip = [];

       // Fill the $checks array.
@@ @@
   /**
    * Helper function to compile Security Review results.
    *
-   * @param \Drupal\security_review\CheckResult[] $results
+   * @param CheckResult[] $results
    *   An array of CheckResults.
    * @param bool $short_titles
    *   Whether to use short message (check title) or full check success or
@@ @@
    * @param string $check_name
    *   The check to get.
    *
-   * @return \Drupal\security_review\Check|null
+   * @return Check|null
    *   The found Check.
    */
   private function getCheck($check_name) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/security_review/src/Checks/Field.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\security_review\Checks;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Core\Entity\EntityBase;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Exception\UndefinedLinkTemplateException;
 use Drupal\field\Entity\FieldStorageConfig;
@@ @@
       'PHP' => '?php',
     ];

-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+    /** @var EntityTypeManagerInterface $entity_type_manager */
     $entity_type_manager = \Drupal::service('entity_type.manager');
-    /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $field_manager */
+    /** @var EntityFieldManagerInterface $field_manager */
     $field_manager = \Drupal::service('entity_field.manager');
     foreach ($field_manager->getFieldMap() as $entity_type_id => $fields) {
       $field_storage_definitions = $field_manager->getFieldStorageDefinitions($entity_type_id);
@@ @@
    * Falls back on a string with entity type id and id if no good link can
    * be found.
    *
-   * @param \Drupal\Core\Entity\EntityBase $entity
+   * @param EntityBase $entity
    *   The entity.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/security_review/src/Checklist.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs a Checklist instance.
    *
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The SecurityReview service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(SecurityReview $security_review, ModuleHandlerInterface $module_handler, AccountProxyInterface $current_user) {
@@ @@
   /**
    * Array of cached Checks.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   private static $cachedChecks = [];

@@ @@
   /**
    * Returns every Check.
    *
-   * @return \Drupal\security_review\Check[]
+   * @return Check[]
    *   Array of Checks.
    */
   public function getChecks() {
@@ @@
   /**
    * Returns the enabled Checks.
    *
-   * @return \Drupal\security_review\Check[]
+   * @return Check[]
    *   Array of enabled Checks.
    */
   public function getEnabledChecks() {
@@ @@
   /**
    * Groups an array of checks by their namespaces.
    *
-   * @param \Drupal\security_review\Check[] $checks
+   * @param Check[] $checks
    *   The array of Checks to group.
    *
    * @return array
@@ @@
   /**
    * Runs an array of checks.
    *
-   * @param \Drupal\security_review\Check[] $checks
+   * @param Check[] $checks
    *   The array of Checks to run.
    * @param bool $cli
    *   Whether to call runCli() instead of run().
    *
-   * @return \Drupal\security_review\CheckResult[]
+   * @return CheckResult[]
    *   The array of CheckResults generated.
    */
   public function runChecks(array $checks, $cli = FALSE) {
@@ @@
   /**
    * Stores an array of CheckResults.
    *
-   * @param \Drupal\security_review\CheckResult[] $results
+   * @param CheckResult[] $results
    *   The CheckResults to store.
    */
   public function storeResults(array $results) {
@@ @@
    * @param string $title
    *   The machine title of the requested check.
    *
-   * @return null|\Drupal\security_review\Check
+   * @return null|Check
    *   The Check or null if it doesn't exist.
    */
   public function getCheck($namespace, $title) {
@@ @@
    * @param string $id
    *   The machine namespace of the requested check.
    *
-   * @return null|\Drupal\security_review\Check
+   * @return null|Check
    *   The Check or null if it doesn't exist.
    */
   public function getCheckById($id) {
@@ @@
   /**
    * Helper function for sorting checks.
    *
-   * @param \Drupal\security_review\Check $a
+   * @param Check $a
    *   Check A.
-   * @param \Drupal\security_review\Check $b
+   * @param Check $b
    *   Check B.
    *
    * @return int
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


16) modules/contrib/security_review/src/CheckSettings.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * The parent check.
    *
-   * @var \Drupal\security_review\Check
+   * @var Check
    */
   protected $check;

@@ @@
   /**
    * The configuration storage of the parent Check.
    *
-   * @var \Drupal\Core\Config\Config $config
+   * @var Config $config
    */
   protected $config;

@@ @@
   /**
    * Creates a CheckSettings instance.
    *
-   * @param \Drupal\security_review\Check $check
+   * @param Check $check
    *   The parent Check.
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The parent Check's configuration.
    */
   public function __construct(Check $check, Config &$config) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


17) modules/contrib/security_review/src/CheckResult.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Stores the parent Check.
    *
-   * @var \Drupal\security_review\Check $check
+   * @var Check $check
    */
   private $check;

@@ @@
   /**
    * Constructs an immutable CheckResult.
    *
-   * @param \Drupal\security_review\Check $check
+   * @param Check $check
    *   The Check that created this result.
    * @param int $result
    *   The result integer (see the constants defined above).
@@ @@
   /**
    * Returns the parent Check.
    *
-   * @return \Drupal\security_review\Check
+   * @return Check
    *   The Check that created this result.
    */
   public function check() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


18) modules/contrib/security_review/src/Check.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\security_review;

+use Drupal\Core\Config\Config;
+use Symfony\Component\DependencyInjection\ContainerInterface;
+use Drupal\Core\State\State;
+use Drupal\Core\Config\ConfigFactory;
+use Drupal\Core\Session\AccountProxy;
+use Drupal\Core\Database\Connection;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\DrupalKernel;
+use Drupal\Core\Extension\ModuleHandler;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
 use Drupal\Core\Logger\RfcLogLevel;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
   /**
    * The configuration storage for this check.
    *
-   * @var \Drupal\Core\Config\Config $config
+   * @var Config $config
    */
   protected $config;

@@ @@
   /**
    * The service container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;

@@ @@
   /**
    * Settings handler for this check.
    *
-   * @var \Drupal\security_review\CheckSettingsInterface $settings
+   * @var CheckSettingsInterface $settings
    */
   protected $settings;

@@ @@
   /**
    * The State system.
    *
-   * @var \Drupal\Core\State\State
+   * @var State
    */
   protected $state;

@@ @@
   /**
    * Returns the check-specific settings' handler.
    *
-   * @return \Drupal\security_review\CheckSettingsInterface
+   * @return CheckSettingsInterface
    *   The settings interface of the check.
    */
   public function settings() {
@@ @@
   /**
    * The actual procedure of carrying out the check.
    *
-   * @return \Drupal\security_review\CheckResult
+   * @return CheckResult
    *   The result of running the check.
    */
   public abstract function run();
@@ @@
   /**
    * Same as run(), but used in CLI context such as Drush.
    *
-   * @return \Drupal\security_review\CheckResult
+   * @return CheckResult
    *   The result of running the check.
    */
   public function runCli() {
@@ @@
    *
    * Usually this is a list of the findings and an explanation.
    *
-   * @param \Drupal\security_review\CheckResult $result
+   * @param CheckResult $result
    *   The check result to evaluate.
    *
    * @return array
@@ @@
   /**
    * Evaluates a CheckResult and returns a plaintext output.
    *
-   * @param \Drupal\security_review\CheckResult $result
+   * @param CheckResult $result
    *   The check result to evaluate.
    *
    * @return string
@@ @@
    * @param bool $get_findings
    *   Whether to get the findings too.
    *
-   * @return \Drupal\security_review\CheckResult|null
+   * @return CheckResult|null
    *   The last stored result (or null).
    */
   public function lastResult($get_findings = FALSE) {
@@ @@
    * Returns null if it hasn't been skipped yet or the user that skipped the
    * check is not valid anymore.
    *
-   * @return \Drupal\user\Entity\User|null
+   * @return User|null
    *   The user the check was last skipped by (or null).
    */
   public function skippedBy() {
@@ @@
   /**
    * Stores a result in the state system.
    *
-   * @param \Drupal\security_review\CheckResult $result
+   * @param CheckResult $result
    *   The result to store.
    */
   public function storeResult(CheckResult $result) {
@@ @@
    * @param int $time
    *   The time the test was run.
    *
-   * @return \Drupal\security_review\CheckResult
+   * @return CheckResult
    *   The created CheckResult.
    */
   public function createResult($result, array $findings = [], $visible = TRUE, $time = NULL) {
@@ @@
   /**
    * Returns the Security Review Checklist service.
    *
-   * @return \Drupal\security_review\Checklist
+   * @return Checklist
    *   Security Review's Checklist service.
    */
   protected function checklist() {
@@ @@
   /**
    * Returns the Config factory.
    *
-   * @return \Drupal\Core\Config\ConfigFactory
+   * @return ConfigFactory
    *   Config factory.
    */
   protected function configFactory() {
@@ @@
   /**
    * Returns the service container.
    *
-   * @return \Symfony\Component\DependencyInjection\ContainerInterface
+   * @return ContainerInterface
    *   Service container.
    */
   protected function container() {
@@ @@
   /**
    * Returns the current Drupal user.
    *
-   * @return \Drupal\Core\Session\AccountProxy
+   * @return AccountProxy
    *   Current Drupal user.
    */
   protected function currentUser() {
@@ @@
   /**
    * Returns the database connection.
    *
-   * @return \Drupal\Core\Database\Connection
+   * @return Connection
    *   Database connection.
    */
   protected function database() {
@@ @@
   /**
    * Returns the entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   Entity type manager.
    */
   protected function entityTypeManager() {
@@ @@
   /**
    * Returns the Drupal Kernel.
    *
-   * @return \Drupal\Core\DrupalKernel
+   * @return DrupalKernel
    *   Drupal Kernel.
    */
   protected function kernel() {
@@ @@
   /**
    * Returns the module handler.
    *
-   * @return \Drupal\Core\Extension\ModuleHandler
+   * @return ModuleHandler
    *   Module handler.
    */
   protected function moduleHandler() {
@@ @@
   /**
    * Returns the Security Review Security service.
    *
-   * @return \Drupal\security_review\Security
+   * @return Security
    *   Security Review's Security service.
    */
   protected function security() {
@@ @@
   /**
    * Returns the Security Review service.
    *
-   * @return \Drupal\security_review\SecurityReview
+   * @return SecurityReview
    *   Security Review service.
    */
   protected function securityReview() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


19) modules/contrib/security_review/security_review.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\security_review\SecurityReview;
+use Drupal\security_review\Checklist;
 /**
  * @file
  * Site security review and reporting Drupal module.
@@ @@
  * Implements hook_modules_uninstalled().
  */
 function security_review_modules_uninstalled($modules) {
-  /** @var \Drupal\security_review\SecurityReview $security_review */
+  /** @var SecurityReview $security_review */
   $security_review = Drupal::service('security_review');

   // Clean orphaned checks.
@@ @@
   // Post-install hook.
   if (in_array('security_review', $modules)) {

-    /** @var \Drupal\security_review\SecurityReview $security_review */
+    /** @var SecurityReview $security_review */
     $security_review = Drupal::service('security_review');

     // Clean orphaned checks.
@@ @@
 /**
  * Batch operation: runs a single check.
  *
- * @param \Drupal\security_review\Check $check
+ * @param Check $check
  *   The check to run.
  * @param array $context
  *   The Batch context.
@@ @@
  *
  * @param bool $success
  *   Whether the batch job was successful.
- * @param \Drupal\security_review\CheckResult[] $results
+ * @param CheckResult[] $results
  *   The results of the batch job.
  * @param array $operations
  *   The array of batch operations.
  */
 function _security_review_batch_run_finished($success, array $results, array $operations) {
-  /** @var \Drupal\security_review\SecurityReview $security_review */
+  /** @var SecurityReview $security_review */
   $security_review = Drupal::service('security_review');

-  /** @var \Drupal\security_review\Checklist $checklist */
+  /** @var Checklist $checklist */
   $checklist = Drupal::service('security_review.checklist');

   $security_review->setLastRun(time());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


20) modules/contrib/security_review/security_review.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\security_review\Checklist;
 /**
  * @file
  * Install, update and uninstall functions for the security_review module.
@@ @@

   // Provides a Status Report entry.
   if ($phase == 'runtime') {
-    /** @var \Drupal\security_review\Checklist $checklist */
+    /** @var Checklist $checklist */
     $checklist = Drupal::service('security_review.checklist');

     $failed_checks = FALSE;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


21) modules/contrib/security_review/security_review.drush.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\security_review\SecurityReview;
+use Drupal\security_review\Checklist;
+use Drupal\security_review\Check;
 /**
  * @file
  * Drush commands for Security Review module.
@@ @@
  * Runs a checklist and displays results.
  */
 function security_review_drush() {
-  /** @var \Drupal\security_review\SecurityReview $security_review */
+  /** @var SecurityReview $security_review */
   $security_review = Drupal::service('security_review');

-  /** @var \Drupal\security_review\Checklist $checklist */
+  /** @var Checklist $checklist */
   $checklist = Drupal::service('security_review.checklist');

   $store = drush_get_option('store');
@@ @@
   $results = [];
   if (!$last_run) {
     // Do a normal security review run.
-    /** @var \Drupal\security_review\Check[] $checks */
+    /** @var Check[] $checks */
     $checks = [];
-    /** @var \Drupal\security_review\Check[] $to_skip */
+    /** @var Check[] $to_skip */
     $to_skip = [];

     // Fill the $checks array.
@@ @@
  * @param string $check_name
  *   The check to get.
  *
- * @return \Drupal\security_review\Check|null
+ * @return Check|null
  *   The found Check.
  */
 function _security_review_drush_get_check($check_name) {
-  /** @var \Drupal\security_review\Checklist $checklist */
+  /** @var Checklist $checklist */
   $checklist = Drupal::service('security_review.checklist');

   // Default namespace is Security Review.
@@ @@
 /**
  * Helper function to compile Security Review results.
  *
- * @param \Drupal\security_review\CheckResult[] $results
+ * @param CheckResult[] $results
  *   An array of CheckResults.
  * @param bool $short_titles
  *   Whether to use short message (check title) or full check success or failure
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


22) modules/contrib/security_review/security_review.api.php:31

    ---------- begin diff ----------
@@ @@
 /**
  * Provides logging capabilities.
  *
- * @param \Drupal\security_review\Check $check
+ * @param Check $check
  *   The Check the event is related to.
  * @param string $message
  *   The message.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 22 files have been changed by Rector                                      

