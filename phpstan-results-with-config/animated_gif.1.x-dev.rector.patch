diff --git a/animated_gif.info.yml b/animated_gif.info.yml
index ee73709..926bf5a 100644
--- a/animated_gif.info.yml
+++ b/animated_gif.info.yml
@@ -1,5 +1,5 @@
 name: 'Animated GIF'
 type: module
 description: 'Allows you to render animated GIFs without image style.'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: 'Media'
diff --git a/animated_gif.module b/animated_gif.module
index f0499ab..5ce4d0f 100644
--- a/animated_gif.module
+++ b/animated_gif.module
@@ -6,6 +6,7 @@
  */
 
 declare(strict_types = 1);
+use Drupal\file\FileInterface;
 
 use Drupal\animated_gif\AnimatedGifUtility;
 use Drupal\file\Entity\File;
@@ -54,7 +55,7 @@ function animated_gif_preprocess_image_style(array &$variables) : void {
     return;
   }
 
-  /** @var \Drupal\file\FileInterface $file */
+  /** @var FileInterface $file */
   $file = reset($files);
 
   if ($file->getMimeType() === 'image/gif' && AnimatedGifUtility::isAnAnimatedGif($file->getFileUri())) {
@@ -78,7 +79,7 @@ function animated_gif_preprocess_responsive_image(array &$variables) : void {
     return;
   }
 
-  /** @var \Drupal\file\FileInterface $file */
+  /** @var FileInterface $file */
   $file = reset($files);
 
   if ($file->getMimeType() === 'image/gif' && AnimatedGifUtility::isAnAnimatedGif($file->getFileUri())) {
diff --git a/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php b/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
index b526f11..0ee5413 100644
--- a/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\animated_gif\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
+use Drupal\file\FileInterface;
 use Drupal\animated_gif\AnimatedGifUtility;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\image\Plugin\Field\FieldFormatter\ImageUrlFormatter;
@@ -27,20 +29,20 @@ class AnimatedGifImageUrlFormatter extends ImageUrlFormatter {
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $elements = parent::viewElements($items, $langcode);
 
-    /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items */
+    /** @var EntityReferenceFieldItemListInterface $items */
     $images = $this->getEntitiesToView($items, $langcode);
     if (empty($images)) {
       // Early opt-out if the field is empty.
       return $elements;
     }
 
-    /** @var \Drupal\file\FileInterface[] $images */
+    /** @var FileInterface[] $images */
     foreach ($images as $delta => $image) {
       $image_uri = $image->getFileUri();
 
       if ($image->getMimeType() === 'image/gif' && AnimatedGifUtility::isAnAnimatedGif($image_uri)) {
         // No image style is wanted for animated gifs.
-        $url = file_url_transform_relative(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generateString($image_uri);
         $elements[$delta]['#markup'] = $url;
       }
     }
diff --git a/tests/src/Functional/AnimatedGifFieldTest.php b/tests/src/Functional/AnimatedGifFieldTest.php
index af94c8f..121728f 100644
--- a/tests/src/Functional/AnimatedGifFieldTest.php
+++ b/tests/src/Functional/AnimatedGifFieldTest.php
@@ -4,6 +4,10 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\animated_gif\Functional;
 
+use Drupal\node\NodeInterface;
+use Behat\Mink\Exception\ResponseTextException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\file\FileInterface;
 
 /**
@@ -36,7 +40,7 @@ class AnimatedGifFieldTest extends AnimatedGifFunctionalTestBase {
   /**
    * The tested node.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
@@ -75,9 +79,9 @@ class AnimatedGifFieldTest extends AnimatedGifFunctionalTestBase {
   /**
    * Method to test gif images.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws ResponseTextException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function testGif(): void {
     $this->gifAnimationTest(self::TEST_ANIMATED_FILE, self::TEST_ANIMATED_FILE_URI, TRUE);
@@ -94,9 +98,9 @@ class AnimatedGifFieldTest extends AnimatedGifFunctionalTestBase {
    * @param bool $isAnimated
    *   Set if it's animated.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws ResponseTextException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function gifAnimationTest(string $fileName, string $fileUri, bool $isAnimated): void {
     $this->drupalLogin($this->adminUser);
@@ -118,7 +122,7 @@ class AnimatedGifFieldTest extends AnimatedGifFunctionalTestBase {
   /**
    * Helper method to upload $file on the node.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file.
    */
   protected function uploadImage(FileInterface $file): void {
diff --git a/tests/src/Functional/AnimatedGifFunctionalTestBase.php b/tests/src/Functional/AnimatedGifFunctionalTestBase.php
index 32c78eb..3194567 100644
--- a/tests/src/Functional/AnimatedGifFunctionalTestBase.php
+++ b/tests/src/Functional/AnimatedGifFunctionalTestBase.php
@@ -4,6 +4,9 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\animated_gif\Functional;
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\user\UserInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\Tests\animated_gif\Traits\AnimatedGifTestTrait;
@@ -35,14 +38,14 @@ abstract class AnimatedGifFunctionalTestBase extends BrowserTestBase {
   /**
    * The display repository service.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $displayRepository;
 
   /**
    * A user with administration permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -52,7 +55,7 @@ abstract class AnimatedGifFunctionalTestBase extends BrowserTestBase {
   protected function setUp(): void {
     parent::setUp();
 
-    /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $displayRepository */
+    /** @var EntityDisplayRepositoryInterface $displayRepository */
     $this->displayRepository = $this->container->get('entity_display.repository');
     $this->fileSystem = $this->container->get('file_system');
     $this->entityTypeManager = $this->container->get('entity_type.manager');
@@ -83,7 +86,7 @@ abstract class AnimatedGifFunctionalTestBase extends BrowserTestBase {
    * @param string $fieldName
    *   The field name.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function createFileField(string $entityType, string $bundle, string $fieldName): void {
     if (!FieldStorageConfig::loadByName($entityType, $fieldName)) {
diff --git a/tests/src/Kernel/AnimatedGifImageFormatterTest.php b/tests/src/Kernel/AnimatedGifImageFormatterTest.php
index 2b5a672..3fef2be 100644
--- a/tests/src/Kernel/AnimatedGifImageFormatterTest.php
+++ b/tests/src/Kernel/AnimatedGifImageFormatterTest.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\animated_gif\Kernel;
 
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\field\Entity\FieldConfig;
@@ -73,7 +75,7 @@ class AnimatedGifImageFormatterTest extends FieldKernelTestBase {
   /**
    * The entity view display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $display;
 
@@ -145,21 +147,21 @@ class AnimatedGifImageFormatterTest extends FieldKernelTestBase {
     // Generate the render array to verify markup.
     $build = $this->display->build($entity);
 
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = $this->container->get('renderer');
 
     $output = $renderer->renderRoot($build[$this->fieldName][0]);
-    $this->assertStringContainsString(file_url_transform_relative(file_create_url($animatedGifFile->getFileUri())), (string) $output);
+    $this->assertStringContainsString(\Drupal::service('file_url_generator')->generateString($animatedGifFile->getFileUri()), (string) $output);
 
     $output = $renderer->renderRoot($build[$this->fieldName][1]);
-    $this->assertStringNotContainsString(file_url_transform_relative(file_create_url($notAnimatedGifFile->getFileUri())), (string) $output);
+    $this->assertStringNotContainsString(\Drupal::service('file_url_generator')->generateString($notAnimatedGifFile->getFileUri()), (string) $output);
 
     $image_style = $this->entityTypeManager
       ->getStorage('image_style')
       ->load('medium');
 
     // For non animated gifs, Url should be with image style Url.
-    $this->assertStringContainsString(file_url_transform_relative($image_style->buildUrl($notAnimatedGifFile->getFileUri())), htmlspecialchars_decode((string) $output));
+    $this->assertStringContainsString(\Drupal::service('file_url_generator')->transformRelative($image_style->buildUrl($notAnimatedGifFile->getFileUri())), htmlspecialchars_decode((string) $output));
   }
 
 }
diff --git a/tests/src/Traits/AnimatedGifTestTrait.php b/tests/src/Traits/AnimatedGifTestTrait.php
index 51f95b5..48e50ae 100644
--- a/tests/src/Traits/AnimatedGifTestTrait.php
+++ b/tests/src/Traits/AnimatedGifTestTrait.php
@@ -4,6 +4,9 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\animated_gif\Traits;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\file\FileInterface;
 
@@ -15,14 +18,14 @@ trait AnimatedGifTestTrait {
   /**
    * File system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -34,19 +37,19 @@ trait AnimatedGifTestTrait {
    * @param string $fileUri
    *   The Uri of the file.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   Return a file.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getTestFile(string $fileName, string $fileUri): FileInterface {
     // Copy the source file to public directory.
-    $source = drupal_get_path('module', 'animated_gif');
+    $source = \Drupal::service('extension.list.module')->getPath('animated_gif');
     $source .= '/tests/images/' . $fileName;
     $this->fileSystem->copy($source, $fileUri, FileSystemInterface::EXISTS_REPLACE);
 
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = $this->entityTypeManager->getStorage('file')->create([
       'filename' => $fileName,
       'filemime' => 'image/gif',
