modules/contrib/slack_receive/slack_receive.api.php
modules/contrib/slack_receive/slack_receive.install
modules/contrib/slack_receive/slack_receive_example/slack_receive_example.module
modules/contrib/slack_receive/src/Authentication/Provider/SlackAuth.php
modules/contrib/slack_receive/src/Controller/SlackApplicationListBuilder.php
modules/contrib/slack_receive/src/Encoder/FormDecoder.php
modules/contrib/slack_receive/src/Encoder/SlackJsonEncoder.php
modules/contrib/slack_receive/src/Entity/SlackApplication.php
modules/contrib/slack_receive/src/Entity/SlackApplicationInterface.php
modules/contrib/slack_receive/src/Form/SlackApplicationDeleteForm.php
modules/contrib/slack_receive/src/Form/SlackApplicationForm.php
modules/contrib/slack_receive/src/Plugin/rest/resource/SlashCommandResponse.php
modules/contrib/slack_receive/src/Plugin/views/display/SlackMessage.php
modules/contrib/slack_receive/src/Plugin/views/row/SlackDataFieldRow.php
modules/contrib/slack_receive/src/Plugin/views/style/SlackSerializer.php
modules/contrib/slack_receive/src/SlackReceiveServiceProvider.php

4 files with changes
====================

1) modules/contrib/slack_receive/src/Plugin/views/display/SlackMessage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\slack_receive\Plugin\views\display;

+use Drupal\Core\Routing\RouteProviderInterface;
+use Drupal\Core\State\StateInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Cache\CacheableResponse;
 use Drupal\Core\Render\RenderContext;
@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state key value store.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    * @param string[] $authentication_providers
    *   The authentication providers, keyed by ID.
@@ @@
     $response = new CacheableResponse('', 200);
     $build['#response'] = $response;

-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');

     $output = (string) $renderer->renderRoot($build);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/slack_receive/src/Plugin/rest/resource/SlashCommandResponse.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The ModuleHandler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    *   The plugin implementation definition.
    * @param array $serializer_formats
    *   The available serialization formats.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    * @param \Drupal\Core\Extension\ModuleHandlerInterface
    *   The module handler service.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/slack_receive/src/Form/SlackApplicationForm.php:16

    ---------- begin diff ----------
@@ @@
 class SlackApplicationForm extends EntityForm {

   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityStorage;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/slack_receive/src/Authentication/Provider/SlackAuth.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\slack_receive\Authentication\Provider;

+use Drupal\slack_receive\Entity\SlackApplicationInterface;
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Authentication\AuthenticationProviderInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Flood\FloodInterface;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The flood service.
    *
-   * @var \Drupal\Core\Flood\FloodInterface
+   * @var FloodInterface
    */
   protected $flood;

@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The time service
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * Constructs a Slack Authentication provider object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager service.
-   * @param \Drupal\Core\Flood\FloodInterface $flood
+   * @param FloodInterface $flood
    *   The flood service.
    * @param \Drupal\Component\Datetime\TimeInterface
    *    The time service.
@@ @@
         ->loadByProperties([
           'status' => TRUE,
         ]);
-      /** @var \Drupal\slack_receive\Entity\SlackApplicationInterface $app */
+      /** @var SlackApplicationInterface $app */
       foreach ((array) $applications as $app) {
         // Slack authentication control.
         $timestamp = $request->headers->get('X-Slack-Request-Timestamp');
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function handleException(GetResponseForExceptionEvent $event) {
-    $exception = $event->getException();
+  public function handleException(ExceptionEvent $event) {
+    $exception = $event->getThrowable();
     if ($exception instanceof AccessDeniedHttpException) {
-      $event->setException(new UnauthorizedHttpException('Invalid consumer origin.', $exception));
+      $event->setThrowable(new UnauthorizedHttpException('Invalid consumer origin.', $exception));
       return TRUE;
     }
     return FALSE;
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameMethodRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 4 files have been changed by Rector                                       

