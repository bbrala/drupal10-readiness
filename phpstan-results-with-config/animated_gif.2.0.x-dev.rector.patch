diff --git a/animated_gif.module b/animated_gif.module
index f0499ab..5ce4d0f 100644
--- a/animated_gif.module
+++ b/animated_gif.module
@@ -6,6 +6,7 @@
  */
 
 declare(strict_types = 1);
+use Drupal\file\FileInterface;
 
 use Drupal\animated_gif\AnimatedGifUtility;
 use Drupal\file\Entity\File;
@@ -54,7 +55,7 @@ function animated_gif_preprocess_image_style(array &$variables) : void {
     return;
   }
 
-  /** @var \Drupal\file\FileInterface $file */
+  /** @var FileInterface $file */
   $file = reset($files);
 
   if ($file->getMimeType() === 'image/gif' && AnimatedGifUtility::isAnAnimatedGif($file->getFileUri())) {
@@ -78,7 +79,7 @@ function animated_gif_preprocess_responsive_image(array &$variables) : void {
     return;
   }
 
-  /** @var \Drupal\file\FileInterface $file */
+  /** @var FileInterface $file */
   $file = reset($files);
 
   if ($file->getMimeType() === 'image/gif' && AnimatedGifUtility::isAnAnimatedGif($file->getFileUri())) {
diff --git a/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php b/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
index dbf2ba1..eca0504 100644
--- a/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\animated_gif\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
+use Drupal\file\FileInterface;
 use Drupal\animated_gif\AnimatedGifUtility;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\image\Plugin\Field\FieldFormatter\ImageUrlFormatter;
@@ -27,14 +29,14 @@ class AnimatedGifImageUrlFormatter extends ImageUrlFormatter {
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $elements = parent::viewElements($items, $langcode);
 
-    /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items */
+    /** @var EntityReferenceFieldItemListInterface $items */
     $images = $this->getEntitiesToView($items, $langcode);
     if (empty($images)) {
       // Early opt-out if the field is empty.
       return $elements;
     }
 
-    /** @var \Drupal\file\FileInterface[] $images */
+    /** @var FileInterface[] $images */
     foreach ($images as $delta => $image) {
       $image_uri = $image->getFileUri();
 
diff --git a/tests/src/Functional/AnimatedGifFieldTest.php b/tests/src/Functional/AnimatedGifFieldTest.php
index 2eb55e4..81a42ac 100644
--- a/tests/src/Functional/AnimatedGifFieldTest.php
+++ b/tests/src/Functional/AnimatedGifFieldTest.php
@@ -4,6 +4,9 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\animated_gif\Functional;
 
+use Behat\Mink\Exception\ResponseTextException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\file\FileInterface;
 use Drupal\node\NodeInterface;
 
@@ -37,7 +40,7 @@ class AnimatedGifFieldTest extends AnimatedGifFunctionalTestBase {
   /**
    * The tested node.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected NodeInterface $node;
 
@@ -76,9 +79,9 @@ class AnimatedGifFieldTest extends AnimatedGifFunctionalTestBase {
   /**
    * Method to test gif images.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws ResponseTextException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function testGif(): void {
     $this->gifAnimationTest(self::TEST_ANIMATED_FILE, self::TEST_ANIMATED_FILE_URI, TRUE);
@@ -95,9 +98,9 @@ class AnimatedGifFieldTest extends AnimatedGifFunctionalTestBase {
    * @param bool $isAnimated
    *   Set if it's animated.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws ResponseTextException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function gifAnimationTest(string $fileName, string $fileUri, bool $isAnimated): void {
     $this->drupalLogin($this->adminUser);
@@ -119,7 +122,7 @@ class AnimatedGifFieldTest extends AnimatedGifFunctionalTestBase {
   /**
    * Helper method to upload $file on the node.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file.
    */
   protected function uploadImage(FileInterface $file): void {
diff --git a/tests/src/Functional/AnimatedGifFunctionalTestBase.php b/tests/src/Functional/AnimatedGifFunctionalTestBase.php
index 7a006d1..440855e 100644
--- a/tests/src/Functional/AnimatedGifFunctionalTestBase.php
+++ b/tests/src/Functional/AnimatedGifFunctionalTestBase.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\animated_gif\Functional;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -36,14 +37,14 @@ abstract class AnimatedGifFunctionalTestBase extends BrowserTestBase {
   /**
    * The display repository service.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected EntityDisplayRepositoryInterface $displayRepository;
 
   /**
    * A user with administration permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected UserInterface $adminUser;
 
@@ -84,7 +85,7 @@ abstract class AnimatedGifFunctionalTestBase extends BrowserTestBase {
    * @param string $fieldName
    *   The field name.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function createFileField(string $entityType, string $bundle, string $fieldName): void {
     if (!FieldStorageConfig::loadByName($entityType, $fieldName)) {
diff --git a/tests/src/Kernel/AnimatedGifImageFormatterTest.php b/tests/src/Kernel/AnimatedGifImageFormatterTest.php
index bc26c78..44b4ca5 100644
--- a/tests/src/Kernel/AnimatedGifImageFormatterTest.php
+++ b/tests/src/Kernel/AnimatedGifImageFormatterTest.php
@@ -4,6 +4,10 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\animated_gif\Kernel;
 
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\Core\File\FileUrlGeneratorInterface;
+use Drupal\Core\Render\RendererInterface;
+use Drupal\image\ImageStyleInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\field\Entity\FieldConfig;
@@ -72,14 +76,14 @@ class AnimatedGifImageFormatterTest extends FieldKernelTestBase {
   /**
    * The entity view display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $display;
 
   /**
    * The file URL generator.
    *
-   * @var \Drupal\Core\File\FileUrlGeneratorInterface
+   * @var FileUrlGeneratorInterface
    */
   protected $fileUrlGenerator;
 
@@ -153,7 +157,7 @@ class AnimatedGifImageFormatterTest extends FieldKernelTestBase {
     // Generate the render array to verify markup.
     $build = $this->display->build($entity);
 
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = $this->container->get('renderer');
 
     $output = $renderer->renderRoot($build[$this->fieldName][0]);
@@ -162,7 +166,7 @@ class AnimatedGifImageFormatterTest extends FieldKernelTestBase {
     $output = $renderer->renderRoot($build[$this->fieldName][1]);
     $this->assertStringNotContainsString($this->fileUrlGenerator->transformRelative($this->fileUrlGenerator->generateString($notAnimatedGifFile->getFileUri())), (string) $output);
 
-    /** @var \Drupal\image\ImageStyleInterface $image_style */
+    /** @var ImageStyleInterface $image_style */
     $image_style = $this->entityTypeManager
       ->getStorage('image_style')
       ->load('medium');
diff --git a/tests/src/Traits/AnimatedGifTestTrait.php b/tests/src/Traits/AnimatedGifTestTrait.php
index 96542d1..f383843 100644
--- a/tests/src/Traits/AnimatedGifTestTrait.php
+++ b/tests/src/Traits/AnimatedGifTestTrait.php
@@ -4,6 +4,10 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\animated_gif\Traits;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Extension\ModuleExtensionList;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\file\FileInterface;
 
@@ -15,14 +19,14 @@ trait AnimatedGifTestTrait {
   /**
    * File system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -31,7 +35,7 @@ trait AnimatedGifTestTrait {
    *
    * Currently no interface to rely on.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;
 
@@ -43,10 +47,10 @@ trait AnimatedGifTestTrait {
    * @param string $fileUri
    *   The Uri of the file.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   Return a file.
    */
   protected function getTestFile(string $fileName, string $fileUri): FileInterface {
