themes/contrib/seaside_admin/includes/bootstrap.inc
themes/contrib/seaside_admin/includes/seaside_admin.inc
themes/contrib/seaside_admin/includes/theme-settings-general.inc
themes/contrib/seaside_admin/seaside_admin.theme
themes/contrib/seaside_admin/theme-settings.php

3 files with changes
====================

1) themes/contrib/seaside_admin/seaside_admin.theme:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\node\NodeInterface;
 /**
  * @file
  * Functions to support theming in the Seaside theme.
@@ @@
  * Changes vertical tabs to container and adds meta information.
  */
 function seaside_admin_form_node_form_alter(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   $node = $form_state->getFormObject()->getEntity();

   $form['#theme'] = array('node_edit_form');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) themes/contrib/seaside_admin/includes/seaside_admin.inc:5

    ---------- begin diff ----------
@@ @@
  */

 global $_seaside_admin_path_to_core;
-$_seaside_admin_path_to_core = drupal_get_path('theme', 'seaside_admin');
+$_seaside_admin_path_to_core = \Drupal::service('extension.list.theme')->getPath('seaside_admin');

 /**
  * Get theme functionalities.
@@ @@
   if ($addprefix) {
     $ret = '/';
   }
-  $ret .= drupal_get_path('theme', $theme_key) . '/static/';
+  $ret .= \Drupal::service('extension.list.theme')->getPath($theme_key) . '/static/';
   return $ret;
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


3) themes/contrib/seaside_admin/includes/bootstrap.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\node\Entity\Node;
 use Drupal\Core\Form\FormStateInterface;
 /**
  * @file
@@ @@
  *   The name of the template being rendered ("node" in this case.)
  */
 function seaside_admin_preprocess_node(array &$variables, $hook) {
-  /** @var \Drupal\node\Entity\Node $node */
+  /** @var Node $node */
   $node = $variables['node'];
   $function = __FUNCTION__ . '_' . $node->bundle();
   if (function_exists($function)) {
@@ @@

         if(!$user->get('user_picture')->isEmpty()) {
           $pic_uri = $user->get('user_picture')->entity->getFileUri();
-          $pic_url = file_create_url($pic_uri);
+          $pic_url = \Drupal::service('file_url_generator')->generateAbsoluteString($pic_uri);

           $image_source = $pic_url;
         }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

