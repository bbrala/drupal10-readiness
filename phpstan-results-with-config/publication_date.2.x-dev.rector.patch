diff --git a/publication_date.module b/publication_date.module
index 4e953d4..b612afd 100755
--- a/publication_date.module
+++ b/publication_date.module
@@ -22,7 +22,7 @@ define('PUBLICATION_DATE_DEFAULT', 2147483647);
 /**
  * Implements hook_entity_base_field_info().
  *
- * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+ * @param EntityTypeInterface $entity_type
  *
  * @return array
  */
diff --git a/publication_date.tokens.inc b/publication_date.tokens.inc
index 6b1ec1a..097baff 100644
--- a/publication_date.tokens.inc
+++ b/publication_date.tokens.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\node\NodeInterface;
 /**
  * @file
  * Builds placeholder replacement tokens for node-related data.
@@ -36,7 +37,7 @@ function publication_date_tokens($type, $tokens, array $data, array $options, Bu
   $replacements = [];
 
   if ($type == 'node' && !empty($data['node'])) {
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = $data['node'];
 
     foreach ($tokens as $name => $original) {
diff --git a/src/PublishedAtOrNowComputed.php b/src/PublishedAtOrNowComputed.php
index c9ddffd..13c3e20 100644
--- a/src/PublishedAtOrNowComputed.php
+++ b/src/PublishedAtOrNowComputed.php
@@ -2,12 +2,13 @@
 
 namespace Drupal\publication_date;
 
+use Drupal\Core\Field\FieldItemInterface;
 use Drupal\Core\TypedData\TypedData;
 
 class PublishedAtOrNowComputed extends TypedData {
 
   public function getValue() {
-    /** @var \Drupal\Core\Field\FieldItemInterface $item */
+    /** @var FieldItemInterface $item */
     $item = $this->getParent();
     $value = $item->{($this->definition->getSetting('source'))};
     if ($value && $value != PUBLICATION_DATE_DEFAULT) {
diff --git a/tests/src/Functional/PublicationDateNodeFormTest.php b/tests/src/Functional/PublicationDateNodeFormTest.php
index 8e08783..1dd3a54 100644
--- a/tests/src/Functional/PublicationDateNodeFormTest.php
+++ b/tests/src/Functional/PublicationDateNodeFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\publication_date\Functional;
 
+use Drupal\Tests\node\Traits\ContentTypeCreationTrait;
 use Drupal\Core\Field\Entity\BaseFieldOverride;
 use Drupal\Core\Url;
 use Drupal\field\Entity\FieldConfig;
@@ -15,7 +16,7 @@ use Drupal\Tests\BrowserTestBase;
  */
 class PublicationDateNodeFormTest extends BrowserTestBase {
 
-  use \Drupal\Tests\node\Traits\ContentTypeCreationTrait;
+  use ContentTypeCreationTrait;
 
   /**
    * Modules to enable.
@@ -30,7 +31,7 @@ class PublicationDateNodeFormTest extends BrowserTestBase {
    */
   protected $defaultTheme = 'stark';
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Unpublished by default.
diff --git a/tests/src/Functional/PublicationDatePreExistingContentTest.php b/tests/src/Functional/PublicationDatePreExistingContentTest.php
index edd618f..890ae74 100644
--- a/tests/src/Functional/PublicationDatePreExistingContentTest.php
+++ b/tests/src/Functional/PublicationDatePreExistingContentTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\publication_date\Functional;
 
+use Drupal\Tests\node\Traits\ContentTypeCreationTrait;
+use Drupal\node\NodeInterface;
 use Drupal\Core\Field\Entity\BaseFieldOverride;
 use Drupal\Core\Url;
 use Drupal\field\Entity\FieldConfig;
@@ -16,7 +18,7 @@ use Drupal\Tests\BrowserTestBase;
  */
 class PublicationDatePreExistingContentTest extends BrowserTestBase {
 
-  use \Drupal\Tests\node\Traits\ContentTypeCreationTrait;
+  use ContentTypeCreationTrait;
 
   /**
    * Modules to enable.
@@ -30,7 +32,7 @@ class PublicationDatePreExistingContentTest extends BrowserTestBase {
    */
   protected $defaultTheme = 'stark';
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Unpublished by default.
@@ -56,7 +58,7 @@ class PublicationDatePreExistingContentTest extends BrowserTestBase {
 
   public function testWithExistingContent() {
     // Unpublished by default
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = Node::create(['type' => 'test1', 'title' => $this->randomString()]);
     $node->save();
 
@@ -66,11 +68,11 @@ class PublicationDatePreExistingContentTest extends BrowserTestBase {
     $node = Node::load($node->id());
     $node->save();
 
-    $this->assertEqual($node->published_at->value, PUBLICATION_DATE_DEFAULT);
+    $this->assertEquals($node->published_at->value, PUBLICATION_DATE_DEFAULT);
     $node->setPublished()->save();
 
     $this->assertNotNull($node->published_at->value);
-    $this->assertNotEqual($node->published_at->value, PUBLICATION_DATE_DEFAULT);
+    $this->assertNotEquals($node->published_at->value, PUBLICATION_DATE_DEFAULT);
   }
 
 }
