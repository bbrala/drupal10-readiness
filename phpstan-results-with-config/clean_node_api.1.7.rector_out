modules/contrib/clean_node_api/clean_node_api.module
modules/contrib/clean_node_api/src/Controller/Helper/Fields.php
modules/contrib/clean_node_api/src/Controller/Helper/MainHelper.php
modules/contrib/clean_node_api/src/Controller/Node.php

3 files with changes
====================

1) modules/contrib/clean_node_api/src/Controller/Node.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * Get node id and returns clean node values .
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node information .
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The response information .
    */
   public function getNode(NodeInterface $node): JsonResponse {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/clean_node_api/src/Controller/Helper/MainHelper.php:20

    ---------- begin diff ----------
@@ @@
    * @param string $statusMessage
    *   Return in $statusMessage.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The response information .
    */
   public static function returnDataInJson($body, $message, $statusCode, $statusMessage): JsonResponse {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/clean_node_api/src/Controller/Helper/Fields.php:255

    ---------- begin diff ----------
@@ @@
   /**
    * Params.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node Param.
    * @param string $fieldType
    *   FieldType Param.
@@ @@
           $entityData[] = [
             'fid' => (int) $entity->id(),
             'filename' => $entity->filename->value,
-            'uri' => file_url_transform_relative(file_create_url($entity->getFileUri())),
+            'uri' => \Drupal::service('file_url_generator')->generateString($entity->getFileUri()),
           ];
         }
       }
@@ @@
             'width' => (int) $id['width'],
             'height' => (int) $id['height'],
             'filename' => $entity->filename->value,
-            'uri' => file_url_transform_relative(file_create_url($entity->getFileUri())),
+            'uri' => \Drupal::service('file_url_generator')->generateString($entity->getFileUri()),
           ];
         }
       }
@@ @@
   /**
    * Param.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node param.
    * @param string $fieldType
    *   FieldType Param.
@@ @@
   /**
    * Reference Control .
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node interface.
    * @param string $key
    *   Key Param.
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 3 files have been changed by Rector                                       

