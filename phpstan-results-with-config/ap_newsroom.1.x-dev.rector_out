modules/contrib/ap_newsroom/modules/ap_newsroom_clone/ap_newsroom_clone.module
modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/ApDashboardService.php
modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/Controller/ApDashboardController.php
modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/Controller/ApNewsroomCloneController.php
modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/Entity/FeedCloneEntityFormBuilder.php
modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/Form/ApFeedsSearchForm.php
modules/contrib/ap_newsroom/src/ApNewsroomAccount.php
modules/contrib/ap_newsroom/src/ApNewsroomApi.php
modules/contrib/ap_newsroom/src/ApNewsroomContent.php
modules/contrib/ap_newsroom/src/Form/ApNewsroomConfigForm.php

9 files with changes
====================

1) modules/contrib/ap_newsroom/src/ApNewsroomContent.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The Config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Logger Factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $loggerFactory;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * SearchAndFeedHandler constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   Logger factory service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Messenger service.
    * @param ApNewsroomApi $apNewsroomApi
    *   ApNewsroomApi service.
@@ @@
   /**
    * D.I.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container.
    *
    * @return static
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/ap_newsroom/src/ApNewsroomApi.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The Config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Logger Factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $loggerFactory;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * SearchAndFeedHandler constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   Logger factory service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Messenger Service.
-   * @param \GuzzleHttp\Client $httpClient
+   * @param Client $httpClient
    *   Http client service.
    */
   public function __construct(
@@ @@
   /**
    * D.I.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container.
    *
    * @return static
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/ap_newsroom/src/ApNewsroomAccount.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The Config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Logger Factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $loggerFactory;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * SearchAndFeedHandler constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   Logger factory service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Messenger service.
    * @param ApNewsroomApi $apNewsroomApi
    *   ApNewsroomApi service.
@@ @@
   /**
    * D.I.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container.
    *
    * @return static
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/Form/ApFeedsSearchForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ap_newsroom_clone\Form;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\ap_newsroom\ApNewsroomContent;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * ApDashboardService.
    *
-   * @var \Drupal\ap_newsroom_clone\ApDashboardService
+   * @var ApDashboardService
    */
   protected $apDashboardService;

@@ @@
   /**
    * ApNewsroomContent.
    *
-   * @var \Drupal\ap_newsroom\ApNewsroomContent
+   * @var ApNewsroomContent
    */
   protected $apNewsroomContent;

@@ @@
   /**
    * Class constructor.
    *
-   * @param \Drupal\ap_newsroom_clone\ApDashboardService $apDashboardService
+   * @param ApDashboardService $apDashboardService
    *   ApDashboardService.
-   * @param \Drupal\ap_newsroom\ApNewsroomContent $apNewsroomContent
+   * @param ApNewsroomContent $apNewsroomContent
    *   ApNewsroomContent.
    */
   public function __construct(ApDashboardService $apDashboardService, ApNewsroomContent $apNewsroomContent) {
@@ @@
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form stage object.
    *
    * @return mixed
    *   Return search result.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getApNewsSearchResult(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/Entity/FeedCloneEntityFormBuilder.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The Config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * FeedCloneEntityFormBuilder constructor.
    *
-   * @param \Drupal\Core\Form\FormBuilderInterface $formBuilder
+   * @param FormBuilderInterface $formBuilder
    *   Form builder.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/Controller/ApNewsroomCloneController.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The entity form builder.
    *
-   * @var \Drupal\ap_newsroom_clone\Entity\FeedCloneEntityFormBuilder
+   * @var FeedCloneEntityFormBuilder
    */
   protected $feedCloneEntityFormBuilder;

@@ @@
   /**
    * XML feed content.
    *
-   * @var \Drupal\ap_newsroom_clone\ApDashboardService
+   * @var ApDashboardService
    */
   protected $apNewsroomService;

@@ @@
   /**
    * Logger Factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $loggerFactory;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a NodeController object.
    *
-   * @param \Drupal\ap_newsroom_clone\Entity\FeedCloneEntityFormBuilder $entity_form_builder
+   * @param FeedCloneEntityFormBuilder $entity_form_builder
    *   The entity form builder.
-   * @param \Drupal\ap_newsroom_clone\ApDashboardService $apNewsroomService
+   * @param ApDashboardService $apNewsroomService
    *   Xml feed data.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   Passing an Instance of logger factory.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(
@@ @@
   /**
    * Retrieves the entity form builder.
    *
-   * @return \Drupal\ap_newsroom_clone\Entity\FeedCloneEntityFormBuilder
+   * @return FeedCloneEntityFormBuilder
    *   The entity form builder.
    */
   protected function entityFormBuilder() {
@@ @@
   /**
    * Retrieves the ApNewsroomService.
    *
-   * @return \Drupal\ap_newsroom_clone\ApDashboardService
+   * @return ApDashboardService
    *   Return ApDashboardService
    */
   protected function getApNewsroomService() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/Controller/ApDashboardController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ap_newsroom_clone\Controller;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\ap_newsroom\ApNewsroomContent;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Logger\LoggerChannelFactory;
@@ @@
   /**
    * Variable used for loading Ap newsroom service.
    *
-   * @var \Drupal\ap_newsroom_clone\ApDashboardService
+   * @var ApDashboardService
    */
   protected $apDashboardService;

@@ @@
   /**
    * Ap Newsroom content service.
    *
-   * @var \Drupal\ap_newsroom\ApNewsroomContent
+   * @var ApNewsroomContent
    */
   protected $apNewsroomContent;

@@ @@
   /**
    * Constructs a NodeController object.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   Passing an Instance of logger factory.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\ap_newsroom_clone\ApDashboardService $apDashboardService
+   * @param ApDashboardService $apDashboardService
    *   Ap dashboard service.
-   * @param \Drupal\ap_newsroom\ApNewsroomContent $apNewsroomContent
+   * @param ApNewsroomContent $apNewsroomContent
    *   Ap newsroom service.
    */
   public function __construct(
@@ @@
    * @param string $page_num
    *   Page number/seq of next/previous page.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Return Ajax command
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function updateData($qt, $page_num) {
     if ($this->apDashboardService->isFeedChecked()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/ap_newsroom/modules/ap_newsroom_clone/src/ApDashboardService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ap_newsroom_clone;

+use Drupal\Core\Entity\EntityBase;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Psr\Http\Message\UriInterface;
 use Drupal\ap_newsroom\ApNewsroomContent;
 use Drupal\Component\Utility\UrlHelper;
@@ @@
   /**
    * The Config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Logger Factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $loggerFactory;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Request stack service object.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Content service.
    *
-   * @var \Drupal\ap_newsroom\ApNewsroomContent
+   * @var ApNewsroomContent
    */
   protected $apNewsroomContent;

@@ @@
   /**
    * Client factory service.
    *
-   * @var \Drupal\Core\Http\ClientFactory
+   * @var ClientFactory
    */
   protected $httpClientFactory;

@@ @@
   /**
    * Date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;

@@ @@
   /**
    * SearchAndFeedHandler constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   Logger factory service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Drupal messenger service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Request stack service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager service.
-   * @param \Drupal\ap_newsroom\ApNewsroomContent $apNewsroomContent
+   * @param ApNewsroomContent $apNewsroomContent
    *   Ap newsroom content service.
-   * @param \Drupal\Core\Http\ClientFactory $httpClientFactory
+   * @param ClientFactory $httpClientFactory
    *   HTTP client factory service.
-   * @param \Drupal\Core\Datetime\DateFormatter $dateFormatter
+   * @param DateFormatter $dateFormatter
    *   Date formatter service.
    */
   public function __construct(
@@ @@
   /**
    * D.I.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container interface object.
    *
    * @return static
@@ @@
    * @param string $entity_type
    *   Entity type to be clone.
    *
-   * @return \Drupal\Core\Entity\EntityBase|\Drupal\Core\Entity\EntityInterface|null
+   * @return EntityBase|EntityInterface|null
    *   Return mapped node object.
    *
    * @throws \exception
@@ @@
    * @param array $singleContentResponse
    *   Single content response to be clone.
    *
-   * @return \Drupal\Core\Entity\EntityBase|\Drupal\Core\Entity\EntityInterface
+   * @return EntityBase|EntityInterface
    *   Return mapped node object.
    */
   public function mapApDataToNode($entity_type, array $singleContentResponse) {
@@ @@
    * @param array $singleContentResponse
    *   Single content response to be clone.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function resolveFieldTypeMapping(&$entity, array $field, array $singleContentResponse) {
     switch ($field['type']) {
@@ @@
         ])->get($image_url);
         $redirected_url = $actual_uri . '&apikey=' . $api_key;
         $data = file_get_contents($redirected_url);
-        $file = file_save_data($data, "public://$item_id.jpeg", FileSystemInterface::EXISTS_REPLACE);
+        $file = \Drupal::service('file.repository')->writeData($data, "public://$item_id.jpeg", FileSystemInterface::EXISTS_REPLACE);
         return [
           'target_id' => $file->id(),
           'alt' => $alt_text,
@@ @@
    * @param array $item_data
    *   Data need to map with field.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function mapParagraphsType(&$entity, array $field, array $item_data) {
     $field_name = $field['id'];
@@ @@
    * @return array
    *   Return table render array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function getTable(array $decodedJsonFeedData) {
     $header = [
@@ @@
    * @return string[]|null
    *   Return clone button render array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function getCloneButton($item_id) {
     $mapping_config = $this->configFactory->getEditable('ap_newsroom_clone.field_mapping');
@@ @@
    * @param string $label
    *   Label of pager link.
    *
-   * @return \Drupal\Core\Link
+   * @return Link
    *   Return links for pager.
    */
   public function getPagerLinks(array $param, $label) {
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/ap_newsroom/modules/ap_newsroom_clone/ap_newsroom_clone.module:55

    ---------- begin diff ----------
@@ @@
  *
  * @param array $form
  *   Form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   For state object.
  */
 function ap_newsroom_clone_save_dashboard_configuration(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 9 files have been changed by Rector                                       

