diff --git a/drupalauth4ssp.module b/drupalauth4ssp.module
index bd889d0..2e4f6e7 100644
--- a/drupalauth4ssp.module
+++ b/drupalauth4ssp.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Session\AccountProxy;
+use Drupal\Core\Form\FormStateInterface;
 /**
  * @file
  * DrupalAuth For simpleSAMLphp module.
@@ -26,7 +28,7 @@ function drupalauth4ssp_user_login($account) {
 /**
  * Set auth cookie for the account.
  *
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   User account.
  *
  * @todo Move to class and depend on SSP config service?
@@ -56,7 +58,7 @@ function drupalauth4ssp_set_user_cookie(AccountInterface $account) {
  * Implements hook_user_logout().
  */
 function drupalauth4ssp_user_logout($account) {
-  /** @var \Drupal\Core\Session\AccountProxy $account */
+  /** @var AccountProxy $account */
   // Get the configuration information from SimpleSAMLphp.
   $ssp_config = _drupalauth4ssp_get_simplesamlphp_config();
 
@@ -147,14 +149,14 @@ function _drupalauth4ssp_get_simplesamlphp_config() {
 /**
  * Implements hook_form_FORM_ID_alter().
  */
-function drupalauth4ssp_form_user_login_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+function drupalauth4ssp_form_user_login_form_alter(&$form, FormStateInterface $form_state) {
   $form['#submit'][] = 'drupalauth4ssp_user_login_submit';
 }
 
 /**
  * Sets redirect upon successful login.
  */
-function drupalauth4ssp_user_login_submit($form, \Drupal\Core\Form\FormStateInterface $form_state) {
+function drupalauth4ssp_user_login_submit($form, FormStateInterface $form_state) {
   // If the ReturnTo URL is present, send the user to the URL.
   $returnTo = \Drupal::request()->query->get('ReturnTo');
   if (!empty($returnTo)) {
diff --git a/src/Config.php b/src/Config.php
index f63eacd..c7626d1 100644
--- a/src/Config.php
+++ b/src/Config.php
@@ -42,7 +42,7 @@ class Config {
   /**
    * Constructs a config object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/src/EventSubscriber/DrupalAuthForSSPSubscriber.php b/src/EventSubscriber/DrupalAuthForSSPSubscriber.php
index 8325069..c5cc866 100644
--- a/src/EventSubscriber/DrupalAuthForSSPSubscriber.php
+++ b/src/EventSubscriber/DrupalAuthForSSPSubscriber.php
@@ -2,12 +2,12 @@
 
 namespace Drupal\drupalauth4ssp\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -18,14 +18,14 @@ class DrupalAuthForSSPSubscriber implements EventSubscriberInterface {
   /**
    * Account proxy.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $accountProxy;
 
   /**
    * Constructs event subscriber.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $account_proxy
+   * @param AccountProxyInterface $account_proxy
    *   Account proxy.
    */
   public function __construct(AccountProxyInterface $account_proxy) {
@@ -35,10 +35,10 @@ class DrupalAuthForSSPSubscriber implements EventSubscriberInterface {
   /**
    * Kernel response event handler.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   Response event.
    */
-  public function checkRedirection(FilterResponseEvent $event) {
+  public function checkRedirection(ResponseEvent $event) {
 
     if ($event->getResponse() instanceof RedirectResponse) {
       $response = $event->getResponse();
