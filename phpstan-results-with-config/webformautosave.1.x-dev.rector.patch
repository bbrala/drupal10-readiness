diff --git a/src/AutosaveHelper.php b/src/AutosaveHelper.php
index 59b8f2b..415990b 100644
--- a/src/AutosaveHelper.php
+++ b/src/AutosaveHelper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webformautosave;
 
+use Drupal\Core\Url;
 use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\webform\WebformSubmissionInterface;
 use Drupal\webform_submission_log\WebformSubmissionLogManager;
@@ -16,7 +17,7 @@ class AutosaveHelper {
   /**
    * The webform submission logger.
    *
-   * @var \Drupal\webform_submission_log\WebformSubmissionLogManager
+   * @var WebformSubmissionLogManager
    *   The webform_submission log manager
    */
   protected $webformSubmissionLogManager;
@@ -24,7 +25,7 @@ class AutosaveHelper {
   /**
    * AutosaveHelper constructor.
    *
-   * @param \Drupal\webform_submission_log\WebformSubmissionLogManager $webform_submission_log_manager
+   * @param WebformSubmissionLogManager $webform_submission_log_manager
    *   The webform_submission log manager.
    */
   public function __construct(WebformSubmissionLogManager $webform_submission_log_manager) {
@@ -34,10 +35,10 @@ class AutosaveHelper {
   /**
    * Getter for the most recent submission url.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   A webform_submission.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The url for the most recent submission.
    */
   public function getSubmissionUrl(WebformSubmissionInterface $webform_submission) {
@@ -54,7 +55,7 @@ class AutosaveHelper {
   /**
    * Getter for the most recent submission log.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   A webform_submission.
    *
    * @return object
@@ -90,7 +91,7 @@ class AutosaveHelper {
   /**
    * Getter for all the fields on the current page.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   A webform_submission.
    *
    * @return array|bool
@@ -113,7 +114,7 @@ class AutosaveHelper {
   /**
    * Getter for the first field on the current page.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   A webform_submission.
    *
    * @return string|bool
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index bd1526d..f746623 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\webformautosave\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -29,7 +30,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/WebformAutosaveThirdPartySettingsTest.php b/tests/src/Functional/WebformAutosaveThirdPartySettingsTest.php
index 682fba6..4d8c5f5 100644
--- a/tests/src/Functional/WebformAutosaveThirdPartySettingsTest.php
+++ b/tests/src/Functional/WebformAutosaveThirdPartySettingsTest.php
@@ -56,26 +56,28 @@ class WebformAutosaveThirdPartySettingsTest extends WebformBrowserTestBase {
 
     // Check 'Contact: Settings' shows 'Third party settings'.
     $this->drupalGet('/admin/structure/webform/manage/contact/settings');
-    $this->assertRaw('Third party settings');
+    $this->assertSession()->responseContains('Third party settings');
+    $this->drupalGet('/admin/structure/webform/manage/contact/settings');
 
     // Check 'Contact: Settings: Third party' auto save.
-    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', [], 'Save');
+    $this->submitForm([], 'Save');
 
     // Check webformautosave (custom) third party setting.
     $webform = $this->reloadWebform('contact');
     $this->assertTrue($webform->getThirdPartySetting('webformautosave', 'auto_save'));
-    $this->assertEqual(5000, $webform->getThirdPartySetting('webformautosave', 'auto_save_time'));
+    $this->assertEquals(5000, $webform->getThirdPartySetting('webformautosave', 'auto_save_time'));
 
     // Check 'Contact: Settings: Third party' auto save.
     $edit = [
       'third_party_settings[webformautosave][auto_save_time]' => 10000,
     ];
-    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', $edit, 'Save');
+    $this->drupalGet('/admin/structure/webform/manage/contact/settings');
+    $this->submitForm($edit, 'Save');
 
     // Check webformautosave (custom) third party setting.
     $webform = $this->reloadWebform('contact');
     $this->assertTrue($webform->getThirdPartySetting('webformautosave', 'auto_save'));
-    $this->assertEqual(10000, $webform->getThirdPartySetting('webformautosave', 'auto_save_time'));
+    $this->assertEquals(10000, $webform->getThirdPartySetting('webformautosave', 'auto_save_time'));
   }
 
 }
diff --git a/webformautosave.module b/webformautosave.module
index 27879d0..32deefb 100644
--- a/webformautosave.module
+++ b/webformautosave.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\webform\WebformSubmissionForm;
+use Drupal\webform\WebformSubmissionInterface;
+use Drupal\webformautosave\AutosaveHelper;
 /**
  * @file
  * Contains webformautosave.module.
@@ -28,7 +31,7 @@ function webformautosave_help($route_name, RouteMatchInterface $route_match) {
  * Implements hook_webform_third_party_settings_form_alter().
  */
 function webformautosave_webform_third_party_settings_form_alter(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\webform\WebformInterface $webform */
+  /** @var WebformInterface $webform */
   $webform = $form_state->getFormObject()->getEntity();
 
   $form['third_party_settings']['webformautosave'] = [
@@ -64,16 +67,16 @@ function webformautosave_webform_third_party_settings_form_alter(array &$form, F
  * Implements hook_webform_submission_form_alter() for all webforms.
  */
 function webformautosave_webform_submission_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\webform\WebformSubmissionForm $form_object */
+  /** @var WebformSubmissionForm $form_object */
   $form_object = $form_state->getFormObject();
-  /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
+  /** @var WebformSubmissionInterface $webform_submission */
   $webform_submission = $form_object->getEntity();
   $webform = $webform_submission->getWebform();
   // Get webform auto-save settings.
   $autosave_enabled = $webform->getThirdPartySetting('webformautosave', 'auto_save');
   $autosave_time = $webform->getThirdPartySetting('webformautosave', 'auto_save_time');
   $optimistic_locking = $webform->getThirdPartySetting('webformautosave', 'optimistic_locking');
-  /** @var \Drupal\webformautosave\AutosaveHelper $autosave_helper */
+  /** @var AutosaveHelper $autosave_helper */
   $autosave_helper = Drupal::service('webformautosave.helper');
 
   // Auto create draft if purging is enabled and it has not been created yet.
@@ -164,16 +167,16 @@ function webformautosave_ajax_handler(array &$form, FormStateInterface $form_sta
  *
  * @param array $form
  *   The form we are validating.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   A form_state for the form we are validating.
  */
 function optimistic_locking_validate(array $form, FormStateInterface $form_state) {
   // Load the submission.
-  /** @var \Drupal\webform\WebformSubmissionForm $form_object */
+  /** @var WebformSubmissionForm $form_object */
   $form_object = $form_state->getFormObject();
-  /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
+  /** @var WebformSubmissionInterface $webform_submission */
   $webform_submission = $form_object->getEntity();
-  /** @var \Drupal\webformautosave\AutosaveHelper $autosave_helper */
+  /** @var AutosaveHelper $autosave_helper */
   $autosave_helper = \Drupal::service('webformautosave.helper');
   // Get the time we have stored.
   $stored_time = $form_state->get('optimistic_timestamp_' . $webform_submission->getToken());
@@ -182,7 +185,7 @@ function optimistic_locking_validate(array $form, FormStateInterface $form_state
   $last_change_time = $log->timestamp;
   // Check if the form has been changed.
   if (isset($stored_time) && $last_change_time > $stored_time) {
-    /** @var \Drupal\webformautosave\AutosaveHelper $autosave_helper */
+    /** @var AutosaveHelper $autosave_helper */
     $autosave_helper = Drupal::service('webformautosave.helper');
     // Build our submission URL.
     $submission_url = $autosave_helper->getSubmissionUrl($webform_submission);
