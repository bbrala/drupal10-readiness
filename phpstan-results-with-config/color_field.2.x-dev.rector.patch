diff --git a/color_field.info.yml b/color_field.info.yml
index 14a21f5..72064db 100644
--- a/color_field.info.yml
+++ b/color_field.info.yml
@@ -1,8 +1,7 @@
 name: Color Field
 type: module
 description: 'Provides a color field type to store the color value and opacity.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Field types
 dependencies:
   - drupal:field
diff --git a/color_field.module b/color_field.module
index 5cfe548..95a0caa 100644
--- a/color_field.module
+++ b/color_field.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\color_field\Plugin\Field\FieldType\ColorFieldType;
 /**
  * @file
  * A color field with a custom color picker using the Field Types API.
@@ -147,7 +148,7 @@ function color_field_token_info() {
 function color_field_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
   $replacements = [];
   if ($type === 'color_field' && !empty($data['color_field'])) {
-    /** @var \Drupal\color_field\Plugin\Field\FieldType\ColorFieldType $color_field */
+    /** @var ColorFieldType $color_field */
     $color_field = $data['color_field'];
     $color_hex = new ColorHex($color_field->color, $color_field->opacity);
     foreach ($tokens as $name => $original) {
diff --git a/color_field.post_update.php b/color_field.post_update.php
index fc0b8d9..5b72ac8 100644
--- a/color_field.post_update.php
+++ b/color_field.post_update.php
@@ -11,7 +11,7 @@ use Drupal\Core\Entity\Entity\EntityFormDisplay;
  * Update spectrum widget configuration to allow multiple palettes.
  */
 function color_field_post_update_spectrum_palette() {
-  /** @var \Drupal\Core\Entity\Entity\EntityFormDisplay $entity_form_display */
+  /** @var EntityFormDisplay $entity_form_display */
   foreach (EntityFormDisplay::loadMultiple() as $entity_form_display) {
     $changed = FALSE;
     foreach ($entity_form_display->getComponents() as $name => $options) {
diff --git a/composer.json b/composer.json
index 0c1eae8..a6d38f3 100644
--- a/composer.json
+++ b/composer.json
@@ -1,7 +1,7 @@
 {
   "name": "drupal/color_field",
   "require": {
-    "drupal/core": "^8 || ^9"
+    "drupal/core": "^9.1 || ^10"
   },
   "require-dev": {
     "drupal/token": "~1.3",
diff --git a/src/ColorInterface.php b/src/ColorInterface.php
index ad3fc6a..95b81d1 100644
--- a/src/ColorInterface.php
+++ b/src/ColorInterface.php
@@ -18,7 +18,7 @@ interface ColorInterface {
   /**
    * Get the color as a hex instance.
    *
-   * @return \Drupal\color_field\ColorHex
+   * @return ColorHex
    *   The color as a hex instance.
    */
   public function toHex();
@@ -26,7 +26,7 @@ interface ColorInterface {
   /**
    * Get the color as a RGB instance.
    *
-   * @return \Drupal\color_field\ColorRGB
+   * @return ColorRGB
    *   The color as a RGB instance.
    */
   public function toRgb();
@@ -34,7 +34,7 @@ interface ColorInterface {
   /**
    * Get the color as a HSL instance.
    *
-   * @return \Drupal\color_field\ColorHSL
+   * @return ColorHSL
    *   The color as a HSL instance.
    */
   public function toHsl();
diff --git a/src/Plugin/Field/FieldFormatter/ColorFieldFormatterCss.php b/src/Plugin/Field/FieldFormatter/ColorFieldFormatterCss.php
index 004a8f1..41f80fa 100644
--- a/src/Plugin/Field/FieldFormatter/ColorFieldFormatterCss.php
+++ b/src/Plugin/Field/FieldFormatter/ColorFieldFormatterCss.php
@@ -46,7 +46,7 @@ class ColorFieldFormatterCss extends FormatterBase implements ContainerFactoryPl
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -56,7 +56,7 @@ class ColorFieldFormatterCss extends FormatterBase implements ContainerFactoryPl
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Utility\Token $token_service
+   * @param Token $token_service
    *   The token service.
    * @param \Drupal\token\TokenEntityMapperInterface $token_entity_mapper
    *   Optional token entity mapper service.
diff --git a/src/Plugin/Field/FieldFormatter/ColorFieldFormatterSwatchOptions.php b/src/Plugin/Field/FieldFormatter/ColorFieldFormatterSwatchOptions.php
index f65a156..d6eaf90 100644
--- a/src/Plugin/Field/FieldFormatter/ColorFieldFormatterSwatchOptions.php
+++ b/src/Plugin/Field/FieldFormatter/ColorFieldFormatterSwatchOptions.php
@@ -61,7 +61,7 @@ class ColorFieldFormatterSwatchOptions extends ColorFieldFormatterSwatch {
   /**
    * Return the raw field value.
    *
-   * @param \Drupal\color_field\Plugin\Field\FieldType\ColorFieldType $item
+   * @param ColorFieldType $item
    *   The color field item.
    *
    * @return string
diff --git a/src/Plugin/Field/FieldWidget/ColorFieldWidgetBox.php b/src/Plugin/Field/FieldWidget/ColorFieldWidgetBox.php
index 8263e29..92ac769 100644
--- a/src/Plugin/Field/FieldWidget/ColorFieldWidgetBox.php
+++ b/src/Plugin/Field/FieldWidget/ColorFieldWidgetBox.php
@@ -55,7 +55,7 @@ class ColorFieldWidgetBox extends ColorFieldWidgetBase {
    *
    * @param array $element
    *   The Default colors element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function settingsColorValidate(array $element, FormStateInterface $form_state) {
diff --git a/tests/src/Functional/ColorFieldFormatterTest.php b/tests/src/Functional/ColorFieldFormatterTest.php
index 8d8c4d6..add8e9b 100644
--- a/tests/src/Functional/ColorFieldFormatterTest.php
+++ b/tests/src/Functional/ColorFieldFormatterTest.php
@@ -44,7 +44,7 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
       'field_color[0][opacity]' => 1,
     ];
 
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('#E70000 1</div>');
 
     // Ensure alternate hex format works.
@@ -62,8 +62,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
         'opacity' => FALSE,
       ],
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('#FF8C00</div>');
 
     // Test rgba Render mode.
@@ -80,8 +81,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
         'opacity' => TRUE,
       ],
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('rgba(255,239,0,0.9)');
 
     // Test RGB render mode.
@@ -98,8 +100,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
         'opacity' => FALSE,
       ],
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('rgb(0,129,31)');
   }
 
@@ -126,8 +129,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
       'field_color[0][color]' => "#0044FF",
       'field_color[0][opacity]' => 0.9,
     ];
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('background-color: rgba(0,68,255,0.9)');
     $this->assertSession()->responseContains('color_field__swatch--square');
 
@@ -145,8 +149,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
         'opacity' => FALSE,
       ],
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('background-color: rgb(118,0,137)');
     $this->assertSession()->responseContains('color_field__swatch--circle');
   }
@@ -174,8 +179,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
       'field_color[0][color]' => "#FFF430",
       'field_color[0][opacity]' => 0.9,
     ];
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('body { background-color: rgba(255,244,48,0.9) !important; }');
 
     // Test without opacity and not important.
@@ -195,8 +201,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
       ],
       'label' => 'hidden',
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('body { background-color: rgb(255,255,255); }');
   }
 
diff --git a/tests/src/Functional/ColorFieldFormatterTokenTest.php b/tests/src/Functional/ColorFieldFormatterTokenTest.php
index b89daee..a2ed0cf 100644
--- a/tests/src/Functional/ColorFieldFormatterTokenTest.php
+++ b/tests/src/Functional/ColorFieldFormatterTokenTest.php
@@ -48,8 +48,9 @@ class ColorFieldFormatterTokenTest extends ColorFieldFunctionalTestBase {
       ],
       'label' => 'hidden',
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('.node-article { background-color: rgba(156,89,209,0.95); }');
 
     // Ensure 2 fields on the same entity are both rendered properly.
@@ -87,7 +88,8 @@ class ColorFieldFormatterTokenTest extends ColorFieldFunctionalTestBase {
       'field_text_color[0][color]' => "#000000",
       'field_text_color[0][opacity]' => 1,
     ];
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('.node-article { background-color: rgba(0,0,0,0.1); }');
     $this->assertSession()->responseContains('.node-article { color: rgba(0,0,0,1); }');
   }
diff --git a/tests/src/Functional/ColorFieldFunctionalTestBase.php b/tests/src/Functional/ColorFieldFunctionalTestBase.php
index efe1027..0edfa92 100644
--- a/tests/src/Functional/ColorFieldFunctionalTestBase.php
+++ b/tests/src/Functional/ColorFieldFunctionalTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\color_field\Functional;
 
+use Drupal\Core\Entity\Entity\EntityViewDisplay;
+use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -27,14 +29,14 @@ abstract class ColorFieldFunctionalTestBase extends BrowserTestBase {
   /**
    * The Entity View Display for the article node type.
    *
-   * @var \Drupal\Core\Entity\Entity\EntityViewDisplay
+   * @var EntityViewDisplay
    */
   protected $display;
 
   /**
    * The Entity Form Display for the article node type.
    *
-   * @var \Drupal\Core\Entity\Entity\EntityFormDisplay
+   * @var EntityFormDisplay
    */
   protected $form;
 
@@ -46,7 +48,7 @@ abstract class ColorFieldFunctionalTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'article']);
diff --git a/tests/src/Functional/ColorFieldWidgetTest.php b/tests/src/Functional/ColorFieldWidgetTest.php
index fad5bbb..cdcf390 100644
--- a/tests/src/Functional/ColorFieldWidgetTest.php
+++ b/tests/src/Functional/ColorFieldWidgetTest.php
@@ -38,7 +38,7 @@ class ColorFieldWidgetTest extends ColorFieldFunctionalTestBase {
       'field_color[0][opacity]' => 1,
     ];
 
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $session->responseContains('#E70000 1</div>');
   }
 
diff --git a/tests/src/FunctionalJavascript/ColorFieldWidgetJavascriptTests.php b/tests/src/FunctionalJavascript/ColorFieldWidgetJavascriptTests.php
index 024a333..5ade160 100644
--- a/tests/src/FunctionalJavascript/ColorFieldWidgetJavascriptTests.php
+++ b/tests/src/FunctionalJavascript/ColorFieldWidgetJavascriptTests.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\color_field\FunctionalJavascript;
 
+use Drupal\Core\Entity\Entity\EntityViewDisplay;
+use Drupal\Core\Entity\Entity\EntityFormDisplay;
+use Behat\Mink\Element\NodeElement;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
@@ -27,14 +30,14 @@ class ColorFieldWidgetJavascriptTests extends WebDriverTestBase {
   /**
    * The Entity View Display for the article node type.
    *
-   * @var \Drupal\Core\Entity\Entity\EntityViewDisplay
+   * @var EntityViewDisplay
    */
   protected $display;
 
   /**
    * The Entity Form Display for the article node type.
    *
-   * @var \Drupal\Core\Entity\Entity\EntityFormDisplay
+   * @var EntityFormDisplay
    */
   protected $form;
 
@@ -46,7 +49,7 @@ class ColorFieldWidgetJavascriptTests extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'article']);
@@ -132,7 +135,7 @@ class ColorFieldWidgetJavascriptTests extends WebDriverTestBase {
     $boxes = $page->findAll('css', '#color-field-field-color button');
     $this->assertEquals(8, count($boxes));
 
-    /** @var \Behat\Mink\Element\NodeElement $box */
+    /** @var NodeElement $box */
     $box = $boxes[0];
     $this->assertEquals('#007749', $box->getAttribute('color'));
 
diff --git a/tests/src/Kernel/ColorFieldTypeTest.php b/tests/src/Kernel/ColorFieldTypeTest.php
index 7b5f109..20aaa40 100644
--- a/tests/src/Kernel/ColorFieldTypeTest.php
+++ b/tests/src/Kernel/ColorFieldTypeTest.php
@@ -26,7 +26,7 @@ class ColorFieldTypeTest extends FieldKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a color field storage and field for validation.
