diff --git a/src/Form/TmgmtCdtCartForm.php b/src/Form/TmgmtCdtCartForm.php
index 26b35b3..56612db 100644
--- a/src/Form/TmgmtCdtCartForm.php
+++ b/src/Form/TmgmtCdtCartForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tmgmt_cdt\Form;
 
+use Drupal\tmgmt\JobItemInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
@@ -93,7 +94,7 @@ class TmgmtCdtCartForm extends CartForm
         $job = tmgmt_job_create(\Drupal::languageManager()->getDefaultLanguage()->getId(), 'multiple', $this->currentUser()->id());
         $job_empty = true;
 
-        /** @var \Drupal\tmgmt\JobItemInterface $job_item */
+        /** @var JobItemInterface $job_item */
         foreach (TmgmtCdtJobItem::loadMultiple(array_filter($form_state->getValue('items'))) as $job_item) {
             try {
 
diff --git a/src/Form/TmgmtCdtCartItemForm.php b/src/Form/TmgmtCdtCartItemForm.php
index f117be2..abbea33 100644
--- a/src/Form/TmgmtCdtCartItemForm.php
+++ b/src/Form/TmgmtCdtCartItemForm.php
@@ -125,8 +125,8 @@ class TmgmtCdtCartItemForm extends FormBase
      *
      * @todo Mention in the api documentation that the char '|' is not allowed in
      * field names.
-     *
-     * @param \Drupal\Core\Form\FormStateInterface $form_state
+     *
+     * @param FormStateInterface $form_state
      *   The current state of the form.
      * @param array $data
      *   Flattened array of translation data items.
@@ -135,7 +135,7 @@ class TmgmtCdtCartItemForm extends FormBase
      *
      * @return array|NULL
      *   Render array with the form element, or NULL if the text is not set.
-     */
+     */
     public function selectableFormElement(FormStateInterface &$form_state, $data, $parent_key)
     {
         $element = null;
@@ -223,13 +223,13 @@ class TmgmtCdtCartItemForm extends FormBase
      * @param array $data_item
      *   The data item.
      * @param int $rows
-     *   The number of rows that should be displayed.
-     * @param \Drupal\Core\Form\FormStateInterface $form_state
+     *   The number of rows that should be displayed.
+     * @param FormStateInterface $form_state
      *   The form state.
      *
      * @return array
      *   The form element for the data item.
-     */
+     */
     protected function buildSource($item_element, $source_text, $data_item, $rows, FormStateInterface $form_state)
     {
 
diff --git a/src/Plugin/tmgmt/Translator/TmgmtCdtTranslator.php b/src/Plugin/tmgmt/Translator/TmgmtCdtTranslator.php
index 8d3434d..0e1b97e 100644
--- a/src/Plugin/tmgmt/Translator/TmgmtCdtTranslator.php
+++ b/src/Plugin/tmgmt/Translator/TmgmtCdtTranslator.php
@@ -139,12 +139,12 @@ class TmgmtCdtTranslator extends TranslatorPluginBase implements ContainerFactor
 
             $directory = 'public://tmgmt_file';
             \Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
-            $file = file_save_data($file_content, "public://tmgmt_file/$file_name", FileSystemInterface::EXISTS_REPLACE);
+            $file = \Drupal::service('file.repository')->writeData($file_content, "public://tmgmt_file/$file_name", FileSystemInterface::EXISTS_REPLACE);
             if (!$file) {
                 throw new \Exception('Cannot create Xml file');
             }
             \Drupal::service('file.usage')->add($file, 'tmgmt_file', 'tmgmt_job', $job->id());
-            $job->addMessage('XML file created, can be downloaded <a href="@link" download>here</a>.', ['@link' => file_create_url("public://tmgmt_file/$file_name")]);
+            $job->addMessage('XML file created, can be downloaded <a href="@link" download>here</a>.', ['@link' => \Drupal::service('file_url_generator')->generateAbsoluteString("public://tmgmt_file/$file_name")]);
 
             $request_params = $this->generateRequest($job, $file_content);
             $file_content = null;
diff --git a/src/Plugin/tmgmt_cdt/Format/TmgmtCdtXml.php b/src/Plugin/tmgmt_cdt/Format/TmgmtCdtXml.php
index d1d867d..8b45ff4 100644
--- a/src/Plugin/tmgmt_cdt/Format/TmgmtCdtXml.php
+++ b/src/Plugin/tmgmt_cdt/Format/TmgmtCdtXml.php
@@ -23,9 +23,9 @@ class TmgmtCdtXml extends \XMLWriter implements FormatInterface
 
     /**
      * Contains a reference to the currently being exported job.
-     *
-     * @var \Drupal\tmgmt\Entity\Job
-     */
+     *
+     * @var Job
+     */
     protected $job;
 
     /**
diff --git a/src/TmgmtCdtCommands.php b/src/TmgmtCdtCommands.php
index 20f6f2c..36301a0 100644
--- a/src/TmgmtCdtCommands.php
+++ b/src/TmgmtCdtCommands.php
@@ -128,7 +128,7 @@ class TmgmtCdtCommands
         $file_name = 'tmgmt_cdt_report_' . time() . '_' . rand(0, 99999) . '.json';
         $directory = 'public://tmgmt_file';
         \Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
-        $file = file_save_data(Json::encode($report), "public://tmgmt_file/$file_name", FileSystemInterface::EXISTS_REPLACE);
+        $file = \Drupal::service('file.repository')->writeData(Json::encode($report), "public://tmgmt_file/$file_name", FileSystemInterface::EXISTS_REPLACE);
         if (!$file) {
             throw new \Exception('Cannot create file');
         }
@@ -136,7 +136,7 @@ class TmgmtCdtCommands
        // \Drupal::service('file.usage')->delete($file, 'tmgmt_cdt', 'tmgmt_translator', 'tmgmt_cdt');
 
         \Drupal::messenger()->addStatus(t('Report file created, can be downloaded <a href="@link" download>here</a>.',
-            ['@link' => file_create_url("public://tmgmt_file/$file_name")]));
+            ['@link' => \Drupal::service('file_url_generator')->generateAbsoluteString("public://tmgmt_file/$file_name")]));
 
     }
 
diff --git a/src/TmgmtCdtTranslatorUi.php b/src/TmgmtCdtTranslatorUi.php
index 1310726..5f54421 100644
--- a/src/TmgmtCdtTranslatorUi.php
+++ b/src/TmgmtCdtTranslatorUi.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tmgmt_cdt;
 
+use Drupal\tmgmt\TranslatorInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Messenger\MessengerTrait;
@@ -154,9 +155,9 @@ class TmgmtCdtTranslatorUi extends TranslatorPluginUiBase
     public function submitPullTranslations(array $form, FormStateInterface $form_state)
     {
         $this->messenger()->deleteAll();
-        /**
-         * @var \Drupal\tmgmt\TranslatorInterface $translator
-         */
+        /**
+         * @var TranslatorInterface $translator
+         */
         $job = $form_state->getFormObject()->getEntity();
         tmgmt_cdt_pull_translations($job);
 
@@ -193,9 +194,9 @@ class TmgmtCdtTranslatorUi extends TranslatorPluginUiBase
     public function submitAcceptQuotation(array $form, FormStateInterface $form_state)
     {
         $this->messenger()->deleteAll();
-        /**
-         * @var \Drupal\tmgmt\TranslatorInterface $translator
-         */
+        /**
+         * @var TranslatorInterface $translator
+         */
         $job = $form_state->getFormObject()->getEntity();
 
         if (!(bool) $form_state->getValues()['consent']) {
@@ -228,9 +229,9 @@ class TmgmtCdtTranslatorUi extends TranslatorPluginUiBase
     public function submitCancelQuotation(array $form, FormStateInterface $form_state)
     {
         $this->messenger()->deleteAll();
-        /**
-         * @var \Drupal\tmgmt\TranslatorInterface $translator
-         */
+        /**
+         * @var TranslatorInterface $translator
+         */
         $job = $form_state->getFormObject()->getEntity();
 
         if (!(bool) $form_state->getValues()['consent']) {
@@ -528,9 +529,9 @@ class TmgmtCdtTranslatorUi extends TranslatorPluginUiBase
 
         parent::validateConfigurationForm($form, $form_state);
 
-        /**
-         * @var \Drupal\tmgmt\TranslatorInterface $translator
-         */
+        /**
+         * @var TranslatorInterface $translator
+         */
         $translator = $form_state->getFormObject()->getEntity();
 
         $this->messenger()->deleteAll();
diff --git a/tmgmt_cdt.info.yml b/tmgmt_cdt.info.yml
index 3647bd7..241e44f 100644
--- a/tmgmt_cdt.info.yml
+++ b/tmgmt_cdt.info.yml
@@ -1,10 +1,10 @@
-name: Translation Centre (CdT)
-description: Translation Centre For the Bodies of the EU https://cdt.europa.eu - Translator for TMGMT.
-package: Translation Management
-type: module
-core_version_requirement: ^8.8 || ^9
-php: 7.3
-dependencies:
-  - tmgmt:tmgmt
-  - tmgmt:tmgmt_file
+name: Translation Centre (CdT)
+description: Translation Centre For the Bodies of the EU https://cdt.europa.eu - Translator for TMGMT.
+package: Translation Management
+type: module
+core_version_requirement: ^9.3 || ^10
+php: 7.3
+dependencies:
+  - tmgmt:tmgmt
+  - tmgmt:tmgmt_file
 configure: entity.tmgmt_translator.collection
\ No newline at end of file
diff --git a/tmgmt_cdt.install b/tmgmt_cdt.install
index 2527854..03737cc 100644
--- a/tmgmt_cdt.install
+++ b/tmgmt_cdt.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Config\Entity\ConfigEntityStorage;
+use Drupal\views\Entity\View;
 /**
  * @file
  * Install.
@@ -27,7 +29,7 @@ function tmgmt_cdt_install()
     $serviceSchema->addIndex('tmgmt_job', 'tmgmt_job_field__cdt_correlation_id__index', ['cdt_correlation_id'], $spec);
     $serviceSchema->addIndex('tmgmt_job', 'tmgmt_job_field__cdt_request_identifier__index', ['cdt_request_identifier'], $spec);
 
-    /** @var \Drupal\Core\Config\Entity\ConfigEntityStorage $storage */
+    /** @var ConfigEntityStorage $storage */
     $storage = \Drupal::entityTypeManager()->getStorage('view');
 
     // Jobs.
@@ -65,7 +67,7 @@ function tmgmt_cdt_install()
     $fileStorage = new FileStorage($path);
 
     $config = $fileStorage->read('views.view.tmgmt_job_overview');
-    /** @var \Drupal\views\Entity\View $view */
+    /** @var View $view */
     $view = $storage->create($config);
     if ($view) {
         $view->enable();
@@ -74,7 +76,7 @@ function tmgmt_cdt_install()
 
     // Job items.
     $config = $fileStorage->read('views.view.tmgmt_job_items');
-    /** @var \Drupal\views\Entity\View $view */
+    /** @var View $view */
     $view = $storage->create($config);
     if ($view) {
         $view->enable();
@@ -83,8 +85,7 @@ function tmgmt_cdt_install()
 
     // All job items.
     $config = $fileStorage->read('views.view.tmgmt_translation_all_job_items');
-    /** @var \Drupal\views\Entity\View $view */
-
+    /** @var View $view */
     $view = $storage->create($config);
     if ($view) {
         $view->enable();
@@ -101,7 +102,7 @@ function tmgmt_cdt_uninstall()
 
     \Drupal::state()->deleteMultiple(array_keys(TmgmtCdtHelper::defaultOptions()));
 
-    /** @var \Drupal\Core\Config\Entity\ConfigEntityStorage $storage */
+    /** @var ConfigEntityStorage $storage */
     $storage = \Drupal::entityTypeManager()->getStorage('view');
 
     // restore Views from TMGMT
