diff --git a/src/VegasPathService.php b/src/VegasPathService.php
index 80b61c1..9b39e7d 100644
--- a/src/VegasPathService.php
+++ b/src/VegasPathService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vegas;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\path_alias\AliasManagerInterface;
 use Drupal\Core\Path\PathMatcherInterface;
@@ -18,29 +19,28 @@ class VegasPathService {
   /**
    * Provides an interface for URL path matchers.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * Find an alias for a path and vice versa.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * Defines the immutable configuration object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
-
   protected $config;
 
   /**
    * Provides a helper class to determine whether the route is an admin one.
    *
-   * @var \Drupal\Core\Routing\AdminContext
+   * @var AdminContext
    */
   protected $adminContext;
 
@@ -61,13 +61,13 @@ class VegasPathService {
   /**
    * Constructs a new vegas service.
    *
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   Patch matcher services for comparing the halloween patterns.
-   * @param \Drupal\path_alias\AliasManagerInterface $alias_manager
+   * @param AliasManagerInterface $alias_manager
    *   Alias manager so we can also test path aliases.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory so we can get the halloween settings.
-   * @param \Drupal\Core\Routing\AdminContext $admin_context
+   * @param AdminContext $admin_context
    *   Determines whether the active route is an admin one.
    */
   public function __construct(PathMatcherInterface $path_matcher, AliasManagerInterface $alias_manager, ConfigFactoryInterface $config_factory, AdminContext $admin_context) {
@@ -88,7 +88,7 @@ class VegasPathService {
   /**
    * This function checks both internal paths and aliased paths.
    *
-   * @param \Drupal\Core\Url $url
+   * @param Url $url
    *   The Url object.
    *
    * @return bool
diff --git a/vegas.module b/vegas.module
index 80e64b0..d9f7b15 100644
--- a/vegas.module
+++ b/vegas.module
@@ -35,13 +35,13 @@ function vegas_page_attachments_alter(array &$attachments) {
           if ($mediafile->getEntityTypeId()) {
             if ($mediafile->bundle() == "image") {
               $mediafileuri = $mediafile->field_media_image->entity->getFileUri();
-              $image_path[] = ['src' => file_url_transform_relative(file_create_url($mediafileuri))];
+              $image_path[] = ['src' => \Drupal::service('file_url_generator')->generateString($mediafileuri)];
             }
             elseif ($mediafile->bundle() == "video") {
               $mediafileuri = $mediafile->field_media_video_file->entity->getFileUri();
               $image_path[] = [
                 "video" => [
-                  'src' => file_url_transform_relative(file_create_url($mediafileuri)),
+                  'src' => \Drupal::service('file_url_generator')->generateString($mediafileuri),
                 ],
                 "loop" => "false",
                 "mute" => "true",
