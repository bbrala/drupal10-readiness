modules/contrib/features_permissions/features_permissions.install
modules/contrib/features_permissions/features_permissions.module
modules/contrib/features_permissions/src/Entity/Permission.php
modules/contrib/features_permissions/src/EventSubscriber/ConfigEventsSubscriber.php
modules/contrib/features_permissions/src/PermissionManager.php
modules/contrib/features_permissions/src/PermissionManagerInterface.php
modules/contrib/features_permissions/tests/src/Kernel/FeaturesCrudTest.php
modules/contrib/features_permissions/tests/src/Kernel/FeaturesPermissionsKernelTestBase.php
modules/contrib/features_permissions/tests/src/Kernel/InstallTest.php
modules/contrib/features_permissions/tests/src/Kernel/PermissionEntityTest.php
modules/contrib/features_permissions/tests/src/Kernel/PermissionManagerTest.php
modules/contrib/features_permissions/tests/src/Kernel/RoleCrudTest.php

5 files with changes
====================

1) modules/contrib/features_permissions/tests/src/Kernel/PermissionManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\features_permissions\Kernel;

+use Drupal\features_permissions\PermissionManagerInterface;
 /**
  * Tests the Permission Manager service.
  *
@@ @@
   /**
    * The Permission Manager service.
    *
-   * @var \Drupal\features_permissions\PermissionManagerInterface
+   * @var PermissionManagerInterface
    */
   protected $permissionManager;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/features_permissions/tests/src/Kernel/FeaturesPermissionsKernelTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\features_permissions\Kernel;

+use Drupal\user\RoleInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\user\Entity\Role;

@@ @@
   /**
    * Test Role A.
    *
-   * @var \Drupal\user\RoleInterface
+   * @var RoleInterface
    */
   protected $roleA;

@@ @@
   /**
    * Test Role B.
    *
-   * @var \Drupal\user\RoleInterface
+   * @var RoleInterface
    */
   protected $roleB;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/features_permissions/src/PermissionManagerInterface.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Syncs permissions from a given role to permission config entities.
    *
-   * @param \Drupal\user\RoleInterface $role
+   * @param RoleInterface $role
    *   A role object.
    * @param string $op
    *   The operation (insert, update, delete).
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/features_permissions/src/PermissionManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\features_permissions;

+use Drupal\Core\Config\Entity\ConfigEntityStorageInterface;
+use Drupal\Core\Config\Entity\ConfigEntityInterface;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\features_permissions\Entity\Permission;
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    * {@inheritdoc}
    */
   public function syncRoleToPermissions(RoleInterface $role, string $op): void {
-    /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface */
+    /** @var ConfigEntityStorageInterface */
     $storage = $this->entityTypeManager->getStorage('user_permission');
     $role_id = $role->id();
     $permissions = $role->getPermissions();
@@ @@
       foreach ($added_permissions as $added_permission) {
         $id = $this->getPermissionMachineNameFromKey($added_permission);
         // Attempt to load permission config entity.
-        /** @var Drupal\Core\Config\Entity\ConfigEntityInterface|NULL */
+        /** @var ConfigEntityInterface|NULL */
         $perm_entity = $storage->load($id);

         // If permission config entity doesn't exist, then create it.
@@ @@
    */
   public function syncPermissionToRoles(string $permission): void {
     $config_name = $this->getPermissionMachineNameFromKey($permission);
-    /** @var \Drupal\Core\Config\ImmutableConfig  */
+    /** @var ImmutableConfig  */
     $config = $this->configFactory->get("$this->configPrefix.$config_name");
     $permission_label = $config->get('label');
     $permission_roles = $config->get('roles');
@@ @@
    * {@inheritdoc}
    */
   public function getPermissionKeyFromMachineName(string $machine_name) {
-    /** @var \Drupal\Core\Config\ImmutableConfig */
+    /** @var ImmutableConfig */
     $config = $this->configFactory->get("$this->configPrefix.$machine_name");
     return $config->get('label');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/features_permissions/src/EventSubscriber/ConfigEventsSubscriber.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The permission manager service.
    *
-   * @var \Drupal\features_permissions\PermissionManagerInterface
+   * @var PermissionManagerInterface
    */
   protected $permissionManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 5 files have been changed by Rector                                       

