diff --git a/photoshelter.info.yml b/photoshelter.info.yml
index 80323ea..628f5bf 100644
--- a/photoshelter.info.yml
+++ b/photoshelter.info.yml
@@ -4,8 +4,7 @@ package: Media
 php: 7.0
 
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
   - drupal:media
diff --git a/src/Form/PhotoShelterConfigForm.php b/src/Form/PhotoShelterConfigForm.php
index 8abcd42..12c7c01 100644
--- a/src/Form/PhotoShelterConfigForm.php
+++ b/src/Form/PhotoShelterConfigForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\photoshelter\Form;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use DateTime;
 use DateTimeZone;
 use Drupal\Core\Form\ConfigFormBase;
@@ -199,7 +201,7 @@ class PhotoShelterConfigForm extends ConfigFormBase {
    * @param FormStateInterface $form_state
    *   The form state object.
    *
-   * @return \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @return Config|ImmutableConfig
    *   The configuration object.
    */
   private function saveConfig(FormStateInterface $form_state) {
diff --git a/src/PhotoShelterService.php b/src/PhotoShelterService.php
index d0d8f7b..b3cd649 100644
--- a/src/PhotoShelterService.php
+++ b/src/PhotoShelterService.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\photoshelter;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use DateTime;
 use DateTimeZone;
 use Drupal\Core\Config\Config;
@@ -84,7 +87,7 @@ class PhotoShelterService {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -268,7 +271,7 @@ class PhotoShelterService {
    * @param bool $update
    *   If update or full sync.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function getData(DateTime $time, $update = FALSE) {
 
@@ -277,7 +280,7 @@ class PhotoShelterService {
       'title' => t('galleries import'),
       'operations' => $operations,
       'finished' => 'photoshelter_sync_finished',
-      'file' => drupal_get_path('module', 'photoshelter') . '/photoshelter.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('photoshelter') . '/photoshelter.batch.inc',
     );
     if ($update) {
       \Drupal::logger('photoshelter')->notice(t('Start photoshelter synchronization of new additions'));
@@ -302,7 +305,7 @@ class PhotoShelterService {
    * @return array
    *   Array of operations for batch or array of data for queue.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function getCollections(DateTime $time, $update, $process) {
     $collections = $this->collections;
@@ -390,7 +393,7 @@ class PhotoShelterService {
    * @return array
    *   Array of operations for batch or array of data for queue.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function curlOneCollection($collectionId, DateTime $time, $update, $process, $parentId = NULL) {
     $endpoint = 'collection/' . $collectionId;
@@ -472,7 +475,7 @@ class PhotoShelterService {
    * @return array
    *   Array of operations for batch or array of data for queue.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function saveOneCollection(array $collection, DateTime $time, $update, $collectionVisibility, $process, $parentId = NULL) {
     $collectionId   = $collection['collection_id'];
@@ -610,7 +613,7 @@ class PhotoShelterService {
    * @param string|null $parentId
    *   Parent collection ID.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function getGallery(array $gallery, DateTime $time, $update, $process, $parentId = NULL) {
     $galleryVisibility  = $gallery['Visibility']['mode'];
@@ -780,7 +783,7 @@ class PhotoShelterService {
         'title' => t('photos import'),
         'operations' => $operations,
         'finished' => 'photoshelter_sync_photo_finished',
-        'file' => drupal_get_path('module', 'photoshelter') . '/photoshelter.batch.inc',
+        'file' => \Drupal::service('extension.list.module')->getPath('photoshelter') . '/photoshelter.batch.inc',
       );
 
       batch_set($batch);
@@ -795,9 +798,9 @@ class PhotoShelterService {
    * @param string $parentVisibility
    *   Parent gallery visibility.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function getPhoto(array $image, $parentVisibility) {
     // Skip if image isn't public.
@@ -980,8 +983,8 @@ class PhotoShelterService {
    * @return bool
    *   True or False.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   private function termExists($name = NULL, $vid = NULL) {
     $properties = [];
@@ -1000,7 +1003,7 @@ class PhotoShelterService {
   /**
    * Update the photoshelter config last synchronization date.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The configuration object.
    * @param bool $isFullSync
    *   If it's a full sync or an update.
