diff --git a/denormalizer.drush.inc b/denormalizer.drush.inc
index 3222749..97ce96a 100755
--- a/denormalizer.drush.inc
+++ b/denormalizer.drush.inc
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Component\Render\FormattableMarkup;
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * @file
  * Denormalizer - Drush Inc.
@@ -13,7 +15,7 @@ use Drupal\denormalizer\Denormalizer;
  * @param array $section
  *   The array section.
  *
- * @return \Drupal\Component\Render\FormattableMarkup|\Drupal\Core\StringTranslation\TranslatableMarkup|mixed|string|null
+ * @return FormattableMarkup|TranslatableMarkup|mixed|string|null
  *   Help string.
  */
 function denormalizer_drush_help(array $section) {
diff --git a/denormalizer.module b/denormalizer.module
index dc4a280..dc0ac0c 100755
--- a/denormalizer.module
+++ b/denormalizer.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\denormalizer\Entity\DenormalizerTableInterface;
+use Drupal\webform\Entity\Webform;
 /**
  * @file
  * Denormalizer - module.
@@ -89,7 +91,7 @@ function denormalizer_get_info() {
   $entity_type_manager = \Drupal::entityTypeManager();
   $denormalizer_tbl_storage = $entity_type_manager->getStorage('denormalizer_table');
 
-  /** @var \Drupal\denormalizer\Entity\DenormalizerTableInterface[] $tables */
+  /** @var DenormalizerTableInterface[] $tables */
   $tables = $denormalizer_tbl_storage->loadByProperties([
     'status' => 1,
     // Only use the non entity for this process.
@@ -538,7 +540,7 @@ function denormalizer_webform_sql_columns($elements) {
  *   The field elements to transform in columns.
  */
 function denormalizer_webform_get_columns($bundles) {
-  $webform = \Drupal\webform\Entity\Webform::load($bundles);
+  $webform = Webform::load($bundles);
   $elements = $webform->getElementsDecoded();
   $columns = [];
   $fieldTypes = [
diff --git a/src/Commands/DenormalizerCommands.php b/src/Commands/DenormalizerCommands.php
index 6da21f7..8e7c30b 100755
--- a/src/Commands/DenormalizerCommands.php
+++ b/src/Commands/DenormalizerCommands.php
@@ -16,23 +16,23 @@ class DenormalizerCommands extends DrushCommands {
   /**
    * The denormalizer manager service.
    *
-   * @var \Drupal\denormalizer\Service\DenormalizerManagerInterface
+   * @var DenormalizerManagerInterface
    */
   protected $denormalizerManager;
 
   /**
    * The schema denormalizer plugin manager.
    *
-   * @var \Drupal\denormalizer\Plugin\Denormalizer\SchemaDenormalizerManager
+   * @var SchemaDenormalizerManager
    */
   protected $schemaDenormalizerManager;
 
   /**
    * Creates a new denormalizer drush command.
    *
-   * @param \Drupal\denormalizer\Service\DenormalizerManagerInterface $denormalizerManager
+   * @param DenormalizerManagerInterface $denormalizerManager
    *   The denormalizer manager service.
-   * @param \Drupal\denormalizer\Plugin\Denormalizer\SchemaDenormalizerManager $schemaDenormalizerManager
+   * @param SchemaDenormalizerManager $schemaDenormalizerManager
    *   The schema denormalizer plugin manager.
    */
   public function __construct(DenormalizerManagerInterface $denormalizerManager, SchemaDenormalizerManager $schemaDenormalizerManager) {
diff --git a/src/Denormalizer.php b/src/Denormalizer.php
index c39842d..0c4e5ae 100755
--- a/src/Denormalizer.php
+++ b/src/Denormalizer.php
@@ -259,13 +259,13 @@ class Denormalizer {
    *
    * @param array $fields
    *   The fields definition to process.
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_info
+   * @param EntityTypeInterface $entity_info
    *   The entity info.
    * @param array $base_fields
    *   The base fields.
    * @param string $denormalizer_view
    *   The view to create.
-   * @param \Drupal\Core\Database\Query\SelectInterface $q
+   * @param SelectInterface $q
    *   The query.
    * @param bool $flag
    *   A flag, whether the bundle is blank or no, this using two different way.
diff --git a/src/Entity/DenormalizerTable.php b/src/Entity/DenormalizerTable.php
index 4b227e9..43fda49 100644
--- a/src/Entity/DenormalizerTable.php
+++ b/src/Entity/DenormalizerTable.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\denormalizer\Entity;
 
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Field\FieldItemInterface;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Core\Database\Connection;
+use Drupal\Core\Field\FieldTypePluginManagerInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -365,7 +370,7 @@ class DenormalizerTable extends ConfigEntityBase implements DenormalizerTableInt
 
     if ($ids) {
       foreach ($ids as $id) {
-        /** @var \Drupal\denormalizer\Entity\DenormalizerTableInterface $dn_table */
+        /** @var DenormalizerTableInterface $dn_table */
         $dn_table = $dn_table_storage->load($id);
         $configuration = $dn_table->getSourceConfiguration();
         if ($configuration['entity_type'] === $entity->getEntityTypeId() && $configuration['bundle'] === $entity->bundle()) {
@@ -440,7 +445,7 @@ class DenormalizerTable extends ConfigEntityBase implements DenormalizerTableInt
    * @return array
    *   The columns schemas.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   private function getDbTableColumnsSchemaForEntityFields() {
     $field_definitions = $this->entityFieldDefinitions();
@@ -455,7 +460,7 @@ class DenormalizerTable extends ConfigEntityBase implements DenormalizerTableInt
 
       $field_type_definition = $this->entityFieldTypeManager()
         ->getDefinition($field_definition->getType());
-      /** @var \Drupal\Core\Field\FieldItemInterface $field_type_class */
+      /** @var FieldItemInterface $field_type_class */
       $field_type_class = $field_type_definition['class'];
       $schemas = $field_type_class::schema($field_definition->getFieldStorageDefinition());
       if (isset($schemas['columns'])) {
@@ -504,7 +509,7 @@ class DenormalizerTable extends ConfigEntityBase implements DenormalizerTableInt
   /**
    * Helper method to instantiate the entity field manager.
    *
-   * @return \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @return EntityFieldManagerInterface
    *   The entity field manager.
    */
   private function entityFieldManager() {
@@ -517,7 +522,7 @@ class DenormalizerTable extends ConfigEntityBase implements DenormalizerTableInt
   /**
    * Helper method to instantiate the database connection.
    *
-   * @return \Drupal\Core\Database\Connection
+   * @return Connection
    *   The database connection.
    */
   private function databaseConnection() {
@@ -538,7 +543,7 @@ class DenormalizerTable extends ConfigEntityBase implements DenormalizerTableInt
   /**
    * Helper method to initialize the filed type plugin manager.
    *
-   * @return \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @return FieldTypePluginManagerInterface
    *   The field type manager.
    */
   private function entityFieldTypeManager() {
diff --git a/src/Form/DenormalizerSettingsForm.php b/src/Form/DenormalizerSettingsForm.php
index 55db78a..c61853e 100755
--- a/src/Form/DenormalizerSettingsForm.php
+++ b/src/Form/DenormalizerSettingsForm.php
@@ -18,25 +18,25 @@ class DenormalizerSettingsForm extends ConfigFormBase {
   /**
    * The schema denormalizer plugin manager.
    *
-   * @var \Drupal\denormalizer\Plugin\Denormalizer\SchemaDenormalizerManager
+   * @var SchemaDenormalizerManager
    */
   protected $schemaDenormalizerManager;
 
   /**
    * The entity bundle service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $bundleInfo;
 
   /**
    * DenormalizerSettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory.
-   * @param \Drupal\denormalizer\Plugin\Denormalizer\SchemaDenormalizerManager $schemaDenormalizerManager
+   * @param SchemaDenormalizerManager $schemaDenormalizerManager
    *   The Schema denormalizer manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundleInfo
+   * @param EntityTypeBundleInfoInterface $bundleInfo
    *   The bundle info.
    */
   public function __construct(ConfigFactoryInterface $configFactory, SchemaDenormalizerManager $schemaDenormalizerManager, EntityTypeBundleInfoInterface $bundleInfo) {
diff --git a/src/Form/DenormalizerTableForm.php b/src/Form/DenormalizerTableForm.php
index 42f220a..d2b8d11 100644
--- a/src/Form/DenormalizerTableForm.php
+++ b/src/Form/DenormalizerTableForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\denormalizer\Form;
 
+use Drupal\Core\Entity\EntityTypeRepositoryInterface;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,7 +20,7 @@ class DenormalizerTableForm extends EntityForm {
    */
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
-    /** @var \Drupal\denormalizer\Entity\DenormalizerTableInterface $table */
+    /** @var DenormalizerTableInterface $table */
     $table = $this->entity;
     $sources = [
       'entity' => $this->t('Entity'),
@@ -110,7 +112,7 @@ class DenormalizerTableForm extends EntityForm {
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     parent::submitForm($form, $form_state);
-    /** @var \Drupal\denormalizer\Entity\DenormalizerTableInterface $table */
+    /** @var DenormalizerTableInterface $table */
     $table = $this->entity;
     $table->setSourceConfiguration($form_state->getValue(['configuration']));
   }
@@ -163,7 +165,7 @@ class DenormalizerTableForm extends EntityForm {
     $sub_form['#suffix'] = '</div>';
 
     if ($source_id === 'entity') {
-      /** @var \Drupal\Core\Entity\EntityTypeRepositoryInterface $entity_type_repository */
+      /** @var EntityTypeRepositoryInterface $entity_type_repository */
       $entity_type_repository = \Drupal::service('entity_type.repository');
       $entity_type = $form_state->getValue(['configuration', 'entity_type'], '');
       if (!$entity_type) {
@@ -327,7 +329,7 @@ class DenormalizerTableForm extends EntityForm {
   /**
    * Helper method to instantiate the entity field manager.
    *
-   * @return \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @return EntityFieldManagerInterface
    *   The entity field manager.
    */
   private function entityFieldManager() {
