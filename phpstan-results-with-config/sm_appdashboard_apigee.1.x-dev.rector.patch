diff --git a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php
index a360916..9ff257d 100644
--- a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php
+++ b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\sm_appdashboard_apigee_rules\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Apigee\Edge\Api\Management\Entity\App;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Appdashboard event for rules module integration.
@@ -20,14 +20,14 @@ class AppdashboardEvent extends Event {
   /**
    * The apigee app entity.
    *
-   * @var \Apigee\Edge\Api\Management\Entity\App
+   * @var App
    */
   protected $appEntity;
 
   /**
    * AppdashboardEvent constructor.
    *
-   * @param \Apigee\Edge\Api\Management\Entity\App $app_entity
+   * @param App $app_entity
    *   The app entity.
    */
   public function __construct(App $app_entity) {
@@ -37,7 +37,7 @@ class AppdashboardEvent extends Event {
   /**
    * Returns the app entity.
    *
-   * @return \Apigee\Edge\Api\Management\Entity\App
+   * @return App
    *   The app details.
    */
   public function geAppEntity() {
diff --git a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php
index 3ec6a1a..a97143d 100644
--- a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php
+++ b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\sm_appdashboard_apigee_rules\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Apigee\Edge\Api\Management\Entity\App;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * AppdashboardStatusApproved event when apps status getting approved.
@@ -20,14 +20,14 @@ class AppdashboardStatusApprovedEvent extends Event {
   /**
    * The apigee app entity.
    *
-   * @var \Apigee\Edge\Api\Management\Entity\App
+   * @var App
    */
   protected $appEntity;
 
   /**
    * AppdashboardEvent constructor.
    *
-   * @param \Apigee\Edge\Api\Management\Entity\App $app_entity
+   * @param App $app_entity
    *   The app entity.
    */
   public function __construct(App $app_entity) {
@@ -37,7 +37,7 @@ class AppdashboardStatusApprovedEvent extends Event {
   /**
    * Returns the app entity.
    *
-   * @return \Apigee\Edge\Api\Management\Entity\App
+   * @return App
    *   The app details.
    */
   public function geAppEntity() {
diff --git a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php
index 7f4215f..9dd6beb 100644
--- a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php
+++ b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\sm_appdashboard_apigee_rules\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Apigee\Edge\Api\Management\Entity\App;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * AppdashboardStatusRevoked event when apps status getting revoked.
@@ -20,14 +20,14 @@ class AppdashboardStatusRevokedEvent extends Event {
   /**
    * The apigee app entity.
    *
-   * @var \Apigee\Edge\Api\Management\Entity\App
+   * @var App
    */
   protected $appEntity;
 
   /**
    * AppdashboardEvent constructor.
    *
-   * @param \Apigee\Edge\Api\Management\Entity\App $app_entity
+   * @param App $app_entity
    *   The app entity.
    */
   public function __construct(App $app_entity) {
@@ -37,7 +37,7 @@ class AppdashboardStatusRevokedEvent extends Event {
   /**
    * Returns the app entity.
    *
-   * @return \Apigee\Edge\Api\Management\Entity\App
+   * @return App
    *   The app details.
    */
   public function geAppEntity() {
diff --git a/src/AppsDashboardStorageService.php b/src/AppsDashboardStorageService.php
index 6906d0c..4540b4a 100644
--- a/src/AppsDashboardStorageService.php
+++ b/src/AppsDashboardStorageService.php
@@ -37,41 +37,41 @@ class AppsDashboardStorageService implements AppsDashboardStorageServiceInterfac
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Extension\ModuleHandlerInterface definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Symfony\Component\HttpFoundation\RequestStack definition.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Drupal\Core\Pager\PagerManagerInterface definition.
    *
-   * @var \Drupal\Core\Pager\PagerManagerInterface
+   * @var PagerManagerInterface
    */
   protected $pagerManager;
 
   /**
    * AppsDashboardStorageService constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The current request object.
-   * @param \Drupal\Core\Pager\PagerManagerInterface $pager_manager
+   * @param PagerManagerInterface $pager_manager
    *   The pager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, RequestStack $request_stack, PagerManagerInterface $pager_manager = NULL) {
diff --git a/src/Controller/AppsDashboardController.php b/src/Controller/AppsDashboardController.php
index 8cffba9..e5dff3b 100644
--- a/src/Controller/AppsDashboardController.php
+++ b/src/Controller/AppsDashboardController.php
@@ -20,7 +20,9 @@ namespace Drupal\sm_appdashboard_apigee\Controller;
  * with this program; if not, write to the Free Software Foundation, Inc.,
  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  */
-
+use Drupal\sm_appdashboard_apigee\AppsDashboardStorageServiceInterface;
+use Drupal\Core\Form\FormBuilder;
+use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Url;
@@ -34,21 +36,21 @@ class AppsDashboardController extends ControllerBase {
   /**
    * AppsDashboardStorageServiceInterface definition.
    *
-   * @var Drupal\sm_appdashboard_apigee\AppsDashboardStorageServiceInterface
+   * @var AppsDashboardStorageServiceInterface
    */
   protected $appsDashboardStorage;
 
   /**
    * The Form Builder.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
diff --git a/src/Form/AppDetailsEditForm.php b/src/Form/AppDetailsEditForm.php
index 6b7007f..4d41f9e 100644
--- a/src/Form/AppDetailsEditForm.php
+++ b/src/Form/AppDetailsEditForm.php
@@ -20,7 +20,13 @@ namespace Drupal\sm_appdashboard_apigee\Form;
  * with this program; if not, write to the Free Software Foundation, Inc.,
  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  */
-
+use Drupal\apigee_edge\SDKConnectorInterface;
+use Drupal\sm_appdashboard_apigee\AppsDashboardStorageServiceInterface;
+use Drupal\Core\Messenger\MessengerInterface;
+use Drupal\apigee_edge\Entity\Controller\DeveloperAppCredentialControllerFactoryInterface;
+use Drupal\apigee_edge_teams\Entity\Controller\TeamAppCredentialControllerFactoryInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Apigee\Edge\Exception\ApiException;
 use Apigee\Edge\Exception\ApiRequestException;
 use Apigee\Edge\Exception\ClientErrorException;
@@ -44,49 +50,49 @@ class AppDetailsEditForm extends FormBase {
   /**
    * The SDK connector service.
    *
-   * @var \Drupal\apigee_edge\SDKConnectorInterface
+   * @var SDKConnectorInterface
    */
   protected $connector;
 
   /**
    * AppsDashboardStorageServiceInterface definition.
    *
-   * @var Drupal\sm_appdashboard_apigee\AppsDashboardStorageServiceInterface
+   * @var AppsDashboardStorageServiceInterface
    */
   protected $appsDashboardStorage;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * DeveloperAppCredentialControllerFactoryInterface definition.
    *
-   * @var \Drupal\apigee_edge\Entity\Controller\DeveloperAppCredentialControllerFactoryInterface
+   * @var DeveloperAppCredentialControllerFactoryInterface
    */
   protected $developerAppCredentialControllerFactory;
 
   /**
    * TeamAppCredentialControllerFactoryInterface definition.
    *
-   * @var \Drupal\apigee_edge_teams\Entity\Controller\TeamAppCredentialControllerFactoryInterface
+   * @var TeamAppCredentialControllerFactoryInterface
    */
   protected $teamAppCredentialControllerFactory;
 
   /**
    * ModuleHandlerInterface definition.
    *
-   * @var Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * EventDispatcherInterface definition.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
@@ -349,16 +355,16 @@ class AppDetailsEditForm extends FormBase {
         $app_entity_id = $form_state->getValue('app_id');
         $app_entity = $this->appsDashboardStorage->getAppDetailsById($app_entity_type, $app_entity_id);
         $status_event_change = new AppdashboardEvent($app_entity);
-        $this->eventDispatcher->dispatch(AppdashboardEvent::APP_STATUS_CHANGE, $status_event_change);
+        $this->eventDispatcher->dispatch($status_event_change, AppdashboardEvent::APP_STATUS_CHANGE);
         // Dispatch event if app status is changed from revoked to approved.
         if ($product_previous_status === 'revoked' && $product_status === 'approved') {
           $event_approved = new AppdashboardStatusApprovedEvent($app_entity);
-          $this->eventDispatcher->dispatch(AppdashboardStatusApprovedEvent::APP_STATUS_APPROVED, $event_approved);
+          $this->eventDispatcher->dispatch($event_approved, AppdashboardStatusApprovedEvent::APP_STATUS_APPROVED);
         }
         // Dispatch event if app status is changed from approved to revoked.
         if ($product_previous_status === 'approved' && $product_status === 'revoked') {
           $event_revoked = new AppdashboardStatusRevokedEvent($app_entity);
-          $this->eventDispatcher->dispatch(AppdashboardStatusRevokedEvent::APP_STATUS_REVOKED, $event_revoked);
+          $this->eventDispatcher->dispatch($event_revoked, AppdashboardStatusRevokedEvent::APP_STATUS_REVOKED);
         }
       }
 
diff --git a/src/Form/AppDetailsSearchForm.php b/src/Form/AppDetailsSearchForm.php
index 46dc8d4..6f9d52c 100644
--- a/src/Form/AppDetailsSearchForm.php
+++ b/src/Form/AppDetailsSearchForm.php
@@ -20,7 +20,7 @@ namespace Drupal\sm_appdashboard_apigee\Form;
  * with this program; if not, write to the Free Software Foundation, Inc.,
  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  */
-
+use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -35,7 +35,7 @@ class AppDetailsSearchForm extends FormBase {
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
diff --git a/tests/src/Unit/Controller/AppsDashboardControllerTest.php b/tests/src/Unit/Controller/AppsDashboardControllerTest.php
index a57ba1d..5f5c0a6 100644
--- a/tests/src/Unit/Controller/AppsDashboardControllerTest.php
+++ b/tests/src/Unit/Controller/AppsDashboardControllerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sm_appdashboard_apigee\Unit\Controller;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\apigee_edge\Entity\DeveloperApp;
 use Drupal\Core\Form\FormBuilder;
 use Drupal\sm_appdashboard_apigee\AppsDashboardStorageService;
@@ -17,38 +18,39 @@ use Symfony\Component\HttpFoundation\RequestStack;
  */
 class AppsDashboardControllerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The AppsDashboardController.
    *
-   * @var \Drupal\sm_appdashboard_apigee\Controller\AppsDashboardController
+   * @var AppsDashboardController
    */
   protected $appsDashboardController;
 
   /**
    * The AppsDashboardStorageService under test.
    *
-   * @var \Drupal\sm_appdashboard_apigee\AppsDashboardStorageService
+   * @var AppsDashboardStorageService
    */
   protected $appsDashboardStorage;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The Form Builder.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->appsDashboardStorage = $this->prophesize(AppsDashboardStorageService::class);
     $this->formBuilder = $this->prophesize(FormBuilder::class);
