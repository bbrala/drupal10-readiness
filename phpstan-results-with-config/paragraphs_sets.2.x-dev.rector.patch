diff --git a/composer.json b/composer.json
index 43bed72..e83572d 100644
--- a/composer.json
+++ b/composer.json
@@ -4,7 +4,7 @@
   "type": "drupal-module",
   "license": "GPL-2.0",
   "require": {
-    "drupal/core": "^8.6 || ^9",
-    "drupal/paragraphs": "~1.3"
+    "drupal/paragraphs": "~1.3",
+    "drupal/core": "^9.3 || ^10"
   }
 }
diff --git a/paragraphs_sets.info.yml b/paragraphs_sets.info.yml
index 22b526e..cce40d6 100644
--- a/paragraphs_sets.info.yml
+++ b/paragraphs_sets.info.yml
@@ -1,8 +1,7 @@
 name: Paragraphs Sets
 type: module
 description: 'Allow adding a set of pre-configured paragraphs.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: entity.paragraphs_set.collection
 package: Paragraphs
 
diff --git a/paragraphs_sets.module b/paragraphs_sets.module
index ae69541..dbdf9b8 100644
--- a/paragraphs_sets.module
+++ b/paragraphs_sets.module
@@ -30,11 +30,11 @@ function paragraphs_sets_theme() {
   return [
     'field_multiple_value_form__paragraphs_sets' => [
       'render element' => 'element',
-      'path' => drupal_get_path('module', 'paragraphs_sets') . '/templates',
+      'path' => \Drupal::service('extension.list.module')->getPath('paragraphs_sets') . '/templates',
     ],
     'paragraphs_sets_add_dialog' => [
       'render element' => 'element',
-      'path' => drupal_get_path('module', 'paragraphs_sets') . '/templates',
+      'path' => \Drupal::service('extension.list.module')->getPath('paragraphs_sets') . '/templates',
     ],
   ];
 }
@@ -140,7 +140,7 @@ function paragraphs_sets_field_widget_third_party_settings_form(WidgetInterface
  * Implements hook_field_widget_multivalue_form_alter().
  */
 function paragraphs_sets_field_widget_multivalue_form_alter(array &$elements, FormStateInterface $form_state, array $context) {
-  /** @var \Drupal\paragraphs\Plugin\Field\FieldWidget\ParagraphsWidget $widget */
+  /** @var ParagraphsWidget $widget */
   $widget = $context['widget'];
   if (!$widget instanceof ParagraphsWidget) {
     return;
@@ -151,7 +151,7 @@ function paragraphs_sets_field_widget_multivalue_form_alter(array &$elements, Fo
   $form = $context['form'];
   $widget_settings = $widget->getSettings();
 
-  /** @var \Drupal\Core\Field\FieldDefinitionInterface $field_definition */
+  /** @var FieldDefinitionInterface $field_definition */
   $field_definition = $items->getFieldDefinition();
   $field_name = $field_definition->getName();
   $field_parents = $form['#parents'];
@@ -559,7 +559,7 @@ function template_preprocess_paragraphs_sets_add_dialog(array &$variables) {
  * @param string $name
  *   Name (ID) of paragraphs set.
  *
- * @return \Drupal\paragraphs_sets\Entity\ParagraphsSet
+ * @return ParagraphsSet
  *   The loaded set or NULL if no set with the given name exists.
  */
 function paragraphs_set_load($name) {
diff --git a/src/Controller/ParagraphsSetListBuilder.php b/src/Controller/ParagraphsSetListBuilder.php
index 548e13b..1de9168 100644
--- a/src/Controller/ParagraphsSetListBuilder.php
+++ b/src/Controller/ParagraphsSetListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\paragraphs_sets\Controller;
 
+use Drupal\field\FieldConfigInterface;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 
@@ -48,7 +49,7 @@ class ParagraphsSetListBuilder extends ConfigEntityListBuilder {
    * {@inheritdoc}
    */
   public function getDefaultOperations(EntityInterface $entity) {
-    /** @var \Drupal\field\FieldConfigInterface $entity */
+    /** @var FieldConfigInterface $entity */
     $operations = parent::getDefaultOperations($entity);
 
     if (isset($operations['edit'])) {
diff --git a/src/Entity/ParagraphsSet.php b/src/Entity/ParagraphsSet.php
index 056f2e9..ee27560 100644
--- a/src/Entity/ParagraphsSet.php
+++ b/src/Entity/ParagraphsSet.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\paragraphs_sets\Entity;
 
+use Drupal\file\FileUsage\FileUsageInterface;
+use Drupal\file\FileInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\paragraphs_sets\ParagraphsSetInterface;
@@ -93,7 +95,7 @@ class ParagraphsSet extends ConfigEntityBase implements ParagraphsSetInterface {
    */
   public function getIconUrl() {
     if ($image = $this->getIconFile()) {
-      return file_create_url($image->getFileUri());
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($image->getFileUri());
     }
 
     return FALSE;
@@ -141,7 +143,7 @@ class ParagraphsSet extends ConfigEntityBase implements ParagraphsSetInterface {
     // Update the file usage for the icon files.
     if (!$update || $this->icon_uuid != $this->original->icon_uuid) {
       // The icon has changed. Update file usage.
-      /** @var \Drupal\file\FileUsage\FileUsageInterface $file_usage */
+      /** @var FileUsageInterface $file_usage */
       $file_usage = \Drupal::service('file.usage');
 
       // Add usage of the new icon file, if it exists. It might not exist, if
@@ -167,7 +169,7 @@ class ParagraphsSet extends ConfigEntityBase implements ParagraphsSetInterface {
    * @param string $uuid
    *   The file entity's UUID.
    *
-   * @return \Drupal\file\FileInterface|null
+   * @return FileInterface|null
    *   The file entity. NULL if the UUID is invalid.
    */
   protected function getFileByUuid($uuid) {
diff --git a/src/Form/ParagraphsSetForm.php b/src/Form/ParagraphsSetForm.php
index b4b75af..57cc2f7 100644
--- a/src/Form/ParagraphsSetForm.php
+++ b/src/Form/ParagraphsSetForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\paragraphs_sets\Form;
 
+use Drupal\paragraphs\ParagraphsTypeInterface;
+use Drupal\paragraphs_sets\ParagraphsSetInterface;
 use Drupal\Component\Serialization\Exception\InvalidDataTypeException;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ -15,7 +17,7 @@ class ParagraphsSetForm extends EntityForm {
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\paragraphs\ParagraphsTypeInterface
+   * @var ParagraphsTypeInterface
    */
   protected $entity;
 
@@ -25,7 +27,7 @@ class ParagraphsSetForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\paragraphs_sets\ParagraphsSetInterface $paragraphs_set */
+    /** @var ParagraphsSetInterface $paragraphs_set */
     $paragraphs_set = $this->entity;
 
     if (!$paragraphs_set->isNew()) {
diff --git a/src/ParagraphsSetInterface.php b/src/ParagraphsSetInterface.php
index 875f57c..73006ee 100644
--- a/src/ParagraphsSetInterface.php
+++ b/src/ParagraphsSetInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\paragraphs_sets;
 
+use Drupal\file\FileInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 
 /**
@@ -12,7 +13,7 @@ interface ParagraphsSetInterface extends ConfigEntityInterface {
   /**
    * Returns the icon file entity.
    *
-   * @return \Drupal\file\FileInterface|bool
+   * @return FileInterface|bool
    *   The icon's file entity or FALSE if icon does not exist.
    */
   public function getIconFile();
diff --git a/src/ParagraphsSets.php b/src/ParagraphsSets.php
index 4261a27..47a3faa 100644
--- a/src/ParagraphsSets.php
+++ b/src/ParagraphsSets.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\paragraphs_sets;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Entity\EntityInterface;
@@ -29,7 +30,7 @@ class ParagraphsSets {
     $results = $query->execute();
     $sets = [];
     foreach ($results as $id) {
-      /** @var \Drupal\Core\Config\ImmutableConfig $config */
+      /** @var ImmutableConfig $config */
       if (($config = $config_factory->get("paragraphs_sets.set.{$id}"))) {
         $data = $config->get();
         // Check that all paragraph types in set are allowed in field.
@@ -71,7 +72,7 @@ class ParagraphsSets {
    *   Form elements to build the selection for.
    * @param array $context
    *   Required context for the set selection.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param string $default
    *   Current selected set.
@@ -80,7 +81,7 @@ class ParagraphsSets {
    *   The form element array.
    */
   public static function buildSelectSetSelection(array $elements, array $context, FormStateInterface $form_state, $default = NULL) {
-    /** @var \Drupal\paragraphs\Plugin\Field\FieldWidget\ParagraphsWidget $widget */
+    /** @var ParagraphsWidget $widget */
     $widget = $context['widget'];
     if (!($widget instanceof ParagraphsWidget)) {
       return [];
@@ -174,7 +175,7 @@ class ParagraphsSets {
    *   The array of #parents where the field lives in the form.
    * @param string $field_name
    *   The field name.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -196,7 +197,7 @@ class ParagraphsSets {
    *   The array of #parents where the widget lives in the form.
    * @param string $field_name
    *   The field name.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $field_state
    *   The array of data to store. See getWidgetState() for the structure and
@@ -272,7 +273,7 @@ class ParagraphsSets {
    *
    * @param array $widget_state
    *   Widget state as reference, so that it can be updated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    * @param array $field_path
    *   Path to paragraph field.
@@ -318,9 +319,9 @@ class ParagraphsSets {
   /**
    * Check if form state is in translation.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
-   * @param \Drupal\Core\Entity\EntityInterface $host
+   * @param EntityInterface $host
    *   The host entity.
    *
    * @return bool
diff --git a/tests/src/Traits/ParagraphsSetsFunctionalTestTrait.php b/tests/src/Traits/ParagraphsSetsFunctionalTestTrait.php
index cbcc8e2..ca20363 100644
--- a/tests/src/Traits/ParagraphsSetsFunctionalTestTrait.php
+++ b/tests/src/Traits/ParagraphsSetsFunctionalTestTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\paragraphs_sets\Traits;
 
+use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Serialization\Yaml;
 use Drupal\paragraphs_sets\Entity\ParagraphsSet;
 use Drupal\Tests\paragraphs\FunctionalJavascript\ParagraphsTestBaseTrait;
@@ -33,7 +34,7 @@ trait ParagraphsSetsFunctionalTestTrait {
   public function addParagraphRefFieldInNodeType(string $paragraphRefFieldName, string $nodeType) {
     $this->addParagraphsField($nodeType, $paragraphRefFieldName, 'node', 'paragraphs');
 
-    /** @var \Drupal\Core\Entity\Entity\EntityFormDisplay $formDisplay */
+    /** @var EntityFormDisplay $formDisplay */
     $formDisplay = \Drupal::service('entity_display.repository')->getFormDisplay('node', $nodeType);
     $displaySettings = $formDisplay->getComponent($paragraphRefFieldName);
     $displaySettings['third_party_settings']['paragraphs_sets']['paragraphs_sets']['use_paragraphs_sets'] = 1;
