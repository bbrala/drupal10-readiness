diff --git a/composer.json b/composer.json
index 9a17c1c..7249853 100644
--- a/composer.json
+++ b/composer.json
@@ -10,6 +10,6 @@
     }
   ],
   "require": {
-    "drupal/core": "^8.8 || ^9.0"
+    "drupal/core": "^8.8 || ^9.0 || ^10"
   }
 }
diff --git a/examples/Plugin/Derivative/EntityPublishedInterfaceLinkProviderDeriver.php b/examples/Plugin/Derivative/EntityPublishedInterfaceLinkProviderDeriver.php
index 647f0dc..8db1ced 100644
--- a/examples/Plugin/Derivative/EntityPublishedInterfaceLinkProviderDeriver.php
+++ b/examples/Plugin/Derivative/EntityPublishedInterfaceLinkProviderDeriver.php
@@ -20,23 +20,23 @@ class EntityPublishedInterfaceLinkProviderDeriver extends DeriverBase implements
   /**
    * The JSON:API resource type repository.
    *
-   * @var \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface
+   * @var ResourceTypeRepositoryInterface
    */
   protected $resourceTypeRepository;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * EntityPublishedLinkProvider constructor.
    *
-   * @param \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface $resource_type_repository
+   * @param ResourceTypeRepositoryInterface $resource_type_repository
    *   The JSON:API resource type repository.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(ResourceTypeRepositoryInterface $resource_type_repository, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/examples/Plugin/Derivative/MutableResourceTypeLinkProviderDeriver.php b/examples/Plugin/Derivative/MutableResourceTypeLinkProviderDeriver.php
index 3f2bcc2..9f6a2bd 100644
--- a/examples/Plugin/Derivative/MutableResourceTypeLinkProviderDeriver.php
+++ b/examples/Plugin/Derivative/MutableResourceTypeLinkProviderDeriver.php
@@ -16,14 +16,14 @@ class MutableResourceTypeLinkProviderDeriver extends DeriverBase implements Cont
   /**
    * The JSON:API resource type repository.
    *
-   * @var \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface
+   * @var ResourceTypeRepositoryInterface
    */
   protected $resourceTypeRepository;
 
   /**
    * MutableResourceTypeLinkProviderDeriver constructor.
    *
-   * @param \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface $resource_type_repository
+   * @param ResourceTypeRepositoryInterface $resource_type_repository
    *   The JSON:API resource type repository.
    */
   public function __construct(ResourceTypeRepositoryInterface $resource_type_repository) {
diff --git a/examples/Plugin/jsonapi_hypermedia/LinkProvider/AuthenticationLinkProvider.php b/examples/Plugin/jsonapi_hypermedia/LinkProvider/AuthenticationLinkProvider.php
index 23e3d37..875f41b 100644
--- a/examples/Plugin/jsonapi_hypermedia/LinkProvider/AuthenticationLinkProvider.php
+++ b/examples/Plugin/jsonapi_hypermedia/LinkProvider/AuthenticationLinkProvider.php
@@ -31,7 +31,7 @@ final class AuthenticationLinkProvider extends LinkProviderBase implements Conta
   /**
    * The current account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
@@ -47,7 +47,7 @@ final class AuthenticationLinkProvider extends LinkProviderBase implements Conta
   /**
    * Sets the current account.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current account.
    */
   public function setCurrentUser(AccountInterface $current_user) {
diff --git a/examples/Plugin/jsonapi_hypermedia/LinkProvider/ResourceObjectEntityLoaderTrait.php b/examples/Plugin/jsonapi_hypermedia/LinkProvider/ResourceObjectEntityLoaderTrait.php
index f0148cc..3386c15 100644
--- a/examples/Plugin/jsonapi_hypermedia/LinkProvider/ResourceObjectEntityLoaderTrait.php
+++ b/examples/Plugin/jsonapi_hypermedia/LinkProvider/ResourceObjectEntityLoaderTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\jsonapi_hypermedia\Plugin\jsonapi_hypermedia\LinkProvider;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\jsonapi\JsonApiResource\ResourceObject;
 
@@ -15,14 +17,14 @@ trait ResourceObjectEntityLoaderTrait {
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Sets the entity repository.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
    */
   protected function setEntityRepository(EntityRepositoryInterface $entity_repository) {
@@ -32,13 +34,13 @@ trait ResourceObjectEntityLoaderTrait {
   /**
    * Gets the entity represented by the given resource object.
    *
-   * @param \Drupal\jsonapi\JsonApiResource\ResourceObject $resource_object
+   * @param ResourceObject $resource_object
    *   The resource object.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The represented entity or NULL if the entity does not exist.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Thrown in case the requested entity type does not support UUIDs.
    */
   public function loadEntityFromResourceObject(ResourceObject $resource_object) {
diff --git a/jsonapi_hypermedia.info.yml b/jsonapi_hypermedia.info.yml
index e08374c..1cfa11f 100644
--- a/jsonapi_hypermedia.info.yml
+++ b/jsonapi_hypermedia.info.yml
@@ -1,7 +1,7 @@
 name: JSON API Hypermedia
 type: module
 description: Complements the JSON API module with Hypermedia as the Engine of Application State
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 package: Web services
 dependencies:
   - drupal:jsonapi
diff --git a/src/AccessRestrictedLink.php b/src/AccessRestrictedLink.php
index 5f20d95..aed9850 100644
--- a/src/AccessRestrictedLink.php
+++ b/src/AccessRestrictedLink.php
@@ -22,7 +22,7 @@ final class AccessRestrictedLink implements CacheableDependencyInterface {
   /**
    * The access result for the link, if one was provided.
    *
-   * @var \Drupal\Core\Access\AccessResultInterface|null
+   * @var AccessResultInterface|null
    */
   protected $accessResult;
 
@@ -36,17 +36,17 @@ final class AccessRestrictedLink implements CacheableDependencyInterface {
   /**
    * AccessRestrictedLink constructor.
    *
-   * @param \Drupal\Core\Access\AccessResultInterface $access_result
+   * @param AccessResultInterface $access_result
    *   An access result.
-   * @param \Drupal\Core\Cache\CacheableDependencyInterface $link_cacheability
+   * @param CacheableDependencyInterface $link_cacheability
    *   (optional) Cacheability of the generated link.
-   * @param \Drupal\Core\Url $target
+   * @param Url $target
    *   (optional) The link URL.
    * @param string $link_relation_type
    *   (optional) The link's relation type.
    * @param array $target_attributes
    *   (optional) The link's target attributes.
-   * @param \Drupal\Core\Url|null $context
+   * @param Url|null $context
    *   (optional) The link's context. NULL if the default context shouldn't be
    *   overridden.
    */
@@ -75,11 +75,11 @@ final class AccessRestrictedLink implements CacheableDependencyInterface {
    * instead of this one does not require as many arguments and therefore does
    * not require the caller to construct a phony URL.
    *
-   * @param \Drupal\Core\Access\AccessResultInterface $access_result
+   * @param AccessResultInterface $access_result
    *   The link access result. This is typically an access result related
    *   to whether the current user is able to follow the link or not. Don't
    *   forget to add cacheability information to the result as necessary.
-   * @param \Drupal\Core\Cache\CacheableDependencyInterface $link_cacheability
+   * @param CacheableDependencyInterface $link_cacheability
    *   The cacheability of the generated link. This is typically cacheability
    *   related to the URL, the link relation types, or the link's target
    *   attributes. For example, a link might use the `hreflang` target
@@ -87,13 +87,13 @@ final class AccessRestrictedLink implements CacheableDependencyInterface {
    *   so the link's cacheability might have a cache context related to the
    *   current language as well as a cache tag that would be invalidated when a
    *   new translation is added.
-   * @param \Drupal\Core\Url $url
+   * @param Url $url
    *   The link URL.
    * @param string $link_relation_type
    *   The link's relation type.
    * @param array $target_attributes
    *   (optional) The link's target attributes.
-   * @param \Drupal\Core\Url $context
+   * @param Url $context
    *   (optional) The link's context. This will override the default link
    *   context via an `anchor` link param. The default context is derived from a
    *   link's location in the response document.
@@ -119,7 +119,7 @@ final class AccessRestrictedLink implements CacheableDependencyInterface {
    * current user might not have sufficient permissions to publish the resource
    * object; this is also a valid reason for creating an inaccessible link.
    *
-   * @param \Drupal\Core\Cache\CacheableDependencyInterface $access_cacheability
+   * @param CacheableDependencyInterface $access_cacheability
    *   The link access cacheability. This is typically an access result related
    *   to whether the current user is able to follow the link or not.
    *
diff --git a/src/LinkProviderInterface.php b/src/LinkProviderInterface.php
index 1919062..03e5058 100644
--- a/src/LinkProviderInterface.php
+++ b/src/LinkProviderInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\jsonapi_hypermedia;
 
+use Drupal\jsonapi\JsonApiResource\JsonApiDocumentTopLevel;
+use Drupal\jsonapi\JsonApiResource\ResourceObject;
+use Drupal\jsonapi\JsonApiResource\Relationship;
 /**
  * Interface LinkProviderInterface.
  *
@@ -28,10 +31,10 @@ interface LinkProviderInterface {
   /**
    * Adds, alters or removes hyperlinks from a link collection.
    *
-   * @param \Drupal\jsonapi\JsonApiResource\JsonApiDocumentTopLevel|\Drupal\jsonapi\JsonApiResource\ResourceObject|\Drupal\jsonapi\JsonApiResource\Relationship $context
+   * @param JsonApiDocumentTopLevel|ResourceObject|Relationship $context
    *   The context object from which links should be generated.
    *
-   * @return \Drupal\jsonapi_hypermedia\AccessRestrictedLink
+   * @return AccessRestrictedLink
    *   A link to be added to the context object. An AccessRestrictedLink
    *   should be returned if the link target may be inaccessible to some users.
    */
diff --git a/src/Normalizer/JsonapiHypermediaImpostor/JsonapiHypermediaLinkCollectionNormalizer.php b/src/Normalizer/JsonapiHypermediaImpostor/JsonapiHypermediaLinkCollectionNormalizer.php
index 98c77fd..2bb2d12 100644
--- a/src/Normalizer/JsonapiHypermediaImpostor/JsonapiHypermediaLinkCollectionNormalizer.php
+++ b/src/Normalizer/JsonapiHypermediaImpostor/JsonapiHypermediaLinkCollectionNormalizer.php
@@ -22,21 +22,21 @@ final class JsonapiHypermediaLinkCollectionNormalizer extends LinkCollectionNorm
   /**
    * The link provider plugin manager service.
    *
-   * @var \Drupal\jsonapi_hypermedia\Plugin\LinkProviderManagerInterface
+   * @var LinkProviderManagerInterface
    */
   protected $linkProviderManager;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Sets the link provider manager service.
    *
-   * @param \Drupal\jsonapi_hypermedia\Plugin\LinkProviderManagerInterface $link_provider_manager
+   * @param LinkProviderManagerInterface $link_provider_manager
    *   The link provider manager.
    */
   public function setLinkProviderManager(LinkProviderManagerInterface $link_provider_manager) {
@@ -46,7 +46,7 @@ final class JsonapiHypermediaLinkCollectionNormalizer extends LinkCollectionNorm
   /**
    * Set the renderer.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function setRenderer(RendererInterface $renderer) {
diff --git a/src/Plugin/LinkProviderManager.php b/src/Plugin/LinkProviderManager.php
index 5b70c41..5b24a02 100644
--- a/src/Plugin/LinkProviderManager.php
+++ b/src/Plugin/LinkProviderManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\jsonapi_hypermedia\Plugin;
 
+use Drupal\Core\Render\Renderer;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ -44,21 +46,21 @@ final class LinkProviderManager extends DefaultPluginManager implements LinkProv
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $currentRouteMatch;
 
   /**
    * The link relation type manager.
    *
-   * @var \Drupal\Core\Http\LinkRelationTypeManager
+   * @var LinkRelationTypeManager
    */
   protected $linkRelationTypeManager;
 
@@ -68,9 +70,9 @@ final class LinkProviderManager extends DefaultPluginManager implements LinkProv
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ -88,7 +90,7 @@ final class LinkProviderManager extends DefaultPluginManager implements LinkProv
   /**
    * Set the current route match.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match.
    */
   public function setCurrentRouteMatch(RouteMatchInterface $route_match) {
@@ -98,7 +100,7 @@ final class LinkProviderManager extends DefaultPluginManager implements LinkProv
   /**
    * Set the link relation type manager.
    *
-   * @param \Drupal\Core\Http\LinkRelationTypeManager $link_relation_type_manager
+   * @param LinkRelationTypeManager $link_relation_type_manager
    *   The link relation type manager.
    */
   public function setLinkRelationTypeManager(LinkRelationTypeManager $link_relation_type_manager) {
@@ -125,12 +127,12 @@ final class LinkProviderManager extends DefaultPluginManager implements LinkProv
   /**
    * Ensures that access cacheability is captured.
    *
-   * @param \Drupal\Core\Cache\CacheableMetadata|null $cacheability
+   * @param CacheableMetadata|null $cacheability
    *   The access related cacheability to be captured or NULL if there is none.
-   * @param \Drupal\jsonapi_hypermedia\AccessRestrictedLink $link
+   * @param AccessRestrictedLink $link
    *   The link for which to ensure access cacheability is captured.
    *
-   * @return \Drupal\jsonapi\JsonApiResource\Link|null
+   * @return Link|null
    *   A JSON:API link or NULL if the given link is not accessible.
    */
   protected function ensureAccess(&$cacheability, AccessRestrictedLink $link) {
@@ -147,15 +149,15 @@ final class LinkProviderManager extends DefaultPluginManager implements LinkProv
   /**
    * Gets a new, validated link.
    *
-   * @param \Drupal\jsonapi\JsonApiResource\Link $link
+   * @param Link $link
    *   The link to validate.
    *
-   * @return \Drupal\jsonapi\JsonApiResource\Link
+   * @return Link
    *   A new, validated link.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *   Thrown if a link relation type plugin is improperly defined.
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if a link relation type plugin could not be found.
    */
   protected function getValidatedLink(Link $link) {
@@ -172,7 +174,7 @@ final class LinkProviderManager extends DefaultPluginManager implements LinkProv
   /**
    * Bubbles access-related cacheability of the link.
    *
-   * @param \Drupal\Core\Cache\CacheableMetadata|null $cacheability
+   * @param CacheableMetadata|null $cacheability
    *   The access related cacheability to be captured or NULL if there is none.
    *
    * @todo: removes this once https://www.drupal.org/project/drupal/issues/3055889 lands.
@@ -194,7 +196,7 @@ final class LinkProviderManager extends DefaultPluginManager implements LinkProv
   /**
    * Gets the context type.
    *
-   * @param \Drupal\jsonapi\JsonApiResource\JsonApiDocumentTopLevel|\Drupal\jsonapi\JsonApiResource\ResourceObject|\Drupal\jsonapi\JsonApiResource\Relationship $context
+   * @param JsonApiDocumentTopLevel|ResourceObject|Relationship $context
    *   The context object from which links should be generated.
    *
    * @return string
@@ -213,7 +215,7 @@ final class LinkProviderManager extends DefaultPluginManager implements LinkProv
   /**
    * Gets the link provider definitions applicable to the given context object.
    *
-   * @param \Drupal\jsonapi\JsonApiResource\JsonApiDocumentTopLevel|\Drupal\jsonapi\JsonApiResource\ResourceObject $context
+   * @param JsonApiDocumentTopLevel|ResourceObject $context
    *   The link context object.
    *
    * @return array
diff --git a/src/Plugin/LinkProviderManagerInterface.php b/src/Plugin/LinkProviderManagerInterface.php
index fcfccfc..f5f9ada 100644
--- a/src/Plugin/LinkProviderManagerInterface.php
+++ b/src/Plugin/LinkProviderManagerInterface.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\jsonapi_hypermedia\Plugin;
 
+use Drupal\jsonapi\JsonApiResource\JsonApiDocumentTopLevel;
+use Drupal\jsonapi\JsonApiResource\ResourceObject;
+use Drupal\jsonapi\JsonApiResource\Relationship;
+use Drupal\jsonapi\JsonApiResource\LinkCollection;
 use Drupal\Component\Plugin\Discovery\CachedDiscoveryInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 
@@ -19,10 +23,10 @@ interface LinkProviderManagerInterface extends PluginManagerInterface, CachedDis
   /**
    * Gets a LinkCollection of 3rd-party links for the given context object.
    *
-   * @param \Drupal\jsonapi\JsonApiResource\JsonApiDocumentTopLevel|\Drupal\jsonapi\JsonApiResource\ResourceObject|\Drupal\jsonapi\JsonApiResource\Relationship $context
+   * @param JsonApiDocumentTopLevel|ResourceObject|Relationship $context
    *   The link context object.
    *
-   * @return \Drupal\jsonapi\JsonApiResource\LinkCollection
+   * @return LinkCollection
    *   The link collection.
    */
   public function getLinkCollection($context);
diff --git a/tests/modules/jsonapi_hypermedia_test_link_providers/src/Plugin/jsonapi_hypermedia/LinkProvider/TestLinkProvider.php b/tests/modules/jsonapi_hypermedia_test_link_providers/src/Plugin/jsonapi_hypermedia/LinkProvider/TestLinkProvider.php
index 4231cd0..94312c6 100644
--- a/tests/modules/jsonapi_hypermedia_test_link_providers/src/Plugin/jsonapi_hypermedia/LinkProvider/TestLinkProvider.php
+++ b/tests/modules/jsonapi_hypermedia_test_link_providers/src/Plugin/jsonapi_hypermedia/LinkProvider/TestLinkProvider.php
@@ -27,7 +27,7 @@ final class TestLinkProvider extends LinkProviderBase implements ContainerFactor
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
@@ -43,7 +43,7 @@ final class TestLinkProvider extends LinkProviderBase implements ContainerFactor
   /**
    * Sets the current account.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
    */
   protected function setCurrentAccount(AccountInterface $account) {
diff --git a/tests/src/Functional/LinkProviderTest.php b/tests/src/Functional/LinkProviderTest.php
index 29d3f02..a808588 100644
--- a/tests/src/Functional/LinkProviderTest.php
+++ b/tests/src/Functional/LinkProviderTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\jsonapi_hypermedia\Functional;
 
+use Drupal\jsonapi_hypermedia\Plugin\LinkProviderManagerInterface;
+use Drupal\Core\State\StateInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Cache\Cache;
@@ -51,21 +53,21 @@ final class LinkProviderTest extends BrowserTestBase {
   /**
    * The link provider manager.
    *
-   * @var \Drupal\jsonapi_hypermedia\Plugin\LinkProviderManagerInterface
+   * @var LinkProviderManagerInterface
    */
   protected $linkManager;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     NodeType::create(['type' => 'article', 'name' => 'Article'])->save();
     $node = Node::create(['type' => 'article', 'title' => 'Test Node']);
diff --git a/tests/src/Kernel/Normalizer/JsonapiHypermediaLinkCollectionNormalizerTest.php b/tests/src/Kernel/Normalizer/JsonapiHypermediaLinkCollectionNormalizerTest.php
index 3b945d2..1b30690 100644
--- a/tests/src/Kernel/Normalizer/JsonapiHypermediaLinkCollectionNormalizerTest.php
+++ b/tests/src/Kernel/Normalizer/JsonapiHypermediaLinkCollectionNormalizerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\jsonapi_hypermedia\Kernel\Normalizer;
 
+use Symfony\Component\Serializer\Normalizer\NormalizerInterface;
 use Drupal\Component\Assertion\Inspector;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Url;
@@ -34,14 +35,14 @@ final class JsonapiHypermediaLinkCollectionNormalizerTest extends KernelTestBase
   /**
    * The normalizer under test.
    *
-   * @var \Symfony\Component\Serializer\Normalizer\NormalizerInterface
+   * @var NormalizerInterface
    */
   protected $normalizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->normalizer = $this->container->get('serializer.normalizer.link_collection.jsonapi');
     $this->normalizer->setSerializer($this->container->get('jsonapi.serializer'));
@@ -129,7 +130,7 @@ final class JsonapiHypermediaLinkCollectionNormalizerTest extends KernelTestBase
     $actual = $this->getNormalization($link_collection);
     $this->assertCount(2, $actual, var_export($actual, TRUE));
     $normalized_keys = array_keys($actual);
-    $this->assert(array_reduce($normalized_keys, function ($bool, $key) {
+    $this->assertTrue(array_reduce($normalized_keys, function ($bool, $key) {
       return $bool ? strpos($key, 'self--') === 0 : FALSE;
     }, TRUE), var_export($actual, TRUE));
     $this->assertSame([
