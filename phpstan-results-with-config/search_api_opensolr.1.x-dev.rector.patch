diff --git a/modules/search_api_opensolr_security/src/Form/SecurityAdminForm.php b/modules/search_api_opensolr_security/src/Form/SecurityAdminForm.php
index dca7bfc..a3d534d 100644
--- a/modules/search_api_opensolr_security/src/Form/SecurityAdminForm.php
+++ b/modules/search_api_opensolr_security/src/Form/SecurityAdminForm.php
@@ -21,14 +21,14 @@ class SecurityAdminForm extends FormBase implements SecurityAdminFormInterface {
   /**
    * The OpenSolr service that manages core security.
    *
-   * @var \Drupal\search_api_opensolr_security\OpenSolrApi\Components\OpenSolrSecurity
+   * @var OpenSolrSecurity
    */
   protected $openSolrSecurity;
 
   /**
    * The OpenSolr service that manages indexes.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex
+   * @var OpenSolrIndex
    */
   protected $openSolrIndex;
 
@@ -42,16 +42,16 @@ class SecurityAdminForm extends FormBase implements SecurityAdminFormInterface {
   /**
    * The search api server entity.
    *
-   * @var \Drupal\search_api\ServerInterface
+   * @var ServerInterface
    */
   protected $searchApiServer;
 
   /**
    * SecurityAdminForm constructor.
    *
-   * @param \Drupal\search_api_opensolr_security\OpenSolrApi\Components\OpenSolrSecurity $openSolrSecurity
+   * @param OpenSolrSecurity $openSolrSecurity
    *   The OpenSolr service that manages core security.
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex $openSolrIndex
+   * @param OpenSolrIndex $openSolrIndex
    *   The OpenSolr service that manages indexes (cores).
    */
   public function __construct(OpenSolrSecurity $openSolrSecurity, OpenSolrIndex $openSolrIndex) {
@@ -299,9 +299,9 @@ class SecurityAdminForm extends FormBase implements SecurityAdminFormInterface {
    * removing the HTTP authentication. Also sets/removes the password and
    * username on the current server.
    *
-   * @param \Drupal\search_api\ServerInterface $server
+   * @param ServerInterface $server
    *   The server entity.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    */
   protected function switchOpenSolrConnector(ServerInterface $server, FormStateInterface $form_state) {
diff --git a/modules/search_api_opensolr_security/src/Form/SecurityAdminFormInterface.php b/modules/search_api_opensolr_security/src/Form/SecurityAdminFormInterface.php
index 7355ee2..54e309c 100644
--- a/modules/search_api_opensolr_security/src/Form/SecurityAdminFormInterface.php
+++ b/modules/search_api_opensolr_security/src/Form/SecurityAdminFormInterface.php
@@ -16,7 +16,7 @@ interface SecurityAdminFormInterface {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addHttpAuth(array &$form, FormStateInterface $form_state);
@@ -26,7 +26,7 @@ interface SecurityAdminFormInterface {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function removeHttpAuth(array &$form, FormStateInterface $form_state);
@@ -36,7 +36,7 @@ interface SecurityAdminFormInterface {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addIpRestriction(array &$form, FormStateInterface $form_state);
@@ -46,7 +46,7 @@ interface SecurityAdminFormInterface {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function removeIpRestrictions(array &$form, FormStateInterface $form_state);
diff --git a/modules/search_api_opensolr_security/src/OpenSolrApi/Components/OpenSolrSecurityInterface.php b/modules/search_api_opensolr_security/src/OpenSolrApi/Components/OpenSolrSecurityInterface.php
index 6a727ca..8a5f327 100644
--- a/modules/search_api_opensolr_security/src/OpenSolrApi/Components/OpenSolrSecurityInterface.php
+++ b/modules/search_api_opensolr_security/src/OpenSolrApi/Components/OpenSolrSecurityInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_opensolr_security\OpenSolrApi\Components;
 
+use Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse;
 /**
  * Provides an interface defining an OpenSolrSecurity component.
  *
@@ -19,7 +20,7 @@ interface OpenSolrSecurityInterface {
    * @param string $password
    *   The HTTP Auth password.
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function updateHttpAuth($coreName, $username, $password);
@@ -30,7 +31,7 @@ interface OpenSolrSecurityInterface {
    * @param string $coreName
    *   The core name (index id).
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function removeHttpAuth($coreName);
@@ -41,7 +42,7 @@ interface OpenSolrSecurityInterface {
    * @param string $coreName
    *   The core name (index id).
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function getIpList($coreName);
@@ -56,7 +57,7 @@ interface OpenSolrSecurityInterface {
    * @param string $handler
    *   The SOLR URI handler that the restriction will be applied to.
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function addIp($coreName, $ip, $handler);
@@ -71,7 +72,7 @@ interface OpenSolrSecurityInterface {
    * @param string $handler
    *   The SOLR URI handler that the restriction will be applied to.
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function removeIp($coreName, $ip, $handler);
diff --git a/modules/search_api_opensolr_security/src/ServerSecurityOperations.php b/modules/search_api_opensolr_security/src/ServerSecurityOperations.php
index d51a1aa..20a2b70 100644
--- a/modules/search_api_opensolr_security/src/ServerSecurityOperations.php
+++ b/modules/search_api_opensolr_security/src/ServerSecurityOperations.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_opensolr_security;
 
+use Drupal\search_api\SearchApiException;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
 use Drupal\search_api\ServerInterface;
@@ -19,13 +20,13 @@ class ServerSecurityOperations {
   /**
    * Reacts on entity operation hook.
    *
-   * @param \Drupal\search_api\ServerInterface $server
+   * @param ServerInterface $server
    *   The newly created server.
    *
    * @return array
    *   Returns an array with the entity operations.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    *
    * @see hook_entity_insert()
    */
diff --git a/src/Access/LocalActionAccessCheck.php b/src/Access/LocalActionAccessCheck.php
index 88ef237..41c4f1a 100644
--- a/src/Access/LocalActionAccessCheck.php
+++ b/src/Access/LocalActionAccessCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_opensolr\Access;
 
+use Drupal\search_api\SearchApiException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -17,16 +18,16 @@ class LocalActionAccessCheck implements AccessInterface {
   /**
    * Checks if the current server backend is an opensolr one.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\search_api\ServerInterface $search_api_server
+   * @param ServerInterface $search_api_server
    *   (optional) The Search API server entity.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   Returns access allowed result if the server is using the opensolr
    *   services, forbidden otherwise.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    */
   public function access(AccountInterface $account, ServerInterface $search_api_server = NULL) {
     if ($this->isOpenSolrServer($search_api_server)) {
diff --git a/src/Form/OpenSolrConfigFilesImport.php b/src/Form/OpenSolrConfigFilesImport.php
index c9bd63d..e734d5b 100644
--- a/src/Form/OpenSolrConfigFilesImport.php
+++ b/src/Form/OpenSolrConfigFilesImport.php
@@ -22,41 +22,41 @@ class OpenSolrConfigFilesImport extends FormBase {
   /**
    * PrivateTempStore service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStore;
 
   /**
    * OpenSolrConfigFiles service.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFiles
+   * @var OpenSolrConfigFiles
    */
   protected $configFiles;
 
   /**
    * EntityTypeManager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * FileSystem service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * OpenSolrConfigFilesImport constructor.
    *
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStoreFactory
+   * @param PrivateTempStoreFactory $privateTempStoreFactory
    *   Private temp store service.
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFiles $configFiles
+   * @param OpenSolrConfigFiles $configFiles
    *   Config files service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager service.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   File system interface.
    */
   public function __construct(PrivateTempStoreFactory $privateTempStoreFactory, OpenSolrConfigFiles $configFiles, EntityTypeManagerInterface $entityTypeManager, FileSystemInterface $fileSystem) {
@@ -170,7 +170,7 @@ class OpenSolrConfigFilesImport extends FormBase {
   /**
    * Remove the updateLog tags from the solr config file.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file object.
    */
   protected function processConfigFile(FileInterface $file) {
diff --git a/src/Form/OpenSolrConfigForm.php b/src/Form/OpenSolrConfigForm.php
index 26d6f84..6dcb56a 100644
--- a/src/Form/OpenSolrConfigForm.php
+++ b/src/Form/OpenSolrConfigForm.php
@@ -21,25 +21,25 @@ class OpenSolrConfigForm extends ConfigFormBase {
   /**
    * OpenSolr Index api component.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex
+   * @var OpenSolrIndex
    */
   protected $searchApiOpensolrClient;
 
   /**
    * The key repository.
    *
-   * @var \Drupal\key\KeyRepositoryInterface
+   * @var KeyRepositoryInterface
    */
   protected $keyRepository;
 
   /**
    * Constructs a new OpenSolrConfigForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex $search_api_opensolr_index
+   * @param OpenSolrIndex $search_api_opensolr_index
    *   The OpenSolr Index client.
-   * @param \Drupal\key\KeyRepositoryInterface $key_repository
+   * @param KeyRepositoryInterface $key_repository
    *   The key repository service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, OpenSolrIndex $search_api_opensolr_index, KeyRepositoryInterface $key_repository) {
diff --git a/src/Form/OpenSolrConfigZipImport.php b/src/Form/OpenSolrConfigZipImport.php
index fda559c..33e1a60 100644
--- a/src/Form/OpenSolrConfigZipImport.php
+++ b/src/Form/OpenSolrConfigZipImport.php
@@ -23,28 +23,28 @@ class OpenSolrConfigZipImport extends FormBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * OpenSolr config files service.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFilesInterface
+   * @var OpenSolrConfigFilesInterface
    */
   protected $configFiles;
 
   /**
    * PrivateTempStore service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStore;
 
   /**
    * FileSystem service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -58,13 +58,13 @@ class OpenSolrConfigZipImport extends FormBase {
   /**
    * OpenSolrConfigZipImport constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager interface.
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFilesInterface $configFiles
+   * @param OpenSolrConfigFilesInterface $configFiles
    *   OpenSolr config files interface.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStoreFactory
+   * @param PrivateTempStoreFactory $privateTempStoreFactory
    *   Private temp store service.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   File system interface.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, OpenSolrConfigFilesInterface $configFiles, PrivateTempStoreFactory $privateTempStoreFactory, FileSystemInterface $fileSystem) {
@@ -153,7 +153,7 @@ class OpenSolrConfigZipImport extends FormBase {
   /**
    * Remove the updateLog tags from the solr config file.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file object.
    */
   protected function processConfigFile(FileInterface $file) {
diff --git a/src/OpenSolrApi/OpenSolrBase.php b/src/OpenSolrApi/OpenSolrBase.php
index c74df8a..5ed858a 100644
--- a/src/OpenSolrApi/OpenSolrBase.php
+++ b/src/OpenSolrApi/OpenSolrBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\search_api_opensolr\OpenSolrApi;
 
+use Psr\Http\Message\ResponseInterface;
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Component\Serialization\Json;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -25,7 +27,7 @@ class OpenSolrBase {
   /**
    * GuzzleHttp client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
@@ -39,27 +41,27 @@ class OpenSolrBase {
   /**
    * The JSON serializer service.
    *
-   * @var \Drupal\Component\Serialization\Json
+   * @var Json
    */
   protected $json;
 
   /**
    * The key repository.
    *
-   * @var \Drupal\key\KeyRepositoryInterface
+   * @var KeyRepositoryInterface
    */
   protected $keyRepository;
 
   /**
    * Constructs a new OpenSolrBase object.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The http client service.
-   * @param \Drupal\Component\Serialization\Json $json
+   * @param Json $json
    *   The json service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\key\KeyRepositoryInterface $key_repository
+   * @param KeyRepositoryInterface $key_repository
    *   The key repository service.
    */
   public function __construct(ClientInterface $http_client, Json $json, ConfigFactoryInterface $config_factory, KeyRepositoryInterface $key_repository) {
@@ -88,10 +90,10 @@ class OpenSolrBase {
    * @param bool $useMultipart
    *   A boolean indicating if we use multipart arguments or not.
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse|mixed|\Psr\Http\Message\ResponseInterface|null
+   * @return OpenSolrResponse|mixed|ResponseInterface|null
    *   Returns the response from the API.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   protected function apiCall($path, $method = 'GET', array $params = [], $returnObject = FALSE, $useMultipart = FALSE) {
     $options = [];
diff --git a/src/OpenSolrApi/OpenSolrException.php b/src/OpenSolrApi/OpenSolrException.php
index 35e30ad..d0afdc5 100644
--- a/src/OpenSolrApi/OpenSolrException.php
+++ b/src/OpenSolrApi/OpenSolrException.php
@@ -15,14 +15,14 @@ class OpenSolrException extends \RuntimeException implements ExceptionInterface
   /**
    * The opensolr response.
    *
-   * @var \Psr\Http\Message\ResponseInterface|null
+   * @var ResponseInterface|null
    */
   protected $response;
 
   /**
    * RestException constructor.
    *
-   * @param \Psr\Http\Message\ResponseInterface|null $response
+   * @param ResponseInterface|null $response
    *   The request response object.
    * @param string $message
    *   A string with the message(s).
@@ -40,7 +40,7 @@ class OpenSolrException extends \RuntimeException implements ExceptionInterface
   /**
    * Gets the response.
    *
-   * @return null|\Psr\Http\Message\ResponseInterface
+   * @return null|ResponseInterface
    *   An Response object if any, null otherwise.
    */
   public function getResponse() {
diff --git a/src/OpenSolrApi/OpenSolrResponse.php b/src/OpenSolrApi/OpenSolrResponse.php
index b556575..91f9770 100644
--- a/src/OpenSolrApi/OpenSolrResponse.php
+++ b/src/OpenSolrApi/OpenSolrResponse.php
@@ -17,7 +17,7 @@ class OpenSolrResponse extends Response {
   /**
    * The original Response used to build this object.
    *
-   * @var \GuzzleHttp\Psr7\Response
+   * @var Response
    * @see __get()
    */
   protected $response;
@@ -33,7 +33,7 @@ class OpenSolrResponse extends Response {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrException
+   * @throws OpenSolrException
    *   If body cannot be json-decoded.
    */
   public function __construct(Response $response) {
@@ -67,7 +67,7 @@ class OpenSolrResponse extends Response {
    *
    * @return $this
    *
-   * @throws \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrException
+   * @throws OpenSolrException
    */
   private function handleJsonResponse() {
     $this->data = '';
diff --git a/src/Plugin/SolrConnector/OpensolrSolrConnector.php b/src/Plugin/SolrConnector/OpensolrSolrConnector.php
index 1d31fef..5dea112 100644
--- a/src/Plugin/SolrConnector/OpensolrSolrConnector.php
+++ b/src/Plugin/SolrConnector/OpensolrSolrConnector.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_opensolr\Plugin\SolrConnector;
 
+use Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Link;
@@ -23,7 +24,7 @@ class OpensolrSolrConnector extends StandardSolrConnector {
   /**
    * A connection to the Solr server.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex
+   * @var OpenSolrIndex
    */
   protected $openSolrIndex;
 
diff --git a/src/ServerOperations.php b/src/ServerOperations.php
index 9edb7d1..0934343 100644
--- a/src/ServerOperations.php
+++ b/src/ServerOperations.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_opensolr;
 
+use Drupal\search_api\SearchApiException;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\search_api\ServerInterface;
@@ -20,23 +21,23 @@ class ServerOperations implements ContainerInjectionInterface {
   /**
    * The opensolr zip manager service.
    *
-   * @var \Drupal\search_api_opensolr\Services\ZipManager
+   * @var ZipManager
    */
   protected $zipManager;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new EntityOperations object.
    *
-   * @param \Drupal\search_api_opensolr\Services\ZipManager $zipManager
+   * @param ZipManager $zipManager
    *   The opensolr zip manager service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ZipManager $zipManager, MessengerInterface $messenger) {
@@ -56,10 +57,10 @@ class ServerOperations implements ContainerInjectionInterface {
   /**
    * Reacts on server insert events.
    *
-   * @param \Drupal\search_api\ServerInterface $server
+   * @param ServerInterface $server
    *   The newly created server.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    *
    * @see hook_entity_insert()
    */
diff --git a/src/Services/ZipManager.php b/src/Services/ZipManager.php
index d900a50..8d2cb0c 100644
--- a/src/Services/ZipManager.php
+++ b/src/Services/ZipManager.php
@@ -25,41 +25,41 @@ class ZipManager {
   /**
    * The OpenSolrConfigFiles service property.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFiles
+   * @var OpenSolrConfigFiles
    */
   protected $configFiles;
 
   /**
    * The FileSystem service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The PrivateTempStore service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStore;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * ZipManager constructor.
    *
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFiles $configFiles
+   * @param OpenSolrConfigFiles $configFiles
    *   OpenSolr config files service.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   File system service.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStoreFactory
+   * @param PrivateTempStoreFactory $privateTempStoreFactory
    *   Private temp store service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(OpenSolrConfigFiles $configFiles, FileSystemInterface $fileSystem, PrivateTempStoreFactory $privateTempStoreFactory, MessengerInterface $messenger) {
@@ -72,10 +72,10 @@ class ZipManager {
   /**
    * Imports the zip automatically when a server is created.
    *
-   * @param \Drupal\search_api\ServerInterface $searchApiServer
+   * @param ServerInterface $searchApiServer
    *   The currently created server.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect user to the server page.
    */
   public function importConfigZip(ServerInterface $searchApiServer) {
diff --git a/src/Traits/OpensolrServerTrait.php b/src/Traits/OpensolrServerTrait.php
index 20355d1..a9dfaf5 100644
--- a/src/Traits/OpensolrServerTrait.php
+++ b/src/Traits/OpensolrServerTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_opensolr\Traits;
 
+use Drupal\search_api\SearchApiException;
 use Drupal\search_api\ServerInterface;
 use Drupal\search_api_solr\SolrBackendInterface;
 
@@ -17,14 +18,14 @@ trait OpensolrServerTrait {
    * are using the solr functionality and we don't have our own type of backend.
    * Future improvement might be needed.
    *
-   * @param \Drupal\search_api\ServerInterface|null $search_api_server
+   * @param ServerInterface|null $search_api_server
    *   The server entity object.
    *
    * @return bool
    *   Returns TRUE if the backend connector has the opensolr key, FALSE
    *   otherwise.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    */
   public function isOpenSolrServer(ServerInterface $search_api_server = NULL) {
     if ($search_api_server && $search_api_server->getBackend() instanceof SolrBackendInterface) {
@@ -37,14 +38,14 @@ trait OpensolrServerTrait {
   /**
    * Gets the index type from an opensolr server.
    *
-   * @param \Drupal\search_api\ServerInterface|null $search_api_server
+   * @param ServerInterface|null $search_api_server
    *   The server entity object.
    *
    * @return bool
    *   Returns -1 for regular index, 0 for cluster and >=1 for replicas.
    *   Returns FALSE if it's not an opensolr server.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    */
   public function getServerIndexType(ServerInterface $search_api_server = NULL) {
     if ($this->isOpenSolrServer($search_api_server)) {
