themes/contrib/spacelift/STARTER/STARTER.theme
themes/contrib/spacelift/inc/spacelift.drush.inc
themes/contrib/spacelift/spacelift.theme

2 files with changes
====================

1) themes/contrib/spacelift/spacelift.theme:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\block\BlockInterface;
+use Drupal\block_content\BlockContentInterface;
+use Drupal\menu_link_content\Entity\MenuLinkContent;
+use Drupal\block\BlockRepositoryInterface;
+use Drupal\Core\Entity\EntityViewBuilderInterface;
 /**
  * @file
  * The main theme file for Spacelift.
@@ @@
  * Implements hook_preprocess_block().
  */
 function spacelift_preprocess_block(&$variables) {
-  /** @var \Drupal\block\BlockInterface $block */
+  /** @var BlockInterface $block */
   $block = Block::load($variables['elements']['#id']);
   $region = $block->getRegion();

@@ @@
   $variables['content']['#attributes']['block'] = $variables['attributes']['id'];

   if ($variables['elements']['#configuration']['provider'] == 'block_content') {
-    /** @var \Drupal\block_content\BlockContentInterface $blockContent */
+    /** @var BlockContentInterface $blockContent */
     $blockContent = $variables['elements']['content']['#block_content'];

     $variables['block_type'] = $blockContent->bundle();
@@ @@
     if (substr_count($parent, ':') >= 2) {
       list(, $type, $uuid) = explode(':', $parent);

-      /** @var \Drupal\menu_link_content\Entity\MenuLinkContent $link */
+      /** @var MenuLinkContent $link */
       $link = \Drupal::getContainer()->get('entity.repository')->loadEntityByUuid($type, $uuid);

       $parentUrl = $link->getUrlObject();
@@ @@
 function spacelift_theme_suggestions_block_alter(array &$suggestions, array $variables) {
   if ($variables['elements']['#base_plugin_id'] == 'menu_block') {
     $block_id = $variables['elements']['#id'];
-    /** @var \Drupal\block\BlockInterface $block */
+    /** @var BlockInterface $block */
     $block = Block::load($block_id);

     $region = $block->getRegion();
@@ @@
  *   The theme regions to include.
  */
 function spacelift_set_interior_regions(array &$variables, array $includedRegions) {
-  /** @var \Drupal\block\BlockRepositoryInterface $blockRepository */
+  /** @var BlockRepositoryInterface $blockRepository */
   $blockRepository = \Drupal::service('block.repository');
-  /** @var \Drupal\Core\Entity\EntityViewBuilderInterface $viewBuilder */
+  /** @var EntityViewBuilderInterface $viewBuilder */
   $viewBuilder = \Drupal::service('entity_type.manager')->getViewBuilder('block');
   $allBlocks = $blockRepository->getVisibleBlocksPerRegion();
   $regions = array_intersect(array_keys($allBlocks), $includedRegions);
@@ @@
   foreach ($blocks as $region => $blockList) {
     /**
      * @var string $blockKey
-     * @var \Drupal\block\BlockInterface $block
+     * @var BlockInterface $block
      */
     foreach ($blockList as $blockKey => $block) {
       $variables[$region][$blockKey] = $viewBuilder->view($block);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) themes/contrib/spacelift/inc/spacelift.drush.inc:80

    ---------- begin diff ----------
@@ @@
   $machine_name = drush_spacelift_generate_machine_name($name, drush_get_option('machine_name'));
   $description = drush_get_option('description');

-  $spacelift_path = drush_get_context('DRUSH_DRUPAL_ROOT') . '/' . drupal_get_path('theme', 'spacelift');
+  $spacelift_path = drush_get_context('DRUSH_DRUPAL_ROOT') . '/' . \Drupal::service('extension.list.theme')->getPath('spacelift');
   $subtheme_path = dirname($spacelift_path) . '/' . $machine_name;

   // Make a fresh copy of the subtheme.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

