diff --git a/src/Adapter/Cache/Cache8.php b/src/Adapter/Cache/Cache8.php
index e4f60c6..5745722 100644
--- a/src/Adapter/Cache/Cache8.php
+++ b/src/Adapter/Cache/Cache8.php
@@ -19,7 +19,7 @@ class Cache8 extends Cache {
   /**
    * The Cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
diff --git a/src/Adapter/Cache/Cache9.php b/src/Adapter/Cache/Cache9.php
index 75349a8..c520718 100644
--- a/src/Adapter/Cache/Cache9.php
+++ b/src/Adapter/Cache/Cache9.php
@@ -19,7 +19,7 @@ class Cache9 extends Cache {
   /**
    * The Cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
diff --git a/src/Adapter/Config/Config6.php b/src/Adapter/Config/Config6.php
index afe05b2..9437ec8 100644
--- a/src/Adapter/Config/Config6.php
+++ b/src/Adapter/Config/Config6.php
@@ -52,7 +52,9 @@ class Config6 extends Config {
    */
   public function delete() {
     global $conf;
-    db_query("DELETE FROM {variable} WHERE name LIKE '%s\_%'", $this->name);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->query("DELETE FROM {variable} WHERE name LIKE '%s\_%'", $this->name);
     cache_clear_all('variables', 'cache');
     foreach (array_keys($conf) as $name) {
       if (strpos($name, $this->name . '_') === 0) {
diff --git a/src/Adapter/Config/Config7.php b/src/Adapter/Config/Config7.php
index 6eed5dd..ed3a0d1 100644
--- a/src/Adapter/Config/Config7.php
+++ b/src/Adapter/Config/Config7.php
@@ -14,7 +14,9 @@ class Config7 extends Config6 {
    */
   public function delete() {
     global $conf;
-    db_delete('variable')->condition('name', $this->name . '_', 'LIKE')->execute();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->delete('variable')->condition('name', $this->name . '_', 'LIKE')->execute();
     cache_clear_all('variables', 'cache_bootstrap');
     foreach (array_keys($conf) as $name) {
       if (strpos($name, $this->name . '_') === 0) {
diff --git a/src/Adapter/Config/Config8.php b/src/Adapter/Config/Config8.php
index 28e7104..3758bdb 100644
--- a/src/Adapter/Config/Config8.php
+++ b/src/Adapter/Config/Config8.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\Config;
 
+use Drupal\Core\Config\ImmutableConfig;
 /**
  * Class Config8.
  *
@@ -12,7 +13,7 @@ class Config8 extends Config {
   /**
    * An ImmutableConfig object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
diff --git a/src/Adapter/Config/Config9.php b/src/Adapter/Config/Config9.php
index b5d0fe8..5debe8d 100644
--- a/src/Adapter/Config/Config9.php
+++ b/src/Adapter/Config/Config9.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\Config;
 
+use Drupal\Core\Config\ImmutableConfig;
 /**
  * Class Config9.
  *
@@ -12,7 +13,7 @@ class Config9 extends Config {
   /**
    * An ImmutableConfig object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
diff --git a/src/Adapter/Core/Core.php b/src/Adapter/Core/Core.php
index e2080ac..d2787d2 100644
--- a/src/Adapter/Core/Core.php
+++ b/src/Adapter/Core/Core.php
@@ -71,7 +71,7 @@ abstract class Core extends VersionedClass {
   /**
    * An array of Cache bins.
    *
-   * @var \Drupal\tag1quo\Adapter\Cache\Cache[]
+   * @var Cache[]
    */
   protected $cacheBins;
 
@@ -85,7 +85,7 @@ abstract class Core extends VersionedClass {
   /**
    * A collection of Config adapters.
    *
-   * @var \Drupal\tag1quo\Adapter\Config\Config[]
+   * @var Config[]
    */
   protected $config;
 
@@ -99,7 +99,7 @@ abstract class Core extends VersionedClass {
   /**
    * An array of Logger adapters.
    *
-   * @var \Drupal\tag1quo\Adapter\Logger\Logger[]
+   * @var Logger[]
    */
   protected $loggers;
 
@@ -146,7 +146,7 @@ abstract class Core extends VersionedClass {
   protected $gitBinary;
 
   /**
-   * @var \Drupal\tag1quo\Adapter\Http\Client
+   * @var Client
    */
   protected $httpClient;
 
@@ -167,14 +167,14 @@ abstract class Core extends VersionedClass {
   /**
    * The Settings adapter.
    *
-   * @var \Drupal\tag1quo\Adapter\Settings\Settings
+   * @var Settings
    */
   protected $settings;
 
   /**
    * The State adapter.
    *
-   * @var \Drupal\tag1quo\Adapter\State\State
+   * @var State
    */
   protected $state;
 
@@ -210,7 +210,7 @@ abstract class Core extends VersionedClass {
    *   The cache bin to use. If not provided, the default bin for the
    *   version of core will be used.
    *
-   * @return \Drupal\tag1quo\Adapter\Cache\Cache
+   * @return Cache
    */
   public function cache($bin = NULL) {
     if ($bin === NULL) {
@@ -239,7 +239,7 @@ abstract class Core extends VersionedClass {
    * @param string $name
    *   A config collection to retrieve.
    *
-   * @return \Drupal\tag1quo\Adapter\Config\Config
+   * @return Config
    */
   public function config($name) {
     if (!isset($this->config[$name])) {
@@ -493,7 +493,9 @@ abstract class Core extends VersionedClass {
   }
 
   public function getPath($type, $name) {
-    return drupal_get_path($type, $name);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    return \Drupal::service('extension.path.resolver')->getPath($type, $name);
   }
 
   /**
@@ -841,6 +843,9 @@ abstract class Core extends VersionedClass {
    * {@inheritdoc}
    */
   public function setMessage($message, $type = 'status', $repeat = TRUE) {
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // This needs to be replaced, but Rector was not yet able to replace this because the type of message was set with a variable. If you need to continue to use a variable, you might consider using a switch statement.
+    // @noRector
     \drupal_set_message($message, $type, $repeat);
     return $this;
   }
@@ -848,7 +853,7 @@ abstract class Core extends VersionedClass {
   /**
    * The Settings adapter.
    *
-   * @return \Drupal\tag1quo\Adapter\Settings\Settings
+   * @return Settings
    */
   public function settings() {
     if ($this->settings === NULL) {
@@ -880,7 +885,7 @@ abstract class Core extends VersionedClass {
   /**
    * The State adapter.
    *
-   * @return \Drupal\tag1quo\Adapter\State\State
+   * @return State
    */
   public function state() {
     if (!isset($this->state)) {
diff --git a/src/Adapter/Core/Core6.php b/src/Adapter/Core/Core6.php
index 7731a4d..1226f98 100644
--- a/src/Adapter/Core/Core6.php
+++ b/src/Adapter/Core/Core6.php
@@ -75,7 +75,9 @@ class Core6 extends Core {
     // We send the entire system table to make it possible to properly match
     // all modules and themes with the proper upstream Drupal projects.
     $extensions = array();
-    $result = db_query('SELECT * FROM {system}');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query('SELECT * FROM {system}');
     while ($item = db_fetch_object($result)) {
       $extension = Extension::create($item->name, $item);
       if ($extension->exists()) {
diff --git a/src/Adapter/Core/Core7.php b/src/Adapter/Core/Core7.php
index 6b94096..9b939a6 100644
--- a/src/Adapter/Core/Core7.php
+++ b/src/Adapter/Core/Core7.php
@@ -64,7 +64,9 @@ class Core7 extends Core {
     // We send the entire system table to make it possible to properly match
     // all modules and themes with the proper upstream Drupal projects.
     $extensions = array();
-    $result = \db_query('SELECT * FROM {system}');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query('SELECT * FROM {system}');
     while ($item = $result->fetchObject()) {
       $extension = Extension::create($item->name, $item);
       if ($extension->exists()) {
diff --git a/src/Adapter/Core/Core8.php b/src/Adapter/Core/Core8.php
index 2eb412b..b5d501b 100644
--- a/src/Adapter/Core/Core8.php
+++ b/src/Adapter/Core/Core8.php
@@ -2,6 +2,14 @@
 
 namespace Drupal\tag1quo\Adapter\Core;
 
+use Drupal\Core\Datetime\DateFormatterInterface;
+use Drupal\Core\Render\ElementInfoManagerInterface;
+use Drupal\Core\File\FileSystemInterface;
+use Drupal\Core\Messenger\MessengerInterface;
+use Drupal\Core\StringTranslation\TranslationInterface;
+use Drupal\Core\Routing\UrlGeneratorInterface;
+use Drupal\Core\Extension\ExtensionList;
+use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\NestedArray;
@@ -32,7 +40,7 @@ class Core8 extends Core {
   protected $compatibility = 8;
 
   /**
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -49,7 +57,7 @@ class Core8 extends Core {
   /**
    * The Element Info service.
    *
-   * @var \Drupal\Core\Render\ElementInfoManagerInterface
+   * @var ElementInfoManagerInterface
    */
   protected $elementInfo;
 
@@ -61,12 +69,12 @@ class Core8 extends Core {
   /**
    * The File System service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -85,14 +93,14 @@ class Core8 extends Core {
   /**
    * The string translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $stringTranslation;
 
   /**
    * The URL Generator service.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
@@ -130,7 +138,7 @@ class Core8 extends Core {
   /**
    * Retrieves the DateFormatter service.
    *
-   * @return \Drupal\Core\Datetime\DateFormatterInterface
+   * @return DateFormatterInterface
    */
   protected function dateFormatter() {
     if ($this->dateFormatter === NULL) {
@@ -178,7 +186,7 @@ class Core8 extends Core {
   /**
    * Retrieves the File System service.
    *
-   * @return \Drupal\Core\File\FileSystemInterface
+   * @return FileSystemInterface
    */
   protected function fileSystem() {
     if ($this->fileSystem === NULL) {
@@ -213,7 +221,7 @@ class Core8 extends Core {
    */
   public function getPath($type, $name) {
     // In 8.6.x, there is a dedicated extension list service.
-    /** @var \Drupal\Core\Extension\ExtensionList $extensionList */
+    /** @var ExtensionList $extensionList */
     if ($extensionList = $this->service('extension.list.' . $type)) {
       return $extensionList->getPath($name);
     }
@@ -223,7 +231,7 @@ class Core8 extends Core {
   /**
    * Gets the string translation service.
    *
-   * @return \Drupal\Core\StringTranslation\TranslationInterface
+   * @return TranslationInterface
    *   The string translation service.
    */
   protected function getStringTranslation() {
@@ -241,7 +249,7 @@ class Core8 extends Core {
     try {
       /** @var \Drupal\markdown\MarkdownInterface $markdown */
       if (\Drupal::moduleHandler()->moduleExists('markdown') && ($markdown = $this->service('markdown'))) {
-        return $markdown->loadPath($path, drupal_get_path('module', 'tag1quo') . '/README.md');
+        return $markdown->loadPath($path, \Drupal::service('extension.list.module')->getPath('tag1quo') . '/README.md');
       }
     }
     catch (\Exception $e) {
@@ -290,7 +298,7 @@ class Core8 extends Core {
   /**
    * Retrieves the Messenger service.
    *
-   * @return \Drupal\Core\Messenger\MessengerInterface
+   * @return MessengerInterface
    */
   protected function messenger() {
     if ($this->messenger === NULL) {
@@ -316,7 +324,7 @@ class Core8 extends Core {
 
   public function publicUri() {
     if ($this->publicUri === NULL) {
-      /** @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager */
+      /** @var StreamWrapperManagerInterface $stream_wrapper_manager */
       $stream_wrapper_manager = $this->service('stream_wrapper_manager');
       $stream_wrapper = $stream_wrapper_manager->getViaScheme('public');
       $this->publicUri = rtrim($stream_wrapper->getExternalUrl(), '/');
@@ -425,7 +433,7 @@ class Core8 extends Core {
   /**
    * Retrieves the URL Generator service.
    *
-   * @return \Drupal\Core\Routing\UrlGeneratorInterface
+   * @return UrlGeneratorInterface
    */
   protected function urlGenerator() {
     if ($this->urlGenerator === NULL) {
diff --git a/src/Adapter/Core/Core9.php b/src/Adapter/Core/Core9.php
index fccb226..e9eec55 100644
--- a/src/Adapter/Core/Core9.php
+++ b/src/Adapter/Core/Core9.php
@@ -2,6 +2,17 @@
 
 namespace Drupal\tag1quo\Adapter\Core;
 
+use Drupal\Core\Datetime\DateFormatterInterface;
+use Drupal\Core\Render\ElementInfoManagerInterface;
+use Drupal\Core\File\FileSystemInterface;
+use Drupal\Core\Messenger\MessengerInterface;
+use Drupal\Core\StringTranslation\TranslationInterface;
+use Drupal\Core\Routing\UrlGeneratorInterface;
+use Drupal\Core\Extension\ModuleExtensionList;
+use Drupal\Core\Extension\ThemeExtensionList;
+use Drupal\Core\GeneratedUrl;
+use Drupal\Core\Extension\ExtensionList;
+use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\NestedArray;
@@ -35,7 +46,7 @@ class Core9 extends Core {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -52,7 +63,7 @@ class Core9 extends Core {
   /**
    * The Element Info service.
    *
-   * @var \Drupal\Core\Render\ElementInfoManagerInterface
+   * @var ElementInfoManagerInterface
    */
   protected $elementInfo;
 
@@ -64,14 +75,14 @@ class Core9 extends Core {
   /**
    * The File System service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -90,28 +101,28 @@ class Core9 extends Core {
   /**
    * The string translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $stringTranslation;
 
   /**
    * The URL Generator service.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
   /**
    * The module extension list.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;
 
   /**
    * The theme extension list.
    *
-   * @var \Drupal\Core\Extension\ThemeExtensionList
+   * @var ThemeExtensionList
    */
   private $themeExtensionList;
 
@@ -121,7 +132,7 @@ class Core9 extends Core {
    * @param string $uri
    *   Absolute or relative URI.
    *
-   * @return \Drupal\Core\GeneratedUrl|string
+   * @return GeneratedUrl|string
    *   The absolute URI.
    */
   public function absoluteUri($uri = '') {
@@ -155,7 +166,7 @@ class Core9 extends Core {
   /**
    * Retrieves the DateFormatter service.
    *
-   * @return \Drupal\Core\Datetime\DateFormatterInterface
+   * @return DateFormatterInterface
    *   The DateFormatter service.
    */
   protected function dateFormatter() {
@@ -195,7 +206,7 @@ class Core9 extends Core {
   /**
    * Retrieves the File System service.
    *
-   * @return \Drupal\Core\File\FileSystemInterface
+   * @return FileSystemInterface
    *   FileSystem service.
    */
   protected function fileSystem() {
@@ -230,7 +241,7 @@ class Core9 extends Core {
    * {@inheritdoc}
    */
   public function getPath($type, $name) {
-    /** @var \Drupal\Core\Extension\ExtensionList $extensionList */
+    /** @var ExtensionList $extensionList */
     $extensionList = $this->service('extension.list.' . $type);
     return $extensionList->getPath($name);
   }
@@ -238,7 +249,7 @@ class Core9 extends Core {
   /**
    * Gets the string translation service.
    *
-   * @return \Drupal\Core\StringTranslation\TranslationInterface
+   * @return TranslationInterface
    *   The string translation service.
    */
   protected function getStringTranslation() {
@@ -256,7 +267,7 @@ class Core9 extends Core {
     try {
       /** @var \Drupal\markdown\MarkdownInterface $markdown */
       if (\Drupal::moduleHandler()->moduleExists('markdown') && ($markdown = $this->service('markdown'))) {
-        return $markdown->loadPath($path, drupal_get_path('module', 'tag1quo') . '/README.md');
+        return $markdown->loadPath($path, \Drupal::service('extension.list.module')->getPath('tag1quo') . '/README.md');
       }
     }
     catch (\Exception $e) {
@@ -305,7 +316,7 @@ class Core9 extends Core {
   /**
    * Returns the messenger.
    *
-   * @return \Drupal\Core\Messenger\MessengerInterface
+   * @return MessengerInterface
    *   The messenger.
    */
   protected function messenger() {
@@ -318,7 +329,7 @@ class Core9 extends Core {
   /**
    * Retrieves the module extension list.
    *
-   * @return \Drupal\Core\Extension\ModuleExtensionList
+   * @return ModuleExtensionList
    *   The module extension list.
    */
   protected function moduleExtensionList() {
@@ -348,7 +359,7 @@ class Core9 extends Core {
    */
   public function publicUri() {
     if ($this->publicUri === NULL) {
-      /** @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager */
+      /** @var StreamWrapperManagerInterface $stream_wrapper_manager */
       $stream_wrapper_manager = $this->service('stream_wrapper_manager');
       $stream_wrapper = $stream_wrapper_manager->getViaScheme('public');
       $this->publicUri = rtrim($stream_wrapper->getExternalUrl(), '/');
@@ -436,7 +447,7 @@ class Core9 extends Core {
   /**
    * Provides a list of available themes.
    *
-   * @return \Drupal\Core\Extension\ThemeExtensionList
+   * @return ThemeExtensionList
    *   The theme extension list.
    */
   protected function themeExtensionList() {
@@ -464,7 +475,7 @@ class Core9 extends Core {
   /**
    * Retrieves the URL Generator service.
    *
-   * @return \Drupal\Core\Routing\UrlGeneratorInterface
+   * @return UrlGeneratorInterface
    *   URL Generator service.
    */
   protected function urlGenerator() {
diff --git a/src/Adapter/Extension/Extension.php b/src/Adapter/Extension/Extension.php
index 8a99b71..eb01ec5 100644
--- a/src/Adapter/Extension/Extension.php
+++ b/src/Adapter/Extension/Extension.php
@@ -15,7 +15,7 @@ class Extension extends VersionedClass {
   /**
    * The Core adapter.
    *
-   * @var \Drupal\tag1quo\Adapter\Core\Core
+   * @var Core
    */
   protected static $core;
 
@@ -126,7 +126,7 @@ class Extension extends VersionedClass {
   /**
    * Retrieves the Core adapter.
    *
-   * @return \Drupal\tag1quo\Adapter\Core\Core
+   * @return Core
    */
   protected function core() {
     if (static::$core === NULL) {
@@ -143,7 +143,9 @@ class Extension extends VersionedClass {
    *   not.
    */
   public function exists() {
-    return (bool) drupal_get_path($this->getType(), $this->getName());
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    return (bool) \Drupal::service('extension.path.resolver')->getPath($this->getType(), $this->getName());
   }
 
   public function getInfoFilename() {
diff --git a/src/Adapter/Extension/Extension8.php b/src/Adapter/Extension/Extension8.php
index 08a403e..95562a5 100644
--- a/src/Adapter/Extension/Extension8.php
+++ b/src/Adapter/Extension/Extension8.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\Extension;
 
+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
 /**
  * Class Extension8.
  *
@@ -14,7 +15,7 @@ class Extension8 extends Extension {
   protected $infoExtension = '.info.yml';
 
   /**
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @var KeyValueStoreInterface
    */
   protected static $schemaStore;
 
@@ -45,7 +46,7 @@ class Extension8 extends Extension {
   /**
    * Retrieves the schema store.
    *
-   * @return \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @return KeyValueStoreInterface
    */
   protected function schemaStore() {
     if (static::$schemaStore === NULL) {
diff --git a/src/Adapter/Extension/Extension9.php b/src/Adapter/Extension/Extension9.php
index dd1294d..574804e 100644
--- a/src/Adapter/Extension/Extension9.php
+++ b/src/Adapter/Extension/Extension9.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\Extension;
 
+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
 /**
  * Class Extension9.
  *
@@ -14,7 +15,7 @@ class Extension9 extends Extension {
   protected $infoExtension = '.info.yml';
 
   /**
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @var KeyValueStoreInterface
    */
   protected static $schemaStore;
 
@@ -37,7 +38,7 @@ class Extension9 extends Extension {
   /**
    * Retrieves the schema store.
    *
-   * @return \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @return KeyValueStoreInterface
    */
   protected function schemaStore() {
     if (static::$schemaStore === NULL) {
diff --git a/src/Adapter/Form/FormState.php b/src/Adapter/Form/FormState.php
index 5b9b030..c149485 100644
--- a/src/Adapter/Form/FormState.php
+++ b/src/Adapter/Form/FormState.php
@@ -13,7 +13,7 @@ use Drupal\tag1quo\VersionedClass;
 class FormState extends VersionedClass {
 
   /**
-   * @var \Drupal\tag1quo\Adapter\Core\Core
+   * @var Core
    */
   protected $core;
 
diff --git a/src/Adapter/Form/FormState8.php b/src/Adapter/Form/FormState8.php
index fc12804..c92e0a1 100644
--- a/src/Adapter/Form/FormState8.php
+++ b/src/Adapter/Form/FormState8.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\Form;
 
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Markup;
 
 /**
@@ -9,7 +10,7 @@ use Drupal\Core\Render\Markup;
  *
  * @internal This class is subject to change.
  *
- * @property \Drupal\Core\Form\FormStateInterface $formState
+ * @property FormStateInterface $formState
  */
 class FormState8 extends FormState {
 
diff --git a/src/Adapter/Form/FormState9.php b/src/Adapter/Form/FormState9.php
index f469739..4c66202 100644
--- a/src/Adapter/Form/FormState9.php
+++ b/src/Adapter/Form/FormState9.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\Form;
 
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Markup;
 
 /**
@@ -9,7 +10,7 @@ use Drupal\Core\Render\Markup;
  *
  * @internal This class is subject to change.
  *
- * @property \Drupal\Core\Form\FormStateInterface $formState
+ * @property FormStateInterface $formState
  */
 class FormState9 extends FormState {
 
diff --git a/src/Adapter/Http/Client.php b/src/Adapter/Http/Client.php
index 508afab..f0869b2 100644
--- a/src/Adapter/Http/Client.php
+++ b/src/Adapter/Http/Client.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\Http;
 
+use Drupal\Core\TypedData\Type\UriInterface;
 use Drupal\tag1quo\Adapter\Core\Core;
 use Drupal\tag1quo\Adapter\Logger\Logger;
 use Drupal\tag1quo\VersionedClass;
@@ -11,12 +12,12 @@ use Drupal\tag1quo\VersionedClass;
  *
  * @internal This class is subject to change.
  *
- * @method Response|JsonResponse get(string|\Drupal\Core\TypedData\Type\UriInterface $uri, array $options = array())
- * @method Response|JsonResponse head(string|\Drupal\Core\TypedData\Type\UriInterface $uri, array $options = array())
- * @method Response|JsonResponse put(string|\Drupal\Core\TypedData\Type\UriInterface $uri, array $options = array())
- * @method Response|JsonResponse post(string|\Drupal\Core\TypedData\Type\UriInterface $uri, array $options = array())
- * @method Response|JsonResponse patch(string|\Drupal\Core\TypedData\Type\UriInterface $uri, array $options = array())
- * @method Response|JsonResponse delete(string|\Drupal\Core\TypedData\Type\UriInterface $uri, array $options = array())
+ * @method Response|JsonResponse get((string | UriInterface) $uri, array $options = [])
+ * @method Response|JsonResponse head((string | UriInterface) $uri, array $options = [])
+ * @method Response|JsonResponse put((string | UriInterface) $uri, array $options = [])
+ * @method Response|JsonResponse post((string | UriInterface) $uri, array $options = [])
+ * @method Response|JsonResponse patch((string | UriInterface) $uri, array $options = [])
+ * @method Response|JsonResponse delete((string | UriInterface) $uri, array $options = [])
  */
 abstract class Client extends VersionedClass {
 
@@ -35,7 +36,7 @@ abstract class Client extends VersionedClass {
   protected static $hasGzip;
 
   /**
-   * @var \Drupal\tag1quo\Adapter\Core\Core
+   * @var Core
    */
   protected $core;
 
@@ -49,7 +50,7 @@ abstract class Client extends VersionedClass {
   /**
    * Client constructor.
    *
-   * @param \Drupal\tag1quo\Adapter\Core\Core $core
+   * @param Core $core
    *   A Core adapter instance.
    */
   public function __construct(Core $core) {
@@ -71,7 +72,7 @@ abstract class Client extends VersionedClass {
   /**
    * Creates a new HTTP Client.
    *
-   * @param \Drupal\tag1quo\Adapter\Core\Core $core
+   * @param Core $core
    *   A Core adapter instance.
    *
    * @return static
@@ -90,7 +91,7 @@ abstract class Client extends VersionedClass {
    * @param array $headers
    *   The headers returned from the HTTP client.
    *
-   * @return \Drupal\tag1quo\Adapter\Http\JsonResponse|\Drupal\tag1quo\Adapter\Http\Response
+   * @return JsonResponse|Response
    *   A JSON response object (if returned response contained JSON) or a normal
    *   Response object otherwise.
    */
@@ -151,10 +152,10 @@ abstract class Client extends VersionedClass {
   /**
    * Perform the actual request.
    *
-   * @param \Drupal\tag1quo\Adapter\Http\Request $request
+   * @param Request $request
    *   The request.
    *
-   * @return \Drupal\tag1quo\Adapter\Http\Response
+   * @return Response
    *   A response object.
    */
   abstract protected function doRequest(Request $request);
@@ -162,7 +163,7 @@ abstract class Client extends VersionedClass {
   /**
    * Finalizes the request right before its about to be sent.
    *
-   * @param \Drupal\tag1quo\Adapter\Http\Request $request
+   * @param Request $request
    *   The Request object to finalize.
    */
   protected function finalizeRequest(Request $request) {
@@ -223,10 +224,10 @@ abstract class Client extends VersionedClass {
   /**
    * Perform the actual request, using cURL.
    *
-   * @param \Drupal\tag1quo\Adapter\Http\Request $request
+   * @param Request $request
    *   The request.
    *
-   * @return \Drupal\tag1quo\Adapter\Http\Response
+   * @return Response
    *   A response object.
    */
   protected function doCurlRequest(Request $request) {
@@ -357,7 +358,7 @@ abstract class Client extends VersionedClass {
    * @param array $options
    *   The options to pass along to the HTTP client.
    *
-   * @return \Drupal\tag1quo\Adapter\Http\Response
+   * @return Response
    *   A Response object.
    */
   public function request($method, $uri, array $options = array()) {
@@ -393,7 +394,7 @@ abstract class Client extends VersionedClass {
   /**
    * Prepares the request before it's sent.
    *
-   * @param \Drupal\tag1quo\Adapter\Http\Request $request
+   * @param Request $request
    *   The Request object.
    */
   protected function prepareRequest(Request $request) {
diff --git a/src/Adapter/Http/Request.php b/src/Adapter/Http/Request.php
index 938769d..6a72bb4 100644
--- a/src/Adapter/Http/Request.php
+++ b/src/Adapter/Http/Request.php
@@ -23,7 +23,7 @@ class Request {
   const METHOD_CONNECT = 'CONNECT';
 
   /**
-   * @var \Drupal\tag1quo\Adapter\Http\ParameterBag
+   * @var ParameterBag
    */
   public $cookies;
 
@@ -37,19 +37,19 @@ class Request {
   /**
    * The headers.
    *
-   * @var \Drupal\tag1quo\Adapter\Http\ParameterBag
+   * @var ParameterBag
    */
   public $headers;
 
   /**
    * The request options.
    *
-   * @var \Drupal\tag1quo\Adapter\Http\ParameterBag
+   * @var ParameterBag
    */
   public $options;
 
   /**
-   * @var \Drupal\tag1quo\Adapter\Http\ParameterBag
+   * @var ParameterBag
    */
   public $query;
 
diff --git a/src/Adapter/Logger/Logger.php b/src/Adapter/Logger/Logger.php
index 3df7729..fbca601 100644
--- a/src/Adapter/Logger/Logger.php
+++ b/src/Adapter/Logger/Logger.php
@@ -53,7 +53,7 @@ class Logger extends VersionedClass {
   /**
    * The Core adapter.
    *
-   * @var \Drupal\tag1quo\Adapter\Core\Core
+   * @var Core
    */
   protected $core;
 
@@ -68,7 +68,7 @@ class Logger extends VersionedClass {
   /**
    * Logger constructor.
    *
-   * @param \Drupal\tag1quo\Adapter\Core\Core $core
+   * @param Core $core
    *   A Core adapter instance.
    * @param string $channel
    *   The channel to log to.
@@ -82,7 +82,7 @@ class Logger extends VersionedClass {
   /**
    * Creates a new Logger instance.
    *
-   * @param \Drupal\tag1quo\Adapter\Core\Core $core
+   * @param Core $core
    *   A Core adapter instance.
    * @param string $channel
    *   The channel to log to.
diff --git a/src/Adapter/Logger/Logger8.php b/src/Adapter/Logger/Logger8.php
index 7173c43..1ca23f7 100644
--- a/src/Adapter/Logger/Logger8.php
+++ b/src/Adapter/Logger/Logger8.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\Logger;
 
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Database\DatabaseExceptionWrapper;
 use Drupal\tag1quo\Adapter\Core\Core;
 
@@ -15,7 +16,7 @@ class Logger8 extends Logger {
   /**
    * The logger service, if it exists.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
diff --git a/src/Adapter/Logger/Logger9.php b/src/Adapter/Logger/Logger9.php
index 1070a22..6ee345f 100644
--- a/src/Adapter/Logger/Logger9.php
+++ b/src/Adapter/Logger/Logger9.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\Logger;
 
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Database\DatabaseExceptionWrapper;
 use Drupal\tag1quo\Adapter\Core\Core;
 
@@ -15,7 +16,7 @@ class Logger9 extends Logger {
   /**
    * The logger service, if it exists.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
diff --git a/src/Adapter/State/State8.php b/src/Adapter/State/State8.php
index 9b62d16..0133084 100644
--- a/src/Adapter/State/State8.php
+++ b/src/Adapter/State/State8.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\State;
 
+use Drupal\Core\State\StateInterface;
 /**
  * Class State8.
  *
@@ -10,7 +11,7 @@ namespace Drupal\tag1quo\Adapter\State;
 class State8 extends State {
 
   /**
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
diff --git a/src/Adapter/State/State9.php b/src/Adapter/State/State9.php
index 299a657..f571f44 100644
--- a/src/Adapter/State/State9.php
+++ b/src/Adapter/State/State9.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Adapter\State;
 
+use Drupal\Core\State\StateInterface;
 /**
  * Class State9.
  *
@@ -10,7 +11,7 @@ namespace Drupal\tag1quo\Adapter\State;
 class State9 extends State {
 
   /**
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
diff --git a/src/Controller/AdminController.php b/src/Controller/AdminController.php
index fe4ff6a..2c904ab 100644
--- a/src/Controller/AdminController.php
+++ b/src/Controller/AdminController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Controller;
 
+use Drupal\tag1quo\Adapter\Config\Config;
 use Drupal\tag1quo\Adapter\Core\Core;
 use Drupal\tag1quo\Heartbeat;
 use Drupal\tag1quo\VersionedClass;
@@ -14,14 +15,14 @@ class AdminController extends VersionedClass {
   /**
    * The Core adapter.
    *
-   * @var \Drupal\tag1quo\Adapter\Core\Core
+   * @var Core
    */
   protected $core;
 
   /**
    * The Tag1 Quo configuration.
    *
-   * @var \Drupal\tag1quo\Adapter\Config\Config
+   * @var Config
    */
   protected $config;
 
diff --git a/src/Form/AdminSettingsForm.php b/src/Form/AdminSettingsForm.php
index ee4466d..7d0ca84 100644
--- a/src/Form/AdminSettingsForm.php
+++ b/src/Form/AdminSettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo\Form;
 
+use Drupal\tag1quo\Adapter\Config\Config;
 use Drupal\tag1quo\Adapter\Core\Core;
 use Drupal\tag1quo\Adapter\Form\FormState;
 use Drupal\tag1quo\Heartbeat;
@@ -15,14 +16,14 @@ class AdminSettingsForm extends VersionedClass {
   /**
    * The Core adapter.
    *
-   * @var \Drupal\tag1quo\Adapter\Core\Core
+   * @var Core
    */
   protected $core;
 
   /**
    * The Tag1 Quo configuration.
    *
-   * @var \Drupal\tag1quo\Adapter\Config\Config
+   * @var Config
    */
   protected $config;
 
@@ -48,7 +49,7 @@ class AdminSettingsForm extends VersionedClass {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\tag1quo\Adapter\Form\FormState $formState
+   * @param FormState $formState
    *   The form state.
    *
    * @return array
@@ -156,7 +157,7 @@ class AdminSettingsForm extends VersionedClass {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\tag1quo\Adapter\Form\FormState $formState
+   * @param FormState $formState
    *   The form state.
    */
   public function validate(array $form, FormState $formState) {
@@ -205,7 +206,7 @@ class AdminSettingsForm extends VersionedClass {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\tag1quo\Adapter\Form\FormState $formState
+   * @param FormState $formState
    *   The form state.
    */
   public function submit(array $form, FormState $formState) {
diff --git a/src/Heartbeat.php b/src/Heartbeat.php
index 6b533d9..84394d3 100644
--- a/src/Heartbeat.php
+++ b/src/Heartbeat.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tag1quo;
 
+use Drupal\tag1quo\Adapter\Config\Config;
 use Drupal\tag1quo\Adapter\Core\Core;
 use Drupal\tag1quo\Adapter\Http\JsonResponse;
 
@@ -64,14 +65,14 @@ class Heartbeat {
   /**
    * Tag1 Quo settings config.
    *
-   * @var \Drupal\tag1quo\Adapter\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The Core adapter.
    *
-   * @var \Drupal\tag1quo\Adapter\Core\Core
+   * @var Core
    */
   protected $core;
 
@@ -134,7 +135,7 @@ class Heartbeat {
   /**
    * Heartbeat constructor.
    *
-   * @param \Drupal\tag1quo\Adapter\Core\Core $core
+   * @param Core $core
    *   The Core adapter instance.
    */
   public function __construct(Core $core = NULL) {
@@ -145,7 +146,7 @@ class Heartbeat {
   /**
    * Creates a new Heartbeat instance.
    *
-   * @param \Drupal\tag1quo\Adapter\Core\Core $core
+   * @param Core $core
    *   The Core adapter instance.
    *
    * @return static
@@ -176,7 +177,7 @@ class Heartbeat {
    * @param array $headers
    *   Optional. Additional headers to set on the response.
    *
-   * @return \Drupal\tag1quo\Adapter\Http\JsonResponse
+   * @return JsonResponse
    */
   protected function errorResponse($message, $statusCode = 500, array $headers = array()) {
     return new JsonResponse($this->core->jsonEncode(array(
@@ -343,7 +344,7 @@ class Heartbeat {
   /**
    * Sends the Heartbeat to Tag1 Quo.
    **
-   * @return \Drupal\tag1quo\Adapter\Http\JsonResponse
+   * @return JsonResponse
    *   A response from sending the data.
    */
   public function send() {
diff --git a/tag1quo.module b/tag1quo.module
index 8307dbc..51f32bf 100644
--- a/tag1quo.module
+++ b/tag1quo.module
@@ -99,7 +99,7 @@ function tag1quo_admin_settings_submit(&$form, &$form_state) {
  */
 function tag1quo_admin_review() {
   $build = AdminController::create()->review();
-  return drupal_render($build);
+  return \Drupal::service('renderer')->render($build);
 }
 
 /**
@@ -114,7 +114,7 @@ function tag1quo_admin_send_manually() {
  */
 function tag1quo_admin_status() {
   $build = AdminController::create()->status();
-  return drupal_render($build);
+  return \Drupal::service('renderer')->render($build);
 }
 
 /**
diff --git a/tests/src/Functional/UiTest.php b/tests/src/Functional/UiTest.php
index 4662166..6d2af87 100644
--- a/tests/src/Functional/UiTest.php
+++ b/tests/src/Functional/UiTest.php
@@ -26,7 +26,7 @@ class UiTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $settings['config']['tag1quo.settings']['api']['server'] = (object) [
