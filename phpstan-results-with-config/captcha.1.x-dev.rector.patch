diff --git a/captcha.inc b/captcha.inc
index a625e26..b6c31df 100755
--- a/captcha.inc
+++ b/captcha.inc
@@ -23,7 +23,7 @@ use Drupal\Core\Render\Element;
  *   and $captcha_type->captcha_type.
  */
 function captcha_set_form_id_setting($form_id, $captcha_type) {
-  /** @var Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+  /** @var CaptchaPoint $captcha_point */
   $captcha_point = CaptchaPoint::load($form_id);
 
   if ($captcha_point) {
@@ -55,7 +55,7 @@ function captcha_set_form_id_setting($form_id, $captcha_type) {
  *   form 'captcha/Math'.
  */
 function captcha_get_form_id_setting($form_id, $symbolic = FALSE) {
-  /** @var \Drupal\captcha\Entity\CaptchaPoint $captchaPoint */
+  /** @var CaptchaPoint $captchaPoint */
   $captcha_point = CaptchaPoint::load($form_id);
 
   if ($symbolic) {
diff --git a/captcha.module b/captcha.module
index 199b132..2e6d488 100755
--- a/captcha.module
+++ b/captcha.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * This module enables basic CAPTCHA functionality.
@@ -83,7 +84,7 @@ function captcha_help($route_name, RouteMatchInterface $route_match) {
  * @param string $id
  *   Form id string.
  *
- * @return \Drupal\Core\Entity\EntityInterface
+ * @return EntityInterface
  *   An instance of an captcha_point entity.
  */
 function captcha_point_load($id) {
@@ -94,7 +95,7 @@ function captcha_point_load($id) {
  * Implements hook_theme().
  */
 function captcha_theme() {
-  $path = Drupal::hasService('extension.list.module') ? Drupal::service('extension.list.module')->getPath('captcha') : drupal_get_path('module', 'captcha');
+  $path = Drupal::hasService('extension.list.module') ? Drupal::service('extension.list.module')->getPath('captcha') : \Drupal::service('extension.list.module')->getPath('captcha');
   return [
     'captcha' => [
       'render element' => 'element',
@@ -182,7 +183,7 @@ function captcha_form_alter(array &$form, FormStateInterface $form_state, $form_
 
     if (!empty($entity_ids) && is_array($entity_ids)) {
       $captcha_point_id = array_pop($entity_ids);
-      /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+      /** @var CaptchaPoint $captcha_point */
       $captcha_point = \Drupal::entityTypeManager()
         ->getStorage('captcha_point')
         ->load($captcha_point_id);
@@ -233,7 +234,7 @@ function captcha_form_alter(array &$form, FormStateInterface $form_state, $form_
       ->isAdminRoute() || $config->get('allow_on_admin_pages'))
   ) {
     // Add CAPTCHA administration tools.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = CaptchaPoint::load($form_id);
 
     // For administrators: show CAPTCHA info and offer link to configure it.
@@ -385,7 +386,7 @@ function captcha_validate_case_insensitive_ignore_spaces($solution, $response) {
  *
  * @param array $element
  *   The CAPTCHA element.
- * @param Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state structure to extract the info from.
  * @param string $this_form_id
  *   The form ID of the form we are currently processing
diff --git a/image_captcha/image_captcha.install b/image_captcha/image_captcha.install
index 0d68996..2824550 100755
--- a/image_captcha/image_captcha.install
+++ b/image_captcha/image_captcha.install
@@ -37,7 +37,7 @@ function image_captcha_requirements($phase) {
 function image_captcha_install() {
   $config = \Drupal::configFactory()->getEditable('image_captcha.settings');
   // @phpstan-ignore-next-line
-  $module_path = Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('image_captcha') : drupal_get_path('module', 'image_captcha');
+  $module_path = Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('image_captcha') : \Drupal::service('extension.list.module')->getPath('image_captcha');
   $config->set('image_captcha_fonts', [
     hash('sha256', $module_path . '/fonts/Tesox/tesox.ttf'),
     hash('sha256', $module_path . '/fonts/Tuffy/Tuffy.ttf'),
diff --git a/image_captcha/image_captcha.module b/image_captcha/image_captcha.module
index c7a69de..b58615a 100755
--- a/image_captcha/image_captcha.module
+++ b/image_captcha/image_captcha.module
@@ -85,7 +85,7 @@ function _image_captcha_get_available_fonts_from_directories($directories = NULL
     $request = \Drupal::service('request_stack')->getCurrentRequest();
     $directories = [
       // @phpstan-ignore-next-line
-      (Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('image_captcha') : drupal_get_path('module', 'image_captcha')) . '/fonts',
+      (Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('image_captcha') : \Drupal::service('extension.list.module')->getPath('image_captcha')) . '/fonts',
       'sites/all/libraries/fonts',
       DrupalKernel::findSitePath($request) . '/libraries/fonts',
     ];
diff --git a/image_captcha/src/Controller/CaptchaFontPreviewController.php b/image_captcha/src/Controller/CaptchaFontPreviewController.php
index ed405fc..add1487 100644
--- a/image_captcha/src/Controller/CaptchaFontPreviewController.php
+++ b/image_captcha/src/Controller/CaptchaFontPreviewController.php
@@ -16,14 +16,14 @@ class CaptchaFontPreviewController implements ContainerInjectionInterface {
   /**
    * Image Captcha config storage.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Kill Switch for page caching.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;
 
@@ -48,7 +48,7 @@ class CaptchaFontPreviewController implements ContainerInjectionInterface {
   /**
    * Main method that throw ImageResponse object to generate image.
    *
-   * @return \Drupal\image_captcha\StreamedResponse\CaptchaFontPreviewStreamedResponse
+   * @return CaptchaFontPreviewStreamedResponse
    *   Make a CaptchaImageResponse with the correct configuration and return it.
    */
   public function getFont($token) {
diff --git a/image_captcha/src/Controller/CaptchaImageGeneratorController.php b/image_captcha/src/Controller/CaptchaImageGeneratorController.php
index 241f2f4..99cf6a6 100644
--- a/image_captcha/src/Controller/CaptchaImageGeneratorController.php
+++ b/image_captcha/src/Controller/CaptchaImageGeneratorController.php
@@ -19,35 +19,35 @@ class CaptchaImageGeneratorController implements ContainerInjectionInterface {
   /**
    * Connection container.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Image Captcha config storage.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * File System Service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Watchdog logger channel for captcha.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Kill Switch for page caching.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;
 
@@ -78,7 +78,7 @@ class CaptchaImageGeneratorController implements ContainerInjectionInterface {
   /**
    * Main method that throw ImageResponse object to generate image.
    *
-   * @return \Drupal\image_captcha\Response\CaptchaImageResponse
+   * @return CaptchaImageResponse
    *   Make a CaptchaImageResponse with the correct configuration and return it.
    */
   public function image() {
diff --git a/image_captcha/src/Controller/CaptchaImageRefresh.php b/image_captcha/src/Controller/CaptchaImageRefresh.php
index a71280f..2286b88 100644
--- a/image_captcha/src/Controller/CaptchaImageRefresh.php
+++ b/image_captcha/src/Controller/CaptchaImageRefresh.php
@@ -22,14 +22,14 @@ class CaptchaImageRefresh extends ControllerBase {
   /**
    * Obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The contruct method.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Obtaining system time.
    */
   public function __construct(TimeInterface $time) {
diff --git a/image_captcha/src/Form/ImageCaptchaSettingsForm.php b/image_captcha/src/Form/ImageCaptchaSettingsForm.php
index 4f0a0c8..37f9792 100755
--- a/image_captcha/src/Form/ImageCaptchaSettingsForm.php
+++ b/image_captcha/src/Form/ImageCaptchaSettingsForm.php
@@ -21,25 +21,25 @@ class ImageCaptchaSettingsForm extends ConfigFormBase {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The file_system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Constructs a \Drupal\image_captcha\Form\ImageCaptchaSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   The file_system service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, LanguageManagerInterface $language_manager, FileSystemInterface $fileSystem) {
diff --git a/image_captcha/src/Response/CaptchaImageResponse.php b/image_captcha/src/Response/CaptchaImageResponse.php
index d478449..4cb300d 100755
--- a/image_captcha/src/Response/CaptchaImageResponse.php
+++ b/image_captcha/src/Response/CaptchaImageResponse.php
@@ -21,28 +21,28 @@ class CaptchaImageResponse extends Response {
   /**
    * Database connection configuration container.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Image Captcha config storage.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * File System container.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Watchdog logger channel for captcha.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
diff --git a/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php b/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php
index 4fe5388..7061183 100755
--- a/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php
+++ b/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php
@@ -13,7 +13,7 @@ class CaptchaFontPreviewStreamedResponse extends StreamedResponse {
   /**
    * Config service.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
diff --git a/src/Element/Captcha.php b/src/Element/Captcha.php
index bf8a469..04bbb61 100644
--- a/src/Element/Captcha.php
+++ b/src/Element/Captcha.php
@@ -19,7 +19,7 @@ class Captcha extends FormElement implements ContainerFactoryPluginInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -32,7 +32,7 @@ class Captcha extends FormElement implements ContainerFactoryPluginInterface {
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration factory.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $configFactory) {
diff --git a/src/EventSubscriber/CaptchaCachedSettingsSubscriber.php b/src/EventSubscriber/CaptchaCachedSettingsSubscriber.php
index 789a047..0311292 100644
--- a/src/EventSubscriber/CaptchaCachedSettingsSubscriber.php
+++ b/src/EventSubscriber/CaptchaCachedSettingsSubscriber.php
@@ -15,14 +15,14 @@ class CaptchaCachedSettingsSubscriber implements EventSubscriberInterface {
   /**
    * The Element info.
    *
-   * @var \Drupal\Core\Render\ElementInfoManagerInterface
+   * @var ElementInfoManagerInterface
    */
   protected $elementInfo;
 
   /**
    * CaptchaCachedSettingsSubscriber constructor.
    *
-   * @param \Drupal\Core\Render\ElementInfoManagerInterface $elementInfo
+   * @param ElementInfoManagerInterface $elementInfo
    *   Constructor.
    */
   public function __construct(ElementInfoManagerInterface $elementInfo) {
@@ -32,7 +32,7 @@ class CaptchaCachedSettingsSubscriber implements EventSubscriberInterface {
   /**
    * Clearing the cached definitions whenever the settings are modified.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The Event to process.
    */
   public function onSave(ConfigCrudEvent $event) {
diff --git a/src/Form/CaptchaExamplesForm.php b/src/Form/CaptchaExamplesForm.php
index 6322831..51625b6 100755
--- a/src/Form/CaptchaExamplesForm.php
+++ b/src/Form/CaptchaExamplesForm.php
@@ -17,14 +17,14 @@ class CaptchaExamplesForm extends FormBase {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * CaptchaExamplesForm constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   Constructor.
    */
   public function __construct(ModuleHandlerInterface $moduleHandler) {
diff --git a/src/Form/CaptchaPointForm.php b/src/Form/CaptchaPointForm.php
index 5edb754..cfcb40c 100755
--- a/src/Form/CaptchaPointForm.php
+++ b/src/Form/CaptchaPointForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\captcha\Form;
 
+use Drupal\captcha\CaptchaPointInterface;
 use Drupal\captcha\Service\CaptchaService;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ -16,23 +17,23 @@ class CaptchaPointForm extends EntityForm {
   /**
    * The CAPTCHA helper service.
    *
-   * @var \Drupal\captcha\Service\CaptchaService
+   * @var CaptchaService
    */
   protected $captchaService;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * CaptchaPointForm constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Constructor.
-   * @param \Drupal\captcha\Service\CaptchaService $captcha_service
+   * @param CaptchaService $captcha_service
    *   The captcha service.
    */
   public function __construct(RequestStack $request_stack, CaptchaService $captcha_service) {
@@ -43,7 +44,7 @@ class CaptchaPointForm extends EntityForm {
   /**
    * Create Captcha Points.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Event to create Captcha points.
    *
    * @return static
@@ -61,7 +62,7 @@ class CaptchaPointForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\captcha\CaptchaPointInterface $captchaPoint */
+    /** @var CaptchaPointInterface $captchaPoint */
     $captcha_point = $this->entity;
 
     // Support to set a default form_id through a query argument.
diff --git a/src/Form/CaptchaSettingsForm.php b/src/Form/CaptchaSettingsForm.php
index bff07d0..913e84e 100755
--- a/src/Form/CaptchaSettingsForm.php
+++ b/src/Form/CaptchaSettingsForm.php
@@ -19,34 +19,34 @@ class CaptchaSettingsForm extends ConfigFormBase {
   /**
    * The cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;
 
   /**
    * The CAPTCHA helper service.
    *
-   * @var \Drupal\captcha\Service\CaptchaService
+   * @var CaptchaService
    */
   protected $captchaService;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a \Drupal\captcha\Form\CaptchaSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   Module handler.
-   * @param \Drupal\captcha\Service\CaptchaService $captcha_service
+   * @param CaptchaService $captcha_service
    *   The captcha service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, CacheBackendInterface $cache_backend, ModuleHandlerInterface $moduleHandler, CaptchaService $captcha_service) {
@@ -266,7 +266,7 @@ class CaptchaSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   Form structured array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state structured array.
    */
   public function clearCaptchaPlacementCacheSubmit(array $form, FormStateInterface $form_state) {
diff --git a/src/Service/CaptchaService.php b/src/Service/CaptchaService.php
index d38ae3b..6a15bd6 100644
--- a/src/Service/CaptchaService.php
+++ b/src/Service/CaptchaService.php
@@ -15,14 +15,14 @@ class CaptchaService {
   /**
    * Module Handler Service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructor for Captcha Service helper.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module Handler Service.
    */
   public function __construct(ModuleHandlerInterface $module_handler) {
diff --git a/tests/src/Functional/CaptchaAdminTest.php b/tests/src/Functional/CaptchaAdminTest.php
index 6670835..937e539 100755
--- a/tests/src/Functional/CaptchaAdminTest.php
+++ b/tests/src/Functional/CaptchaAdminTest.php
@@ -34,7 +34,7 @@ class CaptchaAdminTest extends CaptchaWebTestBase {
   public function testCaptchaPointSettingGetterAndSetter() {
     $comment_form_id = self::COMMENT_FORM_ID;
     captcha_set_form_id_setting($comment_form_id, 'test');
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $result */
+    /** @var CaptchaPoint $result */
     $result = captcha_get_form_id_setting($comment_form_id);
     $this->assertNotNull($result, 'CAPTCHA exists');
     $this->assertEquals($result->getCaptchaType(), 'test', 'CAPTCHA type: default');
@@ -260,7 +260,7 @@ class CaptchaAdminTest extends CaptchaWebTestBase {
    * @param string $form_id
    *   Form machine ID.
    *
-   * @return \Drupal\captcha\Entity\CaptchaPoint
+   * @return CaptchaPoint
    *   CaptchaPoint with mysql query result.
    */
   protected function getCaptchaPointSettingFromDatabase($form_id) {
@@ -302,7 +302,7 @@ class CaptchaAdminTest extends CaptchaWebTestBase {
     $this->assertSession()->responseContains($this->t('Captcha Point for %label form was created.', ['%label' => $captcha_point_form_id]));
 
     // Check in database.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint result */
+    /** @var CaptchaPoint result */
     $result = $this->getCaptchaPointSettingFromDatabase($captcha_point_form_id);
     $this->assertEquals($result->captchaType, $captcha_point_module . '/' . $captcha_point_type,
       'Enabled CAPTCHA point should have module and type set');
diff --git a/tests/src/Functional/CaptchaPersistenceTest.php b/tests/src/Functional/CaptchaPersistenceTest.php
index 7d257ef..ec1ea7a 100755
--- a/tests/src/Functional/CaptchaPersistenceTest.php
+++ b/tests/src/Functional/CaptchaPersistenceTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\captcha\Functional;
 
+use Drupal\captcha\Entity\CaptchaPoint;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
 /**
@@ -168,7 +169,7 @@ class CaptchaPersistenceTest extends CaptchaWebTestBase {
     $this->assertDifferentCsid($captcha_sid_initial);
 
     // Check another form.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_register_form');
diff --git a/tests/src/Functional/CaptchaTest.php b/tests/src/Functional/CaptchaTest.php
index d93eaf0..492c5ca 100755
--- a/tests/src/Functional/CaptchaTest.php
+++ b/tests/src/Functional/CaptchaTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\captcha\Functional;
 
+use Drupal\captcha\Entity\CaptchaPoint;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
 /**
@@ -31,7 +32,7 @@ class CaptchaTest extends CaptchaWebTestBase {
     $this->drupalLogout();
 
     // Set a CAPTCHA on login form.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_login_form');
@@ -73,7 +74,7 @@ class CaptchaTest extends CaptchaWebTestBase {
     $this->submitForm($edit, $this->t('Save configuration'));
 
     // Set a CAPTCHA on login form.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_login_form');
@@ -231,7 +232,7 @@ class CaptchaTest extends CaptchaWebTestBase {
    */
   public function testCaptchaOnLoginBlockOnAdminPagesIssue893810() {
     // Set a CAPTCHA on login block form.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_login_form');
diff --git a/tests/src/Functional/CaptchaWebTestBase.php b/tests/src/Functional/CaptchaWebTestBase.php
index 3f00ded..61028c9 100755
--- a/tests/src/Functional/CaptchaWebTestBase.php
+++ b/tests/src/Functional/CaptchaWebTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\captcha\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\captcha\Entity\CaptchaPoint;
 use Drupal\comment\Plugin\Field\FieldType\CommentItemInterface;
 use Drupal\comment\Tests\CommentTestTrait;
 use Drupal\Core\Session\AccountInterface;
@@ -54,14 +56,14 @@ abstract class CaptchaWebTestBase extends BrowserTestBase {
   /**
    * User with various administrative permissions.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $adminUser;
 
   /**
    * Normal visitor with limited permissions.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $normalUser;
 
@@ -102,7 +104,7 @@ abstract class CaptchaWebTestBase extends BrowserTestBase {
     $comment_field->setSetting('form_location', CommentItemInterface::FORM_SEPARATE_PAGE);
     $comment_field->save();
 
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_login_form');
diff --git a/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php b/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php
index 406ad50..760ce39 100644
--- a/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php
+++ b/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php
@@ -44,7 +44,7 @@ class MigrateCaptchaPointsTest extends MigrateDrupal7TestBase {
     $this->loadFixture(implode(DIRECTORY_SEPARATOR, [
       DRUPAL_ROOT,
       // @phpstan-ignore-next-line
-      \Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('captcha') : drupal_get_path('module', 'captcha'),
+      \Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('captcha') : \Drupal::service('extension.list.module')->getPath('captcha'),
       'tests',
       'fixtures',
       'drupal7.php',
@@ -74,7 +74,7 @@ class MigrateCaptchaPointsTest extends MigrateDrupal7TestBase {
    *   The expected status for a captcha type.
    */
   protected function assertEntity(string $form_id, string $captcha_type, $status) {
-    /** @var \Drupal\captcha\CaptchaPointInterface $entity */
+    /** @var CaptchaPointInterface $entity */
     $entity = CaptchaPoint::load($form_id);
     $this->assertInstanceOf(CaptchaPointInterface::class, $entity);
     $this->assertSame($form_id, $entity->getFormId());
diff --git a/tests/src/Kernel/Migrate/d7/MigrateCaptchaSimpleConfigurationTest.php b/tests/src/Kernel/Migrate/d7/MigrateCaptchaSimpleConfigurationTest.php
index ddc3e0b..dc0cc1d 100644
--- a/tests/src/Kernel/Migrate/d7/MigrateCaptchaSimpleConfigurationTest.php
+++ b/tests/src/Kernel/Migrate/d7/MigrateCaptchaSimpleConfigurationTest.php
@@ -44,7 +44,7 @@ class MigrateCaptchaSimpleConfigurationTest extends MigrateDrupal7TestBase {
     $this->loadFixture(implode(DIRECTORY_SEPARATOR, [
       DRUPAL_ROOT,
       // @phpstan-ignore-next-line
-      \Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('captcha') : drupal_get_path('module', 'captcha'),
+      \Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('captcha') : \Drupal::service('extension.list.module')->getPath('captcha'),
       'tests',
       'fixtures',
       'drupal7.php',
diff --git a/tests/src/Unit/Controller/CaptchaPointListBuilderTest.php b/tests/src/Unit/Controller/CaptchaPointListBuilderTest.php
index 56be207..4c520a3 100644
--- a/tests/src/Unit/Controller/CaptchaPointListBuilderTest.php
+++ b/tests/src/Unit/Controller/CaptchaPointListBuilderTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\captcha\Unit\Controller;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\captcha\Entity\CaptchaPoint;
 use Drupal\captcha\Entity\Controller\CaptchaPointListBuilder;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -18,6 +19,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
  */
 class CaptchaPointListBuilderTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Set up.
    */
