diff --git a/src/EventSubscriber/R4032LoginSubscriber.php b/src/EventSubscriber/R4032LoginSubscriber.php
index 6d9aab1..2fd4287 100644
--- a/src/EventSubscriber/R4032LoginSubscriber.php
+++ b/src/EventSubscriber/R4032LoginSubscriber.php
@@ -28,59 +28,59 @@ class R4032LoginSubscriber extends HttpExceptionSubscriberBase {
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * An event dispatcher instance to use for map events.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new R4032LoginSubscriber.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AccountInterface $current_user, PathMatcherInterface $path_matcher, EventDispatcherInterface $event_dispatcher, MessengerInterface $messenger, RedirectDestinationInterface $redirect_destination) {
@@ -102,7 +102,7 @@ class R4032LoginSubscriber extends HttpExceptionSubscriberBase {
   /**
    * Redirects on 403 Access Denied kernel exceptions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
+   * @param ExceptionEvent $event
    *   The Event to process.
    */
   public function on403(ExceptionEvent $event) {
diff --git a/src/Form/AnonymousSettingsForm.php b/src/Form/AnonymousSettingsForm.php
index e2a73f8..b20fb26 100644
--- a/src/Form/AnonymousSettingsForm.php
+++ b/src/Form/AnonymousSettingsForm.php
@@ -19,16 +19,16 @@ class AnonymousSettingsForm extends ConfigFormBase {
   /**
    * The path validator service.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * Constructs an AnonymousSettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Defines the configuration object factory.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PathValidatorInterface $path_validator) {
diff --git a/src/Form/AuthenticatedSettingsForm.php b/src/Form/AuthenticatedSettingsForm.php
index b97a735..76183a9 100644
--- a/src/Form/AuthenticatedSettingsForm.php
+++ b/src/Form/AuthenticatedSettingsForm.php
@@ -16,16 +16,16 @@ class AuthenticatedSettingsForm extends ConfigFormBase {
   /**
    * The path validator service.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * Constructs a AuthenticatedSettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Defines the configuration object factory.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PathValidatorInterface $path_validator) {
diff --git a/tests/src/Functional/AuthenticatedNotFoundOptionTest.php b/tests/src/Functional/AuthenticatedNotFoundOptionTest.php
index e0b43bc..cc3fd6a 100644
--- a/tests/src/Functional/AuthenticatedNotFoundOptionTest.php
+++ b/tests/src/Functional/AuthenticatedNotFoundOptionTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Drupal\user\UserInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,14 +26,14 @@ class AuthenticatedNotFoundOptionTest extends BrowserTestBase {
   /**
    * A regular user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->webUser = $this->drupalCreateUser();
@@ -40,7 +42,7 @@ class AuthenticatedNotFoundOptionTest extends BrowserTestBase {
   /**
    * Test the not found option for authenticated user.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testAuthenticatedRedirect() {
     $config = $this->config('r4032login.settings');
diff --git a/tests/src/Functional/AuthenticatedRedirectCustomMessageTest.php b/tests/src/Functional/AuthenticatedRedirectCustomMessageTest.php
index adb572d..868cfed 100644
--- a/tests/src/Functional/AuthenticatedRedirectCustomMessageTest.php
+++ b/tests/src/Functional/AuthenticatedRedirectCustomMessageTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Drupal\user\UserInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,7 +26,7 @@ class AuthenticatedRedirectCustomMessageTest extends BrowserTestBase {
   /**
    * A regular user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;
 
@@ -47,7 +49,7 @@ class AuthenticatedRedirectCustomMessageTest extends BrowserTestBase {
    * @param string $selector
    *   The selector to look for the message within.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *
    * @dataProvider baseRedirectMessageDataProvider
    */
@@ -90,7 +92,7 @@ class AuthenticatedRedirectCustomMessageTest extends BrowserTestBase {
   /**
    * Test authenticated message will not appear if disabled.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testDisabledAuthenticatedRedirectMessage() {
     $config = $this->config('r4032login.settings');
diff --git a/tests/src/Functional/AuthenticatedRedirectTest.php b/tests/src/Functional/AuthenticatedRedirectTest.php
index bc2b4fb..2cd42d1 100644
--- a/tests/src/Functional/AuthenticatedRedirectTest.php
+++ b/tests/src/Functional/AuthenticatedRedirectTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Drupal\user\UserInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,14 +26,14 @@ class AuthenticatedRedirectTest extends BrowserTestBase {
   /**
    * A regular user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->webUser = $this->drupalCreateUser();
@@ -49,7 +51,7 @@ class AuthenticatedRedirectTest extends BrowserTestBase {
    * @param string $destination
    *   Resulting URL.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *
    * @dataProvider baseRedirectDataProvider
    */
diff --git a/tests/src/Functional/BaseRedirectTest.php b/tests/src/Functional/BaseRedirectTest.php
index d0ccd1d..792c0dc 100644
--- a/tests/src/Functional/BaseRedirectTest.php
+++ b/tests/src/Functional/BaseRedirectTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -33,7 +34,7 @@ class BaseRedirectTest extends BrowserTestBase {
    *
    * @dataProvider baseRedirectDataProvider
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testBaseRedirect($path, $code, $destination) {
     $this->drupalGet($path);
diff --git a/tests/src/Functional/ChangeAccessDeniedMessageTest.php b/tests/src/Functional/ChangeAccessDeniedMessageTest.php
index 7a4f87d..2c8fc81 100644
--- a/tests/src/Functional/ChangeAccessDeniedMessageTest.php
+++ b/tests/src/Functional/ChangeAccessDeniedMessageTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,7 +25,7 @@ class ChangeAccessDeniedMessageTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $config = $this->config('r4032login.settings');
@@ -35,7 +36,7 @@ class ChangeAccessDeniedMessageTest extends BrowserTestBase {
   /**
    * Test that is it possible to change the "User login access denied" message.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testChangeAccessDeniedMessage() {
     $this->drupalGet('admin/config');
diff --git a/tests/src/Functional/ChangeLoginFormPathTest.php b/tests/src/Functional/ChangeLoginFormPathTest.php
index f81a115..c3c523c 100644
--- a/tests/src/Functional/ChangeLoginFormPathTest.php
+++ b/tests/src/Functional/ChangeLoginFormPathTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -33,7 +34,7 @@ class ChangeLoginFormPathTest extends BrowserTestBase {
    *
    * @dataProvider changeLoginFormPathDataProvider
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testChangeLoginFormPath($optionValue, $path, $destination) {
     $config = $this->config('r4032login.settings');
diff --git a/tests/src/Functional/ChangeMessageTypeTest.php b/tests/src/Functional/ChangeMessageTypeTest.php
index 347f36e..f7fc48b 100644
--- a/tests/src/Functional/ChangeMessageTypeTest.php
+++ b/tests/src/Functional/ChangeMessageTypeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Behat\Mink\Exception\ElementNotFoundException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -31,7 +32,7 @@ class ChangeMessageTypeTest extends BrowserTestBase {
    *
    * @dataProvider changeMessageTypeDataProvider
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
+   * @throws ElementNotFoundException
    */
   public function testChangeMessageType($optionValue, $selector) {
     $config = $this->config('r4032login.settings');
diff --git a/tests/src/Functional/DestinationParameterOverrideTest.php b/tests/src/Functional/DestinationParameterOverrideTest.php
index eca9773..d2473f6 100644
--- a/tests/src/Functional/DestinationParameterOverrideTest.php
+++ b/tests/src/Functional/DestinationParameterOverrideTest.php
@@ -25,7 +25,7 @@ class DestinationParameterOverrideTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $config = $this->config('r4032login.settings');
diff --git a/tests/src/Functional/DisplayAccessDeniedMessageTest.php b/tests/src/Functional/DisplayAccessDeniedMessageTest.php
index a95586e..823eac1 100644
--- a/tests/src/Functional/DisplayAccessDeniedMessageTest.php
+++ b/tests/src/Functional/DisplayAccessDeniedMessageTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,7 +25,7 @@ class DisplayAccessDeniedMessageTest extends BrowserTestBase {
   /**
    * Test activation and deactivation of the "User login access denied" message.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testDisplayAccessDeniedMessage() {
     $config = $this->config('r4032login.settings');
diff --git a/tests/src/Functional/PreserveQueryStringTest.php b/tests/src/Functional/PreserveQueryStringTest.php
index e2e54df..c25114b 100644
--- a/tests/src/Functional/PreserveQueryStringTest.php
+++ b/tests/src/Functional/PreserveQueryStringTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -25,7 +26,7 @@ class PreserveQueryStringTest extends BrowserTestBase {
   /**
    * Tests query string preservation.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testPreserveQueryString() {
     $this->drupalGet('admin/modules', [
diff --git a/tests/src/Functional/RedirectCacheTest.php b/tests/src/Functional/RedirectCacheTest.php
index 688004a..c9f75c1 100644
--- a/tests/src/Functional/RedirectCacheTest.php
+++ b/tests/src/Functional/RedirectCacheTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Drupal\node\NodeInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\file\Entity\File;
 use Drupal\node\Entity\NodeType;
 use Drupal\Tests\BrowserTestBase;
@@ -33,21 +35,21 @@ class RedirectCacheTest extends BrowserTestBase {
   /**
    * An unpublished node used for tests.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $unpublishedNode;
 
   /**
    * An published node used for tests.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $publishedNode;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Disable the access denied message so the cache will be set.
@@ -86,7 +88,7 @@ class RedirectCacheTest extends BrowserTestBase {
   /**
    * Test node access redirect behavior in cached context.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testNodeRedirectCache() {
     // Assert there is the redirection since the node is not published.
@@ -105,7 +107,7 @@ class RedirectCacheTest extends BrowserTestBase {
   /**
    * Tests private file redirect behavior in cached context.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testPrivateFileRedirectCache() {
     // Assert there is the redirection since the node is not published.
diff --git a/tests/src/Functional/RedirectNoIndexHeaderTest.php b/tests/src/Functional/RedirectNoIndexHeaderTest.php
index 3659cb0..688f4f8 100644
--- a/tests/src/Functional/RedirectNoIndexHeaderTest.php
+++ b/tests/src/Functional/RedirectNoIndexHeaderTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,7 +25,7 @@ class RedirectNoIndexHeaderTest extends BrowserTestBase {
   /**
    * Test the behavior of the "Add X-Robots-Tag: noindex header" option.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function testRedirectNoIndexHeader() {
     $client = $this->getHttpClient();
diff --git a/tests/src/Functional/RedirectStatusCodeTest.php b/tests/src/Functional/RedirectStatusCodeTest.php
index 7822ac3..008258d 100644
--- a/tests/src/Functional/RedirectStatusCodeTest.php
+++ b/tests/src/Functional/RedirectStatusCodeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -29,7 +30,7 @@ class RedirectStatusCodeTest extends BrowserTestBase {
    * @param int $expectedCode
    *   Expected redirect code.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *
    * @dataProvider redirectStatusCodeDataProvider
    */
diff --git a/tests/src/Functional/RedirectToDestinationFileTest.php b/tests/src/Functional/RedirectToDestinationFileTest.php
index a49a732..a186f2c 100644
--- a/tests/src/Functional/RedirectToDestinationFileTest.php
+++ b/tests/src/Functional/RedirectToDestinationFileTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\file\FileInterface;
 use Drupal\file\Entity\File;
 use Drupal\Tests\BrowserTestBase;
 
@@ -25,20 +27,20 @@ class RedirectToDestinationFileTest extends BrowserTestBase {
   /**
    * A user to log on.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->user = $this->drupalCreateUser([], NULL, TRUE);
 
     $filename = 'sample with spaces.pdf';
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = File::create([
       'uri' => 'private://' . $filename,
       'uid' => $this->user->id(),
diff --git a/tests/src/Functional/RedirectToProtectedFrontPageTest.php b/tests/src/Functional/RedirectToProtectedFrontPageTest.php
index 38012ef..7774b33 100644
--- a/tests/src/Functional/RedirectToProtectedFrontPageTest.php
+++ b/tests/src/Functional/RedirectToProtectedFrontPageTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -29,7 +30,7 @@ class RedirectToProtectedFrontPageTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Set the front page as a protected page.
@@ -41,7 +42,7 @@ class RedirectToProtectedFrontPageTest extends BrowserTestBase {
   /**
    * Test the redirection.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testRedirectToProtectedFrontPage() {
     // Assert there is the redirection since the node is not published.
diff --git a/tests/src/Functional/SettingsUpdateTest.php b/tests/src/Functional/SettingsUpdateTest.php
index 7b2b626..7eed1c6 100644
--- a/tests/src/Functional/SettingsUpdateTest.php
+++ b/tests/src/Functional/SettingsUpdateTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -31,8 +33,8 @@ class SettingsUpdateTest extends BrowserTestBase {
    *
    * @dataProvider settingsUpdateDataProvider
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws ExpectationException
+   * @throws EntityStorageException
    */
   public function testSettingsUpdate(array $permissions, $admin) {
     $webUser = $this->drupalCreateUser($permissions, NULL, $admin);
diff --git a/tests/src/Functional/SkipRedirectTest.php b/tests/src/Functional/SkipRedirectTest.php
index a680ad2..fbd2e64 100644
--- a/tests/src/Functional/SkipRedirectTest.php
+++ b/tests/src/Functional/SkipRedirectTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\r4032login\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,7 +25,7 @@ class SkipRedirectTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $config = $this->config('r4032login.settings');
@@ -46,7 +47,7 @@ class SkipRedirectTest extends BrowserTestBase {
    *
    * @dataProvider skipRedirectDataProvider
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testSkipRedirect($path, $code, $destination, $negate) {
     $this->config('r4032login.settings')->set('match_noredirect_negate', $negate)->save();
diff --git a/tests/src/Unit/R4032LoginSubscriberTest.php b/tests/src/Unit/R4032LoginSubscriberTest.php
index 6b57713..ab89c18 100644
--- a/tests/src/Unit/R4032LoginSubscriberTest.php
+++ b/tests/src/Unit/R4032LoginSubscriberTest.php
@@ -2,6 +2,15 @@
 
 namespace Drupal\Tests\r4032login\Unit {
 
+  use PHPUnit\Framework\MockObject\MockObject;
+  use Drupal\Core\Config\ConfigFactoryInterface;
+  use Drupal\Core\Session\AccountInterface;
+  use Drupal\Core\Path\PathMatcherInterface;
+  use Symfony\Component\EventDispatcher\EventDispatcherInterface;
+  use Drupal\Core\Messenger\MessengerInterface;
+  use Drupal\Core\Utility\UnroutedUrlAssemblerInterface;
+  use Drupal\Tests\Core\Routing\TestRouterInterface;
+  use Drupal\Core\Routing\RedirectDestinationInterface;
   use Drupal\Core\DependencyInjection\ContainerBuilder;
   use Drupal\Core\Url;
   use Drupal\r4032login\EventSubscriber\R4032LoginSubscriber;
@@ -22,70 +31,70 @@ namespace Drupal\Tests\r4032login\Unit {
     /**
      * The mocked HTTP kernel.
      *
-     * @var \Symfony\Component\HttpKernel\HttpKernelInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var HttpKernelInterface|MockObject
      */
     protected $kernel;
 
     /**
      * The mocked configuration factory.
      *
-     * @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var ConfigFactoryInterface|MockObject
      */
     protected $configFactory;
 
     /**
      * The mocked current user.
      *
-     * @var \Drupal\Core\Session\AccountInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var AccountInterface|MockObject
      */
     protected $currentUser;
 
     /**
      * The path matcher.
      *
-     * @var \Drupal\Core\Path\PathMatcherInterface
+     * @var PathMatcherInterface
      */
     protected $pathMatcher;
 
     /**
      * An event dispatcher instance to use for map events.
      *
-     * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+     * @var EventDispatcherInterface
      */
     protected $eventDispatcher;
 
     /**
      * The messenger service.
      *
-     * @var \Drupal\Core\Messenger\MessengerInterface
+     * @var MessengerInterface
      */
     protected $messenger;
 
     /**
      * The mocked unrouted URL assembler.
      *
-     * @var \Drupal\Core\Utility\UnroutedUrlAssemblerInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var UnroutedUrlAssemblerInterface|MockObject
      */
     protected $urlAssembler;
 
     /**
      * The mocked router.
      *
-     * @var \Drupal\Tests\Core\Routing\TestRouterInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var TestRouterInterface|MockObject
      */
     protected $router;
 
     /**
      * The mocked redirect destination service.
      *
-     * @var \Drupal\Core\Routing\RedirectDestinationInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var RedirectDestinationInterface|MockObject
      */
     protected $redirectDestination;
 
     /**
      * {@inheritdoc}
      */
-    protected function setUp() {
+    protected function setUp(): void {
       $this->kernel = $this->createMock('Symfony\Component\HttpKernel\HttpKernelInterface');
       $this->configFactory = $this->getConfigFactoryStub([
         'r4032login.settings' => [
@@ -262,7 +271,7 @@ namespace Drupal\Tests\r4032login\Unit {
         $r4032login,
         'on403',
       ]);
-      $dispatcher->dispatch(KernelEvents::EXCEPTION, $event);
+      $dispatcher->dispatch($event, KernelEvents::EXCEPTION);
 
       $response = $event->getResponse();
       $this->assertNull($response);
