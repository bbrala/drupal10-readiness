diff --git a/etracker.module b/etracker.module
index 58fb13f..41426d7 100644
--- a/etracker.module
+++ b/etracker.module
@@ -244,7 +244,7 @@ function etracker_page_attachments_alter(array &$attachments) {
  * Allow users to decide if tracking code will be added to pages or not.
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function etracker_form_user_form_alter(&$form, FormStateInterface &$form_state) {
   $config = Drupal::config(Constants::ETRACKER_SETTINGS_CONFIG_NAME);
@@ -300,7 +300,7 @@ function etracker_form_user_form_alter(&$form, FormStateInterface &$form_state)
 
 /**
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function etracker_form_user_form_submit($form, FormStateInterface $form_state) {
   $userData = Drupal::service('user.data');
@@ -310,7 +310,7 @@ function etracker_form_user_form_submit($form, FormStateInterface $form_state) {
 }
 
 /**
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *
  * @return array
  */
@@ -350,7 +350,7 @@ function _etracker_set_default_variables(ImmutableConfig $config) {
 /**
  * Sets (and stores) the javascript variables required for etracker (e.g. et_areas)
  *
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  * @param null $key
  * @param null $value
  *
@@ -387,7 +387,7 @@ function _etracker_add_variable(
  * Based on visibility setting this function returns TRUE if JS code should
  * be added to the current page and otherwise FALSE.
  *
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *
  * @return array|bool
  */
@@ -434,7 +434,7 @@ function _etracker_path_should_be_tracked(ImmutableConfig $config) {
  * Based on visibility setting this function returns TRUE if eTracker code
  * should be added for the current role and otherwise FALSE.
  *
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *
  * @return array|bool
  */
@@ -462,7 +462,7 @@ function _etracker_role_should_be_tracked(ImmutableConfig $config) {
  * Validate the tracking settings for the current user and return TRUE if the current
  * user should be tracked
  *
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *
  * @return bool
  */
@@ -507,7 +507,7 @@ function _etracker_user_should_be_tracked(ImmutableConfig $config) {
 /**
  * Validate the etracker account key configuration
  *
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *
  * @return bool
  */
@@ -522,7 +522,7 @@ function _etracker_account_key_configured(ImmutableConfig $config) {
 }
 
 /**
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *
  * @return array|bool
  */
diff --git a/tests/src/Functional/AdminSettingsFormTests.php b/tests/src/Functional/AdminSettingsFormTests.php
index d211686..15e3137 100644
--- a/tests/src/Functional/AdminSettingsFormTests.php
+++ b/tests/src/Functional/AdminSettingsFormTests.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\etracker\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\etracker\Helper\Constants;
 use Drupal\Tests\BrowserTestBase;
 
@@ -29,7 +30,7 @@ class AdminSettingsFormTest extends BrowserTestBase {
   /**
    * A test administrator.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/ETrackerFunctionalTests.php b/tests/src/Functional/ETrackerFunctionalTests.php
index 89d2474..f16aaee 100644
--- a/tests/src/Functional/ETrackerFunctionalTests.php
+++ b/tests/src/Functional/ETrackerFunctionalTests.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\etracker\Functional;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;
 
 // Include etracker constants file:
@@ -25,14 +26,14 @@ class ETrackerFunctionalTest extends BrowserTestBase {
   /**
    * A user with authenticated permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;
 
   /**
    * An admin user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminuser;
 
