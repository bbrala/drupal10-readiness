diff --git a/block_in_page_not_found.info.yml b/block_in_page_not_found.info.yml
index ea055c4..30956de 100644
--- a/block_in_page_not_found.info.yml
+++ b/block_in_page_not_found.info.yml
@@ -1,6 +1,5 @@
 name: Block In Page Not Found
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 description: Provides the ability to place a block in 404 page or page not found.
 package: Administration
 type: module
diff --git a/src/Plugin/Condition/PageNotFoundRequest.php b/src/Plugin/Condition/PageNotFoundRequest.php
index 8d65836..76839b7 100644
--- a/src/Plugin/Condition/PageNotFoundRequest.php
+++ b/src/Plugin/Condition/PageNotFoundRequest.php
@@ -22,7 +22,7 @@ class PageNotFoundRequest extends ConditionPluginBase implements ContainerFactor
     /**
      * The request stack.
      *
-     * @var \Symfony\Component\HttpFoundation\RequestStack
+     * @var RequestStack
      */
     protected $requestStack;
 
@@ -74,7 +74,7 @@ class PageNotFoundRequest extends ConditionPluginBase implements ContainerFactor
     /**
      * Constructs a Page not found condition plugin.
      *
-     * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+     * @param RequestStack $request_stack
      *   The request stack.
      * @param array $configuration
      *   A configuration array containing information about the plugin instance.
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 31bd89e..fbfe4b0 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\block_in_page_not_found\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -40,7 +41,7 @@ class LoadTest extends BrowserTestBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
