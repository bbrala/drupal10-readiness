diff --git a/station_playlist/src/Controller/PlaylistsByProgramController.php b/station_playlist/src/Controller/PlaylistsByProgramController.php
index e03b495..86b5053 100644
--- a/station_playlist/src/Controller/PlaylistsByProgramController.php
+++ b/station_playlist/src/Controller/PlaylistsByProgramController.php
@@ -22,14 +22,14 @@ class PlaylistsByProgramController implements ContainerInjectionInterface {
   use StringTranslationTrait;
 
   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $playlistStorage;
 
   /**
    * PlaylistsByProgramController constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $playlist_storage
+   * @param EntityStorageInterface $playlist_storage
    */
   public function __construct(EntityStorageInterface $playlist_storage) {
     $this->playlistStorage = $playlist_storage;
diff --git a/station_schedule/src/ContextProvider/ScheduledItemContext.php b/station_schedule/src/ContextProvider/ScheduledItemContext.php
index 1ed777a..d6343d6 100644
--- a/station_schedule/src/ContextProvider/ScheduledItemContext.php
+++ b/station_schedule/src/ContextProvider/ScheduledItemContext.php
@@ -21,14 +21,14 @@ class ScheduledItemContext implements ContextProviderInterface {
   use StringTranslationTrait;
 
   /**
-   * @var \Drupal\station_schedule\ScheduleRepositoryInterface
+   * @var ScheduleRepositoryInterface
    */
   protected $scheduleRepository;
 
   /**
    * ScheduledItemContext constructor.
    *
-   * @param \Drupal\station_schedule\ScheduleRepositoryInterface $schedule_repository
+   * @param ScheduleRepositoryInterface $schedule_repository
    */
   public function __construct(ScheduleRepositoryInterface $schedule_repository) {
     $this->scheduleRepository = $schedule_repository;
diff --git a/station_schedule/src/Controller/AlterScheduleController.php b/station_schedule/src/Controller/AlterScheduleController.php
index 0959421..69f5e0f 100644
--- a/station_schedule/src/Controller/AlterScheduleController.php
+++ b/station_schedule/src/Controller/AlterScheduleController.php
@@ -21,7 +21,7 @@ class AlterScheduleController {
   /**
    * @todo.
    *
-   * @param \Drupal\station_schedule\ScheduleInterface $station_schedule
+   * @param ScheduleInterface $station_schedule
    *
    * @return array
    */
@@ -74,7 +74,7 @@ class AlterScheduleController {
   /**
    * @todo.
    *
-   * @param \Drupal\station_schedule\ScheduleInterface $schedule
+   * @param ScheduleInterface $schedule
    * @param int $start
    * @param int $finish
    *
@@ -107,7 +107,7 @@ class AlterScheduleController {
   /**
    * @todo.
    *
-   * @param \Drupal\station_schedule\ScheduleItemInterface $schedule_item
+   * @param ScheduleItemInterface $schedule_item
    *
    * @return array
    */
diff --git a/station_schedule/src/Entity/Form/ScheduleItemDeleteForm.php b/station_schedule/src/Entity/Form/ScheduleItemDeleteForm.php
index 8c0efd4..a3721f9 100644
--- a/station_schedule/src/Entity/Form/ScheduleItemDeleteForm.php
+++ b/station_schedule/src/Entity/Form/ScheduleItemDeleteForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\station_schedule\Entity\Form;
 
+use Drupal\station_schedule\ScheduleItemInterface;
 use Drupal\Core\Entity\ContentEntityDeleteForm;
 
 /**
@@ -31,7 +32,7 @@ class ScheduleItemDeleteForm extends ContentEntityDeleteForm {
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\station_schedule\ScheduleItemInterface
+   * @return ScheduleItemInterface
    */
   public function getEntity() {
     return parent::getEntity();
diff --git a/station_schedule/src/Entity/Form/ScheduleItemFormBase.php b/station_schedule/src/Entity/Form/ScheduleItemFormBase.php
index 94c2b38..f0f7c89 100644
--- a/station_schedule/src/Entity/Form/ScheduleItemFormBase.php
+++ b/station_schedule/src/Entity/Form/ScheduleItemFormBase.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\station_schedule\Entity\Form;
 
+use Drupal\station_schedule\ScheduleItemInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -28,7 +29,7 @@ class ScheduleItemFormBase extends ContentEntityForm {
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\station_schedule\ScheduleItemInterface
+   * @return ScheduleItemInterface
    */
   public function getEntity() {
     return parent::getEntity();
diff --git a/station_schedule/src/Entity/Schedule.php b/station_schedule/src/Entity/Schedule.php
index cb036f9..c76b404 100644
--- a/station_schedule/src/Entity/Schedule.php
+++ b/station_schedule/src/Entity/Schedule.php
@@ -7,6 +7,8 @@
 
 namespace Drupal\station_schedule\Entity;
 
+use Drupal\station_schedule\ScheduleItemInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Datetime\DateHelper;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -55,14 +57,14 @@ class Schedule extends ContentEntityBase implements ScheduleInterface {
   /**
    * Runtime only.
    *
-   * @var \Drupal\station_schedule\ScheduleItemInterface[]
+   * @var ScheduleItemInterface[]
    */
   protected $scheduledItems;
 
   /**
    * Runtime only.
    *
-   * @var \Drupal\station_schedule\ScheduleItemInterface[][]
+   * @var ScheduleItemInterface[][]
    */
   protected $scheduledItemsByDay;
 
@@ -249,7 +251,7 @@ class Schedule extends ContentEntityBase implements ScheduleInterface {
   }
 
   /**
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    */
   protected function scheduleItemStorage() {
     return \Drupal::service('entity_type.manager')->getStorage('station_schedule_item');
diff --git a/station_schedule/src/Entity/ScheduleListBuilder.php b/station_schedule/src/Entity/ScheduleListBuilder.php
index 8ea6df4..aca7be6 100644
--- a/station_schedule/src/Entity/ScheduleListBuilder.php
+++ b/station_schedule/src/Entity/ScheduleListBuilder.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\station_schedule\Entity;
 
+use Drupal\station_schedule\ScheduleInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Url;
@@ -41,7 +42,7 @@ class ScheduleListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\station_schedule\ScheduleInterface $entity */
+    /** @var ScheduleInterface $entity */
     $row['title']['data'] = [
       '#type' => 'link',
       '#title' => $entity->label(),
diff --git a/station_schedule/src/Entity/ScheduleViewBuilder.php b/station_schedule/src/Entity/ScheduleViewBuilder.php
index 4e609b0..22fd37f 100644
--- a/station_schedule/src/Entity/ScheduleViewBuilder.php
+++ b/station_schedule/src/Entity/ScheduleViewBuilder.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\station_schedule\Entity;
 
+use Drupal\station_schedule\ScheduleInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Datetime\DateHelper;
 use Drupal\Core\Datetime\DrupalDateTime;
@@ -29,7 +30,7 @@ class ScheduleViewBuilder implements EntityViewBuilderInterface {
    * {@inheritdoc}
    */
   public function view(EntityInterface $entity, $view_mode = 'full', $langcode = NULL) {
-    /** @var \Drupal\station_schedule\ScheduleInterface $entity */
+    /** @var ScheduleInterface $entity */
     $header[0] = ['data' => $this->t('Time')];
     $row = [];
 
@@ -54,7 +55,7 @@ class ScheduleViewBuilder implements EntityViewBuilderInterface {
       $last_finish = $minutes_for_day + ($start_hour * 60);
       $day_finish = $minutes_for_day + ($end_hour * 60);
 
-      /** @var \Drupal\station_schedule\ScheduleItemInterface[] $items */
+      /** @var ScheduleItemInterface[] $items */
       foreach ($items as $item) {
         $start = $item->getStart();
         $finish = $item->getFinish();
diff --git a/station_schedule/src/Form/ScheduleSettingsForm.php b/station_schedule/src/Form/ScheduleSettingsForm.php
index 1b00225..bb38d70 100644
--- a/station_schedule/src/Form/ScheduleSettingsForm.php
+++ b/station_schedule/src/Form/ScheduleSettingsForm.php
@@ -20,21 +20,21 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class ScheduleSettingsForm extends ConfigFormBase {
 
   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $scheduleStorage;
 
   /**
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routeBuilder;
 
   /**
    * ScheduleSettingsForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $schedule_storage
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $route_builder
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param EntityStorageInterface $schedule_storage
+   * @param RouteBuilderInterface $route_builder
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(EntityStorageInterface $schedule_storage, RouteBuilderInterface $route_builder, ConfigFactoryInterface $config_factory) {
     parent::__construct($config_factory);
diff --git a/station_schedule/src/Plugin/Block/ScheduledItemBlock.php b/station_schedule/src/Plugin/Block/ScheduledItemBlock.php
index dd645b3..8f3407b 100644
--- a/station_schedule/src/Plugin/Block/ScheduledItemBlock.php
+++ b/station_schedule/src/Plugin/Block/ScheduledItemBlock.php
@@ -27,12 +27,12 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class ScheduledItemBlock extends BlockBase implements ContainerFactoryPluginInterface {
 
   /**
-   * @var \Drupal\station_schedule\ScheduleRepositoryInterface
+   * @var ScheduleRepositoryInterface
    */
   protected $scheduleRepository;
 
   /**
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $scheduleItemViewBuilder;
 
@@ -42,8 +42,8 @@ class ScheduledItemBlock extends BlockBase implements ContainerFactoryPluginInte
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\station_schedule\ScheduleRepositoryInterface $schedule_repository
-   * @param \Drupal\Core\Entity\EntityViewBuilderInterface $view_builder
+   * @param ScheduleRepositoryInterface $schedule_repository
+   * @param EntityViewBuilderInterface $view_builder
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ScheduleRepositoryInterface $schedule_repository, EntityViewBuilderInterface $view_builder) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
diff --git a/station_schedule/src/Routing/ScheduleRouteProvider.php b/station_schedule/src/Routing/ScheduleRouteProvider.php
index 499a047..e021b22 100644
--- a/station_schedule/src/Routing/ScheduleRouteProvider.php
+++ b/station_schedule/src/Routing/ScheduleRouteProvider.php
@@ -20,15 +20,15 @@ use Symfony\Component\Routing\Route;
 class ScheduleRouteProvider implements ContainerInjectionInterface {
 
   /**
-   * @var \Drupal\station_schedule\ScheduleRepositoryInterface
+   * @var ScheduleRepositoryInterface
    */
   protected $scheduleRepository;
 
   /**
    * ScheduleRouteProvider constructor.
    *
-   * @param \Drupal\station_schedule\ScheduleRepositoryInterface $schedule_repository
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ScheduleRepositoryInterface $schedule_repository
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(ScheduleRepositoryInterface $schedule_repository, ConfigFactoryInterface $config_factory) {
     $this->configFactory = $config_factory;
diff --git a/station_schedule/src/ScheduleInterface.php b/station_schedule/src/ScheduleInterface.php
index b76d4db..94ec91e 100644
--- a/station_schedule/src/ScheduleInterface.php
+++ b/station_schedule/src/ScheduleInterface.php
@@ -23,12 +23,12 @@ interface ScheduleInterface extends ContentEntityInterface {
   public function getUnscheduledMessage();
 
   /**
-   * @return \Drupal\station_schedule\ScheduleItemInterface[]
+   * @return ScheduleItemInterface[]
    */
   public function getScheduledItems();
 
   /**
-   * @return \Drupal\station_schedule\ScheduleItemInterface[][]
+   * @return ScheduleItemInterface[][]
    */
   public function getScheduledItemsByDay();
 
diff --git a/station_schedule/src/ScheduleItemInterface.php b/station_schedule/src/ScheduleItemInterface.php
index e8afb59..1f87177 100644
--- a/station_schedule/src/ScheduleItemInterface.php
+++ b/station_schedule/src/ScheduleItemInterface.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\station_schedule;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 
 /**
@@ -25,17 +26,17 @@ interface ScheduleItemInterface extends ContentEntityInterface {
   public function getFinish();
 
   /**
-   * @return \Drupal\station_schedule\ScheduleInterface
+   * @return ScheduleInterface
    */
   public function getSchedule();
 
   /**
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    */
   public function getProgram();
 
   /**
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    */
   public function getDjs();
 
diff --git a/station_schedule/src/ScheduleRepository.php b/station_schedule/src/ScheduleRepository.php
index c5fcecf..3263bc4 100644
--- a/station_schedule/src/ScheduleRepository.php
+++ b/station_schedule/src/ScheduleRepository.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\station_schedule;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\station_schedule\Entity\Schedule;
@@ -14,20 +15,20 @@ class ScheduleRepository implements ScheduleRepositoryInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $scheduleItemStorage;
 
   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * ScheduleRepository constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ConfigFactoryInterface $config_factory) {
     $this->scheduleItemStorage = $entity_type_manager->getStorage('station_schedule_item');
diff --git a/station_schedule/src/ScheduleRepositoryInterface.php b/station_schedule/src/ScheduleRepositoryInterface.php
index 38f94a5..5d607df 100644
--- a/station_schedule/src/ScheduleRepositoryInterface.php
+++ b/station_schedule/src/ScheduleRepositoryInterface.php
@@ -8,7 +8,7 @@ namespace Drupal\station_schedule;
 interface ScheduleRepositoryInterface {
 
   /**
-   * @return \Drupal\station_schedule\ScheduleInterface|null
+   * @return ScheduleInterface|null
    */
   public function getCurrentSchedule();
 
@@ -18,12 +18,12 @@ interface ScheduleRepositoryInterface {
   public function getCurrentScheduleId();
 
   /**
-   * @return \Drupal\station_schedule\ScheduleItemInterface|null
+   * @return ScheduleItemInterface|null
    */
   public function getCurrentScheduleItem();
 
   /**
-   * @return \Drupal\station_schedule\ScheduleItemInterface|null
+   * @return ScheduleItemInterface|null
    */
   public function getNextScheduleItem();
 
diff --git a/station_schedule/station_schedule.module b/station_schedule/station_schedule.module
index 92ff998..d3450b1 100644
--- a/station_schedule/station_schedule.module
+++ b/station_schedule/station_schedule.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\station_schedule\ScheduleItemInterface;
 /**
  * @file
  * Provides hook implementations for the Station Schedule module.
@@ -28,7 +29,7 @@ function station_schedule_theme($existing, $type, $theme, $path) {
  * Default template: station-schedule-item.html.twig.
  */
 function template_preprocess_station_schedule_item(&$variables) {
-  /** @var \Drupal\station_schedule\ScheduleItemInterface $entity */
+  /** @var ScheduleItemInterface $entity */
   $entity = $variables['elements']['#station_schedule_item'];
 
   $variables['time'] = DatetimeHelper::hourRange($entity->getStart(), $entity->getFinish());
diff --git a/station_schedule/tests/src/Functional/StationScheduleUITest.php b/station_schedule/tests/src/Functional/StationScheduleUITest.php
index de85c7f..6147e6d 100644
--- a/station_schedule/tests/src/Functional/StationScheduleUITest.php
+++ b/station_schedule/tests/src/Functional/StationScheduleUITest.php
@@ -6,6 +6,7 @@
  */
 namespace Drupal\Tests\station_schedule\Functional;
 
+use Drupal\node\NodeInterface;
 use Drupal\node\Entity\Node;
 use Drupal\Tests\BrowserTestBase;
 
@@ -27,7 +28,7 @@ class StationScheduleUITest extends BrowserTestBase {
   protected static $modules = ['station_schedule'];
 
   /**
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $programNode;
 
diff --git a/station_schedule/tests/src/Unit/HourWidgetTest.php b/station_schedule/tests/src/Unit/HourWidgetTest.php
index a4816a3..1d6cbeb 100644
--- a/station_schedule/tests/src/Unit/HourWidgetTest.php
+++ b/station_schedule/tests/src/Unit/HourWidgetTest.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\Tests\station_schedule\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\station_schedule\Plugin\Field\FieldWidget\Hour;
 use Drupal\Tests\UnitTestCase;
@@ -17,6 +18,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class HourWidgetTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * @covers ::hourOptions
    * @dataProvider providerTestHourOptions
