modules/contrib/site_per_path/src/EventSubscriber/SitePerPathSubscriber.php

1 file with changes
===================

1) modules/contrib/site_per_path/src/EventSubscriber/SitePerPathSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\site_per_path\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\Core\Condition\ConditionManager;
@@ @@
 use Drupal\Core\Routing\TrustedRedirectResponse;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * The condition manager.
    *
-   * @var \Drupal\Core\Condition\ConditionManager
+   * @var ConditionManager
    */
   protected $conditionManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * SitePerPathSubscriber constructor.
    *
-   * @param \Drupal\Core\Condition\ConditionManager $conditionManager
+   * @param ConditionManager $conditionManager
    *   The condition manager.
-   * @param \Drupal\Core\Config\ConfigFactory $configFactory
+   * @param ConfigFactory $configFactory
    *   The config factory.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack.
    */
   public function __construct(ConditionManager $conditionManager, ConfigFactory $configFactory, RequestStack $requestStack) {
@@ @@
   /**
    * Checks whether request should be redirected to another site.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The response event.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $sites = $this->configFactory->get('site_per_path.settings')->get('sites');

     // Do nothing if no config is set.
@@ @@
   /**
    * Responds to kernel respones.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     if ($response instanceof CacheableResponseInterface) {
       $response->addCacheableDependency((new CacheableMetadata())->addCacheContexts(['url.site']));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 1 file has been changed by Rector                                         

