modules/contrib/acquia_purge/modules/acquia_purge_geoip/src/EventSubscriber/SetVaryHeader.php
modules/contrib/acquia_purge/src/AcquiaCloud/Hash.php
modules/contrib/acquia_purge/src/AcquiaCloud/PlatformInfo.php
modules/contrib/acquia_purge/src/AcquiaCloud/PlatformInfoInterface.php
modules/contrib/acquia_purge/src/AcquiaPlatformCdn/BackendBase.php
modules/contrib/acquia_purge/src/AcquiaPlatformCdn/BackendFactory.php
modules/contrib/acquia_purge/src/AcquiaPlatformCdn/BackendInterface.php
modules/contrib/acquia_purge/src/AcquiaPlatformCdn/FastlyBackend.php
modules/contrib/acquia_purge/src/EventSubscriber/CacheableResponseSubscriber.php
modules/contrib/acquia_purge/src/Http/AcquiaCloudBalancerException.php
modules/contrib/acquia_purge/src/Http/AcquiaCloudBalancerMiddleware.php
modules/contrib/acquia_purge/src/Http/DebuggerMiddleware.php
modules/contrib/acquia_purge/src/Plugin/Purge/DiagnosticCheck/AcquiaCloudCheck.php
modules/contrib/acquia_purge/src/Plugin/Purge/DiagnosticCheck/AcquiaPlatformCdnCheck.php
modules/contrib/acquia_purge/src/Plugin/Purge/DiagnosticCheck/RecommendationsCheck.php
modules/contrib/acquia_purge/src/Plugin/Purge/Purger/AcquiaCloudPurger.php
modules/contrib/acquia_purge/src/Plugin/Purge/Purger/AcquiaPlatformCdnPurger.php
modules/contrib/acquia_purge/src/Plugin/Purge/Purger/Debugger.php
modules/contrib/acquia_purge/src/Plugin/Purge/Purger/DebuggerAwareInterface.php
modules/contrib/acquia_purge/src/Plugin/Purge/Purger/DebuggerAwareTrait.php
modules/contrib/acquia_purge/src/Plugin/Purge/Purger/DebuggerInterface.php
modules/contrib/acquia_purge/src/Plugin/Purge/TagsHeader/AcquiaCloudSiteHeader.php
modules/contrib/acquia_purge/src/Plugin/Purge/TagsHeader/AcquiaCloudTagsHeader.php
modules/contrib/acquia_purge/src/Plugin/Purge/TagsHeader/AcquiaPlatformCdnTagsHeader.php
modules/contrib/acquia_purge/src/Plugin/Purge/TagsHeader/TagsHeaderValue.php

16 files with changes
=====================

1) modules/contrib/acquia_purge/src/Plugin/Purge/TagsHeader/AcquiaPlatformCdnTagsHeader.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * Information object interfacing with the Acquia platform.
    *
-   * @var \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface
+   * @var PlatformInfoInterface
    */
   protected $platformInfo;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $acquia_purge_platforminfo
+   * @param PlatformInfoInterface $acquia_purge_platforminfo
    *   Information object interfacing with the Acquia platform.
    */
   final public function __construct(array $configuration, $plugin_id, $plugin_definition, PlatformInfoInterface $acquia_purge_platforminfo) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/acquia_purge/src/Plugin/Purge/TagsHeader/AcquiaCloudSiteHeader.php:33

    ---------- begin diff ----------
@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $acquia_purge_platforminfo
+   * @param PlatformInfoInterface $acquia_purge_platforminfo
    *   Provides technical information accessors for Acquia Cloud.
    */
   final public function __construct(array $configuration, $plugin_id, $plugin_definition, PlatformInfoInterface $acquia_purge_platforminfo) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/acquia_purge/src/Plugin/Purge/Purger/DebuggerInterface.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Construct a debugger.
    *
-   * @param \Drupal\purge\Logger\LoggerChannelPartInterface $logger
+   * @param LoggerChannelPartInterface $logger
    *   The logger passed to the Platform CDN purger.
    */
   public function __construct(LoggerChannelPartInterface $logger);
@@ @@
   /**
    * Extract information from a request.
    *
-   * @param \Psr\Http\Message\RequestInterface $request
+   * @param RequestInterface $request
    *   The HTTP request object.
    * @param bool $body_title
    *   Whether the request body should be a titled array key.
@@ @@
   /**
    * Extract information from a response.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   The HTTP response object.
    * @param bool $body_title
    *   Whether the respone body should be a titled array key.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/acquia_purge/src/Plugin/Purge/Purger/DebuggerAwareTrait.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The debugger instance.
    *
-   * @var null|\Drupal\acquia_purge\Plugin\Purge\Purger\DebuggerInterface
+   * @var null|DebuggerInterface
    */
   private $debuggerInstance = NULL;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/acquia_purge/src/Plugin/Purge/Purger/DebuggerAwareInterface.php:12

    ---------- begin diff ----------
@@ @@
    * @warning
    *   Calls $this->logger() which must be able to return a logger.
    *
-   * @return \Drupal\acquia_purge\Plugin\Purge\Purger\DebuggerInterface
+   * @return DebuggerInterface
    *   The debugger.
    */
   public function debugger();
@@ @@
   /**
    * Set the debugger instance.
    *
-   * @param \Drupal\acquia_purge\Plugin\Purge\Purger\DebuggerInterface $debugger
+   * @param DebuggerInterface $debugger
    *   The debugger.
    * @param bool $throw
    *   Throw an exception when the debugger is already set.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/acquia_purge/src/Plugin/Purge/Purger/AcquiaPlatformCdnPurger.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\acquia_purge\Plugin\Purge\Purger;

+use Drupal\acquia_purge\AcquiaPlatformCdn\BackendInterface;
 use Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface;
 use Drupal\acquia_purge\AcquiaPlatformCdn\BackendFactory;
 use Drupal\purge\Plugin\Purge\Purger\PurgerBase;
@@ @@
   /**
    * The Acquia Platform CDN backend.
    *
-   * @var null|\Drupal\acquia_purge\AcquiaPlatformCdn\BackendInterface
+   * @var null|BackendInterface
    */
   protected $backend = NULL;

@@ @@
   /**
    * Information object interfacing with the Acquia platform.
    *
-   * @var \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface
+   * @var PlatformInfoInterface
    */
   protected $platformInfo;

@@ @@
   /**
    * The Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Constructs a AcquiaCdnPurger object.
    *
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $acquia_purge_platforminfo
+   * @param PlatformInfoInterface $acquia_purge_platforminfo
    *   Information object interfacing with the Acquia platform.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   An HTTP client that can perform remote requests.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/acquia_purge/src/Plugin/Purge/Purger/AcquiaCloudPurger.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * Information object interfacing with the Acquia platform.
    *
-   * @var \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface
+   * @var PlatformInfoInterface
    */
   protected $platformInfo;

@@ @@
   /**
    * The Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Constructs a AcquiaCloudPurger object.
    *
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $acquia_purge_platforminfo
+   * @param PlatformInfoInterface $acquia_purge_platforminfo
    *   Information object interfacing with the Acquia platform.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   An HTTP client that can perform remote requests.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/acquia_purge/src/Plugin/Purge/DiagnosticCheck/RecommendationsCheck.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The instantiated Cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * A config factory object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The purge processors service.
    *
-   * @var \Drupal\purge\Plugin\Purge\Processor\ProcessorsServiceInterface
+   * @var ProcessorsServiceInterface
    */
   protected $purgeProcessors;

@@ @@
   /**
    * The purge queuers service.
    *
-   * @var \Drupal\purge\Plugin\Purge\Queuer\QueuersServiceInterface
+   * @var QueuersServiceInterface
    */
   protected $purgeQueuers;

@@ @@
   /**
    * The purge purgers service.
    *
-   * @var \Drupal\purge\Plugin\Purge\Purger\PurgersServiceInterface
+   * @var PurgersServiceInterface
    */
   protected $purgePurgers;

@@ @@
   /**
    * The global Drupal settings object.
    *
-   * @var \Drupal\Core\Site\Settings
+   * @var Settings
    */
   protected $settings;

@@ @@
    *
    * @param string $root
    *   The app root.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\purge\Plugin\Purge\Processor\ProcessorsServiceInterface $purge_processors
+   * @param ProcessorsServiceInterface $purge_processors
    *   The purge processors service.
-   * @param \Drupal\purge\Plugin\Purge\Queuer\QueuersServiceInterface $purge_queuers
+   * @param QueuersServiceInterface $purge_queuers
    *   The purge queuers service.
-   * @param \Drupal\purge\Plugin\Purge\Purger\PurgersServiceInterface $purge_purgers
+   * @param PurgersServiceInterface $purge_purgers
    *   The purge purgers service.
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   Drupal site settings object.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/acquia_purge/src/Plugin/Purge/DiagnosticCheck/AcquiaPlatformCdnCheck.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Information object interfacing with the Acquia platform.
    *
-   * @var \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface
+   * @var PlatformInfoInterface
    */
   protected $platformInfo;

@@ @@
   /**
    * Constructs a AcquiaPlatformCdnCheck object.
    *
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $acquia_purge_platforminfo
+   * @param PlatformInfoInterface $acquia_purge_platforminfo
    *   Information object interfacing with the Acquia platform.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/acquia_purge/src/Plugin/Purge/DiagnosticCheck/AcquiaCloudCheck.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The module extension list.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;

@@ @@
   /**
    * Information object interfacing with the Acquia platform.
    *
-   * @var \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface
+   * @var PlatformInfoInterface
    */
   protected $platformInfo;

@@ @@
   /**
    * Constructs a AcquiaCloudCheck object.
    *
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $acquia_purge_platforminfo
+   * @param PlatformInfoInterface $acquia_purge_platforminfo
    *   Information object interfacing with the Acquia platform.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $moduleExtensionList
+   * @param ModuleExtensionList $moduleExtensionList
    *   The module extension list.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/acquia_purge/src/EventSubscriber/CacheableResponseSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\acquia_purge\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\purge\EventSubscriber\CacheableResponseSubscriber as PurgeCacheableResponseSubscriber;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Add cache tags headers on cacheable responses.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/acquia_purge/src/AcquiaPlatformCdn/FastlyBackend.php:270

    ---------- begin diff ----------
@@ @@
   /**
    * Decode JSON from a Fastly response object body.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   The HTTP response object.
    *
    * @throws \RuntimeException
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/acquia_purge/src/AcquiaPlatformCdn/BackendInterface.php:18

    ---------- begin diff ----------
@@ @@
    *
    * @param array $config
    *   Acquia Platform CDN configuration settings.
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $acquia_purge_platforminfo
+   * @param PlatformInfoInterface $acquia_purge_platforminfo
    *   Information object interfacing with the Acquia platform.
-   * @param \Drupal\purge\Logger\LoggerChannelPartInterface $logger
+   * @param LoggerChannelPartInterface $logger
    *   The logger passed to the Platform CDN purger.
-   * @param \Drupal\acquia_purge\Plugin\Purge\Purger\DebuggerInterface $debugger
+   * @param DebuggerInterface $debugger
    *   The centralized debugger for Acquia purger plugins.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   An HTTP client that can perform remote requests.
    */
   public function __construct(array $config, PlatformInfoInterface $acquia_purge_platforminfo, LoggerChannelPartInterface $logger, DebuggerInterface $debugger, ClientInterface $http_client);
@@ @@
   /**
    * Get the information object interfacing with the Acquia platform.
    *
-   * @param null|\Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $set
+   * @param null|PlatformInfoInterface $set
    *   Set the object initially.
    *
    * @throws \RuntimeException
    *   Thrown when the object hasn't been set yet.
    *
-   * @return \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface
+   * @return PlatformInfoInterface
    *   Information object interfacing with the Acquia platform.
    */
   public static function platformInfo(PlatformInfoInterface $set = NULL);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


14) modules/contrib/acquia_purge/src/AcquiaPlatformCdn/BackendFactory.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Get a instantiated Platform CDN purger backend.
    *
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $platforminfo
+   * @param PlatformInfoInterface $platforminfo
    *   Information object interfacing with the Acquia platform.
-   * @param \Drupal\purge\Logger\LoggerChannelPartInterface $logger
+   * @param LoggerChannelPartInterface $logger
    *   The logger passed to the Platform CDN purger.
-   * @param \Drupal\acquia_purge\Plugin\Purge\Purger\DebuggerInterface $debugger
+   * @param DebuggerInterface $debugger
    *   The centralized debugger for Acquia purger plugins.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   An HTTP client that can perform remote requests.
    *
-   * @return null|\Drupal\acquia_purge\AcquiaPlatformCdn\BackendInterface
+   * @return null|BackendInterface
    *   The instantiated backend or NULL in case of failure.
    */
   public static function get(PlatformInfoInterface $platforminfo, LoggerChannelPartInterface $logger, DebuggerInterface $debugger, ClientInterface $http_client) {
@@ @@
   /**
    * Get the CDN configuration array.
    *
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $platforminfo
+   * @param PlatformInfoInterface $platforminfo
    *   Information object interfacing with the Acquia platform.
    *
    * @return array|null
@@ @@
   /**
    * Get the backend class based on platform configuration.
    *
-   * @param \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface $platforminfo
+   * @param PlatformInfoInterface $platforminfo
    *   Information object interfacing with the Acquia platform.
    *
    * @return string|null
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


15) modules/contrib/acquia_purge/src/AcquiaPlatformCdn/BackendBase.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Information object interfacing with the Acquia platform.
    *
-   * @var \Drupal\acquia_purge\AcquiaCloud\PlatformInfoInterface
+   * @var PlatformInfoInterface
    */
   protected $platformInfo;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


16) modules/contrib/acquia_purge/src/AcquiaCloud/PlatformInfo.php:90

    ---------- begin diff ----------
@@ @@
    *
    * @param string $site_path
    *   The site path.
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   Drupal site settings object.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state key value store.
    */
   public function __construct(string $site_path, Settings $settings, StateInterface $state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 16 files have been changed by Rector                                      

