diff --git a/src/BaseSubsitePlugin.php b/src/BaseSubsitePlugin.php
index d4c51b4..44369bb 100644
--- a/src/BaseSubsitePlugin.php
+++ b/src/BaseSubsitePlugin.php
@@ -88,7 +88,7 @@ class BaseSubsitePlugin extends PluginBase implements SubsitePluginInterface {
    *
    * @param array $form
    *   An associative array containing the initial structure of the plugin form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @return array
@@ -104,7 +104,7 @@ class BaseSubsitePlugin extends PluginBase implements SubsitePluginInterface {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    */
   public function validateConfigurationForm(array &$form, FormStateInterface $form_state) {
@@ -117,7 +117,7 @@ class BaseSubsitePlugin extends PluginBase implements SubsitePluginInterface {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    */
   public function submitConfigurationForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Cache/SubsiteCacheContext.php b/src/Cache/SubsiteCacheContext.php
index e5193fe..cb41648 100644
--- a/src/Cache/SubsiteCacheContext.php
+++ b/src/Cache/SubsiteCacheContext.php
@@ -33,14 +33,14 @@ class SubsiteCacheContext implements CacheContextInterface, ContainerAwareInterf
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Constructs a new BookNavigationCacheContext service.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(RequestStack $request_stack) {
diff --git a/src/Controller/SubsiteController.php b/src/Controller/SubsiteController.php
index 68d41e4..cd7319d 100644
--- a/src/Controller/SubsiteController.php
+++ b/src/Controller/SubsiteController.php
@@ -27,23 +27,23 @@ class SubsiteController extends ControllerBase {
   /**
    * The subsite manager.
    *
-   * @var \Drupal\subsite\SubsiteManagerInterface
+   * @var SubsiteManagerInterface
    */
   protected $subsiteManager;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Constructs a SubsiteController object.
    *
-   * @param \Drupal\subsite\SubsiteManagerInterface $subsiteManager
+   * @param SubsiteManagerInterface $subsiteManager
    *   The subsite manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(SubsiteManagerInterface $subsiteManager, RendererInterface $renderer) {
@@ -139,14 +139,14 @@ class SubsiteController extends ControllerBase {
    *   currently supported in book module:
    *   - html: Printer-friendly HTML.
    *   Other types may be supported in contributed modules.
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node to export.
    *
    * @return array
    *   A render array representing the node and its children in the book
    *   hierarchy in a format determined by the $type parameter.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    */
   public function bookExport($type, NodeInterface $node) {
     $method = 'bookExport' . Container::camelize($type);
diff --git a/src/PathProcessor/SubsitePathProcessor.php b/src/PathProcessor/SubsitePathProcessor.php
index d828555..65d9d91 100644
--- a/src/PathProcessor/SubsitePathProcessor.php
+++ b/src/PathProcessor/SubsitePathProcessor.php
@@ -43,9 +43,9 @@ class SubsitePathProcessor implements OutboundPathProcessorInterface {
    *     dependent URL requires so.
    *   - 'route': The route object for the given path. It will be set by
    *     \Drupal\Core\Routing\UrlGenerator::generateFromRoute().
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The HttpRequest object representing the current request.
-   * @param \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata
+   * @param BubbleableMetadata $bubbleable_metadata
    *   (optional) Object to collect path processors' bubbleable metadata.
    *
    * @return string
diff --git a/src/Plugin/Block/BookMainNavigationBlock.php b/src/Plugin/Block/BookMainNavigationBlock.php
index 82cdbff..9ee2bd2 100644
--- a/src/Plugin/Block/BookMainNavigationBlock.php
+++ b/src/Plugin/Block/BookMainNavigationBlock.php
@@ -29,21 +29,21 @@ class BookMainNavigationBlock extends BlockBase implements ContainerFactoryPlugi
   /**
    * The request object.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The book manager.
    *
-   * @var \Drupal\book\BookManagerInterface
+   * @var BookManagerInterface
    */
   protected $bookManager;
 
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeStorage;
 
@@ -56,11 +56,11 @@ class BookMainNavigationBlock extends BlockBase implements ContainerFactoryPlugi
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack object.
-   * @param \Drupal\book\BookManagerInterface $book_manager
+   * @param BookManagerInterface $book_manager
    *   The book manager.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_storage
+   * @param EntityStorageInterface $node_storage
    *   The node storage.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RequestStack $request_stack, BookManagerInterface $book_manager, EntityStorageInterface $node_storage) {
diff --git a/src/Plugin/Block/SubsiteFooterLinksBlock.php b/src/Plugin/Block/SubsiteFooterLinksBlock.php
index 232b13f..f96ee03 100644
--- a/src/Plugin/Block/SubsiteFooterLinksBlock.php
+++ b/src/Plugin/Block/SubsiteFooterLinksBlock.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\subsite\Plugin\Block;
 
+use Drupal\node\Entity\Node;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -33,8 +34,8 @@ class SubsiteFooterLinksBlock extends BlockBase implements ContainerFactoryPlugi
     }
 
     if ($current_bid) {
-      /** @var \Drupal\node\Entity\Node $theme_node */
-      $subsite_node = \Drupal\node\Entity\Node::load($current_bid);
+      /** @var Node $theme_node */
+      $subsite_node = Node::load($current_bid);
 
       if ($subsite_node->getType() == 'sub_site') {
         // Expect theme ref field.
@@ -58,7 +59,7 @@ class SubsiteFooterLinksBlock extends BlockBase implements ContainerFactoryPlugi
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/Block/SubsiteSocialLinksBlock.php b/src/Plugin/Block/SubsiteSocialLinksBlock.php
index 8e9dfa9..4a0b24b 100644
--- a/src/Plugin/Block/SubsiteSocialLinksBlock.php
+++ b/src/Plugin/Block/SubsiteSocialLinksBlock.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\subsite\Plugin\Block;
 
+use Drupal\node\Entity\Node;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -33,8 +34,8 @@ class SubsiteSocialLinksBlock extends BlockBase implements ContainerFactoryPlugi
     }
 
     if ($current_bid) {
-      /** @var \Drupal\node\Entity\Node $theme_node */
-      $subsite_node = \Drupal\node\Entity\Node::load($current_bid);
+      /** @var Node $theme_node */
+      $subsite_node = Node::load($current_bid);
 
       if ($subsite_node->getType() == 'sub_site') {
         // Expect theme ref field.
@@ -66,7 +67,7 @@ class SubsiteSocialLinksBlock extends BlockBase implements ContainerFactoryPlugi
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/Subsite/BookSubsitePlugin.php b/src/Plugin/Subsite/BookSubsitePlugin.php
index a2052d3..8d8e9c9 100644
--- a/src/Plugin/Subsite/BookSubsitePlugin.php
+++ b/src/Plugin/Subsite/BookSubsitePlugin.php
@@ -7,6 +7,7 @@
  */
 
 namespace Drupal\subsite\Plugin\Subsite;
+use Drupal\node\Entity\Node;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -99,7 +100,7 @@ class BookSubsitePlugin extends BaseSubsitePlugin {
    *
    * @param array $form
    *   An associative array containing the initial structure of the plugin form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @return array
@@ -140,8 +141,8 @@ class BookSubsitePlugin extends BaseSubsitePlugin {
 
   /**
    * @param array $build
-   * @param \Drupal\Core\Entity\EntityInterface $node
-   * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+   * @param EntityInterface $node
+   * @param EntityViewDisplayInterface $display
    */
   public function nodeViewAlter(array &$build, EntityInterface $node, EntityViewDisplayInterface $display) {
     $configuration = $this->getConfiguration();
@@ -193,7 +194,7 @@ class BookSubsitePlugin extends BaseSubsitePlugin {
                 }
 
                 if (!empty($child_nids)) {
-                  $nodes = \Drupal\node\Entity\Node::loadMultiple($child_nids);
+                  $nodes = Node::loadMultiple($child_nids);
                   $built_child_nodes = \Drupal::entityTypeManager()->getViewBuilder('node')->viewMultiple($nodes, 'teaser');
                   $built_child_nodes['#weight'] = 200;
                   $build['subsite_touts'] = $built_child_nodes;
diff --git a/src/Plugin/Subsite/BrandingSubsitePlugin.php b/src/Plugin/Subsite/BrandingSubsitePlugin.php
index c77e48c..a2e0753 100644
--- a/src/Plugin/Subsite/BrandingSubsitePlugin.php
+++ b/src/Plugin/Subsite/BrandingSubsitePlugin.php
@@ -9,6 +9,8 @@
 
 namespace Drupal\subsite\Plugin\Subsite;
 
+use Drupal\file\FileInterface;
+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Cache\Cache;
@@ -16,7 +18,6 @@ use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\subsite\BaseSubsitePlugin;
 use Drupal\subsite\SubsitePluginInterface;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 
 /**
  * @Plugin(
@@ -60,7 +61,7 @@ class BrandingSubsitePlugin extends BaseSubsitePlugin {
    *
    * @param array $form
    *   An associative array containing the initial structure of the plugin form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @return array
@@ -115,7 +116,7 @@ class BrandingSubsitePlugin extends BaseSubsitePlugin {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    */
   public function validateConfigurationForm(array &$form, FormStateInterface $form_state) {
@@ -157,7 +158,7 @@ class BrandingSubsitePlugin extends BaseSubsitePlugin {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    */
   public function submitConfigurationForm(array &$form, FormStateInterface $form_state) {
@@ -166,14 +167,14 @@ class BrandingSubsitePlugin extends BaseSubsitePlugin {
     // If the user uploaded a new logo or favicon, save it to a permanent location
     // and use it in place of the default theme-provided file.
     if (!empty($plugin_form_values['logo_upload'])) {
-      /** @var \Drupal\file\FileInterface $file */
+      /** @var FileInterface $file */
       $file = $plugin_form_values['logo_upload'];
       $filename = FileSystemInterface::copy($file->getFileUri(), \Drupal::config('system.file')->get('default_scheme') . '://' . $file->getFilename());
       $plugin_form_values['logo_path'] = $filename;
     }
 
     if (!empty($plugin_form_values['favicon_upload'])) {
-      /** @var \Drupal\file\FileInterface $file */
+      /** @var FileInterface $file */
       $file = $plugin_form_values['favicon_upload'];
       $filename = FileSystemInterface::copy($file->getFileUri(), \Drupal::config('system.file')->get('default_scheme') . '://' . $file->getFilename());
       $plugin_form_values['favicon_path'] = $filename;
@@ -200,7 +201,7 @@ class BrandingSubsitePlugin extends BaseSubsitePlugin {
     }
 
     if (!empty($branding_configuration['logo_path'])) {
-      $logo_url = file_create_url($branding_configuration['logo_path']);
+      $logo_url = \Drupal::service('file_url_generator')->generateAbsoluteString($branding_configuration['logo_path']);
       $build['content']['site_logo']['#uri'] = $logo_url;
     }
 
@@ -211,10 +212,10 @@ class BrandingSubsitePlugin extends BaseSubsitePlugin {
     $branding_configuration = $this->getConfiguration();
 
     if (!empty($branding_configuration['favicon_path'])) {
-      /** @var MimeTypeGuesserInterface $mime_type_guesser */
+      /** @var MimeTypesInterface $mime_type_guesser */
       $mime_type_guesser = \Drupal::service('file.mime_type.guesser');
       $mime_type = $mime_type_guesser->guess($branding_configuration['favicon_path']);
-      $favicon_url = file_create_url($branding_configuration['favicon_path']);
+      $favicon_url = \Drupal::service('file_url_generator')->generateAbsoluteString($branding_configuration['favicon_path']);
       foreach ($attachments['#attached']['html_head_link'] as $key => $value) {
         foreach ($value as $inner_key => $inner_value) {
           if (!empty($inner_value['rel']) && $inner_value['rel'] == 'shortcut icon') {
diff --git a/src/Plugin/Subsite/SocialMediaPlugin.php b/src/Plugin/Subsite/SocialMediaPlugin.php
index 2eedc3f..0150d39 100644
--- a/src/Plugin/Subsite/SocialMediaPlugin.php
+++ b/src/Plugin/Subsite/SocialMediaPlugin.php
@@ -108,7 +108,7 @@ class SocialMediaPlugin extends BaseSubsitePlugin {
    *
    * @param array $form
    *   An associative array containing the initial structure of the plugin form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @return array
@@ -173,7 +173,7 @@ class SocialMediaPlugin extends BaseSubsitePlugin {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    */
   public function validateConfigurationForm(array &$form, FormStateInterface $form_state) {
@@ -185,7 +185,7 @@ class SocialMediaPlugin extends BaseSubsitePlugin {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    */
   public function submitConfigurationForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Plugin/Subsite/ThemeSubsitePlugin.php b/src/Plugin/Subsite/ThemeSubsitePlugin.php
index 25bd07b..43a2996 100644
--- a/src/Plugin/Subsite/ThemeSubsitePlugin.php
+++ b/src/Plugin/Subsite/ThemeSubsitePlugin.php
@@ -102,7 +102,7 @@ class ThemeSubsitePlugin extends BaseSubsitePlugin {
    *
    * @param array $form
    *   An associative array containing the initial structure of the plugin form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @return array
@@ -131,7 +131,7 @@ class ThemeSubsitePlugin extends BaseSubsitePlugin {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    */
   public function validateConfigurationForm(array &$form, FormStateInterface $form_state) {
@@ -144,7 +144,7 @@ class ThemeSubsitePlugin extends BaseSubsitePlugin {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    */
   public function submitConfigurationForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/SubsiteManager.php b/src/SubsiteManager.php
index 4129558..9f6b5d7 100644
--- a/src/SubsiteManager.php
+++ b/src/SubsiteManager.php
@@ -8,6 +8,7 @@
 
 namespace Drupal\subsite;
 
+use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -31,7 +32,7 @@ class SubsiteManager implements SubsiteManagerInterface, TrustedCallbackInterfac
   }
 
   /**
-   * @return \Drupal\subsite\SubsitePluginInterface[]
+   * @return SubsitePluginInterface[]
    */
   public function getPluginDefinitions() {
     /** @var SubsitePluginManager $subsitePluginManager */
@@ -76,7 +77,7 @@ class SubsiteManager implements SubsiteManagerInterface, TrustedCallbackInterfac
   /**
    * Get the subsite field attached to a given node.
    *
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    */
   public function getSubsiteField(Node $node) {
     $subsite_fields = array();
@@ -159,7 +160,7 @@ class SubsiteManager implements SubsiteManagerInterface, TrustedCallbackInterfac
 
     if ($current_bid) {
       /** @var Node $subsite_node */
-      $subsite_node = \Drupal\node\Entity\Node::load($current_bid);
+      $subsite_node = Node::load($current_bid);
       if ($this->getSubsiteField($subsite_node)) {
         return $subsite_node;
       }
@@ -188,9 +189,9 @@ class SubsiteManager implements SubsiteManagerInterface, TrustedCallbackInterfac
    * that need to.
    *
    * @param array $build
-   * @param \Drupal\Core\Block\BlockPluginInterface $block
+   * @param BlockPluginInterface $block
    */
-  public function blockViewAlter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {
+  public function blockViewAlter(array &$build, BlockPluginInterface $block) {
     $prerender_plugins = $this->getBlockPrerenderPluginIds($block->getPluginId());
     if (!empty($prerender_plugins)) {
       $build['#pre_render'][] = '\Drupal\subsite\SubsiteManager::blockPrerender';
@@ -224,8 +225,8 @@ class SubsiteManager implements SubsiteManagerInterface, TrustedCallbackInterfac
    * Allow all plugins to alter the current node.
    *
    * @param array $build
-   * @param \Drupal\Core\Entity\EntityInterface $node
-   * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+   * @param EntityInterface $node
+   * @param EntityViewDisplayInterface $display
    */
   public function nodeViewAlter(array &$build, EntityInterface $node, EntityViewDisplayInterface $display) {
     $pluginDefinitions = $this->getPluginDefinitions();
diff --git a/src/SubsiteManagerInterface.php b/src/SubsiteManagerInterface.php
index 3920cc4..a5d9fb4 100644
--- a/src/SubsiteManagerInterface.php
+++ b/src/SubsiteManagerInterface.php
@@ -8,6 +8,7 @@
 
 namespace Drupal\subsite;
 
+use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -22,11 +23,11 @@ interface SubsiteManagerInterface {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node whose form is being viewed.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account viewing the form.
    * @param bool $collapsed
    *   If TRUE, the fieldset starts out collapsed.
@@ -38,12 +39,12 @@ interface SubsiteManagerInterface {
   public function validateFormElements(array $form, FormStateInterface $form_state, NodeInterface $node, AccountInterface $account);
   public function getFormValues(array $form, FormStateInterface $form_state);
 
-  public function blockViewAlter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block);
+  public function blockViewAlter(array &$build, BlockPluginInterface $block);
   public function nodeViewAlter(array &$build, EntityInterface $node, EntityViewDisplayInterface $display);
   public function pageAttachmentsAlter(array &$attachments);
 
   /**
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    */
   public function getSubsiteField(Node $node);
 }
\ No newline at end of file
diff --git a/src/SubsitePluginManager.php b/src/SubsitePluginManager.php
index 8231442..37dc11d 100644
--- a/src/SubsitePluginManager.php
+++ b/src/SubsitePluginManager.php
@@ -22,9 +22,9 @@ class SubsitePluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/subsite.info.yml b/subsite.info.yml
index a509867..3c47dd9 100644
--- a/subsite.info.yml
+++ b/subsite.info.yml
@@ -2,8 +2,7 @@ name: Sub Site
 type: module
 description: Very basic support for sub sites using the book module.
 package: Sub sites
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
  - book
diff --git a/subsite.module b/subsite.module
index e1834b8..7e3c0c2 100644
--- a/subsite.module
+++ b/subsite.module
@@ -1,4 +1,5 @@
 <?php
+use Drupal\Core\Block\BlockPluginInterface;
 /**
  * Created by PhpStorm.
  * User: andy
@@ -105,7 +106,7 @@ function subsite_node_view_alter(array &$build, EntityInterface $node, EntityVie
  *
  * @param $attachments
  */
-function subsite_block_view_alter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {
+function subsite_block_view_alter(array &$build, BlockPluginInterface $block) {
   $subsite_manager = \Drupal::service('subsite.manager');
   $subsite_manager->blockViewAlter($build, $block);
 }
