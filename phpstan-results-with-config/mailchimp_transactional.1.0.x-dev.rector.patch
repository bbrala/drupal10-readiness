diff --git a/modules/mailchimp_transactional_activity/mailchimp_transactional_activity.install b/modules/mailchimp_transactional_activity/mailchimp_transactional_activity.install
index 7932ed2..388fa7d 100644
--- a/modules/mailchimp_transactional_activity/mailchimp_transactional_activity.install
+++ b/modules/mailchimp_transactional_activity/mailchimp_transactional_activity.install
@@ -6,6 +6,9 @@
  */
 
 declare(strict_types=1);
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 
 use Drupal\user\Entity\Role;
 
@@ -15,9 +18,9 @@ use Drupal\user\Entity\Role;
  * Migrates configuration entities from mandrill activity module, as well as
  * role permissions.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+ * @throws EntityStorageException
+ * @throws PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
  */
 function mailchimp_transactional_activity_install() {
   if (\Drupal::moduleHandler()->moduleExists('mandrill_activity')) {
diff --git a/modules/mailchimp_transactional_activity/src/Controller/ActivityController.php b/modules/mailchimp_transactional_activity/src/Controller/ActivityController.php
index e9067f7..e17de8a 100644
--- a/modules/mailchimp_transactional_activity/src/Controller/ActivityController.php
+++ b/modules/mailchimp_transactional_activity/src/Controller/ActivityController.php
@@ -9,6 +9,7 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional_activity\Controller;
 
+use Drupal\mailchimp_transactional\API;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\mailchimp_transactional\APIInterface;
@@ -23,14 +24,14 @@ class ActivityController extends ControllerBase {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The Mailchimp Transactional API.
    *
-   * @var \Drupal\mailchimp_transactional\APIInterface
+   * @var APIInterface
    */
   protected $mailchimpTransactionalApi;
 
@@ -55,7 +56,7 @@ class ActivityController extends ControllerBase {
   /**
    * View Mailchimp Transactional activity for a given user.
    *
-   * @param \Drupal\user\Entity\User $user
+   * @param User $user
    *   The User to view activity for.
    *
    * @return array
@@ -64,7 +65,7 @@ class ActivityController extends ControllerBase {
   public function overview(User $user) {
     $content = [];
 
-    /** @var \Drupal\mailchimp_transactional\API $this->mailchimpTransactionalApi */
+    /** @var API $this ->mailchimpTransactionalApi */
     $email = $user->getEmail();
     $messages = $this->mailchimpTransactionalApi->getMessages($email);
 
diff --git a/modules/mailchimp_transactional_activity/src/Form/ActivityForm.php b/modules/mailchimp_transactional_activity/src/Form/ActivityForm.php
index 6bb867b..bb2e0b2 100644
--- a/modules/mailchimp_transactional_activity/src/Form/ActivityForm.php
+++ b/modules/mailchimp_transactional_activity/src/Form/ActivityForm.php
@@ -8,6 +8,8 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional_activity\Form;
 
+use Drupal\mailchimp_transactional_activity\Entity\Activity;
+use Drupal\Core\Entity\EntityType;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
@@ -26,7 +28,7 @@ class ActivityForm extends EntityForm {
   /**
    * The route builder.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routeBuilder;
 
@@ -34,14 +36,14 @@ class ActivityForm extends EntityForm {
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
@@ -72,7 +74,7 @@ class ActivityForm extends EntityForm {
     $form = parent::form($form, $form_state);
     $user_input = $form_state->getUserInput();
 
-    /** @var \Drupal\mailchimp_transactional_activity\Entity\Activity $activity */
+    /** @var Activity $activity */
     $activity = $this->entity;
 
     $entity_not_null = !empty($activity->id);
@@ -112,7 +114,7 @@ class ActivityForm extends EntityForm {
 
     $entity_types = ['' => $this->t('-- Select --')];
 
-    /** @var \Drupal\Core\Entity\EntityType $entity_type */
+    /** @var EntityType $entity_type */
     foreach ($entity_info as $key => $entity_type) {
       // Ignore Mailchimp Transactional entity types.
       if (strpos($entity_type->id(), 'mailchimp_transactional') !== FALSE) {
@@ -236,7 +238,7 @@ class ActivityForm extends EntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\mailchimp_transactional_activity\Entity\Activity $activity */
+    /** @var Activity $activity */
     $activity = $this->getEntity();
     $activity->save();
 
diff --git a/modules/mailchimp_transactional_activity/src/Plugin/Derivative/ActivityLocalTasks.php b/modules/mailchimp_transactional_activity/src/Plugin/Derivative/ActivityLocalTasks.php
index a93020a..4ec200a 100644
--- a/modules/mailchimp_transactional_activity/src/Plugin/Derivative/ActivityLocalTasks.php
+++ b/modules/mailchimp_transactional_activity/src/Plugin/Derivative/ActivityLocalTasks.php
@@ -22,14 +22,14 @@ class ActivityLocalTasks extends DeriverBase implements ContainerDeriverInterfac
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -55,7 +55,7 @@ class ActivityLocalTasks extends DeriverBase implements ContainerDeriverInterfac
 
     $activity_entities = Activity::loadMultiple($activity_ids);
 
-    /** @var \Drupal\mailchimp_transactional_activity\Entity\Activity $activity */
+    /** @var Activity $activity */
     foreach ($activity_entities as $activity) {
       $entity = $entity_definitions[$activity->entity_type];
 
diff --git a/modules/mailchimp_transactional_activity/src/Routing/ActivityRoutes.php b/modules/mailchimp_transactional_activity/src/Routing/ActivityRoutes.php
index 7a58688..d64b4d8 100644
--- a/modules/mailchimp_transactional_activity/src/Routing/ActivityRoutes.php
+++ b/modules/mailchimp_transactional_activity/src/Routing/ActivityRoutes.php
@@ -29,7 +29,7 @@ class ActivityRoutes {
 
     $activity_entities = Activity::loadMultiple($activity_ids);
 
-    /** @var \Drupal\mailchimp_transactional_activity\Entity\Activity $activity */
+    /** @var Activity $activity */
     foreach ($activity_entities as $activity) {
       if (!$activity->enabled) {
         continue;
diff --git a/modules/mailchimp_transactional_activity/tests/src/Functional/ActivityTest.php b/modules/mailchimp_transactional_activity/tests/src/Functional/ActivityTest.php
index 8956203..9e33a7b 100644
--- a/modules/mailchimp_transactional_activity/tests/src/Functional/ActivityTest.php
+++ b/modules/mailchimp_transactional_activity/tests/src/Functional/ActivityTest.php
@@ -9,6 +9,7 @@ declare(strict_types=1);
 
 namespace Drupal\Tests\mailchimp_transactional_activity\Functional;
 
+use Drupal\mailchimp_transactional\TestAPI;
 use Drupal\Tests\mailchimp_transactional\Functional\TestBase;
 
 /**
@@ -41,7 +42,7 @@ class ActivityTest extends TestBase {
   public function testGetActivity() {
     $email = 'recipient@example.com';
 
-    /** @var \Drupal\mailchimp_transactional\TestAPI $mailchimp_transactional_api */
+    /** @var TestAPI $mailchimp_transactional_api */
     $mailchimp_transactional_api = \Drupal::service('mailchimp_transactional.test');
 
     $activity = $mailchimp_transactional_api->getMessages($email);
diff --git a/modules/mailchimp_transactional_reports/src/Controller/ReportsController.php b/modules/mailchimp_transactional_reports/src/Controller/ReportsController.php
index 181d629..25992a6 100644
--- a/modules/mailchimp_transactional_reports/src/Controller/ReportsController.php
+++ b/modules/mailchimp_transactional_reports/src/Controller/ReportsController.php
@@ -8,6 +8,7 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional_reports\Controller;
 
+use Drupal\mailchimp_transactional_reports\ReportsService;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
@@ -22,7 +23,7 @@ class ReportsController extends ControllerBase {
   /**
    * Mailchimp Transactional reports service.
    *
-   * @var \Drupal\mailchimp_transactional_reports\ReportsServiceInterface
+   * @var ReportsServiceInterface
    */
   protected $reports;
 
@@ -106,8 +107,7 @@ class ReportsController extends ControllerBase {
   public function summary(): array {
     $content = [];
 
-    /** @var \Drupal\mailchimp_transactional_reports\ReportsService $reports */
-
+    /** @var ReportsService $reports */
     $user = $this->reports->getUser();
 
     $content['info_table_desc'] = [
diff --git a/modules/mailchimp_transactional_reports/src/ReportsService.php b/modules/mailchimp_transactional_reports/src/ReportsService.php
index eea4bbf..59c9915 100644
--- a/modules/mailchimp_transactional_reports/src/ReportsService.php
+++ b/modules/mailchimp_transactional_reports/src/ReportsService.php
@@ -20,33 +20,32 @@ class ReportsService implements ReportsServiceInterface {
   /**
    * The Mailchimp Transactional API service.
    *
-   * @var \Drupal\mailchimp_transactional\APIInterface
+   * @var APIInterface
    */
   protected $mailchimpTransactionalApi;
 
   /**
    * The Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The mailchimp_transactional cache service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
-
   protected $cache;
 
   /**
    * Constructs the service.
    *
-   * @param \Drupal\mailchimp_transactional\APIInterface $mailchimp_transactional_api
+   * @param APIInterface $mailchimp_transactional_api
    *   The Mailchimp Transactional API service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The mailchimp_transactional cache service.
    */
   public function __construct(APIInterface $mailchimp_transactional_api, ConfigFactoryInterface $config_factory, CacheBackendInterface $cache) {
diff --git a/modules/mailchimp_transactional_reports/tests/src/Functional/ReportsTest.php b/modules/mailchimp_transactional_reports/tests/src/Functional/ReportsTest.php
index 6d9aae8..d69c9f8 100644
--- a/modules/mailchimp_transactional_reports/tests/src/Functional/ReportsTest.php
+++ b/modules/mailchimp_transactional_reports/tests/src/Functional/ReportsTest.php
@@ -8,6 +8,7 @@ declare(strict_types=1);
 
 namespace Drupal\Tests\mailchimp_transactional_reports\Functional;
 
+use Drupal\mailchimp_transactional_reports\ReportsService;
 use Drupal\Tests\mailchimp_transactional\Functional\TestBase;
 
 /**
@@ -36,7 +37,7 @@ class ReportsTest extends TestBase {
    * Tests getting Mailchimp Transactional reports data.
    */
   public function testGetReportsData() {
-    /** @var \Drupal\mailchimp_transactional_reports\ReportsService $reports */
+    /** @var ReportsService $reports */
     $reports = \Drupal::service('mailchimp_transactional_reports.test.service');
 
     $reports_data = [
diff --git a/modules/mailchimp_transactional_template/mailchimp_transactional_template.install b/modules/mailchimp_transactional_template/mailchimp_transactional_template.install
index 22720b9..0051246 100644
--- a/modules/mailchimp_transactional_template/mailchimp_transactional_template.install
+++ b/modules/mailchimp_transactional_template/mailchimp_transactional_template.install
@@ -6,6 +6,9 @@
  */
 
 declare(strict_types=1);
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 
 use Drupal\user\Entity\Role;
 
@@ -15,9 +18,9 @@ use Drupal\user\Entity\Role;
  * Migrates template entities and role permissions from Mandrill templates
  * module.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
+ * @throws EntityStorageException
  */
 function mailchimp_transactional_template_install() {
   if (\Drupal::moduleHandler()->moduleExists('mandrill_template')) {
diff --git a/modules/mailchimp_transactional_template/mailchimp_transactional_template.module b/modules/mailchimp_transactional_template/mailchimp_transactional_template.module
index 6b2ad63..8edf171 100644
--- a/modules/mailchimp_transactional_template/mailchimp_transactional_template.module
+++ b/modules/mailchimp_transactional_template/mailchimp_transactional_template.module
@@ -43,7 +43,7 @@ function mailchimp_transactional_template_load_entities(string $id = NULL) {
  * @param string $module
  *   Module name to use when searching for a template mapping.
  *
- * @return \Drupal\mailchimp_transactional_template\Entity\TemplateMap|\entity
+ * @return TemplateMap|\entity
  *   The Mailchimp Transactional Template Map, if found.
  */
 function mailchimp_transactional_template_load_by_mailsystem($module_key, $module) {
@@ -58,7 +58,7 @@ function mailchimp_transactional_template_load_by_mailsystem($module_key, $modul
 
   $module_match = FALSE;
   if (!empty($template_maps)) {
-    /** @var \Drupal\mailchimp_transactional_template\Entity\TemplateMap $map */
+    /** @var TemplateMap $map */
     foreach ($template_maps as $template_map) {
       switch ($template_map->mailsystem_key) {
         case $module_key:
diff --git a/modules/mailchimp_transactional_template/src/Controller/TemplateMapListBuilder.php b/modules/mailchimp_transactional_template/src/Controller/TemplateMapListBuilder.php
index d3fc1c2..20da05d 100644
--- a/modules/mailchimp_transactional_template/src/Controller/TemplateMapListBuilder.php
+++ b/modules/mailchimp_transactional_template/src/Controller/TemplateMapListBuilder.php
@@ -8,6 +8,7 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional_template\Controller;
 
+use Drupal\mailchimp_transactional_template\Entity\TemplateMap;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 
@@ -34,7 +35,7 @@ class TemplateMapListBuilder extends ConfigEntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity): array {
-    /** @var \Drupal\mailchimp_transactional_template\Entity\TemplateMap $entity */
+    /** @var TemplateMap $entity */
     $row['label'] = $entity->label() . ' (Machine name: ' . $entity->id() . ')';
     $row['template_name'] = $entity->template_name;
     $row['content_area'] = $entity->content_area;
diff --git a/modules/mailchimp_transactional_template/src/Form/TemplateMapForm.php b/modules/mailchimp_transactional_template/src/Form/TemplateMapForm.php
index bcfdbd6..5daf3e1 100644
--- a/modules/mailchimp_transactional_template/src/Form/TemplateMapForm.php
+++ b/modules/mailchimp_transactional_template/src/Form/TemplateMapForm.php
@@ -8,6 +8,8 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional_template\Form;
 
+use Drupal\mailchimp_transactional_template\Entity\TemplateMap;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -27,14 +29,14 @@ class TemplateMapForm extends EntityForm {
   /**
    * The Mailchimp Transactional API.
    *
-   * @var \Drupal\mailchimp_transactional\APIInterface
+   * @var APIInterface
    */
   protected $mailchimpTransactionalApi;
 
   /**
    * The route builder.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routeBuilder;
 
@@ -62,7 +64,7 @@ class TemplateMapForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\mailchimp_transactional_template\Entity\TemplateMap $template_map */
+    /** @var TemplateMap $template_map */
     $template_map = $this->entity;
 
     $templates = $this->mailchimpTransactionalApi->getTemplates();
@@ -197,10 +199,10 @@ class TemplateMapForm extends EntityForm {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\mailchimp_transactional_template\Entity\TemplateMap $template_map */
+    /** @var TemplateMap $template_map */
     $template_map = $this->getEntity();
     $template_map->save();
 
diff --git a/modules/mailchimp_transactional_template/tests/src/Functional/TemplateTest.php b/modules/mailchimp_transactional_template/tests/src/Functional/TemplateTest.php
index 2c40533..5e0468e 100644
--- a/modules/mailchimp_transactional_template/tests/src/Functional/TemplateTest.php
+++ b/modules/mailchimp_transactional_template/tests/src/Functional/TemplateTest.php
@@ -9,6 +9,7 @@ declare(strict_types=1);
 
 namespace Drupal\Tests\mailchimp_transactional_template\Functional;
 
+use Drupal\mailchimp_transactional\TestAPI;
 use Drupal\Tests\mailchimp_transactional\Functional\TestBase;
 
 /**
@@ -37,7 +38,7 @@ class TemplateTest extends TestBase {
    * Tests getting a list of templates for a given label.
    */
   public function testGetTemplates() {
-    /** @var \Drupal\mailchimp_transactional\TestAPI $mailchimp_transactional_api */
+    /** @var TestAPI $mailchimp_transactional_api */
     $mailchimp_transactional_api = \Drupal::service('mailchimp_transactional.test');
 
     $templates = $mailchimp_transactional_api->getTemplates();
@@ -66,7 +67,7 @@ class TemplateTest extends TestBase {
       'name' => 'Recipient',
     ];
 
-    /** @var \Drupal\mailchimp_transactional\TestAPI $mailchimp_transactional_api */
+    /** @var TestAPI $mailchimp_transactional_api */
     $mailchimp_transactional_api = \Drupal::service('mailchimp_transactional.test');
 
     $response = $mailchimp_transactional_api->sendTemplate($message, $template_name, $template_content);
@@ -92,7 +93,7 @@ class TemplateTest extends TestBase {
       'name' => 'Recipient',
     ];
 
-    /** @var \Drupal\mailchimp_transactional\TestAPI $mailchimp_transactional_api */
+    /** @var TestAPI $mailchimp_transactional_api */
     $mailchimp_transactional_api = \Drupal::service('mailchimp_transactional.test');
 
     $response = $mailchimp_transactional_api->sendTemplate($message, $template_name, $template_content);
diff --git a/src/API.php b/src/API.php
index 3a40907..1321b15 100644
--- a/src/API.php
+++ b/src/API.php
@@ -3,6 +3,8 @@
 declare(strict_types=1);
 namespace Drupal\mailchimp_transactional;
 
+use GuzzleHttp\ClientInterface;
+use MailchimpTransactional\ApiClient;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -19,41 +21,41 @@ class API implements APIInterface {
   /**
    * The Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $log;
 
   /**
    * The http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs the service.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger channel factory service.
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   The http client.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(ConfigFactoryInterface $config_factory, LoggerChannelFactoryInterface $logger_factory, Client $http_client, MessengerInterface $messenger) {
@@ -225,7 +227,7 @@ class API implements APIInterface {
    * @param string $api_key
    *   API key to authorize Mailchimp Transactional API.
    *
-   * @return \MailchimpTransactional\ApiClient|bool
+   * @return ApiClient|bool
    *   Mailchimp Transactional Object upon success
    *   FALSE if 'mailchimp_transactional_api_key' is unset
    */
diff --git a/src/APIInterface.php b/src/APIInterface.php
index ac0505c..475f44b 100644
--- a/src/APIInterface.php
+++ b/src/APIInterface.php
@@ -3,6 +3,7 @@
 declare(strict_types=1);
 namespace Drupal\mailchimp_transactional;
 
+use GuzzleHttp\Exception\RequestException;
 /**
  * Interface for the Mailchimp Transactional API.
  */
@@ -73,7 +74,7 @@ interface APIInterface {
    * @return array
    *   Of sending result objects, one per recipient.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    */
   public function sendTemplate(array $message, $template_id, array $template_content): array;
 
@@ -88,7 +89,7 @@ interface APIInterface {
    * @return array
    *   Results of sending the message.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    */
   public function send(array $message): array;
 
diff --git a/src/Access/ConfigurationAccessCheck.php b/src/Access/ConfigurationAccessCheck.php
index 157d614..2c6c042 100644
--- a/src/Access/ConfigurationAccessCheck.php
+++ b/src/Access/ConfigurationAccessCheck.php
@@ -5,6 +5,7 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
@@ -17,7 +18,7 @@ class ConfigurationAccessCheck implements AccessInterface {
   /**
    * The Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
@@ -33,7 +34,7 @@ class ConfigurationAccessCheck implements AccessInterface {
    *
    * Ensures a Mailchimp Transactional API key has been provided.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access() {
diff --git a/src/Access/MailerAccessCheck.php b/src/Access/MailerAccessCheck.php
index 5f719c9..3ab4cd0 100644
--- a/src/Access/MailerAccessCheck.php
+++ b/src/Access/MailerAccessCheck.php
@@ -4,6 +4,7 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
@@ -16,7 +17,7 @@ class MailerAccessCheck implements AccessInterface {
   /**
    * The Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
@@ -32,7 +33,7 @@ class MailerAccessCheck implements AccessInterface {
    *
    * Ensures a Mailchimp Transactional API key has been provided.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access() {
diff --git a/src/DrupalMailchimpTransactional.php b/src/DrupalMailchimpTransactional.php
index d4d7fc2..f0bf05e 100644
--- a/src/DrupalMailchimpTransactional.php
+++ b/src/DrupalMailchimpTransactional.php
@@ -25,7 +25,7 @@ class DrupalMailchimpTransactional extends ApiClient {
    *
    * Override constructor to remove curl operations.
    *
-   * @throws \MailchimpTransactional\ApiException
+   * @throws ApiException
    */
   public function __construct(Client $http_client, $apikey = NULL, $timeout = 60) {
     parent::__construct();
@@ -52,7 +52,7 @@ class DrupalMailchimpTransactional extends ApiClient {
    *
    * Otherwise, only a string with error information is returned.
    *
-   * @throws \MailchimpTransactional\ApiException
+   * @throws ApiException
    */
   public function post($path, $body) {
     $results = parent::post($path, $body);
diff --git a/src/Form/AdminSettingsForm.php b/src/Form/AdminSettingsForm.php
index cfc96b5..aa2f715 100644
--- a/src/Form/AdminSettingsForm.php
+++ b/src/Form/AdminSettingsForm.php
@@ -4,6 +4,8 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -24,52 +26,52 @@ class AdminSettingsForm extends ConfigFormBase {
   /**
    * The mail system manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The Mailchimp Transactional service.
    *
-   * @var \Drupal\mailchimp_transactional\ServiceInterface
+   * @var ServiceInterface
    */
   protected $mailchimpTransactional;
 
   /**
    * The Mailchimp Transactional API service.
    *
-   * @var \Drupal\mailchimp_transactional\APIInterface
+   * @var APIInterface
    */
   protected $mailchimpTransactionalAPI;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail system manager.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The object renderer.
-   * @param \Drupal\mailchimp_transactional\APIInterface $mailchimp_transactional_api
+   * @param APIInterface $mailchimp_transactional_api
    *   The Mailchimp Transactional API service.
-   * @param \Drupal\mailchimp_transactional\ServiceInterface $mailchimp_transactional
+   * @param ServiceInterface $mailchimp_transactional
    *   The Mailchimp Transactional service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, MailManagerInterface $mail_manager, PathValidatorInterface $path_validator, RendererInterface $renderer, APIInterface $mailchimp_transactional_api, ServiceInterface $mailchimp_transactional) {
@@ -363,10 +365,10 @@ class AdminSettingsForm extends ConfigFormBase {
    * @param string $plugin_id
    *   The ID of a plugin.
    *
-   * @return string|\Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return string|TranslatableMarkup
    *   The plugin label, or an error message.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   private function getPluginLabel(string $plugin_id) {
     $definition = $this->mailManager->getDefinition($plugin_id);
diff --git a/src/Form/AdminTestForm.php b/src/Form/AdminTestForm.php
index cf7d45e..f95240a 100644
--- a/src/Form/AdminTestForm.php
+++ b/src/Form/AdminTestForm.php
@@ -126,11 +126,11 @@ class AdminTestForm extends ConfirmFormBase {
     // won't even show up - see MailerAccessCheck.php.
     $sender = \Drupal::config('mailsystem.settings')->get('defaults')['sender'];
     if ($sender == 'mailchimp_transactional_mail') {
-      /** @var \Drupal\mailchimp_transactional\Plugin\Mail\Mail $mailchimp_transactional */
+      /** @var Mail $mailchimp_transactional */
       $mailer = new Mail();
     }
     elseif ($sender == 'mailchimp_transactional_test_mail') {
-      /** @var \Drupal\mailchimp_transactional\Plugin\Mail\TestMail $mailchimp_transactional */
+      /** @var TestMail $mailchimp_transactional */
       $mailer = new TestMail();
     }
 
diff --git a/src/Plugin/Mail/Mail.php b/src/Plugin/Mail/Mail.php
index aab74eb..da62dd4 100644
--- a/src/Plugin/Mail/Mail.php
+++ b/src/Plugin/Mail/Mail.php
@@ -4,6 +4,10 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional\Plugin\Mail;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\mailchimp_transactional\ServiceInterface;
+use Drupal\Core\Logger\LoggerChannelFactoryInterface;
+use Drupal\Core\File\MimeType\MimeTypeGuesser;
 use Drupal\Core\Mail\MailInterface;
 use Drupal\Core\Link;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
@@ -26,28 +30,28 @@ class Mail implements MailInterface {
   /**
    * The Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The Mailchimp Transactional service.
    *
-   * @var \Drupal\mailchimp_transactional\ServiceInterface
+   * @var ServiceInterface
    */
   protected $mailchimpTransactional;
 
   /**
    * The Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $log;
 
   /**
    * The MIME Type Guesser service.
    *
-   * @var \Drupal\Core\File\MimeType\MimeTypeGuesser
+   * @var MimeTypeGuesser
    */
   protected $mimeTypeGuesser;
 
diff --git a/src/Plugin/QueueWorker/QueueProcessor.php b/src/Plugin/QueueWorker/QueueProcessor.php
index 41f56bb..d411412 100644
--- a/src/Plugin/QueueWorker/QueueProcessor.php
+++ b/src/Plugin/QueueWorker/QueueProcessor.php
@@ -4,6 +4,7 @@ declare(strict_types=1);
 
 namespace Drupal\mailchimp_transactional\Plugin\QueueWorker;
 
+use Drupal\mailchimp_transactional\Service;
 use Drupal\Core\Queue\QueueWorkerBase;
 
 /**
@@ -29,7 +30,7 @@ class QueueProcessor extends QueueWorkerBase {
    * {@inheritdoc}
    */
   public function processItem($data) {
-    /** @var \Drupal\mailchimp_transactional\Service $mailchimp_transactional */
+    /** @var Service $mailchimp_transactional */
     $mailchimp_transactional = \Drupal::service('mailchimp_transactional.service');
 
     $mailchimp_transactional->send($data['message']);
diff --git a/src/Service.php b/src/Service.php
index f10b2d9..e6a7d0f 100644
--- a/src/Service.php
+++ b/src/Service.php
@@ -16,41 +16,41 @@ class Service implements ServiceInterface {
   /**
    * The Mailchimp Transactional API service.
    *
-   * @var \Drupal\mailchimp_transactional\APIInterface
+   * @var APIInterface
    */
   protected $mailchimpTransactionalAPI;
 
   /**
    * The Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $log;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs the service.
    *
-   * @param \Drupal\mailchimp_transactional\APIInterface $mailchimp_transactional_api
+   * @param APIInterface $mailchimp_transactional_api
    *   The Mailchimp Transactional api service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory Service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(APIInterface $mailchimp_transactional_api, ConfigFactoryInterface $config_factory, LoggerChannelFactoryInterface $logger_factory, ModuleHandlerInterface $module_handler) {
diff --git a/src/TestAPI.php b/src/TestAPI.php
index 1f25c23..11162d0 100644
--- a/src/TestAPI.php
+++ b/src/TestAPI.php
@@ -16,7 +16,7 @@ class TestAPI extends API {
   /**
    * The email validator.
    *
-   * @var \Egulias\EmailValidator\EmailValidator
+   * @var EmailValidator
    */
   protected $emailValidator;
 
diff --git a/src/TestService.php b/src/TestService.php
index 5b62aa1..30f626e 100644
--- a/src/TestService.php
+++ b/src/TestService.php
@@ -17,22 +17,22 @@ class TestService extends Service {
   /**
    * The state store.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Constructs the service.
    *
-   * @param \Drupal\mailchimp_transactional\APIInterface $mailchimp_transactional_api
+   * @param APIInterface $mailchimp_transactional_api
    *   The Mailchimp Transactional api service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory Service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state store.
    */
   public function __construct(APIInterface $mailchimp_transactional_api, ConfigFactoryInterface $config_factory, LoggerChannelFactoryInterface $logger_factory, ModuleHandlerInterface $module_handler, StateInterface $state) {
diff --git a/tests/src/Functional/MailchimpTransactionalPluginMailTest.php b/tests/src/Functional/MailchimpTransactionalPluginMailTest.php
index 853fcbc..2a03b96 100644
--- a/tests/src/Functional/MailchimpTransactionalPluginMailTest.php
+++ b/tests/src/Functional/MailchimpTransactionalPluginMailTest.php
@@ -34,7 +34,7 @@ class MailchimpTransactionalPluginMailTest extends TestBase {
   /**
    * Get the Mailchimp Transactional Mail test plugin.
    *
-   * @return \Drupal\mailchimp_transactional\Plugin\Mail\TestMail
+   * @return TestMail
    *   Mail but with mock data instead of real API data, via TestService.
    */
   private function getMailchimpTransactionalMail() {
