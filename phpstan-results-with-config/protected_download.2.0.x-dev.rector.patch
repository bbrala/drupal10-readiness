diff --git a/protected_download.tokens.inc b/protected_download.tokens.inc
index 867d6d8..ff69660 100644
--- a/protected_download.tokens.inc
+++ b/protected_download.tokens.inc
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\file\FileInterface;
+use Drupal\protected_download\PolicyRepositoryInterface;
+use Drupal\protected_download\LinkGeneratorInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
 /**
  * @file
  * Provides token support for protected downloads.
@@ -49,11 +53,11 @@ function protected_download_tokens($type, $tokens, array $data, array $options,
   if ($type === 'file' && !empty($data['file'])) {
     $now = \Drupal::time()->getRequestTime();
 
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = $data['file'];
     $scheme = StreamWrapperManager::getScheme($file->getFileUri());
 
-    /** @var \Drupal\protected_download\PolicyRepositoryInterface */
+    /** @var PolicyRepositoryInterface */
     $policy_repository = \Drupal::service('protected_download.policy_repository');
 
     $policy = $policy_repository->getPolicy($scheme);
@@ -62,7 +66,7 @@ function protected_download_tokens($type, $tokens, array $data, array $options,
     foreach ($tokens as $name => $original) {
       switch ($name) {
         case 'protected-download-url':
-          /** @var \Drupal\protected_download\LinkGeneratorInterface */
+          /** @var LinkGeneratorInterface */
           $link_generator = \Drupal::service('protected_download.link_generator');
           $url = $link_generator->generate($file->getFileUri())
             ->setOptions($url_options)
@@ -71,7 +75,7 @@ function protected_download_tokens($type, $tokens, array $data, array $options,
           break;
 
         case 'protected-download-expire':
-          /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
+          /** @var DateFormatterInterface $date_formatter */
           $date_formatter = \Drupal::service('date.formatter');
           $replacements[$original] = $date_formatter->format($protected_download_expire, 'medium', '', NULL, $langcode);
           break;
diff --git a/src/Controller/DownloadController.php b/src/Controller/DownloadController.php
index 7095209..88f478c 100644
--- a/src/Controller/DownloadController.php
+++ b/src/Controller/DownloadController.php
@@ -23,28 +23,28 @@ class DownloadController extends ControllerBase
   /**
    * The download security key service.
    *
-   * @var \Drupal\protected_download\SecurityKeyInterface
+   * @var SecurityKeyInterface
    */
   protected $securityKey;
 
   /**
    * The protected download policy repository.
    *
-   * @var \Drupal\protected_download\PolicyRepositoryInterface
+   * @var PolicyRepositoryInterface
    */
   protected $policyRepository;
 
   /**
    * The request time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The http kernel
    *
-   * @var \Symfony\Component\HttpKernel\HttpKernelInterface
+   * @var HttpKernelInterface
    */
   protected $httpKernel;
 
@@ -78,7 +78,7 @@ class DownloadController extends ControllerBase
   /**
    * Verifies an incoming request and delivers a HMAC protected file.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    * @param string $scheme
    *   The URI scheme.
@@ -96,7 +96,7 @@ class DownloadController extends ControllerBase
     /**
      * Resulting response.
      *
-     * @var \Symfony\Component\HttpFoundation\Response
+     * @var Response
      */
     $response = null;
 
diff --git a/src/LinkGenerator.php b/src/LinkGenerator.php
index fb8eeca..01d72f1 100644
--- a/src/LinkGenerator.php
+++ b/src/LinkGenerator.php
@@ -10,21 +10,21 @@ class LinkGenerator implements LinkGeneratorInterface
 {
 
   /**
-   * @var \Drupal\protected_download\SecurityKeyInterface
+   * @var SecurityKeyInterface
    */
   protected $securityKey;
 
   /**
    * The protected download policy repository.
    *
-   * @var \Drupal\protected_download\PolicyRepositoryInterface
+   * @var PolicyRepositoryInterface
    */
   protected $policyRepository;
 
   /**
    * The request time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
diff --git a/src/LinkGeneratorInterface.php b/src/LinkGeneratorInterface.php
index d6c3546..43a1e15 100644
--- a/src/LinkGeneratorInterface.php
+++ b/src/LinkGeneratorInterface.php
@@ -2,19 +2,20 @@
 
 namespace Drupal\protected_download;
 
+use Drupal\Core\Url;
 interface LinkGeneratorInterface
 {
 
  /**
-  * Generates a HMAC protected URL for the given file.
-  *
-  * @param string $uri
-  *   The file uri, e.g., private://ticket-12345.pdf.
-  * @param int $expire
-  *   (Optional) The expiry date as a UNIX timestamp.
-  *
-  * @return \Drupal\Core\Url
-  */
+   * Generates a HMAC protected URL for the given file.
+   *
+   * @param string $uri
+   *   The file uri, e.g., private://ticket-12345.pdf.
+   * @param int $expire
+   *   (Optional) The expiry date as a UNIX timestamp.
+   *
+   * @return Url
+   */
   public function generate($uri, $expire = NULL);
 
 }
diff --git a/src/PolicyRepositoryInterface.php b/src/PolicyRepositoryInterface.php
index 379ed95..46c2dfa 100644
--- a/src/PolicyRepositoryInterface.php
+++ b/src/PolicyRepositoryInterface.php
@@ -7,7 +7,7 @@ interface PolicyRepositoryInterface {
   /**
    * Returns configuration for given scheme.
    *
-   * @return \Drupal\protected_download\PolicyInterface
+   * @return PolicyInterface
    */
   function getPolicy($scheme);
 
diff --git a/src/SecurityKey.php b/src/SecurityKey.php
index 617e8ba..957dacf 100644
--- a/src/SecurityKey.php
+++ b/src/SecurityKey.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\protected_download;
 
+use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Datetime\Time;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Site\Settings;
@@ -23,14 +24,14 @@ class SecurityKey implements SecurityKeyInterface
   /**
    * The request time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The filesystem service.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
@@ -39,7 +40,7 @@ class SecurityKey implements SecurityKeyInterface
    *
    * @param \Drupal\Component\Datetime\TimeInterface
    *   The request time service.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager service.
    */
   function __construct(
diff --git a/src/StreamWrapper/ProtectedStream.php b/src/StreamWrapper/ProtectedStream.php
index 108e845..f06f249 100644
--- a/src/StreamWrapper/ProtectedStream.php
+++ b/src/StreamWrapper/ProtectedStream.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\protected_download\StreamWrapper;
 
+use Drupal\protected_download\LinkGeneratorInterface;
 use Drupal\Core\Site\Settings;
 use Drupal\Core\StreamWrapper\LocalStream;
 use Drupal\Core\StreamWrapper\StreamWrapperInterface;
@@ -43,7 +44,7 @@ class ProtectedStream extends LocalStream {
    * {@inheritdoc}
    */
   public function getExternalUrl() {
-    /** @var \Drupal\protected_download\LinkGeneratorInterface */
+    /** @var LinkGeneratorInterface */
     $linkGenerator = \Drupal::service('protected_download.link_generator');
     return $linkGenerator->generate($this->uri)->setAbsolute()->toString();
   }
diff --git a/tests/src/Functional/TokenTest.php b/tests/src/Functional/TokenTest.php
index a38de78..7429e99 100644
--- a/tests/src/Functional/TokenTest.php
+++ b/tests/src/Functional/TokenTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\protected_download\Functional;
 
+use Drupal\file\FileInterface;
+use Drupal\file\FileRepositoryInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Url;
 use Drupal\file\Entity\File;
@@ -45,7 +48,7 @@ class TokenTest extends BrowserTestBase {
   /**
    * A file in the private directory.
    *
-   * @var \Drupal\file\FileInterface
+   * @var FileInterface
    */
   protected $privateFile;
 
@@ -55,10 +58,10 @@ class TokenTest extends BrowserTestBase {
   public function setUp(): void{
     parent::setUp(array('protected_download'));
 
-    /** @var \Drupal\Core\File\FileSystemInterface */
+    /** @var FileSystemInterface */
     $fileSystem = \Drupal::service('file_system');
 
-    /** @var \Drupal\file\FileRepositoryInterface */
+    /** @var FileRepositoryInterface */
     $fileRepository = \Drupal::service('file.repository');
 
     // Prepare a private file.
@@ -80,7 +83,7 @@ class TokenTest extends BrowserTestBase {
     $tokenService = \Drupal::token();
     $now = \Drupal::time()->getRequestTime();
 
-    /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
+    /** @var DateFormatterInterface $date_formatter */
     $dateFormatter = \Drupal::service('date.formatter');
 
     $text = 'Your file is accessible until [file:protected-download-expire] using the following link [file:protected-download-url]';
