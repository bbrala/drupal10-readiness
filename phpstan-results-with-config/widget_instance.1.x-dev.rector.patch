diff --git a/src/Entity/WidgetInstance.php b/src/Entity/WidgetInstance.php
index ca6b5f5..679e18e 100644
--- a/src/Entity/WidgetInstance.php
+++ b/src/Entity/WidgetInstance.php
@@ -257,7 +257,7 @@ class WidgetInstance extends EditorialContentEntityBase implements WidgetInstanc
   /**
    * The field definitions for the custom business logic.
    *
-   * @return \Drupal\Core\Field\BaseFieldDefinition[]
+   * @return BaseFieldDefinition[]
    *   The definitions.
    */
   public static function customBaseFieldDefinitions() {
diff --git a/src/Plugin/Field/FieldWidget/DisplayOptionsWidget.php b/src/Plugin/Field/FieldWidget/DisplayOptionsWidget.php
index acb61e8..57edcc4 100644
--- a/src/Plugin/Field/FieldWidget/DisplayOptionsWidget.php
+++ b/src/Plugin/Field/FieldWidget/DisplayOptionsWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\widget_instance\Plugin\Field\FieldWidget;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -34,24 +35,25 @@ class DisplayOptionsWidget extends WidgetBase implements ContainerFactoryPluginI
   /**
    * The entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;
 
   /**
    * Generates FAPI arrays from JSON Schema definitions.
    *
-   * @var \SchemaForms\FormGeneratorInterface
+   * @var FormGeneratorInterface
    */
   private $formGenerator;
 
   /**
    * {@inheritdoc}
    */
-  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager, FormGeneratorInterface $form_generator) {
+  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, $plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager, FormGeneratorInterface $form_generator, private FormGeneratorDrupal $formGeneratorDrupal) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $third_party_settings);
     $this->storage = $entity_type_manager->getStorage('widget_type');
     $this->formGenerator = $form_generator;
+    parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $third_party_settings);
   }
 
   /**
@@ -65,7 +67,7 @@ class DisplayOptionsWidget extends WidgetBase implements ContainerFactoryPluginI
       $configuration['settings'],
       $configuration['third_party_settings'],
       $container->get('entity_type.manager'),
-      $container->get(FormGeneratorDrupal::class)
+      $this->formGeneratorDrupal
     );
   }
 
@@ -102,7 +104,7 @@ class DisplayOptionsWidget extends WidgetBase implements ContainerFactoryPluginI
    *   The form element to alter.
    * @param int $widget_type_id
    *   The widget type ID.
-   * @param \Drupal\widget_instance\WidgetInstanceInterface $widget_instance
+   * @param WidgetInstanceInterface $widget_instance
    *   The widget instance.
    */
   private function setWidgetTypeSettingsForm(array &$display_options, int $widget_type_id, WidgetInstanceInterface $widget_instance): void {
@@ -146,7 +148,7 @@ class DisplayOptionsWidget extends WidgetBase implements ContainerFactoryPluginI
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function validateParamsElement(array $element, FormStateInterface $form_state) {
diff --git a/src/WidgetInstanceInterface.php b/src/WidgetInstanceInterface.php
index c437199..7d3e426 100644
--- a/src/WidgetInstanceInterface.php
+++ b/src/WidgetInstanceInterface.php
@@ -63,7 +63,7 @@ interface WidgetInstanceInterface extends RevisionLogInterface, ContentEntityInt
   /**
    * Set the widget_instance type.
    *
-   * @param \Drupal\widget_type\WidgetTypeInterface $widget_type
+   * @param WidgetTypeInterface $widget_type
    *   The widget_instance type.
    *
    * @return \Drupal\widget_instance\self
@@ -74,7 +74,7 @@ interface WidgetInstanceInterface extends RevisionLogInterface, ContentEntityInt
   /**
    * Get the widget_instance type.
    *
-   * @return \Drupal\widget_type\WidgetTypeInterface|null
+   * @return WidgetTypeInterface|null
    *   The widget_instance type.
    */
   public function getWidgetType(): ?WidgetTypeInterface;
diff --git a/src/WidgetInstanceListBuilder.php b/src/WidgetInstanceListBuilder.php
index a556aa9..1c44b6e 100644
--- a/src/WidgetInstanceListBuilder.php
+++ b/src/WidgetInstanceListBuilder.php
@@ -20,27 +20,27 @@ class WidgetInstanceListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new WidgetInstanceListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
diff --git a/tests/src/FunctionalJavascript/WidgetInstanceTranslationTest.php b/tests/src/FunctionalJavascript/WidgetInstanceTranslationTest.php
index 0672876..4dfdf99 100644
--- a/tests/src/FunctionalJavascript/WidgetInstanceTranslationTest.php
+++ b/tests/src/FunctionalJavascript/WidgetInstanceTranslationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\widget_instance\FunctionalJavascript;
 
+use Drupal\widget_instance\WidgetInstanceInterface;
 use Drupal\Core\Url;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\language\Entity\ConfigurableLanguage;
@@ -36,7 +37,7 @@ class WidgetInstanceTranslationTest extends WebDriverTestBase {
   /**
    * The widget instance.
    *
-   * @var \Drupal\widget_instance\WidgetInstanceInterface
+   * @var WidgetInstanceInterface
    */
   private $widgetInstance;
 
@@ -45,11 +46,11 @@ class WidgetInstanceTranslationTest extends WebDriverTestBase {
    *
    * @SuppressWarnings(PHPMD.StaticAccess)
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->enableTranslation();
     $this->setupLanguages();
-    $module_dir = drupal_get_path('module', 'widget_instance');
+    $module_dir = \Drupal::service('extension.list.module')->getPath('widget_instance');
     $uri = 'base:/' . $module_dir . '/tests/widgets/widget-boilerplate/v1';
     $widget_directory = Url::fromUri($uri, ['absolute' => TRUE])->toString();
     $widget_type = WidgetType::create([
diff --git a/tests/src/FunctionalJavascript/WidgetInstanceViewBuilderTest.php b/tests/src/FunctionalJavascript/WidgetInstanceViewBuilderTest.php
index 1068566..e04d099 100644
--- a/tests/src/FunctionalJavascript/WidgetInstanceViewBuilderTest.php
+++ b/tests/src/FunctionalJavascript/WidgetInstanceViewBuilderTest.php
@@ -33,7 +33,7 @@ class WidgetInstanceViewBuilderTest extends WebDriverTestBase {
    * @SuppressWarnings(PHPMD.StaticAccess)
    */
   public function testView() {
-    $module_dir = drupal_get_path('module', 'widget_instance');
+    $module_dir = \Drupal::service('extension.list.module')->getPath('widget_instance');
     $uri = 'base:/' . $module_dir . '/tests/widgets/widget-boilerplate/v1';
     $widget_directory = Url::fromUri($uri, ['absolute' => TRUE])->toString();
     $widget_type = WidgetType::create([
diff --git a/tests/src/Kernel/ComputedHtmlIdItemListTest.php b/tests/src/Kernel/ComputedHtmlIdItemListTest.php
index 4595e7d..bd9e1be 100644
--- a/tests/src/Kernel/ComputedHtmlIdItemListTest.php
+++ b/tests/src/Kernel/ComputedHtmlIdItemListTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\widget_instance\Kernel;
 
+use Drupal\widget_instance\WidgetInstanceInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\widget_instance\Entity\WidgetInstance;
 use Drupal\widget_type\Entity\WidgetType;
@@ -29,7 +30,7 @@ class ComputedHtmlIdItemListTest extends KernelTestBase {
   /**
    * The entity.
    *
-   * @var \Drupal\widget_instance\WidgetInstanceInterface
+   * @var WidgetInstanceInterface
    */
   private $entity;
 
@@ -38,7 +39,7 @@ class ComputedHtmlIdItemListTest extends KernelTestBase {
    *
    * @SuppressWarnings(PHPMD.StaticAccess)
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     \Drupal::setContainer($this->container);
     $this->installEntitySchema('widget_type');
diff --git a/tests/src/Kernel/WidgetInstanceAccessControlHandlerTest.php b/tests/src/Kernel/WidgetInstanceAccessControlHandlerTest.php
index 7a3d930..ddc3368 100644
--- a/tests/src/Kernel/WidgetInstanceAccessControlHandlerTest.php
+++ b/tests/src/Kernel/WidgetInstanceAccessControlHandlerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\widget_instance\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\widget_instance\WidgetInstanceInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\KernelTests\KernelTestBase;
@@ -18,6 +20,7 @@ use Prophecy\Argument;
  */
 class WidgetInstanceAccessControlHandlerTest extends KernelTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -33,14 +36,14 @@ class WidgetInstanceAccessControlHandlerTest extends KernelTestBase {
   /**
    * The system under test.
    *
-   * @var \Drupal\widget_instance\WidgetInstanceAccessControlHandler
+   * @var WidgetInstanceAccessControlHandler
    */
   private $theSut;
 
   /**
    * The entity.
    *
-   * @var \Drupal\widget_instance\WidgetInstanceInterface
+   * @var WidgetInstanceInterface
    */
   private $entity;
 
@@ -49,7 +52,7 @@ class WidgetInstanceAccessControlHandlerTest extends KernelTestBase {
    *
    * @SuppressWarnings(PHPMD.StaticAccess)
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     \Drupal::setContainer($this->container);
     $this->installEntitySchema('widget_type');
diff --git a/widget_instance.info.yml b/widget_instance.info.yml
index a11713d..bbe2122 100644
--- a/widget_instance.info.yml
+++ b/widget_instance.info.yml
@@ -1,7 +1,7 @@
 name: Widget Instance
 type: module
 description: 'Provides a widget instance entity.'
-core_version_requirement: ^8.8.0 || ^9.0
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - widget_type:widget_type
   - drupal:serialization
