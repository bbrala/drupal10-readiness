modules/contrib/tome_netlify/modules/tome_netlify_contact/tome_netlify_contact.module
modules/contrib/tome_netlify/src/Commands/TomeNetlifyDeployCommands.php
modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php
modules/contrib/tome_netlify/src/Form/TomeNetlifyDeployForm.php
modules/contrib/tome_netlify/src/Form/TomeNetlifySettingsForm.php
modules/contrib/tome_netlify/src/TomeNetlifyDeployBatch.php
modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php
modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php
modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php
modules/contrib/tome_netlify/tome_netlify.install

9 files with changes
====================

1) modules/contrib/tome_netlify/tome_netlify.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Extension\ModuleInstallerInterface;
 /**
  * @file
  * Install, update, and uninstall functions for Tome Netlify.
@@ @@
  * Installs the new tome_netlify_contact sub-module.
  */
 function tome_netlify_update_8001() {
-  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $installer */
+  /** @var ModuleInstallerInterface $installer */
   $installer = \Drupal::service('module_installer');
   $installer->install([
     'tome_netlify_contact',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tome_netlify\Kernel;

+use Drupal\tome_static\StaticGenerator;
 use Drupal\Core\Site\Settings;
 use Drupal\redirect\Entity\Redirect;
 use Drupal\Tests\tome_base\Kernel\TestBase;
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('redirect');
     // @see \Drupal\redirect\RedirectChecker::canRedirect
@@ @@
    * @covers \Drupal\tome_netlify\EventSubscriber\RedirectSubscriber::onResponse
    */
   public function testRedirect() {
-    /** @var \Drupal\tome_static\StaticGenerator $static */
+    /** @var StaticGenerator $static */
     $static = \Drupal::service('tome_static.generator');
     $base_dir = Settings::get('tome_static_directory');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->drupalCreateUser(['use tome static']));
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     ContactForm::create([
       'id' => 'test',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/tome_netlify/src/TomeNetlifyDeployBatch.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tome_netlify;

+use Drupal\Core\Config\Config;
+use Psr\Http\Message\ResponseInterface;
 use Drupal\Core\Batch\BatchBuilder;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
@@ @@
   /**
    * The static generator.
    *
-   * @var \Drupal\tome_static\StaticGeneratorInterface
+   * @var StaticGeneratorInterface
    */
   protected $static;

@@ @@
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * The config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * TomeNetlifyDeployBatch constructor.
    *
-   * @param \Drupal\tome_static\StaticGeneratorInterface $static
+   * @param StaticGeneratorInterface $static
    *   The static generator.
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   The HTTP client.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(StaticGeneratorInterface $static, Client $http_client, ConfigFactoryInterface $config_factory, FileSystemInterface $file_system) {
@@ @@
    * @param string $title
    *   The deploy title.
    *
-   * @return \Drupal\Core\Batch\BatchBuilder
+   * @return BatchBuilder
    *   The batch builder.
    */
   public function getBatch($title) {
@@ @@
    * @param string $content
    *   The request content.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   A response.
    */
   protected function netlifyRequest($path, $method = 'GET', array $query = NULL, $contentType = NULL, $content = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/tome_netlify/src/Form/TomeNetlifyDeployForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The batch service.
    *
-   * @var \Drupal\tome_netlify\TomeNetlifyDeployBatch
+   * @var TomeNetlifyDeployBatch
    */
   protected $batch;

@@ @@
   /**
    * StaticGeneratorForm constructor.
    *
-   * @param \Drupal\tome_netlify\TomeNetlifyDeployBatch $batch
+   * @param TomeNetlifyDeployBatch $batch
    *   The batch service.
    */
   public function __construct(TomeNetlifyDeployBatch $batch) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tome_netlify\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\tome_static\StaticGeneratorInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * The static generator.
    *
-   * @var \Drupal\tome_static\StaticGeneratorInterface
+   * @var StaticGeneratorInterface
    */
   protected $staticGenerator;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Constructs a RedirectSubscriber object.
    *
-   * @param \Drupal\tome_static\StaticGeneratorInterface $static_generator
+   * @param StaticGeneratorInterface $static_generator
    *   The static generator.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(StaticGeneratorInterface $static_generator, FileSystemInterface $file_system) {
@@ @@
   /**
    * Reacts to a response event.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     $request = $event->getRequest();
     if ($request->attributes->has(StaticGeneratorInterface::REQUEST_KEY) && $response instanceof RedirectResponse) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/tome_netlify/src/Commands/TomeNetlifyDeployCommands.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The batch service.
    *
-   * @var \Drupal\tome_netlify\TomeNetlifyDeployBatch
+   * @var TomeNetlifyDeployBatch
    */
   protected $batch;

@@ @@
   /**
    * TomeNetlifyDeployCommand constructor.
    *
-   * @param \Drupal\tome_netlify\TomeNetlifyDeployBatch $batch
+   * @param TomeNetlifyDeployBatch $batch
    *   The batch service.
    */
   public function __construct(TomeNetlifyDeployBatch $batch) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/tome_netlify/modules/tome_netlify_contact/tome_netlify_contact.module:14

    ---------- begin diff ----------
@@ @@
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function tome_netlify_contact_form_contact_form_edit_form_alter(array &$form, FormStateInterface $form_state) {
@@ @@
  *
  * @param string $entity_type
  *   An entity type ID.
- * @param \Drupal\Core\Config\Entity\ThirdPartySettingsInterface $entity
+ * @param ThirdPartySettingsInterface $entity
  *   The entity being built.
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function tome_netlify_contact_form_contact_form_edit_form_builder($entity_type, ThirdPartySettingsInterface $entity, array &$form, FormStateInterface $form_state) {
@@ @@
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function tome_netlify_contact_form_contact_message_form_alter(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 9 files have been changed by Rector                                       

