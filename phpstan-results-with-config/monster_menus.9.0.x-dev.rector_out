modules/contrib/monster_menus/misc.inc
modules/contrib/monster_menus/mm_content.inc
modules/contrib/monster_menus/mm_import_export.inc
modules/contrib/monster_menus/mm_node.inc
modules/contrib/monster_menus/mm_search_replace_alter.inc
modules/contrib/monster_menus/mm_static.inc
modules/contrib/monster_menus/mm_theme.inc
modules/contrib/monster_menus/mm_ui.inc
modules/contrib/monster_menus/mm_ui_solver.inc
modules/contrib/monster_menus/modules/mm_alert/mm_alert.module
modules/contrib/monster_menus/modules/mm_alert/src/MMAlertPlaceholder.php
modules/contrib/monster_menus/modules/mm_detailed_404/mm_detailed_404.module
modules/contrib/monster_menus/modules/mm_fields/mm_fields.install
modules/contrib/monster_menus/modules/mm_fields/mm_fields.module
modules/contrib/monster_menus/modules/mm_fields/mm_fields.views.inc
modules/contrib/monster_menus/modules/mm_fields/mm_fields_perms/mm_fields_perms.install
modules/contrib/monster_menus/modules/mm_fields/mm_fields_perms/mm_fields_perms.module
modules/contrib/monster_menus/modules/mm_fields/mm_fields_perms/src/FieldConfigListBuilder.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldFormatter/MMFieldsLinkNodeTitle.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldFormatter/MMFieldsLinkPage.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldFormatter/MMFieldsLinkPageFullpath.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldFormatter/MMFieldsNode.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldFormatter/MMFieldsNodeTeaser.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldFormatter/MMFieldsNodeTitle.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldFormatter/MMFieldsPageFullpath.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldFormatter/MMFieldsPageName.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldFormatter/MMFieldsUser.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldType/MMCatlist.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldType/MMGrouplist.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldType/MMNodelist.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldType/MMUserlist.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldWidget/MMCatlist.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldWidget/MMFieldWidgetBase.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldWidget/MMGrouplist.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldWidget/MMNodelist.php
modules/contrib/monster_menus/modules/mm_fields/src/Plugin/Field/FieldWidget/MMUserlist.php
modules/contrib/monster_menus/modules/mm_media/mm_media.module
modules/contrib/monster_menus/modules/mm_media/src/Element/MMMedialist.php
modules/contrib/monster_menus/modules/mm_media/src/Plugin/EntityBrowser/Widget/MMTree.php
modules/contrib/monster_menus/modules/mm_media/src/Plugin/MMTreeBrowserDisplay/Media.php
modules/contrib/monster_menus/modules/mm_media/tests/modules/mm_media_fileref_type/mm_media_fileref_type.module
modules/contrib/monster_menus/modules/mm_media/tests/src/Kernel/DownloadTest.php
modules/contrib/monster_menus/modules/mm_webform/mm_webform.install
modules/contrib/monster_menus/modules/mm_webform/mm_webform.module
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntityElementsForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntityHandlersForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntitySettingsConfirmationForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntitySettingsFormForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntitySettingsGeneralForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntitySettingsSubmissionsForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformFixElementTrait.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformFixEntityTrait.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformGetWebformTrait.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformHandlerAddForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformHandlerDeleteForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformHandlerDuplicateForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformHandlerEditForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformSubmitElementTrait.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformSubmitHandlerTrait.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiElementAddForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiElementDeleteForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiElementDuplicateForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiElementEditForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiElementTypeChangeForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiElementTypeSelectForm.php
modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiEntityElementsForm.php
modules/contrib/monster_menus/modules/mm_webform/src/MMWebformAccess.php
modules/contrib/monster_menus/modules/mm_webform/src/Plugin/WebformSourceEntity/MMWebformRouteParametersSourceEntity.php
modules/contrib/monster_menus/modules/mm_webform/src/RouteProcessor/OutboundRouteProcessor.php
modules/contrib/monster_menus/modules/mm_workflow_access/mm_workflow_access.install
modules/contrib/monster_menus/modules/mm_workflow_access/mm_workflow_access.module
modules/contrib/monster_menus/modules/mm_workflow_access/src/Access/WorkflowHistoryAccess.php
modules/contrib/monster_menus/modules/mm_workflow_access/src/Routing/RouteSubscriber.php
modules/contrib/monster_menus/modules/rss_page/rss_page.install
modules/contrib/monster_menus/modules/rss_page/rss_page.module
modules/contrib/monster_menus/modules/rss_page/src/Controller/DefaultController.php
modules/contrib/monster_menus/modules/rss_page/src/Element/RSSFeedList.php
modules/contrib/monster_menus/modules/rss_page/src/Form/ConfigForm.php
modules/contrib/monster_menus/modules/rss_page/src/Plugin/Block/RSSPageBase.php
modules/contrib/monster_menus/modules/rss_page/src/Plugin/Block/RSSPageContent.php
modules/contrib/monster_menus/modules/rss_page/src/Plugin/Block/RSSPageNavigation.php
modules/contrib/monster_menus/modules/rss_page/src/Plugin/MMTreeBrowserDisplay/RSSPage.php
modules/contrib/monster_menus/monster_menus.api.php
modules/contrib/monster_menus/monster_menus.install
modules/contrib/monster_menus/monster_menus.module
modules/contrib/monster_menus/monster_menus.views.inc
modules/contrib/monster_menus/src/Access/CustomAccessCheck.php
modules/contrib/monster_menus/src/Annotation/MMTreeBrowserDisplay.php
modules/contrib/monster_menus/src/Breadcrumb/MMBreadcrumbBuilder.php
modules/contrib/monster_menus/src/Cache/Context/AccountPermissionsCacheContext.php
modules/contrib/monster_menus/src/CheckOrphanNodes.php
modules/contrib/monster_menus/src/Commands/MonsterMenusCommands.php
modules/contrib/monster_menus/src/Constants.php
modules/contrib/monster_menus/src/Controller/DefaultController.php
modules/contrib/monster_menus/src/Controller/MMTreeBrowserController.php
modules/contrib/monster_menus/src/Controller/MMTreeViewController.php
modules/contrib/monster_menus/src/Controller/NodeRevisionsController.php
modules/contrib/monster_menus/src/DumpCSV.php
modules/contrib/monster_menus/src/Element/MMCatlist.php
modules/contrib/monster_menus/src/Element/MMGrouplist.php
modules/contrib/monster_menus/src/Element/MMHelpRadios.php
modules/contrib/monster_menus/src/Element/MMNodelist.php
modules/contrib/monster_menus/src/Element/MMRepeatlist.php
modules/contrib/monster_menus/src/Element/MMUserlist.php
modules/contrib/monster_menus/src/Entity/MMTree.php
modules/contrib/monster_menus/src/Entity/MMTreeExtendedSettingsTrait.php
modules/contrib/monster_menus/src/Entity/MMTreeInterface.php
modules/contrib/monster_menus/src/Entity/MMTreeViewsData.php
modules/contrib/monster_menus/src/EventSubscriber/ExitSubscriber.php
modules/contrib/monster_menus/src/Form/AddGroupUsersForm.php
modules/contrib/monster_menus/src/Form/ConfigForm.php
modules/contrib/monster_menus/src/Form/CopyMoveContentForm.php
modules/contrib/monster_menus/src/Form/DeleteContentConfirmForm.php
modules/contrib/monster_menus/src/Form/DeleteNodeConfirmForm.php
modules/contrib/monster_menus/src/Form/EditContentForm.php
modules/contrib/monster_menus/src/Form/ExportTreeForm.php
modules/contrib/monster_menus/src/Form/FindUserForm.php
modules/contrib/monster_menus/src/Form/FixNodeUrlsForm.php
modules/contrib/monster_menus/src/Form/ImportTreeForm.php
modules/contrib/monster_menus/src/Form/ListSitesForm.php
modules/contrib/monster_menus/src/Form/ListUsersForm.php
modules/contrib/monster_menus/src/Form/ReassignContentForm.php
modules/contrib/monster_menus/src/Form/RegionSettingsForm.php
modules/contrib/monster_menus/src/Form/ReorderMenuForm.php
modules/contrib/monster_menus/src/Form/ReorderNodesForm.php
modules/contrib/monster_menus/src/Form/RestoreContentConfirmForm.php
modules/contrib/monster_menus/src/Form/RestoreNodeConfirmForm.php
modules/contrib/monster_menus/src/Form/SearchReplaceForm.php
modules/contrib/monster_menus/src/Form/SetDestinationTrait.php
modules/contrib/monster_menus/src/Form/VerifyIntegrityForm.php
modules/contrib/monster_menus/src/GetTreeIterator.php
modules/contrib/monster_menus/src/GetTreeIterator/CSVDumpIter.php
modules/contrib/monster_menus/src/GetTreeIterator/ContentCopyIter.php
modules/contrib/monster_menus/src/GetTreeIterator/ContentDeleteIter.php
modules/contrib/monster_menus/src/GetTreeIterator/ContentFindUnmodifiedHomepagesIter.php
modules/contrib/monster_menus/src/GetTreeIterator/ContentMoveIter.php
modules/contrib/monster_menus/src/GetTreeIterator/ContentTestShowpageIter.php
modules/contrib/monster_menus/src/GetTreeIterator/ContentUserCanRecycleIter.php
modules/contrib/monster_menus/src/GetTreeIterator/MMExportIter.php
modules/contrib/monster_menus/src/GetTreeIterator/SitemapDumpIter.php
modules/contrib/monster_menus/src/GetTreeResults.php
modules/contrib/monster_menus/src/MMCreatePath/MMCreatePath.php
modules/contrib/monster_menus/src/MMCreatePath/MMCreatePathCat.php
modules/contrib/monster_menus/src/MMCreatePath/MMCreatePathGroup.php
modules/contrib/monster_menus/src/MMCreatePath/MMCreatePathInterface.php
modules/contrib/monster_menus/src/MMImportExportException.php
modules/contrib/monster_menus/src/MMRenderer/DefaultMMRenderer.php
modules/contrib/monster_menus/src/MMRenderer/MMRendererInterface.php
modules/contrib/monster_menus/src/MMTreeAccessControlHandler.php
modules/contrib/monster_menus/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayInterface.php
modules/contrib/monster_menus/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayManager.php
modules/contrib/monster_menus/src/MMTreeHtmlRouteProvider.php
modules/contrib/monster_menus/src/MMTreeListBuilder.php
modules/contrib/monster_menus/src/MMTreeStorageSchema.php
modules/contrib/monster_menus/src/Menu/MenuLinkTreeManipulators.php
modules/contrib/monster_menus/src/MigrateMessage/MMMigrateMessage.php
modules/contrib/monster_menus/src/PathProcessor/InboundPathProcessor.php
modules/contrib/monster_menus/src/PathProcessor/OutboundPathProcessor.php
modules/contrib/monster_menus/src/Permissions.php
modules/contrib/monster_menus/src/Plugin/Block/MMTreeBlock.php
modules/contrib/monster_menus/src/Plugin/MMTreeBrowserDisplay/Fallback.php
modules/contrib/monster_menus/src/Plugin/MMTreeBrowserDisplay/Groups.php
modules/contrib/monster_menus/src/Plugin/MMTreeBrowserDisplay/Nodes.php
modules/contrib/monster_menus/src/Plugin/MMTreeBrowserDisplay/Users.php
modules/contrib/monster_menus/src/Plugin/Menu/LocalTask/MMTreeDeleteLocalTask.php
modules/contrib/monster_menus/src/Plugin/Menu/LocalTask/MMTreeSubLocalTask.php
modules/contrib/monster_menus/src/Plugin/Menu/LocalTask/NodeDeleteLocalTask.php
modules/contrib/monster_menus/src/Plugin/SyncNormalizerDecorator/MMNodePermissions.php
modules/contrib/monster_menus/src/Plugin/Validation/Constraint/MMNodeValidationConstraint.php
modules/contrib/monster_menus/src/Plugin/Validation/Constraint/MMNodeValidationConstraintValidator.php
modules/contrib/monster_menus/src/Plugin/migrate/destination/MMNullDestination.php
modules/contrib/monster_menus/src/Plugin/migrate/destination/MMTree.php
modules/contrib/monster_menus/src/Plugin/migrate/destination/Role2Group.php
modules/contrib/monster_menus/src/Plugin/migrate/destination/TreeBookmarks.php
modules/contrib/monster_menus/src/Plugin/migrate/field/d7/MMGroups.php
modules/contrib/monster_menus/src/Plugin/migrate/field/d7/MMPages.php
modules/contrib/monster_menus/src/Plugin/migrate/field/d7/MultThumb.php
modules/contrib/monster_menus/src/Plugin/migrate/field/d7/Multimedia.php
modules/contrib/monster_menus/src/Plugin/migrate/field/d7/NodeReference.php
modules/contrib/monster_menus/src/Plugin/migrate/field/d7/NodeView.php
modules/contrib/monster_menus/src/Plugin/migrate/field/d7/UserList.php
modules/contrib/monster_menus/src/Plugin/migrate/source/D7MMTree.php
modules/contrib/monster_menus/src/Plugin/migrate/source/D7MMTreeRevision.php
modules/contrib/monster_menus/src/Plugin/migrate/source/D7Role2Group.php
modules/contrib/monster_menus/src/Plugin/migrate/source/D7TreeBookmarks.php
modules/contrib/monster_menus/src/Plugin/views/argument/MMTreeChildren.php
modules/contrib/monster_menus/src/Plugin/views/field/NodeLinkVersionHistory.php
modules/contrib/monster_menus/src/Plugin/views/filter/IsRecycled.php
modules/contrib/monster_menus/src/Plugin/views/relationship/SequentialJoin.php
modules/contrib/monster_menus/src/Routing/OutboundRouteProcessor.php
modules/contrib/monster_menus/src/Routing/RouteSubscriber.php
modules/contrib/monster_menus/src/Session/AccountProxy.php
modules/contrib/monster_menus/src/Theme/PageThemeNegotiator.php
modules/contrib/monster_menus/src/ValidateSortIndex.php
modules/contrib/monster_menus/tests/src/Functional/Permissions/PermissionsTest.php
modules/contrib/monster_menus/tests/src/Functional/Permissions/PermissionsTestIter.php
modules/contrib/monster_menus/tests/src/Kernel/migrate/FieldMigrationTest.php
modules/contrib/monster_menus/tests/src/Kernel/migrate/MonsterMenusMigrationTestBase.php
modules/contrib/monster_menus/tests/src/Unit/Controller/DefaultControllerTest.php
modules/contrib/monster_menus/tests/src/Unit/Controller/MMTreeBrowserControllerTest.php
modules/contrib/monster_menus/tests/src/Unit/Controller/MMTreeViewControllerTest.php
modules/contrib/monster_menus/tests/src/Unit/MMTreeAccessControlHandlerTest.php
modules/contrib/monster_menus/tests/src/Unit/Menu/LocalTask/MMLocalTasksTest.php

34 files with changes
=====================

1) modules/contrib/monster_menus/tests/src/Unit/Menu/LocalTask/MMLocalTasksTest.php:10

    ---------- begin diff ----------
@@ @@
  */
 class MMLocalTasksTest extends LocalTaskIntegrationTestBase {

-  protected function setUp() {
+  protected function setUp(): void {
     $this->directoryList = array('monster_menus' => 'modules/contrib/monster_menus');
     parent::setUp();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/monster_menus/tests/src/Unit/MMTreeAccessControlHandlerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\monster_menus\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Cache\Context\CacheContextsManager;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
@@ @@
  */
 class MMTreeAccessControlHandlerTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The mocked class instance.
    *
-   * @var \Drupal\monster_menus\MMTreeAccessControlHandler|\PHPUnit_Framework_MockObject_MockObject
+   * @var MMTreeAccessControlHandler|MockObject
    */
   protected $MMTreeAccessControlHandler;

@@ @@
   /**
    * The mocked entity type.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var EntityTypeInterface|MockObject
    */
   protected $entityType;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->entityType = $this->createMock('Drupal\Core\Entity\EntityTypeInterface');
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     parent::tearDown();
     $container = new ContainerBuilder();
     \Drupal::setContainer($container);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/monster_menus/tests/src/Unit/Controller/MMTreeViewControllerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\monster_menus\Unit\Controller;

+use Drupal\Core\Database\Connection;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Tests\UnitTestCase;
 use Drupal\monster_menus\Controller\MMTreeViewController;

@@ @@
   /**
    * The mocked database connection.
    *
-   * @var \Drupal\Core\Database\Connection|\PHPUnit_Framework_MockObject_MockObject
+   * @var Connection|MockObject
    */
   protected $database;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

-    $this->database = $this->getMockBuilder('\Drupal\Core\Database\Connection')
-                            ->disableOriginalConstructor()
-                            ->getMock();
+    $this->database = $this->createMock('\Drupal\Core\Database\Connection');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/monster_menus/tests/src/Unit/Controller/MMTreeBrowserControllerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\monster_menus\Unit\Controller;

+use Drupal\Core\Database\Connection;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Tests\UnitTestCase;
 use Drupal\monster_menus\Controller\MMTreeBrowserController;

@@ @@
   /**
    * The mocked database connection.
    *
-   * @var \Drupal\Core\Database\Connection|\PHPUnit_Framework_MockObject_MockObject
+   * @var Connection|MockObject
    */
   protected $database;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

-    $this->database = $this->getMockBuilder('\Drupal\Core\Database\Connection')
-                            ->disableOriginalConstructor()
-                            ->getMock();
+    $this->database = $this->createMock('\Drupal\Core\Database\Connection');
   }

   /**
@@ @@
       ->method('getCurrentRequest')
       ->willReturn($this->createMock('Symfony\Component\HttpFoundation\Request'));

-    $renderer = $this->getMockBuilder('Drupal\Core\Render\Renderer')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $renderer = $this->createMock('Drupal\Core\Render\Renderer');

     $plugin_manager = $this->createMock('Drupal\Component\Plugin\PluginManagerInterface');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/monster_menus/tests/src/Unit/Controller/DefaultControllerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\monster_menus\Unit\Controller;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Database\Connection;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Session\AccountInterface;
@@ @@
  */
 class DefaultControllerTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The mocked database connection.
    *
-   * @var \Drupal\Core\Database\Connection|\PHPUnit_Framework_MockObject_MockObject
+   * @var Connection|MockObject
    */
   protected $database;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

-    $this->database = $this->getMockBuilder('\Drupal\Core\Database\Connection')
-                            ->disableOriginalConstructor()
-                            ->getMock();
+    $this->database = $this->createMock('\Drupal\Core\Database\Connection');
   }

   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     parent::tearDown();
     $container = new ContainerBuilder();
     \Drupal::setContainer($container);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/monster_menus/tests/src/Kernel/migrate/MonsterMenusMigrationTestBase.php:13

    ---------- begin diff ----------
@@ @@
     /**
      * {@inheritdoc}
      */
-    public function setUp()
+    public function setUp(): void
     {
         parent::setUp();
         //$this->loadFixture(__DIR__ . '/../../../fixtures/migrate/drupal7.php');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/monster_menus/tests/src/Functional/Permissions/PermissionsTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * @inheritDoc
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Prevent mm_content_delete() from printing deletion stats.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/monster_menus/src/Theme/PageThemeNegotiator.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Constructs a PageThemeNegotiator object.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    */
   public function __construct(Connection $database) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/monster_menus/src/Plugin/views/relationship/SequentialJoin.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs a SequentialJoin object.
    *
-   * @param \Drupal\views\Plugin\ViewsHandlerManager $join_manager
+   * @param ViewsHandlerManager $join_manager
    *   The views plugin join manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ViewsHandlerManager $join_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/monster_menus/src/Plugin/migrate/destination/TreeBookmarks.php:31

    ---------- begin diff ----------
@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The migration.
    * @param Connection $database
    *   The database interface.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/monster_menus/src/Plugin/migrate/destination/Role2Group.php:31

    ---------- begin diff ----------
@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The migration.
    * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/monster_menus/src/Plugin/Block/MMTreeBlock.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The route match.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/monster_menus/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayManager.php:20

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/monster_menus/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\monster_menus\MMTreeBrowserDisplay;

+use Drupal\Core\Database\Connection;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\HttpFoundation\ParameterBag;

@@ @@
    *   The page's permissions.
    * @param $item
    *   Object describing the tree entry.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    * @return string HTML code.
    *   HTML code.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


15) modules/contrib/monster_menus/src/MMTreeAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\monster_menus;

+use Drupal\monster_menus\Entity\MMTree;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\monster_menus\Entity\MMTree $entity */
+    /** @var MMTree $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIf(mm_content_user_can($entity->id(), Constants::MM_PERMS_READ, $account));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/monster_menus/src/GetTreeIterator/MMExportIter.php:0

    ---------- begin diff ----------
@@ @@
 <?php
 namespace Drupal\monster_menus\GetTreeIterator;

+use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\Database;
 use Drupal\monster_menus\Constants;
 use Drupal\monster_menus\GetTreeIterator;
@@ @@
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
   protected $contentExporter;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/monster_menus/src/GetTreeIterator/ContentMoveIter.php:0

    ---------- begin diff ----------
@@ @@
 <?php
 namespace Drupal\monster_menus\GetTreeIterator;

+use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\Database;
 use Drupal\monster_menus\Constants;
 use Drupal\monster_menus\GetTreeIterator;
@@ @@
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/monster_menus/src/Form/ListSitesForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/monster_menus/src/Form/ImportTreeForm.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/monster_menus/src/Form/EditContentForm.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/monster_menus/src/Form/DeleteContentConfirmForm.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/monster_menus/src/Form/CopyMoveContentForm.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/monster_menus/src/Form/ConfigForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The permission handler.
    *
-   * @var \Drupal\user\PermissionHandlerInterface
+   * @var PermissionHandlerInterface
    */
   protected $permissionHandler;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/monster_menus/src/Element/MMCatlist.php:328

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @return array
    *   The form element.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/monster_menus/src/Annotation/MMTreeBrowserDisplay.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\monster_menus\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


26) modules/contrib/monster_menus/monster_menus.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Component\Utility\Html;
+use Drupal\Core\Block\BlockPluginInterface;
 /**
  * @file
  * Menus, menus, menus
@@ @@
         _mm_render_nodes($nids[$region], $scheduled, $item->previews ? 'teaser' : 'full', FALSE, $output, $rss_link);
         if ($output) {
           $page[$region]['wrapper'] = array(
-            '#prefix' => '<div id="' . \Drupal\Component\Utility\Html::getId("block-monster-menus-$region") . '" class="block block-monster-menus">',
+            '#prefix' => '<div id="' . Html::getId("block-monster-menus-$region") . '" class="block block-monster-menus">',
             $output,
             '#suffix' => '</div>',
           );
@@ @@
 /**
  * Implements hook_block_view_BASE_BLOCK_ID_alter() for 'mm_tree_block'.
  */
-function monster_menus_block_view_mm_tree_block_alter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {
+function monster_menus_block_view_mm_tree_block_alter(array &$build, BlockPluginInterface $block) {
   $build['#pre_render'][] = function($build) use($block) {
     // Set the user-facing label based on whatever was generated by the build()
     // method.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


27) modules/contrib/monster_menus/modules/mm_workflow_access/src/Access/WorkflowHistoryAccess.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mm_workflow_access\Access;

+use Drupal\Core\Access\AccessResultAllowed;
+use Drupal\Core\Access\AccessResultForbidden;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ @@
   /**
    * Check if the user has permissions to view the Workflow tab.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Current user account.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   Current routeMatch.
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   Current route.
    *
-   * @return \Drupal\Core\Access\AccessResultAllowed|\Drupal\Core\Access\AccessResultForbidden
+   * @return AccessResultAllowed|AccessResultForbidden
    *   If the user can access this workflow.
    */
   public function access(AccountInterface $account, RouteMatchInterface $routeMatch, Route $route) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


28) modules/contrib/monster_menus/modules/mm_webform/src/RouteProcessor/OutboundRouteProcessor.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;

@@ @@
   /**
    * Constructs a OutboundRouteProcessor object.
    *
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider.
    */
   public function __construct(RouteProviderInterface $route_provider) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


29) modules/contrib/monster_menus/modules/mm_media/tests/src/Kernel/DownloadTest.php:80

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->setInstallProfile('standard');
@@ @@
   /**
    * @inheritDoc
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     $privatePath = Settings::get('file_private_path');
     foreach ($this->cleanupFilenames as $fn) {
       unlink($privatePath . '/' . $fn);
@@ @@
    * @param string $media_source_name
    *   The name of the media source.
    *
-   * @return \Drupal\media\MediaTypeInterface
+   * @return MediaTypeInterface
    *   A media type.
    */
   protected function createMediaType($media_source_name) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


30) modules/contrib/monster_menus/modules/mm_fields/mm_fields_perms/src/FieldConfigListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mm_fields_perms;

+use Drupal\field\FieldConfigInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\monster_menus\Constants;

@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $field_config) {
-    /** @var \Drupal\field\FieldConfigInterface $field_config */
+    /** @var FieldConfigInterface $field_config */
     $row = parent::buildRow($field_config);

     $settings = $field_config->getThirdPartySettings('mm_fields_perms');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


31) modules/contrib/monster_menus/modules/mm_fields/mm_fields_perms/mm_fields_perms.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\webform\Entity\Webform;
 /**
  * @file
  * Apply Monster Menus permissions to entity fields.
@@ @@
   if ($entity instanceof FieldConfigInterface) {
     _mm_fields_perms_alter_field_config_form($form, $form_state, $entity);
   }
-  else if ($entity instanceof ConfigEntityBundleBase && !$entity instanceof Drupal\webform\Entity\Webform) {
+  else if ($entity instanceof ConfigEntityBundleBase && !$entity instanceof Webform) {
     _mm_fields_perms_alter_entity_config_form($form, $form_state, $entity);
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


32) modules/contrib/monster_menus/mm_ui.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\Config;
 /**
  * @file
  * User interface routines for monster_menus
@@ @@
     '#weight' => -1,
   );
   $form['#submit'][] = function($form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = \Drupal::service('config.factory')->getEditable('monster_menus.settings');
     $defaults = $config->get('nodes.default_region');
     $defaults[$form_state->getValue('type')] = $form_state->getValue('mm_default_region');
@@ @@
  *   The node updated with the submitted values.
  * @param array $form
  *   The complete form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  *
  * @see \Drupal\node\NodeForm::form()
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


33) modules/contrib/monster_menus/mm_content.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\monster_menus\GetTreeIterator\ContentTestShowpageIter;
 /**
  * @file
  * Functions related to the retrieval of data for monster menus
@@ @@
  *
  * @param bool $allowed
  *   If set, only return the blocks the current user can apply to a page
- * @return Drupal\block\Entity\Block[]
+ * @return Block[]
  *   An array, indexed on block ID, containing Drupal\block\Entity\Block
  *   elements
  */
@@ @@
   $options = array();
   mm_module_invoke_all_array('url_outbound_alter', array(&$path, &$options, $path));

-  $iter = new \Drupal\monster_menus\GetTreeIterator\ContentTestShowpageIter(explode('/', $path));
+  $iter = new ContentTestShowpageIter(explode('/', $path));
   mm_content_get_tree($mmtid, array(Constants::MM_GET_TREE_ITERATOR => $iter));
   return $iter->match;
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


34) modules/contrib/monster_menus/misc.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\block\Entity\Block;
 /**
  * @file
  * Miscellaneous MM functions
@@ @@
 /**
  * Redirect form processing to a particular MM page or unset redirection.
  *
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Form state object
  * @param null $mmtid
  *   If NULL, disable redirection. Otherwise, the MM Tree ID of the page to
@@ @@
  *
  * @param mixed[] $filters
  *   Optional list of filters to apply
- * @return Drupal\block\Entity\Block[]
+ * @return Block[]
  */
 function mm_get_mm_blocks($filters = []) {
   $list = \Drupal::entityTypeManager()->getStorage('block')->loadByProperties($filters + ['status' => TRUE, 'settings.provider' => 'monster_menus']);
   // Translate the keys using the delta set during creation.
   $result = [];
-  /** @var Drupal\block\Entity\Block $block */
+  /** @var Block $block */
   foreach ($list as $key => $block) {
     $result[$block->get('settings')['delta']] = $block;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/src/Plugin/SyncNormalizerDecorator/MMNodeP
         ermissions.php" file, due to:                                          
         "Analyze error: "Class                                                 
         Drupal\content_sync\Plugin\SyncNormalizerDecoratorBase not found.".    
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_workflow_access/src/Routing/Rou
         teSubscriber.php" file, due to:                                        
         "Analyze error: "Class Drupal\workflow\Routing\RouteSubscriber not     
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Plugin/WebformSourc
         eEntity/MMWebformRouteParametersSourceEntity.php" file, due to:        
         "Analyze error: "Class                                                 
         Drupal\webform\Plugin\WebformSourceEntity\RouteParametersWebformSourceEnt
         ity not found.". Include your files in                                 
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiEnt
         ityElementsForm.php" file, due to:                                     
         "Analyze error: "Class Drupal\webform_ui\WebformUiEntityElementsForm not
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiEle
         mentTypeSelectForm.php" file, due to:                                  
         "Analyze error: "Class                                                 
         Drupal\webform_ui\Form\WebformUiElementTypeSelectForm not found.".     
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiEle
         mentTypeChangeForm.php" file, due to:                                  
         "Analyze error: "Class                                                 
         Drupal\webform_ui\Form\WebformUiElementTypeChangeForm not found.".     
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiEle
         mentEditForm.php" file, due to:                                        
         "Analyze error: "Class Drupal\webform_ui\Form\WebformUiElementEditForm 
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiEle
         mentDuplicateForm.php" file, due to:                                   
         "Analyze error: "Class                                                 
         Drupal\webform_ui\Form\WebformUiElementDuplicateForm not found.". Include
         your files in "$rectorConfig->autoloadPaths([...]);" or                
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiEle
         mentDeleteForm.php" file, due to:                                      
         "Analyze error: "Class Drupal\webform_ui\Form\WebformUiElementDeleteForm
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformUiEle
         mentAddForm.php" file, due to:                                         
         "Analyze error: "Class Drupal\webform_ui\Form\WebformUiElementAddForm not
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformHandl
         erEditForm.php" file, due to:                                          
         "Analyze error: "Class Drupal\webform\Form\WebformHandlerEditForm not  
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformHandl
         erDuplicateForm.php" file, due to:                                     
         "Analyze error: "Class Drupal\webform\Form\WebformHandlerDuplicateForm 
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformHandl
         erDeleteForm.php" file, due to:                                        
         "Analyze error: "Class Drupal\webform\Form\WebformHandlerDeleteForm not
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformHandl
         erAddForm.php" file, due to:                                           
         "Analyze error: "Class Drupal\webform\Form\WebformHandlerAddForm not   
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntit
         ySettingsSubmissionsForm.php" file, due to:                            
         "Analyze error: "Class                                                 
         Drupal\webform\EntitySettings\WebformEntitySettingsSubmissionsForm not 
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntit
         ySettingsGeneralForm.php" file, due to:                                
         "Analyze error: "Class                                                 
         Drupal\webform\EntitySettings\WebformEntitySettingsGeneralForm not     
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntit
         ySettingsFormForm.php" file, due to:                                   
         "Analyze error: "Class                                                 
         Drupal\webform\EntitySettings\WebformEntitySettingsFormForm not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntit
         ySettingsConfirmationForm.php" file, due to:                           
         "Analyze error: "Class                                                 
         Drupal\webform\EntitySettings\WebformEntitySettingsConfirmationForm not
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntit
         yHandlersForm.php" file, due to:                                       
         "Analyze error: "Class Drupal\webform\WebformEntityHandlersForm not    
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_webform/src/Form/MMWebformEntit
         yElementsForm.php" file, due to:                                       
         "Analyze error: "Class Drupal\webform\WebformEntityElementsForm not    
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_media/src/Plugin/MMTreeBrowserD
         isplay/Media.php" file, due to:                                        
         "Analyze error: "Class Drupal\entity_browser\WidgetBase not found.".   
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_media/src/Plugin/EntityBrowser/
         Widget/MMTree.php" file, due to:                                       
         "Analyze error: "Class Drupal\entity_browser\WidgetBase not found.".   
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/monster_menus/modules/mm_media/mm_media.module" file, 
         due to:                                                                
         "Analyze error: "Class Drupal\entity_browser\WidgetBase not found.".   
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

