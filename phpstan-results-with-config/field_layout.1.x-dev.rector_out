modules/contrib/field_layout-field_layout/field_layout.install
modules/contrib/field_layout-field_layout/field_layout.module
modules/contrib/field_layout-field_layout/src/Display/EntityDisplayWithLayoutInterface.php
modules/contrib/field_layout-field_layout/src/Entity/FieldLayoutEntityDisplayTrait.php
modules/contrib/field_layout-field_layout/src/Entity/FieldLayoutEntityFormDisplay.php
modules/contrib/field_layout-field_layout/src/Entity/FieldLayoutEntityViewDisplay.php
modules/contrib/field_layout-field_layout/src/FieldLayoutBuilder.php
modules/contrib/field_layout-field_layout/src/Form/FieldLayoutEntityDisplayFormTrait.php
modules/contrib/field_layout-field_layout/src/Form/FieldLayoutEntityFormDisplayEditForm.php
modules/contrib/field_layout-field_layout/src/Form/FieldLayoutEntityViewDisplayEditForm.php
modules/contrib/field_layout-field_layout/tests/modules/field_layout_test/field_layout_test.module
modules/contrib/field_layout-field_layout/tests/modules/field_layout_test/src/Plugin/Layout/TestLayoutContentFooter.php
modules/contrib/field_layout-field_layout/tests/modules/field_layout_test/src/Plugin/Layout/TestLayoutMainFooter.php
modules/contrib/field_layout-field_layout/tests/src/Functional/FieldLayoutTest.php
modules/contrib/field_layout-field_layout/tests/src/FunctionalJavascript/FieldLayoutTest.php
modules/contrib/field_layout-field_layout/tests/src/Kernel/FieldLayoutEntityDisplayTest.php
modules/contrib/field_layout-field_layout/tests/src/Kernel/FieldLayoutUninstallTest.php
modules/contrib/field_layout-field_layout/tests/src/Unit/FieldLayoutBuilderTest.php

11 files with changes
=====================

1) modules/contrib/field_layout-field_layout/tests/src/Unit/FieldLayoutBuilderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\field_layout\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Layout\LayoutPluginManager;
+use Prophecy\Prophecy\ProphecyInterface;
+use Drupal\Core\Layout\LayoutInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\field_layout\Display\EntityDisplayWithLayoutInterface;
@@ @@
  */
 class FieldLayoutBuilderTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
-   * @var \Drupal\Core\Layout\LayoutPluginManager|\Prophecy\Prophecy\ProphecyInterface
+   * @var LayoutPluginManager|ProphecyInterface
    */
   protected $layoutPluginManager;

   /**
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface|\Prophecy\Prophecy\ProphecyInterface
+   * @var EntityFieldManagerInterface|ProphecyInterface
    */
   protected $entityFieldManager;

   /**
-   * @var \Drupal\field_layout\FieldLayoutBuilder
+   * @var FieldLayoutBuilder
    */
   protected $fieldLayoutBuilder;

   /**
-   * @var \Drupal\Core\Layout\LayoutInterface
+   * @var LayoutInterface
    */
   protected $layoutPlugin;

   /**
-   * @var \Drupal\Core\Layout\LayoutDefinition
+   * @var LayoutDefinition
    */
   protected $pluginDefinition;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->pluginDefinition = new LayoutDefinition([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/field_layout-field_layout/tests/src/Kernel/FieldLayoutUninstallTest.php:10

    ---------- begin diff ----------
@@ @@

   /**
    * Ensures field layout can be uninstalled with layout builder enabled.
+   * @doesNotPerformAssertions
    */
   public function testFieldLayoutUninstall() {
     // Setup user schema so user hook uninstall hook doesn't break.
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/field_layout-field_layout/tests/src/FunctionalJavascript/FieldLayoutTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\field_layout\FunctionalJavascript;

+use Behat\Mink\Element\NodeElement;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $entity = EntityTest::create([
@@ @@
   protected function getRegionTitles() {
     $region_titles = [];
     $region_title_elements = $this->getSession()->getPage()->findAll('css', '.region-title td');
-    /** @var \Behat\Mink\Element\NodeElement[] $region_title_elements */
+    /** @var NodeElement[] $region_title_elements */
     foreach ($region_title_elements as $region_title_element) {
       $region_titles[] = $region_title_element->getText();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/field_layout-field_layout/tests/src/Functional/FieldLayoutTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\field_layout\Functional;

+use Behat\Mink\Element\NodeElement;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->createContentType([
@@ @@
   protected function getRegionTitles() {
     $region_titles = [];
     $region_title_elements = $this->getSession()->getPage()->findAll('css', '.region-title td');
-    /** @var \Behat\Mink\Element\NodeElement[] $region_title_elements */
+    /** @var NodeElement[] $region_title_elements */
     foreach ($region_title_elements as $region_title_element) {
       $region_titles[] = $region_title_element->getText();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/field_layout-field_layout/tests/modules/field_layout_test/field_layout_test.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Layout\LayoutDefinition;
 /**
  * @file
  * Contains hook implementations for field_layout_test.
  */
-
 /**
  * Implements hook_layout_alter().
  */
 function field_layout_test_layout_alter(&$definitions) {
-  /** @var \Drupal\Core\Layout\LayoutDefinition[] $definitions */
+  /** @var LayoutDefinition[] $definitions */
   if (\Drupal::state()->get('field_layout_test.alter_regions') && isset($definitions['layout_onecol'])) {
     $definitions['layout_onecol']->setRegions(['foo' => ['label' => 'Foo']]);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


6) modules/contrib/field_layout-field_layout/src/Form/FieldLayoutEntityViewDisplayEditForm.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * FieldLayoutEntityViewDisplayEditForm constructor.
    *
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type manager.
-   * @param \Drupal\Component\Plugin\PluginManagerBase $plugin_manager
+   * @param PluginManagerBase $plugin_manager
    *   The formatter plugin manager.
-   * @param \Drupal\Core\Layout\LayoutPluginManagerInterface $layout_plugin_manager
+   * @param LayoutPluginManagerInterface $layout_plugin_manager
    *   The field layout plugin manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display_repository.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(FieldTypePluginManagerInterface $field_type_manager, PluginManagerBase $plugin_manager, LayoutPluginManagerInterface $layout_plugin_manager, EntityDisplayRepositoryInterface $entity_display_repository = NULL, EntityFieldManagerInterface $entity_field_manager = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/field_layout-field_layout/src/Form/FieldLayoutEntityFormDisplayEditForm.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * FieldLayoutEntityFormDisplayEditForm constructor.
    *
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type manager.
-   * @param \Drupal\Component\Plugin\PluginManagerBase $plugin_manager
+   * @param PluginManagerBase $plugin_manager
    *   The widget plugin manager.
-   * @param \Drupal\Core\Layout\LayoutPluginManagerInterface $layout_plugin_manager
+   * @param LayoutPluginManagerInterface $layout_plugin_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display_repository.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(FieldTypePluginManagerInterface $field_type_manager, PluginManagerBase $plugin_manager, LayoutPluginManagerInterface $layout_plugin_manager, EntityDisplayRepositoryInterface $entity_display_repository = NULL, EntityFieldManagerInterface $entity_field_manager = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/field_layout-field_layout/src/Form/FieldLayoutEntityDisplayFormTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\field_layout\Form;

+use Drupal\Core\Layout\LayoutPluginManagerInterface;
+use Drupal\Core\Layout\LayoutInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\SubformState;
 use Drupal\Core\Plugin\PluginFormInterface;
@@ @@
   /**
    * The field layout plugin manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutPluginManager;

@@ @@
   /**
    * Gets the layout plugin for the currently selected field layout.
    *
-   * @param \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface $entity
+   * @param EntityDisplayWithLayoutInterface $entity
    *   The current form entity.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Layout\LayoutInterface
+   * @return LayoutInterface
    *   The layout plugin.
    */
   protected function getLayout(EntityDisplayWithLayoutInterface $entity, FormStateInterface $form_state) {
@@ @@
   /**
    * Gets the form entity.
    *
-   * @return \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface
+   * @return EntityDisplayWithLayoutInterface
    *   The current form entity.
    */
   abstract public function getEntity();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/field_layout-field_layout/src/FieldLayoutBuilder.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The layout plugin manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutPluginManager;

@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * Constructs a new FieldLayoutBuilder.
    *
-   * @param \Drupal\Core\Layout\LayoutPluginManagerInterface $layout_plugin_manager
+   * @param LayoutPluginManagerInterface $layout_plugin_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(LayoutPluginManagerInterface $layout_plugin_manager, EntityFieldManagerInterface $entity_field_manager) {
@@ @@
    *
    * @param array $build
    *   A renderable array representing the entity content or form.
-   * @param \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface $display
+   * @param EntityDisplayWithLayoutInterface $display
    *   The entity display holding the display options configured for the entity
    *   components.
    */
@@ @@
    *
    * @param array $build
    *   A renderable array representing the entity content or form.
-   * @param \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface $display
+   * @param EntityDisplayWithLayoutInterface $display
    *   The entity display holding the display options configured for the entity
    *   components.
    */
@@ @@
    *
    * @param array $build
    *   A renderable array representing the entity content or form.
-   * @param \Drupal\field_layout\Display\EntityDisplayWithLayoutInterface $display
+   * @param EntityDisplayWithLayoutInterface $display
    *   The entity display holding the display options configured for the entity
    *   components.
    * @param string $display_context
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/field_layout-field_layout/src/Entity/FieldLayoutEntityDisplayTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\field_layout\Entity;

+use Drupal\Core\Layout\LayoutDefinition;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Layout\LayoutInterface;

@@ @@
    * @param string $layout_id
    *   The layout ID.
    *
-   * @return \Drupal\Core\Layout\LayoutDefinition
+   * @return LayoutDefinition
    *   The layout definition.
    */
   protected function getLayoutDefinition($layout_id) {
@@ @@
    * @param array $layout_settings
    *   An array of settings.
    *
-   * @return \Drupal\Core\Layout\LayoutInterface
+   * @return LayoutInterface
    *   The layout plugin.
    */
   protected function doGetLayout($layout_id, array $layout_settings) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/field_layout-field_layout/src/Display/EntityDisplayWithLayoutInterface.php:48

    ---------- begin diff ----------
@@ @@
   /**
    * Sets the layout plugin for this display.
    *
-   * @param \Drupal\Core\Layout\LayoutInterface $layout
+   * @param LayoutInterface $layout
    *   A layout plugin.
    *
    * @return $this
@@ @@
   /**
    * Gets the layout plugin for this display.
    *
-   * @return \Drupal\Core\Layout\LayoutInterface
+   * @return LayoutInterface
    *   The layout plugin.
    */
   public function getLayout();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 11 files have been changed by Rector                                      

