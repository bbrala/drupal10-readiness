diff --git a/src/ConditionInterface.php b/src/ConditionInterface.php
index 7d40643..20fa13c 100644
--- a/src/ConditionInterface.php
+++ b/src/ConditionInterface.php
@@ -17,7 +17,7 @@ interface ConditionInterface extends PluginInspectionInterface {
    *
    * @param mixed $source
    *   Source values passed from process plugin.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The current row.
    *
    * @return bool
diff --git a/src/Plugin/ArrayConditionBase.php b/src/Plugin/ArrayConditionBase.php
index 9217852..c3c919a 100644
--- a/src/Plugin/ArrayConditionBase.php
+++ b/src/Plugin/ArrayConditionBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_conditions\Plugin;
 
+use Drupal\migrate_conditions\ConditionInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate\Plugin\MigrationInterface;
@@ -24,7 +25,7 @@ abstract class ArrayConditionBase extends ConditionBase implements ContainerFact
   /**
    * The condition plugin.
    *
-   * @var \Drupal\migrate_conditions\ConditionInterface
+   * @var ConditionInterface
    */
   protected $condition;
 
@@ -37,7 +38,7 @@ abstract class ArrayConditionBase extends ConditionBase implements ContainerFact
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $condition_manager
+   * @param PluginManagerInterface $condition_manager
    *   The MigrateCondition plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PluginManagerInterface $condition_manager) {
diff --git a/src/Plugin/ConditionBase.php b/src/Plugin/ConditionBase.php
index 4d64ffa..e0d3171 100644
--- a/src/Plugin/ConditionBase.php
+++ b/src/Plugin/ConditionBase.php
@@ -47,7 +47,7 @@ abstract class ConditionBase extends PluginBase implements ConditionInterface {
    *
    * @param mixed $source
    *   Source values passed from process plugin.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The current row.
    *
    * @return bool
diff --git a/src/Plugin/LogicalConditionBase.php b/src/Plugin/LogicalConditionBase.php
index 0101241..2d64dd3 100644
--- a/src/Plugin/LogicalConditionBase.php
+++ b/src/Plugin/LogicalConditionBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_conditions\Plugin;
 
+use Drupal\migrate_conditions\ConditionInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate\MigrateException;
@@ -34,7 +35,7 @@ abstract class LogicalConditionBase extends ConditionBase implements ContainerFa
   /**
    * The condition plugin array.
    *
-   * @var \Drupal\migrate_conditions\ConditionInterface[]
+   * @var ConditionInterface[]
    */
   protected $conditions;
 
@@ -54,7 +55,7 @@ abstract class LogicalConditionBase extends ConditionBase implements ContainerFa
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $condition_manager
+   * @param PluginManagerInterface $condition_manager
    *   The MigrateCondition plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PluginManagerInterface $condition_manager) {
diff --git a/src/Plugin/ProcessPluginWithConditionBase.php b/src/Plugin/ProcessPluginWithConditionBase.php
index b46ff36..4570551 100644
--- a/src/Plugin/ProcessPluginWithConditionBase.php
+++ b/src/Plugin/ProcessPluginWithConditionBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_conditions\Plugin;
 
+use Drupal\migrate_conditions\ConditionInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate\Plugin\MigrationInterface;
@@ -25,7 +26,7 @@ abstract class ProcessPluginWithConditionBase extends ProcessPluginBase implemen
   /**
    * The condition plugin.
    *
-   * @var \Drupal\migrate_conditions\ConditionInterface
+   * @var ConditionInterface
    */
   protected $condition;
 
@@ -38,7 +39,7 @@ abstract class ProcessPluginWithConditionBase extends ProcessPluginBase implemen
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $condition_manager
+   * @param PluginManagerInterface $condition_manager
    *   The MigrateCondition plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PluginManagerInterface $condition_manager) {
diff --git a/src/Plugin/migrate/process/IfCondition.php b/src/Plugin/migrate/process/IfCondition.php
index 5b150a3..c844841 100644
--- a/src/Plugin/migrate/process/IfCondition.php
+++ b/src/Plugin/migrate/process/IfCondition.php
@@ -153,9 +153,9 @@ class IfCondition extends ProcessPluginWithConditionBase {
    *   Either do_process or else_process.
    * @param mixed $value
    *   The value to be transformed.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process. Normally, just transforming the value
    *   is adequate but very rarely you might need to change two columns at the
    *   same time or something like that.
diff --git a/src/Plugin/migrate/process/SkipOnCondition.php b/src/Plugin/migrate/process/SkipOnCondition.php
index 93180e7..9b67ef6 100644
--- a/src/Plugin/migrate/process/SkipOnCondition.php
+++ b/src/Plugin/migrate/process/SkipOnCondition.php
@@ -62,7 +62,7 @@ class SkipOnCondition extends ProcessPluginWithConditionBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $condition_manager
+   * @param PluginManagerInterface $condition_manager
    *   The MigrateCondition plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PluginManagerInterface $condition_manager) {
@@ -78,9 +78,9 @@ class SkipOnCondition extends ProcessPluginWithConditionBase {
    *
    * @param mixed $value
    *   The input value.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process.
    * @param string $destination_property
    *   The destination property currently worked on. This is only used together
@@ -89,7 +89,7 @@ class SkipOnCondition extends ProcessPluginWithConditionBase {
    * @return mixed
    *   The input value, $value, if it is not empty.
    *
-   * @throws \Drupal\migrate\MigrateSkipRowException
+   * @throws MigrateSkipRowException
    *   Thrown if the source property is not set and the row should be skipped,
    *   records with STATUS_IGNORED status in the map.
    */
@@ -106,9 +106,9 @@ class SkipOnCondition extends ProcessPluginWithConditionBase {
    *
    * @param mixed $value
    *   The input value.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process.
    * @param string $destination_property
    *   The destination property currently worked on. This is only used together
@@ -117,7 +117,7 @@ class SkipOnCondition extends ProcessPluginWithConditionBase {
    * @return mixed
    *   The input value, $value, if it is not empty.
    *
-   * @throws \Drupal\migrate\MigrateSkipProcessException
+   * @throws MigrateSkipProcessException
    *   Thrown if the source property is not set and rest of the process should
    *   be skipped.
    */
diff --git a/src/Plugin/migrate_conditions/condition/EntityExists.php b/src/Plugin/migrate_conditions/condition/EntityExists.php
index 2bd181f..f60dbd5 100644
--- a/src/Plugin/migrate_conditions/condition/EntityExists.php
+++ b/src/Plugin/migrate_conditions/condition/EntityExists.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_conditions\Plugin\migrate_conditions\condition;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -45,7 +46,7 @@ class EntityExists extends ConditionBase implements ContainerFactoryPluginInterf
   /**
    * The entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;
 
@@ -58,7 +59,7 @@ class EntityExists extends ConditionBase implements ContainerFactoryPluginInterf
    *   The plugin ID.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Plugin/migrate_conditions/condition/OlderThan.php b/src/Plugin/migrate_conditions/condition/OlderThan.php
index 86a1fd0..9777aeb 100644
--- a/src/Plugin/migrate_conditions/condition/OlderThan.php
+++ b/src/Plugin/migrate_conditions/condition/OlderThan.php
@@ -86,7 +86,7 @@ class OlderThan extends ConditionBase {
   /**
    * The static date used by all rows.
    *
-   * @var Drupal\Component\Datetime\DateTimePlus
+   * @var DateTimePlus
    */
   protected $valueDate;
 
