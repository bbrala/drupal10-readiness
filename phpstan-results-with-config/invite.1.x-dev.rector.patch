diff --git a/modules/invite_by_email/invite_by_email.module b/modules/invite_by_email/invite_by_email.module
index 7620fdf..adaff79 100644
--- a/modules/invite_by_email/invite_by_email.module
+++ b/modules/invite_by_email/invite_by_email.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\invite\InviteInterface;
 /**
  * @file
  * Contains invite_by_email.module.
@@ -104,7 +105,7 @@ function invite_by_email_form_alter(&$form, FormStateInterface $form_state, $for
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The formstate.
  */
 function invite_by_email_form_invite_type_form_submit(array &$form, FormStateInterface $form_state) {
@@ -130,7 +131,7 @@ function invite_by_email_theme($existing, $type, $theme, $path) {
  */
 function invite_by_email_load_from_session() {
   if (isset($_SESSION[InviteConstants::INVITE_SESSION_CODE])) {
-    /** @var \Drupal\invite\InviteInterface $invite */
+    /** @var InviteInterface $invite */
     $invite = \Drupal::entityTypeManager()->getStorage('invite')->loadByProperties(['reg_code' => $_SESSION[InviteConstants::INVITE_SESSION_CODE]]);
   }
   if (!empty($invite)) {
@@ -146,7 +147,7 @@ function invite_by_email_load_from_session() {
  */
 function invite_by_email_form_user_register_form_alter(&$form, FormStateInterface $form_state, $form_id) {
 
-  /** @var \Drupal\invite\InviteInterface $invite_object */
+  /** @var InviteInterface $invite_object */
   $invite = invite_by_email_load_from_session();
 
   $invite_object = current($invite);
diff --git a/modules/invite_by_email/src/Plugin/Block/InviteByEmailBlock.php b/modules/invite_by_email/src/Plugin/Block/InviteByEmailBlock.php
index 56a6cd7..f0a104d 100644
--- a/modules/invite_by_email/src/Plugin/Block/InviteByEmailBlock.php
+++ b/modules/invite_by_email/src/Plugin/Block/InviteByEmailBlock.php
@@ -22,7 +22,7 @@ class InviteByEmailBlock extends BlockBase implements ContainerFactoryPluginInte
   /**
    * The building of form.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;
 
diff --git a/modules/invite_by_email/src/Plugin/Invite/InviteByEmail.php b/modules/invite_by_email/src/Plugin/Invite/InviteByEmail.php
index 8e8aaee..9cbf516 100644
--- a/modules/invite_by_email/src/Plugin/Invite/InviteByEmail.php
+++ b/modules/invite_by_email/src/Plugin/Invite/InviteByEmail.php
@@ -26,21 +26,21 @@ class InviteByEmail extends PluginBase implements InvitePluginInterface, Contain
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Mail manager service.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -53,11 +53,11 @@ class InviteByEmail extends PluginBase implements InvitePluginInterface, Contain
    *   The plugin id.
    * @param string $plugin_definition
    *   Plugin Definition.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
    */
   public function __construct(
diff --git a/src/Controller/InviteAccept.php b/src/Controller/InviteAccept.php
index 128c52b..1898f7f 100644
--- a/src/Controller/InviteAccept.php
+++ b/src/Controller/InviteAccept.php
@@ -19,14 +19,14 @@ class InviteAccept extends ControllerBase {
   /**
    * The event dispatcher.
    *
-   * @var \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher
+   * @var ContainerAwareEventDispatcher
    */
   public $dispatcher;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -97,7 +97,7 @@ class InviteAccept extends ControllerBase {
       'invite' => &$invite,
     ]);
 
-    $this->dispatcher->dispatch('invite_accept', $invite_accept);
+    $this->dispatcher->dispatch($invite_accept, 'invite_accept');
     $this->messenger->addStatus($message, $type);
 
     return $this->redirect($redirect);
diff --git a/src/Controller/InviteAccessController.php b/src/Controller/InviteAccessController.php
index 3fa365c..5671fb7 100644
--- a/src/Controller/InviteAccessController.php
+++ b/src/Controller/InviteAccessController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\invite\Controller;
 
+use Drupal\invite\InviteInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Controller\ControllerBase;
@@ -16,7 +17,7 @@ class InviteAccessController extends ControllerBase {
   /**
    * The route match.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $routeMatch;
 
@@ -45,7 +46,7 @@ class InviteAccessController extends ControllerBase {
       return AccessResult::allowed();
     }
     else {
-      /** @var \Drupal\invite\InviteInterface $invite */
+      /** @var InviteInterface $invite */
       $invite_from_url = $this->routeMatch->getParameter('invite');
       return AccessResult::allowedIf($account->id() && $account->id() == $invite_from_url->getOwnerId() && $account->hasPermission('resend own invitations'))
         ->cachePerPermissions()
@@ -62,7 +63,7 @@ class InviteAccessController extends ControllerBase {
       return AccessResult::allowed();
     }
     else {
-      /** @var \Drupal\invite\InviteInterface $invite */
+      /** @var InviteInterface $invite */
       $invite_from_url = $this->routeMatch->getParameter('invite');
       return AccessResult::allowedIf($account->id() && $account->id() == $invite_from_url->getOwnerId())
         ->cachePerPermissions()
diff --git a/src/Controller/InviteList.php b/src/Controller/InviteList.php
index 989c0cb..18e7cdb 100644
--- a/src/Controller/InviteList.php
+++ b/src/Controller/InviteList.php
@@ -31,14 +31,14 @@ class InviteList extends ControllerBase {
   /**
    * A module manager object.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a new InviteList object.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Connection database.
    */
   public function __construct(Connection $database, ModuleHandlerInterface $module_handler) {
@@ -104,7 +104,7 @@ class InviteList extends ControllerBase {
           'status' => $this->inviteStatus[$row->status],
           'mail' => $row->mail,
           'field_invite_email_address_value' => $row->field_invite_email_address_value,
-          'operations' => render($operations),
+          'operations' => \Drupal::service('renderer')->render($operations),
         ],
       ];
     }
diff --git a/src/Entity/Invite.php b/src/Entity/Invite.php
index 2398a39..766a559 100644
--- a/src/Entity/Invite.php
+++ b/src/Entity/Invite.php
@@ -68,7 +68,7 @@ class Invite extends ContentEntityBase implements InviteInterface {
     parent::preCreate($storage_controller, $values);
     // Generate unique registration code.
     do {
-      $reg_code = user_password(10);
+      $reg_code = \Drupal::service('password_generator')->generate(10);
       $result = Database::getConnection()
         ->query('SELECT reg_code FROM {invite} WHERE reg_code = :reg_code', [':reg_code' => $reg_code])
         ->fetchField();
diff --git a/src/Form/InviteConfig.php b/src/Form/InviteConfig.php
index 457ad97..84f4b7d 100644
--- a/src/Form/InviteConfig.php
+++ b/src/Form/InviteConfig.php
@@ -18,16 +18,16 @@ class InviteConfig extends ConfigFormBase {
   /**
    * Route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProvider
+   * @var RouteProvider
    */
   protected $routeProvider;
 
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Routing\RouteProvider $routeProvider
+   * @param RouteProvider $routeProvider
    *   The route provider service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, RouteProvider $routeProvider) {
diff --git a/src/Form/InviteForm.php b/src/Form/InviteForm.php
index 6b18167..8614167 100644
--- a/src/Form/InviteForm.php
+++ b/src/Form/InviteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\invite\Form;
 
+use Drupal\invite\Entity\Invite;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Entity\EntityManagerInterface;
@@ -20,7 +21,7 @@ class InviteForm extends ContentEntityForm {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -29,11 +30,11 @@ class InviteForm extends ContentEntityForm {
    *
    * @param \Drupal\Core\Entity\EntityManagerInterface $entity_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityManagerInterface $entity_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL, MessengerInterface $messenger) {
@@ -57,7 +58,7 @@ class InviteForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\invite\Entity\Invite $entity */
+    /** @var Invite $entity */
     $form = parent::buildForm($form, $form_state);
     $entity = $this->entity;
     return $form;
diff --git a/src/Form/InviteResendForm.php b/src/Form/InviteResendForm.php
index 81206d3..4257964 100644
--- a/src/Form/InviteResendForm.php
+++ b/src/Form/InviteResendForm.php
@@ -23,32 +23,32 @@ class InviteResendForm extends FormBase {
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $inviteStorage;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityTypeManager;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a InviteAcceptController object.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $invite_storage
+   * @param EntityStorageInterface $invite_storage
    *   Invite storage.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityStorageInterface $invite_storage, EntityTypeManager $entityTypeManager, MessengerInterface $messenger) {
@@ -80,7 +80,7 @@ class InviteResendForm extends FormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state, InviteInterface $invite = NULL) {
-    /** @var \Drupal\invite\InviteInterface $invite */
+    /** @var InviteInterface $invite */
     $form['#title'] = $this->t('Resend invite to @field_invite_email_address', ['@field_invite_email_address' => $invite->field_invite_email_address->value]);
     $this->inviteStorage = $invite;
     $form['actions']['#type'] = 'actions';
@@ -98,7 +98,7 @@ class InviteResendForm extends FormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\invite\InviteInterface $invite */
+    /** @var InviteInterface $invite */
     $invite = $this->inviteStorage;
     $invite_by_email = new InviteByEmail([], 0, 0, $this->messenger);
     $invite_by_email->send($invite);
diff --git a/src/Form/InviteTypeDeleteForm.php b/src/Form/InviteTypeDeleteForm.php
index c5847f9..321c74d 100644
--- a/src/Form/InviteTypeDeleteForm.php
+++ b/src/Form/InviteTypeDeleteForm.php
@@ -16,14 +16,14 @@ class InviteTypeDeleteForm extends EntityConfirmFormBase {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs Invite delete form.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(MessengerInterface $messenger) {
diff --git a/src/Form/InviteTypeForm.php b/src/Form/InviteTypeForm.php
index a0a65fb..55ee1dd 100644
--- a/src/Form/InviteTypeForm.php
+++ b/src/Form/InviteTypeForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\invite\Form;
 
+use Drupal\invite\Entity\InviteType;
 use Drupal\Core\Block\BlockManager;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityForm;
@@ -23,14 +24,14 @@ class InviteTypeForm extends EntityForm {
   /**
    * Plugin Manager.
    *
-   * @var \Drupal\invite\InvitePluginManager
+   * @var InvitePluginManager
    */
   public $pluginManager;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -74,7 +75,7 @@ class InviteTypeForm extends EntityForm {
    * {@inheritdoc}
    */
   public function form(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\invite\Entity\InviteType $entity */
+    /** @var InviteType $entity */
     $form = parent::form($form, $form_state);
     $entity = $this->entity;
     $is_new = $entity->isNew();
diff --git a/src/Form/InviteTypeSettingsForm.php b/src/Form/InviteTypeSettingsForm.php
index 3cc6268..e290d1d 100644
--- a/src/Form/InviteTypeSettingsForm.php
+++ b/src/Form/InviteTypeSettingsForm.php
@@ -29,7 +29,7 @@ class InviteTypeSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -40,7 +40,7 @@ class InviteTypeSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Form/InviteWithdrawForm.php b/src/Form/InviteWithdrawForm.php
index e30ee3e..e8b6f03 100644
--- a/src/Form/InviteWithdrawForm.php
+++ b/src/Form/InviteWithdrawForm.php
@@ -22,32 +22,32 @@ class InviteWithdrawForm extends FormBase {
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $inviteStorage;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a InviteAcceptController object.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $invite_storage
+   * @param EntityStorageInterface $invite_storage
    *   Invite storage.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityStorageInterface $invite_storage, EntityTypeManager $entityTypeManager, MessengerInterface $messenger) {
@@ -79,7 +79,7 @@ class InviteWithdrawForm extends FormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state, InviteInterface $invite = NULL) {
-    /** @var \Drupal\invite\InviteInterface $invite */
+    /** @var InviteInterface $invite */
     $form['#title'] = $this->t('Withdraw invite for @field_invite_email_address', ['@field_invite_email_address' => $invite->field_invite_email_address->value]);
     $this->inviteStorage = $invite;
     $form['actions']['#type'] = 'actions';
@@ -97,7 +97,7 @@ class InviteWithdrawForm extends FormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\invite\InviteInterface $invite */
+    /** @var InviteInterface $invite */
     $invite = $this->inviteStorage;
     $invite->setStatus(InviteConstants::INVITE_WITHDRAWN);
     $invite->save();
diff --git a/src/InviteAcceptEvent.php b/src/InviteAcceptEvent.php
index fc3ca0b..e392bb3 100644
--- a/src/InviteAcceptEvent.php
+++ b/src/InviteAcceptEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\invite;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Invite Accept class.
diff --git a/src/InviteAccessControlHandler.php b/src/InviteAccessControlHandler.php
index 109296e..62cbabd 100644
--- a/src/InviteAccessControlHandler.php
+++ b/src/InviteAccessControlHandler.php
@@ -18,7 +18,7 @@ class InviteAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\invite\InviteInterface $entity */
+    /** @var InviteInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/InviteHtmlRouteProvider.php b/src/InviteHtmlRouteProvider.php
index bf7b60a..1ca4e2a 100644
--- a/src/InviteHtmlRouteProvider.php
+++ b/src/InviteHtmlRouteProvider.php
@@ -40,10 +40,10 @@ class InviteHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -65,10 +65,10 @@ class InviteHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddFormRoute(EntityTypeInterface $entity_type) {
@@ -102,10 +102,10 @@ class InviteHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/InvitePermissions.php b/src/InvitePermissions.php
index 97fb4d6..0aa1ac0 100644
--- a/src/InvitePermissions.php
+++ b/src/InvitePermissions.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\invite;
 
+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -17,14 +18,14 @@ class InvitePermissions implements ContainerInjectionInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new InvitePermissions instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
diff --git a/src/InviteSenderInterface.php b/src/InviteSenderInterface.php
index 6a054d1..8ef575c 100644
--- a/src/InviteSenderInterface.php
+++ b/src/InviteSenderInterface.php
@@ -23,7 +23,7 @@ interface InviteSenderInterface extends ConfigEntityInterface {
    * @param string $label
    *   The Invite Sender label.
    *
-   * @return \Drupal\invite\InviteTypeInterface
+   * @return InviteTypeInterface
    *   The called Invite Sender entity.
    */
   public function setLabel($label);
@@ -42,7 +42,7 @@ interface InviteSenderInterface extends ConfigEntityInterface {
    * @param string $type
    *   The Invite Sender type.
    *
-   * @return \Drupal\invite\InviteTypeInterface
+   * @return InviteTypeInterface
    *   The called Invite Sender entity.
    */
   public function setType($type);
diff --git a/src/InviteTypeAccessControlHandler.php b/src/InviteTypeAccessControlHandler.php
index 14070bd..8e40232 100644
--- a/src/InviteTypeAccessControlHandler.php
+++ b/src/InviteTypeAccessControlHandler.php
@@ -18,7 +18,7 @@ class InviteTypeAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\invite\InviteTypeInterface $entity */
+    /** @var InviteTypeInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/InviteTypeHtmlRouteProvider.php b/src/InviteTypeHtmlRouteProvider.php
index 73427b6..30a8b89 100644
--- a/src/InviteTypeHtmlRouteProvider.php
+++ b/src/InviteTypeHtmlRouteProvider.php
@@ -36,10 +36,10 @@ class InviteTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -61,10 +61,10 @@ class InviteTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddFormRoute(EntityTypeInterface $entity_type) {
