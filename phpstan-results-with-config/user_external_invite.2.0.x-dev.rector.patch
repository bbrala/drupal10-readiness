diff --git a/src/Controller/UserInviteController.php b/src/Controller/UserInviteController.php
index 60b2382..f0197f8 100644
--- a/src/Controller/UserInviteController.php
+++ b/src/Controller/UserInviteController.php
@@ -11,19 +11,19 @@ use Symfony\Component\HttpFoundation\Response;
 class UserInviteController extends ControllerBase {
 
   /**
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   private $loggerChannelFactory;
 
   /**
-   * @var \Drupal\user_external_invite\InviteManager
+   * @var InviteManager
    */
   private $inviteManager;
 
   /**
    * UserInviteController constructor.
-   * @param \Drupal\user_external_invite\InviteManager $inviteManager
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerChannelFactory
+   * @param InviteManager $inviteManager
+   * @param LoggerChannelFactoryInterface $loggerChannelFactory
    */
   public function __construct(InviteManager $inviteManager, LoggerChannelFactoryInterface $loggerChannelFactory) {
 
@@ -33,7 +33,7 @@ class UserInviteController extends ControllerBase {
 
 
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @return static
    */
   public static function create(ContainerInterface $container) {
diff --git a/src/Form/InviteSettingsForm.php b/src/Form/InviteSettingsForm.php
index 96cd834..a40cd5a 100644
--- a/src/Form/InviteSettingsForm.php
+++ b/src/Form/InviteSettingsForm.php
@@ -11,7 +11,7 @@ class InviteSettingsForm extends ConfigFormBase {
 
   /**
    * InviteSettingsForm constructor.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
     parent::__construct($config_factory);
@@ -19,7 +19,7 @@ class InviteSettingsForm extends ConfigFormBase {
 
 
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @return static
    */
   public static function create(ContainerInterface $container) {
@@ -217,7 +217,7 @@ class InviteSettingsForm extends ConfigFormBase {
    * Validation handler to check for a positive integer on a field.
    *
    * @param $element
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    * @param $complete_form
    */
   public function elementValidateNumber(&$element, FormStateInterface $form_state, &$complete_form) {
@@ -232,7 +232,7 @@ class InviteSettingsForm extends ConfigFormBase {
    * Validation handler to check that a string is a valid email address.
    *
    * @param $element
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    * @param $complete_form
    */
   public function elementValidateEmail(&$element, FormStateInterface $form_state, &$complete_form) {
diff --git a/user_external_invite.info.yml b/user_external_invite.info.yml
index d3be521..30a818d 100644
--- a/user_external_invite.info.yml
+++ b/user_external_invite.info.yml
@@ -1,7 +1,7 @@
 name: User External Invite
 type: module
 description: Allows users with permissions to assign a role and email invitations to other users. Requires external authentication.
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: user_external_invite.configure
 dependencies:
  - token:token
diff --git a/user_external_invite.tokens.inc b/user_external_invite.tokens.inc
index 0bdf3cb..bf768d8 100644
--- a/user_external_invite.tokens.inc
+++ b/user_external_invite.tokens.inc
@@ -34,7 +34,7 @@ function user_external_invite_tokens($type, $tokens, array $data, array $options
         case 'join-path':
           $values = [];
           foreach (token_element_children($array) as $key) {
-            $value = is_array($array[$key]) ? render($array[$key]) : (string) $array[$key];
+            $value = is_array($array[$key]) ? \Drupal::service('renderer')->render($array[$key]) : (string) $array[$key];
             $value = \Drupal::service('pathauto.alias_cleaner')->cleanString($value, $options);
             $values[] = $value;
           }
