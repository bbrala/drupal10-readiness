diff --git a/src/Cache/Context/UserEmailVerificationNeeded.php b/src/Cache/Context/UserEmailVerificationNeeded.php
index cbd7462..6e64aca 100644
--- a/src/Cache/Context/UserEmailVerificationNeeded.php
+++ b/src/Cache/Context/UserEmailVerificationNeeded.php
@@ -17,23 +17,23 @@ class UserEmailVerificationNeeded implements CacheContextInterface {
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;
 
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a new object.
    *
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
    */
   public function __construct(UserEmailVerificationInterface $user_email_verification_service, AccountProxyInterface $current_user) {
diff --git a/src/Controller/UserEmailVerificationVerify.php b/src/Controller/UserEmailVerificationVerify.php
index 1f142d8..a1ad644 100644
--- a/src/Controller/UserEmailVerificationVerify.php
+++ b/src/Controller/UserEmailVerificationVerify.php
@@ -21,32 +21,32 @@ class UserEmailVerificationVerify extends ControllerBase implements ContainerInj
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a new object.
    *
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Component\Datetime\TimeInterface $datetime_time
+   * @param TimeInterface $datetime_time
    *   The time service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(UserEmailVerificationInterface $user_email_verification_service, TimeInterface $datetime_time, EventDispatcherInterface $event_dispatcher) {
@@ -112,7 +112,7 @@ class UserEmailVerificationVerify extends ControllerBase implements ContainerInj
       $this->messenger()->addStatus($this->t('Thank you for verifying your Email address.'));
 
       $event = new UserEmailVerificationVerifyEvent($user, $user->isBlocked());
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::VERIFY, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::VERIFY);
 
       $rules_event = new UserEmailVerificationRulesEmailVerified($user);
       $this->eventDispatcher->dispatch($rules_event, $rules_event::EVENT_NAME);
diff --git a/src/Controller/UserEmailVerificationVerifyExtended.php b/src/Controller/UserEmailVerificationVerifyExtended.php
index f2dcc3d..240a6f2 100644
--- a/src/Controller/UserEmailVerificationVerifyExtended.php
+++ b/src/Controller/UserEmailVerificationVerifyExtended.php
@@ -21,32 +21,32 @@ class UserEmailVerificationVerifyExtended extends ControllerBase implements Cont
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a new object.
    *
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Component\Datetime\TimeInterface $datetime_time
+   * @param TimeInterface $datetime_time
    *   The time service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(UserEmailVerificationInterface $user_email_verification_service, TimeInterface $datetime_time, EventDispatcherInterface $event_dispatcher) {
@@ -111,7 +111,7 @@ class UserEmailVerificationVerifyExtended extends ControllerBase implements Cont
       $this->messenger()->addStatus($this->t('Thank you for verifying your Email address.'));
 
       $event = new UserEmailVerificationVerifyEvent($user, $user->isBlocked());
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::VERIFY_EXTENDED, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::VERIFY_EXTENDED);
 
       $rules_event = new UserEmailVerificationRulesEmailVerifiedExtended($user);
       $this->eventDispatcher->dispatch($rules_event, $rules_event::EVENT_NAME);
diff --git a/src/Event/UserEmailVerificationBlockAccountEvent.php b/src/Event/UserEmailVerificationBlockAccountEvent.php
index ad2c3c0..4c55c59 100644
--- a/src/Event/UserEmailVerificationBlockAccountEvent.php
+++ b/src/Event/UserEmailVerificationBlockAccountEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\user_email_verification\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Wraps a user account block event for event subscribers.
@@ -15,7 +15,7 @@ class UserEmailVerificationBlockAccountEvent extends Event {
   /**
    * The user account being verify.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -29,7 +29,7 @@ class UserEmailVerificationBlockAccountEvent extends Event {
   /**
    * Constructs a user email verification event object.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user account being verify.
    * @param bool $should_be_blocked
    *   Should the user account be blocked or no.
@@ -42,7 +42,7 @@ class UserEmailVerificationBlockAccountEvent extends Event {
   /**
    * Get the user account being verify.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user account.
    */
   public function getUser() {
diff --git a/src/Event/UserEmailVerificationCreateVerificationEvent.php b/src/Event/UserEmailVerificationCreateVerificationEvent.php
index 1771f88..e6e639c 100644
--- a/src/Event/UserEmailVerificationCreateVerificationEvent.php
+++ b/src/Event/UserEmailVerificationCreateVerificationEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\user_email_verification\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Wraps a user email verification creation event for event subscribers.
@@ -15,7 +15,7 @@ class UserEmailVerificationCreateVerificationEvent extends Event {
   /**
    * The user account being verify.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -29,7 +29,7 @@ class UserEmailVerificationCreateVerificationEvent extends Event {
   /**
    * Constructs a user email verification event object.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user account being verify.
    * @param bool $should_be_verified
    *   Should be user account verified by default or no.
@@ -42,7 +42,7 @@ class UserEmailVerificationCreateVerificationEvent extends Event {
   /**
    * Get the user account being verify.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user account.
    */
   public function getUser() {
diff --git a/src/Event/UserEmailVerificationDeleteAccountEvent.php b/src/Event/UserEmailVerificationDeleteAccountEvent.php
index a1ddebf..8c629e3 100644
--- a/src/Event/UserEmailVerificationDeleteAccountEvent.php
+++ b/src/Event/UserEmailVerificationDeleteAccountEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\user_email_verification\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Wraps a user account delete event for event subscribers.
@@ -15,7 +15,7 @@ class UserEmailVerificationDeleteAccountEvent extends Event {
   /**
    * The user account being verify.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -29,7 +29,7 @@ class UserEmailVerificationDeleteAccountEvent extends Event {
   /**
    * Constructs a user email verification event object.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user account being verify.
    * @param bool $should_be_deleted
    *   Should the user account be deleted or no.
@@ -42,7 +42,7 @@ class UserEmailVerificationDeleteAccountEvent extends Event {
   /**
    * Get the user account being verify.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user account.
    */
   public function getUser() {
diff --git a/src/Event/UserEmailVerificationRulesEmailVerified.php b/src/Event/UserEmailVerificationRulesEmailVerified.php
index 0e2f41a..a87f0c9 100644
--- a/src/Event/UserEmailVerificationRulesEmailVerified.php
+++ b/src/Event/UserEmailVerificationRulesEmailVerified.php
@@ -15,14 +15,14 @@ class UserEmailVerificationRulesEmailVerified extends Event {
   /**
    * The user account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;
 
   /**
    * Constructs the event object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of a related user.
    */
   public function __construct(UserInterface $account) {
diff --git a/src/Event/UserEmailVerificationRulesEmailVerifiedExtended.php b/src/Event/UserEmailVerificationRulesEmailVerifiedExtended.php
index d3498dd..ecad0bb 100644
--- a/src/Event/UserEmailVerificationRulesEmailVerifiedExtended.php
+++ b/src/Event/UserEmailVerificationRulesEmailVerifiedExtended.php
@@ -15,14 +15,14 @@ class UserEmailVerificationRulesEmailVerifiedExtended extends Event {
   /**
    * The user account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;
 
   /**
    * Constructs the event object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of a related user.
    */
   public function __construct(UserInterface $account) {
diff --git a/src/Event/UserEmailVerificationRulesExtendedReminderMailSent.php b/src/Event/UserEmailVerificationRulesExtendedReminderMailSent.php
index 36ac09e..b5646c2 100644
--- a/src/Event/UserEmailVerificationRulesExtendedReminderMailSent.php
+++ b/src/Event/UserEmailVerificationRulesExtendedReminderMailSent.php
@@ -15,14 +15,14 @@ class UserEmailVerificationRulesExtendedReminderMailSent extends Event {
   /**
    * The user account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;
 
   /**
    * Constructs the event object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of a related user.
    */
   public function __construct(UserInterface $account) {
diff --git a/src/Event/UserEmailVerificationRulesReminderMailSent.php b/src/Event/UserEmailVerificationRulesReminderMailSent.php
index 2ccea35..c2a149e 100644
--- a/src/Event/UserEmailVerificationRulesReminderMailSent.php
+++ b/src/Event/UserEmailVerificationRulesReminderMailSent.php
@@ -15,14 +15,14 @@ class UserEmailVerificationRulesReminderMailSent extends Event {
   /**
    * The user account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;
 
   /**
    * Constructs the event object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of a related user.
    */
   public function __construct(UserInterface $account) {
diff --git a/src/Event/UserEmailVerificationVerifyEvent.php b/src/Event/UserEmailVerificationVerifyEvent.php
index ff0cc92..7becfdd 100644
--- a/src/Event/UserEmailVerificationVerifyEvent.php
+++ b/src/Event/UserEmailVerificationVerifyEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\user_email_verification\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Wraps a user email verification event for event subscribers.
@@ -15,7 +15,7 @@ class UserEmailVerificationVerifyEvent extends Event {
   /**
    * The user account being verify.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -29,7 +29,7 @@ class UserEmailVerificationVerifyEvent extends Event {
   /**
    * Constructs a user email verification event object.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user account being verify.
    * @param bool $notify_as_blocked
    *   Whether to notify the user as blocked account.
@@ -42,7 +42,7 @@ class UserEmailVerificationVerifyEvent extends Event {
   /**
    * Get the user account being verify.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user account.
    */
   public function getUser() {
diff --git a/src/Form/UserEmailVerificationRequestForm.php b/src/Form/UserEmailVerificationRequestForm.php
index 9a61330..ad6034f 100644
--- a/src/Form/UserEmailVerificationRequestForm.php
+++ b/src/Form/UserEmailVerificationRequestForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\user_email_verification\Form;
 
+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -20,41 +22,41 @@ class UserEmailVerificationRequestForm extends FormBase {
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;
 
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The currently active request object.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
   /**
    * The user.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $configUserSettings;
 
   /**
    * Constructs a new UserEmailVerificationRequestForm object.
    *
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(UserEmailVerificationInterface $user_email_verification_service, AccountProxyInterface $current_user, RequestStack $request_stack, ConfigFactoryInterface $config_factory) {
diff --git a/src/Plugin/Block/UserEmailVerificationNotificationBlock.php b/src/Plugin/Block/UserEmailVerificationNotificationBlock.php
index ef0f3c1..19454b8 100644
--- a/src/Plugin/Block/UserEmailVerificationNotificationBlock.php
+++ b/src/Plugin/Block/UserEmailVerificationNotificationBlock.php
@@ -24,21 +24,21 @@ class UserEmailVerificationNotificationBlock extends BlockBase implements Contai
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;
 
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
@@ -51,11 +51,11 @@ class UserEmailVerificationNotificationBlock extends BlockBase implements Contai
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, UserEmailVerificationInterface $user_email_verification_service, AccountProxyInterface $current_user, Token $token) {
diff --git a/src/Plugin/QueueWorker/UserEmailVerificationBlockAccount.php b/src/Plugin/QueueWorker/UserEmailVerificationBlockAccount.php
index fafd334..8c3c7a8 100644
--- a/src/Plugin/QueueWorker/UserEmailVerificationBlockAccount.php
+++ b/src/Plugin/QueueWorker/UserEmailVerificationBlockAccount.php
@@ -22,14 +22,14 @@ class UserEmailVerificationBlockAccount extends QueueWorkerBase implements Conta
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -42,9 +42,9 @@ class UserEmailVerificationBlockAccount extends QueueWorkerBase implements Conta
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, UserEmailVerificationInterface $user_email_verification_service, LoggerInterface $logger) {
diff --git a/src/Plugin/QueueWorker/UserEmailVerificationDeleteAccount.php b/src/Plugin/QueueWorker/UserEmailVerificationDeleteAccount.php
index d35d082..1cb7732 100644
--- a/src/Plugin/QueueWorker/UserEmailVerificationDeleteAccount.php
+++ b/src/Plugin/QueueWorker/UserEmailVerificationDeleteAccount.php
@@ -22,14 +22,14 @@ class UserEmailVerificationDeleteAccount extends QueueWorkerBase implements Cont
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -42,9 +42,9 @@ class UserEmailVerificationDeleteAccount extends QueueWorkerBase implements Cont
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, UserEmailVerificationInterface $user_email_verification_service, LoggerInterface $logger) {
diff --git a/src/Plugin/QueueWorker/UserEmailVerificationReminders.php b/src/Plugin/QueueWorker/UserEmailVerificationReminders.php
index 53e719e..3b08984 100644
--- a/src/Plugin/QueueWorker/UserEmailVerificationReminders.php
+++ b/src/Plugin/QueueWorker/UserEmailVerificationReminders.php
@@ -21,7 +21,7 @@ class UserEmailVerificationReminders extends QueueWorkerBase implements Containe
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;
 
@@ -34,7 +34,7 @@ class UserEmailVerificationReminders extends QueueWorkerBase implements Containe
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, UserEmailVerificationInterface $user_email_verification_service) {
diff --git a/src/UserEmailVerification.php b/src/UserEmailVerification.php
index 97354da..adc92b5 100644
--- a/src/UserEmailVerification.php
+++ b/src/UserEmailVerification.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\user_email_verification;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -34,116 +35,116 @@ class UserEmailVerification implements UserEmailVerificationInterface {
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The current primary database.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The user_email_verification.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The user.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $configUserSettings;
 
   /**
    * The system.site config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $configSystemSite;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * User carma update queue.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queue;
 
   /**
    * Mail manager service.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The factory for configuration objects.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a new DietService object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The current primary database.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Component\Datetime\TimeInterface $datetime_time
+   * @param TimeInterface $datetime_time
    *   The time service.
-   * @param \Drupal\Core\Queue\QueueFactory $queue
+   * @param QueueFactory $queue
    *   The queue factory object.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   Mail manager service.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(
@@ -373,7 +374,7 @@ class UserEmailVerification implements UserEmailVerificationInterface {
     // Provide an ability to other modules to modify
     // verified state (like auto-verify some specific users).
     $event = new UserEmailVerificationCreateVerificationEvent($user, (bool) $verified);
-    $this->eventDispatcher->dispatch(UserEmailVerificationEvents::CREATE_VERIFICATION, $event);
+    $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::CREATE_VERIFICATION);
 
     if ($verify || $event->shouldBeVerified()) {
       $verified = $this->time->getRequestTime();
@@ -463,7 +464,7 @@ class UserEmailVerification implements UserEmailVerificationInterface {
       // Provide an ability to other modules to act before
       // account block (like prevent some accounts block).
       $event = new UserEmailVerificationBlockAccountEvent($user, $user->isActive());
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::BLOCK_ACCOUNT, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::BLOCK_ACCOUNT);
 
       if ($event->shouldBeBlocked()) {
         $user->block()->save();
@@ -570,7 +571,7 @@ class UserEmailVerification implements UserEmailVerificationInterface {
       // Provide an ability to other modules to act before
       // account delete (like prevent some accounts delete).
       $event = new UserEmailVerificationDeleteAccountEvent($user, TRUE);
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::DELETE_ACCOUNT, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::DELETE_ACCOUNT);
 
       if ($event->shouldBeDeleted()) {
         $this->setVerificationState($user->id(), UserEmailVerificationInterface::STATE_DELETED);
@@ -659,7 +660,7 @@ class UserEmailVerification implements UserEmailVerificationInterface {
    */
   public function initEmailMessage($key, array &$message, array $params) {
 
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     $user = $params['user'];
 
     // Care about correct configuration translation usage.
diff --git a/src/UserEmailVerificationInterface.php b/src/UserEmailVerificationInterface.php
index 47e9522..e0fd7ff 100644
--- a/src/UserEmailVerificationInterface.php
+++ b/src/UserEmailVerificationInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\user_email_verification;
 
+use Drupal\Core\Url;
 use Drupal\user\UserInterface;
 
 /**
@@ -180,10 +181,10 @@ interface UserEmailVerificationInterface {
   /**
    * Build Email verification URL for requested user.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to create email verification URL for.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Email verification URL.
    */
   public function buildVerificationUrl(UserInterface $user);
@@ -191,10 +192,10 @@ interface UserEmailVerificationInterface {
   /**
    * Build extended Email verification URL for requested user.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to create email verification URL for.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Extended Email verification URL.
    */
   public function buildExtendedVerificationUrl(UserInterface $user);
@@ -221,7 +222,7 @@ interface UserEmailVerificationInterface {
   /**
    * Create user email verification item.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to create email verification item for.
    * @param bool $verify
    *   Flag mark as verified/no on creation.
@@ -231,7 +232,7 @@ interface UserEmailVerificationInterface {
   /**
    * Delete user email verification item.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to delete email verification item for.
    */
   public function deleteVerification(UserInterface $user);
@@ -263,7 +264,7 @@ interface UserEmailVerificationInterface {
   /**
    * Send "blocked account verified Email" mail to site administrator.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   Blocked user who verified Email.
    *
    * @return bool
@@ -329,7 +330,7 @@ interface UserEmailVerificationInterface {
    * @param bool $active_only
    *   Whether to search for active users only.
    *
-   * @return null|\Drupal\user\UserInterface
+   * @return null|UserInterface
    *   Drupal user on success or NULL otherwise.
    */
   public function getUserByNameOrEmail($name_or_email, $active_only);
diff --git a/user_email_verification.info.yml b/user_email_verification.info.yml
index 99bf768..9c3f564 100644
--- a/user_email_verification.info.yml
+++ b/user_email_verification.info.yml
@@ -3,7 +3,7 @@ type: module
 description: 'Verify the user Email. If the Email of the user is not verified the system will block the user.'
 package: User
 
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: user_email_verification.settings_form
 
 dependencies:
diff --git a/user_email_verification.module b/user_email_verification.module
index a9d5a9a..c6fdc65 100644
--- a/user_email_verification.module
+++ b/user_email_verification.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\user_email_verification\UserEmailVerificationInterface;
 /**
  * @file
  * User email verification hooks and alters.
@@ -95,7 +96,7 @@ function user_email_verification_user_view(array &$build, EntityInterface $user,
  */
 function user_email_verification_user_presave(UserInterface $user) {
 
-  /** @var \Drupal\user_email_verification\UserEmailVerificationInterface $service */
+  /** @var UserEmailVerificationInterface $service */
   $service = \Drupal::service('user_email_verification.service');
 
   // Mark user Email verified when admin user activates blocked user account.
diff --git a/user_email_verification.tokens.inc b/user_email_verification.tokens.inc
index 1ccadd7..1dc4a6d 100644
--- a/user_email_verification.tokens.inc
+++ b/user_email_verification.tokens.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\user_email_verification\UserEmailVerificationInterface;
 /**
  * @file
  * Builds placeholder replacement tokens for user-related data.
@@ -32,7 +33,7 @@ function user_email_verification_tokens($type, $tokens, array $data, array $opti
   $replacements = [];
 
   if ($type == 'user' && isset($data['user']) && $data['user'] instanceof UserInterface) {
-    /** @var \Drupal\user_email_verification\UserEmailVerificationInterface $service */
+    /** @var UserEmailVerificationInterface $service */
     $service = \Drupal::service('user_email_verification.service');
 
     foreach ($tokens as $name => $original) {
