modules/contrib/migrate_conditions/src/Annotation/MigrateConditionsConditionPlugin.php
modules/contrib/migrate_conditions/src/ConditionInterface.php
modules/contrib/migrate_conditions/src/ConditionPluginManager.php
modules/contrib/migrate_conditions/src/Plugin/ArrayConditionBase.php
modules/contrib/migrate_conditions/src/Plugin/ConditionBase.php
modules/contrib/migrate_conditions/src/Plugin/LogicalConditionBase.php
modules/contrib/migrate_conditions/src/Plugin/ProcessPluginWithConditionBase.php
modules/contrib/migrate_conditions/src/Plugin/SimpleComparisonBase.php
modules/contrib/migrate_conditions/src/Plugin/migrate/process/EvaluateCondition.php
modules/contrib/migrate_conditions/src/Plugin/migrate/process/FilterOnCondition.php
modules/contrib/migrate_conditions/src/Plugin/migrate/process/FirstMeetingCondition.php
modules/contrib/migrate_conditions/src/Plugin/migrate/process/IfCondition.php
modules/contrib/migrate_conditions/src/Plugin/migrate/process/SkipOnCondition.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AllElements.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AndCondition.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Callback.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Contains.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EmptyCondition.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EntityExists.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Equals.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/GreaterThan.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/HasElement.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/InArray.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IsNull.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IssetCondition.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/LessThan.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OlderThan.php
modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OrCondition.php
modules/contrib/migrate_conditions/tests/src/Kernel/ConditionPluginManagerTest.php
modules/contrib/migrate_conditions/tests/src/Kernel/IfConditionTest.php
modules/contrib/migrate_conditions/tests/src/Kernel/MigrateConditionsPipelineTest.php
modules/contrib/migrate_conditions/tests/src/Kernel/condition/AllElementsTest.php
modules/contrib/migrate_conditions/tests/src/Kernel/condition/AndConditionTest.php
modules/contrib/migrate_conditions/tests/src/Kernel/condition/CallbackTest.php
modules/contrib/migrate_conditions/tests/src/Kernel/condition/EntityExistsTest.php
modules/contrib/migrate_conditions/tests/src/Kernel/condition/HasElementTest.php
modules/contrib/migrate_conditions/tests/src/Kernel/condition/OlderThanTest.php
modules/contrib/migrate_conditions/tests/src/Kernel/condition/OrConditionTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/AllElementsTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/AndConditionTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/ArrayConditionTestBase.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/CallbackTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestBase.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestEvaluateExceptionsTrait.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestValidationTrait.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/ContainsTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/EmptyConditionTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/EntityExistsTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/EqualsTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/GreaterThanTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/HasElementTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/InArrayTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/IsNullTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/IssetConditionTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/LessThanTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/LogicalConditionTestBase.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/OlderThanTest.php
modules/contrib/migrate_conditions/tests/src/Unit/condition/OrConditionTest.php
modules/contrib/migrate_conditions/tests/src/Unit/process/EvaluateConditionTest.php
modules/contrib/migrate_conditions/tests/src/Unit/process/FilterOnConditionTest.php
modules/contrib/migrate_conditions/tests/src/Unit/process/FirstMeetingConditionTest.php
modules/contrib/migrate_conditions/tests/src/Unit/process/IfConditionTest.php
modules/contrib/migrate_conditions/tests/src/Unit/process/ProcessPluginWithConditionBaseTest.php
modules/contrib/migrate_conditions/tests/src/Unit/process/SkipOnConditionTest.php

9 files with changes
====================

1) modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OlderThan.php:85

    ---------- begin diff ----------
@@ @@
   /**
    * The static date used by all rows.
    *
-   * @var Drupal\Component\Datetime\DateTimePlus
+   * @var DateTimePlus
    */
   protected $valueDate;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EntityExists.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_conditions\Plugin\migrate_conditions\condition;

+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ @@
   /**
    * The entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;

@@ @@
    *   The plugin ID.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/migrate_conditions/src/Plugin/migrate/process/SkipOnCondition.php:61

    ---------- begin diff ----------
@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $condition_manager
+   * @param PluginManagerInterface $condition_manager
    *   The MigrateCondition plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PluginManagerInterface $condition_manager) {
@@ @@
    *
    * @param mixed $value
    *   The input value.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process.
    * @param string $destination_property
    *   The destination property currently worked on. This is only used together
@@ @@
    * @return mixed
    *   The input value, $value, if it is not empty.
    *
-   * @throws \Drupal\migrate\MigrateSkipRowException
+   * @throws MigrateSkipRowException
    *   Thrown if the source property is not set and the row should be skipped,
    *   records with STATUS_IGNORED status in the map.
    */
@@ @@
    *
    * @param mixed $value
    *   The input value.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process.
    * @param string $destination_property
    *   The destination property currently worked on. This is only used together
@@ @@
    * @return mixed
    *   The input value, $value, if it is not empty.
    *
-   * @throws \Drupal\migrate\MigrateSkipProcessException
+   * @throws MigrateSkipProcessException
    *   Thrown if the source property is not set and rest of the process should
    *   be skipped.
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/migrate_conditions/src/Plugin/migrate/process/IfCondition.php:152

    ---------- begin diff ----------
@@ @@
    *   Either do_process or else_process.
    * @param mixed $value
    *   The value to be transformed.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process. Normally, just transforming the value
    *   is adequate but very rarely you might need to change two columns at the
    *   same time or something like that.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/migrate_conditions/src/Plugin/ProcessPluginWithConditionBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_conditions\Plugin;

+use Drupal\migrate_conditions\ConditionInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate\Plugin\MigrationInterface;
@@ @@
   /**
    * The condition plugin.
    *
-   * @var \Drupal\migrate_conditions\ConditionInterface
+   * @var ConditionInterface
    */
   protected $condition;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $condition_manager
+   * @param PluginManagerInterface $condition_manager
    *   The MigrateCondition plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PluginManagerInterface $condition_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/migrate_conditions/src/Plugin/LogicalConditionBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_conditions\Plugin;

+use Drupal\migrate_conditions\ConditionInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate\MigrateException;
@@ @@
   /**
    * The condition plugin array.
    *
-   * @var \Drupal\migrate_conditions\ConditionInterface[]
+   * @var ConditionInterface[]
    */
   protected $conditions;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $condition_manager
+   * @param PluginManagerInterface $condition_manager
    *   The MigrateCondition plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PluginManagerInterface $condition_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/migrate_conditions/src/Plugin/ConditionBase.php:46

    ---------- begin diff ----------
@@ @@
    *
    * @param mixed $source
    *   Source values passed from process plugin.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The current row.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/migrate_conditions/src/Plugin/ArrayConditionBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_conditions\Plugin;

+use Drupal\migrate_conditions\ConditionInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate\Plugin\MigrationInterface;
@@ @@
   /**
    * The condition plugin.
    *
-   * @var \Drupal\migrate_conditions\ConditionInterface
+   * @var ConditionInterface
    */
   protected $condition;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $condition_manager
+   * @param PluginManagerInterface $condition_manager
    *   The MigrateCondition plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PluginManagerInterface $condition_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/migrate_conditions/src/ConditionInterface.php:16

    ---------- begin diff ----------
@@ @@
    *
    * @param mixed $source
    *   Source values passed from process plugin.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The current row.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 9 files have been changed by Rector                                       

