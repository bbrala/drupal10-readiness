diff --git a/modules/og_message_notify/tests/src/Functional/SiteStillWorks.php b/modules/og_message_notify/tests/src/Functional/SiteStillWorks.php
index ce6f1e4..0da4f80 100644
--- a/modules/og_message_notify/tests/src/Functional/SiteStillWorks.php
+++ b/modules/og_message_notify/tests/src/Functional/SiteStillWorks.php
@@ -26,7 +26,7 @@ class SiteStillWorks extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Make sure to complete the normal setup steps first.
     parent::setUp();
 
@@ -48,7 +48,10 @@ class SiteStillWorks extends BrowserTestBase {
     $this->assertSession()->statusCodeEquals(200);
 
     // Confirm that the front page contains the standard text.
-    $this->assertText('Welcome to Drupal');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Welcome to Drupal');
   }
 
 }
diff --git a/src/Controller/GroupMessageController.php b/src/Controller/GroupMessageController.php
index b0930a0..acabb26 100644
--- a/src/Controller/GroupMessageController.php
+++ b/src/Controller/GroupMessageController.php
@@ -41,7 +41,7 @@ class GroupMessageController extends ControllerBase {
   /**
    * Subscribe user to group notifications.
    *
-   * @return Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect HTTP_REFERER.
    */
   public function subscribe($group) {
@@ -53,7 +53,7 @@ class GroupMessageController extends ControllerBase {
   /**
    * Unsubscribe user to group notifications.
    *
-   * @return Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect HTTP_REFERER.
    */
   public function unsubscribe(int $group) {
diff --git a/src/Database/CustomQuery.php b/src/Database/CustomQuery.php
index ac4c645..b15ed7f 100644
--- a/src/Database/CustomQuery.php
+++ b/src/Database/CustomQuery.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\og_message\Database;
 
+use Drupal\Core\Database\Connection;
 /**
  * Defines CustomQuery class.
  */
@@ -10,7 +11,7 @@ class CustomQuery {
   /**
    * Standard Drupal database connection, for making queries against.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $connection;
 
diff --git a/src/GroupMessageAccessControlHandler.php b/src/GroupMessageAccessControlHandler.php
index 36e63c7..60b308b 100644
--- a/src/GroupMessageAccessControlHandler.php
+++ b/src/GroupMessageAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\og_message;
 
+use Drupal\og_message\Entity\GroupMessageInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class GroupMessageAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\og_message\Entity\GroupMessageInterface $entity */
+    /** @var GroupMessageInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/OgUnsubscribedAccountsAccessControlHandler.php b/src/OgUnsubscribedAccountsAccessControlHandler.php
index af68eeb..4707a4e 100644
--- a/src/OgUnsubscribedAccountsAccessControlHandler.php
+++ b/src/OgUnsubscribedAccountsAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\og_message;
 
+use Drupal\og_message\Entity\OgUnsubscribedAccountsInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class OgUnsubscribedAccountsAccessControlHandler extends EntityAccessControlHand
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\og_message\Entity\OgUnsubscribedAccountsInterface $entity */
+    /** @var OgUnsubscribedAccountsInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/tests/src/Functional/SiteStillWorks.php b/tests/src/Functional/SiteStillWorks.php
index 2415f38..0be492a 100644
--- a/tests/src/Functional/SiteStillWorks.php
+++ b/tests/src/Functional/SiteStillWorks.php
@@ -26,7 +26,7 @@ class SiteStillWorks extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Make sure to complete the normal setup steps first.
     parent::setUp();
 
@@ -48,7 +48,10 @@ class SiteStillWorks extends BrowserTestBase {
     $this->assertSession()->statusCodeEquals(200);
 
     // Confirm that the front page contains the standard text.
-    $this->assertText('Welcome to Drupal');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Welcome to Drupal');
   }
 
 }
