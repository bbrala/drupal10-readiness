diff --git a/simple_redirect.info.yml b/simple_redirect.info.yml
index 7178abe..67ec2c9 100644
--- a/simple_redirect.info.yml
+++ b/simple_redirect.info.yml
@@ -1,7 +1,7 @@
 name: Simple Redirect
 type: module
 description: 'A simple redirect from a url to other url.'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 package: User
 configure: entity.simple_redirect.collection
 
diff --git a/src/EventSubscriber/SimpleRedirectRequestSubscriber.php b/src/EventSubscriber/SimpleRedirectRequestSubscriber.php
index 535f83c..2b5c245 100644
--- a/src/EventSubscriber/SimpleRedirectRequestSubscriber.php
+++ b/src/EventSubscriber/SimpleRedirectRequestSubscriber.php
@@ -2,10 +2,11 @@
 
 namespace Drupal\simple_redirect\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Drupal\Core\GeneratedUrl;
 use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -28,9 +29,9 @@ class SimpleRedirectRequestSubscriber implements EventSubscriberInterface {
    * This method is called whenever the kernel.request event is
    * dispatched.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    */
-  public function onKernalRequestSimpleRedirect(GetResponseEvent $event) {
+  public function onKernalRequestSimpleRedirect(RequestEvent $event) {
 //    drupal_set_message('Event kernel.request thrown by Subscriber in module simple_redirect.', 'status', TRUE);
 
     $request = clone $event->getRequest();
@@ -45,7 +46,7 @@ class SimpleRedirectRequestSubscriber implements EventSubscriberInterface {
    * Helper to check from url in the config, if exist return redirect url.
    *
    * @param $fromUrl
-   * @return \Drupal\Core\GeneratedUrl|null|string
+   * @return GeneratedUrl|null|string
    */
   private function getRedirectUrl($fromUrl) {
     $simple_redirect_conf = \Drupal::entityTypeManager()->getStorage('simple_redirect')->loadMultiple();
diff --git a/src/SimpleRedirectHtmlRouteProvider.php b/src/SimpleRedirectHtmlRouteProvider.php
index 661cd26..6101b19 100644
--- a/src/SimpleRedirectHtmlRouteProvider.php
+++ b/src/SimpleRedirectHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class SimpleRedirectHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
