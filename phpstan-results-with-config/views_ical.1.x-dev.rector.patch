diff --git a/src/Plugin/views/row/IcalFieldsWizard.php b/src/Plugin/views/row/IcalFieldsWizard.php
index 2793ba5..62ff414 100644
--- a/src/Plugin/views/row/IcalFieldsWizard.php
+++ b/src/Plugin/views/row/IcalFieldsWizard.php
@@ -7,6 +7,9 @@
 
 namespace Drupal\views_ical\Plugin\views\row;
 
+use Drupal\Core\Field\FieldDefinitionInterface;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Render\RendererInterface;
 use Drupal\views\Plugin\views\row\Fields;
 use Drupal\views\ResultRow;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ -54,8 +57,8 @@ class IcalFieldsWizard extends Fields {
     $renderer = $this->getRenderer();
     $style = $this->view->getStyle();
     $style_options = $style->options;
-     /** @var \Drupal\Core\Field\FieldDefinitionInterface[] $field_storage_definitions */
-//    $field_storage_definitions = $style->entityFieldManager->getFieldStorageDefinitions($this->view->field[$options['date_field']]->definition['entity_type']);
+     /** @var FieldDefinitionInterface[] $field_storage_definitions */
+    //    $field_storage_definitions = $style->entityFieldManager->getFieldStorageDefinitions($this->view->field[$options['date_field']]->definition['entity_type']);
     $entity_field_manager = $style->getEntityFieldManager();
 
     if(!isset($style_options['date_field'])) {
@@ -136,7 +139,7 @@ class IcalFieldsWizard extends Fields {
    *
    * Event summary, location and description are set as defaults.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity to be used for default data.
    * @param array $field_mapping
    *   Views field option and entity field name mapping.
@@ -147,10 +150,10 @@ class IcalFieldsWizard extends Fields {
    *     'description_field' => 'field_event_description',
    *   ]
    *   End of example.
-   *  @param \Drupal\views\ResultRow $row
+   * @param ResultRow $row
    *    The values retrieved from a single row of a view's query result.
    *
-   * @return \Eluceo\iCal\Component\Event
+   * @return Event
    *   A new event.
    *
    * @see \Drupal\views_ical\Plugin\views\style\Ical::defineOptions
@@ -338,7 +341,7 @@ class IcalFieldsWizard extends Fields {
    * Create an event based on a daterange field.
    *
    * @param array $events
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    * @param \DateTimeZone $timezone
    * @param array $field_mapping
    */
@@ -398,7 +401,7 @@ class IcalFieldsWizard extends Fields {
    * Create an event based on a datetime field
    *
    * @param array $events
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    * @param \DateTimeZone $timezone
    * @param array $field_mapping
    */
@@ -448,14 +451,14 @@ class IcalFieldsWizard extends Fields {
    *
    * @param array $events
    *   The array of events that will be output.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $row
+   * @param ContentEntityInterface $row
    *   The views result being processed.
    * @param \DateTimeZone $timezone
    *   A timezone object to use for output.
    * @param array $fieldMapping
    *   An array of mappings to specify which entity fields to use for output.
    */
-  public function addSmartDateEvent(array &$events, \Drupal\views\ResultRow $row, \DateTimeZone $timezone, array $fieldMapping): void {
+  public function addSmartDateEvent(array &$events, ResultRow $row, \DateTimeZone $timezone, array $fieldMapping): void {
 
     $entity = $this->getEntity($row);
     $datefieldValues = $entity->get($fieldMapping['date_field'])->getValue();
@@ -596,8 +599,8 @@ class IcalFieldsWizard extends Fields {
   /**
    * Gets the entity for a corresponding row.
    *
-   * @param \Drupal\views\ResultRow $row
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @param ResultRow $row
+   * @return EntityInterface|null
    */
   public function getEntity($row) {
     if ($this->view->storage->get('base_table') == 'node_field_data') {
@@ -617,7 +620,7 @@ class IcalFieldsWizard extends Fields {
 
   /**
    * Gets the renderer services.
-   * @return \Drupal\Core\Render\RendererInterface|mixed
+   * @return RendererInterface|mixed
    */
   protected function getRenderer() {
     if (!isset($this->renderer)) {
diff --git a/src/Plugin/views/style/IcalWizard.php b/src/Plugin/views/style/IcalWizard.php
index 2816960..4c0fcda 100644
--- a/src/Plugin/views/style/IcalWizard.php
+++ b/src/Plugin/views/style/IcalWizard.php
@@ -37,21 +37,21 @@ class IcalWizard extends StylePluginBase {
   /**
    * The iCal calendar.
    *
-   * @var Eluceo\iCal\Component\Calendar
+   * @var Calendar
    */
   protected $calendar;
 
   /**
    * Entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The helper service.
    *
-   * @var \Drupal\views_ical\ViewsIcalHelperInterface
+   * @var ViewsIcalHelperInterface
    */
   protected $helper;
 
diff --git a/src/ViewsIcalHelper.php b/src/ViewsIcalHelper.php
index 7707129..cd7efad 100644
--- a/src/ViewsIcalHelper.php
+++ b/src/ViewsIcalHelper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\views_ical;
 
+use Drupal\Core\Field\FieldItemInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Eluceo\iCal\Component\Event;
 use Drupal\views\ResultRow;
@@ -27,7 +28,7 @@ final class ViewsIcalHelper implements ViewsIcalHelperInterface {
    *
    * Event summary, location and description are set as defaults.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity to be used for default data.
    * @param array $field_mapping
    *   Views field option and entity field name mapping.
@@ -39,7 +40,7 @@ final class ViewsIcalHelper implements ViewsIcalHelperInterface {
    *   ]
    *   End of example.
    *
-   * @return \Eluceo\iCal\Component\Event
+   * @return Event
    *   A new event.
    *
    * @see \Drupal\views_ical\Plugin\views\style\Ical::defineOptions
@@ -143,12 +144,12 @@ final class ViewsIcalHelper implements ViewsIcalHelperInterface {
     // Description field
     if (isset($field_mapping['description_field']) && $entity->hasField($field_mapping['description_field'])) {
       if ($field_mapping['location_field'] == 'body') {
-        /** @var \Drupal\Core\Field\FieldItemInterface $description */
+        /** @var FieldItemInterface $description */
         $description = $entity->{$field_mapping['description_field']}->getValue()[0]['value'];
         $event->setDescription($description);
       }
       else {
-        /** @var \Drupal\Core\Field\FieldItemInterface $description */
+        /** @var FieldItemInterface $description */
         $description = $entity->{$field_mapping['description_field']}->first();
         $event->setDescription(\strip_tags($description->getValue()['value']));
       }
@@ -163,7 +164,7 @@ final class ViewsIcalHelper implements ViewsIcalHelperInterface {
    * Create an event based on a daterange field.
    *
    * @param array $events
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    * @param \DateTimeZone $timezone
    * @param array $field_mapping
    */
@@ -223,7 +224,7 @@ final class ViewsIcalHelper implements ViewsIcalHelperInterface {
    * Create an event based on a datetime field
    *
    * @param array $events
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    * @param \DateTimeZone $timezone
    * @param array $field_mapping
    */
diff --git a/src/ViewsIcalHelperInterface.php b/src/ViewsIcalHelperInterface.php
index ac0f704..0a43eca 100644
--- a/src/ViewsIcalHelperInterface.php
+++ b/src/ViewsIcalHelperInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\views_ical;
 
+use Eluceo\iCal\Component\Event;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\views\ResultRow;
 
@@ -15,9 +16,9 @@ interface ViewsIcalHelperInterface {
    *
    * This is used when the date_field type is `datetime` or `daterange`.
    *
-   * @param \Eluceo\iCal\Component\Event[] $events
+   * @param Event[] $events
    *   Set of events where the new event will be added.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity to be used for creating the event.
    * @param \DateTimeZone $timezone
    *   Timezone data to be specified to the event.
@@ -43,9 +44,9 @@ interface ViewsIcalHelperInterface {
    *
    * This is used when the date_field type is `date_recur`.
    *
-   * @param \Eluceo\iCal\Component\Event[] $events
+   * @param Event[] $events
    *   Set of events where the new event will be added.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity to be used for creating the event.
    * @param \DateTimeZone $timezone
    *   Timezone data to be specified to the event.
