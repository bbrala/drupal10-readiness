diff --git a/src/Authentication/Provider/KeyAuth.php b/src/Authentication/Provider/KeyAuth.php
index 3510733..ec397e9 100644
--- a/src/Authentication/Provider/KeyAuth.php
+++ b/src/Authentication/Provider/KeyAuth.php
@@ -14,14 +14,14 @@ class KeyAuth implements AuthenticationProviderInterface {
   /**
    * The key auth service.
    *
-   * @var \Drupal\key_auth\KeyAuthInterface
+   * @var KeyAuthInterface
    */
   protected $keyAuth;
 
   /**
    * Constructs a key authentication provider object.
    *
-   * @param \Drupal\key_auth\KeyAuthInterface $key_auth
+   * @param KeyAuthInterface $key_auth
    *   The key auth service.
    */
   public function __construct(KeyAuthInterface $key_auth) {
diff --git a/src/Form/UserKeyAuthForm.php b/src/Form/UserKeyAuthForm.php
index ba671e8..de14ee2 100644
--- a/src/Form/UserKeyAuthForm.php
+++ b/src/Form/UserKeyAuthForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\key_auth\Form;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -22,23 +24,23 @@ class UserKeyAuthForm extends FormBase {
   /**
    * The key authentication service.
    *
-   * @var \Drupal\key_auth\KeyAuthInterface
+   * @var KeyAuthInterface
    */
   protected $keyAuth;
 
   /**
    * The module configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Constructs a new UserKeyAuthForm.
    *
-   * @param \Drupal\key_auth\KeyAuthInterface $key_auth
+   * @param KeyAuthInterface $key_auth
    *   The key authentication service.
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory service.
    */
   public function __construct(KeyAuthInterface $key_auth, ConfigFactory $config_factory) {
@@ -179,10 +181,10 @@ class UserKeyAuthForm extends FormBase {
   /**
    * Access handler for the form.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user entity being edited.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function checkAccess(UserInterface $user) {
diff --git a/src/KeyAuth.php b/src/KeyAuth.php
index b3fb601..b8004ce 100644
--- a/src/KeyAuth.php
+++ b/src/KeyAuth.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\key_auth;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Symfony\Component\HttpFoundation\Request;
@@ -31,23 +33,23 @@ class KeyAuth implements KeyAuthInterface {
   /**
    * The module configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new KeyAuth object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/KeyAuthInterface.php b/src/KeyAuthInterface.php
index 0c8df03..95bcc39 100644
--- a/src/KeyAuthInterface.php
+++ b/src/KeyAuthInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\key_auth;
 
+use Drupal\user\Entity\User;
 use Symfony\Component\HttpFoundation\Request;
 use Drupal\user\UserInterface;
 
@@ -13,7 +14,7 @@ interface KeyAuthInterface {
   /**
    * Get the key provided in the current request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
    * @return string|false
@@ -27,7 +28,7 @@ interface KeyAuthInterface {
    * @param string $key
    *   The API key to match to a user.
    *
-   * @return \Drupal\user\Entity\User|null
+   * @return User|null
    *   The matching user entity, or NULL if there was no match.
    */
   public function getUserByKey($key);
@@ -35,7 +36,7 @@ interface KeyAuthInterface {
   /**
    * Determine if a user has access to use key authentication.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user being authenticated.
    *
    * @return bool
diff --git a/src/PageCache/DisallowKeyAuthRequests.php b/src/PageCache/DisallowKeyAuthRequests.php
index cf60381..e6d1799 100644
--- a/src/PageCache/DisallowKeyAuthRequests.php
+++ b/src/PageCache/DisallowKeyAuthRequests.php
@@ -18,14 +18,14 @@ class DisallowKeyAuthRequests implements RequestPolicyInterface {
   /**
    * The key auth service.
    *
-   * @var \Drupal\key_auth\KeyAuthInterface
+   * @var KeyAuthInterface
    */
   protected $keyAuth;
 
   /**
    * Constructs a key authentication page cache policy.
    *
-   * @param \Drupal\key_auth\KeyAuthInterface $key_auth
+   * @param KeyAuthInterface $key_auth
    *   The key auth service..
    */
   public function __construct(KeyAuthInterface $key_auth) {
diff --git a/tests/src/Functional/KeyAuthTest.php b/tests/src/Functional/KeyAuthTest.php
index e342499..2477a15 100644
--- a/tests/src/Functional/KeyAuthTest.php
+++ b/tests/src/Functional/KeyAuthTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\key_auth\Functional;
 
+use Drupal\key_auth\KeyAuthInterface;
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\user\userStorage;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\key_auth\KeyAuth;
 use Drupal\Core\Url;
@@ -24,28 +27,28 @@ class KeyAuthTest extends BrowserTestBase {
   /**
    * The key auth service.
    *
-   * @var \Drupal\key_auth\KeyAuthInterface
+   * @var KeyAuthInterface
    */
   protected $keyAuth;
 
   /**
    * The module configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $keyAuthConfig;
 
   /**
    * User storage.
    *
-   * @var \Drupal\user\userStorage
+   * @var userStorage
    */
   protected $userStorage;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->keyAuth = $this->container->get('key_auth');
     $this->keyAuthConfig = $this->config('key_auth.settings');
@@ -150,14 +153,14 @@ class KeyAuthTest extends BrowserTestBase {
     $this->assertSession()->elementExists('css', '#edit-delete');
 
     // Test deleting the key.
-    $this->drupalPostForm(NULL, [], 'Delete current key');
+    $this->submitForm([], 'Delete current key');
     $user2 = $this->loadUser($user2->id());
     $this->assertEmpty($user2->api_key->value);
     $this->assertSession()->pageTextContains('You currently do not have a key');
     $this->assertSession()->elementNotExists('css', '#edit-delete');
 
     // Test generating a new key.
-    $this->drupalPostForm(NULL, [], 'Generate new key');
+    $this->submitForm([], 'Generate new key');
     $user2 = $this->loadUser($user2->id());
     $this->assertNotEmpty($user2->api_key->value);
     $this->assertSession()->pageTextContains($user2->api_key->value);
@@ -193,6 +196,7 @@ class KeyAuthTest extends BrowserTestBase {
 
   /**
    * Test key authentication and related settings.
+   * @doesNotPerformAssertions
    */
   public function testKeyAuth() {
     // Enable page caching.
@@ -284,7 +288,7 @@ class KeyAuthTest extends BrowserTestBase {
    *   The expected response status code.
    * @param string $key
    *   The authentication key.
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user making the request.
    */
   public function keyAuthRequest($detection_method = NULL, $param_name = NULL, $status_code = 200, $key = NULL, UserInterface $user = NULL) {
@@ -314,7 +318,7 @@ class KeyAuthTest extends BrowserTestBase {
     if ($status_code == 200) {
       // Ensure that caching was disabled.
       $this->assertFalse($this->drupalGetHeader('X-Drupal-Cache'));
-      $this->assertIdentical(strpos($this->drupalGetHeader('Cache-Control'), 'public'), FALSE);
+      $this->assertSame(strpos($this->drupalGetHeader('Cache-Control'), 'public'), FALSE);
     }
 
     // Check if a user was provided.
