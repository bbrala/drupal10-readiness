modules/contrib/drowl_media/drowl_media.install
modules/contrib/drowl_media/drowl_media.module
modules/contrib/drowl_media/modules/drowl_media_types/drowl_media_types.install
modules/contrib/drowl_media/modules/drowl_media_types/drowl_media_types.module
modules/contrib/drowl_media/modules/drowl_media_video/drowl_media_video.module
modules/contrib/drowl_media/src/Plugin/Validation/Constraint/ItemsCountConstraint.php
modules/contrib/drowl_media/src/Plugin/Validation/Constraint/ItemsCountConstraintValidator.php
modules/contrib/drowl_media/src/Plugin/media/Source/Slideshow.php
modules/contrib/drowl_media/tests/src/Functional/DrowlMediaFunctionalTests.php
modules/contrib/drowl_media/tests/src/Functional/DrowlMediaTypesFunctionalTests.php
modules/contrib/drowl_media/tests/src/Functional/DrowlMediaVideoFunctionalTests.php

6 files with changes
====================

1) modules/contrib/drowl_media/tests/src/Functional/DrowlMediaVideoFunctionalTests.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\drowl_media\Functional;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ @@
   /**
    * A user with authenticated permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;

@@ @@
   /**
    * A user with admin permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/drowl_media/tests/src/Functional/DrowlMediaTypesFunctionalTests.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\drowl_media\Functional;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ @@
   /**
    * A user with authenticated permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;

@@ @@
   /**
    * A user with admin permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;

@@ @@
   /**
    * Creates a filed on an entity type bundle.
    *
-   * @param Drupal\Core\Config\Entity\ConfigEntityInterface $entityTypeBundle
+   * @param ConfigEntityInterface $entityTypeBundle
    *   The entity type bundle.
    * @param string $fieldName
    *   The field name.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/drowl_media/tests/src/Functional/DrowlMediaFunctionalTests.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\drowl_media\Functional;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ @@
   /**
    * A user with authenticated permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;

@@ @@
   /**
    * A user with admin permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/drowl_media/src/Plugin/media/Source/Slideshow.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\drowl_media\Plugin\media\Source;

+use Drupal\media\MediaTypeInterface;
 use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;
 use Drupal\media\MediaInterface;
 use Drupal\media\MediaSourceBase;
@@ @@
           return parent::getMetadata($media, 'thumbnail_uri');
         }

-        /** @var \Drupal\media\MediaInterface $slideshow_item */
+        /** @var MediaInterface $slideshow_item */
         $slideshow_item = $this->entityTypeManager->getStorage('media')->load($media->{$source_field}->target_id);
         if (!$slideshow_item) {
           return parent::getMetadata($media, 'thumbnail_uri');
         }

-        /** @var \Drupal\media\MediaTypeInterface $bundle */
+        /** @var MediaTypeInterface $bundle */
         $bundle = $this->entityTypeManager->getStorage('media_type')->load($slideshow_item->bundle());
         if (!$bundle) {
           return parent::getMetadata($media, 'thumbnail_uri');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/drowl_media/drowl_media.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\Core\Url;
 /**
  * @file
  * DROWL media module file.
@@ @@
 /**
  * Implements hook_ENTITY_TYPE_view().
  */
-function drowl_media_media_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
+function drowl_media_media_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
   // Attach the media library to all media previews in the admin route
   if (!empty($build) && !empty($view_mode) && $view_mode == 'media_library') {
     $build['#attached']['library'][] = 'drowl_media/admin_media_library';
@@ @@
  * widget button. This is a *workaround* to provide a link for slideshow creation
  * as "Slideshow" is a custom media source, which doesn't provide a create itself.
  */
-function drowl_media_field_widget_media_library_widget_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context) {
+function drowl_media_field_widget_media_library_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
   if (!empty($element['#target_bundles']) && in_array("slideshow", $element['#target_bundles'])) {
     // Change the regular "Add"-label, so its clear to the user that this means
     // "Reference to existing Slideshows"
@@ @@
     $element['#field_suffix']['empty_selection'] = [
       '#type' => 'link',
       '#title' => t('Create new Slideshow'),
-      '#url' => \Drupal\Core\Url::fromRoute('entity.media.add_form', ['media_type' => 'slideshow']),
+      '#url' => Url::fromRoute('entity.media.add_form', ['media_type' => 'slideshow']),
       '#attributes' => [
         'target' => '_blank',
         'class' => ['button', 'primary'],
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


6) modules/contrib/drowl_media/drowl_media.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityFieldManager;
+use Drupal\media\MediaTypeInterface;
+use Drupal\Core\Extension\ModuleExtensionList;
 /**
  * @file
  * Install, update and uninstall functions for the DROWL Media module.
@@ @@
  * Clean up DROWL media entities after migration.
  */
 function drowl_media_update_8203(&$sandbox) {
-  /** @var \Drupal\Core\Entity\EntityFieldManager $entityFieldManager */
+  /** @var EntityFieldManager $entityFieldManager */
   $entityFieldManager = Drupal::service('entity_field.manager');

-  /** @var \Drupal\media\MediaTypeInterface $mediaTypeStorage */
+  /** @var MediaTypeInterface $mediaTypeStorage */
   $mediaTypeStorage = \Drupal::entityTypeManager()->getStorage('media_type');

   // Change field_media_image_1 to field_image.
@@ @@
  * Implements hook_install().
  */
 function drowl_media_install() {
-  /** @var \Drupal\Core\Extension\ModuleExtensionList $extension_list */
+  /** @var ModuleExtensionList $extension_list */
   $source = \Drupal::service('extension.list.module')->getPath('drowl_media') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
   /** @var \Drupal\Core\File\FileSystemInterface $file_system */
@@ @@
  * field_media_slides_ref as source field.
  */
 function drowl_media_update_8300(&$sandbox) {
-  /** @var \Drupal\Core\Entity\EntityFieldManager $entityFieldManager */
+  /** @var EntityFieldManager $entityFieldManager */
   $entityFieldManager = Drupal::service('entity_field.manager');

-  /** @var \Drupal\media\MediaTypeInterface $mediaTypeStorage */
+  /** @var MediaTypeInterface $mediaTypeStorage */
   $mediaTypeStorage = \Drupal::entityTypeManager()->getStorage('media_type');

   // Change source_field to field_image.
@@ @@
  * field_media_slides_ref as source field.
  */
 function drowl_media_update_8301(&$sandbox) {
-  /** @var \Drupal\Core\Entity\EntityFieldManager $entityFieldManager */
+  /** @var EntityFieldManager $entityFieldManager */
   $entityFieldManager = Drupal::service('entity_field.manager');

-  /** @var \Drupal\media\MediaTypeInterface $mediaTypeStorage */
+  /** @var MediaTypeInterface $mediaTypeStorage */
   $mediaTypeStorage = \Drupal::entityTypeManager()->getStorage('media_type');

   // Change source_field to field_image.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

