modules/contrib/purge_ajax_processor/purge_ajax_processor.module
modules/contrib/purge_ajax_processor/src/Controller/AjaxProcessor.php
modules/contrib/purge_ajax_processor/src/EventSubscriber/CacheSubscriber.php
modules/contrib/purge_ajax_processor/src/Form/ConfigurationForm.php
modules/contrib/purge_ajax_processor/src/Plugin/Purge/Processor/AjaxProcessor.php

3 files with changes
====================

1) modules/contrib/purge_ajax_processor/src/EventSubscriber/CacheSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\purge_ajax_processor\EventSubscriber;

+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\purge_ajax_processor\Form\ConfigurationForm;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * A config object for the purge_ajax_processor config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $processorConfig;

@@ @@
   /**
    * Constructor for CacheSubscriber.
    *
-   * @param Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory object.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Setup the cache control.
    *
-   * @param Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   Event object.
    */
-  public function cacheControl(FilterResponseEvent $event) {
+  public function cacheControl(ResponseEvent $event) {
     $request = $event->getRequest();

     // If route has proxy object then change the response.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/purge_ajax_processor/src/Controller/AjaxProcessor.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\purge_ajax_processor\Controller;

+use Drupal\purge\Plugin\Purge\Purger\PurgersServiceInterface;
+use Drupal\purge\Plugin\Purge\Queue\QueueServiceInterface;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Cache\CacheableJsonResponse;
@@ @@
   /**
    * The container object.
    *
-   * @var Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;

@@ @@
   /**
    * The purge executive service, which wipes content from external caches.
    *
-   * @var \Drupal\purge\Plugin\Purge\Purger\PurgersServiceInterface
+   * @var PurgersServiceInterface
    */
   protected $purgePurgers;

@@ @@
   /**
    * The queue in which to store, claim and release invalidation objects from.
    *
-   * @var \Drupal\purge\Plugin\Purge\Queue\QueueServiceInterface
+   * @var QueueServiceInterface
    */
   protected $purgeQueue;

@@ @@
   /**
    * Processor config.
    *
-   * @var \Drupal\Core\Config\Config|null
+   * @var Config|null
    */
   protected $processorConfig = NULL;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/purge_ajax_processor/purge_ajax_processor.module:24

    ---------- begin diff ----------
@@ @@
   switch ($route_name) {
     // Main module help for the purge_ajax_processor module.
     case 'help.page.purge_ajax_processor':
-      $output = '<pre>' . file_get_contents(drupal_get_path('module', 'purge_ajax_processor') . '/README.md') . '</pre>';
+      $output = '<pre>' . file_get_contents(\Drupal::service('extension.list.module')->getPath('purge_ajax_processor') . '/README.md') . '</pre>';
       return $output;

     default:
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

