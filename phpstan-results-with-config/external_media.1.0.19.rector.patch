diff --git a/src/Annotation/ExternalMedia.php b/src/Annotation/ExternalMedia.php
index f2c9375..1c90cd8 100755
--- a/src/Annotation/ExternalMedia.php
+++ b/src/Annotation/ExternalMedia.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\external_media\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -26,7 +27,7 @@ class ExternalMedia extends Plugin {
   /**
    * Plugin name.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -35,7 +36,7 @@ class ExternalMedia extends Plugin {
   /**
    * Plugin description.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Element/ExternalMediaFile.php b/src/Element/ExternalMediaFile.php
index 4dfc377..ab552ed 100644
--- a/src/Element/ExternalMediaFile.php
+++ b/src/Element/ExternalMediaFile.php
@@ -67,7 +67,7 @@ class ExternalMediaFile extends ManagedFile {
             if ($external_media = \Drupal::service('plugin.manager.external_media')->createInstance($plugin_id)) {
               if ($item = $external_media->getFile($remote_file, $destination)) {
                 if (!empty($item['source_data'])) {
-                  $file = file_save_data($item['source_data'], $item['destination']);
+                  $file = \Drupal::service('file.repository')->writeData($item['source_data'], $item['destination']);
                 }
                 elseif (!empty($item['source'])) {
                   $file = system_retrieve_file(trim($item['source']), trim($item['destination']), TRUE);
diff --git a/src/Form/ExternalMediaSettings.php b/src/Form/ExternalMediaSettings.php
index 0d2a9b3..e76aeb6 100644
--- a/src/Form/ExternalMediaSettings.php
+++ b/src/Form/ExternalMediaSettings.php
@@ -15,26 +15,26 @@ use Drupal\external_media\ExternalMedia;
 class ExternalMediaSettings extends FormBase {
 
   /**
-   * @var \Drupal\external_media\Plugin\ExternalMediaManager
+   * @var ExternalMediaManager
    */
   protected $externalMediaManager;
 
   /**
-   * @var \Drupal\external_media\ExternalMedia
+   * @var ExternalMedia
    */
   protected $externalMedia;
 
   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a \Drupal\external_media\Form\ExternalMediaSettings.
    *
-   * @param \Drupal\external_media\Plugin\ExternalMediaManager $external_media_manager
-   * @param \Drupal\external_media\ExternalMedia $external_media
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ExternalMediaManager $external_media_manager
+   * @param ExternalMedia $external_media
+   * @param ModuleHandlerInterface $module_handler
    */
   public function __construct(ExternalMediaManager $external_media_manager, ExternalMedia $external_media, ModuleHandlerInterface $module_handler) {
     $this->externalMediaManager = $external_media_manager;
diff --git a/src/ParamConverter/ExternalMediaConverter.php b/src/ParamConverter/ExternalMediaConverter.php
index 3a86f9a..53fedc5 100644
--- a/src/ParamConverter/ExternalMediaConverter.php
+++ b/src/ParamConverter/ExternalMediaConverter.php
@@ -14,14 +14,14 @@ use Drupal\external_media\Plugin\ExternalMediaManager;
 final class ExternalMediaConverter implements ParamConverterInterface {
 
   /**
-   * @var \Drupal\external_media\Plugin\ExternalMediaManager
+   * @var ExternalMediaManager
    */
   protected $externalMediaManager;
 
   /**
    * ExternalMediaConverter constructor.
    *
-   * @param \Drupal\external_media\Plugin\ExternalMediaManager $external_media_manager
+   * @param ExternalMediaManager $external_media_manager
    */
   public function __construct(ExternalMediaManager $external_media_manager) {
     $this->externalMediaManager = $external_media_manager;
diff --git a/src/Plugin/ExternalMediaBase.php b/src/Plugin/ExternalMediaBase.php
index 7e51354..00ffbd3 100755
--- a/src/Plugin/ExternalMediaBase.php
+++ b/src/Plugin/ExternalMediaBase.php
@@ -30,29 +30,29 @@ class ExternalMediaBase extends PluginBase implements ExternalMediaInterface, Co
   /**
    * The state key value store.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
-   * @var \Drupal\external_media\ExternalMedia
+   * @var ExternalMedia
    */
   protected $externalMedia;
 
   /**
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStoreFactory;
 
   /**
-   * @var \Drupal\Core\Session\SessionManagerInterface
+   * @var SessionManagerInterface
    */
   protected $sessionManager;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
diff --git a/src/Plugin/ExternalMediaManager.php b/src/Plugin/ExternalMediaManager.php
index e4406d6..20a9a92 100755
--- a/src/Plugin/ExternalMediaManager.php
+++ b/src/Plugin/ExternalMediaManager.php
@@ -19,9 +19,9 @@ class ExternalMediaManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/Field/FieldWidget/ExternalMediaImage.php b/src/Plugin/Field/FieldWidget/ExternalMediaImage.php
index a3be9c6..d76351a 100644
--- a/src/Plugin/Field/FieldWidget/ExternalMediaImage.php
+++ b/src/Plugin/Field/FieldWidget/ExternalMediaImage.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\external_media\Plugin\Field\FieldWidget;
 
+use Drupal\image\ImageStyleInterface;
+use Drupal\image\ImageStyleStorageInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Image\ImageFactory;
@@ -27,7 +29,7 @@ class ExternalMediaImage extends ExternalMediaFile {
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
@@ -38,15 +40,15 @@ class ExternalMediaImage extends ExternalMediaFile {
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Render\ElementInfoManagerInterface $element_info
+   * @param ElementInfoManagerInterface $element_info
    *   The element info manager service.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, ElementInfoManagerInterface $element_info, ImageFactory $image_factory = NULL) {
@@ -306,7 +308,7 @@ class ExternalMediaImage extends ExternalMediaFile {
   public function calculateDependencies() {
     $dependencies = parent::calculateDependencies();
     $style_id = $this->getSetting('preview_image_style');
-    /** @var \Drupal\image\ImageStyleInterface $style */
+    /** @var ImageStyleInterface $style */
     if ($style_id && $style = ImageStyle::load($style_id)) {
       // If this widget uses a valid image style to display the preview of the
       // uploaded image, add that image style configuration entity as dependency
@@ -322,10 +324,10 @@ class ExternalMediaImage extends ExternalMediaFile {
   public function onDependencyRemoval(array $dependencies) {
     $changed = parent::onDependencyRemoval($dependencies);
     $style_id = $this->getSetting('preview_image_style');
-    /** @var \Drupal\image\ImageStyleInterface $style */
+    /** @var ImageStyleInterface $style */
     if ($style_id && $style = ImageStyle::load($style_id)) {
       if (!empty($dependencies[$style->getConfigDependencyKey()][$style->getConfigDependencyName()])) {
-        /** @var \Drupal\image\ImageStyleStorageInterface $storage */
+        /** @var ImageStyleStorageInterface $storage */
         $storage = \Drupal::entityTypeManager()->getStorage($style->getEntityTypeId());
         $replacement_id = $storage->getReplacementId($style_id);
         // If a valid replacement has been provided in the storage, replace the
