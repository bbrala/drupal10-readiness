diff --git a/modules/oembed_lazyload_youtube/oembed_lazyload_youtube.module b/modules/oembed_lazyload_youtube/oembed_lazyload_youtube.module
index 8dfc191..0ed58ef 100644
--- a/modules/oembed_lazyload_youtube/oembed_lazyload_youtube.module
+++ b/modules/oembed_lazyload_youtube/oembed_lazyload_youtube.module
@@ -142,5 +142,5 @@ function oembed_lazyload_youtube_field_formatter_settings_summary_alter(array &$
  * Implements hook_ckeditor_css_alter().
  */
 function oembed_lazyload_youtube_ckeditor_css_alter(array &$css, EditorInterface $editor) {
-  $css[] = drupal_get_path('module', 'oembed_lazyload_youtube') . '/css/youtube.css';
+  $css[] = \Drupal::service('extension.list.module')->getPath('oembed_lazyload_youtube') . '/css/youtube.css';
 }
diff --git a/modules/oembed_lazyload_youtube/src/Plugin/oembed_lazyload/ProviderEnhancer/YoutubeEnhancer.php b/modules/oembed_lazyload_youtube/src/Plugin/oembed_lazyload/ProviderEnhancer/YoutubeEnhancer.php
index d9edce7..5b9afc4 100644
--- a/modules/oembed_lazyload_youtube/src/Plugin/oembed_lazyload/ProviderEnhancer/YoutubeEnhancer.php
+++ b/modules/oembed_lazyload_youtube/src/Plugin/oembed_lazyload/ProviderEnhancer/YoutubeEnhancer.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\oembed_lazyload_youtube\Plugin\oembed_lazyload\ProviderEnhancer;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\media\OEmbed\Resource;
 use Drupal\oembed_lazyload\ProviderEnhancerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -22,14 +24,14 @@ class YoutubeEnhancer extends ProviderEnhancerBase {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The request stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
diff --git a/modules/oembed_lazyload_youtube/tests/src/Functional/FormatterThirdPartySettingsTest.php b/modules/oembed_lazyload_youtube/tests/src/Functional/FormatterThirdPartySettingsTest.php
index 20fbc46..39026b7 100644
--- a/modules/oembed_lazyload_youtube/tests/src/Functional/FormatterThirdPartySettingsTest.php
+++ b/modules/oembed_lazyload_youtube/tests/src/Functional/FormatterThirdPartySettingsTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\oembed_lazyload_youtube\Functional;
 
+use Drupal\media\MediaTypeInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\Core\Url;
 use Drupal\Tests\media\Functional\MediaFunctionalTestBase;
@@ -35,7 +37,7 @@ class FormatterThirdPartySettingsTest extends MediaFunctionalTestBase {
   /**
    * A media type entity.
    *
-   * @var \Drupal\media\MediaTypeInterface
+   * @var MediaTypeInterface
    */
   protected $mediaType;
 
@@ -51,7 +53,7 @@ class FormatterThirdPartySettingsTest extends MediaFunctionalTestBase {
     $source = $this->mediaType->getSource();
     $source_field = $source->getSourceFieldDefinition($this->mediaType);
 
-    /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $view_display */
+    /** @var EntityViewDisplayInterface $view_display */
     $view_display = EntityViewDisplay::create([
       'targetEntityType' => 'media',
       'bundle' => $this->mediaType->id(),
diff --git a/modules/oembed_lazyload_youtube/tests/src/Kernel/YoutubeEnhancerTest.php b/modules/oembed_lazyload_youtube/tests/src/Kernel/YoutubeEnhancerTest.php
index a2287de..c56c2bf 100644
--- a/modules/oembed_lazyload_youtube/tests/src/Kernel/YoutubeEnhancerTest.php
+++ b/modules/oembed_lazyload_youtube/tests/src/Kernel/YoutubeEnhancerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_lazyload_youtube\Kernel;
 
+use Drupal\oembed_lazyload\ProviderEnhancerInterface;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\KernelTests\KernelTestBase;
@@ -19,7 +20,7 @@ class YoutubeEnhancerTest extends KernelTestBase {
   /**
    * The subject under test.
    *
-   * @var \Drupal\oembed_lazyload\ProviderEnhancerInterface
+   * @var ProviderEnhancerInterface
    */
   protected $instance;
 
@@ -29,14 +30,10 @@ class YoutubeEnhancerTest extends KernelTestBase {
   protected function setUp() : void {
     parent::setUp();
 
-    $config = $this->getMockBuilder(Config::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $config = $this->createMock(Config::class);
 
     $config->method('get')->willReturn('https://example.com');
-    $config_factory = $this->getMockBuilder(ConfigFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $config_factory = $this->createMock(ConfigFactoryInterface::class);
 
     $config_factory->method('get')->willReturn($config);
 
@@ -81,13 +78,9 @@ class YoutubeEnhancerTest extends KernelTestBase {
    */
   public function testGetPlaceholder($url) {
 
-    $resource = $this->getMockBuilder(Resource::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $resource = $this->createMock(Resource::class);
 
-    $provider = $this->getMockBuilder(Provider::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $provider = $this->createMock(Provider::class);
 
     $provider->method('getName')
       ->willReturn('YouTube');
diff --git a/oembed_lazyload.module b/oembed_lazyload.module
index 29f6ca4..776d64d 100644
--- a/oembed_lazyload.module
+++ b/oembed_lazyload.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\oembed_lazyload\ProviderEnhancerManager;
 /**
  * @file
  * Contains hooks for the oembed_lazyload module.
@@ -74,7 +75,7 @@ function oembed_lazyload_preprocess_media_oembed_iframe(&$variables) {
 
     $provider = $query->get('provider');
     if ($provider) {
-      /** @var \Drupal\oembed_lazyload\ProviderEnhancerManager $enhancer_manager */
+      /** @var ProviderEnhancerManager $enhancer_manager */
       $enhancer_manager = \Drupal::service('oembed_lazyload');
       $enhancer = $enhancer_manager->getEnhancerForProvider($provider);
       $options = $query->get('options', []);
@@ -87,5 +88,5 @@ function oembed_lazyload_preprocess_media_oembed_iframe(&$variables) {
  * Implements hook_ckeditor_css_alter().
  */
 function oembed_lazyload_ckeditor_css_alter(array &$css, EditorInterface $editor) {
-  $css[] = drupal_get_path('module', 'oembed_lazyload') . '/css/common.css';
+  $css[] = \Drupal::service('extension.list.module')->getPath('oembed_lazyload') . '/css/common.css';
 }
diff --git a/src/Access/OembedLazyloadIframeAccessCheck.php b/src/Access/OembedLazyloadIframeAccessCheck.php
index a5b90a5..821a5c4 100644
--- a/src/Access/OembedLazyloadIframeAccessCheck.php
+++ b/src/Access/OembedLazyloadIframeAccessCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\oembed_lazyload\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\oembed_lazyload\IframeUrlHelper;
@@ -15,23 +16,23 @@ class OembedLazyloadIframeAccessCheck implements AccessInterface {
   /**
    * The oembed lazyload iFrame URL helper service.
    *
-   * @var \Drupal\oembed_lazyload\IframeUrlHelper
+   * @var IframeUrlHelper
    */
   protected $oembedLazyloadIframeUrlHelper;
 
   /**
    * The request stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * OembedLazyloadIframeAccessCheck constructor.
    *
-   * @param \Drupal\oembed_lazyload\IframeUrlHelper $oembed_lazyload_iframe_url_helper
+   * @param IframeUrlHelper $oembed_lazyload_iframe_url_helper
    *   The oembed lazyload iFrame URL helper service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack service.
    */
   public function __construct(IframeUrlHelper $oembed_lazyload_iframe_url_helper, RequestStack $request_stack) {
@@ -42,7 +43,7 @@ class OembedLazyloadIframeAccessCheck implements AccessInterface {
   /**
    * Ensures that the iframe url has not been tampered with.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access() {
diff --git a/src/Annotation/ProviderEnhancer.php b/src/Annotation/ProviderEnhancer.php
index 948d329..a2c2f18 100644
--- a/src/Annotation/ProviderEnhancer.php
+++ b/src/Annotation/ProviderEnhancer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\oembed_lazyload\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class ProviderEnhancer extends Plugin {
   /**
    * The human-readable name of the enhancer plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/IframeUrlHelper.php b/src/IframeUrlHelper.php
index e55b9ac..d8c34ae 100644
--- a/src/IframeUrlHelper.php
+++ b/src/IframeUrlHelper.php
@@ -14,14 +14,14 @@ class IframeUrlHelper {
   /**
    * The private key service.
    *
-   * @var \Drupal\Core\PrivateKey
+   * @var PrivateKey
    */
   protected $privateKey;
 
   /**
    * IFrameUrlHelper constructor.
    *
-   * @param \Drupal\Core\PrivateKey $private_key
+   * @param PrivateKey $private_key
    *   The private key service.
    */
   public function __construct(PrivateKey $private_key) {
diff --git a/src/Plugin/Field/FieldFormatter/LazyloadOEmbedFormatter.php b/src/Plugin/Field/FieldFormatter/LazyloadOEmbedFormatter.php
index 4bd8f54..76ae6bc 100644
--- a/src/Plugin/Field/FieldFormatter/LazyloadOEmbedFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/LazyloadOEmbedFormatter.php
@@ -2,6 +2,17 @@
 
 namespace Drupal\oembed_lazyload\Plugin\Field\FieldFormatter;
 
+use Drupal\media\OEmbed\ResourceFetcherInterface;
+use Drupal\media\OEmbed\UrlResolverInterface;
+use Drupal\media\IFrameUrlHelper;
+use Drupal\oembed_lazyload\IframeUrlHelper;
+use Drupal\oembed_lazyload\ProviderEnhancerManager;
+use Drupal\Core\Config\ImmutableConfig;
+use Psr\Log\LoggerInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Logger\LoggerChannelFactoryInterface;
+use Drupal\Core\Field\FieldItemInterface;
+use Drupal\oembed_lazyload\ProviderEnhancerInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -32,49 +43,49 @@ class LazyloadOEmbedFormatter extends FormatterBase {
   /**
    * The oEmbed resource fetcher.
    *
-   * @var \Drupal\media\OEmbed\ResourceFetcherInterface
+   * @var ResourceFetcherInterface
    */
   protected $resourceFetcher;
 
   /**
    * The oEmbed URL resolver service.
    *
-   * @var \Drupal\media\OEmbed\UrlResolverInterface
+   * @var UrlResolverInterface
    */
   protected $urlResolver;
 
   /**
    * The iFrame URL helper service.
    *
-   * @var \Drupal\media\IFrameUrlHelper
+   * @var IFrameUrlHelper
    */
   protected $iFrameUrlHelper;
 
   /**
    * The oembed lazyload iFrame URL helper service.
    *
-   * @var \Drupal\oembed_lazyload\IframeUrlHelper
+   * @var IframeUrlHelper
    */
   protected $oembedLazyloadIframeUrlHelper;
 
   /**
    * The OEmbed lazyload manager service.
    *
-   * @var \Drupal\oembed_lazyload\ProviderEnhancerManager
+   * @var ProviderEnhancerManager
    */
   protected $oembedLazyloadPluginManager;
 
   /**
    * The media settings config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The logger service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -90,11 +101,11 @@ class LazyloadOEmbedFormatter extends FormatterBase {
     $instance->oembedLazyloadIframeUrlHelper = $container->get('oembed_lazyload.iframe_url_helper');
     $instance->oembedLazyloadPluginManager = $container->get('oembed_lazyload');
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+    /** @var ConfigFactoryInterface $config_factory */
     $config_factory = $container->get('config.factory');
     $instance->config = $config_factory->get('media.settings');
 
-    /** @var \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory */
+    /** @var LoggerChannelFactoryInterface $logger_factory */
     $logger_factory = $container->get('logger.factory');
     $instance->logger = $logger_factory->get('oembed_lazyload');
 
@@ -211,7 +222,7 @@ class LazyloadOEmbedFormatter extends FormatterBase {
    *
    * @param array $element
    *   The form being validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the form.
    */
   public static function validateIntersectionObserverMargin(array $element, FormStateInterface $form_state) {
@@ -287,7 +298,7 @@ class LazyloadOEmbedFormatter extends FormatterBase {
 
     foreach ($items as $delta => $item) {
 
-      /** @var \Drupal\Core\Field\FieldItemInterface $item */
+      /** @var FieldItemInterface $item */
       $main_property = $item->getFieldDefinition()->getFieldStorageDefinition()->getMainPropertyName();
       $value = $item->{$main_property};
 
@@ -308,7 +319,7 @@ class LazyloadOEmbedFormatter extends FormatterBase {
         $this->logger->error('Could not find the oembed provider.');
         continue;
       }
-      /** @var \Drupal\oembed_lazyload\ProviderEnhancerInterface $enhancer */
+      /** @var ProviderEnhancerInterface $enhancer */
       $enhancer = $this->oembedLazyloadPluginManager->getEnhancerForProvider($provider->getName());
 
       $query = [
diff --git a/src/ProviderEnhancerBase.php b/src/ProviderEnhancerBase.php
index 50cf1eb..b93dda7 100644
--- a/src/ProviderEnhancerBase.php
+++ b/src/ProviderEnhancerBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\oembed_lazyload;
 
+use Psr\Log\LoggerInterface;
+use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Plugin\PluginBase;
@@ -19,7 +21,7 @@ abstract class ProviderEnhancerBase extends PluginBase implements ContainerFacto
   /**
    * The logger service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -29,7 +31,7 @@ abstract class ProviderEnhancerBase extends PluginBase implements ContainerFacto
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     $instance = new static($configuration, $plugin_id, $plugin_definition);
 
-    /** @var \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_channel_factory */
+    /** @var LoggerChannelFactoryInterface $logger_channel_factory */
     $logger_channel_factory = $container->get('logger.factory');
     $instance->logger = $logger_channel_factory->get('oembed_lazyload');
 
diff --git a/src/ProviderEnhancerInterface.php b/src/ProviderEnhancerInterface.php
index e2cbd03..cbb4ce8 100644
--- a/src/ProviderEnhancerInterface.php
+++ b/src/ProviderEnhancerInterface.php
@@ -32,7 +32,7 @@ interface ProviderEnhancerInterface extends PluginInspectionInterface {
    *
    * @param string $url
    *   The url that the oembed resource resides at.
-   * @param \Drupal\media\OEmbed\Resource $resource
+   * @param Resource $resource
    *   The resource to build a thumbnail for.
    * @param array $settings
    *   The settings of the formatter that this enhancer is running on.
@@ -45,7 +45,7 @@ interface ProviderEnhancerInterface extends PluginInspectionInterface {
   /**
    * Gets a build array that forms the iframe for an oembed video.
    *
-   * @param \Drupal\Core\Url $url
+   * @param Url $url
    *   The iframe url.
    * @param \Drupal\media\Oembed\Resource $resource
    *   The resource to build an iframe for.
diff --git a/src/ProviderEnhancerManager.php b/src/ProviderEnhancerManager.php
index b33ac8f..8b4f2cd 100644
--- a/src/ProviderEnhancerManager.php
+++ b/src/ProviderEnhancerManager.php
@@ -19,9 +19,9 @@ class ProviderEnhancerManager extends DefaultPluginManager implements ProviderEn
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/ProviderEnhancerManagerInterface.php b/src/ProviderEnhancerManagerInterface.php
index 788a7b8..480ac6b 100644
--- a/src/ProviderEnhancerManagerInterface.php
+++ b/src/ProviderEnhancerManagerInterface.php
@@ -16,7 +16,7 @@ interface ProviderEnhancerManagerInterface extends PluginManagerInterface, Fallb
    * @param string $provider
    *   The provider to get an enhancer for.
    *
-   * @return \Drupal\oembed_lazyload\ProviderEnhancerInterface
+   * @return ProviderEnhancerInterface
    *   The enhancer that applies to the provider.
    */
   public function getEnhancerForProvider($provider);
diff --git a/tests/src/Kernel/FallbackEnhancerTest.php b/tests/src/Kernel/FallbackEnhancerTest.php
index d19e2f8..5159a03 100644
--- a/tests/src/Kernel/FallbackEnhancerTest.php
+++ b/tests/src/Kernel/FallbackEnhancerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_lazyload\Kernel;
 
+use Drupal\oembed_lazyload\ProviderEnhancerManagerInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\oembed_lazyload\Plugin\oembed_lazyload\ProviderEnhancer\FallbackEnhancer;
 
@@ -25,7 +26,7 @@ class FallbackEnhancerTest extends KernelTestBase {
    * Test case for confirming annotation fields are working properly.
    */
   public function testFallbackEnhancer() {
-    /** @var \Drupal\oembed_lazyload\ProviderEnhancerManagerInterface $manager */
+    /** @var ProviderEnhancerManagerInterface $manager */
     $manager = $this->container->get('oembed_lazyload');
     $plugin = $manager->createInstance('does_not_exist');
 
diff --git a/tests/src/Kernel/IframeUrlHelperTest.php b/tests/src/Kernel/IframeUrlHelperTest.php
index 41bfccb..7805599 100644
--- a/tests/src/Kernel/IframeUrlHelperTest.php
+++ b/tests/src/Kernel/IframeUrlHelperTest.php
@@ -18,14 +18,14 @@ class IframeUrlHelperTest extends KernelTestBase {
   /**
    * The mock private key.
    *
-   * @var \Drupal\Core\PrivateKey
+   * @var PrivateKey
    */
   protected $privateKey;
 
   /**
    * The subject under test.
    *
-   * @var \Drupal\oembed_lazyload\IframeUrlHelper
+   * @var IframeUrlHelper
    */
   protected $instance;
 
@@ -35,9 +35,7 @@ class IframeUrlHelperTest extends KernelTestBase {
   protected function setUp() : void {
     parent::setUp();
 
-    $this->privateKey = $this->getMockBuilder(PrivateKey::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->privateKey = $this->createMock(PrivateKey::class);
 
     $this->instance = new IframeUrlHelper($this->privateKey);
   }
diff --git a/tests/src/Kernel/OEmbedLazyloadIframeAccessCheckTest.php b/tests/src/Kernel/OEmbedLazyloadIframeAccessCheckTest.php
index 79afb5e..18e8cc5 100644
--- a/tests/src/Kernel/OEmbedLazyloadIframeAccessCheckTest.php
+++ b/tests/src/Kernel/OEmbedLazyloadIframeAccessCheckTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_lazyload\Kernel;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Access\AccessResult;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\oembed_lazyload\Access\OembedLazyloadIframeAccessCheck;
@@ -20,21 +21,21 @@ class OEmbedLazyloadIframeAccessCheckTest extends KernelTestBase {
   /**
    * The oembed lazyload iFrame URL helper service.
    *
-   * @var \Drupal\oembed_lazyload\IframeUrlHelper
+   * @var IframeUrlHelper
    */
   protected $oembedLazyloadIframeUrlHelper;
 
   /**
    * The mock query.
    *
-   * @var \Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface
+   * @var ParameterBagInterface
    */
   protected $query;
 
   /**
    * The subject under test.
    *
-   * @var \Drupal\oembed_lazyload\Access\OembedLazyloadIframeAccessCheck
+   * @var OembedLazyloadIframeAccessCheck
    */
   protected $instance;
 
@@ -44,25 +45,17 @@ class OEmbedLazyloadIframeAccessCheckTest extends KernelTestBase {
   protected function setUp() : void {
     parent::setUp();
 
-    $this->oembedLazyloadIframeUrlHelper = $this->getMockBuilder(IframeUrlHelper::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->oembedLazyloadIframeUrlHelper = $this->createMock(IframeUrlHelper::class);
 
-    $request_stack = $this->getMockBuilder(RequestStack::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $request_stack = $this->createMock(RequestStack::class);
 
-    /** @var \Symfony\Component\HttpFoundation\Request|\PHPUnit\Framework\MockObject\MockObject $request */
-    $request = $this->getMockBuilder(Request::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    /** @var Request|MockObject $request */
+    $request = $this->createMock(Request::class);
 
     $request_stack->method('getCurrentRequest')
       ->willReturn($request);
 
-    $this->query = $this->getMockBuilder(ParameterBagInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->query = $this->createMock(ParameterBagInterface::class);
 
     $request->query = $this->query;
 
diff --git a/tests/src/Kernel/ProviderEnhancerAnnotationTest.php b/tests/src/Kernel/ProviderEnhancerAnnotationTest.php
index ee976ea..245e254 100644
--- a/tests/src/Kernel/ProviderEnhancerAnnotationTest.php
+++ b/tests/src/Kernel/ProviderEnhancerAnnotationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_lazyload\Kernel;
 
+use Drupal\oembed_lazyload\ProviderEnhancerManagerInterface;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -26,7 +27,7 @@ class ProviderEnhancerAnnotationTest extends KernelTestBase {
    */
   public function testAnnotations() {
 
-    /** @var \Drupal\oembed_lazyload\ProviderEnhancerManagerInterface $manager */
+    /** @var ProviderEnhancerManagerInterface $manager */
     $manager = $this->container->get('oembed_lazyload');
     $plugin = $manager->getDefinition('test');
     static::assertEquals('test', $plugin['id']);
diff --git a/tests/src/Kernel/ProviderEnhancerManagerTest.php b/tests/src/Kernel/ProviderEnhancerManagerTest.php
index 6d7cb99..a17a426 100644
--- a/tests/src/Kernel/ProviderEnhancerManagerTest.php
+++ b/tests/src/Kernel/ProviderEnhancerManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_lazyload\Kernel;
 
+use Drupal\oembed_lazyload\ProviderEnhancerManagerInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\oembed_lazyload\Plugin\oembed_lazyload\ProviderEnhancer\FallbackEnhancer;
 use Drupal\oembed_lazyload_test\Plugin\oembed_lazyload\ProviderEnhancer\TestEnhancer;
@@ -26,7 +27,7 @@ class ProviderEnhancerManagerTest extends KernelTestBase {
   /**
    * The subject under test.
    *
-   * @var \Drupal\oembed_lazyload\ProviderEnhancerManagerInterface
+   * @var ProviderEnhancerManagerInterface
    */
   protected $instance;
 
diff --git a/tests/src/Kernel/ProviderEnhancerTest.php b/tests/src/Kernel/ProviderEnhancerTest.php
index cf5ac55..5216b96 100644
--- a/tests/src/Kernel/ProviderEnhancerTest.php
+++ b/tests/src/Kernel/ProviderEnhancerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\oembed_lazyload\Kernel;
 
+use Drupal\oembed_lazyload\ProviderEnhancerInterface;
+use Drupal\oembed_lazyload\ProviderEnhancerManagerInterface;
 use Drupal\Core\Url;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\media\OEmbed\Provider;
@@ -26,7 +28,7 @@ class ProviderEnhancerTest extends KernelTestBase {
   /**
    * The subject under test.
    *
-   * @var \Drupal\oembed_lazyload\ProviderEnhancerInterface
+   * @var ProviderEnhancerInterface
    */
   protected $instance;
 
@@ -36,7 +38,7 @@ class ProviderEnhancerTest extends KernelTestBase {
   protected function setUp() : void {
     parent::setUp();
 
-    /** @var \Drupal\oembed_lazyload\ProviderEnhancerManagerInterface $plugin_manager */
+    /** @var ProviderEnhancerManagerInterface $plugin_manager */
     $plugin_manager = $this->container->get('oembed_lazyload');
     $this->instance = $plugin_manager->getEnhancerForProvider('test');
   }
@@ -60,21 +62,13 @@ class ProviderEnhancerTest extends KernelTestBase {
    * Test case for the default placeholder generation with a known provider.
    */
   public function testGetPlaceholder() {
-    $url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock(Url::class);
 
-    $thumbnail_url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $thumbnail_url = $this->createMock(Url::class);
 
-    $resource = $this->getMockBuilder(Resource::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $resource = $this->createMock(Resource::class);
 
-    $provider = $this->getMockBuilder(Provider::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $provider = $this->createMock(Provider::class);
 
     $provider->method('getName')
       ->willReturn('test_provider');
@@ -106,17 +100,11 @@ class ProviderEnhancerTest extends KernelTestBase {
    * Test case for the default placeholder generation with an unknown provider.
    */
   public function testGetPlaceholderNoProvider() {
-    $url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock(Url::class);
 
-    $thumbnail_url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $thumbnail_url = $this->createMock(Url::class);
 
-    $resource = $this->getMockBuilder(Resource::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $resource = $this->createMock(Resource::class);
 
     $resource->method('getProvider')
       ->willReturn(NULL);
@@ -147,16 +135,12 @@ class ProviderEnhancerTest extends KernelTestBase {
    * @covers \Drupal\oembed_lazyload\ProviderEnhancerBase::getIframe
    */
   public function testGetIframeWithTitle() {
-    $url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock(Url::class);
 
     $url->method('toString')
       ->willReturn('https://example.com');
 
-    $resource = $this->getMockBuilder(Resource::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $resource = $this->createMock(Resource::class);
 
     $resource->method('getWidth')
       ->willReturn('550');
@@ -207,16 +191,12 @@ class ProviderEnhancerTest extends KernelTestBase {
    * @covers \Drupal\oembed_lazyload\ProviderEnhancerBase::getIframe
    */
   public function testGetIframeWithoutTitle() {
-    $url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock(Url::class);
 
     $url->method('toString')
       ->willReturn('https://example.com');
 
-    $resource = $this->getMockBuilder(Resource::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $resource = $this->createMock(Resource::class);
 
     $resource->method('getWidth')
       ->willReturn('550');
diff --git a/tests/src/Unit/RouteSubscriberTest.php b/tests/src/Unit/RouteSubscriberTest.php
index 12c966b..0764b11 100644
--- a/tests/src/Unit/RouteSubscriberTest.php
+++ b/tests/src/Unit/RouteSubscriberTest.php
@@ -18,7 +18,7 @@ class RouteSubscriberTest extends UnitTestCase {
   /**
    * The subject under test.
    *
-   * @var \Drupal\oembed_lazyload\Routing\RouteSubscriber
+   * @var RouteSubscriber
    */
   protected $instance;
 
@@ -36,21 +36,15 @@ class RouteSubscriberTest extends UnitTestCase {
    */
   public function testAlterRoutes() {
 
-    $route = $this->getMockBuilder(Route::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $route = $this->createMock(Route::class);
 
-    $route_collection = $this->getMockBuilder(RouteCollection::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $route_collection = $this->createMock(RouteCollection::class);
 
     $route_collection->method('get')
       ->with('media.oembed_iframe')
       ->willReturn($route);
 
-    $event = $this->getMockBuilder(RouteBuildEvent::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $event = $this->createMock(RouteBuildEvent::class);
 
     $event->method('getRouteCollection')
       ->willReturn($route_collection);
