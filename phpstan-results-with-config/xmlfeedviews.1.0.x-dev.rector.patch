diff --git a/src/Plugin/views/row/XmlFeedViewsFields.php b/src/Plugin/views/row/XmlFeedViewsFields.php
index 8aa9913..d050ccf 100644
--- a/src/Plugin/views/row/XmlFeedViewsFields.php
+++ b/src/Plugin/views/row/XmlFeedViewsFields.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\xmlfeedviews\Plugin\views\row;
 
+use Drupal\Core\Render\Markup;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\row\RowPluginBase;
 use Drupal\Core\Url;
@@ -114,7 +116,7 @@ class XmlFeedViewsFields extends RowPluginBase {
             ) {
                 $field_id = isset($fieldArray[1][0]) ? $fieldArray[1][0] : '';
 
-                /** @var \Drupal\Core\Render\Markup $data */
+                /** @var Markup $data */
                 $data = $this->getField($index, trim($field_id));
                 if (is_object($data)) {
                     $data = $data->__toString();
@@ -137,7 +139,7 @@ class XmlFeedViewsFields extends RowPluginBase {
      * @param $field_id
      *   The ID assigned to the required field in the display.
      *
-     * @return string|null|\Drupal\Component\Render\MarkupInterface
+     * @return string|null|MarkupInterface
      *   An empty string if there is no style plugin, or the field ID is empty.
      *   NULL if the field value is empty. If neither of these conditions apply,
      *   a MarkupInterface object containing the rendered field value.
diff --git a/src/Tests/Views/XmlFeedViewsTest.php b/src/Tests/Views/XmlFeedViewsTest.php
index 91d585a..e27fa8c 100644
--- a/src/Tests/Views/XmlFeedViewsTest.php
+++ b/src/Tests/Views/XmlFeedViewsTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\xmlfeedviews\Tests\Views;
 
+use Drupal\user\Entity\User;
+use Drupal\node\NodeStorage;
 use Drupal;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Component\Utility\Html;
@@ -34,7 +36,7 @@ class XmlFeedViewsTest extends ViewTestBase {
     /**
      * The admin user
      *
-     * @var \Drupal\user\Entity\User
+     * @var User
      */
     public $adminUser;
 
@@ -43,7 +45,7 @@ class XmlFeedViewsTest extends ViewTestBase {
     /**
      * The entity storage for nodes.
      *
-     * @var \Drupal\node\NodeStorage
+     * @var NodeStorage
      */
     protected $nodeStorage;
 
@@ -78,7 +80,7 @@ class XmlFeedViewsTest extends ViewTestBase {
         // Retrieve node default view.
         $actual_json = $this->drupalGet("callback/nodes");
         $expected = [];
-        $this->assertIdentical($actual_json, json_encode($expected), 'The expected JSON output was found.');
+        $this->assertSame($actual_json, json_encode($expected), 'The expected JSON output was found.');
 
         // Create some published nodes of type article and page.
         $this->createNodes(5, "article", $expected);
@@ -92,11 +94,11 @@ class XmlFeedViewsTest extends ViewTestBase {
 
         // Check the view result using serializer service.
         $expected_string = json_encode($expected);
-        $this->assertIdentical($actual_json, $expected_string);
+        $this->assertSame($actual_json, $expected_string);
 
         // Re-test as anonymous user.
         $actual_json = $this->drupalGet("callback/nodes");
-        $this->assertIdentical($actual_json, $expected_string);
+        $this->assertSame($actual_json, $expected_string);
     }
 
     /**
@@ -130,7 +132,7 @@ class XmlFeedViewsTest extends ViewTestBase {
             ];
             $node = Node::create($settings);
             $status = $node->save();
-            $this->assertEqual($status, SAVED_NEW, new FormattableMarkup('Created node %title.', ['%title' => $node->label()]));
+            $this->assertEquals($status, SAVED_NEW, new FormattableMarkup('Created node %title.', ['%title' => $node->label()]));
 
             $result = [
                 'value' => $type->id() . ' ' . $i,
diff --git a/xmlfeedviews.info.yml b/xmlfeedviews.info.yml
index 36c8440..279e2bd 100644
--- a/xmlfeedviews.info.yml
+++ b/xmlfeedviews.info.yml
@@ -2,7 +2,6 @@ name: XML Feed Views
 type: module
 description: XML feed for views
 package: Custom
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 dependencies:
   - views
