diff --git a/src/Controller/TablefieldController.php b/src/Controller/TablefieldController.php
index 48e2e40..16cb1bd 100644
--- a/src/Controller/TablefieldController.php
+++ b/src/Controller/TablefieldController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tablefield\Controller;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ -16,14 +17,14 @@ class TablefieldController {
   /**
    * Check access to the export page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account to check.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check the permission for view.
    * @param string $field_name
    *   The machine name of the field to load.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The Access check results.
    */
   public function access(AccountInterface $account, EntityInterface $entity, $field_name) {
@@ -42,7 +43,7 @@ class TablefieldController {
   /**
    * Menu callback to export a table as a CSV.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity object.
    * @param string $field_name
    *   The machine name of the field to load.
@@ -51,7 +52,7 @@ class TablefieldController {
    * @param string $delta
    *   The field delta to load.
    *
-   * @return \Symfony\Component\HttpFoundation\StreamedResponse
+   * @return StreamedResponse
    *   A streamed response containing tablefield data as a CSV.
    */
   public function exportCsv(EntityInterface $entity, $field_name, $langcode, $delta) {
diff --git a/src/Element/Tablefield.php b/src/Element/Tablefield.php
index 4b0ba45..eb4302a 100644
--- a/src/Element/Tablefield.php
+++ b/src/Element/Tablefield.php
@@ -235,7 +235,7 @@ class Tablefield extends FormElement {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public static function ajaxCallbackRebuild(array $form, FormStateInterface $form_state) {
@@ -263,7 +263,7 @@ class Tablefield extends FormElement {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public static function submitCallbackRebuild(array $form, FormStateInterface $form_state) {
diff --git a/src/Plugin/Field/FieldFormatter/TablefieldFormatter.php b/src/Plugin/Field/FieldFormatter/TablefieldFormatter.php
index 07aa1ce..1730c5b 100644
--- a/src/Plugin/Field/FieldFormatter/TablefieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/TablefieldFormatter.php
@@ -29,14 +29,14 @@ class TablefieldFormatter extends FormatterBase implements ContainerFactoryPlugi
   /**
    * Drupal\Core\Session\AccountProxy definition.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
diff --git a/src/Plugin/Field/FieldWidget/TablefieldWidget.php b/src/Plugin/Field/FieldWidget/TablefieldWidget.php
index f07f8ea..71f0dd9 100644
--- a/src/Plugin/Field/FieldWidget/TablefieldWidget.php
+++ b/src/Plugin/Field/FieldWidget/TablefieldWidget.php
@@ -29,14 +29,14 @@ class TablefieldWidget extends WidgetBase implements ContainerFactoryPluginInter
   /**
    * Drupal\Core\Session\AccountProxy definition.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;
 
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
diff --git a/src/TableValue.php b/src/TableValue.php
index d8ff5b2..4cd6d31 100644
--- a/src/TableValue.php
+++ b/src/TableValue.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tablefield;
 
+use Drupal\tablefield\Plugin\Field\FieldType\TablefieldItem;
 use Drupal\Core\TypedData\TypedData;
 
 /**
@@ -13,7 +14,7 @@ class TableValue extends TypedData {
    * {@inheritdoc}
    */
   public function getValue() {
-    /** @var \Drupal\tablefield\Plugin\Field\FieldType\TablefieldItem $item */
+    /** @var TablefieldItem $item */
     $item = $this->getParent();
     $value = '';
     if (isset($item->value)) {
diff --git a/tablefield_required/tablefield_required.module b/tablefield_required/tablefield_required.module
index 2e9554f..098420d 100755
--- a/tablefield_required/tablefield_required.module
+++ b/tablefield_required/tablefield_required.module
@@ -12,7 +12,7 @@ use Drupal\Core\Form\FormStateInterface;
  * Implements hook_form_FORM_ID_alter().
  */
 function tablefield_required_form_field_config_edit_form_alter(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\field\Entity\FieldConfig $field_config */
+  /** @var FieldConfig $field_config */
   $field_config = $form_state->getFormObject()->getEntity();
   $field_type = $field_config->getType();
 
@@ -62,11 +62,11 @@ function tablefield_required_form_field_config_edit_form_alter(array &$form, For
  *
  * @param string $entity_type
  *   The entity type.
- * @param \Drupal\field\Entity\FieldConfig $config
+ * @param FieldConfig $config
  *   The field configuration entity.
  * @param array $form
  *   The complete form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  */
 function tablefield_required_form_builder($entity_type, FieldConfig $config, array &$form, FormStateInterface $form_state) {
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 81badd8..ba6bb87 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\tablefield\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -27,14 +28,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->user = $this->drupalCreateUser(['administer site configuration']);
diff --git a/tests/src/Functional/TableValueFieldTest.php b/tests/src/Functional/TableValueFieldTest.php
index e28bba9..7e26e39 100644
--- a/tests/src/Functional/TableValueFieldTest.php
+++ b/tests/src/Functional/TableValueFieldTest.php
@@ -26,7 +26,7 @@ class TableValueFieldTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalLogin($this->rootUser);
@@ -56,7 +56,7 @@ class TableValueFieldTest extends BrowserTestBase {
     $edit['field_table[0][tablefield][table][2][1]'] = 'Row 2-2';
     $edit['field_table[0][tablefield][table][2][2]'] = 'Row 2-3';
 
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $assert_session = $this->assertSession();
     $assert_session->pageTextContains('Article Llamas are cool has been created.');
 
diff --git a/tests/src/Functional/TablefieldCreationTrait.php b/tests/src/Functional/TablefieldCreationTrait.php
index 76250d5..b3d656b 100644
--- a/tests/src/Functional/TablefieldCreationTrait.php
+++ b/tests/src/Functional/TablefieldCreationTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\tablefield\Functional;
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 
@@ -50,7 +51,7 @@ trait TablefieldCreationTrait {
     ]);
     $field_config->save();
 
-    /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
+    /** @var EntityDisplayRepositoryInterface $display_repository */
     $display_repository = \Drupal::service('entity_display.repository');
     $display_repository->getFormDisplay('node', $type_name)
       ->setComponent($name, [
