diff --git a/src/Form/DateFormatDeleteForm.php b/src/Form/DateFormatDeleteForm.php
index 4ae0ddf..1b553e3 100644
--- a/src/Form/DateFormatDeleteForm.php
+++ b/src/Form/DateFormatDeleteForm.php
@@ -16,14 +16,14 @@ class DateFormatDeleteForm extends EntityDeleteForm {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Constructs an DateFormatDeleteForm object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(DateFormatterInterface $date_formatter) {
@@ -45,7 +45,7 @@ class DateFormatDeleteForm extends EntityDeleteForm {
   public function getQuestion() {
     return t('Are you sure you want to delete the format %name : %format?', [
       '%name' => $this->entity->label(),
-      '%format' => $this->dateFormatter->format(REQUEST_TIME, $this->entity->id()),
+      '%format' => $this->dateFormatter->format(\Drupal::time()->getRequestTime(), $this->entity->id()),
     ]);
   }
 
diff --git a/src/Form/DateFormatFormBase.php b/src/Form/DateFormatFormBase.php
index 5883e83..d5f0b25 100644
--- a/src/Form/DateFormatFormBase.php
+++ b/src/Form/DateFormatFormBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\intl_date\Form;
 
+use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Config\Entity\ConfigEntityStorageInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Language\LanguageInterface;
@@ -16,21 +17,21 @@ abstract class DateFormatFormBase extends EntityForm {
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\Core\Config\Entity\ConfigEntityInterface
+   * @var ConfigEntityInterface
    */
   protected $entity;
 
   /**
    * The date format storage.
    *
-   * @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface
+   * @var ConfigEntityStorageInterface
    */
   protected $dateFormatStorage;
 
   /**
    * Constructs a new date format form.
    *
-   * @param \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $date_format_storage
+   * @param ConfigEntityStorageInterface $date_format_storage
    *   The date format storage.
    */
   public function __construct(ConfigEntityStorageInterface $date_format_storage) {
diff --git a/src/IntlDateFormatListBuilder.php b/src/IntlDateFormatListBuilder.php
index 784af79..e0484c8 100644
--- a/src/IntlDateFormatListBuilder.php
+++ b/src/IntlDateFormatListBuilder.php
@@ -30,7 +30,7 @@ class IntlDateFormatListBuilder extends ConfigEntityListBuilder {
       return [];
     }
     $row['label'] = $entity->label();
-    $row['pattern'] = IntlDate::format(REQUEST_TIME, $entity->get('pattern'));
+    $row['pattern'] = IntlDate::format(\Drupal::time()->getRequestTime(), $entity->get('pattern'));
     return $row + parent::buildRow($entity);
   }
 
diff --git a/src/Plugin/Field/FieldFormatter/IntlTimestampFormatter.php b/src/Plugin/Field/FieldFormatter/IntlTimestampFormatter.php
index 82adf5b..87af4f8 100644
--- a/src/Plugin/Field/FieldFormatter/IntlTimestampFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/IntlTimestampFormatter.php
@@ -61,7 +61,7 @@ class IntlTimestampFormatter extends TimestampFormatter {
     foreach ($this->dateFormatStorage->loadMultiple() as $machine_name => $value) {
       $date_formats[$machine_name] = $this->t('@name format: @date', [
         '@name' => $value->label(),
-        '@date' => $this->formatTimestamp(REQUEST_TIME, $machine_name),
+        '@date' => $this->formatTimestamp(\Drupal::time()->getRequestTime(), $machine_name),
       ]);
     }
 
