diff --git a/src/Controller/TemplateLoadAjaxController.php b/src/Controller/TemplateLoadAjaxController.php
index 1119abf..1fbbe6d 100644
--- a/src/Controller/TemplateLoadAjaxController.php
+++ b/src/Controller/TemplateLoadAjaxController.php
@@ -15,14 +15,14 @@ class TemplateLoadAjaxController implements ContainerInjectionInterface {
   /**
    * Twig UI's immutable registry.
    *
-   * @var \Drupal\Core\DestructableInterface
+   * @var DestructableInterface
    */
   protected $theme;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\DestructableInterface $immutable_registry
+   * @param DestructableInterface $immutable_registry
    *   Twig UI's immutable registry.
    */
   public function __construct(DestructableInterface $immutable_registry) {
diff --git a/src/Entity/TwigTemplateForm.php b/src/Entity/TwigTemplateForm.php
index 6d3a240..78f7690 100644
--- a/src/Entity/TwigTemplateForm.php
+++ b/src/Entity/TwigTemplateForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\twig_ui\Entity;
 
+use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityInterface;
@@ -23,59 +24,59 @@ class TwigTemplateForm extends EntityForm {
   /**
    * The Twig UI Template Manager service.
    *
-   * @var \Drupal\twig_ui\TemplateManager
+   * @var TemplateManager
    */
   protected $templateManager;
 
   /**
    * The entityTypeManager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a TwigTemplate Form object.
    *
-   * @param \Drupal\twig_ui\TemplateManager $template_manager
+   * @param TemplateManager $template_manager
    *   The Twig UI Template Manager service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entityTypeManager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(TemplateManager $template_manager, EntityTypeManagerInterface $entityTypeManager, ModuleHandlerInterface $module_handler, MessengerInterface $messenger, ConfigFactoryInterface $config_factory, AccountProxyInterface $current_user) {
@@ -106,7 +107,7 @@ class TwigTemplateForm extends EntityForm {
    *
    * @param array $form
    *   A nested array form elements comprising the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index a126218..22ca0de 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -20,14 +20,14 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The Twig UI Template Manager service.
    *
-   * @var \Drupal\twig_ui\TemplateManager
+   * @var TemplateManager
    */
   protected $templateManager;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -41,11 +41,11 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Constructs a SettingsForm object.
    *
-   * @param \Drupal\twig_ui\TemplateManager $template_manager
+   * @param TemplateManager $template_manager
    *   The Twig UI Template Manager service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(TemplateManager $template_manager, MessengerInterface $messenger, ModuleHandlerInterface $module_handler) {
diff --git a/src/Form/TemplatesDirectoryPrepareForm.php b/src/Form/TemplatesDirectoryPrepareForm.php
index ce2c427..a28aaac 100644
--- a/src/Form/TemplatesDirectoryPrepareForm.php
+++ b/src/Form/TemplatesDirectoryPrepareForm.php
@@ -16,23 +16,23 @@ class TemplatesDirectoryPrepareForm extends FormBase {
   /**
    * The Template Manager.
    *
-   * @var \Drupal\twig_ui\TemplateManager
+   * @var TemplateManager
    */
   protected $templateManager;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\twig_ui\TemplateManager $template_manager
+   * @param TemplateManager $template_manager
    *   The Template Manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(TemplateManager $template_manager, MessengerInterface $messenger) {
diff --git a/src/Form/TwigTemplateListForm.php b/src/Form/TwigTemplateListForm.php
index be8c4b7..facdceb 100644
--- a/src/Form/TwigTemplateListForm.php
+++ b/src/Form/TwigTemplateListForm.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\twig_ui\Form;
 
+use Drupal\twig_ui\TemplateManager;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Symfony\Component\HttpFoundation\ParameterBag;
+use Drupal\Core\Config\Entity\Query\Query;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -17,23 +21,23 @@ class TwigTemplateListForm extends FormBase {
   /**
    * The Template Manager.
    *
-   * @var \Drupal\twig_ui\TemplateManager
+   * @var TemplateManager
    */
   protected $templateManager;
 
   /**
    * The entityTypeManager.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $twigUiTemplateStorage;
 
   /**
    * Class constructor.
    *
-   * @param Drupal\twig_ui\TemplateManagerInterface $template_manager
+   * @param TemplateManagerInterface $template_manager
    *   The Template Manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entityTypeManager.
    */
   public function __construct(TemplateManagerInterface $template_manager, EntityTypeManagerInterface $entity_type_manager) {
@@ -62,7 +66,7 @@ class TwigTemplateListForm extends FormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Symfony\Component\HttpFoundation\ParameterBag */
+    /** @var ParameterBag */
     $parameters = $this->getRequest()->query;
 
     $form = [];
@@ -181,7 +185,7 @@ class TwigTemplateListForm extends FormBase {
       ],
     ];
 
-    /** @var \Drupal\Core\Config\Entity\Query\Query */
+    /** @var Query */
     $entity_query = $this->twigUiTemplateStorage->getQuery();
     $entity_query->pager(25);
     $entity_query->tableSort($header);
@@ -268,7 +272,7 @@ class TwigTemplateListForm extends FormBase {
 
     // If 'Apply' submit, then retain query string parameters.
     if ($triggering_element == 'apply') {
-      /** @var \Symfony\Component\HttpFoundation\ParameterBag */
+      /** @var ParameterBag */
       $parameters = $this->getRequest()->query;
 
       $values = $form_state->getValues();
diff --git a/src/TemplateManager.php b/src/TemplateManager.php
index 2c3a6a4..744f4eb 100644
--- a/src/TemplateManager.php
+++ b/src/TemplateManager.php
@@ -18,50 +18,50 @@ class TemplateManager implements TemplateManagerInterface {
   /**
    * The entityTypeManager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * An interface for helpers that operate on files and stream wrappers.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The stream wrapper manager service.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs a TemplateManager object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entityTypeManager.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   An interface for helpers that operate on files and stream wrappers.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ThemeHandlerInterface $theme_handler, FileSystemInterface $file_system, StreamWrapperManagerInterface $stream_wrapper_manager, ConfigFactoryInterface $config_factory) {
diff --git a/src/TemplateManagerInterface.php b/src/TemplateManagerInterface.php
index 6a354d6..e0de522 100644
--- a/src/TemplateManagerInterface.php
+++ b/src/TemplateManagerInterface.php
@@ -79,7 +79,7 @@ interface TemplateManagerInterface {
   /**
    * Syncs Twig UI template entities with template files in the file system.
    *
-   * @param \Drupal\twig_ui\Entity\TwigTemplate $template
+   * @param TwigTemplate $template
    *   A Twig UI template.
    */
   public function syncTemplateFiles(TwigTemplate $template);
@@ -87,7 +87,7 @@ interface TemplateManagerInterface {
   /**
    * Deletes all Twig UI template files.
    *
-   * @param \Drupal\twig_ui\Entity\TwigTemplate $template
+   * @param TwigTemplate $template
    *   A Twig UI template.
    */
   public function deleteTemplateFiles(TwigTemplate $template);
@@ -95,7 +95,7 @@ interface TemplateManagerInterface {
   /**
    * Writes a template file to the filesystem.
    *
-   * @param \Drupal\twig_ui\Entity\TwigTemplate $template
+   * @param TwigTemplate $template
    *   A Twig UI template.
    * @param string $theme
    *   The machine name of a theme.
@@ -105,7 +105,7 @@ interface TemplateManagerInterface {
   /**
    * Deletes a template file from the filesystem.
    *
-   * @param \Drupal\twig_ui\Entity\TwigTemplate $template
+   * @param TwigTemplate $template
    *   A Twig UI template.
    * @param string $theme
    *   The machine name of a theme.
@@ -128,7 +128,7 @@ interface TemplateManagerInterface {
   /**
    * Generates the template file's path.
    *
-   * @param Drupal\twig_ui\Entity\TwigTemplate $template
+   * @param TwigTemplate $template
    *   A Twig UI template.
    * @param string $theme
    *   The machine name of a theme.
@@ -141,7 +141,7 @@ interface TemplateManagerInterface {
   /**
    * Generates the template file's name.
    *
-   * @param Drupal\twig_ui\Entity\TwigTemplate $template
+   * @param TwigTemplate $template
    *   A Twig UI template.
    * @param bool $extension
    *   Whether or not the file extension (.html.twig) be included.
diff --git a/tests/src/Functional/SettingsTest.php b/tests/src/Functional/SettingsTest.php
index 3673a0a..5b94469 100644
--- a/tests/src/Functional/SettingsTest.php
+++ b/tests/src/Functional/SettingsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -14,14 +15,14 @@ class SettingsTest extends BrowserTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * The test non-administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $nonAdminUser;
 
diff --git a/tests/src/Functional/TemplateFormTest.php b/tests/src/Functional/TemplateFormTest.php
index 090958d..f6f74ee 100644
--- a/tests/src/Functional/TemplateFormTest.php
+++ b/tests/src/Functional/TemplateFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\twig_ui\Entity\TwigTemplate;
 
@@ -15,14 +16,14 @@ class TemplateFormTest extends BrowserTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * The test non-administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $nonAdminUser;
 
@@ -308,11 +309,11 @@ class TemplateFormTest extends BrowserTestBase {
     $element = $page
       ->findField('label')
       ->getValue();
-    $this->assertEqual($element, 'Clone of Node');
+    $this->assertEquals($element, 'Clone of Node');
     $element = $page
       ->findField('id')
       ->getValue();
-    $this->assertEqual($element, 'clone_node');
+    $this->assertEquals($element, 'clone_node');
     $this->assertTrue($page->hasUncheckedField('themes[grant]'));
 
     // Change theme suggestion and select a theme so clone can be saved.
diff --git a/tests/src/Functional/TemplateLoadAjaxControllerTest.php b/tests/src/Functional/TemplateLoadAjaxControllerTest.php
index ae94f25..03f0699 100644
--- a/tests/src/Functional/TemplateLoadAjaxControllerTest.php
+++ b/tests/src/Functional/TemplateLoadAjaxControllerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -16,14 +17,14 @@ class TemplateLoadAjaxControllerTest extends BrowserTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * The test non-administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $nonAdminUser;
 
@@ -114,7 +115,7 @@ class TemplateLoadAjaxControllerTest extends BrowserTestBase {
     $this->assertJson($controller_return);
     $controller_return = json_decode($controller_return);
 
-    $block_module_path = drupal_get_path('module', 'block');
+    $block_module_path = \Drupal::service('extension.list.module')->getPath('block');
     $template_path = $block_module_path . '/templates/block.html.twig';
     $abs_template_path = \Drupal::service('file_system')->realpath($template_path);
     $template_code = file_get_contents($abs_template_path);
diff --git a/tests/src/Functional/TemplateManagerTest.php b/tests/src/Functional/TemplateManagerTest.php
index 10b7e7d..2cdf096 100644
--- a/tests/src/Functional/TemplateManagerTest.php
+++ b/tests/src/Functional/TemplateManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\Functional;
 
+use Drupal\twig_ui\TemplateManager;
 use Drupal\Core\StreamWrapper\PublicStream;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\twig_ui\Entity\TwigTemplate;
@@ -33,7 +34,7 @@ class TemplateManagerTest extends BrowserTestBase {
   /**
    * The Twig UI Template Manager service.
    *
-   * @var \Drupal\twig_ui\TemplateManager
+   * @var TemplateManager
    */
   protected $templateManager;
 
@@ -126,9 +127,9 @@ class TemplateManagerTest extends BrowserTestBase {
   public function testGetTemplate() {
     $this->createTemplates();
     $template = $this->templateManager->getTemplate('node');
-    $this->assertEqual($template->label(), 'Node');
+    $this->assertEquals($template->label(), 'Node');
     $template = $this->templateManager->getTemplate('node_page');
-    $this->assertEqual($template->label(), 'Node - Page');
+    $this->assertEquals($template->label(), 'Node - Page');
     $template = $this->templateManager->getTemplate('invalid');
     $this->assertNull($template);
   }
@@ -140,10 +141,10 @@ class TemplateManagerTest extends BrowserTestBase {
    */
   public function testTemplateExists() {
     $this->createTemplates();
-    $this->assertEqual($this->templateManager->templateExists('node', 'stark'), 'node');
-    $this->assertEqual($this->templateManager->templateExists('node', 'grant'), 'node');
+    $this->assertEquals($this->templateManager->templateExists('node', 'stark'), 'node');
+    $this->assertEquals($this->templateManager->templateExists('node', 'grant'), 'node');
     $this->assertFalse($this->templateManager->templateExists('node', 'perkins'));
-    $this->assertEqual($this->templateManager->templateExists('node__page', 'grant'), 'node_page');
+    $this->assertEquals($this->templateManager->templateExists('node__page', 'grant'), 'node_page');
     $this->assertFalse($this->templateManager->templateExists('node__page', 'stark'));
     $this->assertFalse($this->templateManager->templateExists('node__page', 'perkins'));
     $this->assertFalse($this->templateManager->templateExists('node__event', 'grant'));
@@ -228,7 +229,7 @@ class TemplateManagerTest extends BrowserTestBase {
     $this->assertStringEqualsFile('public://twig_ui/grant/node--news.html.twig', '{{ content }}' . PHP_EOL . 'Test template 1');
     $this->assertFileExists('public://twig_ui/perkins/node--news.html.twig');
     $this->assertStringEqualsFile('public://twig_ui/perkins/node--news.html.twig', '{{ content }}' . PHP_EOL . 'Test template 1');
-    $this->assertFileNotExists('public://twig_ui/stark/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--news.html.twig');
 
     // Test contents of files written to file system.
     $template2 = TwigTemplate::create([
@@ -260,14 +261,14 @@ class TemplateManagerTest extends BrowserTestBase {
     $this->templateManager->syncTemplateFiles($template);
 
     $this->assertFileExists('public://twig_ui/stark/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/stark/node--news-page.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--news-page.html.twig');
     $this->assertFileExists('public://twig_ui/grant/node--news-page.html.twig');
     $this->assertFileExists('public://twig_ui/perkins/node--news-page.html.twig');
-    $this->assertFileNotExists('public://twig_ui/stark/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--event.html.twig');
 
     // Test change in selected themes.
     $template->set('original', clone $template);
@@ -275,14 +276,14 @@ class TemplateManagerTest extends BrowserTestBase {
     $this->templateManager->syncTemplateFiles($template);
 
     $this->assertFileExists('public://twig_ui/stark/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/stark/node--news-page.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--news-page.html.twig');
     $this->assertFileExists('public://twig_ui/grant/node--news-page.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--news-page.html.twig');
-    $this->assertFileNotExists('public://twig_ui/stark/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--news-page.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--event.html.twig');
 
     // Test change in template code.
     $template->set('original', clone $template);
@@ -300,9 +301,9 @@ class TemplateManagerTest extends BrowserTestBase {
     $this->template3->enable();
     $this->template3->save();
 
-    $this->assertFileNotExists('public://twig_ui/stark/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--event.html.twig');
     $this->assertFileExists('public://twig_ui/grant/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--event.html.twig');
 
     $this->assertStringEqualsFile('public://twig_ui/grant/node--event.html.twig', '{{ content }}' . PHP_EOL . 'Test template 3 (originally disabled)');
   }
@@ -321,15 +322,15 @@ class TemplateManagerTest extends BrowserTestBase {
 
     $this->templateManager->deleteTemplateFiles($this->template);
 
-    $this->assertFileNotExists('public://twig_ui/stark/node.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node.html.twig');
     $this->assertFileExists('public://twig_ui/grant/node--page.html.twig');
 
     $this->templateManager->deleteTemplateFiles($this->template2);
 
-    $this->assertFileNotExists('public://twig_ui/stark/node.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--page.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--page.html.twig');
   }
 
   /**
@@ -339,10 +340,10 @@ class TemplateManagerTest extends BrowserTestBase {
    */
   public function testGetDirectoryPathByTheme() {
     $this->createTemplates();
-    $this->assertEqual($this->templateManager->getDirectoryPathByTheme('grant'), 'public://twig_ui/grant');
-    $this->assertEqual($this->templateManager->getDirectoryPathByTheme('grant', FALSE), PublicStream::basePath() . '/twig_ui/grant');
-    $this->assertEqual($this->templateManager->getDirectoryPathByTheme('perkins'), 'public://twig_ui/perkins');
-    $this->assertEqual($this->templateManager->getDirectoryPathByTheme('perkins', FALSE), PublicStream::basePath() . '/twig_ui/perkins');
+    $this->assertEquals($this->templateManager->getDirectoryPathByTheme('grant'), 'public://twig_ui/grant');
+    $this->assertEquals($this->templateManager->getDirectoryPathByTheme('grant', FALSE), PublicStream::basePath() . '/twig_ui/grant');
+    $this->assertEquals($this->templateManager->getDirectoryPathByTheme('perkins'), 'public://twig_ui/perkins');
+    $this->assertEquals($this->templateManager->getDirectoryPathByTheme('perkins', FALSE), PublicStream::basePath() . '/twig_ui/perkins');
   }
 
   /**
@@ -352,7 +353,7 @@ class TemplateManagerTest extends BrowserTestBase {
    */
   public function testGetTemplatePath() {
     $this->createTemplates();
-    $this->assertEqual($this->templateManager->getTemplatePath($this->template2, 'grant'), 'public://twig_ui/grant/node--page.html.twig');
+    $this->assertEquals($this->templateManager->getTemplatePath($this->template2, 'grant'), 'public://twig_ui/grant/node--page.html.twig');
   }
 
   /**
@@ -362,7 +363,7 @@ class TemplateManagerTest extends BrowserTestBase {
    */
   public function testGetTemplateFileName() {
     $this->createTemplates();
-    $this->assertEqual($this->templateManager->getTemplateFileName($this->template2), 'node--page.html.twig');
+    $this->assertEquals($this->templateManager->getTemplateFileName($this->template2), 'node--page.html.twig');
   }
 
   /**
@@ -377,16 +378,16 @@ class TemplateManagerTest extends BrowserTestBase {
 
     // Execute ::prepareTemplatesDirectory().
     $return = $this->templateManager->prepareTemplatesDirectory();
-    $this->assertEqual($return, TRUE);
+    $this->assertEquals($return, TRUE);
     $this->assertFileExists('public://twig_ui/.htaccess');
 
     // Attempt to create templates directory when public:// is unwritable.
     $this->deleteTemplatesDirectory();
     $this->makeUnwritable('public://');
-    $this->assertDirectoryNotIsWritable('public://');
+    $this->assertDirectoryIsNotWritable('public://');
 
     $return = $this->templateManager->prepareTemplatesDirectory();
-    $this->assertEqual($return, 'Unable to create templates directory');
+    $this->assertEquals($return, 'Unable to create templates directory');
   }
 
 }
diff --git a/tests/src/Functional/TemplatesDirectoryPrepareFormTest.php b/tests/src/Functional/TemplatesDirectoryPrepareFormTest.php
index ed7b99b..80d5d0f 100644
--- a/tests/src/Functional/TemplatesDirectoryPrepareFormTest.php
+++ b/tests/src/Functional/TemplatesDirectoryPrepareFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\twig_ui\Traits\HtaccessTestTrait;
 use Drupal\twig_ui\TemplateManager;
@@ -18,14 +19,14 @@ class TemplatesDirectoryPrepareFormTest extends BrowserTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * The test non-administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $nonAdminUser;
 
diff --git a/tests/src/Functional/TwigTemplateListFormTest.php b/tests/src/Functional/TwigTemplateListFormTest.php
index 8a8f33d..a4ec2e4 100644
--- a/tests/src/Functional/TwigTemplateListFormTest.php
+++ b/tests/src/Functional/TwigTemplateListFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\twig_ui\Entity\TwigTemplate;
 
@@ -15,14 +16,14 @@ class TwigTemplateListFormTest extends BrowserTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * The test non-administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $nonAdminUser;
 
diff --git a/tests/src/FunctionalJavascript/SettingsFormTest.php b/tests/src/FunctionalJavascript/SettingsFormTest.php
index 44dfd9d..22ac5e7 100644
--- a/tests/src/FunctionalJavascript/SettingsFormTest.php
+++ b/tests/src/FunctionalJavascript/SettingsFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 
 /**
@@ -14,7 +15,7 @@ class SettingsFormTest extends WebDriverTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/FunctionalJavascript/TemplateFormTest.php b/tests/src/FunctionalJavascript/TemplateFormTest.php
index 8bd7c54..0f601ee 100644
--- a/tests/src/FunctionalJavascript/TemplateFormTest.php
+++ b/tests/src/FunctionalJavascript/TemplateFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 
 /**
@@ -14,14 +15,14 @@ class TemplateFormTest extends WebDriverTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * The test template editor user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $templateEditorUser;
 
@@ -129,7 +130,7 @@ class TemplateFormTest extends WebDriverTestBase {
     $assert_session->assertWaitOnAjaxRequest();
 
     // Test loading of the block template file for the Grant theme.
-    $block_module_path = drupal_get_path('module', 'block');
+    $block_module_path = \Drupal::service('extension.list.module')->getPath('block');
     $template_path = $block_module_path . '/templates/block.html.twig';
 
     // Verify the file path.
@@ -200,7 +201,7 @@ class TemplateFormTest extends WebDriverTestBase {
     // Verify default configuration in data-codemirror attribute.
     $element = $page->find('xpath', '//textarea[@name="template_code"]');
     $data_codemirror = $element->getAttribute('data-codemirror');
-    $this->assertEqual($data_codemirror, '{"mode":"text\/x-twig","lineNumbers":true}');
+    $this->assertEquals($data_codemirror, '{"mode":"text\/x-twig","lineNumbers":true}');
 
     // Verify selected default behavior.
     $assert_session->elementExists('css', '.form-item-template-code .cme-toolbar');
diff --git a/tests/src/Kernel/InstallTest.php b/tests/src/Kernel/InstallTest.php
index 8ab1e1d..033a008 100644
--- a/tests/src/Kernel/InstallTest.php
+++ b/tests/src/Kernel/InstallTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\Kernel;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\twig_ui\Entity\TwigTemplate;
 use Drupal\twig_ui\TemplateManager;
@@ -52,7 +53,7 @@ class InstallTest extends KernelTestBase {
     $query->condition('w.message', 'Preparation of the Twig UI templates directory resulted in the following error: @message', '=');
     $results = $query->execute()->fetchAll();
 
-    $this->assertEqual($results[0]->message, 'Preparation of the Twig UI templates directory resulted in the following error: @message');
+    $this->assertEquals($results[0]->message, 'Preparation of the Twig UI templates directory resulted in the following error: @message');
   }
 
   /**
@@ -72,7 +73,7 @@ class InstallTest extends KernelTestBase {
         'twig_ui',
       ]);
 
-    $this->assertDirectoryNotExists($directory);
+    $this->assertDirectoryDoesNotExist($directory);
   }
 
   /**
@@ -122,7 +123,7 @@ class InstallTest extends KernelTestBase {
         'twig_ui',
       ]);
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface */
+    /** @var ConfigFactoryInterface */
     $config_factory = \Drupal::service('config.factory');
     $config = $config_factory->getEditable('twig_ui.settings');
     $data = $config->get();
diff --git a/tests/src/Kernel/RequirementsTest.php b/tests/src/Kernel/RequirementsTest.php
index 9f72439..3f09807 100644
--- a/tests/src/Kernel/RequirementsTest.php
+++ b/tests/src/Kernel/RequirementsTest.php
@@ -36,15 +36,15 @@ class RequirementsTest extends KernelTestBase {
 
     // Check requirements after install.
     $requirements = twig_ui_requirements('runtime');
-    $this->assertEqual($requirements['twig_ui_templates']['severity'], REQUIREMENT_OK);
-    $this->assertEqual($requirements['twig_ui_templates']['value'], 'Twig UI templates directory exists and is protected.');
+    $this->assertEquals($requirements['twig_ui_templates']['severity'], REQUIREMENT_OK);
+    $this->assertEquals($requirements['twig_ui_templates']['value'], 'Twig UI templates directory exists and is protected.');
 
     // Remove the templates directory and verify requirements error.
     $this->deleteTemplatesDirectory();
 
     $requirements = twig_ui_requirements('runtime');
-    $this->assertEqual($requirements['twig_ui_templates']['severity'], REQUIREMENT_ERROR);
-    $this->assertEqual($requirements['twig_ui_templates']['description'], 'The Twig UI templates directory does not exist: ' . $template_manager::DIRECTORY_PATH . '.');
+    $this->assertEquals($requirements['twig_ui_templates']['severity'], REQUIREMENT_ERROR);
+    $this->assertEquals($requirements['twig_ui_templates']['description'], 'The Twig UI templates directory does not exist: ' . $template_manager::DIRECTORY_PATH . '.');
 
     // Add back templates directory but remove .htaccess and verify
     // requirements error.
@@ -52,8 +52,8 @@ class RequirementsTest extends KernelTestBase {
     $this->deleteHtaccessFile();
 
     $requirements = twig_ui_requirements('runtime');
-    $this->assertEqual($requirements['twig_ui_templates']['severity'], REQUIREMENT_ERROR);
-    $this->assertEqual($requirements['twig_ui_templates']['description'], 'The Twig UI templates directory is unprotected: ' . $template_manager::DIRECTORY_PATH . '.');
+    $this->assertEquals($requirements['twig_ui_templates']['severity'], REQUIREMENT_ERROR);
+    $this->assertEquals($requirements['twig_ui_templates']['description'], 'The Twig UI templates directory is unprotected: ' . $template_manager::DIRECTORY_PATH . '.');
   }
 
 }
diff --git a/tests/src/Traits/HtaccessTestTrait.php b/tests/src/Traits/HtaccessTestTrait.php
index 6e6f862..6b0930a 100644
--- a/tests/src/Traits/HtaccessTestTrait.php
+++ b/tests/src/Traits/HtaccessTestTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\twig_ui\Traits;
 
+use Drupal\twig_ui\TemplateManager;
 /**
  * Helper methods for htaccess-related tests.
  */
@@ -54,7 +55,7 @@ trait HtaccessTestTrait {
   /**
    * Helper method to return template manager service.
    *
-   * @return \Drupal\twig_ui\TemplateManager
+   * @return TemplateManager
    *   The template manager.
    */
   protected function htaccessTestTraitTemplateManager() {
@@ -69,7 +70,7 @@ trait HtaccessTestTrait {
   /**
    * Helper method to return file system service.
    *
-   * @return \Drupal\twig_ui\TemplateManager
+   * @return TemplateManager
    *   The template manager.
    */
   protected function htaccessTestTraitFileSystem() {
diff --git a/twig_ui.install b/twig_ui.install
index 5cc7978..4e33382 100644
--- a/twig_ui.install
+++ b/twig_ui.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Config\Config;
 /**
  * @file
  * This module provides install, uninstall, and update functions.
@@ -75,12 +77,12 @@ function twig_ui_uninstall() {
  * Add 'enabled' status to existing Twig UI templates.
  */
 function twig_ui_update_8101() {
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface */
+  /** @var ConfigFactoryInterface */
   $config_factory = \Drupal::service('config.factory');
 
   $templates = \Drupal::service('twig_ui.template_manager')->getTemplates();
   foreach ($templates as $template) {
-    /** @var \Drupal\Core\Config\Config */
+    /** @var Config */
     $config = $config_factory->getEditable('twig_ui.template.' . $template->id());
     $data = $config->get();
     $data['status'] = TRUE;
@@ -93,7 +95,7 @@ function twig_ui_update_8101() {
  * Set default config values for new config options.
  */
 function twig_ui_update_8102() {
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface */
+  /** @var ConfigFactoryInterface */
   $config_factory = \Drupal::service('config.factory');
   $config = $config_factory->getEditable('twig_ui.settings');
   $data = $config->get();
