diff --git a/sir_trevor.module b/sir_trevor.module
index 6573730..9cf5034 100644
--- a/sir_trevor.module
+++ b/sir_trevor.module
@@ -1,4 +1,5 @@
 <?php
+use Drupal\sir_trevor\LibraryInfoBuilder;
 use Drupal\sir_trevor\Plugin\SirTrevorBlockPlugin;
 use Drupal\sir_trevor\Plugin\SirTrevorPlugin;
 use Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface;
@@ -19,7 +20,7 @@ function sir_trevor_theme($existing, $type, $theme, $path) {
           'data' => [],
           'entity' => NULL,
         ],
-        'path' => drupal_get_path('module', $plugin->getDefiningModule()),
+        'path' => \Drupal::service('extension.list.module')->getPath($plugin->getDefiningModule()),
         'template' => $plugin->getTemplate(),
       ];
     }
@@ -36,7 +37,7 @@ function sir_trevor_theme($existing, $type, $theme, $path) {
  */
 function sir_trevor_library_info_alter(&$libraries, $extension) {
   $libraryBuilder = \Drupal::service('sir_trevor.libraries.info.builder');
-  /** @var \Drupal\sir_trevor\LibraryInfoBuilder $libraryBuilder */
+  /** @var LibraryInfoBuilder $libraryBuilder */
   $libraryInfo = $libraryBuilder->getLibraryInfo();
 
   if (!empty($libraryInfo[$extension])) {
diff --git a/src/ComplexDataValueProcessingEvent.php b/src/ComplexDataValueProcessingEvent.php
index 1817e44..b10ded6 100644
--- a/src/ComplexDataValueProcessingEvent.php
+++ b/src/ComplexDataValueProcessingEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\sir_trevor;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class ComplexDataValueProcessingEvent
diff --git a/src/Controller/IconsController.php b/src/Controller/IconsController.php
index dec55c5..7241e37 100644
--- a/src/Controller/IconsController.php
+++ b/src/Controller/IconsController.php
@@ -11,18 +11,18 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\Response;
 
 class IconsController implements ContainerInjectionInterface {
-  /** @var \Drupal\Component\Plugin\PluginManagerInterface */
+  /** @var PluginManagerInterface */
   private $blockPluginManager;
-  /** @var \Drupal\sir_trevor\IconSvgMergerInterface */
+  /** @var IconSvgMergerInterface */
   private $iconSvgMerger;
-  /** @var \Drupal\Core\Extension\ModuleHandlerInterface */
+  /** @var ModuleHandlerInterface */
   private $moduleHandler;
 
   /**
    * IconsController constructor.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $blockPluginManager
-   * @param \Drupal\sir_trevor\IconSvgMergerInterface $iconSvgMerger
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param PluginManagerInterface $blockPluginManager
+   * @param IconSvgMergerInterface $iconSvgMerger
+   * @param ModuleHandlerInterface $moduleHandler
    */
   public function __construct(PluginManagerInterface $blockPluginManager, IconSvgMergerInterface $iconSvgMerger, ModuleHandlerInterface $moduleHandler) {
     $this->blockPluginManager = $blockPluginManager;
diff --git a/src/Controller/ImageStorage.php b/src/Controller/ImageStorage.php
index 5884de7..820c57e 100644
--- a/src/Controller/ImageStorage.php
+++ b/src/Controller/ImageStorage.php
@@ -10,7 +10,7 @@ use Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser;
 class ImageStorage extends ControllerBase {
 
   /**
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The Ajax response.
    */
   public function save() {
@@ -27,7 +27,7 @@ class ImageStorage extends ControllerBase {
       $extension = $extensionGuesser->guess($mime);
       $filename = "public://contentbuilder/{$baseFileName}-{$id}.{$extension}";
 
-      $file = file_save_data($image, $filename);
+      $file = \Drupal::service('file.repository')->writeData($image, $filename);
       $images[$id] = $file;
     }
 
diff --git a/src/EventDispatchingDataProcessor.php b/src/EventDispatchingDataProcessor.php
index 3851417..5369bd3 100644
--- a/src/EventDispatchingDataProcessor.php
+++ b/src/EventDispatchingDataProcessor.php
@@ -9,13 +9,13 @@ use Symfony\Component\EventDispatcher\EventDispatcherInterface;
  * @package Drupal\sir_trevor
  */
 class EventDispatchingDataProcessor {
-  /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface */
+  /** @var EventDispatcherInterface */
   private $eventDispatcher;
 
   /**
    * EventDispatchingDataProcessor constructor.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    */
   public function __construct(EventDispatcherInterface $eventDispatcher) {
     $this->eventDispatcher = $eventDispatcher;
@@ -66,14 +66,14 @@ class EventDispatchingDataProcessor {
 
   /**
    * @param \stdClass $dataValue
-   * @return \Drupal\sir_trevor\ComplexDataValueProcessingEvent
+   * @return ComplexDataValueProcessingEvent
    */
   private function dispatchProcessingComplexDataValueEvent(\stdClass $dataValue) {
     $event = new ComplexDataValueProcessingEvent($dataValue->type, $dataValue);
     $eventName = ComplexDataValueProcessingEvent::class;
 
     /** @var ComplexDataValueProcessingEvent $event */
-    $event = $this->eventDispatcher->dispatch($eventName, $event);
+    $event = $this->eventDispatcher->dispatch($event, $eventName);
     return $event;
   }
 
diff --git a/src/Form/GlobalConfigForm.php b/src/Form/GlobalConfigForm.php
index 09c9375..44a3c7b 100644
--- a/src/Form/GlobalConfigForm.php
+++ b/src/Form/GlobalConfigForm.php
@@ -9,7 +9,7 @@ use Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
 class GlobalConfigForm extends ConfigFormBase {
-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface */
+  /** @var SirTrevorPluginManagerInterface */
   private $sirTrevorPluginManager;
 
   /**
diff --git a/src/IconSvgMerger.php b/src/IconSvgMerger.php
index 0025864..1693eb3 100644
--- a/src/IconSvgMerger.php
+++ b/src/IconSvgMerger.php
@@ -6,7 +6,7 @@ use Psr\Log\LoggerInterface;
 
 class IconSvgMerger implements IconSvgMergerInterface {
 
-  /** @var \Psr\Log\LoggerInterface */
+  /** @var LoggerInterface */
   private $logger;
 
   public function __construct(LoggerInterface $logger) {
diff --git a/src/LibraryInfoBuilder.php b/src/LibraryInfoBuilder.php
index 5cf35c2..d93ab80 100644
--- a/src/LibraryInfoBuilder.php
+++ b/src/LibraryInfoBuilder.php
@@ -7,13 +7,13 @@ use Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface;
 
 class LibraryInfoBuilder {
 
-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface */
+  /** @var SirTrevorPluginManagerInterface */
   private $blockPluginManager;
   /** @var array */
   private $libraryInfo = [];
 
   /**
-   * @param \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface $blockPluginManager
+   * @param SirTrevorPluginManagerInterface $blockPluginManager
    */
   public function __construct(SirTrevorPluginManagerInterface $blockPluginManager) {
     $this->blockPluginManager = $blockPluginManager;
diff --git a/src/Plugin/Field/FieldWidget/SirTrevor.php b/src/Plugin/Field/FieldWidget/SirTrevor.php
index 456a878..192cac5 100644
--- a/src/Plugin/Field/FieldWidget/SirTrevor.php
+++ b/src/Plugin/Field/FieldWidget/SirTrevor.php
@@ -23,7 +23,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
  * )
  */
 class SirTrevor extends WidgetBase implements ContainerFactoryPluginInterface {
-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface  */
+  /** @var SirTrevorPluginManagerInterface  */
   private $pluginManager;
 
   /**
@@ -41,13 +41,13 @@ class SirTrevor extends WidgetBase implements ContainerFactoryPluginInterface {
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface $pluginManager
+   * @param SirTrevorPluginManagerInterface $pluginManager
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, SirTrevorPluginManagerInterface $pluginManager) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $third_party_settings);
@@ -184,7 +184,7 @@ class SirTrevor extends WidgetBase implements ContainerFactoryPluginInterface {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/SirTrevorPluginManager.php b/src/Plugin/SirTrevorPluginManager.php
index f72a124..0583855 100644
--- a/src/Plugin/SirTrevorPluginManager.php
+++ b/src/Plugin/SirTrevorPluginManager.php
@@ -8,9 +8,9 @@ use Drupal\Core\Plugin\Discovery\YamlDiscovery;
 
 class SirTrevorPluginManager implements SirTrevorPluginManagerInterface {
 
-  /** @var \Drupal\Core\Plugin\Discovery\YamlDiscovery */
+  /** @var YamlDiscovery */
   private $discovery;
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface */
+  /** @var ConfigFactoryInterface */
   private $configFactory;
 
   public function __construct(ModuleHandlerInterface $moduleHandler, ConfigFactoryInterface $configFactory) {
diff --git a/src/Plugin/SirTrevorPluginManagerInterface.php b/src/Plugin/SirTrevorPluginManagerInterface.php
index 0db93e8..78d00db 100644
--- a/src/Plugin/SirTrevorPluginManagerInterface.php
+++ b/src/Plugin/SirTrevorPluginManagerInterface.php
@@ -6,18 +6,18 @@ use Drupal\Component\Plugin\PluginManagerInterface;
 
 interface SirTrevorPluginManagerInterface extends PluginManagerInterface {
   /**
-   * @return \Drupal\sir_trevor\Plugin\SirTrevorPlugin[]
+   * @return SirTrevorPlugin[]
    */
   public function createInstances();
 
   /**
-   * @return \Drupal\sir_trevor\Plugin\SirTrevorPlugin[]
+   * @return SirTrevorPlugin[]
    *  All known SirTrevorPlugins of the type 'block'.
    */
   public function getBlocks();
 
   /**
-   * @return \Drupal\sir_trevor\Plugin\SirTrevorPlugin[]
+   * @return SirTrevorPlugin[]
    */
   public function getEnabledBlocks();
 }
diff --git a/tests/src/Unit/AnnotationAsserter.php b/tests/src/Unit/AnnotationAsserter.php
index 471f47a..716ea76 100644
--- a/tests/src/Unit/AnnotationAsserter.php
+++ b/tests/src/Unit/AnnotationAsserter.php
@@ -19,11 +19,11 @@ trait AnnotationAsserter {
    */
   protected function assertClassAnnotationsMatch(array $expectedAnnotations, $classToTest) {
     $annotations = $this->getClassAnnotations($classToTest);
-    \PHPUnit_Framework_Assert::assertEquals($expectedAnnotations, $annotations);
+    \PHPUnit\Framework\Assert::assertEquals($expectedAnnotations, $annotations);
   }
 
   /**
-   * @return \Doctrine\Common\Annotations\DocParser
+   * @return DocParser
    */
   protected function createDocParser() {
     $docParser = new DocParser();
diff --git a/tests/src/Unit/FieldFormatter/EventDispatchingDataProcessorTest.php b/tests/src/Unit/FieldFormatter/EventDispatchingDataProcessorTest.php
index 80bcfa1..ecf3b17 100644
--- a/tests/src/Unit/FieldFormatter/EventDispatchingDataProcessorTest.php
+++ b/tests/src/Unit/FieldFormatter/EventDispatchingDataProcessorTest.php
@@ -12,7 +12,7 @@ use Drupal\Tests\sir_trevor\Unit\TestDoubles\EventDispatcherSpy;
  *
  * @package Drupal\sir_trevor\Tests\Unit\FieldFormatter
  */
-class EventDispatchingDataProcessorTest extends \PHPUnit_Framework_TestCase {
+class EventDispatchingDataProcessorTest extends \PHPUnit\Framework\TestCase {
   /** @var EventDispatcherSpy */
   private $dispatcher;
   /** @var EventDispatchingDataProcessor */
diff --git a/tests/src/Unit/FieldFormatter/SirTrevorTest.php b/tests/src/Unit/FieldFormatter/SirTrevorTest.php
index ee27571..2c9b0f2 100644
--- a/tests/src/Unit/FieldFormatter/SirTrevorTest.php
+++ b/tests/src/Unit/FieldFormatter/SirTrevorTest.php
@@ -25,7 +25,7 @@ class SirTrevorTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     \Drupal::setContainer(new Container());
diff --git a/tests/src/Unit/FieldType/SirTrevorTest.php b/tests/src/Unit/FieldType/SirTrevorTest.php
index 4d82750..1dcbbf8 100644
--- a/tests/src/Unit/FieldType/SirTrevorTest.php
+++ b/tests/src/Unit/FieldType/SirTrevorTest.php
@@ -20,7 +20,7 @@ class SirTrevorTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     \Drupal::setContainer(new Container());
diff --git a/tests/src/Unit/FieldWidget/SirTrevorTest.php b/tests/src/Unit/FieldWidget/SirTrevorTest.php
index 25f8ed3..9d20402 100644
--- a/tests/src/Unit/FieldWidget/SirTrevorTest.php
+++ b/tests/src/Unit/FieldWidget/SirTrevorTest.php
@@ -35,7 +35,7 @@ class SirTrevorTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->pluginManagerMock = new SirTrevorPluginManagerMock();
 
@@ -290,7 +290,7 @@ class SirTrevorTest extends UnitTestCase {
   }
 
   /**
-   * @param \Drupal\Core\Field\FieldItemList $items
+   * @param FieldItemList $items
    * @return array
    */
   private function call__FormElement(FieldItemList $items) {
@@ -303,7 +303,7 @@ class SirTrevorTest extends UnitTestCase {
 
   /**
    * @param $field_name
-   * @return \Drupal\Core\Field\FieldItemList
+   * @return FieldItemList
    */
   private function getFieldItemListMock($field_name) {
     $items = new FieldItemList(new DataDefinition([]), 1);
diff --git a/tests/src/Unit/IconSvgMergerTest.php b/tests/src/Unit/IconSvgMergerTest.php
index 4d342fb..77d337e 100644
--- a/tests/src/Unit/IconSvgMergerTest.php
+++ b/tests/src/Unit/IconSvgMergerTest.php
@@ -10,7 +10,7 @@ use Symfony\Component\HttpKernel\Tests\Logger;
  * @package Drupal\sir_trevor\Tests
  * @group SirTrevor
  */
-class IconSvgMergerTest extends \PHPUnit_Framework_TestCase {
+class IconSvgMergerTest extends \PHPUnit\Framework\TestCase {
   /** @var Logger */
   protected $logger;
 
diff --git a/tests/src/Unit/IconsControllerTest.php b/tests/src/Unit/IconsControllerTest.php
index 7fbb430..5c8debf 100644
--- a/tests/src/Unit/IconsControllerTest.php
+++ b/tests/src/Unit/IconsControllerTest.php
@@ -15,7 +15,7 @@ define('DRUPAL_ROOT','ROOT');
  * @package Drupal\sir_trevor\Tests
  * @group SirTrevor
  */
-class IconsControllerTest extends \PHPUnit_Framework_TestCase {
+class IconsControllerTest extends \PHPUnit\Framework\TestCase {
   /** @var SirTrevorPluginManagerMock */
   private $blockPluginManager;
   /** @var IconSvgMergerMock */
diff --git a/tests/src/Unit/LibraryInfoBuilderTest.php b/tests/src/Unit/LibraryInfoBuilderTest.php
index 4980fa5..4870422 100644
--- a/tests/src/Unit/LibraryInfoBuilderTest.php
+++ b/tests/src/Unit/LibraryInfoBuilderTest.php
@@ -11,7 +11,7 @@ use Drupal\Tests\sir_trevor\Unit\TestDoubles\SirTrevorPluginManagerMock;
 /**
  * @group SirTrevor
  */
-class LibraryInfoBuilderTest extends \PHPUnit_Framework_TestCase {
+class LibraryInfoBuilderTest extends \PHPUnit\Framework\TestCase {
   /** @var SirTrevorPluginManagerMock */
   private $blockPluginManager;
   /** @var LibraryInfoBuilder */
diff --git a/tests/src/Unit/Plugin/SirTrevorBlockPluginTest.php b/tests/src/Unit/Plugin/SirTrevorBlockPluginTest.php
index 971e19a..583cf6b 100644
--- a/tests/src/Unit/Plugin/SirTrevorBlockPluginTest.php
+++ b/tests/src/Unit/Plugin/SirTrevorBlockPluginTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\sir_trevor\Tests\Unit\Plugin;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\sir_trevor\Plugin\SirTrevorBlock;
 use Drupal\Tests\UnitTestCase;
 
@@ -19,10 +20,10 @@ class SirTrevorBlockPluginTest extends UnitTestCase {
 
   /**
    * @test
-   * @expectedException \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @expectedExceptionMessage "some_id" must define "template".
    */
   public function definitionWithoutTemplate() {
+    $this->expectException(InvalidPluginDefinitionException::class);
+    $this->expectExceptionMessage('"some_id" must define "template".');
     new SirTrevorBlock($this->getDefinitionBase());
   }
 }
diff --git a/tests/src/Unit/Plugin/SirTrevorPluginManagerTest.php b/tests/src/Unit/Plugin/SirTrevorPluginManagerTest.php
index 9467292..305c3ca 100644
--- a/tests/src/Unit/Plugin/SirTrevorPluginManagerTest.php
+++ b/tests/src/Unit/Plugin/SirTrevorPluginManagerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\sir_trevor\Tests\Unit\Plugin;
 
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\FileCache\FileCacheFactory;
 use Drupal\sir_trevor\Plugin\SirTrevorBlock;
 use Drupal\sir_trevor\Plugin\SirTrevorBlockPlugin;
@@ -17,7 +19,7 @@ use Drupal\Tests\UnitTestCase;
  * @group SirTrevor
  */
 class SirTrevorPluginManagerTest extends UnitTestCase {
-  /** @var \Drupal\Tests\sir_trevor\Unit\Plugin\TestDoubles\ModuleHandlerMock */
+  /** @var ModuleHandlerMock */
   protected $moduleHandler;
   /** @var ConfigFactorySpy */
   protected $configFactory;
@@ -25,7 +27,7 @@ class SirTrevorPluginManagerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     FileCacheFactory::setPrefix('prefix');
     $this->moduleHandler = new ModuleHandlerMock();
     $directories = [
@@ -48,10 +50,10 @@ class SirTrevorPluginManagerTest extends UnitTestCase {
 
   /**
    * @test
-   * @expectedException \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @expectedExceptionMessage The "unknown" plugin does not exist.
    */
   public function getUnknownDefinition() {
+    $this->expectException(PluginNotFoundException::class);
+    $this->expectExceptionMessage('The "unknown" plugin does not exist.');
     $this->getSut()->getDefinition('unknown');
   }
 
@@ -80,10 +82,10 @@ class SirTrevorPluginManagerTest extends UnitTestCase {
 
   /**
    * @test
-   * @expectedException \Drupal\Component\Plugin\Exception\PluginException
-   * @expectedExceptionMessage The "unknown" plugin does not exist.
    */
   public function createInstanceWithInvalidPlugin() {
+    $this->expectException(PluginException::class);
+    $this->expectExceptionMessage('The "unknown" plugin does not exist.');
     $this->getSut()->createInstance('unknown');
   }
 
@@ -177,7 +179,7 @@ class SirTrevorPluginManagerTest extends UnitTestCase {
   }
 
   /**
-   * @return \Drupal\sir_trevor\Plugin\SirTrevorPluginManager
+   * @return SirTrevorPluginManager
    */
   private function getSut() {
     if (!$this->configFactory->has('sir_trevor.global')) {
diff --git a/tests/src/Unit/TestDoubles/ComplexDataValueProcessingEventSubscriberMock.php b/tests/src/Unit/TestDoubles/ComplexDataValueProcessingEventSubscriberMock.php
index 7788a5f..bbf5c90 100644
--- a/tests/src/Unit/TestDoubles/ComplexDataValueProcessingEventSubscriberMock.php
+++ b/tests/src/Unit/TestDoubles/ComplexDataValueProcessingEventSubscriberMock.php
@@ -37,7 +37,7 @@ class ComplexDataValueProcessingEventSubscriberMock implements EventSubscriberIn
   }
 
   /**
-   * @param \Drupal\sir_trevor\ComplexDataValueProcessingEvent $event
+   * @param ComplexDataValueProcessingEvent $event
    */
   public function processEvent(ComplexDataValueProcessingEvent $event) {
     if (isset($this->replacementResults[$event->getType()])) {
diff --git a/tests/src/Unit/TestDoubles/ConfigFactoryMock.php b/tests/src/Unit/TestDoubles/ConfigFactoryMock.php
index 4d0bdb8..f809443 100644
--- a/tests/src/Unit/TestDoubles/ConfigFactoryMock.php
+++ b/tests/src/Unit/TestDoubles/ConfigFactoryMock.php
@@ -10,7 +10,7 @@ class ConfigFactoryMock extends ConfigFactoryDummy {
 
   /**
    * @param string $name
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    */
   public function set($name, ImmutableConfig $config) {
     $this->configs[$name] = $config;
diff --git a/tests/src/Unit/TestDoubles/EventDispatcherDummy.php b/tests/src/Unit/TestDoubles/EventDispatcherDummy.php
index e197c7f..abe8422 100644
--- a/tests/src/Unit/TestDoubles/EventDispatcherDummy.php
+++ b/tests/src/Unit/TestDoubles/EventDispatcherDummy.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\Tests\sir_trevor\Unit\TestDoubles;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
diff --git a/tests/src/Unit/TestDoubles/EventDispatcherMock.php b/tests/src/Unit/TestDoubles/EventDispatcherMock.php
index bccc471..5864c25 100644
--- a/tests/src/Unit/TestDoubles/EventDispatcherMock.php
+++ b/tests/src/Unit/TestDoubles/EventDispatcherMock.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\Tests\sir_trevor\Unit\TestDoubles;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class EventDispatcherMock
@@ -11,11 +11,11 @@ use Symfony\Component\EventDispatcher\Event;
  */
 abstract class EventDispatcherMock extends EventDispatcherDummy {
 
-  /** @var \Drupal\Tests\sir_trevor\Unit\TestDoubles\ComplexDataValueProcessingEventSubscriberMock */
+  /** @var ComplexDataValueProcessingEventSubscriberMock */
   private $subscriber;
 
   /**
-   * @param \Drupal\Tests\sir_trevor\Unit\TestDoubles\ComplexDataValueProcessingEventSubscriberMock $subscriber
+   * @param ComplexDataValueProcessingEventSubscriberMock $subscriber
    */
   public function setSubscriber(ComplexDataValueProcessingEventSubscriberMock $subscriber) {
     $this->subscriber = $subscriber;
diff --git a/tests/src/Unit/TestDoubles/EventDispatcherSpy.php b/tests/src/Unit/TestDoubles/EventDispatcherSpy.php
index 63adb29..9d14a47 100644
--- a/tests/src/Unit/TestDoubles/EventDispatcherSpy.php
+++ b/tests/src/Unit/TestDoubles/EventDispatcherSpy.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\Tests\sir_trevor\Unit\TestDoubles;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class EventDispatcherSpy
diff --git a/tests/src/Unit/TestDoubles/SirTrevorPluginManagerMock.php b/tests/src/Unit/TestDoubles/SirTrevorPluginManagerMock.php
index e79b415..44acda3 100644
--- a/tests/src/Unit/TestDoubles/SirTrevorPluginManagerMock.php
+++ b/tests/src/Unit/TestDoubles/SirTrevorPluginManagerMock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sir_trevor\Unit\TestDoubles;
 
+use Drupal\sir_trevor\Plugin\SirTrevorPlugin;
 use Drupal\sir_trevor\Plugin\SirTrevorBlock;
 use Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface;
 
@@ -10,9 +11,9 @@ class SirTrevorPluginManagerMock implements SirTrevorPluginManagerInterface {
   protected $instances = [];
   /** @var array */
   protected $definitions = [];
-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPlugin [] */
+  /** @var SirTrevorPlugin[] */
   private $blocks = [];
-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPlugin [] */
+  /** @var SirTrevorPlugin[] */
   private $enabledBlocks = [];
 
   /**
@@ -79,7 +80,7 @@ class SirTrevorPluginManagerMock implements SirTrevorPluginManagerInterface {
   }
 
   /**
-   * @param \Drupal\sir_trevor\Plugin\SirTrevorPlugin[] $blocks
+   * @param SirTrevorPlugin[] $blocks
    */
   public function setBlocks(array $blocks) {
     $this->blocks = $blocks;
@@ -93,7 +94,7 @@ class SirTrevorPluginManagerMock implements SirTrevorPluginManagerInterface {
   }
 
   /**
-   * @param \Drupal\sir_trevor\Plugin\SirTrevorPlugin[] $blocks
+   * @param SirTrevorPlugin[] $blocks
    */
   public function setEnabledBlocks(array $blocks) {
     $this->enabledBlocks = $blocks;
