diff --git a/community_tasks.module b/community_tasks.module
index 659b8ac..8d78c06 100644
--- a/community_tasks.module
+++ b/community_tasks.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Form\FormState;
+use Drupal\migrate\MigrateSkipRowException;
 /*
  * @file
  *
@@ -19,7 +21,7 @@ use Drupal\community_tasks\Element\TaskState;
  *
  * Simplify the node form.
  */
-function community_tasks_form_node_community_task_edit_form_alter(&$form, Drupal\Core\Form\FormState $form_state) {
+function community_tasks_form_node_community_task_edit_form_alter(&$form, FormState $form_state) {
   $form['revision_information']['#access'] = FALSE;
 
   if ($form_state->getFormObject()->getEntity()->isNew()) {
@@ -140,6 +142,6 @@ function community_tasks_migrate_d7_menu_links_prepare_row($row, $source, $migra
  */
 function community_tasks_migrate_d7_node_type_prepare_row($row, $source, $migration) {
   if ($row->getSourceProperty('type') == 'community_task') {
-    throw new Drupal\migrate\MigrateSkipRowException("Community Task node type already installed");
+    throw new MigrateSkipRowException("Community Task node type already installed");
   }
-}
\ No newline at end of file
+}
diff --git a/src/Form/CTaskActionBaseForm.php b/src/Form/CTaskActionBaseForm.php
index 869ad65..803e2ce 100644
--- a/src/Form/CTaskActionBaseForm.php
+++ b/src/Form/CTaskActionBaseForm.php
@@ -72,7 +72,7 @@ abstract class CTaskActionBaseForm extends FormBase {
     $event = new GenericEvent($node);
     $class = explode('\\', get_called_class());
     $key = end($class);
-    $this->eventDispatcher->dispatch('community_tasks.'.strtolower($key), $event);
+    $this->eventDispatcher->dispatch($event, 'community_tasks.'.strtolower($key));
   }
 
 
diff --git a/src/MigrationSubscriber.php b/src/MigrationSubscriber.php
index 58f7e6d..de9ea88 100755
--- a/src/MigrationSubscriber.php
+++ b/src/MigrationSubscriber.php
@@ -13,7 +13,7 @@ use Drupal\Core\Extension\ModuleHandler;
 class MigrationSubscriber implements EventSubscriberInterface {
 
   /**
-   * @var Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   private $moduleHandler;
 
@@ -34,7 +34,7 @@ class MigrationSubscriber implements EventSubscriberInterface {
 
 
   /**
-   * @param Drupal\migrate\Event\MigratePreRowSaveEvent $event
+   * @param MigratePreRowSaveEvent $event
    */
   public function migratePreRowSave(MigratePreRowSaveEvent $event) {
     $migration = $event->getMigration();
