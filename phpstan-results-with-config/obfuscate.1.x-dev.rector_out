modules/contrib/obfuscate/obfuscate.module
modules/contrib/obfuscate/src/Form/ObfuscateConfigForm.php
modules/contrib/obfuscate/src/ObfuscateMail.php
modules/contrib/obfuscate/src/ObfuscateMailFactory.php
modules/contrib/obfuscate/src/ObfuscateMailHtmlEntity.php
modules/contrib/obfuscate/src/ObfuscateMailInterface.php
modules/contrib/obfuscate/src/ObfuscateMailROT13.php
modules/contrib/obfuscate/src/Plugin/Field/FieldFormatter/ObfuscateFieldFormatter.php
modules/contrib/obfuscate/src/Plugin/Filter/ObfuscateMail.php
modules/contrib/obfuscate/src/TwigExtension.php
modules/contrib/obfuscate/tests/src/Functional/ObfuscateTest.php

6 files with changes
====================

1) modules/contrib/obfuscate/tests/src/Functional/ObfuscateTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\obfuscate\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\field\Entity\FieldStorageConfig;

@@ @@
   /**
    * A user with permission to create articles.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;

@@ @@
   /**
    * Setup.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalCreateContentType(['type' => 'article']);
@@ @@

   /**
    * Helper function for testObfuscateFieldFormatter().
+   * @doesNotPerformAssertions
    */
   public function testObfuscateFieldFormatter() {
     // @todo implement
@@ @@

   /**
    * Helper function for testObfuscateFilter().
+   * @doesNotPerformAssertions
    */
   public function testObfuscateFilter() {
     // @todo implement
@@ @@

   /**
    * Helper function for testObfuscateTwigExtension().
+   * @doesNotPerformAssertions
    */
   public function testObfuscateTwigExtension() {
     // @todo implement
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/obfuscate/src/TwigExtension.php:48

    ---------- begin diff ----------
@@ @@
    *   The email obfuscated as a link.
    */
   public function obfuscateMail($mail) {
-    /** @var \Drupal\obfuscate\ObfuscateMailInterface $obfuscateMail */
+    /** @var ObfuscateMailInterface $obfuscateMail */
     $obfuscateMail = \Drupal::service('obfuscate_mail');
     return $obfuscateMail->getObfuscatedLink($mail);
   }
@@ @@
    *   The text and email obfuscated as a link.
    */
   public function obfuscate($mail, $text) {
-    /** @var \Drupal\obfuscate\ObfuscateMailInterface $obfuscateMail */
+    /** @var ObfuscateMailInterface $obfuscateMail */
     $obfuscateMail = \Drupal::service('obfuscate_mail');
     return $obfuscateMail->getObfuscatedLink($mail, [], $text);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/obfuscate/src/Plugin/Filter/ObfuscateMail.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\obfuscate\Plugin\Filter;

+use Drupal\Core\Render\RendererInterface;
 use Drupal\filter\FilterProcessResult;
 use Drupal\filter\Plugin\FilterBase;
 use Drupal\Component\Utility\Html;
@@ @@
   private function output($name, $domain, $contents = '', array $headers = [], array $vars = []) {
     /** @var \Drupal\obfuscate\ObfuscateMail $obfuscateMail */
     $obfuscateMail = \Drupal::service('obfuscate_mail');
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
     $output = $obfuscateMail->getObfuscatedLink($name . '@' . $domain);
     // @todo implement spamspan coverage of contents and headers.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/obfuscate/src/Plugin/Field/FieldFormatter/ObfuscateFieldFormatter.php:84

    ---------- begin diff ----------
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/obfuscate/src/ObfuscateMailFactory.php:16

    ---------- begin diff ----------
@@ @@
    * @param string $method
    *   Email obfuscation method.
    *
-   * @return \Drupal\obfuscate\ObfuscateMailInterface
+   * @return ObfuscateMailInterface
    *   Email obfuscation method.
    */
   public static function get($method) {

-    /** @var \Drupal\obfuscate\ObfuscateMailInterface $obfuscateMail */
+    /** @var ObfuscateMailInterface $obfuscateMail */
     $obfuscateMail = NULL;

     switch ($method) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/obfuscate/src/ObfuscateMail.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\obfuscate\ObfuscateMailInterface definition.
    *
-   * @var \Drupal\obfuscate\ObfuscateMailInterface
+   * @var ObfuscateMailInterface
    */
   private $obfuscateMailMethod;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 6 files have been changed by Rector                                       

