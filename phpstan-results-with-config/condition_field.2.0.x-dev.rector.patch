diff --git a/condition_field.install b/condition_field.install
index e83420f..8067802 100644
--- a/condition_field.install
+++ b/condition_field.install
@@ -31,7 +31,7 @@ function condition_field_update_8001(&$sandbox) {
   foreach ($field_definitions as $entity_type_id => $field_list) {
     foreach ($field_list as $field_name => $field_definition) {
       foreach ($field_definition['bundles'] as $bundle) {
-        /** @var \Drupal\field\Entity\FieldConfig $field_config */
+        /** @var FieldConfig $field_config */
         $field_config = FieldConfig::loadByName($entity_type_id, $bundle, $field_name);
         $field_config->setSetting('enabled_plugins', $active_conditions);
         $field_config->save();
diff --git a/src/Plugin/Field/FieldFormatter/ConditionFieldFormatter.php b/src/Plugin/Field/FieldFormatter/ConditionFieldFormatter.php
index b639652..d357218 100644
--- a/src/Plugin/Field/FieldFormatter/ConditionFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ConditionFieldFormatter.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\condition_field\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Condition\ConditionManager;
+use Drupal\Core\Condition\ConditionInterface;
 use Drupal\Core\Executable\ExecutableManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemInterface;
@@ -27,14 +29,14 @@ class ConditionFieldFormatter extends FormatterBase implements ContainerFactoryP
   /**
    * The condition plugin manager.
    *
-   * @var \Drupal\Core\Condition\ConditionManager
+   * @var ConditionManager
    */
   protected $manager;
 
   /**
    * The context repository service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
 
@@ -80,7 +82,7 @@ class ConditionFieldFormatter extends FormatterBase implements ContainerFactoryP
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return array
@@ -90,7 +92,7 @@ class ConditionFieldFormatter extends FormatterBase implements ContainerFactoryP
     $summaries = [];
     $conditions = $item->conditions;
     foreach ($conditions as $condition_id => $config) {
-      /** @var \Drupal\Core\Condition\ConditionInterface $condition */
+      /** @var ConditionInterface $condition */
       $condition = $this->manager->createInstance($condition_id, isset($config) ? $config : []);
       $label = $condition->getPluginDefinition()['label'];
       $summary = $condition->summary();
diff --git a/src/Plugin/Field/FieldType/ConditionFieldItem.php b/src/Plugin/Field/FieldType/ConditionFieldItem.php
index 565db30..59606ff 100644
--- a/src/Plugin/Field/FieldType/ConditionFieldItem.php
+++ b/src/Plugin/Field/FieldType/ConditionFieldItem.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\condition_field\Plugin\Field\FieldType;
 
+use Drupal\Core\Condition\ConditionInterface;
 use Drupal\Component\Utility\DiffArray;
 use Drupal\condition_field\Plugin\ConditionFieldData;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -99,7 +100,7 @@ class ConditionFieldItem extends FieldItemBase {
       if (in_array($condition_id, self::SKIP_CONDITION_IDS)) {
         continue;
       }
-      /** @var \Drupal\Core\Condition\ConditionInterface $condition */
+      /** @var ConditionInterface $condition */
       $condition = $manager->createInstance($condition_id, []);
 
       $condition_plugins[$condition_id] = $condition->getPluginDefinition()['label'];
@@ -178,7 +179,7 @@ class ConditionFieldItem extends FieldItemBase {
     $manager = \Drupal::service('plugin.manager.condition');
     $condition_configurations = [];
     foreach ($config_values as $condition_id => $values) {
-      /** @var \Drupal\Core\Condition\ConditionInterface $condition */
+      /** @var ConditionInterface $condition */
       $condition = $manager->createInstance($condition_id, $values);
       $changed_config = FALSE;
       // Look for configuration settings.
diff --git a/src/Plugin/Field/FieldWidget/ConditionFieldDefaultWidget.php b/src/Plugin/Field/FieldWidget/ConditionFieldDefaultWidget.php
index 48c61d0..9900d02 100644
--- a/src/Plugin/Field/FieldWidget/ConditionFieldDefaultWidget.php
+++ b/src/Plugin/Field/FieldWidget/ConditionFieldDefaultWidget.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\condition_field\Plugin\Field\FieldWidget;
 
+use Drupal\Core\Condition\ConditionManager;
+use Drupal\Core\Condition\ConditionInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\condition_field\Plugin\Field\FieldType\ConditionFieldItem;
 use Drupal\Core\Executable\ExecutableManagerInterface;
@@ -30,21 +32,21 @@ class ConditionFieldDefaultWidget extends WidgetBase {
   /**
    * The condition plugin manager.
    *
-   * @var \Drupal\Core\Condition\ConditionManager
+   * @var ConditionManager
    */
   protected $manager;
 
   /**
    * The context repository service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
 
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $language;
 
@@ -129,7 +131,7 @@ class ConditionFieldDefaultWidget extends WidgetBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $condition_config
    *   An associative array containing the saved values.
@@ -165,7 +167,7 @@ class ConditionFieldDefaultWidget extends WidgetBase {
       if (!isset($enabled_plugins[$condition_id]) || $enabled_plugins[$condition_id] === FALSE || in_array($condition_id, $skip_condition_ids)) {
         continue;
       }
-      /** @var \Drupal\Core\Condition\ConditionInterface $condition */
+      /** @var ConditionInterface $condition */
       $condition = $this->manager->createInstance($condition_id, isset($condition_config[$condition_id]) ? $condition_config[$condition_id] : []);
       $form_state->set(['conditions', $condition_id], $condition);
       $condition_form = $condition->buildConfigurationForm([], $form_state);
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index a8b817a..d826701 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\condition_field\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -27,7 +28,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
