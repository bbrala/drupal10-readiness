modules/contrib/microblogging/microblogging.module
modules/contrib/microblogging/src/Ajax/UpdateTimelineCommand.php
modules/contrib/microblogging/src/Controller/TimelineController.php
modules/contrib/microblogging/src/Entity/Status.php
modules/contrib/microblogging/src/Entity/StatusInterface.php
modules/contrib/microblogging/src/Entity/StatusViewsData.php
modules/contrib/microblogging/src/Form/Frontend/StatusAddForm.php
modules/contrib/microblogging/src/Form/StatusDeleteForm.php
modules/contrib/microblogging/src/Form/StatusForm.php
modules/contrib/microblogging/src/Form/StatusSettingsForm.php
modules/contrib/microblogging/src/MicroBloggingHelper.php
modules/contrib/microblogging/src/Plugin/Field/FieldFormatter/AuthorHeader.php
modules/contrib/microblogging/src/StatusAccessControlHandler.php
modules/contrib/microblogging/src/StatusHtmlRouteProvider.php
modules/contrib/microblogging/src/StatusListBuilder.php
modules/contrib/microblogging/src/StatusTranslationHandler.php
modules/contrib/microblogging/status.page.inc

7 files with changes
====================

1) modules/contrib/microblogging/src/StatusHtmlRouteProvider.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/microblogging/src/StatusAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\microblogging;

+use Drupal\microblogging\Entity\StatusInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\microblogging\Entity\StatusInterface $entity */
-
+    /** @var StatusInterface $entity */
     switch ($operation) {

       case 'view':
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/microblogging/src/MicroBloggingHelper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\microblogging;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\image\Entity\ImageStyle;
 use Drupal\microblogging\Entity\Status;
 use Drupal\user\UserInterface;
@@ @@
    * @param $user_id
    *
    * @return null[]|null
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function getStatus($user_id) {

@@ @@
     if ($file = $user->user_picture->entity) {
       $user_picture = ImageStyle::load('thumbnail')
         ->buildUri($file->getFileUri());
-      $output['url'] = file_create_url($user_picture);
+      $output['url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($user_picture);
     }

     if (!$user_picture) {
@@ @@
   /**
    * Send full name of user.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *
    * @return string
    */
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/microblogging/src/Form/StatusSettingsForm.php:26

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/microblogging/src/Form/StatusForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\microblogging\Form;

+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/microblogging/src/Form/Frontend/StatusAddForm.php:27

    ---------- begin diff ----------
@@ @@
   protected $account;

   /**
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;

@@ @@
    * Post status.
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function postStatus(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/microblogging/src/Controller/TimelineController.php:27

    ---------- begin diff ----------
@@ @@


   /**
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

   /**
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $currentUser;

   /**
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;

@@ @@
   /**
    * TimelineController constructor.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
-   * @param \Drupal\Core\Form\FormBuilderInterface $formBuilder
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param RouteMatchInterface $routeMatch
+   * @param AccountProxyInterface $account
+   * @param FormBuilderInterface $formBuilder
+   * @param EntityTypeManagerInterface $entityTypeManager
+   * @param Renderer $renderer
    */
   public function __construct(RouteMatchInterface $routeMatch,
                               AccountProxyInterface $account,
@@ @@
   /**
    * Timeline view.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *
    * @return array
    */
@@ @@
   /**
    * Delete status.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    */
   public function delete(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

