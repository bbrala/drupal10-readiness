diff --git a/drupal8_w3css_theme.theme b/drupal8_w3css_theme.theme
index f371484..048c94b 100644
--- a/drupal8_w3css_theme.theme
+++ b/drupal8_w3css_theme.theme
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Core\Routing\AdminContext;
+use Drupal\comment\Entity\Comment;
+use Drupal\block\BlockInterface;
 /**
  * @file
  * W3CSS Theme.theme.
@@ -62,7 +65,7 @@ function drupal8_w3css_theme_preprocess_html(&$variables) {
     $variables['attributes']['class'][] = 'path-view-' . Html::cleanCssIdentifier($view_id);
   }
 
-  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
+  /** @var AdminContext $admin_context */
   $admin_context = \Drupal::service('router.admin_context');
   if ($admin_context->isAdminRoute()) {
     $variables['attributes']['class'][] = 'admin-context';
@@ -400,7 +403,7 @@ function drupal8_w3css_theme_page_attachments_alter(array &$attachments) {
   }
 
   // Load full opacity if enabled but not on admin pages.
-  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
+  /** @var AdminContext $admin_context */
   $admin_context = \Drupal::service('router.admin_context');
   if ((theme_get_setting('full_opacity_onscroll')) && (!$admin_context->isAdminRoute())) {
     $attachments['#attached']['library'][] = 'drupal8_w3css_theme/d8w3css-full-opacity';
@@ -434,7 +437,7 @@ function drupal8_w3css_theme_form_node_form_alter(&$form, FormStateInterface $fo
 function drupal8_w3css_theme_form_comment_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $comment = $form_state->getFormObject()
     ->getEntity();
-  /** @var \Drupal\comment\Entity\Comment $comment */
+  /** @var Comment $comment */
   if ($comment->hasParentComment()) {
     $form['actions']['submit']['#value'] = t('Reply to comment');
   }
@@ -465,7 +468,7 @@ function drupal8_w3css_theme_form_search_form_alter(&$form, &$form_state) {
 function drupal8_w3css_theme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
   if (!empty($variables['elements']['#id'])) {
 
-    /** @var \Drupal\block\BlockInterface $block */
+    /** @var BlockInterface $block */
     $block = \Drupal::entityTypeManager()
       ->getStorage('block')
       ->load($variables['elements']['#id']);
