diff --git a/iots/src/PluginManager/DeviceTypeAnnotation.php b/iots/src/PluginManager/DeviceTypeAnnotation.php
index a2d0e03..9977a52 100644
--- a/iots/src/PluginManager/DeviceTypeAnnotation.php
+++ b/iots/src/PluginManager/DeviceTypeAnnotation.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\iots\PluginManager;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -30,7 +31,7 @@ class DeviceTypeAnnotation extends Plugin {
   /**
    * The human-readable name of the archiver plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/iots/src/PluginManager/DeviceTypeManager.php b/iots/src/PluginManager/DeviceTypeManager.php
index deac46c..dadfd0d 100644
--- a/iots/src/PluginManager/DeviceTypeManager.php
+++ b/iots/src/PluginManager/DeviceTypeManager.php
@@ -22,9 +22,9 @@ class DeviceTypeManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(
diff --git a/iots_credentials/src/Entity/IotsCredentialsListBuilder.php b/iots_credentials/src/Entity/IotsCredentialsListBuilder.php
index 21e7414..6a3ac55 100644
--- a/iots_credentials/src/Entity/IotsCredentialsListBuilder.php
+++ b/iots_credentials/src/Entity/IotsCredentialsListBuilder.php
@@ -18,27 +18,27 @@ class IotsCredentialsListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new IotsCredentialsListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -93,7 +93,7 @@ class IotsCredentialsListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\iots_credentials\Entity\IotsCredentialsInterface $entity */
+    /** @var IotsCredentialsInterface $entity */
     $row['uuid'] = $entity->uuid->value;
     $row['type'] = $entity->type->value;
     if ($entity->type->value == 'rsa') {
diff --git a/iots_credentials/src/Form/IotsCredentialsForm.php b/iots_credentials/src/Form/IotsCredentialsForm.php
index ab73689..1921a28 100644
--- a/iots_credentials/src/Form/IotsCredentialsForm.php
+++ b/iots_credentials/src/Form/IotsCredentialsForm.php
@@ -20,7 +20,7 @@ class IotsCredentialsForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New device credentials %label has been created.', $message_arguments));
diff --git a/iots_credentials/src/Service/Credentials.php b/iots_credentials/src/Service/Credentials.php
index 563297e..1d0bdfc 100644
--- a/iots_credentials/src/Service/Credentials.php
+++ b/iots_credentials/src/Service/Credentials.php
@@ -36,7 +36,7 @@ class Credentials {
     ];
     $rows = [];
     foreach ($this->storage->loadMultiple($ids) as $credential) {
-      /** @var \Drupal\iots_credentials\Entity\IotsCredentials $credential */
+      /** @var IotsCredentials $credential */
       $rows[] = $this->buildRow($credential);
     }
     $build['table'] = [
diff --git a/iots_deployment/src/Form/IotsDeploymentForm.php b/iots_deployment/src/Form/IotsDeploymentForm.php
index f0712ea..3faffb9 100644
--- a/iots_deployment/src/Form/IotsDeploymentForm.php
+++ b/iots_deployment/src/Form/IotsDeploymentForm.php
@@ -20,7 +20,7 @@ class IotsDeploymentForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New deployment %label has been created.', $message_arguments));
diff --git a/iots_deployment/src/IotsDeploymentListBuilder.php b/iots_deployment/src/IotsDeploymentListBuilder.php
index a6d1a96..ad2263f 100644
--- a/iots_deployment/src/IotsDeploymentListBuilder.php
+++ b/iots_deployment/src/IotsDeploymentListBuilder.php
@@ -18,27 +18,27 @@ class IotsDeploymentListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new IotsDeploymentListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
diff --git a/iots_device/src/Entity/IotsDeviceListBuilder.php b/iots_device/src/Entity/IotsDeviceListBuilder.php
index c65b750..d90c836 100644
--- a/iots_device/src/Entity/IotsDeviceListBuilder.php
+++ b/iots_device/src/Entity/IotsDeviceListBuilder.php
@@ -18,27 +18,27 @@ class IotsDeviceListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new IotsDeviceListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -108,7 +108,7 @@ class IotsDeviceListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\iots_device\Entity\IotsDeviceInterface $entity */
+    /** @var IotsDeviceInterface $entity */
     $row['name'] = $entity->toLink();
     $row['uuid'] = $this->toCopyText($entity->uuid->value);
     $row['registry'] = '-';
diff --git a/iots_device/src/Form/IotsDeviceForm.php b/iots_device/src/Form/IotsDeviceForm.php
index 11cf14a..575adeb 100644
--- a/iots_device/src/Form/IotsDeviceForm.php
+++ b/iots_device/src/Form/IotsDeviceForm.php
@@ -20,7 +20,7 @@ class IotsDeviceForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New device %label has been created.', $message_arguments));
diff --git a/iots_device/src/Service/Device.php b/iots_device/src/Service/Device.php
index e73aaa0..b464e1d 100644
--- a/iots_device/src/Service/Device.php
+++ b/iots_device/src/Service/Device.php
@@ -34,7 +34,7 @@ class Device {
     $rows = [];
     $no = 0;
     foreach ($this->query($registry_id) as $device) {
-      /** @var \Drupal\iots_device\Entity\IotsDevice $device */
+      /** @var IotsDevice $device */
       $rows[] = $this->buildRow($device, ++$no);
     }
     $build['title'] = [
diff --git a/iots_layout/src/Entity/IotsLayoutListBuilder.php b/iots_layout/src/Entity/IotsLayoutListBuilder.php
index 70ff5ad..cb41b64 100644
--- a/iots_layout/src/Entity/IotsLayoutListBuilder.php
+++ b/iots_layout/src/Entity/IotsLayoutListBuilder.php
@@ -18,27 +18,27 @@ class IotsLayoutListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new IotsLayoutListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
diff --git a/iots_layout/src/Form/IotsLayoutForm.php b/iots_layout/src/Form/IotsLayoutForm.php
index 83411df..1a2bdae 100644
--- a/iots_layout/src/Form/IotsLayoutForm.php
+++ b/iots_layout/src/Form/IotsLayoutForm.php
@@ -20,7 +20,7 @@ class IotsLayoutForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New layout %label has been created.', $message_arguments));
diff --git a/iots_layout/src/Service/Layout.php b/iots_layout/src/Service/Layout.php
index 9bf8333..fc56508 100644
--- a/iots_layout/src/Service/Layout.php
+++ b/iots_layout/src/Service/Layout.php
@@ -33,7 +33,7 @@ class Layout {
     $rows = [];
     $no = 0;
     foreach ($this->query($registry_id) as $layout) {
-      /** @var \Drupal\iots_layout\Entity\IotsLayout $layout */
+      /** @var IotsLayout $layout */
       $rows[] = $this->buildRow($layout, ++$no);
     }
     $build['title'] = [
diff --git a/iots_layout/src/Service/LayoutData.php b/iots_layout/src/Service/LayoutData.php
index d39388b..a0372e9 100644
--- a/iots_layout/src/Service/LayoutData.php
+++ b/iots_layout/src/Service/LayoutData.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\iots_layout\Service;
 
+use Drupal\iots_widget\Service\WidgetData;
 use Drupal\Core\Logger\LoggerChannelTrait;
 use Drupal\Core\Messenger\MessengerTrait;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -18,7 +19,7 @@ class LayoutData {
   /**
    * The cml storage.
    *
-   * @var \Drupal\iots_widget\Service\WidgetData
+   * @var WidgetData
    */
   protected $widgetData;
 
diff --git a/iots_product/src/Entity/IotsProductListBuilder.php b/iots_product/src/Entity/IotsProductListBuilder.php
index 5245568..de15869 100644
--- a/iots_product/src/Entity/IotsProductListBuilder.php
+++ b/iots_product/src/Entity/IotsProductListBuilder.php
@@ -18,27 +18,27 @@ class IotsProductListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new IotsDeviceListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -106,7 +106,7 @@ class IotsProductListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\iots_product\Entity\IotsProductInterface $entity */
+    /** @var IotsProductInterface $entity */
     $row['name'] = $entity->toLink();
     $row['uuid'] = $this->toCopyText($entity->uuid->value);
     $status = $entity->isEnabled() ? '<i class="far fa-eye"></i>' : '<i class="far fa-eye-slash"></i>';
diff --git a/iots_product/src/Form/IotsProductForm.php b/iots_product/src/Form/IotsProductForm.php
index a4a38de..9b71814 100644
--- a/iots_product/src/Form/IotsProductForm.php
+++ b/iots_product/src/Form/IotsProductForm.php
@@ -20,7 +20,7 @@ class IotsProductForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New product %label has been created.', $message_arguments));
diff --git a/iots_registry/src/Entity/IotsRegistryListBuilder.php b/iots_registry/src/Entity/IotsRegistryListBuilder.php
index 58467b9..1761d43 100644
--- a/iots_registry/src/Entity/IotsRegistryListBuilder.php
+++ b/iots_registry/src/Entity/IotsRegistryListBuilder.php
@@ -18,27 +18,27 @@ class IotsRegistryListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new IotsRegistryListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -90,7 +90,7 @@ class IotsRegistryListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\iots_registry\Entity\IotsRegistryInterface $entity */
+    /** @var IotsRegistryInterface $entity */
     $row['name'] = $entity->toLink();
     $row['uuid'] = $entity->uuid->value;
     $row['description'] = $entity->description->value;
diff --git a/iots_registry/src/Form/IotsRegistryForm.php b/iots_registry/src/Form/IotsRegistryForm.php
index 4fce8e0..64fcf96 100644
--- a/iots_registry/src/Form/IotsRegistryForm.php
+++ b/iots_registry/src/Form/IotsRegistryForm.php
@@ -20,7 +20,7 @@ class IotsRegistryForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New device registry %label has been created.', $message_arguments));
diff --git a/iots_release/src/Entity/IotsReleaseListBuilder.php b/iots_release/src/Entity/IotsReleaseListBuilder.php
index 21956be..de231c0 100644
--- a/iots_release/src/Entity/IotsReleaseListBuilder.php
+++ b/iots_release/src/Entity/IotsReleaseListBuilder.php
@@ -18,27 +18,27 @@ class IotsReleaseListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new IotsReleaseListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
diff --git a/iots_release/src/Form/IotsReleaseForm.php b/iots_release/src/Form/IotsReleaseForm.php
index 1c9f3b1..9477554 100644
--- a/iots_release/src/Form/IotsReleaseForm.php
+++ b/iots_release/src/Form/IotsReleaseForm.php
@@ -20,7 +20,7 @@ class IotsReleaseForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New release %label has been created.', $message_arguments));
diff --git a/iots_widget/src/Entity/IotsWidget.php b/iots_widget/src/Entity/IotsWidget.php
index a4d736f..3e917b4 100644
--- a/iots_widget/src/Entity/IotsWidget.php
+++ b/iots_widget/src/Entity/IotsWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\iots_widget\Entity;
 
+use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\RevisionLogEntityTrait;
 use Drupal\iots\Utility\FieldDefinition;
@@ -88,7 +89,7 @@ class IotsWidget extends ContentEntity {
       'list' => 'List',
       'rgb' => 'RGB',
     ]);
-    /** @var \Drupal\Core\Field\BaseFieldDefinition $fields['type'] */
+    /** @var BaseFieldDefinition $fields ['type'] */
     $fields['type']->setDefaultValue('switch');
     $fields['key'] = FieldDefinition::string('Key');
     $fields['publish'] = FieldDefinition::string('Publish');
diff --git a/iots_widget/src/Entity/IotsWidgetListBuilder.php b/iots_widget/src/Entity/IotsWidgetListBuilder.php
index 11c08c9..35ac5ff 100644
--- a/iots_widget/src/Entity/IotsWidgetListBuilder.php
+++ b/iots_widget/src/Entity/IotsWidgetListBuilder.php
@@ -18,27 +18,27 @@ class IotsWidgetListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new IotsDeviceListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -108,7 +108,7 @@ class IotsWidgetListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\iots_widget\Entity\IotsWidgetInterface $entity */
+    /** @var IotsWidgetInterface $entity */
     $row['name'] = $entity->toLink();
     $row['uuid'] = $this->toCopyText($entity->uuid->value);
     // $row['layout'] = $entity->toLink();
diff --git a/iots_widget/src/Form/IotsWidgetForm.php b/iots_widget/src/Form/IotsWidgetForm.php
index e072c1e..25beb7b 100644
--- a/iots_widget/src/Form/IotsWidgetForm.php
+++ b/iots_widget/src/Form/IotsWidgetForm.php
@@ -20,7 +20,7 @@ class IotsWidgetForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New widget %label has been created.', $message_arguments));
