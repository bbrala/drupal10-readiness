modules/contrib/jquery_carousel/jquery_carousel.module
modules/contrib/jquery_carousel/jquery_carousel_examples/jquery_carousel_examples.install
modules/contrib/jquery_carousel/jquery_carousel_examples/jquery_carousel_examples.module
modules/contrib/jquery_carousel/src/Plugin/Field/FieldFormatter/jCarouselFieldFormatter.php
modules/contrib/jquery_carousel/src/Plugin/views/style/JqueryCarousel.php

4 files with changes
====================

1) modules/contrib/jquery_carousel/src/Plugin/Field/FieldFormatter/jCarouselFieldFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\jquery_carousel\Plugin\Field\FieldFormatter;

+use Drupal\image\ImageStyleStorageInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\image\ImageStyleStorageInterface
+   * @var ImageStyleStorageInterface
    */
   protected $imageStyleStorage;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, EntityStorageInterface $image_style_storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/jquery_carousel/jquery_carousel_examples/jquery_carousel_examples.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Menu\MenuTreeParameters;
 /**
  * @file
  * Provide jquery carousel style plugin for views.
@@ @@
 function jquery_carousel_examples_toolbar() {
   $items = array();
   // Load the menu.
-  $jquery_carousel_example_menu_tree = Drupal::service('toolbar.menu_tree')->load('jquery-carousel-examples', new Drupal\Core\Menu\MenuTreeParameters());
+  $jquery_carousel_example_menu_tree = Drupal::service('toolbar.menu_tree')->load('jquery-carousel-examples', new MenuTreeParameters());
   // Build the menu render array.
   $jquery_carousel_example_menu = Drupal::service('toolbar.menu_tree')->build($jquery_carousel_example_menu_tree);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


3) modules/contrib/jquery_carousel/jquery_carousel_examples/jquery_carousel_examples.install:18

    ---------- begin diff ----------
@@ @@
  * Generate the sample content for views.
  */
 function jquery_carousel_examples_generate_content() {
-  $dir = drupal_get_path('module', 'jquery_carousel_examples') . '/assets/images';
+  $dir = \Drupal::service('extension.list.module')->getPath('jquery_carousel_examples') . '/assets/images';
   $images = FileSystemInterface::scanDirectory($dir, '/jquery_carousel-sample/');

   // Create single node with multi-valued data & add it to menu.
@@ @@
     $filename = $image->filename;

     $file_temp = file_get_contents($image->uri);
-    $file_temp = file_save_data($file_temp, 'public://' . $filename, FileSystemInterface::EXISTS_RENAME);
+    $file_temp = \Drupal::service('file.repository')->writeData($file_temp, 'public://' . $filename, FileSystemInterface::EXISTS_RENAME);

     $files[] = ['target_id' => $file_temp->id()];
   }
@@ @@
     $filename = $image->filename;

     $file_temp = file_get_contents($image->uri);
-    $file_temp = file_save_data($file_temp, 'public://' . $filename, FileSystemInterface::EXISTS_RENAME);
+    $file_temp = \Drupal::service('file.repository')->writeData($file_temp, 'public://' . $filename, FileSystemInterface::EXISTS_RENAME);

     $files = ['target_id' => $file_temp->id()];
     jquery_carousel_create_node($files, $image);
@@ @@
   }

   // Now delete all of the configuration installed by this module.
-  $dir = drupal_get_path('module', 'jquery_carousel_examples') . '/config/install';
+  $dir = \Drupal::service('extension.list.module')->getPath('jquery_carousel_examples') . '/config/install';
   $files = FileSystemInterface::scanDirectory($dir, '/.*/');
   foreach ($files as $file) {
     \Drupal::configFactory()->getEditable($file->name)->delete();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileSaveDataRector
 * ArgumentRemoverRector


4) modules/contrib/jquery_carousel/jquery_carousel.module:325

    ---------- begin diff ----------
@@ @@
     $module_themes = $function();
     foreach ($module_themes as $key => $theme) {
       $theme['module'] = $module;
-      $theme['file path'] = isset($theme['file path']) ? $theme['file path'] : drupal_get_path('module', $module);
+      $theme['file path'] = isset($theme['file path']) ? $theme['file path'] : \Drupal::service('extension.list.module')->getPath($module);
       $theme['title'] = isset($theme['title']) ? $theme['title'] : $key;
       $themes[$key] = $theme;
     }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

