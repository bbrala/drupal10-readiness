diff --git a/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php b/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php
index c8826895..ce029b76 100644
--- a/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php
+++ b/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php
@@ -72,7 +72,7 @@ class WisskiEntityReferenceLabelFormatter extends EntityReferenceLabelFormatter
 
       // for now we take the interface language
       $langcode = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
-      
+
       if(isset($label[$langcode][0]["value"]))
         $label = $label[$langcode][0]["value"];
       else {
@@ -80,8 +80,8 @@ class WisskiEntityReferenceLabelFormatter extends EntityReferenceLabelFormatter
         if(isset($cur_label[0]["value"]))
           $label = $cur_label[0]["value"];
       }
-        
-      
+
+
       // If the link is to be displayed and the entity has a uri, display a
       // link.
       if ($output_as_link ) {
diff --git a/wisski_adapter_sparql11_pb/src/Plugin/wisski_salz/Engine/Sparql11EngineWithPB.php b/wisski_adapter_sparql11_pb/src/Plugin/wisski_salz/Engine/Sparql11EngineWithPB.php
index 63cec3b0..c8735cfc 100644
--- a/wisski_adapter_sparql11_pb/src/Plugin/wisski_salz/Engine/Sparql11EngineWithPB.php
+++ b/wisski_adapter_sparql11_pb/src/Plugin/wisski_salz/Engine/Sparql11EngineWithPB.php
@@ -1209,7 +1209,7 @@ class Sparql11EngineWithPB extends Sparql11Engine implements PathbuilderEngineIn
     if($language == "all") {
       $to_load = \Drupal::languageManager()->getLanguages();
       $languages = array_keys($to_load);
-      
+
 #      dpm($languages, "langs?");
     } else {
       $languages = array($language);
@@ -1282,7 +1282,7 @@ class Sparql11EngineWithPB extends Sparql11Engine implements PathbuilderEngineIn
         // here we can probably avoid the language tag...
         // by mark ;)
         $sparql .= $this->generateTriplesForPath($pb, $path, '', $eid, NULL, 0,  ($starting_position/2), FALSE, NULL, 'entity_reference', $relative, array(), 0);
-        
+
       }
       else {
 //        $sparql .= $this->generateTriplesForPath($pb, $path, '', $eid, NULL, 0, ($starting_position/2), FALSE, NULL, 'field', $relative);
@@ -1720,13 +1720,13 @@ $tsa['ende'] = microtime(TRUE)-$tsa['start'];
                   break;
                 }
               }
-              
+
               #$tmp = array(LanguageInterface::LANGCODE_DEFAULT => $tmp);
-              
+
               // initialize if not existing
               if(!isset($out[$eid][$field_id][LanguageInterface::LANGCODE_DEFAULT]))
                 $out[$eid][$field_id][LanguageInterface::LANGCODE_DEFAULT] = array();
-              
+
               // if we don't skip, add it via array_merge...
               if(!$skip) {
                 if(!isset($out[$eid][$field_id][LanguageInterface::LANGCODE_DEFAULT][$key]))
@@ -2793,7 +2793,7 @@ $tsa['ende'] = microtime(TRUE)-$tsa['start'];
 #    dpm(serialize($entity), "yay?");
 #    dpm(serialize($value), "value?");
 #    dpm(serialize($fieldid), "fieldid?");
-    
+
 #    drupal_set_message(" addNewFieldValue I get: " . $entity_id.  " with fid " . $fieldid . " and value " . $value . ' for pb ' . $pb->id() . ' er ' . serialize($value_is_entity_ref));
 #    drupal_set_message(serialize($this->getUri("smthg")));
     $datagraphuri = $this->getDefaultDataGraphUri();
@@ -3735,7 +3735,7 @@ $tsa['ende'] = microtime(TRUE)-$tsa['start'];
 
     //clear up, avoid DatatypeProperties
     $ranges = array_intersect_key($ranges,$properties); 
-    
+
     //explicit top level datatypes
     $primitives = array();
 
@@ -3775,7 +3775,7 @@ $tsa['ende'] = microtime(TRUE)-$tsa['start'];
       //  $ranges[$rng] = ['TOPCLASS'=>'TOPCLASS'];
       //}
     }
-    
+
 #    $prim_check = array_diff_key($top_properties,$primitives);
 #    if (!empty($prim_check)) {
 #      $this->messenger()->addError('No Domain for top-level primitive datatype property: '.implode(', ',$prim_check));;
@@ -3887,7 +3887,7 @@ $tsa['ende'] = microtime(TRUE)-$tsa['start'];
         $ranges[$property] = array_merge($ranges[$property],$add_up);
       }
     }
-    
+
     foreach($primitives as $property => $values) {
       if (isset($primitives[$property])) {
         $add_up = array();
@@ -3911,7 +3911,7 @@ $tsa['ende'] = microtime(TRUE)-$tsa['start'];
       foreach ($classes as $class) $insert->values(array('property'=>$prop,'class'=>$class));
     }
     $insert->execute();
-    
+
     $insert = $this->prepareInsert('primitives');
     foreach ($primitives as $prop => $classes) {
       foreach ($classes as $class) $insert->values(array('property'=>$prop,'class'=>$class));
diff --git a/wisski_adapters/zotero/src/Query/Query.php b/wisski_adapters/zotero/src/Query/Query.php
index 60fc339a..523f0852 100644
--- a/wisski_adapters/zotero/src/Query/Query.php
+++ b/wisski_adapters/zotero/src/Query/Query.php
@@ -73,7 +73,7 @@ class Query extends WisskiQueryBase {
         if(is_object($condition['field'])){
 #          dpm($condition['field'], "condition field is an array!");
           foreach ($condition['field']->conditions() as $subcondition) {
-        
+
           $field = $subcondition['field'];
           $value = $subcondition['value'];
   #        dpm($field, "field");
