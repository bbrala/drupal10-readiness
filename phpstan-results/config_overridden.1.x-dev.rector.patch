diff --git a/tests/src/Functional/SiteInformationFormTest.php b/tests/src/Functional/SiteInformationFormTest.php
index 7f045a8..abff035 100644
--- a/tests/src/Functional/SiteInformationFormTest.php
+++ b/tests/src/Functional/SiteInformationFormTest.php
@@ -24,7 +24,7 @@ class SiteInformationFormTest extends BrowserTestBase {
    */
   protected $defaultTheme = 'stable';
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
   }
 
@@ -93,13 +93,13 @@ class SiteInformationFormTest extends BrowserTestBase {
 
 
       if (isset($element['#config_overridden_value'])) {
-        $this->assertEqual($element['#config_overridden_value'], $config->getOriginal($property, FALSE), 'Stored value is set correctly');
+        $this->assertEquals($element['#config_overridden_value'], $config->getOriginal($property, FALSE), 'Stored value is set correctly');
       }
       else {
         $this->fail("Element {$form_path} doesn't have #config_overridden_value");
       }
 
-      $this->assertEqual($element['#default_value'], $value_to_match, "Element {$property} old value {$old_element['#default_value']} and new value {$element['#default_value']}");
+      $this->assertEquals($element['#default_value'], $value_to_match, "Element {$property} old value {$old_element['#default_value']} and new value {$element['#default_value']}");
       $this->assertTrue(strpos($element['#title'], 'overrides') !== FALSE, 'Element ' . $form_path . ' title is changed?');
 
     }
