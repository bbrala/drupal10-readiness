[parsing] modules/contrib/universal_file_utils/src/Event/UniversalFileAccessEvent.php
[refactoring] modules/contrib/universal_file_utils/src/Event/UniversalFileAccessEvent.php
[post rectors] modules/contrib/universal_file_utils/src/Event/UniversalFileAccessEvent.php
[print] modules/contrib/universal_file_utils/src/Event/UniversalFileAccessEvent.php
[parsing] modules/contrib/universal_file_utils/src/Event/UniversalFileBaseEvent.php
[refactoring] modules/contrib/universal_file_utils/src/Event/UniversalFileBaseEvent.php
[post rectors] modules/contrib/universal_file_utils/src/Event/UniversalFileBaseEvent.php
[print] modules/contrib/universal_file_utils/src/Event/UniversalFileBaseEvent.php
[refactoring] modules/contrib/universal_file_utils/src/Event/UniversalFileBaseEvent.php
[post rectors] modules/contrib/universal_file_utils/src/Event/UniversalFileBaseEvent.php
[print] modules/contrib/universal_file_utils/src/Event/UniversalFileBaseEvent.php
[parsing] modules/contrib/universal_file_utils/src/Event/UniversalFileDownloadEvent.php
[refactoring] modules/contrib/universal_file_utils/src/Event/UniversalFileDownloadEvent.php
[post rectors] modules/contrib/universal_file_utils/src/Event/UniversalFileDownloadEvent.php
[print] modules/contrib/universal_file_utils/src/Event/UniversalFileDownloadEvent.php
[parsing] modules/contrib/universal_file_utils/src/EventSubscriber/UniversalFileAccessSubscriberBase.php
[refactoring] modules/contrib/universal_file_utils/src/EventSubscriber/UniversalFileAccessSubscriberBase.php
[post rectors] modules/contrib/universal_file_utils/src/EventSubscriber/UniversalFileAccessSubscriberBase.php
[print] modules/contrib/universal_file_utils/src/EventSubscriber/UniversalFileAccessSubscriberBase.php
[parsing] modules/contrib/universal_file_utils/src/UniversalFileOperations.php
[refactoring] modules/contrib/universal_file_utils/src/UniversalFileOperations.php
[post rectors] modules/contrib/universal_file_utils/src/UniversalFileOperations.php
[print] modules/contrib/universal_file_utils/src/UniversalFileOperations.php
[refactoring] modules/contrib/universal_file_utils/src/UniversalFileOperations.php
[post rectors] modules/contrib/universal_file_utils/src/UniversalFileOperations.php
[print] modules/contrib/universal_file_utils/src/UniversalFileOperations.php
[parsing] modules/contrib/universal_file_utils/src/UniversalFileOperationsInterface.php
[refactoring] modules/contrib/universal_file_utils/src/UniversalFileOperationsInterface.php
[post rectors] modules/contrib/universal_file_utils/src/UniversalFileOperationsInterface.php
[print] modules/contrib/universal_file_utils/src/UniversalFileOperationsInterface.php
[parsing] modules/contrib/universal_file_utils/universal_file_utils.module
[refactoring] modules/contrib/universal_file_utils/universal_file_utils.module
[post rectors] modules/contrib/universal_file_utils/universal_file_utils.module
[print] modules/contrib/universal_file_utils/universal_file_utils.module

2 files with changes
====================

1) modules/contrib/universal_file_utils/src/UniversalFileOperations.php:155

    ---------- begin diff ----------
@@ @@
       }

       $directory = sprintf('private://%s/%s', $folderName, $subFolderName);
-      $this->fileSystem->prepareDirectory($directory, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);
+      $this->fileSystem->prepareDirectory($directory, \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY | \Drupal\Core\File\FileSystemInterface::MODIFY_PERMISSIONS);

       $destination = sprintf('%s/%s', $directory, $file->getFilename());

-      if ($newFile = file_copy($file, $destination)) {
+      if ($newFile = \Drupal::service('file.repository')->copy($file, $destination)) {
         try {
           $newFile->setPermanent();
           $newFile->save();
    ----------- end diff -----------

Applied rules:
 * FileCopyRector
 * FileCreateDirectoryRector
 * FileModifyPermissionsRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/universal_file_utils/src/Event/UniversalFileBaseEvent.php:14

    ---------- begin diff ----------
@@ @@
 use Drupal\file\FileUsage\FileUsageInterface;
 use Symfony\Component\EventDispatcher\Event;

-abstract class UniversalFileBaseEvent extends Event {
+abstract class UniversalFileBaseEvent extends \Symfony\Contracts\EventDispatcher\Event {

   use StringTranslationTrait;
   use LoggerChannelTrait;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

