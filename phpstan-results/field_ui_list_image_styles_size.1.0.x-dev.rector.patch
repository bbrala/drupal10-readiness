diff --git a/field_ui_list_image_styles_size.info.yml b/field_ui_list_image_styles_size.info.yml
index 17c66fd..304e171 100644
--- a/field_ui_list_image_styles_size.info.yml
+++ b/field_ui_list_image_styles_size.info.yml
@@ -2,7 +2,7 @@ name: Field UI List Image Styles
 description: Lists the applied image styles in the UI.
 type: module
 package: Stigas
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependences:
   - drupal:field_ui
   - drupal:image
diff --git a/tests/src/Functional/FieldWidgetFormAlterTest.php b/tests/src/Functional/FieldWidgetFormAlterTest.php
index 9cfcf55..720d341 100644
--- a/tests/src/Functional/FieldWidgetFormAlterTest.php
+++ b/tests/src/Functional/FieldWidgetFormAlterTest.php
@@ -27,7 +27,7 @@ class FieldWidgetFormAlterTest extends TestBase {
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');
 
-    $this->assertEqual('field_image - 123x456', $field_image_label->getText());
+    $this->assertEquals('field_image - 123x456', $field_image_label->getText());
 
     $session->elementExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
@@ -63,7 +63,7 @@ class FieldWidgetFormAlterTest extends TestBase {
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');
 
-    $this->assertEqual('field_image', $field_image_label->getText());
+    $this->assertEquals('field_image', $field_image_label->getText());
 
     $session->elementNotExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
@@ -86,7 +86,7 @@ class FieldWidgetFormAlterTest extends TestBase {
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');
 
-    $this->assertEqual('field_image - 1000x?', $field_image_label->getText());
+    $this->assertEquals('field_image - 1000x?', $field_image_label->getText());
 
     $session->elementExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
@@ -109,7 +109,7 @@ class FieldWidgetFormAlterTest extends TestBase {
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');
 
-    $this->assertEqual('field_image', $field_image_label->getText());
+    $this->assertEquals('field_image', $field_image_label->getText());
 
     $session->elementExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
diff --git a/tests/src/Functional/Service/ImageSizeServiceTest.php b/tests/src/Functional/Service/ImageSizeServiceTest.php
index 7893a74..93ea2a4 100644
--- a/tests/src/Functional/Service/ImageSizeServiceTest.php
+++ b/tests/src/Functional/Service/ImageSizeServiceTest.php
@@ -24,7 +24,7 @@ class ImageSizeServiceTest extends TestBase {
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->imageSizeService = $this->container->get('field_ui_list_image_styles_size.imagesize');
   }
@@ -39,8 +39,8 @@ class ImageSizeServiceTest extends TestBase {
     $appliedImageStyles = $this->imageSizeService->getAppliedImageStyles('node', 'test', 'field_image');
 
     $this->assertCount(2, $appliedImageStyles);
-    $this->assertEqual($this->resizeImageStyle->id(), $appliedImageStyles['default']->id());
-    $this->assertEqual($this->resizeWithoutHeightImageStyle->id(), $appliedImageStyles['alternative']->id());
+    $this->assertEquals($this->resizeImageStyle->id(), $appliedImageStyles['default']->id());
+    $this->assertEquals($this->resizeWithoutHeightImageStyle->id(), $appliedImageStyles['alternative']->id());
   }
 
   /**
@@ -54,16 +54,16 @@ class ImageSizeServiceTest extends TestBase {
     $this->assertCount(2, $entity_view_displays_applied_image_size);
 
     $this->assertArrayHasKey('default', $entity_view_displays_applied_image_size);
-    $this->assertEqual($this->resizeImageStyle->id(), $entity_view_displays_applied_image_size['default']->imageStyle->id());
-    $this->assertEqual(123, $entity_view_displays_applied_image_size['default']->width);
-    $this->assertEqual(456, $entity_view_displays_applied_image_size['default']->height);
-    $this->assertEqual('123x456', $entity_view_displays_applied_image_size['default']->getDimensionsAsString());
+    $this->assertEquals($this->resizeImageStyle->id(), $entity_view_displays_applied_image_size['default']->imageStyle->id());
+    $this->assertEquals(123, $entity_view_displays_applied_image_size['default']->width);
+    $this->assertEquals(456, $entity_view_displays_applied_image_size['default']->height);
+    $this->assertEquals('123x456', $entity_view_displays_applied_image_size['default']->getDimensionsAsString());
 
     $this->assertArrayHasKey('alternative', $entity_view_displays_applied_image_size);
-    $this->assertEqual($this->resizeWithoutHeightImageStyle->id(), $entity_view_displays_applied_image_size['alternative']->imageStyle->id());
-    $this->assertEqual(1000, $entity_view_displays_applied_image_size['alternative']->width);
+    $this->assertEquals($this->resizeWithoutHeightImageStyle->id(), $entity_view_displays_applied_image_size['alternative']->imageStyle->id());
+    $this->assertEquals(1000, $entity_view_displays_applied_image_size['alternative']->width);
     $this->assertNull($entity_view_displays_applied_image_size['alternative']->height);
-    $this->assertEqual('1000x?', $entity_view_displays_applied_image_size['alternative']->getDimensionsAsString());
+    $this->assertEquals('1000x?', $entity_view_displays_applied_image_size['alternative']->getDimensionsAsString());
   }
 
 }
diff --git a/tests/src/Functional/TestBase.php b/tests/src/Functional/TestBase.php
index 2a8f28d..7a8081f 100644
--- a/tests/src/Functional/TestBase.php
+++ b/tests/src/Functional/TestBase.php
@@ -121,7 +121,7 @@ abstract class TestBase extends BrowserTestBase {
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->entityDisplayRepository = $this->container->get('entity_display.repository');
@@ -261,7 +261,7 @@ abstract class TestBase extends BrowserTestBase {
     ]);
     $this->formDisplay->save();
 
-    $testimage = file_save_data(file_get_contents(__DIR__ . '/test.jpg'), 'public://test.jpg');
+    $testimage = \Drupal::service('file.repository')->writeData(file_get_contents(__DIR__ . '/test.jpg'), 'public://test.jpg');
 
     $this->node = $this->drupalCreateNode([
       'type' => 'test',
