[parsing] modules/contrib/redirect_metrics/redirect_metrics.module
[refactoring] modules/contrib/redirect_metrics/redirect_metrics.module
[post rectors] modules/contrib/redirect_metrics/redirect_metrics.module
[print] modules/contrib/redirect_metrics/redirect_metrics.module
[parsing] modules/contrib/redirect_metrics/src/EventSubscriber/RedirectMetricsSubscriber.php
[refactoring] modules/contrib/redirect_metrics/src/EventSubscriber/RedirectMetricsSubscriber.php
[post rectors] modules/contrib/redirect_metrics/src/EventSubscriber/RedirectMetricsSubscriber.php
[print] modules/contrib/redirect_metrics/src/EventSubscriber/RedirectMetricsSubscriber.php
[refactoring] modules/contrib/redirect_metrics/src/EventSubscriber/RedirectMetricsSubscriber.php
[post rectors] modules/contrib/redirect_metrics/src/EventSubscriber/RedirectMetricsSubscriber.php
[print] modules/contrib/redirect_metrics/src/EventSubscriber/RedirectMetricsSubscriber.php
[parsing] modules/contrib/redirect_metrics/src/RedirectMetricsFieldDefinitions.php
[refactoring] modules/contrib/redirect_metrics/src/RedirectMetricsFieldDefinitions.php
[post rectors] modules/contrib/redirect_metrics/src/RedirectMetricsFieldDefinitions.php
[print] modules/contrib/redirect_metrics/src/RedirectMetricsFieldDefinitions.php
[parsing] modules/contrib/redirect_metrics/tests/src/Functional/RedirectMetricsTest.php
[refactoring] modules/contrib/redirect_metrics/tests/src/Functional/RedirectMetricsTest.php
[post rectors] modules/contrib/redirect_metrics/tests/src/Functional/RedirectMetricsTest.php
[print] modules/contrib/redirect_metrics/tests/src/Functional/RedirectMetricsTest.php
[refactoring] modules/contrib/redirect_metrics/tests/src/Functional/RedirectMetricsTest.php
[post rectors] modules/contrib/redirect_metrics/tests/src/Functional/RedirectMetricsTest.php
[print] modules/contrib/redirect_metrics/tests/src/Functional/RedirectMetricsTest.php
[parsing] modules/contrib/redirect_metrics/tests/src/Functional/RedirectReportsTest.php
[refactoring] modules/contrib/redirect_metrics/tests/src/Functional/RedirectReportsTest.php
[post rectors] modules/contrib/redirect_metrics/tests/src/Functional/RedirectReportsTest.php
[print] modules/contrib/redirect_metrics/tests/src/Functional/RedirectReportsTest.php
[parsing] modules/contrib/redirect_metrics/tests/src/Kernel/InstallUninstallTest.php
[refactoring] modules/contrib/redirect_metrics/tests/src/Kernel/InstallUninstallTest.php
[post rectors] modules/contrib/redirect_metrics/tests/src/Kernel/InstallUninstallTest.php
[print] modules/contrib/redirect_metrics/tests/src/Kernel/InstallUninstallTest.php
[refactoring] modules/contrib/redirect_metrics/tests/src/Kernel/InstallUninstallTest.php
[post rectors] modules/contrib/redirect_metrics/tests/src/Kernel/InstallUninstallTest.php
[print] modules/contrib/redirect_metrics/tests/src/Kernel/InstallUninstallTest.php

3 files with changes
====================

1) modules/contrib/redirect_metrics/tests/src/Kernel/InstallUninstallTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('user', ['users_data']);
     $this->installSchema('system', ['key_value']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/redirect_metrics/tests/src/Functional/RedirectMetricsTest.php:44

    ---------- begin diff ----------
@@ @@

     $redirect = Redirect::load($redirect->id());
     $this->assertEquals(1, $redirect->access_count->value);
-    $this->assertNotEqual($test_request_time, $redirect->last_access->value);
+    $this->assertNotEquals($test_request_time, $redirect->last_access->value);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertNotEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/redirect_metrics/src/EventSubscriber/RedirectMetricsSubscriber.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * Record metrics about redirects.
    */
-  public function recordRedirectMetrics(FilterResponseEvent $event) {
+  public function recordRedirectMetrics(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     if (!$redirect = $this->resolveRedirect($event)) {
       return;
     }
@@ @@
   /**
    * Resolve a redirect from the current request.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event.
    *
    * @return \Drupal\redirect\Entity\Redirect|null
    *   The redirect or NULL if one could not be resolved.
    */
-  protected function resolveRedirect(FilterResponseEvent $event) {
+  protected function resolveRedirect(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();
     $redirect_id = $response->headers->get('X_REDIRECT_ID');
     if ($redirect_id && $redirect = Redirect::load($redirect_id)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 3 files have been changed by Rector                                       

