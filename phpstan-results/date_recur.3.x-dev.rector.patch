diff --git a/composer.json b/composer.json
index 3878eb3..1ac2b5d 100644
--- a/composer.json
+++ b/composer.json
@@ -18,8 +18,8 @@
   ],
   "require": {
     "php": ">=7.3",
-    "drupal/core": "^9",
-    "rlanvin/php-rrule": "1.*"
+    "rlanvin/php-rrule": "1.*",
+    "drupal/core": "^9 || ^10"
   },
   "require-dev": {
     "drupal/coder": "^8.3",
diff --git a/date_recur.info.yml b/date_recur.info.yml
index bf54532..0d67e6e 100644
--- a/date_recur.info.yml
+++ b/date_recur.info.yml
@@ -1,7 +1,7 @@
 name: Recurring Dates Field
 type: module
 description: Provides a recurring/repeating dates field.
-core_version_requirement: ^9
+core_version_requirement: ^9 || ^10
 php: 7.3
 package: Field types
 dependencies:
diff --git a/src/Event/DateRecurValueEvent.php b/src/Event/DateRecurValueEvent.php
index 0e8e937..0b42959 100644
--- a/src/Event/DateRecurValueEvent.php
+++ b/src/Event/DateRecurValueEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event dispatched when an entity containing a date recur field is modified.
  */
-class DateRecurValueEvent extends Event {
+class DateRecurValueEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The field list.
diff --git a/src/Plugin/Field/FieldType/DateRecurFieldItemList.php b/src/Plugin/Field/FieldType/DateRecurFieldItemList.php
index a7c560c..de8e678 100644
--- a/src/Plugin/Field/FieldType/DateRecurFieldItemList.php
+++ b/src/Plugin/Field/FieldType/DateRecurFieldItemList.php
@@ -34,7 +34,7 @@ class DateRecurFieldItemList extends DateRangeFieldItemList {
   public function postSave($update): bool {
     parent::postSave($update);
     $event = new DateRecurValueEvent($this, !$update);
-    $this->getDispatcher()->dispatch(DateRecurEvents::FIELD_VALUE_SAVE, $event);
+    $this->getDispatcher()->dispatch($event, DateRecurEvents::FIELD_VALUE_SAVE);
     return FALSE;
   }
 
@@ -44,7 +44,7 @@ class DateRecurFieldItemList extends DateRangeFieldItemList {
   public function delete(): void {
     parent::delete();
     $event = new DateRecurValueEvent($this, FALSE);
-    $this->getDispatcher()->dispatch(DateRecurEvents::FIELD_ENTITY_DELETE, $event);
+    $this->getDispatcher()->dispatch($event, DateRecurEvents::FIELD_ENTITY_DELETE);
   }
 
   /**
@@ -53,7 +53,7 @@ class DateRecurFieldItemList extends DateRangeFieldItemList {
   public function deleteRevision(): void {
     parent::deleteRevision();
     $event = new DateRecurValueEvent($this, FALSE);
-    $this->getDispatcher()->dispatch(DateRecurEvents::FIELD_REVISION_DELETE, $event);
+    $this->getDispatcher()->dispatch($event, DateRecurEvents::FIELD_REVISION_DELETE);
   }
 
   /**
diff --git a/tests/src/Kernel/DateRecurFieldItemTest.php b/tests/src/Kernel/DateRecurFieldItemTest.php
index e1844eb..e25d232 100644
--- a/tests/src/Kernel/DateRecurFieldItemTest.php
+++ b/tests/src/Kernel/DateRecurFieldItemTest.php
@@ -254,7 +254,7 @@ class DateRecurFieldItemTest extends KernelTestBase {
   public function testGenerateSampleValue() {
     $entity = DrEntityTest::create();
     $entity->dr->generateSampleItems();
-    $this->assertRegExp('/^FREQ=DAILY;COUNT=\d{1,2}$/', $entity->dr->rrule);
+    $this->assertMatchesRegularExpression('/^FREQ=DAILY;COUNT=\d{1,2}$/', $entity->dr->rrule);
     $this->assertFalse($entity->dr->infinite);
     $this->assertTrue(in_array($entity->dr->timezone, timezone_identifiers_list(), TRUE));
 
diff --git a/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php b/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php
index 8f806b3..38ca429 100644
--- a/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php
+++ b/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php
@@ -26,7 +26,7 @@ class DateRecurViewsFieldAttachedTest extends DateRecurViewsFieldTest {
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
 
     // This is the name of the attached field.
diff --git a/tests/src/Kernel/DateRecurViewsFieldTest.php b/tests/src/Kernel/DateRecurViewsFieldTest.php
index 0387981..870eb54 100644
--- a/tests/src/Kernel/DateRecurViewsFieldTest.php
+++ b/tests/src/Kernel/DateRecurViewsFieldTest.php
@@ -64,7 +64,7 @@ class DateRecurViewsFieldTest extends ViewsKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
     $this->installEntitySchema('dr_entity_test');
     ViewTestData::createTestViews(get_class($this), ['date_recur_views_test']);
diff --git a/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php b/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php
index a7c5a2f..0a8d7e5 100644
--- a/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php
+++ b/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php
@@ -25,7 +25,7 @@ class DateRecurViewsOccurrenceFilterAttachedTest extends DateRecurViewsOccurrenc
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
 
     // This is the name of the attached field.
diff --git a/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php b/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php
index f702db1..fad0f92 100644
--- a/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php
+++ b/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php
@@ -55,7 +55,7 @@ class DateRecurViewsOccurrenceFilterTest extends ViewsKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
     $this->installEntitySchema('dr_entity_test');
     ViewTestData::createTestViews(get_class($this), ['date_recur_views_test']);
