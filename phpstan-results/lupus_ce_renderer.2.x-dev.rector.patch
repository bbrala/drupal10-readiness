diff --git a/src/EventSubscriber/CustomElementsControllerSubscriber.php b/src/EventSubscriber/CustomElementsControllerSubscriber.php
index a2529f9..869d326 100644
--- a/src/EventSubscriber/CustomElementsControllerSubscriber.php
+++ b/src/EventSubscriber/CustomElementsControllerSubscriber.php
@@ -37,10 +37,10 @@ class CustomElementsControllerSubscriber implements EventSubscriberInterface {
   /**
    * Take over entity view routes.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterControllerEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ControllerEvent $event
    *   The event.
    */
-  public function onKernelController(FilterControllerEvent $event) {
+  public function onKernelController(\Symfony\Component\HttpKernel\Event\ControllerEvent $event) {
     if ($event->getRequest()->getRequestFormat() != 'custom_elements') {
       return;
     }
diff --git a/src/EventSubscriber/CustomElementsDynamicResponseSubscriber.php b/src/EventSubscriber/CustomElementsDynamicResponseSubscriber.php
index b88c659..0921e41 100644
--- a/src/EventSubscriber/CustomElementsDynamicResponseSubscriber.php
+++ b/src/EventSubscriber/CustomElementsDynamicResponseSubscriber.php
@@ -36,10 +36,10 @@ class CustomElementsDynamicResponseSubscriber implements EventSubscriberInterfac
   /**
    * Stores a response in case of a Dynamic Page Cache miss, if cacheable.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();
     // Do not add dynamic data to redirects.
     if ($response instanceof CustomElementsJsonResponse && !$response->isRedirect()) {
diff --git a/src/EventSubscriber/CustomElementsFormatSubscriber.php b/src/EventSubscriber/CustomElementsFormatSubscriber.php
index 35033a5..19d5ff3 100644
--- a/src/EventSubscriber/CustomElementsFormatSubscriber.php
+++ b/src/EventSubscriber/CustomElementsFormatSubscriber.php
@@ -22,10 +22,10 @@ class CustomElementsFormatSubscriber implements EventSubscriberInterface {
   /**
    * Responds to kernel responses.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();
 
     // Dis-allow html format when custom elements rendering is enabled. Other
diff --git a/src/EventSubscriber/CustomElementsRedirectResponseSubscriber.php b/src/EventSubscriber/CustomElementsRedirectResponseSubscriber.php
index 4b363d9..8e76b29 100644
--- a/src/EventSubscriber/CustomElementsRedirectResponseSubscriber.php
+++ b/src/EventSubscriber/CustomElementsRedirectResponseSubscriber.php
@@ -37,10 +37,10 @@ class CustomElementsRedirectResponseSubscriber implements EventSubscriberInterfa
   /**
    * Handles the response.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $result = $event->getResponse();
     $request = $event->getRequest();
 
diff --git a/src/EventSubscriber/CustomElementsViewSubscriber.php b/src/EventSubscriber/CustomElementsViewSubscriber.php
index 09f45a1..95ea094 100644
--- a/src/EventSubscriber/CustomElementsViewSubscriber.php
+++ b/src/EventSubscriber/CustomElementsViewSubscriber.php
@@ -40,10 +40,10 @@ class CustomElementsViewSubscriber implements EventSubscriberInterface {
   /**
    * Sets a response given a custom element.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForControllerResultEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ViewEvent $event
    *   The event to process.
    */
-  public function onKernelView(GetResponseForControllerResultEvent $event) {
+  public function onKernelView(\Symfony\Component\HttpKernel\Event\ViewEvent $event) {
     $request = $event->getRequest();
     // We need to render error pages (404,403) via custom_elements as requested
     // or configured. If there is 404/403 error and custom_elements is the
@@ -85,12 +85,12 @@ class CustomElementsViewSubscriber implements EventSubscriberInterface {
   /**
    * Handles http 4xx responses gracefully.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForControllerResultEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ViewEvent $event
    *   The event to process.
    *
    * @see \Drupal\lupus_ce_renderer\EventSubscriber\CustomElementsHttpExceptionSubscriber
    */
-  protected function handleClientErrorResponses(GetResponseForControllerResultEvent $event) {
+  protected function handleClientErrorResponses(\Symfony\Component\HttpKernel\Event\ViewEvent $event) {
     // Gracefully handle 401, 403 and 404 routes with a simple #markup key.
     $result = $event->getControllerResult();
     if (!$result instanceof CustomElement) {
