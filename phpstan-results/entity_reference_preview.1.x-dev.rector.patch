diff --git a/src/Events/PreviewNegotiationSubscriber.php b/src/Events/PreviewNegotiationSubscriber.php
index 767e007..5bfa07d 100644
--- a/src/Events/PreviewNegotiationSubscriber.php
+++ b/src/Events/PreviewNegotiationSubscriber.php
@@ -48,10 +48,10 @@ class PreviewNegotiationSubscriber implements EventSubscriberInterface {
   /**
    * Sets a flag in the request object if it belongs to a "latest" route.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event.
    */
-  public function setPreview(GetResponseEvent $event): void {
+  public function setPreview(\Symfony\Component\HttpKernel\Event\RequestEvent $event): void {
     $request = $event->getRequest();
     // Set the global request state in the request object for others to read.
     $active_detector = $this->previewDetector->activeDetector($request);
diff --git a/src/Form/PreviewActionsForm.php b/src/Form/PreviewActionsForm.php
index 1fdf1a1..a7c71ab 100644
--- a/src/Form/PreviewActionsForm.php
+++ b/src/Form/PreviewActionsForm.php
@@ -30,7 +30,7 @@ class PreviewActionsForm extends FormBase {
    * @param \Drupal\entity_reference_preview\Plugin\PreviewDetector\CookiePreviewDetector $cookie_detector
    *   The state detector plugin.
    */
-  public function __construct(CookiePreviewDetector $cookie_detector) {
+  public function __construct(CookiePreviewDetector $cookie_detector, private \Drupal\entity_reference_preview\PreviewDetectorPluginManager $previewDetectorPluginManager) {
     $this->cookieDetector = $cookie_detector;
   }
 
@@ -38,7 +38,7 @@ class PreviewActionsForm extends FormBase {
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    $cookie_detector = $container->get(PreviewDetectorPluginManager::class)
+    $cookie_detector = $this->previewDetectorPluginManager
       ->createInstance('cookie');
     return new static($cookie_detector);
   }
diff --git a/src/Plugin/Field/FieldFormatter/EntityReferenceEntityPreviewFormatter.php b/src/Plugin/Field/FieldFormatter/EntityReferenceEntityPreviewFormatter.php
index 401dd1d..1fd38b8 100644
--- a/src/Plugin/Field/FieldFormatter/EntityReferenceEntityPreviewFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/EntityReferenceEntityPreviewFormatter.php
@@ -83,7 +83,8 @@ class EntityReferenceEntityPreviewFormatter extends EntityReferenceEntityFormatt
     EntityTypeManagerInterface $entity_type_manager,
     EntityDisplayRepositoryInterface $entity_display_repository,
     EntityStateManager $entity_state_manager,
-    bool $can_see_indicator
+    bool $can_see_indicator,
+    \Drupal\entity_reference_preview\Entity\EntityStateManager $entityStateManager
   ) {
     parent::__construct(
       $plugin_id,
@@ -99,6 +100,7 @@ class EntityReferenceEntityPreviewFormatter extends EntityReferenceEntityFormatt
     );
     $this->entityStateManager = $entity_state_manager;
     $this->canSeeIndicator = $can_see_indicator;
+    $this->entityStateManager = $entityStateManager;
   }
 
   /**
@@ -121,7 +123,7 @@ class EntityReferenceEntityPreviewFormatter extends EntityReferenceEntityFormatt
       $container->get('logger.factory'),
       $container->get('entity_type.manager'),
       $container->get('entity_display.repository'),
-      $container->get(EntityStateManager::class),
+      $this->entityStateManager,
       $can_see_indicator && $indicator_enabled
     );
   }
