diff --git a/geofield_map.module b/geofield_map.module
index 2e8a51d..1ce8e68 100755
--- a/geofield_map.module
+++ b/geofield_map.module
@@ -22,7 +22,7 @@ function geofield_map_help($route_name, RouteMatchInterface $route_match) {
       $output .= '<h3>' . t('Geofield Map Help') . '</h3>';
       $output .= '<p>' . t('Map Widget, Formatter and Views integration for Geofields.') . '</p>';
       $output .= '<p>' . t('For more info: @readme', [
-        '@readme' => Link::fromTextAndUrl(t('Readme.md'), Url::fromUri('base:/' . drupal_get_path('module', 'geofield_map') . '/README.md', ['attributes' => ['target' => '_blank']]))->toString(),
+        '@readme' => Link::fromTextAndUrl(t('Readme.md'), Url::fromUri('base:/' . \Drupal::service('extension.list.module')->getPath('geofield_map') . '/README.md', ['attributes' => ['target' => '_blank']]))->toString(),
       ]) . '</p>';
   }
   return $output;
@@ -236,7 +236,7 @@ function geofield_map_preprocess_select(&$variables) {
       '#theme' => 'image',
       '#width' => $image_preview_width,
       '#height' => $image_preview_height,
-      '#uri' => file_create_url($element['#value']),
+      '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($element['#value']),
     ];
     $variables['data'] = [];
     foreach (Element::children($element) as $child) {
diff --git a/modules/geofield_map_extras/geofield_map_extras.module b/modules/geofield_map_extras/geofield_map_extras.module
index 9a272c0..f737a0e 100644
--- a/modules/geofield_map_extras/geofield_map_extras.module
+++ b/modules/geofield_map_extras/geofield_map_extras.module
@@ -19,7 +19,7 @@ function geofield_map_extras_help($route_name, RouteMatchInterface $route_match)
       $output .= '<h3>' . t('Geofield Map Extras Help') . '</h3>';
       $output .= '<p>' . t('Additional features to the main Geofield Map module.') . '</p>';
       $output .= '<p>' . t('For more info: @readme', [
-        '@readme' => Link::fromTextAndUrl(t('Readme.md'), Url::fromUri('base:/' . drupal_get_path('module', 'geofield_map_extras') . '/README.md', ['attributes' => ['target' => '_blank']]))->toString(),
+        '@readme' => Link::fromTextAndUrl(t('Readme.md'), Url::fromUri('base:/' . \Drupal::service('extension.list.module')->getPath('geofield_map_extras') . '/README.md', ['attributes' => ['target' => '_blank']]))->toString(),
       ]) . '</p>';
   }
   return $output;
diff --git a/src/Services/MarkerIconService.php b/src/Services/MarkerIconService.php
index d348ba6..2c1b7bb 100644
--- a/src/Services/MarkerIconService.php
+++ b/src/Services/MarkerIconService.php
@@ -127,7 +127,7 @@ class MarkerIconService {
    * Set Geofield Map Default Icon Style.
    */
   protected function setDefaultIconStyle() {
-    $image_style_path = drupal_get_path('module', 'geofield_map') . '/config/optional/image.style.geofield_map_default_icon_style.yml';
+    $image_style_path = \Drupal::service('extension.list.module')->getPath('geofield_map') . '/config/optional/image.style.geofield_map_default_icon_style.yml';
     $image_style_data = Yaml::parse(file_get_contents($image_style_path));
     $geofield_map_default_icon_style = $this->config->getEditable('image.style.geofield_map_default_icon_style');
     if ($geofield_map_default_icon_style instanceof Config) {
@@ -571,7 +571,7 @@ class MarkerIconService {
   public function getLegendIconFromFileUri($file_uri, $icon_width = NULL) {
     $icon_element = [
       '#theme' => 'image',
-      '#uri' => file_create_url($file_uri),
+      '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($file_uri),
       '#attributes' => [
         'width' => $icon_width,
       ],
@@ -631,7 +631,7 @@ class MarkerIconService {
           $url = ImageStyle::load($image_style)->buildUrl($uri);
         }
         else {
-          $url = file_create_url($uri);
+          $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
         }
         return $url;
       }
@@ -653,7 +653,7 @@ class MarkerIconService {
    */
   public function getFileSelectedUrl($file_uri = NULL) {
     if (isset($file_uri)) {
-      $url = file_create_url($file_uri);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file_uri);
       return $url;
     }
     return NULL;
