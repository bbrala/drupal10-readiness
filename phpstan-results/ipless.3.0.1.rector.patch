diff --git a/src/Asset/AssetRenderer.php b/src/Asset/AssetRenderer.php
index 9cd58e7..2483cdc 100644
--- a/src/Asset/AssetRenderer.php
+++ b/src/Asset/AssetRenderer.php
@@ -185,7 +185,7 @@ class AssetRenderer implements AssetRendererInterface {
       $less->parseFile($file, $path);
 
       $event = new IplessCompilationEvent($this);
-      $this->eventDispatcher->dispatch(IplessEvents::LESS_FILE_COMPILED, $event);
+      $this->eventDispatcher->dispatch($event, IplessEvents::LESS_FILE_COMPILED);
 
       $this->preparePath($output);
       file_put_contents($output, $less->getCss());
diff --git a/src/Event/IplessCompilationEvent.php b/src/Event/IplessCompilationEvent.php
index 30017f3..01fa84e 100644
--- a/src/Event/IplessCompilationEvent.php
+++ b/src/Event/IplessCompilationEvent.php
@@ -10,7 +10,7 @@ use Drupal\ipless\Asset\AssetRenderer;
  *
  * @author Damien LAGUERRE
  */
-class IplessCompilationEvent extends Event {
+class IplessCompilationEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Less AssetRenderer.
diff --git a/src/Event/IplessEvents.php b/src/Event/IplessEvents.php
index b4e5bce..e7ec556 100644
--- a/src/Event/IplessEvents.php
+++ b/src/Event/IplessEvents.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @author Damien LAGUERRE
  */
-final class IplessEvents extends Event {
+final class IplessEvents extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Name of the event fired when a less file is compiled.
diff --git a/src/EventSubscriber/HtmlResponseIplessSubscriber.php b/src/EventSubscriber/HtmlResponseIplessSubscriber.php
index 176bc96..d8216d1 100644
--- a/src/EventSubscriber/HtmlResponseIplessSubscriber.php
+++ b/src/EventSubscriber/HtmlResponseIplessSubscriber.php
@@ -51,10 +51,10 @@ class HtmlResponseIplessSubscriber implements EventSubscriberInterface {
   /**
    * Generate Less files.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();
 
     if (!$response instanceof HtmlResponse || !$this->ipless->isEnabled()) {
