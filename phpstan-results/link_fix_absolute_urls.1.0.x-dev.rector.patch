diff --git a/link_fix_absolute_urls.info.yml b/link_fix_absolute_urls.info.yml
index d32f7bd..bac67c8 100644
--- a/link_fix_absolute_urls.info.yml
+++ b/link_fix_absolute_urls.info.yml
@@ -1,7 +1,7 @@
 name: 'Link: Fix Absolute URLs'
 type: module
 description: 'Convert absolute URLs in link fields to internal paths when appropriate.'
-core_version_requirement: '^8.8 || ^9'
+core_version_requirement: ^9.3 || ^10
 package: 'Fields'
 dependencies:
   - drupal:link
diff --git a/tests/src/Functional/LinkValueTest.php b/tests/src/Functional/LinkValueTest.php
index 168ebe4..7441837 100644
--- a/tests/src/Functional/LinkValueTest.php
+++ b/tests/src/Functional/LinkValueTest.php
@@ -46,7 +46,7 @@ class LinkValueTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'administer site configuration',
@@ -87,14 +87,14 @@ class LinkValueTest extends BrowserTestBase {
     $this->assertSession()->statusCodeEquals(200);
 
     // Confirm the link is on the page.
-    $this->assertLink('The link');
-    $this->assertLinkByHref('https://www.drupal.org/project/link_fix_absolute_urls');
+    $this->assertSession()->linkExists('The link');
+    $this->assertSession()->linkByHrefExists('https://www.drupal.org/project/link_fix_absolute_urls');
 
     // Confirm the URL value is stored correctly and not modified.
     $field = $node->get('field_test_link');
     $field = reset($field);
     $field = reset($field);
-    $this->assertEqual($field->get('uri')->getValue(), 'https://www.drupal.org/project/link_fix_absolute_urls');
+    $this->assertEquals($field->get('uri')->getValue(), 'https://www.drupal.org/project/link_fix_absolute_urls');
   }
 
   /**
@@ -125,14 +125,14 @@ class LinkValueTest extends BrowserTestBase {
 
     // Confirm the link is on the page. Note that the URL will be output as a
     // relative URL.
-    $this->assertLink('The link');
-    $this->assertLinkByHref('/node/' . $node1->id());
+    $this->assertSession()->linkExists('The link');
+    $this->assertSession()->linkByHrefExists('/node/' . $node1->id());
 
     // Confirm the URL values.
     $field = $node2->get('field_test_link');
     $field = reset($field);
     $field = reset($field);
-    $this->assertEqual($field->get('uri')->getValue(), 'entity:node/' . $node1->id());
+    $this->assertEquals($field->get('uri')->getValue(), 'entity:node/' . $node1->id());
   }
 
   /**
@@ -173,14 +173,14 @@ class LinkValueTest extends BrowserTestBase {
 
     // Confirm the link is on the page. Note that the URL will be output as a
     // relative URL.
-    $this->assertLink('The link');
-    $this->assertLinkByHref('/test-node-1');
+    $this->assertSession()->linkExists('The link');
+    $this->assertSession()->linkByHrefExists('/test-node-1');
 
     // Confirm the URL values.
     $field = $node2->get('field_test_link');
     $field = reset($field);
     $field = reset($field);
-    $this->assertEqual($field->get('uri')->getValue(), 'entity:node/' . $node1->id());
+    $this->assertEquals($field->get('uri')->getValue(), 'entity:node/' . $node1->id());
   }
 
   /**
@@ -229,14 +229,14 @@ class LinkValueTest extends BrowserTestBase {
 
       // Confirm the link is on the page. Note that the URL will be output as a
       // relative URL.
-      $this->assertLink('The link');
-      $this->assertLinkByHref('/node/' . $node1->id());
+      $this->assertSession()->linkExists('The link');
+      $this->assertSession()->linkByHrefExists('/node/' . $node1->id());
 
       // Confirm the URL values.
       $field = $node->get('field_test_link');
       $field = reset($field);
       $field = reset($field);
-      $this->assertEqual($field->get('uri')->getValue(), 'entity:node/' . $node1->id());
+      $this->assertEquals($field->get('uri')->getValue(), 'entity:node/' . $node1->id());
     }
   }
 
@@ -259,8 +259,8 @@ class LinkValueTest extends BrowserTestBase {
 
     // Confirm the link is on the page. Note that the URL will be output as a
     // relative URL.
-    $this->assertLink('The link');
-    $this->assertLinkByHref('/this/path/does/not/exist');
+    $this->assertSession()->linkExists('The link');
+    $this->assertSession()->linkByHrefExists('/this/path/does/not/exist');
   }
 
   /**
@@ -277,7 +277,7 @@ class LinkValueTest extends BrowserTestBase {
     $file = $files[0];
 
     // Get the public external URL for the file.
-    $file_path = file_create_url($file->uri);
+    $file_path = \Drupal::service('file_url_generator')->generateAbsoluteString($file->uri);
 
     // The file path without the hostname portion of the URL.
     $file_path_local = str_replace($base_url, base_path(), $file_path);
@@ -296,8 +296,8 @@ class LinkValueTest extends BrowserTestBase {
     $this->assertSession()->statusCodeEquals(200);
 
     // Confirm the link is on the page.
-    $this->assertLink('The link');
-    $this->assertLinkByHref($file_path_local);
+    $this->assertSession()->linkExists('The link');
+    $this->assertSession()->linkByHrefExists($file_path_local);
   }
 
   /**
