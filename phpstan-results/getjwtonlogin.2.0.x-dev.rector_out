[parsing] modules/contrib/getjwtonlogin/getjwtonlogin.module
[refactoring] modules/contrib/getjwtonlogin/getjwtonlogin.module
[post rectors] modules/contrib/getjwtonlogin/getjwtonlogin.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/getjwtonlogin/getjwtonlogin.module
[parsing] modules/contrib/getjwtonlogin/src/EventSubscriber/JwtLoginSubscriber.php
[refactoring] modules/contrib/getjwtonlogin/src/EventSubscriber/JwtLoginSubscriber.php
[post rectors] modules/contrib/getjwtonlogin/src/EventSubscriber/JwtLoginSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/getjwtonlogin/src/EventSubscriber/JwtLoginSubscriber.php
[refactoring] modules/contrib/getjwtonlogin/src/EventSubscriber/JwtLoginSubscriber.php
[post rectors] modules/contrib/getjwtonlogin/src/EventSubscriber/JwtLoginSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/getjwtonlogin/src/EventSubscriber/JwtLoginSubscriber.php
[parsing] modules/contrib/getjwtonlogin/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php
[refactoring] modules/contrib/getjwtonlogin/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php
[post rectors] modules/contrib/getjwtonlogin/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/getjwtonlogin/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php
[refactoring] modules/contrib/getjwtonlogin/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php
[post rectors] modules/contrib/getjwtonlogin/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/getjwtonlogin/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php

2 files with changes
====================

1) modules/contrib/getjwtonlogin/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

-    $this->jwtAuth = $this->getMockBuilder('\Drupal\jwt\Authentication\Provider\JwtAuth')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->jwtAuth = $this->createMock('\Drupal\jwt\Authentication\Provider\JwtAuth');
     $this->jwtAuth->expects($this->any())
       ->method('generateToken')
       ->willReturn($this->getRandomGenerator()->string());
@@ @@
     $request = new Request();
     $request->attributes->set('_route', 'user.logout.http');
     $response = new Response('{}', 200);
-    $event = new FilterResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);
+    $event = new \Symfony\Component\HttpKernel\Event\ResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);

     // Call the event handler.
     $subscriber->onHttpLoginResponse($event);
@@ @@
     $request = new Request();
     $request->attributes->set('_route', 'user.login.http');
     $response = new Response('{}', 400);
-    $event = new FilterResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);
+    $event = new \Symfony\Component\HttpKernel\Event\ResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);

     // Call the event handler.
     $subscriber->onHttpLoginResponse($event);
@@ @@
     $request = new Request();
     $request->attributes->set('_route', 'user.login.http');
     $response = new Response(JSON::encode(['current_user' => ['uid' => '1']]), 200);
-    $event = new FilterResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);
+    $event = new \Symfony\Component\HttpKernel\Event\ResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);

     // Call the event handler.
     $subscriber->onHttpLoginResponse($event);
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/getjwtonlogin/src/EventSubscriber/JwtLoginSubscriber.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * Add JWT access token to user login API response
    */
-  public function onHttpLoginResponse(FilterResponseEvent $event): void {
+  public function onHttpLoginResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event): void {
     // Halt if not user login request
     if ($this->currentPath->getPath() !== '/user/login') {
       return;
    ----------- end diff -----------

Applied rules:
 * RenameClassRector


 [OK] 2 files have been changed by Rector                                       

