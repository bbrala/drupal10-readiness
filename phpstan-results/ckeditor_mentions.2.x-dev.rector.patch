diff --git a/src/CKEditorMentionEvent.php b/src/CKEditorMentionEvent.php
index f0fec62..347e5bb 100644
--- a/src/CKEditorMentionEvent.php
+++ b/src/CKEditorMentionEvent.php
@@ -16,7 +16,7 @@ use Symfony\Component\EventDispatcher\Event;
  * @deprecated in ckeditor_mentions:2.0.0 and is removed from ckeditor_mentions:3.0.0.
  * Instead use \Drupal\ckeditor_mentions\Events\CKEditorMentionEventInterface in the Event subscriber type declaration.
  */
-class CKEditorMentionEvent extends Event implements CKEditorMentionEventInterface {
+class CKEditorMentionEvent extends \Symfony\Contracts\EventDispatcher\Event implements CKEditorMentionEventInterface {
 
   /**
    * @deprecated in ckeditor_mentions:2.0.0 and is removed from ckeditor_mentions:3.0.0.
diff --git a/src/CKEditorMentionSuggestionEvent.php b/src/CKEditorMentionSuggestionEvent.php
index 888adef..11f8db2 100644
--- a/src/CKEditorMentionSuggestionEvent.php
+++ b/src/CKEditorMentionSuggestionEvent.php
@@ -14,7 +14,7 @@ use Symfony\Component\EventDispatcher\Event;
  * @deprecated in ckeditor_mentions:2.0.0 and is removed from ckeditor_mentions:3.0.0.
  * Instead use \Drupal\ckeditor_mentions\Events\CKEditorMentionSuggestionEventInterface in the Event subscriber type declaration.
  */
-class CKEditorMentionSuggestionEvent extends Event implements CKEditorMentionSuggestionEventInterface {
+class CKEditorMentionSuggestionEvent extends \Symfony\Contracts\EventDispatcher\Event implements CKEditorMentionSuggestionEventInterface {
 
   /**
    * @deprecated in ckeditor_mentions:2.0.0 and is removed from ckeditor_mentions:3.0.0.
diff --git a/src/Events/CKEditorMentionSuggestionsEvent.php b/src/Events/CKEditorMentionSuggestionsEvent.php
index f0ee379..7253b80 100644
--- a/src/Events/CKEditorMentionSuggestionsEvent.php
+++ b/src/Events/CKEditorMentionSuggestionsEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\ckeditor_mentions
  */
-class CKEditorMentionSuggestionsEvent extends Event implements CKEditorMentionSuggestionEventInterface {
+class CKEditorMentionSuggestionsEvent extends \Symfony\Contracts\EventDispatcher\Event implements CKEditorMentionSuggestionEventInterface {
 
   /**
    * The keyword used by the user.
diff --git a/src/Events/CKEditorMentionsEvent.php b/src/Events/CKEditorMentionsEvent.php
index dc7d418..54e4f76 100644
--- a/src/Events/CKEditorMentionsEvent.php
+++ b/src/Events/CKEditorMentionsEvent.php
@@ -11,7 +11,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\ckeditor_mentions
  */
-class CKEditorMentionsEvent extends Event implements CKEditorMentionEventInterface {
+class CKEditorMentionsEvent extends \Symfony\Contracts\EventDispatcher\Event implements CKEditorMentionEventInterface {
 
   /**
    * The entity.
diff --git a/src/MentionEventDispatcher.php b/src/MentionEventDispatcher.php
index 43d224f..559de38 100644
--- a/src/MentionEventDispatcher.php
+++ b/src/MentionEventDispatcher.php
@@ -113,14 +113,14 @@ class MentionEventDispatcher {
     // @todo Remove in 3.0
     foreach ($mentioned_entities as $mentioned_entity) {
       $event = new CKEditorMentionsEvent($entity, $mentioned_entity['entity'], $mentioned_entity['plugin'], $mentioned_entity);
-      $dispatcher->dispatch($event_name, $event);
+      $dispatcher->dispatch($event, $event_name);
 
       $legacy_event_name = $event_name === CKEditorEvents::MENTION_FIRST ? CKEditorMentionEvent::MENTION_FIRST : CKEditorMentionEvent::MENTION_SUBSEQUENT;
       $legacy_event = new CKEditorMentionEvent($event->getEntity(), [
         'entity' => $event->getMentionedEntity(),
         'plugin' => $event->getPlugin(),
       ] + $event->getAdditionalInformation());
-      $dispatcher->dispatch($legacy_event_name, $legacy_event);
+      $dispatcher->dispatch($legacy_event, $legacy_event_name);
     }
   }
 
diff --git a/src/MentionsType/MentionsTypeBase.php b/src/MentionsType/MentionsTypeBase.php
index 626b16e..46b6631 100644
--- a/src/MentionsType/MentionsTypeBase.php
+++ b/src/MentionsType/MentionsTypeBase.php
@@ -181,11 +181,11 @@ abstract class MentionsTypeBase extends PluginBase implements MentionsTypeInterf
    */
   protected function dispatchSuggestionsEvent(array $suggestions): array {
     $suggestion_event = new CKEditorMentionSuggestionsEvent($this->getMatch(), $suggestions);
-    $this->eventDispatcher->dispatch(CKEditorEvents::SUGGESTION, $suggestion_event);
+    $this->eventDispatcher->dispatch($suggestion_event, CKEditorEvents::SUGGESTION);
     // @todo Remove in 3.0
     $suggestion_event_legacy = new CKEditorMentionSuggestionEvent($this->getMatch());
     $suggestion_event_legacy->setSuggestions($suggestion_event->getSuggestions());
-    $this->eventDispatcher->dispatch(CKEditorMentionSuggestionEvent::SUGGESTION, $suggestion_event);
+    $this->eventDispatcher->dispatch($suggestion_event, CKEditorMentionSuggestionEvent::SUGGESTION);
 
     return $suggestion_event_legacy->getSuggestions();
   }
diff --git a/tests/src/Kernel/CkeditorMentionsEventsTest.php b/tests/src/Kernel/CkeditorMentionsEventsTest.php
index 42c4fc9..8671c13 100644
--- a/tests/src/Kernel/CkeditorMentionsEventsTest.php
+++ b/tests/src/Kernel/CkeditorMentionsEventsTest.php
@@ -62,7 +62,7 @@ class CkeditorMentionsEventsTest extends KernelTestBase {
     $entities = $this->dispatcher->getMentionedEntities($search_string);
 
     $this->assertNotEmpty($entities);
-    $this->assertEqual($entities[$id]['entity']->id(), $user->id());
+    $this->assertEquals($entities[$id]['entity']->id(), $user->id());
 
     $search_string = "<p><a data-mention=\"$id\" data-plugin=\"not_existing\" href=\"/user/3\">@Kekwinko Pesto</a></p>";
     $this->expectException(PluginNotFoundException::class);
@@ -74,7 +74,7 @@ class CkeditorMentionsEventsTest extends KernelTestBase {
    */
   public function testTestFormatUsingMentions() {
     $formats = $this->dispatcher->getTexformatsUsingMentions();
-    $this->assertEqual([$this->format->id()], $formats);
+    $this->assertEquals([$this->format->id()], $formats);
 
     $setting = $this->editor->getSettings();
     $setting['plugins']['mentions']['enable'] = FALSE;
@@ -116,7 +116,7 @@ class CkeditorMentionsEventsTest extends KernelTestBase {
     ]);
 
     $this->dispatcher->dispatchMentionEvent($node, CKEditorEvents::MENTION_FIRST);
-    $this->assertEqual($node->getTitle(), TestSubscriber::TEST_MENTIONED_USER_NAME);
+    $this->assertEquals($node->getTitle(), TestSubscriber::TEST_MENTIONED_USER_NAME);
   }
 
   /**
@@ -136,7 +136,7 @@ class CkeditorMentionsEventsTest extends KernelTestBase {
     ]);
     $response = $plugin->buildResponse();
 
-    $this->assertEqual($response, TestSubscriber::TEST_SUGGESTION_EXPECT);
+    $this->assertEquals($response, TestSubscriber::TEST_SUGGESTION_EXPECT);
   }
 
 }
diff --git a/tests/src/Kernel/CkeditorMentionsUserTest.php b/tests/src/Kernel/CkeditorMentionsUserTest.php
index 849e814..c372979 100644
--- a/tests/src/Kernel/CkeditorMentionsUserTest.php
+++ b/tests/src/Kernel/CkeditorMentionsUserTest.php
@@ -50,7 +50,7 @@ class CkeditorMentionsUserTest extends KernelTestBase {
         'user_name' => $user->getDisplayName(),
       ];
     }
-    $this->assertIdentical($response, $expected);
+    $this->assertSame($response, $expected);
 
     $plugin->setMatch('Kip');
     $response = $plugin->buildResponse();
@@ -75,7 +75,7 @@ class CkeditorMentionsUserTest extends KernelTestBase {
     $response = $plugin->buildResponse();
 
     $this->assertNotEmpty($response);
-    $this->assertEqual(current($response)['id'], $user->id());
+    $this->assertEquals(current($response)['id'], $user->id());
   }
 
 }
