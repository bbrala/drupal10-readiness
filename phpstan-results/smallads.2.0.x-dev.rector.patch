diff --git a/csvimport-deprecated/src/ImportSmallads.php b/csvimport-deprecated/src/ImportSmallads.php
index c3f8757..14eeef4 100644
--- a/csvimport-deprecated/src/ImportSmallads.php
+++ b/csvimport-deprecated/src/ImportSmallads.php
@@ -147,7 +147,9 @@ class ImportSmallads extends \Drupal\Core\Form\FormBase {
     foreach ($incoming_terms as $key => $term) {
       $incoming_terms[$key] = trim($term);
     }
-    $all_terms = db_query("SELECT LOWER(name) FROM {taxonomy_term_data}")->fetchCol();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $all_terms = \Drupal::database()->query("SELECT LOWER(name) FROM {taxonomy_term_data}")->fetchCol();
     $new_terms = array_diff(array_unique($incoming_terms), $all_terms);
 
     if (count($new_terms)) {
@@ -168,7 +170,9 @@ class ImportSmallads extends \Drupal\Core\Form\FormBase {
     $rows = $this->loadCsv($form_state);
 
     //get the terms so we can lookup the ids
-    $all_terms = db_query("
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $all_terms = \Drupal::database()->query("
       SELECT d.tid, d.vid, d.name, LOWER(d.name) as term_name, v.name, v.machine_name
       FROM {taxonomy_term_data} d
       LEFT JOIN {taxonomy_vocabulary} v ON d.vid = v.vid
@@ -224,10 +228,9 @@ class ImportSmallads extends \Drupal\Core\Form\FormBase {
       }
       node_save($node);
       if (array_key_exists('created', $row)) {
-        db_query(
-          "UPDATE {node} SET changed = :changed where nid = $node->nid",
-          array('changed' => is_numeric($row['created']) ? $row['created'] : strtotime($row['created']))
-        );
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        \Drupal::database()->query("UPDATE {node} SET changed = :changed where nid = $node->nid", array('changed' => is_numeric($row['created']) ? $row['created'] : strtotime($row['created'])));
       }
       $imported++;
     }
diff --git a/smallads.module b/smallads.module
index 5f48c9a..72b4459 100644
--- a/smallads.module
+++ b/smallads.module
@@ -260,7 +260,7 @@ function smallads_cron() {
   // Find out how to filter by relative dates.
   $smids = \Drupal::entityTypeManager()->getStorage('smallad')->getQuery()
     // Actually the date is stored as dd-mm-yyyy.
-    ->condition('expires', gmdate('Y-m-d', REQUEST_TIME), '<')
+    ->condition('expires', gmdate('Y-m-d', \Drupal::time()->getRequestTime()), '<')
     ->condition('scope', 0, '>')
     ->execute();
   $queue = \Drupal::queue('smallads_expired_mail');
diff --git a/src/Form/SmalladEdit.php b/src/Form/SmalladEdit.php
index bbdecdc..600034e 100644
--- a/src/Form/SmalladEdit.php
+++ b/src/Form/SmalladEdit.php
@@ -102,7 +102,7 @@ class SmalladEdit extends ContentEntityForm {
   public function validateForm(array &$form, FormStateInterface $form_state) {
     $this->entity = parent::validateForm($form, $form_state);
     // Warn the user about the expiry date.
-    if (strtotime($this->entity->expires->value) - REQUEST_TIME > 0) {// Expires in the future.
+    if (strtotime($this->entity->expires->value) - \Drupal::time()->getRequestTime() > 0) {// Expires in the future.
       if ($this->entity->scope->value == SmalladInterface::SCOPE_PRIVATE) {
         $message = $this->t('If the expiry date is after now, the scope must not be private');
         $form_state->setErrorByName('scope', $message);
diff --git a/src/Form/SmalladTypeForm.php b/src/Form/SmalladTypeForm.php
index 2f6dd7d..9e7c9d9 100644
--- a/src/Form/SmalladTypeForm.php
+++ b/src/Form/SmalladTypeForm.php
@@ -73,7 +73,9 @@ class SmalladTypeForm extends EntityForm {
     $smallad_type = $this->entity;
     $smallad_type->save();
 
-    $form_state->setRedirectUrl($smallad_type->urlInfo('collection'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Please confirm that `$smallad_type` is an instance of `Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+    $form_state->setRedirectUrl($smallad_type->toUrl('collection'));
     // If the plural has changed we need to rebuild the menu.
     \Drupal::service('router.builder')->rebuild();
   }
diff --git a/src/Plugin/Field/FieldFormatter/TimeBeforeAfterFormatter.php b/src/Plugin/Field/FieldFormatter/TimeBeforeAfterFormatter.php
index b78876b..58c6fdc 100644
--- a/src/Plugin/Field/FieldFormatter/TimeBeforeAfterFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/TimeBeforeAfterFormatter.php
@@ -28,7 +28,7 @@ class TimeBeforeAfterFormatter extends BooleanFormatter {
     // @todo include the library
     $elements = array();
     foreach ($items as $delta => &$item) {
-      if (REQUEST_TIME > $item->value) {
+      if (\Drupal::time()->getRequestTime() > $item->value) {
         $item->value = FALSE;
         $class = 'expired';
       }
diff --git a/src/SmalladListBuilder.php b/src/SmalladListBuilder.php
index 2fa5888..a83f389 100644
--- a/src/SmalladListBuilder.php
+++ b/src/SmalladListBuilder.php
@@ -117,7 +117,7 @@ class SmalladListBuilder extends EntityListBuilder {
     $row['scope'] = $scopeMap[$entity->scope->value];
     $row['type'] = $entity->type->entity->label();
     $row['title'] = $entity->title->value;
-    $row['changed'] = $this->dateFormatter->formatInterval(REQUEST_TIME - $entity->changed->value);
+    $row['changed'] = $this->dateFormatter->formatInterval(\Drupal::time()->getRequestTime() - $entity->changed->value);
 
     return $row + parent::buildRow($entity);
   }
