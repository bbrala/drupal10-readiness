diff --git a/src/Controller/Api.php b/src/Controller/Api.php
index bb8d388..6672f0d 100644
--- a/src/Controller/Api.php
+++ b/src/Controller/Api.php
@@ -352,7 +352,7 @@ class Api implements ContainerInjectionInterface {
     }
 
     $event = new Rendered($response, $this->device);
-    $this->eventDispatcher->dispatch(DigitalSignageFrameworkEvents::RENDERED, $event);
+    $this->eventDispatcher->dispatch($event, DigitalSignageFrameworkEvents::RENDERED);
 
     return $event->getResponse();
   }
@@ -455,12 +455,12 @@ class Api implements ContainerInjectionInterface {
    */
   private function getSchedule(): JsonResponse {
     $underlays = new Underlays($this->device);
-    $this->eventDispatcher->dispatch(DigitalSignageFrameworkEvents::UNDERLAYS, $underlays);
+    $this->eventDispatcher->dispatch($underlays, DigitalSignageFrameworkEvents::UNDERLAYS);
     $overlays = new Overlays($this->device);
-    $this->eventDispatcher->dispatch(DigitalSignageFrameworkEvents::OVERLAYS, $overlays);
+    $this->eventDispatcher->dispatch($overlays, DigitalSignageFrameworkEvents::OVERLAYS);
 
     $event = new Libraries($this->device);
-    $this->eventDispatcher->dispatch(DigitalSignageFrameworkEvents::LIBRARIES, $event);
+    $this->eventDispatcher->dispatch($event, DigitalSignageFrameworkEvents::LIBRARIES);
     $libraries = $event->getLibraries();
     $libraries[] = 'digital_signage_framework/schedule.content';
     $libraries[] = 'digital_signage_framework/schedule.timer';
@@ -625,7 +625,7 @@ class Api implements ContainerInjectionInterface {
       }
     }
 
-    $this->eventDispatcher->dispatch(DigitalSignageFrameworkEvents::LIBRARIES, $event);
+    $this->eventDispatcher->dispatch($event, DigitalSignageFrameworkEvents::LIBRARIES);
     return $this->renderAssets($event->getLibraries(), $event->getSettings(), TRUE, $this->prepareHtmlHead($build));
   }
 
@@ -726,9 +726,9 @@ class Api implements ContainerInjectionInterface {
    */
   private function popupContent($output): AjaxResponse {
     $underlays = new Underlays($this->device);
-    $this->eventDispatcher->dispatch(DigitalSignageFrameworkEvents::UNDERLAYS, $underlays);
+    $this->eventDispatcher->dispatch($underlays, DigitalSignageFrameworkEvents::UNDERLAYS);
     $overlays = new Overlays($this->device);
-    $this->eventDispatcher->dispatch(DigitalSignageFrameworkEvents::OVERLAYS, $overlays);
+    $this->eventDispatcher->dispatch($overlays, DigitalSignageFrameworkEvents::OVERLAYS);
 
     $content = is_array($output) ? $this->renderer->renderRoot($output) : $output;
     /** @var array $build */
diff --git a/src/Event/Libraries.php b/src/Event/Libraries.php
index 9f1fc2c..208a013 100644
--- a/src/Event/Libraries.php
+++ b/src/Event/Libraries.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\digital_signage_framework\Event
  */
-class Libraries extends Event {
+class Libraries extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * @var array
diff --git a/src/Event/Overlays.php b/src/Event/Overlays.php
index bcac9f3..2901f69 100644
--- a/src/Event/Overlays.php
+++ b/src/Event/Overlays.php
@@ -11,7 +11,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\digital_signage_framework\Event
  */
-class Overlays extends Event {
+class Overlays extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * @var array
diff --git a/src/Event/Rendered.php b/src/Event/Rendered.php
index add624f..6025d7f 100644
--- a/src/Event/Rendered.php
+++ b/src/Event/Rendered.php
@@ -11,7 +11,7 @@ use Symfony\Component\HttpFoundation\Response;
  *
  * @package Drupal\digital_signage_framework\Event
  */
-class Rendered extends Event {
+class Rendered extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * @var \Symfony\Component\HttpFoundation\Response
diff --git a/src/Event/Underlays.php b/src/Event/Underlays.php
index daf73dd..8387ee6 100644
--- a/src/Event/Underlays.php
+++ b/src/Event/Underlays.php
@@ -11,7 +11,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\digital_signage_framework\Event
  */
-class Underlays extends Event {
+class Underlays extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * @var array
