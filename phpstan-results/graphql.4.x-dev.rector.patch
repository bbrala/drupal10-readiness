diff --git a/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageDerivativeTest.php b/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageDerivativeTest.php
index cfd9263..1c52b89 100644
--- a/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageDerivativeTest.php
+++ b/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageDerivativeTest.php
@@ -28,9 +28,7 @@ class ImageDerivativeTest extends GraphQLTestBase {
 
     $this->file_uri = 'public://test.jpg';
 
-    $this->file = $this->getMockBuilder(FileInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->file = $this->createMock(FileInterface::class);
 
     $this->file->method('getFileUri')->willReturn($this->file_uri);
     $this->file->method('access')->willReturn((new AccessResultAllowed())->addCacheTags(['test_tag']));
@@ -49,9 +47,7 @@ class ImageDerivativeTest extends GraphQLTestBase {
     $this->style->addImageEffect($effect);
     $this->style->save();
 
-    $this->file_not_accessible = $this->getMockBuilder(FileInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->file_not_accessible = $this->createMock(FileInterface::class);
 
     $this->file_not_accessible->method('access')->willReturn((new AccessResultForbidden())->addCacheTags(['test_tag_forbidden']));
   }
diff --git a/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageUrlTest.php b/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageUrlTest.php
index 705da43..5a18c31 100644
--- a/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageUrlTest.php
+++ b/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageUrlTest.php
@@ -23,16 +23,12 @@ class ImageUrlTest extends GraphQLTestBase {
 
     $this->fileUri = \Drupal::service('file_url_generator')->generateAbsoluteString('public://test.jpg');
 
-    $this->file = $this->getMockBuilder(FileInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->file = $this->createMock(FileInterface::class);
 
     $this->file->method('getFileUri')->willReturn($this->fileUri);
     $this->file->method('access')->willReturn((new AccessResultAllowed())->addCacheTags(['test_tag']));
 
-    $this->file_not_accessible = $this->getMockBuilder(FileInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->file_not_accessible = $this->createMock(FileInterface::class);
 
     $this->file_not_accessible->method('access')->willReturn((new AccessResultForbidden())->addCacheTags(['test_tag_forbidden']));
   }
diff --git a/tests/src/Kernel/DataProducer/EntityMultipleTest.php b/tests/src/Kernel/DataProducer/EntityMultipleTest.php
index a363526..2a2bc3c 100644
--- a/tests/src/Kernel/DataProducer/EntityMultipleTest.php
+++ b/tests/src/Kernel/DataProducer/EntityMultipleTest.php
@@ -42,17 +42,11 @@ class EntityMultipleTest extends GraphQLTestBase {
   public function setUp(): void {
     parent::setUp();
 
-    $this->entity = $this->getMockBuilder(NodeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity = $this->createMock(NodeInterface::class);
 
-    $this->entity_interface = $this->getMockBuilder(EntityInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity_interface = $this->createMock(EntityInterface::class);
 
-    $this->user = $this->getMockBuilder(UserInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->user = $this->createMock(UserInterface::class);
 
     $content_type = NodeType::create([
       'type' => 'lorem',
diff --git a/tests/src/Kernel/DataProducer/EntityReferenceTest.php b/tests/src/Kernel/DataProducer/EntityReferenceTest.php
index 3197dd8..1b758f5 100644
--- a/tests/src/Kernel/DataProducer/EntityReferenceTest.php
+++ b/tests/src/Kernel/DataProducer/EntityReferenceTest.php
@@ -25,17 +25,11 @@ class EntityReferenceTest extends GraphQLTestBase {
   public function setUp(): void {
     parent::setUp();
 
-    $this->entity = $this->getMockBuilder(NodeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity = $this->createMock(NodeInterface::class);
 
-    $this->entity_interface = $this->getMockBuilder(EntityInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity_interface = $this->createMock(EntityInterface::class);
 
-    $this->user = $this->getMockBuilder(UserInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->user = $this->createMock(UserInterface::class);
 
     $content_type1 = NodeType::create([
       'type' => 'test1',
diff --git a/tests/src/Kernel/DataProducer/EntityTest.php b/tests/src/Kernel/DataProducer/EntityTest.php
index 7edd596..1b3d65a 100644
--- a/tests/src/Kernel/DataProducer/EntityTest.php
+++ b/tests/src/Kernel/DataProducer/EntityTest.php
@@ -30,17 +30,11 @@ class EntityTest extends GraphQLTestBase {
   public function setUp(): void {
     parent::setUp();
 
-    $this->entity = $this->getMockBuilder(NodeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity = $this->createMock(NodeInterface::class);
 
-    $this->entity_interface = $this->getMockBuilder(EntityInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity_interface = $this->createMock(EntityInterface::class);
 
-    $this->user = $this->getMockBuilder(UserInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->user = $this->createMock(UserInterface::class);
 
     $content_type = NodeType::create([
       'type' => 'lorem',
@@ -130,9 +124,7 @@ class EntityTest extends GraphQLTestBase {
    * @covers \Drupal\graphql\Plugin\GraphQL\DataProducer\Entity\EntityDescription::resolve
    */
   public function testResolveDescription(): void {
-    $entity = $this->getMockBuilder(EntityTestBundle::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity = $this->createMock(EntityTestBundle::class);
 
     $entity->expects($this->once())
       ->method('getDescription')
@@ -173,9 +165,7 @@ class EntityTest extends GraphQLTestBase {
    * @covers \Drupal\graphql\Plugin\GraphQL\DataProducer\Entity\EntityLanguage::resolve
    */
   public function testResolveLanguage(): void {
-    $language = $this->getMockBuilder(LanguageInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $language = $this->createMock(LanguageInterface::class);
 
     $this->entity->expects($this->once())
       ->method('language')
@@ -273,9 +263,7 @@ class EntityTest extends GraphQLTestBase {
    * @covers \Drupal\graphql\Plugin\GraphQL\DataProducer\Entity\EntityUrl::resolve
    */
   public function testResolveUrl(): void {
-    $url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock(Url::class);
 
     $this->entity->expects($this->once())
       ->method('toUrl')
diff --git a/tests/src/Kernel/Framework/DisabledResultCacheTest.php b/tests/src/Kernel/Framework/DisabledResultCacheTest.php
index 8dff919..b85e36a 100644
--- a/tests/src/Kernel/Framework/DisabledResultCacheTest.php
+++ b/tests/src/Kernel/Framework/DisabledResultCacheTest.php
@@ -41,6 +41,7 @@ GQL;
 
   /**
    * Test if disabling the result cache has the desired effect.
+   * @doesNotPerformAssertions
    */
   public function testDisabledCache(): void {
     $this->createTestServer('test', '/graphql/uncached', [
diff --git a/tests/src/Kernel/Framework/InvalidPayloadTest.php b/tests/src/Kernel/Framework/InvalidPayloadTest.php
index 47d9b17..910f7e9 100644
--- a/tests/src/Kernel/Framework/InvalidPayloadTest.php
+++ b/tests/src/Kernel/Framework/InvalidPayloadTest.php
@@ -29,6 +29,7 @@ GQL;
 
   /**
    * Tests the empty payload.
+   * @doesNotPerformAssertions
    */
   public function testEmptyPayload(): void {
     $request = Request::create('/graphql/test', 'POST', [], [], [], [], '{ invalid');
diff --git a/tests/src/Kernel/Framework/ResultCacheTest.php b/tests/src/Kernel/Framework/ResultCacheTest.php
index bef53bd..3a9be02 100644
--- a/tests/src/Kernel/Framework/ResultCacheTest.php
+++ b/tests/src/Kernel/Framework/ResultCacheTest.php
@@ -19,6 +19,7 @@ use GraphQL\Deferred;
  */
 class ResultCacheTest extends GraphQLTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -37,6 +38,7 @@ GQL;
 
   /**
    * Check basic result caching.
+   * @doesNotPerformAssertions
    */
   public function testCacheableResult(): void {
     $dummy = $this->getMockBuilder(Server::class)
@@ -63,6 +65,7 @@ GQL;
 
   /**
    * Verify that uncacheable results are not cached.
+   * @doesNotPerformAssertions
    */
   public function testUncacheableResult(): void {
     $cacheable = $this->getMockBuilder(CacheableDependencyInterface::class)
@@ -108,6 +111,7 @@ GQL;
 
   /**
    * Verify that fields with uncacheable annotations are not cached.
+   * @doesNotPerformAssertions
    */
   public function testUncacheableResultAnnotation(): void {
     $cacheable = $this->getMockBuilder(CacheableDependencyInterface::class)
@@ -153,6 +157,7 @@ GQL;
 
   /**
    * Test if caching properly handles variables.
+   * @doesNotPerformAssertions
    */
   public function testVariables(): void {
     $dummy = $this->getMockBuilder(Server::class)
@@ -258,6 +263,7 @@ GQL;
 
   /**
    * Test if results cache properly acts on cache tag clears.
+   * @doesNotPerformAssertions
    */
   public function testTags(): void {
     $cacheable = $this->getMockBuilder(CacheableDependencyInterface::class)
diff --git a/tests/src/Kernel/Framework/UploadFileServiceTest.php b/tests/src/Kernel/Framework/UploadFileServiceTest.php
index c3f6d8d..214d2b4 100644
--- a/tests/src/Kernel/Framework/UploadFileServiceTest.php
+++ b/tests/src/Kernel/Framework/UploadFileServiceTest.php
@@ -15,6 +15,7 @@ use Symfony\Component\HttpFoundation\File\UploadedFile;
  */
 class UploadFileServiceTest extends GraphQLTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -186,6 +187,7 @@ class UploadFileServiceTest extends GraphQLTestBase {
 
   /**
    * Tests that the file lock is released on validation errors.
+   * @doesNotPerformAssertions
    */
   public function testLockReleased(): void {
     // Mock the lock system to check that the lock is released.
diff --git a/tests/src/Traits/MockingTrait.php b/tests/src/Traits/MockingTrait.php
index ec70b70..e36f614 100644
--- a/tests/src/Traits/MockingTrait.php
+++ b/tests/src/Traits/MockingTrait.php
@@ -163,9 +163,7 @@ trait MockingTrait {
    * @param string $id
    */
   protected function mockSchemaPluginManager($id): void {
-    $this->schemaPluginManager = $this->getMockBuilder(SchemaPluginManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->schemaPluginManager = $this->createMock(SchemaPluginManager::class);
 
     $this->schemaPluginManager->expects($this->any())
       ->method('getDefinitions')
