[parsing] modules/contrib/exif/exif.drush.inc
[refactoring] modules/contrib/exif/exif.drush.inc
[post rectors] modules/contrib/exif/exif.drush.inc
[print] modules/contrib/exif/exif.drush.inc
[refactoring] modules/contrib/exif/exif.drush.inc
[post rectors] modules/contrib/exif/exif.drush.inc
[print] modules/contrib/exif/exif.drush.inc
[parsing] modules/contrib/exif/exif.install
[refactoring] modules/contrib/exif/exif.install
[post rectors] modules/contrib/exif/exif.install
[print] modules/contrib/exif/exif.install
[parsing] modules/contrib/exif/exif.module
[refactoring] modules/contrib/exif/exif.module
[post rectors] modules/contrib/exif/exif.module
[print] modules/contrib/exif/exif.module
[parsing] modules/contrib/exif/src/Controller/ExifSettingsController.php
[refactoring] modules/contrib/exif/src/Controller/ExifSettingsController.php
[post rectors] modules/contrib/exif/src/Controller/ExifSettingsController.php
[print] modules/contrib/exif/src/Controller/ExifSettingsController.php
[parsing] modules/contrib/exif/src/Controller/ExifSettingsForm.php
[refactoring] modules/contrib/exif/src/Controller/ExifSettingsForm.php
[post rectors] modules/contrib/exif/src/Controller/ExifSettingsForm.php
[print] modules/contrib/exif/src/Controller/ExifSettingsForm.php
[parsing] modules/contrib/exif/src/ExifContent.php
[refactoring] modules/contrib/exif/src/ExifContent.php
[post rectors] modules/contrib/exif/src/ExifContent.php
[print] modules/contrib/exif/src/ExifContent.php
[parsing] modules/contrib/exif/src/ExifFactory.php
[refactoring] modules/contrib/exif/src/ExifFactory.php
[post rectors] modules/contrib/exif/src/ExifFactory.php
[print] modules/contrib/exif/src/ExifFactory.php
[parsing] modules/contrib/exif/src/ExifHelp.php
[refactoring] modules/contrib/exif/src/ExifHelp.php
[post rectors] modules/contrib/exif/src/ExifHelp.php
[print] modules/contrib/exif/src/ExifHelp.php
[refactoring] modules/contrib/exif/src/ExifHelp.php
[post rectors] modules/contrib/exif/src/ExifHelp.php
[print] modules/contrib/exif/src/ExifHelp.php
[parsing] modules/contrib/exif/src/ExifInterface.php
[refactoring] modules/contrib/exif/src/ExifInterface.php
[post rectors] modules/contrib/exif/src/ExifInterface.php
[print] modules/contrib/exif/src/ExifInterface.php
[parsing] modules/contrib/exif/src/ExifPHPExtension.php
[refactoring] modules/contrib/exif/src/ExifPHPExtension.php
[post rectors] modules/contrib/exif/src/ExifPHPExtension.php
[print] modules/contrib/exif/src/ExifPHPExtension.php
[parsing] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifFieldWidgetBase.php
[refactoring] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifFieldWidgetBase.php
[post rectors] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifFieldWidgetBase.php
[print] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifFieldWidgetBase.php
[parsing] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifHiddenWidget.php
[refactoring] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifHiddenWidget.php
[post rectors] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifHiddenWidget.php
[print] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifHiddenWidget.php
[parsing] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifHtmlWidget.php
[refactoring] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifHtmlWidget.php
[post rectors] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifHtmlWidget.php
[print] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifHtmlWidget.php
[parsing] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifReadonlyWidget.php
[refactoring] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifReadonlyWidget.php
[post rectors] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifReadonlyWidget.php
[print] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifReadonlyWidget.php
[parsing] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifWidgetBase.php
[refactoring] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifWidgetBase.php
[post rectors] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifWidgetBase.php
[print] modules/contrib/exif/src/Plugin/Field/FieldWidget/ExifWidgetBase.php
[parsing] modules/contrib/exif/src/Plugin/migrate/field/d7/ExifReadOnly.php
[refactoring] modules/contrib/exif/src/Plugin/migrate/field/d7/ExifReadOnly.php
[post rectors] modules/contrib/exif/src/Plugin/migrate/field/d7/ExifReadOnly.php
[print] modules/contrib/exif/src/Plugin/migrate/field/d7/ExifReadOnly.php
[parsing] modules/contrib/exif/src/SimpleExifToolFacade.php
[refactoring] modules/contrib/exif/src/SimpleExifToolFacade.php
[post rectors] modules/contrib/exif/src/SimpleExifToolFacade.php
[print] modules/contrib/exif/src/SimpleExifToolFacade.php

2 files with changes
====================

1) modules/contrib/exif/src/ExifHelp.php:21

    ---------- begin diff ----------
@@ @@
    */
   public static function content() {
     global $base_url;
-    $filepath = drupal_get_path('module', 'exif') . '/sample.jpg';
-    $imageUrl = $base_url . '/' . drupal_get_path('module', 'exif') . '/sample.jpg';
+    $filepath = \Drupal::service('extension.list.module')->getPath('exif') . '/sample.jpg';
+    $imageUrl = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('exif') . '/sample.jpg';
     $taxonomyUrl = Url::fromRoute('entity.taxonomy_vocabulary.collection')
       ->toString();
     $permissionUrl = Url::fromRoute('user.admin_permissions')->toString();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/exif/exif.drush.inc:374

    ---------- begin diff ----------
@@ @@
   // Saving file. automatically added to file entity if present.
   $file_content = file_get_contents($file);
   // Saves a file to the specified destination and creates a database entry.
-  $file_temp = file_save_data($file_content, 'public://' . $title, FILE_EXISTS_RENAME);
+  $file_temp = \Drupal::service('file.repository')->writeData($file_content, 'public://' . $title, \Drupal\Core\File\FileSystemInterface::EXISTS_RENAME);

   // If not file entity, create associated element.
   if ($file_temp && $entity_type != 'file') {
    ----------- end diff -----------

Applied rules:
 * FileExistsRenameRector
 * FileSaveDataRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

