diff --git a/src/Controller/OpenIDConnectRedirectController.php b/src/Controller/OpenIDConnectRedirectController.php
index 0fa88c3..2c2e5c2 100644
--- a/src/Controller/OpenIDConnectRedirectController.php
+++ b/src/Controller/OpenIDConnectRedirectController.php
@@ -29,7 +29,7 @@ class OpenIDConnectRedirectController extends BaseOpenIDConnectRedirectControlle
     $query = $this->requestStack->getCurrentRequest()->query;
     if ($query->get('error')) {
       // Set cookie which controls that the login attempt using the SSO failed.
-      $response->headers->setCookie(new Cookie('akamai_error', '1', time() + $configuration['sso_cookie_age']));
+      $response->headers->setCookie(\Symfony\Component\HttpFoundation\Cookie::create('akamai_error', '1', time() + $configuration['sso_cookie_age']));
       if ($query->get('error') == 'login_required') {
         // Remove error message.
         $this->messenger()->deleteByType('warning');
@@ -38,7 +38,7 @@ class OpenIDConnectRedirectController extends BaseOpenIDConnectRedirectControlle
     }
 
     if ($this->currentUser()->isAuthenticated()) {
-      $response->headers->setCookie(new Cookie('akamai_error', '1', 1));
+      $response->headers->setCookie(\Symfony\Component\HttpFoundation\Cookie::create('akamai_error', '1', 1));
     }
 
     return $response;
diff --git a/src/EventSubscriber/AnonymousRedirectSubscriber.php b/src/EventSubscriber/AnonymousRedirectSubscriber.php
index 504420b..464ed52 100644
--- a/src/EventSubscriber/AnonymousRedirectSubscriber.php
+++ b/src/EventSubscriber/AnonymousRedirectSubscriber.php
@@ -81,10 +81,10 @@ class AnonymousRedirectSubscriber implements EventSubscriberInterface {
   /**
    * Redirects anonymous users to login endpoint for SSO.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The request event.
    */
-  public function redirectAnonymous(GetResponseEvent $event) {
+  public function redirectAnonymous(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $request = $event->getRequest();
 
     if ($this->akamaiSettings['enable_sso']
