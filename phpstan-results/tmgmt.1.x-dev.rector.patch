diff --git a/sources/locale/tests/src/Functional/LocaleSourceUiTest.php b/sources/locale/tests/src/Functional/LocaleSourceUiTest.php
index 3a369f9f..d6d1651c 100644
--- a/sources/locale/tests/src/Functional/LocaleSourceUiTest.php
+++ b/sources/locale/tests/src/Functional/LocaleSourceUiTest.php
@@ -29,7 +29,7 @@ class LocaleSourceUiTest extends TMGMTTestBase {
     $this->langcode = 'de';
     $this->context = 'default';
     $file = new \stdClass();
-    $file->uri =  \Drupal::service('file_system')->realpath(drupal_get_path('module', 'tmgmt_locale') . '/tests/test.xx.po');
+    $file->uri =  \Drupal::service('file_system')->realpath(\Drupal::service('extension.list.module')->getPath('tmgmt_locale') . '/tests/test.xx.po');
     $file->langcode = $this->langcode;
     Gettext::fileToDatabase($file, array());
     $this->addLanguage($this->langcode);
diff --git a/sources/locale/tests/src/Kernel/LocaleSourceTest.php b/sources/locale/tests/src/Kernel/LocaleSourceTest.php
index ef090823..f1ae3e13 100644
--- a/sources/locale/tests/src/Kernel/LocaleSourceTest.php
+++ b/sources/locale/tests/src/Kernel/LocaleSourceTest.php
@@ -31,7 +31,7 @@ class LocaleSourceTest extends TMGMTKernelTestBase {
     \Drupal::service('router.builder')->rebuild();
     $this->installSchema('locale', array('locales_source', 'locales_target'));
     $file = new \stdClass();
-    $file->uri =  \Drupal::service('file_system')->realpath(drupal_get_path('module', 'tmgmt_locale') . '/tests/test.xx.po');
+    $file->uri =  \Drupal::service('file_system')->realpath(\Drupal::service('extension.list.module')->getPath('tmgmt_locale') . '/tests/test.xx.po');
     $file->langcode = $this->langcode;
     Gettext::fileToDatabase($file, array());
     $this->addLanguage('es');
diff --git a/src/ContinuousManager.php b/src/ContinuousManager.php
index b3bd3a5a..bcbc4ae4 100644
--- a/src/ContinuousManager.php
+++ b/src/ContinuousManager.php
@@ -137,7 +137,7 @@ class ContinuousManager {
 
     // Some modules might want to filter out candidates for items.
     $event = new ShouldCreateJobEvent($job, $plugin, $item_type, $item_id, $should_create_item);
-    $this->eventDispatcher->dispatch(ContinuousEvents::SHOULD_CREATE_JOB, $event);
+    $this->eventDispatcher->dispatch($event, ContinuousEvents::SHOULD_CREATE_JOB);
 
     if ($event->shouldCreateItem()) {
       if ($most_recent_job_item) {
diff --git a/src/Entity/JobItem.php b/src/Entity/JobItem.php
index ba1e1038..ab2fbb40 100644
--- a/src/Entity/JobItem.php
+++ b/src/Entity/JobItem.php
@@ -1156,14 +1156,14 @@ class JobItem extends ContentEntityBase implements JobItemInterface {
       static::STATE_ACTIVE => [
         'label' => t('In progress'),
         'type' => 'state',
-        'icon' => drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg',
+        'icon' => \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg',
         'weight' => 0,
         'show_job_filter' => TRUE,
       ],
       static::STATE_REVIEW => [
         'label' => t('Needs review'),
         'type' => 'state',
-        'icon' => drupal_get_path('module', 'tmgmt') . '/icons/ready.svg',
+        'icon' => \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg',
         'weight' => 5,
         'show_job_filter' => TRUE,
       ],
@@ -1180,7 +1180,7 @@ class JobItem extends ContentEntityBase implements JobItemInterface {
       static::STATE_INACTIVE => [
         'label' => t('Inactive'),
         'type' => 'state',
-        'icon' => drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg',
+        'icon' => \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg',
         'weight' => 20,
       ],
     ];
diff --git a/src/Entity/ListBuilder/TranslatorListBuilder.php b/src/Entity/ListBuilder/TranslatorListBuilder.php
index 5c23f2ce..485ac6b5 100644
--- a/src/Entity/ListBuilder/TranslatorListBuilder.php
+++ b/src/Entity/ListBuilder/TranslatorListBuilder.php
@@ -109,7 +109,7 @@ class TranslatorListBuilder extends DraggableListBuilder implements EntityListBu
     if (isset($definition['logo'])) {
       $logo_render_array = [
         '#theme' => 'image',
-        '#uri' => file_create_url(drupal_get_path('module', $definition['provider']) . '/' . $definition['logo']),
+        '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath($definition['provider']) . '/' . $definition['logo']),
         '#alt' => $definition['label'],
         '#title' => $definition['label'],
         '#attributes' => [
diff --git a/src/Events/ShouldCreateJobEvent.php b/src/Events/ShouldCreateJobEvent.php
index abae9e30..7e55156a 100644
--- a/src/Events/ShouldCreateJobEvent.php
+++ b/src/Events/ShouldCreateJobEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @see \Drupal\tmgmt\ContinuousSourceInterface::shouldCreateContinuousItem()
  */
-class ShouldCreateJobEvent extends Event {
+class ShouldCreateJobEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    *  Continuous job entity.
diff --git a/src/Form/JobForm.php b/src/Form/JobForm.php
index 4c9bb0aa..a11fe7d4 100644
--- a/src/Form/JobForm.php
+++ b/src/Form/JobForm.php
@@ -432,7 +432,7 @@ class JobForm extends TmgmtFormBase {
       if (isset($definition['logo'])) {
         $form['translator_wrapper']['logo'] = $logo_render_array = [
           '#theme' => 'image',
-          '#uri' => file_create_url(drupal_get_path('module', $definition['provider']) . '/' . $definition['logo']),
+          '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath($definition['provider']) . '/' . $definition['logo']),
           '#alt' => $definition['label'],
           '#title' => $definition['label'],
           '#attributes' => [
diff --git a/src/Form/JobItemForm.php b/src/Form/JobItemForm.php
index a0cc02ef..233419fc 100644
--- a/src/Form/JobItemForm.php
+++ b/src/Form/JobItemForm.php
@@ -534,16 +534,16 @@ class JobItemForm extends TmgmtFormBase {
         break;
       case TMGMT_DATA_ITEM_STATE_REVIEWED:
         $title = t('Reviewed');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg';
         break;
       case TMGMT_DATA_ITEM_STATE_TRANSLATED:
         $title = t('Translated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
         break;
       case TMGMT_DATA_ITEM_STATE_PENDING:
       default:
         $title = t('Pending');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg';
         break;
     }
 
diff --git a/src/Form/TranslatorForm.php b/src/Form/TranslatorForm.php
index d9f1bf6e..fb56f445 100644
--- a/src/Form/TranslatorForm.php
+++ b/src/Form/TranslatorForm.php
@@ -143,7 +143,7 @@ class TranslatorForm extends EntityForm {
       if (isset($definition['logo'])) {
         $form['plugin_wrapper']['logo'] = $logo_render_array = [
           '#theme' => 'image',
-          '#uri' => file_create_url(drupal_get_path('module', $definition['provider']) . '/' . $definition['logo']),
+          '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath($definition['provider']) . '/' . $definition['logo']),
           '#alt' => $definition['label'],
           '#title' => $definition['label'],
           '#attributes' => [
diff --git a/src/Plugin/views/field/JobState.php b/src/Plugin/views/field/JobState.php
index b31e0e4f..9298d29d 100644
--- a/src/Plugin/views/field/JobState.php
+++ b/src/Plugin/views/field/JobState.php
@@ -22,7 +22,7 @@ class JobState extends NumericField {
     switch ($job->getState()) {
       case JobInterface::STATE_UNPROCESSED:
         $label = t('Unprocessed');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg';
         break;
 
       case JobInterface::STATE_ACTIVE:
@@ -37,17 +37,17 @@ class JobState extends NumericField {
           return $highest_weight_icon;
         }
         $label = t('In progress');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg';
         break;
 
       case JobInterface::STATE_CONTINUOUS:
         $label = t('Continuous');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/continuous.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/continuous.svg';
         break;
 
       case JobInterface::STATE_CONTINUOUS_INACTIVE:
         $label = t('Continuous Inactive');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/continuous_inactive.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/continuous_inactive.svg';
         break;
 
       default:
@@ -58,7 +58,7 @@ class JobState extends NumericField {
     if ($icon && $label) {
       return [
         '#theme' => 'image',
-        '#uri' => file_create_url($icon),
+        '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon),
         '#title' => $label,
         '#alt' => $label,
         '#width' => 16,
diff --git a/src/SourcePluginUiBase.php b/src/SourcePluginUiBase.php
index 7e6091dc..cb8176c7 100644
--- a/src/SourcePluginUiBase.php
+++ b/src/SourcePluginUiBase.php
@@ -304,7 +304,7 @@ class SourcePluginUiBase extends PluginBase implements SourcePluginUiInterface {
 
       case 'outofdate':
         $label = t('Translation Outdated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/outdated.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/outdated.svg';
         break;
 
       default:
diff --git a/tmgmt.install b/tmgmt.install
index 4d17f084..2c8c5b67 100644
--- a/tmgmt.install
+++ b/tmgmt.install
@@ -72,7 +72,7 @@ function tmgmt_update_8004() {
  * Add job items overview.
  */
 function tmgmt_update_8005() {
-  $overview = file_get_contents(drupal_get_path('module', 'tmgmt') . '/config/install/views.view.tmgmt_translation_all_job_items.yml');
+  $overview = file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/config/install/views.view.tmgmt_translation_all_job_items.yml');
   $values = Yaml::decode($overview);
   $storage_controller = \Drupal::entityTypeManager()->getStorage('view');
   $storage_controller->create($values)->save();
diff --git a/tmgmt.module b/tmgmt.module
index 59cc76a3..cff9ebac 100644
--- a/tmgmt.module
+++ b/tmgmt.module
@@ -944,19 +944,19 @@ function tmgmt_redirect_queue_dequeue() {
 function tmgmt_color_legend() {
   $items = [
     [
-      'icon' => file_create_url('core/misc/icons/bebebe/house.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/bebebe/house.svg'),
       'legend' => t('Original language'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/bebebe/ex.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/bebebe/ex.svg'),
       'legend' => t('Not translated'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Translated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/outdated.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/outdated.svg'),
       'legend' => t('Translation Outdated'),
     ],
   ];
@@ -972,7 +972,7 @@ function tmgmt_color_legend() {
   foreach (JobItem::getStateDefinitions() as $state_definition) {
     if (!empty($state_definition['icon'])) {
       $items[] = [
-        'icon' => file_url_transform_relative(file_create_url($state_definition['icon'])),
+        'icon' => \Drupal::service('file_url_generator')->generateString($state_definition['icon']),
         'legend' => $state_definition['label'],
       ];
     }
@@ -1003,7 +1003,7 @@ function tmgmt_color_job_item_legend() {
   foreach (JobItem::getStateDefinitions() as $state_definition) {
     if (!empty($state_definition['icon'])) {
       $items[] = [
-        'icon' => file_url_transform_relative(file_create_url($state_definition['icon'])),
+        'icon' => \Drupal::service('file_url_generator')->generateString($state_definition['icon']),
         'legend' => $state_definition['label'],
       ];
     }
@@ -1030,7 +1030,7 @@ function tmgmt_color_job_item_legend() {
 function tmgmt_color_job_legend() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg'),
       'legend' => t('Unprocessed'),
     ],
   ];
@@ -1038,7 +1038,7 @@ function tmgmt_color_job_legend() {
   foreach (JobItem::getStateDefinitions() as $state_definition) {
     if (!empty($state_definition['icon'])) {
       $items[] = [
-        'icon' => file_url_transform_relative(file_create_url($state_definition['icon'])),
+        'icon' => \Drupal::service('file_url_generator')->generateString($state_definition['icon']),
         'legend' => $state_definition['label'],
       ];
     }
@@ -1046,7 +1046,7 @@ function tmgmt_color_job_legend() {
 
   if (\Drupal::service('tmgmt.continuous')->hasContinuousJobs()) {
     $items[] = [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/continuous.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/continuous.svg'),
       'legend' => t('Continuous'),
     ];
   };
@@ -1072,19 +1072,19 @@ function tmgmt_color_job_legend() {
 function tmgmt_color_review_legend() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg'),
       'legend' => t('Pending'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ready.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg'),
       'legend' => t('Translated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg'),
       'legend' => t('Reviewed'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Accepted'),
     ],
   ];
diff --git a/tmgmt_test/src/Plugin/tmgmt/Source/TestHtmlSource.php b/tmgmt_test/src/Plugin/tmgmt/Source/TestHtmlSource.php
index c3c6c96d..51e800bd 100644
--- a/tmgmt_test/src/Plugin/tmgmt/Source/TestHtmlSource.php
+++ b/tmgmt_test/src/Plugin/tmgmt/Source/TestHtmlSource.php
@@ -22,7 +22,7 @@ class TestHtmlSource extends TestSource {
     return array(
       'dummy' => array(
         'deep_nesting' => array(
-          '#text' => file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'),
+          '#text' => file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'),
           '#label' => 'Label for job item with type ' . $job_item->getItemType() . ' and id ' . $job_item->getItemId() . '.',
         ),
       ),
diff --git a/tmgmt_test/tmgmt_test.module b/tmgmt_test/tmgmt_test.module
index 41b7758b..07027092 100644
--- a/tmgmt_test/tmgmt_test.module
+++ b/tmgmt_test/tmgmt_test.module
@@ -66,7 +66,7 @@ function tmgmt_test_tmgmt_job_item_state_definitions_alter(&$definitions) {
   $definitions['tmgmt_test_generating'] = [
     'label' => t('Translation is requested from the elders of the Internet'),
     'type' => 'translator_state',
-    'icon' => drupal_get_path('module', 'tmgmt') . '/icons/earth.svg',
+    'icon' => \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/earth.svg',
     'show_job_filter' => TRUE,
   ];
 }
diff --git a/translators/tmgmt_file/src/Plugin/tmgmt/Translator/FileTranslator.php b/translators/tmgmt_file/src/Plugin/tmgmt/Translator/FileTranslator.php
index 0796b6cd..48c5c87c 100644
--- a/translators/tmgmt_file/src/Plugin/tmgmt/Translator/FileTranslator.php
+++ b/translators/tmgmt_file/src/Plugin/tmgmt/Translator/FileTranslator.php
@@ -39,9 +39,9 @@ class FileTranslator extends TranslatorPluginBase {
     $path = $job->getSetting('scheme') . '://tmgmt_file/' . $name . '.' .  $job->getSetting('export_format');
     $dirname = dirname($path);
     if (\Drupal::service('file_system')->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS)) {
-      $file = file_save_data($export->export($job), $path, FileSystemInterface::EXISTS_REPLACE);
+      $file = \Drupal::service('file.repository')->writeData($export->export($job), $path, FileSystemInterface::EXISTS_REPLACE);
       \Drupal::service('file.usage')->add($file, 'tmgmt_file', 'tmgmt_job', $job->id());
-      $job->submitted('Exported file can be downloaded <a href="@link" download>here</a>.', array('@link' => file_create_url($path)));
+      $job->submitted('Exported file can be downloaded <a href="@link" download>here</a>.', array('@link' => \Drupal::service('file_url_generator')->generateAbsoluteString($path)));
     }
     else {
       $job->rejected('Failed to create writable directory @dirname, check file system permissions.', ['@dirname' => $dirname]);
diff --git a/translators/tmgmt_file/tests/src/Functional/FileTranslatorTest.php b/translators/tmgmt_file/tests/src/Functional/FileTranslatorTest.php
index 7dd468bb..9293f15f 100644
--- a/translators/tmgmt_file/tests/src/Functional/FileTranslatorTest.php
+++ b/translators/tmgmt_file/tests/src/Functional/FileTranslatorTest.php
@@ -49,7 +49,7 @@ class FileTranslatorTest extends TMGMTTestBase {
     ]);
 
     // Get the source text.
-    $source_text = trim(file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'));
+    $source_text = trim(file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'));
 
     // Create the reader instance, it will be used through the tests.
     $reader = new \XMLReader();
@@ -156,7 +156,7 @@ class FileTranslatorTest extends TMGMTTestBase {
     ]);
 
     // Get the source text.
-    $source_text = trim(file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'));
+    $source_text = trim(file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'));
 
     // Create a new job.
     $job = $this->createJob();
@@ -174,7 +174,7 @@ class FileTranslatorTest extends TMGMTTestBase {
 
     $dom = new \DOMDocument();
     $dom->loadXML($xliff);
-    $this->assertTrue($dom->schemaValidate(drupal_get_path('module', 'tmgmt_file') . '/xliff-core-1.2-strict.xsd'));
+    $this->assertTrue($dom->schemaValidate(\Drupal::service('extension.list.module')->getPath('tmgmt_file') . '/xliff-core-1.2-strict.xsd'));
 
     // "Translate" items.
     $xml = simplexml_import_dom($dom);
@@ -298,7 +298,7 @@ class FileTranslatorTest extends TMGMTTestBase {
     \Drupal::state()->set('tmgmt.test_source_data', array(
       'dummy' => array(
         'deep_nesting' => array(
-          '#text' => file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html') . ' @id.',
+          '#text' => file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html') . ' @id.',
           '#label' => 'Label of deep nested item @id',
         ),
         '#label' => 'Dummy item',
@@ -327,7 +327,7 @@ class FileTranslatorTest extends TMGMTTestBase {
     $xliff = file_get_contents($download_url);
     $dom = new \DOMDocument();
     $dom->loadXML($xliff);
-    $this->assertTrue($dom->schemaValidate(drupal_get_path('module', 'tmgmt_file') . '/xliff-core-1.2-strict.xsd'));
+    $this->assertTrue($dom->schemaValidate(\Drupal::service('extension.list.module')->getPath('tmgmt_file') . '/xliff-core-1.2-strict.xsd'));
 
     // Build a list of expected note labels.
     $expected_notes = [
diff --git a/translators/tmgmt_file/tmgmt_file.module b/translators/tmgmt_file/tmgmt_file.module
index 065fe350..7a6a7636 100644
--- a/translators/tmgmt_file/tmgmt_file.module
+++ b/translators/tmgmt_file/tmgmt_file.module
@@ -16,7 +16,7 @@ use Drupal\tmgmt\JobInterface;
 function tmgmt_file_theme() {
   return array(
     'tmgmt_file_html_template' => array(
-      'path' => drupal_get_path('module', 'tmgmt_file') . '/templates',
+      'path' => \Drupal::service('extension.list.module')->getPath('tmgmt_file') . '/templates',
       'template' => 'tmgmt_file_html_template',
       'variables' => array('tjid' => NULL, 'source_language' => NULL, 'target_language' => NULL, 'items' => NULL),
     ),
diff --git a/translators/tmgmt_local/src/Plugin/views/field/TaskItemStatus.php b/translators/tmgmt_local/src/Plugin/views/field/TaskItemStatus.php
index 9a9dd058..0d966f13 100644
--- a/translators/tmgmt_local/src/Plugin/views/field/TaskItemStatus.php
+++ b/translators/tmgmt_local/src/Plugin/views/field/TaskItemStatus.php
@@ -21,17 +21,17 @@ class TaskItemStatus extends NumericField {
     switch ($value) {
       case LocalTaskItemInterface::STATUS_PENDING:
         $label = t('Untranslated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
         break;
 
       case LocalTaskItemInterface::STATUS_COMPLETED:
         $label = t('Translated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg';
         break;
 
       case LocalTaskItemInterface::STATUS_REJECTED:
         $label = t('Rejected');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg';
         break;
 
       case LocalTaskItemInterface::STATUS_CLOSED:
@@ -41,13 +41,13 @@ class TaskItemStatus extends NumericField {
 
       default:
         $label = t('Untranslated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
     }
     $element = [
       '#type' => 'inline_template',
       '#template' => '<img src="{{ icon }}" title="{{ label }}"><span></span></img>',
       '#context' => array(
-        'icon' => file_create_url($icon),
+        'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon),
         'label' => $label,
       ),
     ];
diff --git a/translators/tmgmt_local/src/Plugin/views/field/TaskStatus.php b/translators/tmgmt_local/src/Plugin/views/field/TaskStatus.php
index b2d0b219..b427db2f 100644
--- a/translators/tmgmt_local/src/Plugin/views/field/TaskStatus.php
+++ b/translators/tmgmt_local/src/Plugin/views/field/TaskStatus.php
@@ -21,17 +21,17 @@ class TaskStatus extends NumericField {
     switch ($value) {
       case LocalTaskInterface::STATUS_PENDING:
         $label = t('Needs action');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
         break;
 
       case LocalTaskInterface::STATUS_COMPLETED:
         $label = t('In review');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg';
         break;
 
       case LocalTaskInterface::STATUS_REJECTED:
         $label = t('Rejected');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ex-red.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ex-red.svg';
         break;
 
       case LocalTaskInterface::STATUS_CLOSED:
@@ -41,13 +41,13 @@ class TaskStatus extends NumericField {
 
       default:
         $label = t('Unassigned');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg';
     }
     $element = [
       '#type' => 'inline_template',
       '#template' => '<img src="{{ icon }}" title="{{ label }}"><span></span></img>',
       '#context' => array(
-        'icon' => file_create_url($icon),
+        'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon),
         'label' => $label,
       ),
     ];
diff --git a/translators/tmgmt_local/tests/src/Functional/LocalTranslatorTest.php b/translators/tmgmt_local/tests/src/Functional/LocalTranslatorTest.php
index bd539d47..26d1f707 100755
--- a/translators/tmgmt_local/tests/src/Functional/LocalTranslatorTest.php
+++ b/translators/tmgmt_local/tests/src/Functional/LocalTranslatorTest.php
@@ -173,7 +173,7 @@ class LocalTranslatorTest extends LocalTranslatorTestBase {
     \Drupal::state()->set('tmgmt.test_source_data', [
       'dummy' => [
         'deep_nesting' => [
-          '#text' => file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'),
+          '#text' => file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'),
           '#label' => 'Label for job item with type test and id 2.',
           '#translate' => TRUE,
           '#format' => 'basic_html',
@@ -1062,7 +1062,7 @@ class LocalTranslatorTest extends LocalTranslatorTestBase {
     \Drupal::state()->set('tmgmt.test_source_data', [
       'dummy' => [
         'deep_nesting' => [
-          '#text' => file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'),
+          '#text' => file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'),
           '#label' => 'Label for job item with type test and id 2.',
           '#translate' => TRUE,
           '#format' => 'basic_html',
diff --git a/translators/tmgmt_local/tmgmt_local.module b/translators/tmgmt_local/tmgmt_local.module
index 0efb2944..258199e5 100755
--- a/translators/tmgmt_local/tmgmt_local.module
+++ b/translators/tmgmt_local/tmgmt_local.module
@@ -704,19 +704,19 @@ function tmgmt_local_rules_component_access($type, $name) {
 function tmgmt_color_legend_local_task_item() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ready.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg'),
       'legend' => t('Untranslated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg'),
       'legend' => t('Translated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg'),
       'legend' => t('Rejected'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Completed'),
     ],
   ];
@@ -742,23 +742,23 @@ function tmgmt_color_legend_local_task_item() {
 function tmgmt_color_legend_local_task() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg'),
       'legend' => t('Unassigned'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ready.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg'),
       'legend' => t('Needs action'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg'),
       'legend' => t('In review'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ex-red.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ex-red.svg'),
       'legend' => t('Rejected'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Closed'),
     ],
   ];
@@ -784,15 +784,15 @@ function tmgmt_color_legend_local_task() {
 function tmgmt_color_local_review_legend() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ready.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg'),
       'legend' => t('Untranslated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg'),
       'legend' => t('Translated'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Accepted'),
     ],
   ];
diff --git a/translators/tmgmt_local/tmgmt_local.theme.inc b/translators/tmgmt_local/tmgmt_local.theme.inc
index 38d15a93..45a79531 100644
--- a/translators/tmgmt_local/tmgmt_local.theme.inc
+++ b/translators/tmgmt_local/tmgmt_local.theme.inc
@@ -59,17 +59,17 @@ function template_preprocess_tmgmt_local_translation_form_element_status(array &
       break;
     case TMGMT_DATA_ITEM_STATE_TRANSLATED:
       $title = t('Translated');
-      $icon = drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg';
+      $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg';
       break;
     case TMGMT_DATA_ITEM_STATE_UNTRANSLATED:
     default:
       $title = t('Untranslated');
-      $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+      $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
       break;
   }
   $variables['wrapper_attributes'] = new Attribute([
     'class' => $classes,
   ]);
-  $variables['icon_url'] = file_create_url($icon);
+  $variables['icon_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($icon);
   $variables['title'] = $title;
 }
