diff --git a/modules/graphql_core/tests/src/Kernel/Blocks/BlockTest.php b/modules/graphql_core/tests/src/Kernel/Blocks/BlockTest.php
index b84c9e6..f68a1fe 100644
--- a/modules/graphql_core/tests/src/Kernel/Blocks/BlockTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Blocks/BlockTest.php
@@ -13,6 +13,7 @@ use Drupal\Tests\graphql_core\Kernel\GraphQLCoreTestBase;
  * @group graphql_core
  */
 class BlockTest extends GraphQLCoreTestBase {
+  use \Prophecy\PhpUnit\ProphecyTrait;
   use BlockCreationTrait;
 
   /**
@@ -33,7 +34,7 @@ class BlockTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\Core\Extension\ThemeInstallerInterface $themeInstaller */
diff --git a/modules/graphql_core/tests/src/Kernel/Breadcrumbs/BreadcrumbsTest.php b/modules/graphql_core/tests/src/Kernel/Breadcrumbs/BreadcrumbsTest.php
index dae3064..5a2a5d9 100644
--- a/modules/graphql_core/tests/src/Kernel/Breadcrumbs/BreadcrumbsTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Breadcrumbs/BreadcrumbsTest.php
@@ -15,6 +15,7 @@ use Prophecy\Argument;
  */
 class BreadcrumbsTest extends GraphQLCoreTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -25,7 +26,7 @@ class BreadcrumbsTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $breadcrumbManager = $this->prophesize('Drupal\Core\Breadcrumb\BreadcrumbManager');
diff --git a/modules/graphql_core/tests/src/Kernel/Context/NodeContextTest.php b/modules/graphql_core/tests/src/Kernel/Context/NodeContextTest.php
index d20ee5b..33450b0 100644
--- a/modules/graphql_core/tests/src/Kernel/Context/NodeContextTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Context/NodeContextTest.php
@@ -16,6 +16,7 @@ class NodeContextTest extends GraphQLContentTestBase {
    * Regression test for unhandled logic exceptions.
    *
    * Leaking cache metadata.
+   * @doesNotPerformAssertions
    */
   public function testNodeContext() {
     $nodeId = Node::create([
diff --git a/modules/graphql_core/tests/src/Kernel/Entity/BundleLessEntityTest.php b/modules/graphql_core/tests/src/Kernel/Entity/BundleLessEntityTest.php
index b29fa68..df0cd06 100644
--- a/modules/graphql_core/tests/src/Kernel/Entity/BundleLessEntityTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Entity/BundleLessEntityTest.php
@@ -18,7 +18,7 @@ class BundleLessEntityTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     FieldStorageConfig::create([
       'field_name' => 'field_test',
diff --git a/modules/graphql_core/tests/src/Kernel/Entity/EntityByIdTest.php b/modules/graphql_core/tests/src/Kernel/Entity/EntityByIdTest.php
index ab0f6b5..753753d 100644
--- a/modules/graphql_core/tests/src/Kernel/Entity/EntityByIdTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Entity/EntityByIdTest.php
@@ -28,7 +28,7 @@ class EntityByIdTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $languageStorage */
diff --git a/modules/graphql_core/tests/src/Kernel/Entity/EntityFieldValueTest.php b/modules/graphql_core/tests/src/Kernel/Entity/EntityFieldValueTest.php
index afd87d0..255dfb2 100644
--- a/modules/graphql_core/tests/src/Kernel/Entity/EntityFieldValueTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Entity/EntityFieldValueTest.php
@@ -38,7 +38,7 @@ class EntityFieldValueTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
   }
 
diff --git a/modules/graphql_core/tests/src/Kernel/Entity/EntityRevisionsTest.php b/modules/graphql_core/tests/src/Kernel/Entity/EntityRevisionsTest.php
index a74e7dd..8b6ccb7 100644
--- a/modules/graphql_core/tests/src/Kernel/Entity/EntityRevisionsTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Entity/EntityRevisionsTest.php
@@ -16,6 +16,7 @@ class EntityRevisionsTest extends GraphQLContentTestBase {
    * Regression test for unhandled logic exceptions.
    *
    * Leaking cache metadata.
+   * @doesNotPerformAssertions
    */
   public function testNodeContext() {
     $node = Node::create([
diff --git a/modules/graphql_core/tests/src/Kernel/EntityMutation/EntityMutationTest.php b/modules/graphql_core/tests/src/Kernel/EntityMutation/EntityMutationTest.php
index e8ff2e6..c6c71a7 100644
--- a/modules/graphql_core/tests/src/Kernel/EntityMutation/EntityMutationTest.php
+++ b/modules/graphql_core/tests/src/Kernel/EntityMutation/EntityMutationTest.php
@@ -30,7 +30,7 @@ class EntityMutationTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->mockInputType('node_input', [
       'name' => 'NodeInput',
diff --git a/modules/graphql_core/tests/src/Kernel/EntityQuery/EntityQueryTest.php b/modules/graphql_core/tests/src/Kernel/EntityQuery/EntityQueryTest.php
index 0566204..46ab056 100644
--- a/modules/graphql_core/tests/src/Kernel/EntityQuery/EntityQueryTest.php
+++ b/modules/graphql_core/tests/src/Kernel/EntityQuery/EntityQueryTest.php
@@ -15,7 +15,7 @@ class EntityQueryTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->createContentType(['type' => 'a']);
     $this->createContentType(['type' => 'b']);
diff --git a/modules/graphql_core/tests/src/Kernel/GraphQLContentTestBase.php b/modules/graphql_core/tests/src/Kernel/GraphQLContentTestBase.php
index d1df9a0..4efc662 100644
--- a/modules/graphql_core/tests/src/Kernel/GraphQLContentTestBase.php
+++ b/modules/graphql_core/tests/src/Kernel/GraphQLContentTestBase.php
@@ -45,7 +45,7 @@ class GraphQLContentTestBase extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['node', 'filter', 'text']);
diff --git a/modules/graphql_core/tests/src/Kernel/GraphQLCoreTestBase.php b/modules/graphql_core/tests/src/Kernel/GraphQLCoreTestBase.php
index b1f359e..e0537ca 100644
--- a/modules/graphql_core/tests/src/Kernel/GraphQLCoreTestBase.php
+++ b/modules/graphql_core/tests/src/Kernel/GraphQLCoreTestBase.php
@@ -21,7 +21,7 @@ class GraphQLCoreTestBase extends GraphQLTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // User entity schema is required for the currentUserContext field.
     $this->installEntitySchema('user');
diff --git a/modules/graphql_core/tests/src/Kernel/Images/ImageFieldTest.php b/modules/graphql_core/tests/src/Kernel/Images/ImageFieldTest.php
index ab81903..ad98dd1 100644
--- a/modules/graphql_core/tests/src/Kernel/Images/ImageFieldTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Images/ImageFieldTest.php
@@ -23,7 +23,7 @@ class ImageFieldTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('image');
     $this->installSchema('file', 'file_usage');
diff --git a/modules/graphql_core/tests/src/Kernel/Languages/LanguageTest.php b/modules/graphql_core/tests/src/Kernel/Languages/LanguageTest.php
index 917a452..fb92fe0 100644
--- a/modules/graphql_core/tests/src/Kernel/Languages/LanguageTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Languages/LanguageTest.php
@@ -22,7 +22,7 @@ class LanguageTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['language']);
diff --git a/modules/graphql_core/tests/src/Kernel/Menu/MenuTest.php b/modules/graphql_core/tests/src/Kernel/Menu/MenuTest.php
index 0b7fe83..8d7e482 100644
--- a/modules/graphql_core/tests/src/Kernel/Menu/MenuTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Menu/MenuTest.php
@@ -26,7 +26,7 @@ class MenuTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('menu_link_content');
     $this->installConfig('menu_link_content');
diff --git a/modules/graphql_core/tests/src/Kernel/Routing/ExternalRequestTest.php b/modules/graphql_core/tests/src/Kernel/Routing/ExternalRequestTest.php
index 538cc17..7448614 100644
--- a/modules/graphql_core/tests/src/Kernel/Routing/ExternalRequestTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Routing/ExternalRequestTest.php
@@ -13,6 +13,7 @@ use GuzzleHttp\Psr7\Response;
  */
 class ExternalRequestTest extends GraphQLCoreTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -21,7 +22,7 @@ class ExternalRequestTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
   }
diff --git a/modules/graphql_core/tests/src/Kernel/Routing/InternalRequestTest.php b/modules/graphql_core/tests/src/Kernel/Routing/InternalRequestTest.php
index dd2a91f..06b9346 100644
--- a/modules/graphql_core/tests/src/Kernel/Routing/InternalRequestTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Routing/InternalRequestTest.php
@@ -19,7 +19,7 @@ class InternalRequestTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
   }
diff --git a/modules/graphql_core/tests/src/Kernel/Routing/RouteTest.php b/modules/graphql_core/tests/src/Kernel/Routing/RouteTest.php
index e113363..19905a9 100644
--- a/modules/graphql_core/tests/src/Kernel/Routing/RouteTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Routing/RouteTest.php
@@ -15,6 +15,7 @@ use Prophecy\Argument;
  */
 class RouteTest extends GraphQLCoreTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   public static $modules = [
     'graphql_context_test',
   ];
@@ -22,7 +23,7 @@ class RouteTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $aliasManager = $this->prophesize(AliasManagerInterface::class);
diff --git a/src/EventSubscriber/SubrequestSubscriber.php b/src/EventSubscriber/SubrequestSubscriber.php
index 1f9a265..3054920 100644
--- a/src/EventSubscriber/SubrequestSubscriber.php
+++ b/src/EventSubscriber/SubrequestSubscriber.php
@@ -14,10 +14,10 @@ class SubrequestSubscriber implements EventSubscriberInterface {
   /**
    * Handle kernel request events.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The kernel event object.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $request = $event->getRequest();
     if ($request->attributes->has('_graphql_subrequest')) {
       $request->attributes->set('_graphql_controller', $request->attributes->get('_controller'));
diff --git a/tests/src/Kernel/Extension/MutationTest.php b/tests/src/Kernel/Extension/MutationTest.php
index 3d14d3d..e329516 100644
--- a/tests/src/Kernel/Extension/MutationTest.php
+++ b/tests/src/Kernel/Extension/MutationTest.php
@@ -11,6 +11,7 @@ use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
  * @group graphql
  */
 class MutationTest extends GraphQLTestBase {
+  use \Prophecy\PhpUnit\ProphecyTrait;
   public static $modules = [
     'graphql_plugin_test',
   ];
diff --git a/tests/src/Kernel/Extension/OverrideTypeTest.php b/tests/src/Kernel/Extension/OverrideTypeTest.php
index 9f189b5..397d478 100644
--- a/tests/src/Kernel/Extension/OverrideTypeTest.php
+++ b/tests/src/Kernel/Extension/OverrideTypeTest.php
@@ -11,6 +11,7 @@ use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
  * @group graphql
  */
 class OverrideTypeTest extends GraphQLTestBase {
+  use \Prophecy\PhpUnit\ProphecyTrait;
   public static $modules = [
     'graphql_plugin_test',
     'graphql_override_test',
diff --git a/tests/src/Kernel/Extension/RecursiveTypeTest.php b/tests/src/Kernel/Extension/RecursiveTypeTest.php
index 200a20c..915d310 100644
--- a/tests/src/Kernel/Extension/RecursiveTypeTest.php
+++ b/tests/src/Kernel/Extension/RecursiveTypeTest.php
@@ -11,6 +11,7 @@ use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
  * @group graphql
  */
 class RecursiveTypeTest extends GraphQLTestBase {
+  use \Prophecy\PhpUnit\ProphecyTrait;
   public static $modules = [
     'graphql_plugin_test',
   ];
diff --git a/tests/src/Kernel/Extension/TypeTest.php b/tests/src/Kernel/Extension/TypeTest.php
index 00b17da..0e4c5ef 100644
--- a/tests/src/Kernel/Extension/TypeTest.php
+++ b/tests/src/Kernel/Extension/TypeTest.php
@@ -11,6 +11,7 @@ use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
  * @group graphql
  */
 class TypeTest extends GraphQLTestBase {
+  use \Prophecy\PhpUnit\ProphecyTrait;
   public static $modules = [
     'graphql_plugin_test',
   ];
diff --git a/tests/src/Kernel/Framework/DisabledResultCacheTest.php b/tests/src/Kernel/Framework/DisabledResultCacheTest.php
index 7acb355..7a54d9d 100644
--- a/tests/src/Kernel/Framework/DisabledResultCacheTest.php
+++ b/tests/src/Kernel/Framework/DisabledResultCacheTest.php
@@ -26,6 +26,7 @@ class DisabledResultCacheTest extends GraphQLTestBase {
 
   /**
    * Test if disabling the result cache has the desired effect.
+   * @doesNotPerformAssertions
    */
   public function testDisabledCache() {
     $this->mockField('root', [
diff --git a/tests/src/Kernel/Framework/LanguageContextTest.php b/tests/src/Kernel/Framework/LanguageContextTest.php
index 90191a5..8e40a61 100644
--- a/tests/src/Kernel/Framework/LanguageContextTest.php
+++ b/tests/src/Kernel/Framework/LanguageContextTest.php
@@ -23,7 +23,7 @@ class LanguageContextTest extends GraphQLTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->mockType('node', ['name' => 'Node']);
diff --git a/tests/src/Kernel/Framework/PermissionsTest.php b/tests/src/Kernel/Framework/PermissionsTest.php
index 01340a7..52e669e 100644
--- a/tests/src/Kernel/Framework/PermissionsTest.php
+++ b/tests/src/Kernel/Framework/PermissionsTest.php
@@ -14,6 +14,7 @@ use Prophecy\Argument;
  */
 class PermissionsTest extends GraphQLTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -24,7 +25,7 @@ class PermissionsTest extends GraphQLTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->mockField('root', [
diff --git a/tests/src/Kernel/Framework/ResultCacheTest.php b/tests/src/Kernel/Framework/ResultCacheTest.php
index bbe0fec..a0dba3f 100644
--- a/tests/src/Kernel/Framework/ResultCacheTest.php
+++ b/tests/src/Kernel/Framework/ResultCacheTest.php
@@ -16,8 +16,10 @@ use Prophecy\Argument;
  */
 class ResultCacheTest extends GraphQLTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Check basic result caching.
+   * @doesNotPerformAssertions
    */
   public function testCacheableResult() {
     $this->mockField('root', [
@@ -43,6 +45,7 @@ class ResultCacheTest extends GraphQLTestBase {
 
   /**
    * Verify that uncacheable results are not cached.
+   * @doesNotPerformAssertions
    */
   public function testUncacheableResult() {
     $this->mockField('root', [
@@ -70,6 +73,7 @@ class ResultCacheTest extends GraphQLTestBase {
 
   /**
    * Verify that fields with uncacheable annotations are not cached.
+   * @doesNotPerformAssertions
    */
   public function testUncacheableResultAnnotation() {
     $this->mockField('root', [
@@ -96,6 +100,7 @@ class ResultCacheTest extends GraphQLTestBase {
 
   /**
    * Test if caching properly handles variabels.
+   * @doesNotPerformAssertions
    */
   public function testVariables() {
     $this->mockField('root', [
@@ -179,6 +184,7 @@ class ResultCacheTest extends GraphQLTestBase {
 
   /**
    * Test if results cache properly acts on cache tag clears.
+   * @doesNotPerformAssertions
    */
   public function testTags() {
     $this->mockField('root', [
@@ -216,6 +222,7 @@ class ResultCacheTest extends GraphQLTestBase {
    *
    * Ensure caching properly handles different query map versions of the same
    * query.
+   * @doesNotPerformAssertions
    */
   public function testPersistedQuery() {
     $queryProvider = $this->prophesize(QueryProviderInterface::class);
diff --git a/tests/src/Kernel/Framework/ResultTest.php b/tests/src/Kernel/Framework/ResultTest.php
index ed5d9cb..15f41ba 100644
--- a/tests/src/Kernel/Framework/ResultTest.php
+++ b/tests/src/Kernel/Framework/ResultTest.php
@@ -14,10 +14,11 @@ use Prophecy\Argument;
  */
 class ResultTest extends GraphQLTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->mockField('root', [
       'name' => 'root',
diff --git a/tests/src/Kernel/Framework/SecureFieldTest.php b/tests/src/Kernel/Framework/SecureFieldTest.php
index 48ca0f1..e6b1517 100644
--- a/tests/src/Kernel/Framework/SecureFieldTest.php
+++ b/tests/src/Kernel/Framework/SecureFieldTest.php
@@ -27,7 +27,7 @@ class SecureFieldTest extends GraphQLTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->mockField('secure', [
diff --git a/tests/src/Kernel/GraphQLFileTestBase.php b/tests/src/Kernel/GraphQLFileTestBase.php
index 040ed34..5060234 100644
--- a/tests/src/Kernel/GraphQLFileTestBase.php
+++ b/tests/src/Kernel/GraphQLFileTestBase.php
@@ -28,7 +28,7 @@ abstract class GraphQLFileTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('system');
     $this->installConfig('graphql');
diff --git a/tests/src/Kernel/GraphQLTestBase.php b/tests/src/Kernel/GraphQLTestBase.php
index 306c9c4..2f6f29b 100644
--- a/tests/src/Kernel/GraphQLTestBase.php
+++ b/tests/src/Kernel/GraphQLTestBase.php
@@ -96,7 +96,7 @@ abstract class GraphQLTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->injectTypeSystemPluginManagers($this->container);
 
diff --git a/tests/src/Traits/MockGraphQLPluginTrait.php b/tests/src/Traits/MockGraphQLPluginTrait.php
index 1d6f86e..c7ff444 100644
--- a/tests/src/Traits/MockGraphQLPluginTrait.php
+++ b/tests/src/Traits/MockGraphQLPluginTrait.php
@@ -245,7 +245,7 @@ trait MockGraphQLPluginTrait {
    * @param mixed $value
    *   The return value. Can also be a value callback.
    *
-   * @return \PHPUnit_Framework_MockObject_Stub_ReturnCallback
+   * @return \PHPUnit\Framework\MockObject\Stub\ReturnCallback
    *   The return callback promise.
    */
   protected function toPromise($value) {
@@ -262,7 +262,7 @@ trait MockGraphQLPluginTrait {
    * @param mixed $scope
    *   The resolver's bound object and class scope.
    *
-   * @return \PHPUnit_Framework_MockObject_Stub_ReturnCallback
+   * @return \PHPUnit\Framework\MockObject\Stub\ReturnCallback
    *   The return callback promise.
    */
   protected function toBoundPromise($value, $scope) {
diff --git a/tests/src/Unit/StringFormattingTest.php b/tests/src/Unit/StringFormattingTest.php
index 73ae563..1837e5e 100644
--- a/tests/src/Unit/StringFormattingTest.php
+++ b/tests/src/Unit/StringFormattingTest.php
@@ -12,11 +12,9 @@ use Drupal\Tests\UnitTestCase;
  */
 class StringFormattingTest extends UnitTestCase {
 
-  /**
-   * @expectedException \InvalidArgumentException
-   * @expectedExceptionMessageRegExp /Failed to create a specification compliant string representation for '.+'\./
-   */
   public function testFailureOnInvalidInput() {
+    $this->expectException(\InvalidArgumentException::class);
+    $this->expectExceptionMessageRegExp('/Failed to create a specification compliant string representation for \'.+\'\./');
     StringHelper::camelCase('^%!@#&');
   }
 
