[parsing] modules/contrib/timesup/src/Periodicity/DailyResolver.php
[refactoring] modules/contrib/timesup/src/Periodicity/DailyResolver.php
[post rectors] modules/contrib/timesup/src/Periodicity/DailyResolver.php
[print] modules/contrib/timesup/src/Periodicity/DailyResolver.php
[parsing] modules/contrib/timesup/src/Periodicity/HourlyResolver.php
[refactoring] modules/contrib/timesup/src/Periodicity/HourlyResolver.php
[post rectors] modules/contrib/timesup/src/Periodicity/HourlyResolver.php
[print] modules/contrib/timesup/src/Periodicity/HourlyResolver.php
[parsing] modules/contrib/timesup/src/Periodicity/MidnightResolver.php
[refactoring] modules/contrib/timesup/src/Periodicity/MidnightResolver.php
[post rectors] modules/contrib/timesup/src/Periodicity/MidnightResolver.php
[print] modules/contrib/timesup/src/Periodicity/MidnightResolver.php
[parsing] modules/contrib/timesup/src/Periodicity/MinutelyResolver.php
[refactoring] modules/contrib/timesup/src/Periodicity/MinutelyResolver.php
[post rectors] modules/contrib/timesup/src/Periodicity/MinutelyResolver.php
[print] modules/contrib/timesup/src/Periodicity/MinutelyResolver.php
[parsing] modules/contrib/timesup/src/Periodicity/PeriodicityBaseResolver.php
[refactoring] modules/contrib/timesup/src/Periodicity/PeriodicityBaseResolver.php
[post rectors] modules/contrib/timesup/src/Periodicity/PeriodicityBaseResolver.php
[print] modules/contrib/timesup/src/Periodicity/PeriodicityBaseResolver.php
[parsing] modules/contrib/timesup/src/Periodicity/WeeklyResolver.php
[refactoring] modules/contrib/timesup/src/Periodicity/WeeklyResolver.php
[post rectors] modules/contrib/timesup/src/Periodicity/WeeklyResolver.php
[print] modules/contrib/timesup/src/Periodicity/WeeklyResolver.php
[parsing] modules/contrib/timesup/src/Resolver/ChainPeriodicityResolver.php
[refactoring] modules/contrib/timesup/src/Resolver/ChainPeriodicityResolver.php
[post rectors] modules/contrib/timesup/src/Resolver/ChainPeriodicityResolver.php
[print] modules/contrib/timesup/src/Resolver/ChainPeriodicityResolver.php
[parsing] modules/contrib/timesup/src/Resolver/PeriodicityResolverInterface.php
[refactoring] modules/contrib/timesup/src/Resolver/PeriodicityResolverInterface.php
[post rectors] modules/contrib/timesup/src/Resolver/PeriodicityResolverInterface.php
[print] modules/contrib/timesup/src/Resolver/PeriodicityResolverInterface.php
[parsing] modules/contrib/timesup/tests/src/Traits/InvokeMethodTrait.php
[refactoring] modules/contrib/timesup/tests/src/Traits/InvokeMethodTrait.php
[post rectors] modules/contrib/timesup/tests/src/Traits/InvokeMethodTrait.php
[print] modules/contrib/timesup/tests/src/Traits/InvokeMethodTrait.php
[parsing] modules/contrib/timesup/tests/src/Unit/Resolver/ChainPeriodicityResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/ChainPeriodicityResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/ChainPeriodicityResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/ChainPeriodicityResolverTest.php
[parsing] modules/contrib/timesup/tests/src/Unit/Resolver/DailyResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/DailyResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/DailyResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/DailyResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/DailyResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/DailyResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/DailyResolverTest.php
[parsing] modules/contrib/timesup/tests/src/Unit/Resolver/HourlyResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/HourlyResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/HourlyResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/HourlyResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/HourlyResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/HourlyResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/HourlyResolverTest.php
[parsing] modules/contrib/timesup/tests/src/Unit/Resolver/MidnightResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/MidnightResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/MidnightResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/MidnightResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/MidnightResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/MidnightResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/MidnightResolverTest.php
[parsing] modules/contrib/timesup/tests/src/Unit/Resolver/MinutelyResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/MinutelyResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/MinutelyResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/MinutelyResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/MinutelyResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/MinutelyResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/MinutelyResolverTest.php
[parsing] modules/contrib/timesup/tests/src/Unit/Resolver/WeeklyResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/WeeklyResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/WeeklyResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/WeeklyResolverTest.php
[refactoring] modules/contrib/timesup/tests/src/Unit/Resolver/WeeklyResolverTest.php
[post rectors] modules/contrib/timesup/tests/src/Unit/Resolver/WeeklyResolverTest.php
[print] modules/contrib/timesup/tests/src/Unit/Resolver/WeeklyResolverTest.php
[parsing] modules/contrib/timesup/timesup.module
[refactoring] modules/contrib/timesup/timesup.module
[post rectors] modules/contrib/timesup/timesup.module
[print] modules/contrib/timesup/timesup.module

5 files with changes
====================

1) modules/contrib/timesup/tests/src/Unit/Resolver/WeeklyResolverTest.php:29

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function setUp(): void {
-    $this->cacheTagsInvalidator = $this->getMockBuilder(CacheTagsInvalidatorInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->cacheTagsInvalidator = $this->createMock(CacheTagsInvalidatorInterface::class);

-    $this->state = $this->getMockBuilder(StateInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->state = $this->createMock(StateInterface::class);

-    $this->time = $this->getMockBuilder(TimeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->time = $this->createMock(TimeInterface::class);

-    $this->logger = $this->getMockBuilder(LoggerChannelInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->logger = $this->createMock(LoggerChannelInterface::class);

-    $this->loggerFactory = $this->getMockBuilder(LoggerChannelFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->loggerFactory = $this->createMock(LoggerChannelFactoryInterface::class);
     $this->loggerFactory->expects($this->once())
       ->method('get')->with('timesup')->willReturn($this->logger);
   }
@@ @@

   /**
    * @covers ::purge
+   * @doesNotPerformAssertions
    */
   public function testPurge() {
     $this->cacheTagsInvalidator->expects($this->once())
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/timesup/tests/src/Unit/Resolver/MinutelyResolverTest.php:29

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function setUp(): void {
-    $this->cacheTagsInvalidator = $this->getMockBuilder(CacheTagsInvalidatorInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->cacheTagsInvalidator = $this->createMock(CacheTagsInvalidatorInterface::class);

-    $this->state = $this->getMockBuilder(StateInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->state = $this->createMock(StateInterface::class);

-    $this->time = $this->getMockBuilder(TimeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->time = $this->createMock(TimeInterface::class);

-    $this->logger = $this->getMockBuilder(LoggerChannelInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->logger = $this->createMock(LoggerChannelInterface::class);

-    $this->loggerFactory = $this->getMockBuilder(LoggerChannelFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->loggerFactory = $this->createMock(LoggerChannelFactoryInterface::class);
     $this->loggerFactory->expects($this->once())
       ->method('get')->with('timesup')->willReturn($this->logger);
   }
@@ @@

   /**
    * @covers ::purge
+   * @doesNotPerformAssertions
    */
   public function testPurge() {
     $this->cacheTagsInvalidator->expects($this->once())
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/timesup/tests/src/Unit/Resolver/MidnightResolverTest.php:30

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function setUp(): void {
-    $this->cacheTagsInvalidator = $this->getMockBuilder(CacheTagsInvalidatorInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->cacheTagsInvalidator = $this->createMock(CacheTagsInvalidatorInterface::class);

-    $this->state = $this->getMockBuilder(StateInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->state = $this->createMock(StateInterface::class);

-    $this->time = $this->getMockBuilder(TimeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->time = $this->createMock(TimeInterface::class);

-    $this->logger = $this->getMockBuilder(LoggerChannelInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->logger = $this->createMock(LoggerChannelInterface::class);

-    $this->loggerFactory = $this->getMockBuilder(LoggerChannelFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->loggerFactory = $this->createMock(LoggerChannelFactoryInterface::class);
     $this->loggerFactory->expects($this->once())
       ->method('get')->with('timesup')->willReturn($this->logger);
   }
@@ @@

   /**
    * @covers ::purge
+   * @doesNotPerformAssertions
    */
   public function testPurge() {
     $this->cacheTagsInvalidator->expects($this->once())
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/timesup/tests/src/Unit/Resolver/HourlyResolverTest.php:29

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function setUp(): void {
-    $this->cacheTagsInvalidator = $this->getMockBuilder(CacheTagsInvalidatorInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->cacheTagsInvalidator = $this->createMock(CacheTagsInvalidatorInterface::class);

-    $this->state = $this->getMockBuilder(StateInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->state = $this->createMock(StateInterface::class);

-    $this->time = $this->getMockBuilder(TimeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->time = $this->createMock(TimeInterface::class);

-    $this->logger = $this->getMockBuilder(LoggerChannelInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->logger = $this->createMock(LoggerChannelInterface::class);

-    $this->loggerFactory = $this->getMockBuilder(LoggerChannelFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->loggerFactory = $this->createMock(LoggerChannelFactoryInterface::class);
     $this->loggerFactory->expects($this->once())
       ->method('get')->with('timesup')->willReturn($this->logger);
   }
@@ @@

   /**
    * @covers ::purge
+   * @doesNotPerformAssertions
    */
   public function testPurge() {
     $this->cacheTagsInvalidator->expects($this->once())
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/timesup/tests/src/Unit/Resolver/DailyResolverTest.php:29

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function setUp(): void {
-    $this->cacheTagsInvalidator = $this->getMockBuilder(CacheTagsInvalidatorInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->cacheTagsInvalidator = $this->createMock(CacheTagsInvalidatorInterface::class);

-    $this->state = $this->getMockBuilder(StateInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->state = $this->createMock(StateInterface::class);

-    $this->time = $this->getMockBuilder(TimeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->time = $this->createMock(TimeInterface::class);

-    $this->logger = $this->getMockBuilder(LoggerChannelInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->logger = $this->createMock(LoggerChannelInterface::class);

-    $this->loggerFactory = $this->getMockBuilder(LoggerChannelFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->loggerFactory = $this->createMock(LoggerChannelFactoryInterface::class);
     $this->loggerFactory->expects($this->once())
       ->method('get')->with('timesup')->willReturn($this->logger);
   }
@@ @@

   /**
    * @covers ::purge
+   * @doesNotPerformAssertions
    */
   public function testPurge() {
     $this->cacheTagsInvalidator->expects($this->once())
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

