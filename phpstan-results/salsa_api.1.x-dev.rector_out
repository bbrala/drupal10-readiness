[parsing] modules/contrib/salsa_api/salsa_api.module
[refactoring] modules/contrib/salsa_api/salsa_api.module
[post rectors] modules/contrib/salsa_api/salsa_api.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/salsa_api.module
[parsing] modules/contrib/salsa_api/src/Form/SalsaSettingsForm.php
[refactoring] modules/contrib/salsa_api/src/Form/SalsaSettingsForm.php
[post rectors] modules/contrib/salsa_api/src/Form/SalsaSettingsForm.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/src/Form/SalsaSettingsForm.php
[parsing] modules/contrib/salsa_api/src/SalsaApi.php
[refactoring] modules/contrib/salsa_api/src/SalsaApi.php
[post rectors] modules/contrib/salsa_api/src/SalsaApi.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/src/SalsaApi.php
[parsing] modules/contrib/salsa_api/src/SalsaApiInterface.php
[refactoring] modules/contrib/salsa_api/src/SalsaApiInterface.php
[post rectors] modules/contrib/salsa_api/src/SalsaApiInterface.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/src/SalsaApiInterface.php
[parsing] modules/contrib/salsa_api/src/SalsaConnectionException.php
[refactoring] modules/contrib/salsa_api/src/SalsaConnectionException.php
[post rectors] modules/contrib/salsa_api/src/SalsaConnectionException.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/src/SalsaConnectionException.php
[parsing] modules/contrib/salsa_api/src/SalsaQueryException.php
[refactoring] modules/contrib/salsa_api/src/SalsaQueryException.php
[post rectors] modules/contrib/salsa_api/src/SalsaQueryException.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/src/SalsaQueryException.php
[parsing] modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMock.php
[refactoring] modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMock.php
[post rectors] modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMock.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMock.php
[parsing] modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMockServiceProvider.php
[refactoring] modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMockServiceProvider.php
[post rectors] modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMockServiceProvider.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMockServiceProvider.php
[parsing] modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php
[refactoring] modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php
[post rectors] modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php
[refactoring] modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php
[post rectors] modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php
[parsing] modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php
[refactoring] modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php
[post rectors] modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php
[refactoring] modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php
[post rectors] modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php

2 files with changes
====================

1) modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php:64

    ---------- begin diff ----------
@@ @@
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\Client|\PHPUnit_Framework_MockObject_MockObject
+   * @var \GuzzleHttp\Client|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $client;

@@ @@
   /**
    * The URL Generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Routing\UrlGeneratorInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $urlGenerator;

@@ @@
   /**
    * The logger channel factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $loggerChannelFactory;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Language\LanguageManagerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $languageManager;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Component\Datetime\TimeInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $time;

@@ @@

   /**
    * @covers ::deleteTag
+   * @doesNotPerformAssertions
    */
   public function testDeleteTag() {
     $salsa = $this->getSalsaAPI();
@@ @@

   /**
    * @covers ::getCounts
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   Error message
    */
   public function testGetCountsError() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  Error message');
     $salsa = $this->getSalsaAPI();

     $object = 'OBJECT';
@@ @@

   /**
    * @covers ::getObject
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   There was a problem with your submission, invalid object/key pair.
    */
   public function testGetObjectError() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  There was a problem with your submission, invalid object/key pair.');
     $salsa = $this->getSalsaAPI();

     $body_query_error = '<?xml version="1.0"?>
@@ @@

   /**
    * @covers ::getReport
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   Unable to retrieve report #KEY. Does it exist?
    */
   public function testGetReportError() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  Unable to retrieve report #KEY. Does it exist?');
     $salsa = $this->getSalsaAPI();

     $key = 'KEY';
@@ @@

   /**
    * @covers ::describe
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   Unable to retrieve schema for table KEY. Does it exist?
    */
   public function testDescribeError() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  Unable to retrieve schema for table KEY. Does it exist?');
     $salsa = $this->getSalsaAPI();

     $table = 'KEY';
@@ @@

   /**
    * @covers ::describe2
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   Unable to retrieve schema for table KEY. Does it exist?
    */
   public function testDescribe2Error() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  Unable to retrieve schema for table KEY. Does it exist?');
     $salsa = $this->getSalsaAPI();

     $table = 'KEY';
@@ @@

   /**
    * @covers ::save
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
    */
   public function testSaveError() {
+    $this->expectException(\Drupal\salsa_api\SalsaQueryException::class);
     $salsa = $this->getSalsaAPI();

     $object = 'OBJECT';
@@ @@
   /**
    * @covers ::parseXml
    * @covers ::convertObjectToArray
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
    */
   public function testParseResultError() {
+    $this->expectException(\Drupal\salsa_api\SalsaQueryException::class);
     $salsa = $this->getSalsaAPI();

     $table = 'KEY';
@@ @@

   /**
    * @covers ::connect
-   *
-   * @expectedException \Drupal\salsa_api\SalsaConnectionException
    */
   public function testConnectError() {
+    $this->expectException(\Drupal\salsa_api\SalsaConnectionException::class);
     $salsa = $this->getSalsaAPI();
     $logger_channel = $this->createMock('\Drupal\Core\Logger\LoggerChannelInterface');

@@ @@
   /**
    * Helper function.
    *
-   * @return \PHPUnit_Framework_MockObject_MockBuilder
+   * @return \PHPUnit\Framework\MockObject\MockBuilder
    *   The config factory.
    */
   protected function getSalsaApiConfigFactory() {
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php:82

    ---------- begin diff ----------
@@ @@
       'password' => $this->correctPassword,
       'query_timeout' => $this->queryTimeout,
     );
-    $this->drupalPostForm('admin/config/services/salsa', $edit, 'Save configuration');
-    $this->assertText('The configuration options have been saved.');
+    $this->drupalGet('admin/config/services/salsa');
+    $this->submitForm($edit, 'Save configuration');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
   }

   /**
@@ @@
       'password' => $this->wrongPassword,
       'query_timeout' => $this->queryTimeout,
     );
-    $this->drupalPostForm('admin/config/services/salsa', $edit, 'Save configuration');
-    $this->assertText('Username and/or password incorrect.');
+    $this->drupalGet('admin/config/services/salsa');
+    $this->submitForm($edit, 'Save configuration');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Username and/or password incorrect.');
   }

   /**
@@ @@
       'password' => $this->correctPassword,
       'query_timeout' => $this->queryTimeout,
     );
-    $this->drupalPostForm('admin/config/services/salsa', $edit, 'Save configuration');
-    $this->assertText('This page is not available, please type in a correct URL or try again later.');
+    $this->drupalGet('admin/config/services/salsa');
+    $this->submitForm($edit, 'Save configuration');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('This page is not available, please type in a correct URL or try again later.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector


 [OK] 2 files have been changed by Rector                                       

