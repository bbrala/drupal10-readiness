diff --git a/src/Tests/DomainRegistrationTest.php b/src/Tests/DomainRegistrationTest.php
index eca2126..d808e10 100644
--- a/src/Tests/DomainRegistrationTest.php
+++ b/src/Tests/DomainRegistrationTest.php
@@ -25,9 +25,13 @@ class DomainRegistrationTest extends BrowserTestBase {
       'name' => $this->randomMachineName(),
       'mail' => $this->randomMachineName() . '@example.com',
     ];
+    $this->drupalGet('user/register');
     // Attempt to register a user with a whitelist email.
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message'), t('Thank you for applying for an account'));
+    $this->submitForm($edit, t('Create new account'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('A welcome message'));
   }
 
   /**
@@ -42,9 +46,13 @@ class DomainRegistrationTest extends BrowserTestBase {
       'name' => $this->randomMachineName(),
       'mail' => $this->randomMachineName() . '@example.com',
     ];
+    $this->drupalGet('user/register');
     // Attempt to register a user with a whitelist email.
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message'), t('Thank you for applying for an account'));
+    $this->submitForm($edit, t('Create new account'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('A welcome message'));
   }
 
   /**
@@ -59,9 +67,13 @@ class DomainRegistrationTest extends BrowserTestBase {
       'name' => $this->randomMachineName(),
       'mail' => $this->randomMachineName() . '@subdomain.example.com',
     ];
+    $this->drupalGet('user/register');
     // Attempt to register a user with a whitelist email.
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message'), t('Thank you for applying for an account'));
+    $this->submitForm($edit, t('Create new account'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('A welcome message'));
   }
 
   /**
@@ -76,9 +88,13 @@ class DomainRegistrationTest extends BrowserTestBase {
       'name' => $this->randomMachineName(),
       'mail' => $this->randomMachineName() . '@otherexample.com',
     ];
+    $this->drupalGet('user/register');
     // Attempt to register a user with a non whitelist email.
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('You are not allowed to register for this site.'), t('User was successfully denied registration.'));
+    $this->submitForm($edit, t('Create new account'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('You are not allowed to register for this site.'));
   }
 
   /**
@@ -93,9 +109,13 @@ class DomainRegistrationTest extends BrowserTestBase {
       'name' => $this->randomMachineName(),
       'mail' => $this->randomMachineName() . '@example.com',
     ];
+    $this->drupalGet('user/register');
     // Attempt to register a user with a blacklist email.
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('You are not allowed to register for this site.'), t('User was successfully denied registration.'));
+    $this->submitForm($edit, t('Create new account'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('You are not allowed to register for this site.'));
   }
 
   /**
@@ -110,9 +130,13 @@ class DomainRegistrationTest extends BrowserTestBase {
       'name' => $this->randomMachineName(),
       'mail' => $this->randomMachineName() . '@subdomain.example.com',
     ];
+    $this->drupalGet('user/register');
     // Attempt to register a user with blacklist email.
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('You are not allowed to register for this site.'), t('User was successfully denied registration.'));
+    $this->submitForm($edit, t('Create new account'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('You are not allowed to register for this site.'));
   }
 
   /**
@@ -128,9 +152,13 @@ class DomainRegistrationTest extends BrowserTestBase {
       'name' => $this->randomMachineName(),
       'mail' => $this->randomMachineName() . '@example.com',
     ];
+    $this->drupalGet('user/register');
     // Attempt to register a user with a blacklist email.
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('foo bar baz'), t('Custom denial message was shown.'));
+    $this->submitForm($edit, t('Create new account'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('foo bar baz'));
   }
 
   /**
@@ -145,9 +173,13 @@ class DomainRegistrationTest extends BrowserTestBase {
       'name' => $this->randomMachineName(),
       'mail' => $this->randomMachineName() . '@otherexample.com',
     ];
+    $this->drupalGet('user/register');
     // Attempt to register a user with a non blacklist email.
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message'), t('Thank you for applying for an account'));
+    $this->submitForm($edit, t('Create new account'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('A welcome message'));
   }
 
 }
