diff --git a/elasticsearch_connector.module b/elasticsearch_connector.module
index fa50959..1947183 100644
--- a/elasticsearch_connector.module
+++ b/elasticsearch_connector.module
@@ -107,8 +107,8 @@ function _elasticsearch_ec_clusters_process(array $element, array &$form_state,
  */
 function _elasticsearch_ec_index_attached() {
   return array(
-    'js' => array(drupal_get_path('module', 'elasticsearch') . '/js/ec-index.js'),
-    'css' => array(drupal_get_path('module', 'elasticsearch') . '/css/ec-index.css'),
+    'js' => array(\Drupal::service('extension.list.module')->getPath('elasticsearch') . '/js/ec-index.js'),
+    'css' => array(\Drupal::service('extension.list.module')->getPath('elasticsearch') . '/css/ec-index.css'),
     'library' => array(array('system', 'ui.dialog')),
   );
 }
@@ -350,7 +350,7 @@ function elasticsearch_connector_redirect_page($cluster, $index_name) {
   // Add appropriate javascript that will be used by the parent page to fill in
   // the required data.
   if (elasticsearch_in_dialog() && isset($_GET['elasticsearch-dialog-close'])) {
-    drupal_add_js(drupal_get_path('module', 'elasticsearch') . '/js/ec-index-child.js');
+    drupal_add_js(\Drupal::service('extension.list.module')->getPath('elasticsearch') . '/js/ec-index-child.js');
     drupal_add_js(
       array(
         'elasticsearch' =>
diff --git a/src/Event/BuildSearchParamsEvent.php b/src/Event/BuildSearchParamsEvent.php
index fb0bd03..4e1eeaf 100644
--- a/src/Event/BuildSearchParamsEvent.php
+++ b/src/Event/BuildSearchParamsEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\elasticsearch_connector\Event
  */
-class BuildSearchParamsEvent extends Event {
+class BuildSearchParamsEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const BUILD_QUERY = 'elasticsearch_connector.build_searchparams';
 
diff --git a/src/Event/BuildSearchQueryEvent.php b/src/Event/BuildSearchQueryEvent.php
index 3dd43fc..24f4510 100644
--- a/src/Event/BuildSearchQueryEvent.php
+++ b/src/Event/BuildSearchQueryEvent.php
@@ -12,7 +12,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\elasticsearch_connector\Event
  */
-class BuildSearchQueryEvent extends Event {
+class BuildSearchQueryEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Event name.
diff --git a/src/Event/PrepareDocumentIndexEvent.php b/src/Event/PrepareDocumentIndexEvent.php
index 59c5be9..70364d2 100644
--- a/src/Event/PrepareDocumentIndexEvent.php
+++ b/src/Event/PrepareDocumentIndexEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\elasticsearch_connector\Event
  */
-class PrepareDocumentIndexEvent extends Event {
+class PrepareDocumentIndexEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Event name.
diff --git a/src/Event/PrepareIndexMappingEvent.php b/src/Event/PrepareIndexMappingEvent.php
index 0cf01cb..67c93a2 100644
--- a/src/Event/PrepareIndexMappingEvent.php
+++ b/src/Event/PrepareIndexMappingEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\elasticsearch_connector\Event
  */
-class PrepareIndexMappingEvent extends Event {
+class PrepareIndexMappingEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const PREPARE_INDEX_MAPPING = 'elasticsearch_connector.prepare_index_mapping';
 
diff --git a/src/Event/PrepareMappingEvent.php b/src/Event/PrepareMappingEvent.php
index def819e..becacc5 100644
--- a/src/Event/PrepareMappingEvent.php
+++ b/src/Event/PrepareMappingEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\elasticsearch_connector\Event
  */
-class PrepareMappingEvent extends Event {
+class PrepareMappingEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const PREPARE_MAPPING = 'elasticsearch_connector.prepare_mapping';
 
diff --git a/src/Event/PrepareSearchQueryEvent.php b/src/Event/PrepareSearchQueryEvent.php
index 326cc33..8f826b3 100644
--- a/src/Event/PrepareSearchQueryEvent.php
+++ b/src/Event/PrepareSearchQueryEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\elasticsearch_connector\Event
  */
-class PrepareSearchQueryEvent extends Event {
+class PrepareSearchQueryEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const PREPARE_QUERY = 'elasticsearch_connector.prepare_searchquery';
 
