diff --git a/mcapi.theme.inc b/mcapi.theme.inc
index 2d8922ba..9573a56e 100644
--- a/mcapi.theme.inc
+++ b/mcapi.theme.inc
@@ -115,7 +115,7 @@ function _mcapi_get_axis_max($val) {
 function template_preprocess_mcapi_transaction(&$vars, $hook, $info) {
   $elements = $vars['elements'];
   foreach (Element::children($vars['elements']) as $key) {
-    $vars[$key] = render($vars['elements'][$key]);
+    $vars[$key] = \Drupal::service('renderer')->render($vars['elements'][$key]);
   }
   if (isset($elements['#watermark'])) {
     // to add a watermark to the render array, add #watermark => blah
diff --git a/mcapi.tokens.inc b/mcapi.tokens.inc
index 0fd91872..390deb0b 100644
--- a/mcapi.tokens.inc
+++ b/mcapi.tokens.inc
@@ -49,11 +49,11 @@ function mcapi_tokens($type, $tokens, array $data, array $options, $bubbleable_m
           break;
 
         case 'created':
-          $replacements[$original] = format_date($transaction->created->value, 'medium');
+          $replacements[$original] = \Drupal::service('date.formatter')->format($transaction->created->value, 'medium');
           break;
 
         case 'changed':
-          $replacements[$original] = format_date($transaction->changed->value, 'medium');
+          $replacements[$original] = \Drupal::service('date.formatter')->format($transaction->changed->value, 'medium');
           break;
 
         case 'url':
diff --git a/modules/greco/mcapi_greco.module b/modules/greco/mcapi_greco.module
index 26cafa1e..8c8aa4d1 100644
--- a/modules/greco/mcapi_greco.module
+++ b/modules/greco/mcapi_greco.module
@@ -61,7 +61,7 @@ function mcapi_index_views_cron() {
     }
 
     \Drupal::database()->insert('mcapi_greco')
-      ->fields(array('curr_id' => $curr_id, 'timestamp' => REQUEST_TIME, 'value' => $indicator))
+      ->fields(array('curr_id' => $curr_id, 'timestamp' => \Drupal::time()->getRequestTime(), 'value' => $indicator))
       ->execute();
   }
 }
diff --git a/modules/limits/src/Form/WalletLimitOverride.php b/modules/limits/src/Form/WalletLimitOverride.php
index 4d035a85..ec6bfdc6 100644
--- a/modules/limits/src/Form/WalletLimitOverride.php
+++ b/modules/limits/src/Form/WalletLimitOverride.php
@@ -183,7 +183,7 @@ class WalletLimitOverride extends FormBase {
           'max' => (int) ($limit == 'max'),
           'value' => $worth['value'],
           'editor' => $this->currentUser()->id(),
-          'date' => REQUEST_TIME,
+          'date' => \Drupal::time()->getRequestTime(),
         ];
         $q->values($row);
       }
diff --git a/modules/limits/src/Plugin/migrate/process/WalletLimits.php b/modules/limits/src/Plugin/migrate/process/WalletLimits.php
index cd2513b8..3ccd1731 100644
--- a/modules/limits/src/Plugin/migrate/process/WalletLimits.php
+++ b/modules/limits/src/Plugin/migrate/process/WalletLimits.php
@@ -55,7 +55,7 @@ class WalletLimits extends ProcessPluginBase {
               'max' => (int)$limit == 'max',
               'value' => $quant,
               'editor' => 1, //User 1 because this field didn't exist in 7
-              'date' => REQUEST_TIME
+              'date' => \Drupal::time()->getRequestTime()
             ];
           }
         }
diff --git a/modules/signatures/src/Signatures.php b/modules/signatures/src/Signatures.php
index e0de1e29..0a720fbd 100644
--- a/modules/signatures/src/Signatures.php
+++ b/modules/signatures/src/Signatures.php
@@ -135,7 +135,7 @@ class Signatures {
       $uid = $this->currentUser->id();
     }
     if (isset($this->transaction->signatures[$uid]) and empty($this->transaction->signatures[$uid])) {
-      $this->transaction->signatures[$uid] = REQUEST_TIME;
+      $this->transaction->signatures[$uid] = \Drupal::time()->getRequestTime();
       // Set the state to finished if there are no outstanding signatures.
       if (array_search(0, $this->transaction->signatures) === FALSE) {
         $this->transaction->set('state', 'done');
@@ -149,7 +149,7 @@ class Signatures {
   public function signOff() {
     foreach ($this->transaction->signatures as $uid => $signed) {
       if (!$signed) {
-        $this->transaction->signatures[$uid] = REQUEST_TIME;
+        $this->transaction->signatures[$uid] = \Drupal::time()->getRequestTime();
       }
     }
     $this->transaction->set('state', 'done');
diff --git a/src/Element/BalanceHistories.php b/src/Element/BalanceHistories.php
index c67cb178..ed2ed1e5 100644
--- a/src/Element/BalanceHistories.php
+++ b/src/Element/BalanceHistories.php
@@ -46,7 +46,7 @@ class BalanceHistories extends RenderElement {
       }
       // Add a start and end points showing the balance at this moment.
       $points = [$element['#wallet']->created->value => 0] +
-      $points += [REQUEST_TIME => end($points)];
+      $points += [\Drupal::time()->getRequestTime() => end($points)];
       
       $element[$currency->id()] = [
         '#theme' => 'mcapi_timeline',
diff --git a/src/Entity/Storage/TransactionStorage.php b/src/Entity/Storage/TransactionStorage.php
index 52dd9b97..f5485cc9 100644
--- a/src/Entity/Storage/TransactionStorage.php
+++ b/src/Entity/Storage/TransactionStorage.php
@@ -63,7 +63,7 @@ class TransactionStorage extends TransactionIndexStorage {
    */
   public function doSave($id, EntityInterface $entity) {
     $record = $this->mapToStorageRecord($entity);
-    $record->changed = REQUEST_TIME;
+    $record->changed = \Drupal::time()->getRequestTime();
     $return = parent::doSave($entity->xid->value, $entity);
     // The entity is no longer new.
     // because we were working on a clone.
diff --git a/src/Entity/ViewBuilder/CurrencyViewBuilder.php b/src/Entity/ViewBuilder/CurrencyViewBuilder.php
index 8df00716..62f517c8 100644
--- a/src/Entity/ViewBuilder/CurrencyViewBuilder.php
+++ b/src/Entity/ViewBuilder/CurrencyViewBuilder.php
@@ -201,7 +201,7 @@ class CurrencyViewBuilder extends EntityViewBuilder {
    */
   public function periodQueryParams($conditions) {
     $since = isset($conditions['since']) ? $conditions['since'] : 0;
-    $until = isset($conditions['until']) ? $conditions['until'] : REQUEST_TIME;
+    $until = isset($conditions['until']) ? $conditions['until'] : \Drupal::time()->getRequestTime();
     $span = $until - $since;
     $day = 86400;
     // $year = 31560192;
diff --git a/src/Form/OperationForm.php b/src/Form/OperationForm.php
index aab27713..f12bab25 100644
--- a/src/Form/OperationForm.php
+++ b/src/Form/OperationForm.php
@@ -186,7 +186,7 @@ class OperationForm extends ContentEntityForm {
         'action' => $this->getOperation(),
       ];
       $events = new TransactionSaveEvents($transaction, $context);
-      $this->eventDispatcher->dispatch(McapiEvents::ACTION, $events);
+      $this->eventDispatcher->dispatch($events, McapiEvents::ACTION);
       if ($m = $this->config['message']) {
         $this->messenger()->addMessage($m, 'status');
       }
diff --git a/src/Form/TransactionForm.php b/src/Form/TransactionForm.php
index c59af68f..76084aee 100644
--- a/src/Form/TransactionForm.php
+++ b/src/Form/TransactionForm.php
@@ -160,7 +160,7 @@ class TransactionForm extends ContentEntityForm {
     }
 
     if (!$form_state->getValue('created')) {
-      $form_state->setValue('created', REQUEST_TIME);
+      $form_state->setValue('created', \Drupal::time()->getRequestTime());
     }
     return $entity;
   }
diff --git a/src/Form/TransactionStatsFilterForm.php b/src/Form/TransactionStatsFilterForm.php
index 75c31ba3..bc95bf3b 100644
--- a/src/Form/TransactionStatsFilterForm.php
+++ b/src/Form/TransactionStatsFilterForm.php
@@ -62,7 +62,7 @@ class TransactionStatsFilterForm extends FormBase {
       '#type' => 'select',
       '#empty_option' => t('Now'),
       '#required' => FALSE,
-      '#default_value' => isset($previous['until']) ? $previous['until'] : REQUEST_TIME
+      '#default_value' => isset($previous['until']) ? $previous['until'] : \Drupal::time()->getRequestTime()
     ];
 
     $earliest = $currency->firstUsed();
@@ -76,7 +76,7 @@ class TransactionStatsFilterForm extends FormBase {
     if ($earliest > strtotime('-2 years')) {
       // System is less than two years old, so show months
       $start_of_month = strtotime("01-{$month}-{$year}");
-      while ($start_of_month < REQUEST_TIME) {
+      while ($start_of_month < \Drupal::time()->getRequestTime()) {
         $this->nextMonth($month, $year);
         $start_of_month = strtotime('01-'.$month.'-'.$year);
         $end_of_month = strtotime('01-'.($month+1).'-'.$year) -1;
@@ -87,7 +87,7 @@ class TransactionStatsFilterForm extends FormBase {
       // System is more than 2 years old, so show years.
       $start_of_year = strtotime('01-01-'.$year);
       //$form['since']['#options'][$next_year] = date('Y', $next_year);
-      while ($start_of_year < REQUEST_TIME) {
+      while ($start_of_year < \Drupal::time()->getRequestTime()) {
         $form['since']['#options'][$start_of_year] = date('Y', $start_of_year);
         $year++;
         $form['until']['#options'][strtotime('01-01-'.$year)-1] = $year;
diff --git a/src/Plugin/Action/Edit.php b/src/Plugin/Action/Edit.php
index 1ca06f67..35f92009 100644
--- a/src/Plugin/Action/Edit.php
+++ b/src/Plugin/Action/Edit.php
@@ -55,7 +55,7 @@ class Edit extends TransactionActionBase implements ContainerFactoryPluginInterf
     if ($this->accessState($object, $account)) {
       if ($this->accessOp($object, $account)) {
         if ($this->configuration['period']) {
-          $result = AccessResult::allowedIf($this->configuration['period'] > REQUEST_TIME);
+          $result = AccessResult::allowedIf($this->configuration['period'] > \Drupal::time()->getRequestTime());
         }
         else {
           $result = AccessResult::allowed();
