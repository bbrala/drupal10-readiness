diff --git a/lang_dropdown.info.yml b/lang_dropdown.info.yml
index 5d85288..541a4d7 100644
--- a/lang_dropdown.info.yml
+++ b/lang_dropdown.info.yml
@@ -2,8 +2,7 @@ name: 'Language Switcher Dropdown'
 type: module
 description: 'Provides a dropdown select to switch between available languages.'
 package: Multilingual
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:language
 configure: block.admin_display
diff --git a/lang_dropdown.module b/lang_dropdown.module
index 7f42297..097bd1f 100644
--- a/lang_dropdown.module
+++ b/lang_dropdown.module
@@ -76,7 +76,7 @@ function lang_dropdown_help($route_name, RouteMatchInterface $route_match) {
  * Helper function to handle msdropdown skins data.
  */
 function _lang_dropdown_get_msdropdown_skins() {
-  $module_path = drupal_get_path('module', 'lang_dropdown');
+  $module_path = \Drupal::service('extension.list.module')->getPath('lang_dropdown');
   return [
     'ldsSkin' => [
       'text' => t('Default skin'),
@@ -151,7 +151,7 @@ function _lang_dropdown_get_msdropdown_skins() {
  * Helper function to handle ddSlick skins data.
  */
 function _lang_dropdown_get_ddslick_skins() {
-  $module_path = drupal_get_path('module', 'lang_dropdown');
+  $module_path = \Drupal::service('extension.list.module')->getPath('lang_dropdown');
   return [
     'ddsDefault' => [
       'text' => t('Default skin'),
diff --git a/src/Form/LanguageDropdownForm.php b/src/Form/LanguageDropdownForm.php
index 93c3cb5..9182f24 100755
--- a/src/Form/LanguageDropdownForm.php
+++ b/src/Form/LanguageDropdownForm.php
@@ -193,7 +193,7 @@ class LanguageDropdownForm extends FormBase {
       if (isset($this->settings['widget']) && $this->moduleHandler->moduleExists('languageicons')) {
         $languageicons_config = $this->configFactory()->get('languageicons.settings');
         $languageicons_path = $languageicons_config->get('path');
-        $js_settings['languageicons'][$lang_code] = file_create_url(str_replace('*', $lang_code, $languageicons_path));
+        $js_settings['languageicons'][$lang_code] = \Drupal::service('file_url_generator')->generateAbsoluteString(str_replace('*', $lang_code, $languageicons_path));
       }
     }
 
diff --git a/tests/src/Functional/LanguageSwitchingTest.php b/tests/src/Functional/LanguageSwitchingTest.php
index 0e756d4..f962d19 100644
--- a/tests/src/Functional/LanguageSwitchingTest.php
+++ b/tests/src/Functional/LanguageSwitchingTest.php
@@ -30,7 +30,7 @@ class LanguageSwitchingTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create and log in user.
@@ -50,14 +50,16 @@ class LanguageSwitchingTest extends BrowserTestBase {
     $edit = [
       'predefined_langcode' => 'fr',
     ];
-    $this->drupalPostForm('admin/config/regional/language/add', $edit, t('Add language'));
+    $this->drupalGet('admin/config/regional/language/add');
+    $this->submitForm($edit, t('Add language'));
 
     // Enable session language detection and selection.
     $edit = [
       'language_interface[enabled][language-url]' => FALSE,
       'language_interface[enabled][language-session]' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/regional/language/detection', $edit, t('Save settings'));
+    $this->drupalGet('admin/config/regional/language/detection');
+    $this->submitForm($edit, t('Save settings'));
 
     // Enable the language switching block.
     $this->placeBlock('language_dropdown_block:' . LanguageInterface::TYPE_INTERFACE, [
@@ -69,11 +71,11 @@ class LanguageSwitchingTest extends BrowserTestBase {
     // Go to the homepage.
     $this->drupalGet('');
     // Make sure default language selected is English.
-    $this->assertEqual(1, count($this->cssSelect('#edit-lang-dropdown-select option[selected=selected]:contains(English)')));
+    $this->assertEquals(1, count($this->cssSelect('#edit-lang-dropdown-select option[selected=selected]:contains(English)')));
     // Go to the homepage for French language.
     $this->drupalGet('', ['query' => ['language' => 'fr']]);
     // Make sure default language selected is French.
-    $this->assertEqual(1, count($this->cssSelect('#edit-lang-dropdown-select option[selected=selected]:contains(French)')));
+    $this->assertEquals(1, count($this->cssSelect('#edit-lang-dropdown-select option[selected=selected]:contains(French)')));
     // @todo Add Ajax testing of language switching.
   }
 
