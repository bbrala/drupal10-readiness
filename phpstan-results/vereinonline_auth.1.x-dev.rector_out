[parsing] modules/contrib/vereinonline_auth/src/Form/SettingsForm.php
[refactoring] modules/contrib/vereinonline_auth/src/Form/SettingsForm.php
[post rectors] modules/contrib/vereinonline_auth/src/Form/SettingsForm.php
[print] modules/contrib/vereinonline_auth/src/Form/SettingsForm.php
[parsing] modules/contrib/vereinonline_auth/src/VereinonlineCommon.php
[refactoring] modules/contrib/vereinonline_auth/src/VereinonlineCommon.php
[post rectors] modules/contrib/vereinonline_auth/src/VereinonlineCommon.php
[print] modules/contrib/vereinonline_auth/src/VereinonlineCommon.php
[parsing] modules/contrib/vereinonline_auth/tests/src/Functional/LoginTest.php
[refactoring] modules/contrib/vereinonline_auth/tests/src/Functional/LoginTest.php
[post rectors] modules/contrib/vereinonline_auth/tests/src/Functional/LoginTest.php
[print] modules/contrib/vereinonline_auth/tests/src/Functional/LoginTest.php
[refactoring] modules/contrib/vereinonline_auth/tests/src/Functional/LoginTest.php
[post rectors] modules/contrib/vereinonline_auth/tests/src/Functional/LoginTest.php
[print] modules/contrib/vereinonline_auth/tests/src/Functional/LoginTest.php
[parsing] modules/contrib/vereinonline_auth/vereinonline_auth.module
[refactoring] modules/contrib/vereinonline_auth/vereinonline_auth.module
[post rectors] modules/contrib/vereinonline_auth/vereinonline_auth.module
[print] modules/contrib/vereinonline_auth/vereinonline_auth.module

1 file with changes
===================

1) modules/contrib/vereinonline_auth/tests/src/Functional/LoginTest.php:78

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->admin = $this->drupalCreateUser([], NULL, TRUE);
     $this->drupalLogin($this->admin);
@@ @@
     // Create role + user.
     $this->role = $this->drupalCreateRole([], NULL);
     $this->normalUser = $this->drupalCreateUser(['view own unpublished content'], NULL, FALSE);
+    $this->drupalGet('/admin/config/people/vereinonline_auth');

     // Module settings.
-    $this->drupalPostForm('/admin/config/people/vereinonline_auth', [
+    $this->submitForm([
       'api_url' => self::API_URL,
       'api_user' => self::API_USER,
       'api_password' => self::API_PASSWORD,
@@ @@
     $this->drupalGet('/user');
     $this->assertSession()->addressEquals('/user/' . $this->normalUser->id());
     $this->drupalLogout();
+    $this->drupalGet('/user/login');

     // Fail with unknown user and wrong password.
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'name' => 'userfehlerhaft',
       'pass' => '1234567',
     ], 'Log in');
     $this->assertSession()->pageTextContains('Unrecognized username or password.');
     $this->assertSession()->addressEquals('/user/login');
+    $this->drupalGet('/user/login');

     // Fail with user and wrong password.
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'name' => 'first.last',
       'pass' => '1234567',
     ], 'Log in');
     $this->assertSession()->pageTextContains('Unrecognized username or password.');
     $this->assertSession()->addressEquals('/user/login');
+    $this->drupalGet('/user/login');

     // Create new user and login.
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'name' => 'first.last',
       'pass' => '7654321',
     ], 'Log in');
@@ @@
     $this->assertSession()->pageTextNotContains('Unrecognized username or password.');
     $this->assertSession()->addressNotEquals('/user/login');
     $this->drupalLogout();
+    $this->drupalGet('/user/login');

     // Fail with new user and wrong password.
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'name' => 'first.last',
       'pass' => '1234567',
     ], 'Log in');
@@ @@
    * Test the no connection situation with fallback.
    */
   public function testNoConnectionFallback() {
+    $this->drupalGet('/user/login');
     // Create new user and login.
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'name' => 'first.last',
       'pass' => '7654321',
     ], 'Log in');
@@ @@
     $this->drupalLogout();

     $this->drupalLogin($this->admin);
+    $this->drupalGet('/admin/config/people/vereinonline_auth');
     // Set no connection URL.
-    $this->drupalPostForm('/admin/config/people/vereinonline_auth', [
+    $this->submitForm([
       'api_url' => self::API_URL_WRONG,
       'api_user' => self::API_USER,
       'api_password' => self::API_PASSWORD,
@@ @@
       'user_role' => $this->role,
     ], 'Submit');
     $this->drupalLogout();
+    $this->drupalGet('/user/login');

     // Login and test connection.
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'name' => 'first.last',
       'pass' => '7654321',
     ], 'Log in');
@@ @@
    * Test the no connection situation without fallback.
    */
   public function testNoConnectionNoFallback() {
+    $this->drupalGet('/user/login');
     // Create new user and login.
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'name' => 'first.last',
       'pass' => '7654321',
     ], 'Log in');
@@ @@
     $this->drupalLogout();

     $this->drupalLogin($this->admin);
+    $this->drupalGet('/admin/config/people/vereinonline_auth');
     // Set no connection URL.
-    $this->drupalPostForm('/admin/config/people/vereinonline_auth', [
+    $this->submitForm([
       'api_url' => self::API_URL_WRONG,
       'api_user' => self::API_USER,
       'api_password' => self::API_PASSWORD,
@@ @@
       'user_role' => $this->role,
     ], 'Submit');
     $this->drupalLogout();
+    $this->drupalGet('/user/login');

     // Login and test connection.
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'name' => 'first.last',
       'pass' => '7654321',
     ], 'Log in');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

