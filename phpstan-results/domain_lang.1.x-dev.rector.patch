diff --git a/domain_lang.info.yml b/domain_lang.info.yml
index 0db60d8..3c56b96 100644
--- a/domain_lang.info.yml
+++ b/domain_lang.info.yml
@@ -2,8 +2,7 @@ name: Domain Lang
 description: 'Adds language detection and selection functionality per domain basis.'
 type: module
 package: Domain
-core: '8.x'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 
 dependencies:
   - drupal:language
diff --git a/src/EventSubscriber/DomainLangConfigRedirect.php b/src/EventSubscriber/DomainLangConfigRedirect.php
index d47c140..698af5a 100644
--- a/src/EventSubscriber/DomainLangConfigRedirect.php
+++ b/src/EventSubscriber/DomainLangConfigRedirect.php
@@ -49,10 +49,10 @@ class DomainLangConfigRedirect implements EventSubscriberInterface {
   /**
    * Check current request and redirect if needed.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   Current request response event.
    */
-  public function checkRequest(GetResponseEvent $event) {
+  public function checkRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $domain = $this->domainNegotiator->getActiveDomain();
 
     if ($domain instanceof DomainInterface) {
@@ -98,14 +98,14 @@ class DomainLangConfigRedirect implements EventSubscriberInterface {
   /**
    * Sets TrustedRedirectResponse to redirect to related domain page.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The request response event.
    * @param string $route
    *   The name of the route.
    * @param \Drupal\domain\DomainInterface $domain
    *   The domain object.
    */
-  protected function setRedirectResponse(GetResponseEvent $event, $route, DomainInterface $domain) {
+  protected function setRedirectResponse(\Symfony\Component\HttpKernel\Event\RequestEvent $event, $route, DomainInterface $domain) {
     $event->setResponse(new TrustedRedirectResponse(Url::fromRoute(
       $route,
       ['domain' => $domain->id()],
