[parsing] modules/contrib/deprecation_status/deprecation_status.module
[refactoring] modules/contrib/deprecation_status/deprecation_status.module
[post rectors] modules/contrib/deprecation_status/deprecation_status.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/deprecation_status/deprecation_status.module
[parsing] modules/contrib/deprecation_status/src/Controller/GraphController.php
[refactoring] modules/contrib/deprecation_status/src/Controller/GraphController.php
[post rectors] modules/contrib/deprecation_status/src/Controller/GraphController.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/deprecation_status/src/Controller/GraphController.php
[parsing] modules/contrib/deprecation_status/src/DataSource.php
[refactoring] modules/contrib/deprecation_status/src/DataSource.php
[post rectors] modules/contrib/deprecation_status/src/DataSource.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/deprecation_status/src/DataSource.php
[parsing] modules/contrib/deprecation_status/src/Form/ErrorsForm.php
[refactoring] modules/contrib/deprecation_status/src/Form/ErrorsForm.php
[post rectors] modules/contrib/deprecation_status/src/Form/ErrorsForm.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/deprecation_status/src/Form/ErrorsForm.php
[parsing] modules/contrib/deprecation_status/src/Form/ProjectsForm.php
[refactoring] modules/contrib/deprecation_status/src/Form/ProjectsForm.php
[post rectors] modules/contrib/deprecation_status/src/Form/ProjectsForm.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/deprecation_status/src/Form/ProjectsForm.php
[parsing] modules/contrib/deprecation_status/src/Form/SingleErrorForm.php
[refactoring] modules/contrib/deprecation_status/src/Form/SingleErrorForm.php
[post rectors] modules/contrib/deprecation_status/src/Form/SingleErrorForm.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/deprecation_status/src/Form/SingleErrorForm.php
[parsing] modules/contrib/deprecation_status/src/Form/UpdateForm.php
[refactoring] modules/contrib/deprecation_status/src/Form/UpdateForm.php
[post rectors] modules/contrib/deprecation_status/src/Form/UpdateForm.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/deprecation_status/src/Form/UpdateForm.php
[parsing] modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php
[refactoring] modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php
[post rectors] modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php
[refactoring] modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php
[post rectors] modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php

1 file with changes
===================

1) modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php:32

    ---------- begin diff ----------
@@ @@

     $this->drupalGet(Url::fromRoute('deprecation_status.projects_form'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter projects');
-    $this->assertText('Covered by rector');
-    $this->assertText('pathauto');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Filter projects');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Covered by rector');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('pathauto');

     $this->drupalGet(Url::fromRoute('deprecation_status.projects_form10'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter projects');
-    $this->assertText('Covered by rector');
-    $this->assertText('pathauto');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Filter projects');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Covered by rector');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('pathauto');

     $this->drupalGet(Url::fromRoute('deprecation_status.errors_form'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter errors');
-    $this->assertText('Covered by rector');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Filter errors');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Covered by rector');

     $this->drupalGet(Url::fromRoute('deprecation_status.errors_form10'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter errors');
-    $this->assertText('Covered by rector');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Filter errors');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Covered by rector');

     $this->drupalGet(Url::fromRoute('deprecation_status.error', ['error_index' => 1]));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Deprecation error details');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Deprecation error details');

     $this->drupalGet(Url::fromRoute('deprecation_status.error10', ['error_index' => 1]));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Deprecation error details');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Deprecation error details');

     $this->drupalGet(Url::fromRoute('deprecation_status.graphs'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Percentage of contributed projects by status in usage groups');
-    $this->assertText('All drupal.org contributed projects by status over time');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Percentage of contributed projects by status in usage groups');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('All drupal.org contributed projects by status over time');

     $this->drupalGet(Url::fromRoute('deprecation_status.graphs10'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Tracking based on @deprecated and E_USER_DEPRECATED mentions in Drupal 9 core.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Tracking based on @deprecated and E_USER_DEPRECATED mentions in Drupal 9 core.');

     $this->drupalGet(Url::fromRoute('deprecation_status.update'));
     $this->assertSession()->statusCodeEquals(403);
@@ @@
     $this->drupalLogin($this->drupalCreateUser(['access administration pages']));
     $this->drupalGet(Url::fromRoute('deprecation_status.update'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Shipped dataset');
-    $this->assertText('Current live dataset');
-    $this->assertText('Online dataset');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Shipped dataset');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Current live dataset');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Online dataset');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector


 [OK] 1 file has been changed by Rector                                         

