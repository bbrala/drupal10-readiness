[parsing] modules/contrib/block_generation/block_generation.install
[refactoring] modules/contrib/block_generation/block_generation.install
[post rectors] modules/contrib/block_generation/block_generation.install
[print] modules/contrib/block_generation/block_generation.install
[parsing] modules/contrib/block_generation/block_generation.module
[refactoring] modules/contrib/block_generation/block_generation.module
[post rectors] modules/contrib/block_generation/block_generation.module
[print] modules/contrib/block_generation/block_generation.module
[refactoring] modules/contrib/block_generation/block_generation.module
[post rectors] modules/contrib/block_generation/block_generation.module
[print] modules/contrib/block_generation/block_generation.module
[parsing] modules/contrib/block_generation/modules/block/block_generation_block.install
[refactoring] modules/contrib/block_generation/modules/block/block_generation_block.install
[post rectors] modules/contrib/block_generation/modules/block/block_generation_block.install
[print] modules/contrib/block_generation/modules/block/block_generation_block.install
[parsing] modules/contrib/block_generation/modules/block/block_generation_block.module
[refactoring] modules/contrib/block_generation/modules/block/block_generation_block.module
[post rectors] modules/contrib/block_generation/modules/block/block_generation_block.module
[print] modules/contrib/block_generation/modules/block/block_generation_block.module
[parsing] modules/contrib/block_generation/modules/composition/block_generation_composition.install
[refactoring] modules/contrib/block_generation/modules/composition/block_generation_composition.install
[post rectors] modules/contrib/block_generation/modules/composition/block_generation_composition.install
[print] modules/contrib/block_generation/modules/composition/block_generation_composition.install
[parsing] modules/contrib/block_generation/modules/composition/block_generation_composition.module
[refactoring] modules/contrib/block_generation/modules/composition/block_generation_composition.module
[post rectors] modules/contrib/block_generation/modules/composition/block_generation_composition.module
[print] modules/contrib/block_generation/modules/composition/block_generation_composition.module
[parsing] modules/contrib/block_generation/modules/image/block_generation_image.install
[refactoring] modules/contrib/block_generation/modules/image/block_generation_image.install
[post rectors] modules/contrib/block_generation/modules/image/block_generation_image.install
[print] modules/contrib/block_generation/modules/image/block_generation_image.install
[parsing] modules/contrib/block_generation/modules/image/block_generation_image.module
[refactoring] modules/contrib/block_generation/modules/image/block_generation_image.module
[post rectors] modules/contrib/block_generation/modules/image/block_generation_image.module
[print] modules/contrib/block_generation/modules/image/block_generation_image.module
[parsing] modules/contrib/block_generation/modules/media/block_generation_media.install
[refactoring] modules/contrib/block_generation/modules/media/block_generation_media.install
[post rectors] modules/contrib/block_generation/modules/media/block_generation_media.install
[print] modules/contrib/block_generation/modules/media/block_generation_media.install
[parsing] modules/contrib/block_generation/modules/media/block_generation_media.module
[refactoring] modules/contrib/block_generation/modules/media/block_generation_media.module
[post rectors] modules/contrib/block_generation/modules/media/block_generation_media.module
[print] modules/contrib/block_generation/modules/media/block_generation_media.module
[parsing] modules/contrib/block_generation/modules/teaser/block_generation_teaser.install
[refactoring] modules/contrib/block_generation/modules/teaser/block_generation_teaser.install
[post rectors] modules/contrib/block_generation/modules/teaser/block_generation_teaser.install
[print] modules/contrib/block_generation/modules/teaser/block_generation_teaser.install
[parsing] modules/contrib/block_generation/modules/teaser/block_generation_teaser.module
[refactoring] modules/contrib/block_generation/modules/teaser/block_generation_teaser.module
[post rectors] modules/contrib/block_generation/modules/teaser/block_generation_teaser.module
[print] modules/contrib/block_generation/modules/teaser/block_generation_teaser.module
[parsing] modules/contrib/block_generation/modules/text/block_generation_text.install
[refactoring] modules/contrib/block_generation/modules/text/block_generation_text.install
[post rectors] modules/contrib/block_generation/modules/text/block_generation_text.install
[print] modules/contrib/block_generation/modules/text/block_generation_text.install
[parsing] modules/contrib/block_generation/modules/text/block_generation_text.module
[refactoring] modules/contrib/block_generation/modules/text/block_generation_text.module
[post rectors] modules/contrib/block_generation/modules/text/block_generation_text.module
[print] modules/contrib/block_generation/modules/text/block_generation_text.module
[parsing] modules/contrib/block_generation/src/Annotation/BlockGenerationEffect.php
[refactoring] modules/contrib/block_generation/src/Annotation/BlockGenerationEffect.php
[post rectors] modules/contrib/block_generation/src/Annotation/BlockGenerationEffect.php
[print] modules/contrib/block_generation/src/Annotation/BlockGenerationEffect.php
[parsing] modules/contrib/block_generation/src/BlockGenerationEffectAwareInterface.php
[refactoring] modules/contrib/block_generation/src/BlockGenerationEffectAwareInterface.php
[post rectors] modules/contrib/block_generation/src/BlockGenerationEffectAwareInterface.php
[print] modules/contrib/block_generation/src/BlockGenerationEffectAwareInterface.php
[parsing] modules/contrib/block_generation/src/BlockGenerationEffectAwarePluginCollectionItem.php
[refactoring] modules/contrib/block_generation/src/BlockGenerationEffectAwarePluginCollectionItem.php
[post rectors] modules/contrib/block_generation/src/BlockGenerationEffectAwarePluginCollectionItem.php
[print] modules/contrib/block_generation/src/BlockGenerationEffectAwarePluginCollectionItem.php
[parsing] modules/contrib/block_generation/src/BlockGenerationEffectAwareTrait.php
[refactoring] modules/contrib/block_generation/src/BlockGenerationEffectAwareTrait.php
[post rectors] modules/contrib/block_generation/src/BlockGenerationEffectAwareTrait.php
[print] modules/contrib/block_generation/src/BlockGenerationEffectAwareTrait.php
[parsing] modules/contrib/block_generation/src/BlockGenerationEffectManager.php
[refactoring] modules/contrib/block_generation/src/BlockGenerationEffectManager.php
[post rectors] modules/contrib/block_generation/src/BlockGenerationEffectManager.php
[print] modules/contrib/block_generation/src/BlockGenerationEffectManager.php
[parsing] modules/contrib/block_generation/src/BlockGenerationEffectManagerInterface.php
[refactoring] modules/contrib/block_generation/src/BlockGenerationEffectManagerInterface.php
[post rectors] modules/contrib/block_generation/src/BlockGenerationEffectManagerInterface.php
[print] modules/contrib/block_generation/src/BlockGenerationEffectManagerInterface.php
[parsing] modules/contrib/block_generation/src/BlockGenerationEffectPluginInterface.php
[refactoring] modules/contrib/block_generation/src/BlockGenerationEffectPluginInterface.php
[post rectors] modules/contrib/block_generation/src/BlockGenerationEffectPluginInterface.php
[print] modules/contrib/block_generation/src/BlockGenerationEffectPluginInterface.php
[parsing] modules/contrib/block_generation/src/BlockGenerationGenerationEffectManager.php
[refactoring] modules/contrib/block_generation/src/BlockGenerationGenerationEffectManager.php
[post rectors] modules/contrib/block_generation/src/BlockGenerationGenerationEffectManager.php
[print] modules/contrib/block_generation/src/BlockGenerationGenerationEffectManager.php
[parsing] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/AttachedLibrary.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/AttachedLibrary.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/AttachedLibrary.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/AttachedLibrary.php
[parsing] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundColor.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundColor.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundColor.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundColor.php
[parsing] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundGradient.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundGradient.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundGradient.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundGradient.php
[parsing] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundImage.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundImage.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundImage.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundImage.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundImage.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundImage.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundImage.php
[parsing] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
[parsing] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BlockGenerationEffectBase.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BlockGenerationEffectBase.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BlockGenerationEffectBase.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BlockGenerationEffectBase.php
[parsing] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/CustomClass.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/CustomClass.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/CustomClass.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/CustomClass.php
[parsing] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/CustomStyle.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/CustomStyle.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/CustomStyle.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/CustomStyle.php
[parsing] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/LeadingText.php
[refactoring] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/LeadingText.php
[post rectors] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/LeadingText.php
[print] modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/LeadingText.php
[parsing] modules/contrib/block_generation/src/Plugin/DataType/BlockGenerationEffectAwarePluginInstance.php
[refactoring] modules/contrib/block_generation/src/Plugin/DataType/BlockGenerationEffectAwarePluginInstance.php
[post rectors] modules/contrib/block_generation/src/Plugin/DataType/BlockGenerationEffectAwarePluginInstance.php
[print] modules/contrib/block_generation/src/Plugin/DataType/BlockGenerationEffectAwarePluginInstance.php
[parsing] modules/contrib/block_generation/src/Plugin/views/row/Fields.php
[refactoring] modules/contrib/block_generation/src/Plugin/views/row/Fields.php
[post rectors] modules/contrib/block_generation/src/Plugin/views/row/Fields.php
[print] modules/contrib/block_generation/src/Plugin/views/row/Fields.php

3 files with changes
====================

1) modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundMedia.php:139

    ---------- begin diff ----------
@@ @@
         $file_url = $image_style->buildUrl($file_uri);
       }
       else {
-        $file_url = file_url_transform_relative(file_create_url($file_uri));
+        $file_url = \Drupal::service('file_url_generator')->generateString($file_uri);
       }

       // Background image.
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/block_generation/src/Plugin/BlockGenerationEffect/BackgroundImage.php:135

    ---------- begin diff ----------
@@ @@

     // Apply effect.
     if ($file = \Drupal::service('entity_type.manager')->getStorage('file')->load($this->configuration['fid'])) {
-      $file_url = file_url_transform_relative(file_create_url($file->getFileUri()));
+      $file_url = \Drupal::service('file_url_generator')->generateString($file->getFileUri());

       // Background image.
       if ($file_url) {
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/block_generation/block_generation.module:133

    ---------- begin diff ----------
@@ @@

             // Possible file path of the template name containing the bundle name.
             $template_name = 'block--block-generation--' . strtr($bundle, '_', '-');
-            $file_path = $app_root . '/' . drupal_get_path('module', $block_generation_module) . '/templates/' . $template_name . '.html.twig';
+            $file_path = $app_root . '/' . \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates/' . $template_name . '.html.twig';
             // If file exists then make registry changes.
             if (file_exists($file_path)) {
               // Add possible preprocesses, template with template path.
               $block_generation_theme_registry['block__block_generation__' . $bundle] = [
-                'path' => drupal_get_path('module', $block_generation_module) . '/templates',
+                'path' => \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates',
                 'preprocess functions' => [
                   'template_preprocess',
                   'template_preprocess_block__block_generation',
@@ @@
                 ],
                 'render element' => 'elements',
                 'template' => $template_name,
-                'theme path' => drupal_get_path('module', $block_generation_module),
+                'theme path' => \Drupal::service('extension.list.module')->getPath($block_generation_module),
                 'type' => 'module',
               ];
             }
@@ @@
             foreach ($view_modes as $view_mode_name => $view_mode_definition) {
               // Possible file path of the template name containing the bundle name and view mode name.
               $template_name = 'block--block-generation--' . strtr($bundle, '_', '-') . '--' . strtr($view_mode_name, '_', '-');
-              $file_path = $app_root . '/' . drupal_get_path('module', $block_generation_module) . '/templates/' . $template_name . '.html.twig';
+              $file_path = $app_root . '/' . \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates/' . $template_name . '.html.twig';
               // If file exists then make registry changes.
               if (file_exists($file_path)) {
                 // Add possible preprocesses, template with template path.
                 $block_generation_theme_registry['block__block_generation__' . $bundle . '__' . $view_mode_name] = [
-                  'path' => drupal_get_path('module', $block_generation_module) . '/templates',
+                  'path' => \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates',
                   'preprocess functions' => [
                     'template_preprocess',
                     'template_preprocess_block__block_generation',
@@ @@
                   ],
                   'render element' => 'elements',
                   'template' => $template_name,
-                  'theme path' => drupal_get_path('module', $block_generation_module),
+                  'theme path' => \Drupal::service('extension.list.module')->getPath($block_generation_module),
                   'type' => 'module',
                 ];
               }
@@ @@
             foreach ($fields as $fieldName => $fieldDefinition) {
               // Possible file path of the template name containing the field name.
               $template_name = 'field--block-generation--' . strtr($fieldName, '_', '-');
-              $file_path = $app_root . '/' . drupal_get_path('module', $block_generation_module) . '/templates/' . $template_name . '.html.twig';
+              $file_path = $app_root . '/' . \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates/' . $template_name . '.html.twig';
               // If file exists then make registry changes.
               if (file_exists($file_path)) {
                 // Add possible preprocesses, template with template path.
                 $block_generation_theme_registry['field__block_generation__' . $fieldName] = [
-                  'path' => drupal_get_path('module', $block_generation_module) . '/templates',
+                  'path' => \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates',
                   'preprocess functions' => [
                     'template_preprocess',
                     'template_preprocess_field',
@@ @@
                   ],
                   'render element' => 'element',
                   'template' => $template_name,
-                  'theme path' => drupal_get_path('module', $block_generation_module),
+                  'theme path' => \Drupal::service('extension.list.module')->getPath($block_generation_module),
                   'type' => 'module',
                 ];
               }
@@ @@

               // Possible file path of the template name containing the field name.
               $template_name = 'field--block-generation--' . strtr($bundle, '_', '-') . '--' . strtr($fieldName, '_', '-');
-              $file_path = $app_root . '/' . drupal_get_path('module', $block_generation_module) . '/templates/' . $template_name . '.html.twig';
+              $file_path = $app_root . '/' . \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates/' . $template_name . '.html.twig';
               // If file exists then make registry changes.
               if (file_exists($file_path)) {
                 // Add possible preprocesses, template with template path.
                 $block_generation_theme_registry['field__block_generation__' . $bundle . '__' . $fieldName] = [
-                  'path' => drupal_get_path('module', $block_generation_module) . '/templates',
+                  'path' => \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates',
                   'preprocess functions' => [
                     'template_preprocess',
                     'template_preprocess_field',
@@ @@
                   ],
                   'render element' => 'element',
                   'template' => $template_name,
-                  'theme path' => drupal_get_path('module', $block_generation_module),
+                  'theme path' => \Drupal::service('extension.list.module')->getPath($block_generation_module),
                   'type' => 'module',
                 ];
               }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

