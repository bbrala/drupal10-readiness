[parsing] modules/contrib/quick_data/quick_data.module
[refactoring] modules/contrib/quick_data/quick_data.module
[post rectors] modules/contrib/quick_data/quick_data.module
[print] modules/contrib/quick_data/quick_data.module
[refactoring] modules/contrib/quick_data/quick_data.module
[post rectors] modules/contrib/quick_data/quick_data.module
[print] modules/contrib/quick_data/quick_data.module
[parsing] modules/contrib/quick_data/src/Form/QuickDataForm.php
[refactoring] modules/contrib/quick_data/src/Form/QuickDataForm.php
[post rectors] modules/contrib/quick_data/src/Form/QuickDataForm.php
[print] modules/contrib/quick_data/src/Form/QuickDataForm.php
[refactoring] modules/contrib/quick_data/src/Form/QuickDataForm.php
[post rectors] modules/contrib/quick_data/src/Form/QuickDataForm.php
[print] modules/contrib/quick_data/src/Form/QuickDataForm.php
[parsing] modules/contrib/quick_data/src/Form/QuickDataImportForm.php
[refactoring] modules/contrib/quick_data/src/Form/QuickDataImportForm.php
[post rectors] modules/contrib/quick_data/src/Form/QuickDataImportForm.php
[print] modules/contrib/quick_data/src/Form/QuickDataImportForm.php
[refactoring] modules/contrib/quick_data/src/Form/QuickDataImportForm.php
[post rectors] modules/contrib/quick_data/src/Form/QuickDataImportForm.php
[print] modules/contrib/quick_data/src/Form/QuickDataImportForm.php
[parsing] modules/contrib/quick_data/tests/src/Functional/LoadTest.php
[refactoring] modules/contrib/quick_data/tests/src/Functional/LoadTest.php
[post rectors] modules/contrib/quick_data/tests/src/Functional/LoadTest.php
[print] modules/contrib/quick_data/tests/src/Functional/LoadTest.php
[refactoring] modules/contrib/quick_data/tests/src/Functional/LoadTest.php
[post rectors] modules/contrib/quick_data/tests/src/Functional/LoadTest.php
[print] modules/contrib/quick_data/tests/src/Functional/LoadTest.php

4 files with changes
====================

1) modules/contrib/quick_data/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/quick_data/src/Form/QuickDataImportForm.php:667

    ---------- begin diff ----------
@@ @@

         case 'data':
           if (!empty($table_field)) {
-            $nid = db_insert($store['bundle'])
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+            $nid = \Drupal::database()->insert($store['bundle'])
               ->fields($table_field)
               ->execute();
           }
@@ @@
                   $folder = $field_info["settings"]["file_directory"];
                 }
                 $filePublic = $public . $folder . DIRECTORY_SEPARATOR . $filename;
-                $file = file_save_data($data, $filePublic);
+                $file = \Drupal::service('file.repository')->writeData($data, $filePublic);
                 $value = $file->id();
               }
             }
    ----------- end diff -----------

Applied rules:
 * DBInsertRector
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/quick_data/src/Form/QuickDataForm.php:1390

    ---------- begin diff ----------
@@ @@
       $url = $entityView->toUrl('edit-form');
       $view_table = Link::fromTextAndUrl($bundle, $url)->toRenderable();
       \Drupal::messenger()->addMessage(
-            t("Views %viewname already exists", ['%viewname' => render($view_table)]),
+            t("Views %viewname already exists", ['%viewname' => \Drupal::service('renderer')->render($view_table)]),
             'error'
         );
       return;
@@ @@
       $url = $entityView->toUrl('edit-form');
       $view_table = Link::fromTextAndUrl($bundle, $url)->toRenderable();
       \Drupal::messenger()->addMessage(
-            t("Create new Views %viewname", ['%viewname' => render($view_table)]),
+            t("Create new Views %viewname", ['%viewname' => \Drupal::service('renderer')->render($view_table)]),
             'status',
             TRUE
         );
@@ @@
       $url = $entityView->toUrl('edit-form');
       $view_table = Link::fromTextAndUrl($table_name, $url)->toRenderable();
       \Drupal::messenger()->addMessage(
-            t("Views %viewname already exists", ['%viewname' => render($view_table)]),
+            t("Views %viewname already exists", ['%viewname' => \Drupal::service('renderer')->render($view_table)]),
             'error'
         );
       return;
@@ @@
     $url = Url::fromRoute('view_custom_table.edittablerelations', ['table_name' => $table_name]);
     $edit_relations = Link::fromTextAndUrl($table_name, $url)->toRenderable();
     \Drupal::messenger()
-      ->addMessage($this->t('Please add relations %relation Edit Custom Table Relations', ['%relation' => render($edit_relations)]), 'warning');
+      ->addMessage($this->t('Please add relations %relation Edit Custom Table Relations', ['%relation' => \Drupal::service('renderer')->render($edit_relations)]), 'warning');

     $view = $this->config('quick_data.views_custom_data.default')->getRawData();
     unset($view["dependencies"]);
@@ @@
       $url = $entityView->toUrl('edit-form');
       $view_table = Link::fromTextAndUrl($table_name, $url)->toRenderable();
       \Drupal::messenger()->addMessage(
-            t("Create new Views %viewname", ['%viewname' => render($view_table)]),
+            t("Create new Views %viewname", ['%viewname' => \Drupal::service('renderer')->render($view_table)]),
             'status',
             TRUE
         );
@@ @@
       $url = $entityFeed->toUrl('edit-form');
       $feeds_table = Link::fromTextAndUrl($bundle, $url)->toRenderable();
       \Drupal::messenger()->addMessage(
-            t("Feeds %feedsname already exists", ['%feedsname' => render($feeds_table)]),
+            t("Feeds %feedsname already exists", ['%feedsname' => \Drupal::service('renderer')->render($feeds_table)]),
             'error'
         );
       return;
@@ @@
       $url = $entityFeed->toUrl('edit-form');
       $feeds_table = Link::fromTextAndUrl($bundle, $url)->toRenderable();
       \Drupal::messenger()->addMessage(
-            t("Create new Feed %feedsname", ['%feedsname' => render($feeds_table)]),
+            t("Create new Feed %feedsname", ['%feedsname' => \Drupal::service('renderer')->render($feeds_table)]),
             'status',
             TRUE
         );
@@ @@
       $url = Url::fromUri('internal:/admin/config/search/search-api/server/' . $bundle . '/edit');
       $serverapi = Link::fromTextAndUrl($name, $url)->toRenderable();
       \Drupal::messenger()->addMessage(
-            t("Create new search server %serverapi", ['%serverapi' => render($serverapi)]),
+            t("Create new search server %serverapi", ['%serverapi' => \Drupal::service('renderer')->render($serverapi)]),
             'status',
             TRUE
         );
@@ @@
     $url = Url::fromUri('internal:/admin/config/search/search-api/index/' . $bundle . '/edit');
     $serverapiIndex = Link::fromTextAndUrl($name, $url)->toRenderable();
     \Drupal::messenger()->addMessage(
-          t("Create new search index%serverapi", ['%serverapi' => render($serverapiIndex)]),
+          t("Create new search index%serverapi", ['%serverapi' => \Drupal::service('renderer')->render($serverapiIndex)]),
           'status',
           TRUE
       );
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/quick_data/quick_data.module:29

    ---------- begin diff ----------
@@ @@
         $taxonomy_term[$vid] = $vocabulary->get('name');
       }
       include_once \Drupal::root() . '/core/themes/engines/twig/twig.engine';
-      return twig_render_template(drupal_get_path('module', 'quick_data') . '/templates/help-body.html.twig', array(
+      return twig_render_template(\Drupal::service('extension.list.module')->getPath('quick_data') . '/templates/help-body.html.twig', array(
         'content_types' => $options,
         'taxonomy_term' => $taxonomy_term,
         'theme_hook_original' => 'not-applicable',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

