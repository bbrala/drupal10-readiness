[parsing] modules/contrib/oai_pmh_harvester/oai_pmh_harvester.install
[refactoring] modules/contrib/oai_pmh_harvester/oai_pmh_harvester.install
[post rectors] modules/contrib/oai_pmh_harvester/oai_pmh_harvester.install
[print] modules/contrib/oai_pmh_harvester/oai_pmh_harvester.install
[parsing] modules/contrib/oai_pmh_harvester/oai_pmh_harvester.module
[refactoring] modules/contrib/oai_pmh_harvester/oai_pmh_harvester.module
[post rectors] modules/contrib/oai_pmh_harvester/oai_pmh_harvester.module
[print] modules/contrib/oai_pmh_harvester/oai_pmh_harvester.module
[parsing] modules/contrib/oai_pmh_harvester/src/Batch/ReDecodeAll.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Batch/ReDecodeAll.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Batch/ReDecodeAll.php
[print] modules/contrib/oai_pmh_harvester/src/Batch/ReDecodeAll.php
[parsing] modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php
[print] modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php
[print] modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php
[parsing] modules/contrib/oai_pmh_harvester/src/Exceptions/ConfigException.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Exceptions/ConfigException.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Exceptions/ConfigException.php
[print] modules/contrib/oai_pmh_harvester/src/Exceptions/ConfigException.php
[parsing] modules/contrib/oai_pmh_harvester/src/Exceptions/DatabaseException.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Exceptions/DatabaseException.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Exceptions/DatabaseException.php
[print] modules/contrib/oai_pmh_harvester/src/Exceptions/DatabaseException.php
[parsing] modules/contrib/oai_pmh_harvester/src/Exceptions/EndpointException.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Exceptions/EndpointException.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Exceptions/EndpointException.php
[print] modules/contrib/oai_pmh_harvester/src/Exceptions/EndpointException.php
[parsing] modules/contrib/oai_pmh_harvester/src/Form/InspectForm.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Form/InspectForm.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Form/InspectForm.php
[print] modules/contrib/oai_pmh_harvester/src/Form/InspectForm.php
[parsing] modules/contrib/oai_pmh_harvester/src/Form/SettingsForm.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Form/SettingsForm.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Form/SettingsForm.php
[print] modules/contrib/oai_pmh_harvester/src/Form/SettingsForm.php
[parsing] modules/contrib/oai_pmh_harvester/src/Form/StatusForm.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Form/StatusForm.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Form/StatusForm.php
[print] modules/contrib/oai_pmh_harvester/src/Form/StatusForm.php
[parsing] modules/contrib/oai_pmh_harvester/src/Harvester.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Harvester.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Harvester.php
[print] modules/contrib/oai_pmh_harvester/src/Harvester.php
[parsing] modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php
[print] modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php
[print] modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php
[parsing] modules/contrib/oai_pmh_harvester/src/Service/HarvesterService.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Service/HarvesterService.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Service/HarvesterService.php
[print] modules/contrib/oai_pmh_harvester/src/Service/HarvesterService.php
[parsing] modules/contrib/oai_pmh_harvester/src/Util.php
[refactoring] modules/contrib/oai_pmh_harvester/src/Util.php
[post rectors] modules/contrib/oai_pmh_harvester/src/Util.php
[print] modules/contrib/oai_pmh_harvester/src/Util.php
[parsing] modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php
[refactoring] modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php
[post rectors] modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php
[print] modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php
[refactoring] modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php
[post rectors] modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php
[print] modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php
[parsing] modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php
[refactoring] modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php
[post rectors] modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php
[print] modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php
[refactoring] modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php
[post rectors] modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php
[print] modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php

4 files with changes
====================

1) modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php:80

    ---------- begin diff ----------
@@ @@
     // Mock the Drupal::time container.
     $container = new ContainerBuilder();
     Drupal::setContainer($container);
-    $mockTime = $this->getMockBuilder('Drupal\Component\Datetime\TimeInterface')
-        ->disableOriginalConstructor()
-        ->getMock();
+    $mockTime = $this->createMock('Drupal\Component\Datetime\TimeInterface');
     $mockTime->method('getRequestTime')->willReturn(12345);
     $container->set('datetime.time', $mockTime);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php:28

    ---------- begin diff ----------
@@ @@
   public function testLoadFront() {
     $this->drupalGet('<front>');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Log in');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Log in');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php:45

    ---------- begin diff ----------
@@ @@
     $csl = new MarcCslVariables(Record::fromSimpleXMLElement($xml));

     // Allow other modules to modify the $csl object before we return it.
-    $this->dispatcher->dispatch(HarvestPreMergeEvent::EVENT_NAME, new HarvestPreMergeEvent($xml, $csl));
+    $this->dispatcher->dispatch(new HarvestPreMergeEvent($xml, $csl), HarvestPreMergeEvent::EVENT_NAME);

     return $csl;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


4) modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php:7

    ---------- begin diff ----------
@@ @@
 /**
  * An event that should fire just before harvested data is merged into the DB.
  */
-class HarvestPreMergeEvent extends Event {
+class HarvestPreMergeEvent extends \Symfony\Contracts\EventDispatcher\Event {

   const EVENT_NAME = 'oai_pmh_harvester_harvest_pre_merge';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

