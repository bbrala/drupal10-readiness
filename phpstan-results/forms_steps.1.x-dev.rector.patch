diff --git a/src/Event/StepChangeEvent.php b/src/Event/StepChangeEvent.php
index 46433b0..d1f44e3 100644
--- a/src/Event/StepChangeEvent.php
+++ b/src/Event/StepChangeEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event that is fired when before we switch from one step to another.
  */
-class StepChangeEvent extends Event {
+class StepChangeEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const STEP_CHANGE_EVENT = 'forms_steps.step_change_event';
 
diff --git a/src/Form/FormsStepsEditForm.php b/src/Form/FormsStepsEditForm.php
index b6d93d3..b43a600 100644
--- a/src/Form/FormsStepsEditForm.php
+++ b/src/Form/FormsStepsEditForm.php
@@ -255,11 +255,15 @@ class FormsStepsEditForm extends EntityForm {
         }
 
         // Defines link.
-        if (empty($progress_step->link())) {
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+        if (empty($progress_step->toLink()->toString())) {
           $link = $this->t('No link defined');
         }
         else {
-          $step_id = $progress_step->link();
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $step_id = $progress_step->toLink()->toString();
           $link = $forms_steps->getStep($step_id)->label();
         }
 
diff --git a/src/Form/FormsStepsProgressStepEditForm.php b/src/Form/FormsStepsProgressStepEditForm.php
index ad41d07..eff1ccf 100644
--- a/src/Form/FormsStepsProgressStepEditForm.php
+++ b/src/Form/FormsStepsProgressStepEditForm.php
@@ -90,13 +90,15 @@ class FormsStepsProgressStepEditForm extends EntityForm {
         '#default_value' => $progress_step->activeRoutes(),
       ];
 
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
       $form['link'] = [
         '#type' => 'select',
         '#title' => $this->t('Link'),
         '#description' => $this->t('Select the step for which the current progress step should redirect on click. Leave empty for no link on this progress step.'),
         '#empty_option' => $this->t('- None -'),
         '#options' => $options,
-        '#default_value' => $progress_step->link(),
+        '#default_value' => $progress_step->toLink()->toString(),
       ];
 
       $form['link_visibility'] = [
diff --git a/src/Plugin/Block/FormsStepsProgressBarBlock.php b/src/Plugin/Block/FormsStepsProgressBarBlock.php
index 3c13537..901c5af 100644
--- a/src/Plugin/Block/FormsStepsProgressBarBlock.php
+++ b/src/Plugin/Block/FormsStepsProgressBarBlock.php
@@ -143,7 +143,9 @@ class FormsStepsProgressBarBlock extends BlockBase implements ContainerFactoryPl
                 $saved_steps_flat[$saved_step_next->id()] = $saved_step_next->id();
               }
             }
-            $link_visibility_check = !in_array($progress_step->link(), $saved_steps_flat);
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+            $link_visibility_check = !in_array($progress_step->toLink()->toString(), $saved_steps_flat);
           }
           else {
             $link_visibility_check = !in_array($step->id(), $link_visibility);
@@ -152,11 +154,15 @@ class FormsStepsProgressBarBlock extends BlockBase implements ContainerFactoryPl
           // Display a simple label or the link.
           // @todo: Manage the specific case of "No workflow instance id" for the first step to avoid having no links at all on this step.
           //          if (empty($progress_step->link()) || $link_visibility_check || empty($instanceId)) {
-          if (empty($progress_step->link()) || $link_visibility_check || empty($instanceId)) {
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          if (empty($progress_step->toLink()->toString()) || $link_visibility_check || empty($instanceId)) {
             $item['#markup'] = $this->t($progress_step->label());
           }
           else {
-            $link_step = $forms_steps->getStep($progress_step->link());
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+            $link_step = $forms_steps->getStep($progress_step->toLink()->toString());
             $options = [];
             if ($instanceId) {
               $options['instance_id'] = $instanceId;
