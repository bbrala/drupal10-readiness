diff --git a/src/Controller/ProjectController.php b/src/Controller/ProjectController.php
index 37fa4e9..ee504fa 100644
--- a/src/Controller/ProjectController.php
+++ b/src/Controller/ProjectController.php
@@ -135,7 +135,9 @@ class ProjectController extends ControllerBase implements ContainerInjectionInte
           ]));
         }
         else {
-          $link = $burndown_project->link($date);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$burndown_project` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $link = $burndown_project->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/src/Controller/SprintController.php b/src/Controller/SprintController.php
index c5a3aa0..532d7b3 100644
--- a/src/Controller/SprintController.php
+++ b/src/Controller/SprintController.php
@@ -124,7 +124,9 @@ class SprintController extends ControllerBase implements ContainerInjectionInter
           ]));
         }
         else {
-          $link = $burndown_sprint->link($date);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$burndown_sprint` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $link = $burndown_sprint->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/src/Controller/TaskController.php b/src/Controller/TaskController.php
index 746f9ac..6c2c208 100644
--- a/src/Controller/TaskController.php
+++ b/src/Controller/TaskController.php
@@ -122,7 +122,7 @@ class TaskController extends ControllerBase implements ContainerInjectionInterfa
       '#data' => $data,
     ];
 
-    return new Response(render($build));
+    return new Response(\Drupal::service('renderer')->render($build));
   }
 
   /**
@@ -375,7 +375,7 @@ class TaskController extends ControllerBase implements ContainerInjectionInterfa
       '#data' => $data,
     ];
 
-    return new Response(render($build));
+    return new Response(\Drupal::service('renderer')->render($build));
 
   }
 
@@ -684,7 +684,9 @@ class TaskController extends ControllerBase implements ContainerInjectionInterfa
           ]));
         }
         else {
-          $link = $burndown_task->link($date);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$burndown_task` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $link = $burndown_task->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/src/Entity/Task.php b/src/Entity/Task.php
index 6cc0b15..fab4b55 100644
--- a/src/Entity/Task.php
+++ b/src/Entity/Task.php
@@ -903,7 +903,7 @@ class Task extends EditorialContentEntityBase implements TaskInterface {
     $user = User::load($user_id);
     if ($user->hasField('user_picture') &&
       !$user->user_picture->isEmpty()) {
-      return file_create_url($user->user_picture->entity->getFileUri());
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($user->user_picture->entity->getFileUri());
     }
 
     return FALSE;
@@ -978,7 +978,7 @@ class Task extends EditorialContentEntityBase implements TaskInterface {
     $user = User::load($user_id);
     if ($user->hasField('user_picture') &&
       !$user->user_picture->isEmpty()) {
-      return file_create_url($user->user_picture->entity->getFileUri());
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($user->user_picture->entity->getFileUri());
     }
 
     return FALSE;
diff --git a/src/Event/TaskChangedEvent.php b/src/Event/TaskChangedEvent.php
index d6399fc..8e25a0b 100644
--- a/src/Event/TaskChangedEvent.php
+++ b/src/Event/TaskChangedEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event that is fired when a task is edited.
  */
-class TaskChangedEvent extends Event {
+class TaskChangedEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const CHANGED = 'burndown_event_task_changed';
 
diff --git a/src/Event/TaskClosedEvent.php b/src/Event/TaskClosedEvent.php
index 5e93ef0..ab9f848 100644
--- a/src/Event/TaskClosedEvent.php
+++ b/src/Event/TaskClosedEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event that is fired when a task is closed.
  */
-class TaskClosedEvent extends Event {
+class TaskClosedEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const CLOSED = 'burndown_event_task_closed';
 
diff --git a/src/Event/TaskCommentEvent.php b/src/Event/TaskCommentEvent.php
index eccc322..2890b36 100644
--- a/src/Event/TaskCommentEvent.php
+++ b/src/Event/TaskCommentEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event that is fired when someone comments on a task.
  */
-class TaskCommentEvent extends Event {
+class TaskCommentEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const COMMENTED = 'burndown_event_task_comment';
 
diff --git a/src/Event/TaskCreatedEvent.php b/src/Event/TaskCreatedEvent.php
index 37c9547..199f0b3 100644
--- a/src/Event/TaskCreatedEvent.php
+++ b/src/Event/TaskCreatedEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event that is fired when a task is added.
  */
-class TaskCreatedEvent extends Event {
+class TaskCreatedEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const ADDED = 'burndown_event_task_created';
 
diff --git a/src/Event/TaskWorkEvent.php b/src/Event/TaskWorkEvent.php
index 4de079d..7332508 100644
--- a/src/Event/TaskWorkEvent.php
+++ b/src/Event/TaskWorkEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event that is fired when someone adds a worklog to a task.
  */
-class TaskWorkEvent extends Event {
+class TaskWorkEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const WORKED = 'burndown_event_task_work';
 
diff --git a/src/Form/ProjectRevisionDeleteForm.php b/src/Form/ProjectRevisionDeleteForm.php
index 0ec6200..6ca41ed 100644
--- a/src/Form/ProjectRevisionDeleteForm.php
+++ b/src/Form/ProjectRevisionDeleteForm.php
@@ -57,7 +57,7 @@ class ProjectRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -103,7 +103,7 @@ class ProjectRevisionDeleteForm extends ConfirmFormBase {
       ->addMessage(
         $this->t('Revision from %revision-date of Project %title has been deleted.',
         [
-          '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+          '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
           '%title' => $this->revision->label(),
         ]
       )
diff --git a/src/Form/ProjectRevisionRevertForm.php b/src/Form/ProjectRevisionRevertForm.php
index b4f0909..47ca204 100644
--- a/src/Form/ProjectRevisionRevertForm.php
+++ b/src/Form/ProjectRevisionRevertForm.php
@@ -144,7 +144,7 @@ class ProjectRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(ProjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/ProjectRevisionRevertTranslationForm.php b/src/Form/ProjectRevisionRevertTranslationForm.php
index 6c1da0b..a05794c 100644
--- a/src/Form/ProjectRevisionRevertTranslationForm.php
+++ b/src/Form/ProjectRevisionRevertTranslationForm.php
@@ -89,7 +89,7 @@ class ProjectRevisionRevertTranslationForm extends ProjectRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/SprintRevisionDeleteForm.php b/src/Form/SprintRevisionDeleteForm.php
index a0e2b6d..67bf611 100644
--- a/src/Form/SprintRevisionDeleteForm.php
+++ b/src/Form/SprintRevisionDeleteForm.php
@@ -57,7 +57,7 @@ class SprintRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -102,7 +102,7 @@ class SprintRevisionDeleteForm extends ConfirmFormBase {
       ->addMessage(
         $this->t('Revision from %revision-date of Sprint %title has been deleted.',
           [
-            '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+            '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
             '%title' => $this->revision->label(),
           ]
         )
diff --git a/src/Form/SprintRevisionRevertForm.php b/src/Form/SprintRevisionRevertForm.php
index 563013e..7cc6b55 100644
--- a/src/Form/SprintRevisionRevertForm.php
+++ b/src/Form/SprintRevisionRevertForm.php
@@ -143,7 +143,7 @@ class SprintRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(SprintInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/SprintRevisionRevertTranslationForm.php b/src/Form/SprintRevisionRevertTranslationForm.php
index fc298fd..f155ee9 100644
--- a/src/Form/SprintRevisionRevertTranslationForm.php
+++ b/src/Form/SprintRevisionRevertTranslationForm.php
@@ -89,7 +89,7 @@ class SprintRevisionRevertTranslationForm extends SprintRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/TaskForm.php b/src/Form/TaskForm.php
index 12e40b1..36e4e69 100644
--- a/src/Form/TaskForm.php
+++ b/src/Form/TaskForm.php
@@ -123,7 +123,7 @@ class TaskForm extends ContentEntityForm {
       }
 
       $link = $link->toRenderable();
-      $link = render($link);
+      $link = \Drupal::service('renderer')->render($link);
       $link = (String) $link;
 
       $form['watchlist_link'] = [
@@ -145,7 +145,7 @@ class TaskForm extends ContentEntityForm {
         );
 
       $link = $link->toRenderable();
-      $link = render($link);
+      $link = \Drupal::service('renderer')->render($link);
       $link = (String) $link;
 
       $form['reopen_task'] = [
diff --git a/src/Form/TaskRevisionDeleteForm.php b/src/Form/TaskRevisionDeleteForm.php
index 606b815..06300d6 100644
--- a/src/Form/TaskRevisionDeleteForm.php
+++ b/src/Form/TaskRevisionDeleteForm.php
@@ -57,7 +57,7 @@ class TaskRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -103,7 +103,7 @@ class TaskRevisionDeleteForm extends ConfirmFormBase {
       ->addMessage(
         $this->t('Revision from %revision-date of Task %title has been deleted.',
           [
-            '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+            '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
             '%title' => $this->revision->label(),
           ]
         )
diff --git a/src/Form/TaskRevisionRevertForm.php b/src/Form/TaskRevisionRevertForm.php
index 9f7b3fb..4ee7ce7 100644
--- a/src/Form/TaskRevisionRevertForm.php
+++ b/src/Form/TaskRevisionRevertForm.php
@@ -144,7 +144,7 @@ class TaskRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(TaskInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/TaskRevisionRevertTranslationForm.php b/src/Form/TaskRevisionRevertTranslationForm.php
index b51ff43..b5c257d 100644
--- a/src/Form/TaskRevisionRevertTranslationForm.php
+++ b/src/Form/TaskRevisionRevertTranslationForm.php
@@ -89,7 +89,7 @@ class TaskRevisionRevertTranslationForm extends TaskRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index ea43297..16a0a5a 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
