diff --git a/src/EventDispatcher/AlterExcludedPathsEvent.php b/src/EventDispatcher/AlterExcludedPathsEvent.php
index 8e356f1..fd7db62 100644
--- a/src/EventDispatcher/AlterExcludedPathsEvent.php
+++ b/src/EventDispatcher/AlterExcludedPathsEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @package Drupal\stage_file_proxy\EventDispatcher
  */
-class AlterExcludedPathsEvent extends Event {
+class AlterExcludedPathsEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The array with paths to exclude.
diff --git a/src/EventSubscriber/ProxySubscriber.php b/src/EventSubscriber/ProxySubscriber.php
index 8be00c6..0d21c3e 100644
--- a/src/EventSubscriber/ProxySubscriber.php
+++ b/src/EventSubscriber/ProxySubscriber.php
@@ -80,10 +80,10 @@ class ProxySubscriber implements EventSubscriberInterface {
   /**
    * Fetch the file from it's origin.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function checkFileOrigin(GetResponseEvent $event) {
+  public function checkFileOrigin(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $config = $this->configFactory->get('stage_file_proxy.settings');
 
     // Get the origin server.
@@ -119,7 +119,7 @@ class ProxySubscriber implements EventSubscriberInterface {
     }
 
     $alter_excluded_paths_event = new AlterExcludedPathsEvent([]);
-    $this->eventDispatcher->dispatch('stage_file_proxy.alter_excluded_paths', $alter_excluded_paths_event);
+    $this->eventDispatcher->dispatch($alter_excluded_paths_event, 'stage_file_proxy.alter_excluded_paths');
     $excluded_paths = $alter_excluded_paths_event->getExcludedPaths();
     foreach ($excluded_paths as $excluded_path) {
       if (strpos($request_path, $excluded_path) !== FALSE) {
