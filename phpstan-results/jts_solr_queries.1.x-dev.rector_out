[parsing] modules/contrib/jts_solr_queries/jts_solr_queries.module
[refactoring] modules/contrib/jts_solr_queries/jts_solr_queries.module
[post rectors] modules/contrib/jts_solr_queries/jts_solr_queries.module
[print] modules/contrib/jts_solr_queries/jts_solr_queries.module
[parsing] modules/contrib/jts_solr_queries/src/EventSubscriber/EventListener.php
[refactoring] modules/contrib/jts_solr_queries/src/EventSubscriber/EventListener.php
[post rectors] modules/contrib/jts_solr_queries/src/EventSubscriber/EventListener.php
[print] modules/contrib/jts_solr_queries/src/EventSubscriber/EventListener.php
[refactoring] modules/contrib/jts_solr_queries/src/EventSubscriber/EventListener.php
[post rectors] modules/contrib/jts_solr_queries/src/EventSubscriber/EventListener.php
[print] modules/contrib/jts_solr_queries/src/EventSubscriber/EventListener.php
[parsing] modules/contrib/jts_solr_queries/src/Plugin/views/filter/SearchApiJtsFilter.php
[refactoring] modules/contrib/jts_solr_queries/src/Plugin/views/filter/SearchApiJtsFilter.php
[post rectors] modules/contrib/jts_solr_queries/src/Plugin/views/filter/SearchApiJtsFilter.php
[print] modules/contrib/jts_solr_queries/src/Plugin/views/filter/SearchApiJtsFilter.php
[refactoring] modules/contrib/jts_solr_queries/src/Plugin/views/filter/SearchApiJtsFilter.php
[post rectors] modules/contrib/jts_solr_queries/src/Plugin/views/filter/SearchApiJtsFilter.php
[print] modules/contrib/jts_solr_queries/src/Plugin/views/filter/SearchApiJtsFilter.php
[parsing] modules/contrib/jts_solr_queries/src/RptShapesDataType.php
[refactoring] modules/contrib/jts_solr_queries/src/RptShapesDataType.php
[post rectors] modules/contrib/jts_solr_queries/src/RptShapesDataType.php
[print] modules/contrib/jts_solr_queries/src/RptShapesDataType.php

2 files with changes
====================

1) modules/contrib/jts_solr_queries/src/Plugin/views/filter/SearchApiJtsFilter.php:112

    ---------- begin diff ----------
@@ @@
       // Otherwise output empty result in case of unexposed proximity filter.
       elseif (!$this->isExposed()) {
         // Origin is not valid so return no results (if not exposed filter).
-        drupal_set_message($this->t('The location %location could not be resolved and was ignored.', ['%location' => $this->value['value']]), 'warning');
+        $this->messenger()->addWarning($this->t('The location %location could not be resolved and was ignored.', ['%location' => $this->value['value']]));
       }
     }
     catch (\Exception $e) {
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/jts_solr_queries/src/EventSubscriber/EventListener.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * Method called when SearchApiEvents::GATHERING_DATA_SOURCES is dispatched.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The dispatched event.
    */
-  public function dataTypeInfoAlter(Event $event) {
+  public function dataTypeInfoAlter(\Symfony\Contracts\EventDispatcher\Event $event) {
     $dataTypePluginInfo = &$event->getDefinitions();
     if (isset($dataTypePluginInfo['rpt'])) {
       // OVERRIDE RPT with RPT_SHAPES.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 2 files have been changed by Rector                                       

