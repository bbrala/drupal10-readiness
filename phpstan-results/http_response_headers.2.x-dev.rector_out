[parsing] modules/contrib/http_response_headers/http_response_headers.install
[refactoring] modules/contrib/http_response_headers/http_response_headers.install
[post rectors] modules/contrib/http_response_headers/http_response_headers.install
[print] modules/contrib/http_response_headers/http_response_headers.install
[parsing] modules/contrib/http_response_headers/http_response_headers.module
[refactoring] modules/contrib/http_response_headers/http_response_headers.module
[post rectors] modules/contrib/http_response_headers/http_response_headers.module
[print] modules/contrib/http_response_headers/http_response_headers.module
[refactoring] modules/contrib/http_response_headers/http_response_headers.module
[post rectors] modules/contrib/http_response_headers/http_response_headers.module
[print] modules/contrib/http_response_headers/http_response_headers.module
[parsing] modules/contrib/http_response_headers/src/Controller/ResponseHeaderListBuilder.php
[refactoring] modules/contrib/http_response_headers/src/Controller/ResponseHeaderListBuilder.php
[post rectors] modules/contrib/http_response_headers/src/Controller/ResponseHeaderListBuilder.php
[print] modules/contrib/http_response_headers/src/Controller/ResponseHeaderListBuilder.php
[parsing] modules/contrib/http_response_headers/src/Entity/ResponseHeader.php
[refactoring] modules/contrib/http_response_headers/src/Entity/ResponseHeader.php
[post rectors] modules/contrib/http_response_headers/src/Entity/ResponseHeader.php
[print] modules/contrib/http_response_headers/src/Entity/ResponseHeader.php
[parsing] modules/contrib/http_response_headers/src/EventSubscriber/AddHTTPHeaders.php
[refactoring] modules/contrib/http_response_headers/src/EventSubscriber/AddHTTPHeaders.php
[post rectors] modules/contrib/http_response_headers/src/EventSubscriber/AddHTTPHeaders.php
[print] modules/contrib/http_response_headers/src/EventSubscriber/AddHTTPHeaders.php
[refactoring] modules/contrib/http_response_headers/src/EventSubscriber/AddHTTPHeaders.php
[post rectors] modules/contrib/http_response_headers/src/EventSubscriber/AddHTTPHeaders.php
[print] modules/contrib/http_response_headers/src/EventSubscriber/AddHTTPHeaders.php
[parsing] modules/contrib/http_response_headers/src/Form/ResponseHeaderDeleteForm.php
[refactoring] modules/contrib/http_response_headers/src/Form/ResponseHeaderDeleteForm.php
[post rectors] modules/contrib/http_response_headers/src/Form/ResponseHeaderDeleteForm.php
[print] modules/contrib/http_response_headers/src/Form/ResponseHeaderDeleteForm.php
[parsing] modules/contrib/http_response_headers/src/Form/ResponseHeaderForm.php
[refactoring] modules/contrib/http_response_headers/src/Form/ResponseHeaderForm.php
[post rectors] modules/contrib/http_response_headers/src/Form/ResponseHeaderForm.php
[print] modules/contrib/http_response_headers/src/Form/ResponseHeaderForm.php
[parsing] modules/contrib/http_response_headers/src/ResponseHeaderInterface.php
[refactoring] modules/contrib/http_response_headers/src/ResponseHeaderInterface.php
[post rectors] modules/contrib/http_response_headers/src/ResponseHeaderInterface.php
[print] modules/contrib/http_response_headers/src/ResponseHeaderInterface.php

2 files with changes
====================

1) modules/contrib/http_response_headers/src/EventSubscriber/AddHTTPHeaders.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * Sets extra HTTP headers.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/http_response_headers/http_response_headers.module:31

    ---------- begin diff ----------
@@ @@
     '#attributes' => ['class' => 'help-resources'],
     '#wrapper_attributes' => ['class' => 'container'],
   ];
-  $output .= render($help);
+  $output .= \Drupal::service('renderer')->render($help);

   return $output;
 }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

