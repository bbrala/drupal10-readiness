diff --git a/modules/kickstart/real_estate_kickstart.install b/modules/kickstart/real_estate_kickstart.install
index 47dc910..0430559 100644
--- a/modules/kickstart/real_estate_kickstart.install
+++ b/modules/kickstart/real_estate_kickstart.install
@@ -15,7 +15,7 @@ function real_estate_kickstart_install() {
   // Generate properties.
   $property_storage = \Drupal::entityTypeManager()->getStorage('real_estate_property');
   $random = new Random();
-  $image_path = drupal_get_path('module', 'real_estate_kickstart') . '/images/';
+  $image_path = \Drupal::service('extension.list.module')->getPath('real_estate_kickstart') . '/images/';
 
   for ($i = 1; $i <= 3; $i++) {
     $property = $property_storage->create([
@@ -57,7 +57,7 @@ function real_estate_kickstart_install() {
     ]);
 
     $data = file_get_contents($image_path . 'house' . $i . '.jpg');
-    $file = file_save_data($data, 'public://house' . $i . '.jpg', FILE_EXISTS_REPLACE);
+    $file = \Drupal::service('file.repository')->writeData($data, 'public://house' . $i . '.jpg', \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
     if ($file) {
       $property->set('field_photo', [
         'target_id' => $file->id(),
diff --git a/modules/property/tests/src/Functional/PropertyTypeTest.php b/modules/property/tests/src/Functional/PropertyTypeTest.php
index 67bda0d..c0b8073 100644
--- a/modules/property/tests/src/Functional/PropertyTypeTest.php
+++ b/modules/property/tests/src/Functional/PropertyTypeTest.php
@@ -31,7 +31,7 @@ class PropertyTypeTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $user = $this->drupalCreateUser([
diff --git a/modules/rets/real_estate_rets.module b/modules/rets/real_estate_rets.module
index 4629825..126aef6 100644
--- a/modules/rets/real_estate_rets.module
+++ b/modules/rets/real_estate_rets.module
@@ -36,15 +36,15 @@ function rets_fetch_data_finished($success, array $results) {
   if ($success) {
     if (!empty($results)) {
       if (!empty($results['updated'])) {
-        drupal_set_message(\Drupal::translation()->formatPlural($results['updated'], 'Loaded rets data for one query.', 'Loaded rets data for @count queries.'));
+        \Drupal::messenger()->addStatus(\Drupal::translation()->formatPlural($results['updated'], 'Loaded rets data for one query.', 'Loaded rets data for @count queries.'));
       }
       if (!empty($results['failures'])) {
-        drupal_set_message(\Drupal::translation()->formatPlural($results['failures'], 'Failed to get rets data for one query.', 'Failed to get rets data for @count queries.'), 'error');
+        \Drupal::messenger()->addError(\Drupal::translation()->formatPlural($results['failures'], 'Failed to get rets data for one query.', 'Failed to get rets data for @count queries.'));
       }
     }
   }
   else {
-    drupal_set_message(t('An error occurred trying to get rets data.'), 'error');
+    \Drupal::messenger()->addError(t('An error occurred trying to get rets data.'));
   }
 }
 
diff --git a/modules/rets/src/Form/RetsConnectionForm.php b/modules/rets/src/Form/RetsConnectionForm.php
index fd180e8..48de56d 100644
--- a/modules/rets/src/Form/RetsConnectionForm.php
+++ b/modules/rets/src/Form/RetsConnectionForm.php
@@ -140,13 +140,13 @@ class RetsConnectionForm extends EntityForm {
 
     switch ($status) {
       case SAVED_NEW:
-        drupal_set_message($this->t('Created the %label RETS Connection.', [
+        $this->messenger()->addStatus($this->t('Created the %label RETS Connection.', [
           '%label' => $real_estate_rets_connection->label(),
         ]));
         break;
 
       default:
-        drupal_set_message($this->t('Saved the %label RETS Connection.', [
+        $this->messenger()->addStatus($this->t('Saved the %label RETS Connection.', [
           '%label' => $real_estate_rets_connection->label(),
         ]));
     }
