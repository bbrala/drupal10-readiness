diff --git a/modules/workspaces_allowed_languages/src/RedirectListener.php b/modules/workspaces_allowed_languages/src/RedirectListener.php
index 6ee0ada..ad26da5 100644
--- a/modules/workspaces_allowed_languages/src/RedirectListener.php
+++ b/modules/workspaces_allowed_languages/src/RedirectListener.php
@@ -66,7 +66,7 @@ class RedirectListener implements EventSubscriberInterface {
    * Performs a redirect in case the workspace and the language of the site do
    * not match.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     // Skip any checks for subrequests
     if (!$event->isMasterRequest()) {
       return;
diff --git a/modules/workspaces_negotiator_path/src/EventSubscriber/WorkspaceRedirectSubscriber.php b/modules/workspaces_negotiator_path/src/EventSubscriber/WorkspaceRedirectSubscriber.php
index 4980fb2..195d796 100644
--- a/modules/workspaces_negotiator_path/src/EventSubscriber/WorkspaceRedirectSubscriber.php
+++ b/modules/workspaces_negotiator_path/src/EventSubscriber/WorkspaceRedirectSubscriber.php
@@ -65,10 +65,10 @@ class WorkspaceRedirectSubscriber implements EventSubscriberInterface {
   /**
    * This method is called whenever the kernel.response event is dispatched.
    *
-   * @param FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event object.
    */
-  public function checkRedirection(FilterResponseEvent $event) {
+  public function checkRedirection(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();
     if (($prefix = $this->pathPrefixWorkspaceNegotiator->getRedirectPrefix())
       && $response instanceOf RedirectResponse
diff --git a/tests/src/Kernel/MergeBlacklistedFieldsTest.php b/tests/src/Kernel/MergeBlacklistedFieldsTest.php
index 1608d0e..d808243 100644
--- a/tests/src/Kernel/MergeBlacklistedFieldsTest.php
+++ b/tests/src/Kernel/MergeBlacklistedFieldsTest.php
@@ -61,7 +61,7 @@ class MergeBlacklistedFieldsTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', ['key_value_expire', 'sequences']);
@@ -164,7 +164,7 @@ class MergeBlacklistedFieldsTest extends KernelTestBase {
     $d->save();
 
     $conflicts = $conflictManager->resolveConflicts($c, $d, $a);
-    $this->assertEqual($conflicts, ['field_test' => 'conflict_local_remote']);
+    $this->assertEquals($conflicts, ['field_test' => 'conflict_local_remote']);
   }
 
 }
diff --git a/tests/src/Unit/MissingMethodTest.php b/tests/src/Unit/MissingMethodTest.php
index 6dad053..a02d3d9 100644
--- a/tests/src/Unit/MissingMethodTest.php
+++ b/tests/src/Unit/MissingMethodTest.php
@@ -15,29 +15,29 @@ class MissingMethodTest extends UnitTestCase {
   protected $form;
 
   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $entityTypeManager;
 
   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $messenger;
 
   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $entityRepository;
 
   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $deliveryService;
 
   /**
    * Set up the form class.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->entityTypeManager = $this->createMock('Drupal\Core\Entity\EntityTypeManagerInterface');
     $this->messenger = $this->createMock('Drupal\Core\Messenger\MessengerInterface');
