diff --git a/src/Plugin/Field/FieldFormatter/FileExportFormatter.php b/src/Plugin/Field/FieldFormatter/FileExportFormatter.php
index 7cd6863..1520eeb 100644
--- a/src/Plugin/Field/FieldFormatter/FileExportFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FileExportFormatter.php
@@ -30,7 +30,7 @@ class FileExportFormatter extends FileFormatterBase {
     /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items */
     foreach ($this->getEntitiesToView($items, $langcode) as $delta => $entity) {
       /** @var \Drupal\file\FileInterface $entity */
-      $data = ['url' => file_create_url($entity->getFileUri())];
+      $data = ['url' => \Drupal::service('file_url_generator')->generateAbsoluteString($entity->getFileUri())];
       if ($description && !empty($entity->_referringItem)) {
         $data['description'] = $entity->_referringItem->description;
       }
diff --git a/src/Plugin/Field/FieldFormatter/ImageExportFormatter.php b/src/Plugin/Field/FieldFormatter/ImageExportFormatter.php
index 72923cf..22f7074 100644
--- a/src/Plugin/Field/FieldFormatter/ImageExportFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageExportFormatter.php
@@ -116,7 +116,7 @@ class ImageExportFormatter extends ImageFormatter {
         $uri = $style->buildUrl($uri);
       }
       else {
-        $uri = file_create_url($uri);
+        $uri = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
       }
 
       if ($alt || $title) {
diff --git a/tests/src/Unit/EntityFieldExportTest.php b/tests/src/Unit/EntityFieldExportTest.php
index 37d3ea1..c055c15 100644
--- a/tests/src/Unit/EntityFieldExportTest.php
+++ b/tests/src/Unit/EntityFieldExportTest.php
@@ -34,7 +34,7 @@ class EntityFieldExportTest extends UnitTestCase {
   /**
    * The EntityFieldExport plugin.
    *
-   * @var \Drupal\rest_views\Plugin\views\field\EntityFieldExport|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\rest_views\Plugin\views\field\EntityFieldExport|\PHPUnit\Framework\MockObject\MockObject
    */
   private $handler;
 
@@ -55,10 +55,7 @@ class EntityFieldExportTest extends UnitTestCase {
     $entityTypeManager = $this->createMock(EntityTypeManagerInterface::class);
     $entityFieldManager = $this->createMock(EntityFieldManagerInterface::class);
     $entityRepository = $this->createMock(EntityRepositoryInterface::class);
-    $formatterPluginManager = $this
-      ->getMockBuilder(FormatterPluginManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $formatterPluginManager = $this->createMock(FormatterPluginManager::class);
     $fieldTypePluginManager = $this->createMock(FieldTypePluginManagerInterface::class);
     $languageManager = $this->createMock(LanguageManagerInterface::class);
     /** @var \Drupal\Core\Render\RendererInterface $renderer */
@@ -113,12 +110,8 @@ class EntityFieldExportTest extends UnitTestCase {
 
     // Initialize the handler, using a mocked view and display plugin.
     /** @var \Drupal\views\ViewExecutable $view */
-    $view = $this->getMockBuilder(ViewExecutable::class)
-      ->disableOriginalConstructor()
-      ->getMock();
-    $view->display_handler = $this->getMockBuilder(DisplayPluginBase::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $view = $this->createMock(ViewExecutable::class);
+    $view->display_handler = $this->createMock(DisplayPluginBase::class);
     $this->handler->init($view, $view->display_handler);
 
     $this->serializer = new Serializer([
