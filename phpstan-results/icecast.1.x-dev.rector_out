[parsing] modules/contrib/icecast/yp/src/Controller/YpController.php
[refactoring] modules/contrib/icecast/yp/src/Controller/YpController.php
[post rectors] modules/contrib/icecast/yp/src/Controller/YpController.php
[print] modules/contrib/icecast/yp/src/Controller/YpController.php
[refactoring] modules/contrib/icecast/yp/src/Controller/YpController.php
[post rectors] modules/contrib/icecast/yp/src/Controller/YpController.php
[print] modules/contrib/icecast/yp/src/Controller/YpController.php
[parsing] modules/contrib/icecast/yp/src/Form/YpAdminSettings.php
[refactoring] modules/contrib/icecast/yp/src/Form/YpAdminSettings.php
[post rectors] modules/contrib/icecast/yp/src/Form/YpAdminSettings.php
[print] modules/contrib/icecast/yp/src/Form/YpAdminSettings.php
[parsing] modules/contrib/icecast/yp/src/Plugin/views/field/Bitrate.php
[refactoring] modules/contrib/icecast/yp/src/Plugin/views/field/Bitrate.php
[post rectors] modules/contrib/icecast/yp/src/Plugin/views/field/Bitrate.php
[print] modules/contrib/icecast/yp/src/Plugin/views/field/Bitrate.php
[parsing] modules/contrib/icecast/yp/src/Plugin/views/field/CurrentSong.php
[refactoring] modules/contrib/icecast/yp/src/Plugin/views/field/CurrentSong.php
[post rectors] modules/contrib/icecast/yp/src/Plugin/views/field/CurrentSong.php
[print] modules/contrib/icecast/yp/src/Plugin/views/field/CurrentSong.php
[parsing] modules/contrib/icecast/yp/src/Plugin/views/field/ListenUrl.php
[refactoring] modules/contrib/icecast/yp/src/Plugin/views/field/ListenUrl.php
[post rectors] modules/contrib/icecast/yp/src/Plugin/views/field/ListenUrl.php
[print] modules/contrib/icecast/yp/src/Plugin/views/field/ListenUrl.php
[refactoring] modules/contrib/icecast/yp/src/Plugin/views/field/ListenUrl.php
[post rectors] modules/contrib/icecast/yp/src/Plugin/views/field/ListenUrl.php
[print] modules/contrib/icecast/yp/src/Plugin/views/field/ListenUrl.php
[parsing] modules/contrib/icecast/yp/src/Plugin/views/field/ServerName.php
[refactoring] modules/contrib/icecast/yp/src/Plugin/views/field/ServerName.php
[post rectors] modules/contrib/icecast/yp/src/Plugin/views/field/ServerName.php
[print] modules/contrib/icecast/yp/src/Plugin/views/field/ServerName.php
[parsing] modules/contrib/icecast/yp/src/Plugin/views/field/ServerType.php
[refactoring] modules/contrib/icecast/yp/src/Plugin/views/field/ServerType.php
[post rectors] modules/contrib/icecast/yp/src/Plugin/views/field/ServerType.php
[print] modules/contrib/icecast/yp/src/Plugin/views/field/ServerType.php
[parsing] modules/contrib/icecast/yp/tests/src/Functional/YpTest.php
[refactoring] modules/contrib/icecast/yp/tests/src/Functional/YpTest.php
[post rectors] modules/contrib/icecast/yp/tests/src/Functional/YpTest.php
[print] modules/contrib/icecast/yp/tests/src/Functional/YpTest.php
[refactoring] modules/contrib/icecast/yp/tests/src/Functional/YpTest.php
[post rectors] modules/contrib/icecast/yp/tests/src/Functional/YpTest.php
[print] modules/contrib/icecast/yp/tests/src/Functional/YpTest.php
[parsing] modules/contrib/icecast/yp/yp.install
[refactoring] modules/contrib/icecast/yp/yp.install
[post rectors] modules/contrib/icecast/yp/yp.install
[print] modules/contrib/icecast/yp/yp.install
[parsing] modules/contrib/icecast/yp/yp.module
[refactoring] modules/contrib/icecast/yp/yp.module
[post rectors] modules/contrib/icecast/yp/yp.module
[print] modules/contrib/icecast/yp/yp.module
[refactoring] modules/contrib/icecast/yp/yp.module
[post rectors] modules/contrib/icecast/yp/yp.module
[print] modules/contrib/icecast/yp/yp.module
[parsing] modules/contrib/icecast/yp/yp.views.inc
[refactoring] modules/contrib/icecast/yp/yp.views.inc
[post rectors] modules/contrib/icecast/yp/yp.views.inc
[print] modules/contrib/icecast/yp/yp.views.inc
[parsing] modules/contrib/icecast/yplog/src/Controller/DefaultController.php
[refactoring] modules/contrib/icecast/yplog/src/Controller/DefaultController.php
[post rectors] modules/contrib/icecast/yplog/src/Controller/DefaultController.php
[print] modules/contrib/icecast/yplog/src/Controller/DefaultController.php
[refactoring] modules/contrib/icecast/yplog/src/Controller/DefaultController.php
[post rectors] modules/contrib/icecast/yplog/src/Controller/DefaultController.php
[print] modules/contrib/icecast/yplog/src/Controller/DefaultController.php
[parsing] modules/contrib/icecast/yplog/src/Form/YplogSettings.php
[refactoring] modules/contrib/icecast/yplog/src/Form/YplogSettings.php
[post rectors] modules/contrib/icecast/yplog/src/Form/YplogSettings.php
[print] modules/contrib/icecast/yplog/src/Form/YplogSettings.php
[parsing] modules/contrib/icecast/yplog/yplog-graph.tpl.php
[refactoring] modules/contrib/icecast/yplog/yplog-graph.tpl.php
[post rectors] modules/contrib/icecast/yplog/yplog-graph.tpl.php
[print] modules/contrib/icecast/yplog/yplog-graph.tpl.php
[parsing] modules/contrib/icecast/yplog/yplog.admin.inc
[refactoring] modules/contrib/icecast/yplog/yplog.admin.inc
[post rectors] modules/contrib/icecast/yplog/yplog.admin.inc
[print] modules/contrib/icecast/yplog/yplog.admin.inc
[parsing] modules/contrib/icecast/yplog/yplog.graph.inc
[refactoring] modules/contrib/icecast/yplog/yplog.graph.inc
[post rectors] modules/contrib/icecast/yplog/yplog.graph.inc
[print] modules/contrib/icecast/yplog/yplog.graph.inc
[refactoring] modules/contrib/icecast/yplog/yplog.graph.inc
[post rectors] modules/contrib/icecast/yplog/yplog.graph.inc
[print] modules/contrib/icecast/yplog/yplog.graph.inc
[parsing] modules/contrib/icecast/yplog/yplog.install
[refactoring] modules/contrib/icecast/yplog/yplog.install
[post rectors] modules/contrib/icecast/yplog/yplog.install
[print] modules/contrib/icecast/yplog/yplog.install
[parsing] modules/contrib/icecast/yplog/yplog.module
[refactoring] modules/contrib/icecast/yplog/yplog.module
[post rectors] modules/contrib/icecast/yplog/yplog.module
[print] modules/contrib/icecast/yplog/yplog.module
[refactoring] modules/contrib/icecast/yplog/yplog.module
[post rectors] modules/contrib/icecast/yplog/yplog.module
[print] modules/contrib/icecast/yplog/yplog.module
[parsing] modules/contrib/icecast/yplog/yplog.theme.inc
[refactoring] modules/contrib/icecast/yplog/yplog.theme.inc
[post rectors] modules/contrib/icecast/yplog/yplog.theme.inc
[print] modules/contrib/icecast/yplog/yplog.theme.inc

7 files with changes
====================

1) modules/contrib/icecast/yplog/yplog.module:48

    ---------- begin diff ----------
@@ @@
 function yplog_cron() {
   // In the event that multiple streams have the same listen URL, they will be
   // summed together.
-  db_delete('yp_log')->condition('timestamp', REQUEST_TIME - (60 * 60 * 24 * 30), '<')->execute();
-  db_query('INSERT INTO {yp_log} (listen_url, listeners, timestamp) SELECT listen_url, SUM(listeners), :timestamp FROM {yp_stream} GROUP BY listen_url', [':timestamp' => REQUEST_TIME]);
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('yp_log')->condition('timestamp', \Drupal::time()->getRequestTime() - (60 * 60 * 24 * 30), '<')->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->query('INSERT INTO {yp_log} (listen_url, listeners, timestamp) SELECT listen_url, SUM(listeners), :timestamp FROM {yp_stream} GROUP BY listen_url', [':timestamp' => \Drupal::time()->getRequestTime()]);
 }

 /**
    ----------- end diff -----------

Applied rules:
 * DBDeleteRector
 * DBQueryRector
 * RequestTimeConstRector
 * ArgumentRemoverRector


2) modules/contrib/icecast/yplog/yplog.graph.inc:15

    ---------- begin diff ----------
@@ @@
     ['data' => t('Average listeners'), 'field' => 'average'],
     ['data' => t('Relative uptime'), 'field' => 'touches'],
   ];
-  $query = db_select('yp_log');
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $query = \Drupal::database()->select('yp_log');
   $query->addField('yp_log', 'listen_url');
   $query->addExpression('MAX(listeners)', 'maximum');
   $query->addExpression('ROUND(AVG(listeners))', 'average');
   $query->addExpression('COUNT(*)', 'touches');
-  $query->condition('timestamp', REQUEST_TIME - 604800, '>');
+  $query->condition('timestamp', \Drupal::time()->getRequestTime() - 604800, '>');
   $query->groupBy('listen_url');
   $query = $query
     ->extend('TableSort')
@@ @@
   // l() expects a Url object, created from a route name or external URI.
   // drupal_set_breadcrumb(array(l(t('Home'), NULL), l(t('Stream directory'), 'yp'), l(t('Reports'), 'yp/log')));
   $directory = 'public://yplog';
-  file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
+  \Drupal::service('file_system')->prepareDirectory($directory, \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY);
   $filename = $directory . '/' . md5($listen_url) . '.png';
   // If image is stale or not found, generate new image.
-  if (!file_exists($filename) || REQUEST_TIME - filemtime($filename) > 900) {
+  if (!file_exists($filename) || \Drupal::time()->getRequestTime() - filemtime($filename) > 900) {
     yplog_graph($listen_url, $filename);
   }
   // @FIXME
@@ @@
  * Generates graph image.
  */
 function yplog_graph($listen_url, $filename) {
-  $result = db_query('SELECT timestamp, listeners, listen_url FROM {yp_log} WHERE listen_url = :listen_url AND timestamp > :timestamp', [':listen_url' => $listen_url, ':timestamp' => REQUEST_TIME - 604800]);
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query('SELECT timestamp, listeners, listen_url FROM {yp_log} WHERE listen_url = :listen_url AND timestamp > :timestamp', [':listen_url' => $listen_url, ':timestamp' => \Drupal::time()->getRequestTime() - 604800]);
   require_once 'Image/Graph.php';
   $Dataset =& Image_Graph::factory('dataset');
   $max_listeners = 0;
@@ @@
   $Plotarea->setFillColor('yellow@0.1');
   $AxisX =& $Plotarea->getAxis(IMAGE_GRAPH_AXIS_X);
   $AxisX->setDataPreprocessor(Image_Graph::factory('Image_Graph_DataPreprocessor_Function', 'yplog_graph_date'));
-  $AxisX->forceMinimum(REQUEST_TIME - 604800);
-  $AxisX->forceMaximum(REQUEST_TIME);
+  $AxisX->forceMinimum(\Drupal::time()->getRequestTime() - 604800);
+  $AxisX->forceMaximum(\Drupal::time()->getRequestTime());
   $AxisX->setLabelInterval(7200);
   $AxisX->setTitle(t('Date (@timezone)', ['@timezone' => yplog_graph_timezone()]), ['size' => 7, 'color' => 'gray@0.6']);
   $AxisY =& $Plotarea->getAxis(IMAGE_GRAPH_AXIS_Y);
@@ @@
  * Formats the timezone for X axis.
  */
 function yplog_graph_timezone() {
-  $date = date_create('@' . REQUEST_TIME);
+  $date = date_create('@' . \Drupal::time()->getRequestTime());
   // @FIXME
   // // @FIXME
   // // This looks like another module's variable. You'll need to rewrite this call
    ----------- end diff -----------

Applied rules:
 * DBQueryRector
 * DBSelectRector
 * FileCreateDirectoryRector
 * FilePrepareDirectoryRector
 * RequestTimeConstRector
 * ArgumentRemoverRector


3) modules/contrib/icecast/yplog/src/Controller/DefaultController.php:26

    ---------- begin diff ----------
@@ @@
         'field' => 'touches',
       ],
     ];
-    $query = db_select('yp_log');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $query = \Drupal::database()->select('yp_log');
     $query->addField('yp_log', 'listen_url');
     $query->addExpression('MAX(listeners)', 'maximum');
     $query->addExpression('ROUND(AVG(listeners))', 'average');
     $query->addExpression('COUNT(*)', 'touches');
-    $query->condition('timestamp', REQUEST_TIME - 604800, '>');
+    $query->condition('timestamp', \Drupal::time()->getRequestTime() - 604800, '>');
     $query->groupBy('listen_url');
     $query = $query
       ->extend('TableSort')
@@ @@
     // l() expects a Url object, created from a route name or external URI.
     // drupal_set_breadcrumb(array(l(t('Home'), NULL), l(t('Stream directory'), 'yp'), l(t('Reports'), 'yp/log')));
     $directory = 'public://yplog';
-    file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
+    \Drupal::service('file_system')->prepareDirectory($directory, \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY);
     $filename = $directory . '/' . md5($listen_url) . '.png';
     // If image is stale or not found, generate new image.
-    if (!file_exists($filename) || REQUEST_TIME - filemtime($filename) > 900) {
+    if (!file_exists($filename) || \Drupal::time()->getRequestTime() - filemtime($filename) > 900) {
       yplog_graph($listen_url, $filename);
     }
     // @FIXME
    ----------- end diff -----------

Applied rules:
 * DBSelectRector
 * FileCreateDirectoryRector
 * FilePrepareDirectoryRector
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/icecast/yp/yp.module:8

    ---------- begin diff ----------
@@ @@
  * Cleanup stale YP entries (not touched within past five minutes).
  */
 function yp_cron() {
-  \Drupal::database()->delete('yp_stream')->condition('last_touch', REQUEST_TIME - 300, '<')->execute();
+  \Drupal::database()->delete('yp_stream')->condition('last_touch', \Drupal::time()->getRequestTime() - 300, '<')->execute();
 }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector


5) modules/contrib/icecast/yp/tests/src/Functional/YpTest.php:22

    ---------- begin diff ----------
@@ @@

   /**
    * Functional tests for yp.
+   * @doesNotPerformAssertions
    */
   public function testYp() {
   }
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/icecast/yp/src/Plugin/views/field/ListenUrl.php:27

    ---------- begin diff ----------
@@ @@
     }
     $image = [
       '#theme' => 'image',
-      '#uri' => drupal_get_path('module', 'yp') . '/listen.png',
+      '#uri' => \Drupal::service('extension.list.module')->getPath('yp') . '/listen.png',
       '#alt' => $this->t('Listen'),
       '#title' => $this->t('Listen'),
       '#attributes' => ['width' => 16, 'height' => 16],
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/icecast/yp/src/Controller/YpController.php:97

    ---------- begin diff ----------
@@ @@
       throw new AccessDeniedHttpException();
     }
     $this->response = new Response();
-    $this->fields['last_touch'] = REQUEST_TIME;
+    $this->fields['last_touch'] = \Drupal::time()->getRequestTime();
     $this->sid = is_string($request->get('sid')) ? (int) $request->get('sid') : NULL;
     $this->request = $request;
     $this->$action();
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

