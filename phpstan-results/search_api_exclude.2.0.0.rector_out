[parsing] modules/contrib/search_api_exclude/search_api_exclude.module
[refactoring] modules/contrib/search_api_exclude/search_api_exclude.module
[post rectors] modules/contrib/search_api_exclude/search_api_exclude.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/search_api_exclude/search_api_exclude.module
[parsing] modules/contrib/search_api_exclude/src/Plugin/search_api/processor/NodeExclude.php
[refactoring] modules/contrib/search_api_exclude/src/Plugin/search_api/processor/NodeExclude.php
[post rectors] modules/contrib/search_api_exclude/src/Plugin/search_api/processor/NodeExclude.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/search_api_exclude/src/Plugin/search_api/processor/NodeExclude.php
[parsing] modules/contrib/search_api_exclude/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php
[refactoring] modules/contrib/search_api_exclude/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php
[post rectors] modules/contrib/search_api_exclude/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/search_api_exclude/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php
[refactoring] modules/contrib/search_api_exclude/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php
[post rectors] modules/contrib/search_api_exclude/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/search_api_exclude/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php

1 file with changes
===================

1) modules/contrib/search_api_exclude/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Include system.module in order to load some required constants.
     require_once sprintf('%s/core/modules/system/system.module', $this->root);
@@ @@
    *   The mocked node.
    */
   private function createNode($exclude) {
-    $nodeType = $this->getMockBuilder(NodeType::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $nodeType = $this->createMock(NodeType::class);
     $nodeType->method('getThirdPartySetting')
       ->with('search_api_exclude', 'enabled', FALSE)
       ->will($this->returnValue(TRUE));
-    $entityReferenceList = $this->getMockBuilder(EntityReferenceFieldItemList::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityReferenceList = $this->createMock(EntityReferenceFieldItemList::class);
     $entityReferenceList->method('__get')
       ->with('entity')
       ->will($this->returnValue($nodeType));

-    $field_item_list = $this->getMockBuilder(FieldItemList::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $field_item_list = $this->createMock(FieldItemList::class);
     $field_item_list->method('getString')
       ->will($this->returnValue($exclude));

-    $node = $this->getMockBuilder(Node::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $node = $this->createMock(Node::class);
     $node->method('__get')
       ->with('type')
       ->will($this->returnValue($entityReferenceList));
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

