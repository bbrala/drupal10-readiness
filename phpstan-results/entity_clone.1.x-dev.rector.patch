diff --git a/src/Event/EntityCloneEvent.php b/src/Event/EntityCloneEvent.php
index 8889928..fa19ad0 100644
--- a/src/Event/EntityCloneEvent.php
+++ b/src/Event/EntityCloneEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Represents entity selection as event.
  */
-class EntityCloneEvent extends Event {
+class EntityCloneEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Entity being cloned.
diff --git a/src/Form/EntityCloneForm.php b/src/Form/EntityCloneForm.php
index 55ebec9..ee5111b 100644
--- a/src/Form/EntityCloneForm.php
+++ b/src/Form/EntityCloneForm.php
@@ -205,9 +205,9 @@ class EntityCloneForm extends FormBase {
 
     $duplicate = $this->entity->createDuplicate();
 
-    $this->eventDispatcher->dispatch(EntityCloneEvents::PRE_CLONE, new EntityCloneEvent($this->entity, $duplicate, $properties));
+    $this->eventDispatcher->dispatch(new EntityCloneEvent($this->entity, $duplicate, $properties), EntityCloneEvents::PRE_CLONE);
     $cloned_entity = $entity_clone_handler->cloneEntity($this->entity, $duplicate, $properties);
-    $this->eventDispatcher->dispatch(EntityCloneEvents::POST_CLONE, new EntityCloneEvent($this->entity, $duplicate, $properties));
+    $this->eventDispatcher->dispatch(new EntityCloneEvent($this->entity, $duplicate, $properties), EntityCloneEvents::POST_CLONE);
 
     $this->messenger->addMessage($this->stringTranslationManager->translate('The entity <em>@entity (@entity_id)</em> of type <em>@type</em> was cloned.', [
       '@entity' => $this->entity->label(),
