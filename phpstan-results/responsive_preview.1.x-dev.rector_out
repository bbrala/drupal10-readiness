[parsing] modules/contrib/responsive_preview/responsive_preview.module
[refactoring] modules/contrib/responsive_preview/responsive_preview.module
[post rectors] modules/contrib/responsive_preview/responsive_preview.module
[print] modules/contrib/responsive_preview/responsive_preview.module
[parsing] modules/contrib/responsive_preview/src/Cache/RouteAdminCacheContext.php
[refactoring] modules/contrib/responsive_preview/src/Cache/RouteAdminCacheContext.php
[post rectors] modules/contrib/responsive_preview/src/Cache/RouteAdminCacheContext.php
[print] modules/contrib/responsive_preview/src/Cache/RouteAdminCacheContext.php
[parsing] modules/contrib/responsive_preview/src/DeviceHtmlRouteProvider.php
[refactoring] modules/contrib/responsive_preview/src/DeviceHtmlRouteProvider.php
[post rectors] modules/contrib/responsive_preview/src/DeviceHtmlRouteProvider.php
[print] modules/contrib/responsive_preview/src/DeviceHtmlRouteProvider.php
[parsing] modules/contrib/responsive_preview/src/DeviceInterface.php
[refactoring] modules/contrib/responsive_preview/src/DeviceInterface.php
[post rectors] modules/contrib/responsive_preview/src/DeviceInterface.php
[print] modules/contrib/responsive_preview/src/DeviceInterface.php
[parsing] modules/contrib/responsive_preview/src/DeviceListBuilder.php
[refactoring] modules/contrib/responsive_preview/src/DeviceListBuilder.php
[post rectors] modules/contrib/responsive_preview/src/DeviceListBuilder.php
[print] modules/contrib/responsive_preview/src/DeviceListBuilder.php
[parsing] modules/contrib/responsive_preview/src/Entity/Device.php
[refactoring] modules/contrib/responsive_preview/src/Entity/Device.php
[post rectors] modules/contrib/responsive_preview/src/Entity/Device.php
[print] modules/contrib/responsive_preview/src/Entity/Device.php
[parsing] modules/contrib/responsive_preview/src/Form/DeviceDeleteForm.php
[refactoring] modules/contrib/responsive_preview/src/Form/DeviceDeleteForm.php
[post rectors] modules/contrib/responsive_preview/src/Form/DeviceDeleteForm.php
[print] modules/contrib/responsive_preview/src/Form/DeviceDeleteForm.php
[parsing] modules/contrib/responsive_preview/src/Form/DeviceForm.php
[refactoring] modules/contrib/responsive_preview/src/Form/DeviceForm.php
[post rectors] modules/contrib/responsive_preview/src/Form/DeviceForm.php
[print] modules/contrib/responsive_preview/src/Form/DeviceForm.php
[parsing] modules/contrib/responsive_preview/src/Plugin/Block/ResponsivePreviewBlock.php
[refactoring] modules/contrib/responsive_preview/src/Plugin/Block/ResponsivePreviewBlock.php
[post rectors] modules/contrib/responsive_preview/src/Plugin/Block/ResponsivePreviewBlock.php
[print] modules/contrib/responsive_preview/src/Plugin/Block/ResponsivePreviewBlock.php
[parsing] modules/contrib/responsive_preview/src/ResponsivePreview.php
[refactoring] modules/contrib/responsive_preview/src/ResponsivePreview.php
[post rectors] modules/contrib/responsive_preview/src/ResponsivePreview.php
[print] modules/contrib/responsive_preview/src/ResponsivePreview.php
[parsing] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewAdminTest.php
[refactoring] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewAdminTest.php
[post rectors] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewAdminTest.php
[print] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewAdminTest.php
[refactoring] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewAdminTest.php
[post rectors] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewAdminTest.php
[print] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewAdminTest.php
[parsing] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewBlockTest.php
[refactoring] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewBlockTest.php
[post rectors] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewBlockTest.php
[print] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewBlockTest.php
[parsing] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewContentFormTest.php
[refactoring] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewContentFormTest.php
[post rectors] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewContentFormTest.php
[print] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewContentFormTest.php
[parsing] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewTestBase.php
[refactoring] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewTestBase.php
[post rectors] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewTestBase.php
[print] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewTestBase.php
[parsing] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewToolbarTest.php
[refactoring] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewToolbarTest.php
[post rectors] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewToolbarTest.php
[print] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewToolbarTest.php
[refactoring] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewToolbarTest.php
[post rectors] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewToolbarTest.php
[print] modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewToolbarTest.php
[parsing] modules/contrib/responsive_preview/tests/src/FunctionalJavascript/ResponsivePreviewTest.php
[refactoring] modules/contrib/responsive_preview/tests/src/FunctionalJavascript/ResponsivePreviewTest.php
[post rectors] modules/contrib/responsive_preview/tests/src/FunctionalJavascript/ResponsivePreviewTest.php
[print] modules/contrib/responsive_preview/tests/src/FunctionalJavascript/ResponsivePreviewTest.php
[refactoring] modules/contrib/responsive_preview/tests/src/FunctionalJavascript/ResponsivePreviewTest.php
[post rectors] modules/contrib/responsive_preview/tests/src/FunctionalJavascript/ResponsivePreviewTest.php
[print] modules/contrib/responsive_preview/tests/src/FunctionalJavascript/ResponsivePreviewTest.php

3 files with changes
====================

1) modules/contrib/responsive_preview/tests/src/FunctionalJavascript/ResponsivePreviewTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     NodeType::create(['type' => 'article', 'name' => 'Article'])->save();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewToolbarTest.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->previewUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/responsive_preview/tests/src/Functional/ResponsivePreviewAdminTest.php:64

    ---------- begin diff ----------
@@ @@
     // Ensures that all default devices are listed in the table.
     $default_devices = $this->getDefaultDevices();
     foreach ($default_devices as $label) {
-      $xpath = $this->assertSession()
-        ->buildXPathQuery('//table//tr//td[text()=:text]', [':text' => $label]);
+      $xpath = $this->assertSession()->buildXPathQuery('//table//tr//td[text()=:text]', [':text' => $label]);
       $this->assertSession()->elementExists('xpath', $xpath);
     }

@@ @@
       'dimensions[dppx]' => '3',
       'orientation' => 'portrait',
     ];
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview/add', $edit, $this->t('Save'));
+    $this->drupalGet('admin/config/user-interface/responsive-preview/add');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()
       ->responseContains($this->t('Device %name has been added.', ['%name' => 'Smartwatch']));
     $this->assertSession()
       ->elementExists('xpath', '//table//tr//td[text()="Smartwatch"]');
+    $this->drupalGet('admin/config/user-interface/responsive-preview/add');

     // Ensures that is not possible to insert a non-unique device id.
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview/add', $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()
       ->responseContains($this->t('The machine-readable name is already in use. It must be unique.'));

@@ @@
       'dimensions[dppx]' => '2.5',
       'orientation' => 'landscape',
     ];
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview/small/edit', $edit, $this->t('Save'));
+    $this->drupalGet('admin/config/user-interface/responsive-preview/small/edit');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()
       ->responseContains($this->t('Device %name has been updated.', ['%name' => 'Smart phone updated']));
     $this->assertSession()
       ->elementExists('xpath', '//table//tr//td[text()="Smart phone updated"]');
     $this->assertSession()->checkboxChecked('entities[small][status]');
+    $this->drupalGet('admin/config/user-interface/responsive-preview/large/delete');

     // Tests the delete of a predefined devices.
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview/large/delete', [], $this->t('Delete'));
+    $this->submitForm([], $this->t('Delete'));
     $this->assertSession()
       ->responseContains($this->t('Device %name has been deleted.', ['%name' => 'Typical desktop']));
     $this->assertSession()
@@ @@
       'entities[small][status]' => 0,
       'entities[smartwatch][status]' => 0,
     ];
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview', $edit, $this->t('Save'));
+    $this->drupalGet('admin/config/user-interface/responsive-preview');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()
       ->responseContains($this->t('The device settings have been updated.'));
     $this->assertSession()->checkboxChecked('entities[medium][status]');
    ----------- end diff -----------

Applied rules:
 * BuildXPathQueryRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

