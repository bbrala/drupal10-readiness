diff --git a/tests/src/Functional/MetaTagTests.php b/tests/src/Functional/MetaTagTests.php
index 92aee66..dad18b3 100644
--- a/tests/src/Functional/MetaTagTests.php
+++ b/tests/src/Functional/MetaTagTests.php
@@ -23,9 +23,9 @@ class MetaTagTests extends BrowserTestBase {
    */
   public function testMetaTagRobotsOnFrontPage() {
     $this->drupalGet('<front>');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $xpath = $this->xpath("//meta[@name='robots']");
-    $this->assertEqual((string) $xpath[0]->getAttribute('content'), 'noindex, nofollow');
+    $this->assertEquals((string) $xpath[0]->getAttribute('content'), 'noindex, nofollow');
   }
 
   /**
@@ -35,9 +35,9 @@ class MetaTagTests extends BrowserTestBase {
     $admin_user = $this->drupalCreateUser(['access administration pages']);
     $this->drupalLogin($admin_user);
     $this->drupalGet('/admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $xpath = $this->xpath("//meta[@name='robots']");
-    $this->assertEqual((string) $xpath[0]->getAttribute('content'), 'noindex, nofollow');
+    $this->assertEquals((string) $xpath[0]->getAttribute('content'), 'noindex, nofollow');
   }
 
   /**
@@ -45,9 +45,9 @@ class MetaTagTests extends BrowserTestBase {
    */
   public function testMetaTagRobotsOn403Page() {
     $this->drupalGet('/admin');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $xpath = $this->xpath("//meta[@name='robots']");
-    $this->assertEqual((string) $xpath[0]->getAttribute('content'), 'noindex, nofollow');
+    $this->assertEquals((string) $xpath[0]->getAttribute('content'), 'noindex, nofollow');
   }
 
   /**
@@ -55,9 +55,9 @@ class MetaTagTests extends BrowserTestBase {
    */
   public function testMetaTagRobotsOn404Page() {
     $this->drupalGet('/a-non-existed-page');
-    $this->assertResponse(404);
+    $this->assertSession()->statusCodeEquals(404);
     $xpath = $this->xpath("//meta[@name='robots']");
-    $this->assertEqual((string) $xpath[0]->getAttribute('content'), 'noindex, nofollow');
+    $this->assertEquals((string) $xpath[0]->getAttribute('content'), 'noindex, nofollow');
   }
 
 }
