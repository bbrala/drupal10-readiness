[parsing] modules/contrib/openid_connect_akamai/openid_connect_akamai.install
[refactoring] modules/contrib/openid_connect_akamai/openid_connect_akamai.install
[post rectors] modules/contrib/openid_connect_akamai/openid_connect_akamai.install
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/openid_connect_akamai/openid_connect_akamai.install
[parsing] modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php
[refactoring] modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php
[post rectors] modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php
[refactoring] modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php
[post rectors] modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php
[parsing] modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php
[refactoring] modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php
[post rectors] modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php
[refactoring] modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php
[post rectors] modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php
[parsing] modules/contrib/openid_connect_akamai/src/Plugin/OpenIDConnectClient/Akamai.php
[refactoring] modules/contrib/openid_connect_akamai/src/Plugin/OpenIDConnectClient/Akamai.php
[post rectors] modules/contrib/openid_connect_akamai/src/Plugin/OpenIDConnectClient/Akamai.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/openid_connect_akamai/src/Plugin/OpenIDConnectClient/Akamai.php
[parsing] modules/contrib/openid_connect_akamai/src/Routing/RouteSubscriber.php
[refactoring] modules/contrib/openid_connect_akamai/src/Routing/RouteSubscriber.php
[post rectors] modules/contrib/openid_connect_akamai/src/Routing/RouteSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/openid_connect_akamai/src/Routing/RouteSubscriber.php

2 files with changes
====================

1) modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php:80

    ---------- begin diff ----------
@@ @@
   /**
    * Redirects anonymous users to login endpoint for SSO.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The request event.
    */
-  public function redirectAnonymous(GetResponseEvent $event) {
+  public function redirectAnonymous(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $request = $event->getRequest();

     if ($this->akamaiSettings['enable_sso']
    ----------- end diff -----------

Applied rules:
 * RenameClassRector


2) modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php:28

    ---------- begin diff ----------
@@ @@
     $query = $this->requestStack->getCurrentRequest()->query;
     if ($query->get('error')) {
       // Set cookie which controls that the login attempt using the SSO failed.
-      $response->headers->setCookie(new Cookie('akamai_error', '1', time() + $configuration['sso_cookie_age']));
+      $response->headers->setCookie(\Symfony\Component\HttpFoundation\Cookie::create('akamai_error', '1', time() + $configuration['sso_cookie_age']));
       if ($query->get('error') == 'login_required') {
         // Remove error message.
         $this->messenger()->deleteByType('warning');
@@ @@
     }

     if ($this->currentUser()->isAuthenticated()) {
-      $response->headers->setCookie(new Cookie('akamai_error', '1', 1));
+      $response->headers->setCookie(\Symfony\Component\HttpFoundation\Cookie::create('akamai_error', '1', 1));
     }

     return $response;
    ----------- end diff -----------

Applied rules:
 * NewToStaticCallRector


 [OK] 2 files have been changed by Rector                                       

