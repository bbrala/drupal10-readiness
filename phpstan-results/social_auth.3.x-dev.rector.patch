diff --git a/src/Controller/SocialAuthController.php b/src/Controller/SocialAuthController.php
index da580f4..0c42b95 100755
--- a/src/Controller/SocialAuthController.php
+++ b/src/Controller/SocialAuthController.php
@@ -22,7 +22,7 @@ class SocialAuthController extends SocialApiController {
   public static function setLoginButtonSettings($module, $route, $img_path) {
     $config = \Drupal::configFactory()->getEditable('social_auth.settings');
 
-    $img_path = drupal_get_path('module', $module) . '/' . $img_path;
+    $img_path = \Drupal::service('extension.list.module')->getPath($module) . '/' . $img_path;
 
     $config->set('auth.' . $module . '.route', $route)
       ->set('auth.' . $module . '.img_path', $img_path)
diff --git a/src/Event/SocialAuthEventBase.php b/src/Event/SocialAuthEventBase.php
index 3c4c097..77933a9 100644
--- a/src/Event/SocialAuthEventBase.php
+++ b/src/Event/SocialAuthEventBase.php
@@ -20,13 +20,13 @@
    */
   class EventProxy extends Drupal9Event {}
 }
-elseif (class_exists(Drupal8Event::class)) {
+elseif (class_exists(\Symfony\Contracts\EventDispatcher\Event::class)) {
   /**
    * Extends from Drupal8/Symfony 3 Event class.
    *
    * @package Drupal\social_auth\Event
    */
-  class EventProxy extends Drupal8Event {}
+  class EventProxy extends \Symfony\Contracts\EventDispatcher\Event {}
 }
 
 /**
diff --git a/src/User/UserAuthenticator.php b/src/User/UserAuthenticator.php
index 6ca8439..8cb8951 100644
--- a/src/User/UserAuthenticator.php
+++ b/src/User/UserAuthenticator.php
@@ -357,7 +357,7 @@ public function loginUser(UserInterface $drupal_user) {
 
       // Dispatches SocialAuthEvents::USER_LOGIN event.
       $event = new UserEvent($drupal_user, $this->getPluginId());
-      $this->eventDispatcher->dispatch(SocialAuthEvents::USER_LOGIN, $event);
+      $this->eventDispatcher->dispatch($event, SocialAuthEvents::USER_LOGIN);
 
       return TRUE;
     }
@@ -420,7 +420,7 @@ protected function userLoginFinalize(UserInterface $account) {
    */
   public function dispatchAuthenticationError($error = NULL) {
     $event = new FailedAuthenticationEvent($this->dataHandler, $this->getPluginId(), $error ?? NULL);
-    $this->eventDispatcher->dispatch(SocialAuthEvents::FAILED_AUTH, $event);
+    $this->eventDispatcher->dispatch($event, SocialAuthEvents::FAILED_AUTH);
 
     if ($event->hasResponse()) {
       return $event->getResponse();
@@ -437,7 +437,7 @@ public function dispatchAuthenticationError($error = NULL) {
    */
   public function dispatchBeforeRedirect($destination = NULL) {
     $event = new BeforeRedirectEvent($this->dataHandler, $this->getPluginId(), $destination);
-    $this->eventDispatcher->dispatch(SocialAuthEvents::BEFORE_REDIRECT, $event);
+    $this->eventDispatcher->dispatch($event, SocialAuthEvents::BEFORE_REDIRECT);
   }
 
 }
diff --git a/src/User/UserManager.php b/src/User/UserManager.php
index 761ec02..4516644 100644
--- a/src/User/UserManager.php
+++ b/src/User/UserManager.php
@@ -210,7 +210,7 @@ public function createUser(SocialAuthUserInterface $user) {
 
       // Dispatches SocialAuthEvents::USER_CREATED event.
       $event = new UserEvent($new_user, $this->getPluginId(), $user);
-      $this->eventDispatcher->dispatch(SocialAuthEvents::USER_CREATED, $event);
+      $this->eventDispatcher->dispatch($event, SocialAuthEvents::USER_CREATED);
 
       return $new_user;
     }
@@ -505,7 +505,7 @@ protected function getUserFields(SocialAuthUserInterface $user, $langcode) {
     // Dispatches SocialAuthEvents::USER_FIELDS, so that other modules can
     // update this array before an user is saved.
     $event = new UserFieldsEvent($fields, $this->getPluginId(), $user);
-    $this->eventDispatcher->dispatch(SocialAuthEvents::USER_FIELDS, $event);
+    $this->eventDispatcher->dispatch($event, SocialAuthEvents::USER_FIELDS);
     $fields = $event->getUserFields();
 
     return $fields;
diff --git a/tests/src/Functional/SocialAuthLoginBlockTest.php b/tests/src/Functional/SocialAuthLoginBlockTest.php
index f3d82e4..c08a4f9 100644
--- a/tests/src/Functional/SocialAuthLoginBlockTest.php
+++ b/tests/src/Functional/SocialAuthLoginBlockTest.php
@@ -16,6 +16,7 @@ class SocialAuthLoginBlockTest extends SocialAuthTestBase {
    * does not have any authentication route by itself.
    *
    * @throws \Behat\Mink\Exception\ResponseTextException
+   * @doesNotPerformAssertions
    */
   public function testBlockExists() {
     parent::checkLinkToProviderExists();
