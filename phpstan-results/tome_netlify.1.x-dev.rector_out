[parsing] modules/contrib/tome_netlify/modules/tome_netlify_contact/tome_netlify_contact.module
[refactoring] modules/contrib/tome_netlify/modules/tome_netlify_contact/tome_netlify_contact.module
[post rectors] modules/contrib/tome_netlify/modules/tome_netlify_contact/tome_netlify_contact.module
[print] modules/contrib/tome_netlify/modules/tome_netlify_contact/tome_netlify_contact.module
[parsing] modules/contrib/tome_netlify/src/Commands/TomeNetlifyDeployCommands.php
[refactoring] modules/contrib/tome_netlify/src/Commands/TomeNetlifyDeployCommands.php
[post rectors] modules/contrib/tome_netlify/src/Commands/TomeNetlifyDeployCommands.php
[print] modules/contrib/tome_netlify/src/Commands/TomeNetlifyDeployCommands.php
[parsing] modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php
[refactoring] modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php
[post rectors] modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php
[print] modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php
[refactoring] modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php
[post rectors] modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php
[print] modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php
[parsing] modules/contrib/tome_netlify/src/Form/TomeNetlifyDeployForm.php
[refactoring] modules/contrib/tome_netlify/src/Form/TomeNetlifyDeployForm.php
[post rectors] modules/contrib/tome_netlify/src/Form/TomeNetlifyDeployForm.php
[print] modules/contrib/tome_netlify/src/Form/TomeNetlifyDeployForm.php
[parsing] modules/contrib/tome_netlify/src/Form/TomeNetlifySettingsForm.php
[refactoring] modules/contrib/tome_netlify/src/Form/TomeNetlifySettingsForm.php
[post rectors] modules/contrib/tome_netlify/src/Form/TomeNetlifySettingsForm.php
[print] modules/contrib/tome_netlify/src/Form/TomeNetlifySettingsForm.php
[parsing] modules/contrib/tome_netlify/src/TomeNetlifyDeployBatch.php
[refactoring] modules/contrib/tome_netlify/src/TomeNetlifyDeployBatch.php
[post rectors] modules/contrib/tome_netlify/src/TomeNetlifyDeployBatch.php
[print] modules/contrib/tome_netlify/src/TomeNetlifyDeployBatch.php
[parsing] modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php
[refactoring] modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php
[post rectors] modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php
[print] modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php
[refactoring] modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php
[post rectors] modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php
[print] modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php
[parsing] modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php
[refactoring] modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php
[post rectors] modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php
[print] modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php
[refactoring] modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php
[post rectors] modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php
[print] modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php
[parsing] modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php
[refactoring] modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php
[post rectors] modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php
[print] modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php
[refactoring] modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php
[post rectors] modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php
[print] modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php
[parsing] modules/contrib/tome_netlify/tome_netlify.install
[refactoring] modules/contrib/tome_netlify/tome_netlify.install
[post rectors] modules/contrib/tome_netlify/tome_netlify.install
[print] modules/contrib/tome_netlify/tome_netlify.install

4 files with changes
====================

1) modules/contrib/tome_netlify/tests/src/Kernel/StaticRedirectTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('redirect');
     // @see \Drupal\redirect\RedirectChecker::canRedirect
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/tome_netlify/tests/src/Functional/DeployFormTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->drupalCreateUser(['use tome static']));
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/tome_netlify/tests/src/Functional/ContactFormTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     ContactForm::create([
       'id' => 'test',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/tome_netlify/src/EventSubscriber/RedirectSubscriber.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * Reacts to a response event.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();
     $request = $event->getRequest();
     if ($request->attributes->has(StaticGeneratorInterface::REQUEST_KEY) && $response instanceof RedirectResponse) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 4 files have been changed by Rector                                       

