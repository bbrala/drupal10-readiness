diff --git a/machine_name.info.yml b/machine_name.info.yml
index 8ad2b88..99c58de 100644
--- a/machine_name.info.yml
+++ b/machine_name.info.yml
@@ -1,6 +1,5 @@
 name: Machine Name
 description: Provides a machine name field.
 package: Field types
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 type: module
diff --git a/tests/src/Kernel/MachineNameItemTest.php b/tests/src/Kernel/MachineNameItemTest.php
index 47eaa3a..180e989 100644
--- a/tests/src/Kernel/MachineNameItemTest.php
+++ b/tests/src/Kernel/MachineNameItemTest.php
@@ -26,7 +26,7 @@ class MachineNameItemTest extends FieldKernelTestBase {
   /**
    * Sets the test up.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create a machine_name field storage and field for validation.
     FieldStorageConfig::create([
@@ -58,18 +58,18 @@ class MachineNameItemTest extends FieldKernelTestBase {
     $entity = EntityTest::load($id);
     $this->assertTrue($entity->field_test instanceof FieldItemListInterface, 'Field implements interface.');
     $this->assertTrue($entity->field_test[0] instanceof FieldItemInterface, 'Field item implements interface.');
-    $this->assertEqual($entity->field_test->value, $value);
-    $this->assertEqual($entity->field_test[0]->value, $value);
+    $this->assertEquals($entity->field_test->value, $value);
+    $this->assertEquals($entity->field_test[0]->value, $value);
 
     // Verify changing the field value.
     $new_value = 'changed_machine_name';
     $entity->field_test->value = $new_value;
-    $this->assertEqual($entity->field_test->value, $new_value);
+    $this->assertEquals($entity->field_test->value, $new_value);
 
     // Read changed entity and assert changed values.
     $entity->save();
     $entity = EntityTest::load($id);
-    $this->assertEqual($entity->field_test->value, $new_value);
+    $this->assertEquals($entity->field_test->value, $new_value);
 
     // Test sample item generation.
     $entity = EntityTest::create();
