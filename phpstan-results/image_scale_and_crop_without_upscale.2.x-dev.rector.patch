diff --git a/tests/src/Functional/ImageEffectsTest.php b/tests/src/Functional/ImageEffectsTest.php
index 2d354c6..8cf8557 100644
--- a/tests/src/Functional/ImageEffectsTest.php
+++ b/tests/src/Functional/ImageEffectsTest.php
@@ -30,7 +30,7 @@ class ImageEffectsTest extends ToolkitTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->manager = $this->container->get('plugin.manager.image.effect');
   }
@@ -76,7 +76,7 @@ class ImageEffectsTest extends ToolkitTestBase {
       $resultWidth = $data[4];
       $resultHeight = $data[5];
 
-      $this->file = drupal_get_path('module', 'image_scale_and_crop_without_upscale') . '/tests/images/200x200.png';
+      $this->file = \Drupal::service('extension.list.module')->getPath('image_scale_and_crop_without_upscale') . '/tests/images/200x200.png';
       $this->image = $this->getImage();
       $this->imageTestReset();
 
@@ -88,10 +88,10 @@ class ImageEffectsTest extends ToolkitTestBase {
 
       // Check the parameters.
       $calls = $this->imageTestGetAllCalls();
-      $this->assertEqual($calls['scale_and_crop'][0][0], $cropX, 'X was computed and passed correctly for data set ' . serialize($data));
-      $this->assertEqual($calls['scale_and_crop'][0][1], $cropY, 'Y was computed and passed correctly for data set ' . serialize($data));
-      $this->assertEqual($calls['scale_and_crop'][0][2], $resultWidth, 'Width was computed and passed correctly for data set ' . serialize($data));
-      $this->assertEqual($calls['scale_and_crop'][0][3], $resultHeight, 'Height was computed and passed correctly for data set ' . serialize($data));
+      $this->assertEquals($calls['scale_and_crop'][0][0], $cropX, 'X was computed and passed correctly for data set ' . serialize($data));
+      $this->assertEquals($calls['scale_and_crop'][0][1], $cropY, 'Y was computed and passed correctly for data set ' . serialize($data));
+      $this->assertEquals($calls['scale_and_crop'][0][2], $resultWidth, 'Width was computed and passed correctly for data set ' . serialize($data));
+      $this->assertEquals($calls['scale_and_crop'][0][3], $resultHeight, 'Height was computed and passed correctly for data set ' . serialize($data));
     }
   }
 
