diff --git a/composer.json b/composer.json
index 03d15d0..e61f36f 100644
--- a/composer.json
+++ b/composer.json
@@ -22,8 +22,8 @@
     "source": "https://git.drupalcode.org/project/entity_sync"
   },
   "require": {
-    "drupal/core": "^8.8 | ^9",
-    "drupal/ultimate_cron": "^2.0@alpha"
+    "drupal/ultimate_cron": "^2.0@alpha",
+    "drupal/core": "^8.8 | ^9 || ^10"
   },
   "require-dev": {
     "symfony/yaml": "^2.0.0|^3.0.0|^4.0.0|^5.0.0",
diff --git a/entity_sync.info.yml b/entity_sync.info.yml
index a96b594..729e42b 100644
--- a/entity_sync.info.yml
+++ b/entity_sync.info.yml
@@ -2,4 +2,4 @@ name: Entity Synchronization
 description: Provides a framework for synchronizing Drupal entities to and from remote systems.
 type: module
 package: Sync
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
diff --git a/src/Event/InitiateOperationEvent.php b/src/Event/InitiateOperationEvent.php
index 758ed7c..417176c 100644
--- a/src/Event/InitiateOperationEvent.php
+++ b/src/Event/InitiateOperationEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * Allows subscribers to respond when an operation was just initiated.
  */
-class InitiateOperationEvent extends Event {
+class InitiateOperationEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The operation that is being executed.
diff --git a/src/Event/PostTerminateOperationEvent.php b/src/Event/PostTerminateOperationEvent.php
index d22bc0a..4b0c830 100644
--- a/src/Event/PostTerminateOperationEvent.php
+++ b/src/Event/PostTerminateOperationEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * Allows subscribers to respond after an operation has been terminated.
  */
-class PostTerminateOperationEvent extends Event {
+class PostTerminateOperationEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The operation that was terminated.
diff --git a/src/Event/PreInitiateOperationEvent.php b/src/Event/PreInitiateOperationEvent.php
index 6860f9e..4e87ced 100644
--- a/src/Event/PreInitiateOperationEvent.php
+++ b/src/Event/PreInitiateOperationEvent.php
@@ -11,7 +11,7 @@ use Symfony\Component\EventDispatcher\Event;
  * Allows subscribers to act before an operation is initiated. Subscribers are
  * also given the opportunity to cancel the operation.
  */
-class PreInitiateOperationEvent extends Event {
+class PreInitiateOperationEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The operation that is being executed.
diff --git a/src/Event/TerminateOperationEvent.php b/src/Event/TerminateOperationEvent.php
index b01fcf0..71ec74d 100644
--- a/src/Event/TerminateOperationEvent.php
+++ b/src/Event/TerminateOperationEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * Allows subscribers to respond after an operation has been executed.
  */
-class TerminateOperationEvent extends Event {
+class TerminateOperationEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The operation that was executed.
diff --git a/src/Export/EntityManager.php b/src/Export/EntityManager.php
index db6e062..7469562 100644
--- a/src/Export/EntityManager.php
+++ b/src/Export/EntityManager.php
@@ -792,7 +792,7 @@ class EntityManager extends EntityManagerBase implements EntityManagerInterface
       $local_entity,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::LOCAL_ENTITY_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::LOCAL_ENTITY_MAPPING);
 
     // Return the final mapping.
     return $event->getEntityMapping();
diff --git a/src/Export/Event/FieldMappingEvent.php b/src/Export/Event/FieldMappingEvent.php
index e1a973a..b3027fc 100644
--- a/src/Export/Event/FieldMappingEvent.php
+++ b/src/Export/Event/FieldMappingEvent.php
@@ -13,7 +13,7 @@ use Symfony\Component\EventDispatcher\Event;
  * Allows subscribers to define which remote entity fields the local entity
  * fields should be mapped to.
  */
-class FieldMappingEvent extends Event {
+class FieldMappingEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The field mapping for the entities being mapped.
diff --git a/src/Export/Event/LocalEntityMappingEvent.php b/src/Export/Event/LocalEntityMappingEvent.php
index 5e92b91..df525dd 100644
--- a/src/Export/Event/LocalEntityMappingEvent.php
+++ b/src/Export/Event/LocalEntityMappingEvent.php
@@ -13,7 +13,7 @@ use Symfony\Component\EventDispatcher\Event;
  * Allows subscribers to define which remote entity a local entity should be
  * mapped to.
  */
-class LocalEntityMappingEvent extends Event {
+class LocalEntityMappingEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The entity mapping for the local entity being mapped.
diff --git a/src/Export/FieldManager.php b/src/Export/FieldManager.php
index 56c9392..241309b 100644
--- a/src/Export/FieldManager.php
+++ b/src/Export/FieldManager.php
@@ -219,7 +219,7 @@ class FieldManager implements FieldManagerInterface {
       $remote_entity_id,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::FIELD_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::FIELD_MAPPING);
 
     // Return the final mappings.
     return $event->getFieldMapping();
diff --git a/src/Import/Event/FieldMappingEvent.php b/src/Import/Event/FieldMappingEvent.php
index f945097..046fa6b 100644
--- a/src/Import/Event/FieldMappingEvent.php
+++ b/src/Import/Event/FieldMappingEvent.php
@@ -13,7 +13,7 @@ use Symfony\Component\EventDispatcher\Event;
  * Allows subscribers to define which local entity fields the remote entity
  * fields should be mapped to.
  */
-class FieldMappingEvent extends Event {
+class FieldMappingEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The field mapping for the entities being mapped.
diff --git a/src/Import/Event/ListFiltersEvent.php b/src/Import/Event/ListFiltersEvent.php
index 4863a88..5e96e61 100644
--- a/src/Import/Event/ListFiltersEvent.php
+++ b/src/Import/Event/ListFiltersEvent.php
@@ -11,7 +11,7 @@ use Symfony\Component\EventDispatcher\Event;
  * Allows subscribers to alter the filters that define which remote entities
  * will be fetched from the remote resource.
  */
-class ListFiltersEvent extends Event {
+class ListFiltersEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The filters.
diff --git a/src/Import/Event/LocalEntityMappingEvent.php b/src/Import/Event/LocalEntityMappingEvent.php
index 75bb47c..0ff5b83 100644
--- a/src/Import/Event/LocalEntityMappingEvent.php
+++ b/src/Import/Event/LocalEntityMappingEvent.php
@@ -13,7 +13,7 @@ use Symfony\Component\EventDispatcher\Event;
  * Allows subscribers to define which remote entity a local entity should be
  * mapped to.
  */
-class LocalEntityMappingEvent extends Event {
+class LocalEntityMappingEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The entity mapping for the local entity being mapped.
diff --git a/src/Import/Event/RemoteEntityMappingEvent.php b/src/Import/Event/RemoteEntityMappingEvent.php
index 9646958..da56bac 100644
--- a/src/Import/Event/RemoteEntityMappingEvent.php
+++ b/src/Import/Event/RemoteEntityMappingEvent.php
@@ -12,7 +12,7 @@ use Symfony\Component\EventDispatcher\Event;
  * Allows subscribers to define which local entity a remote entity should be
  * mapped to.
  */
-class RemoteEntityMappingEvent extends Event {
+class RemoteEntityMappingEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The entity mapping for the remote entity being imported.
diff --git a/src/Import/FieldManager.php b/src/Import/FieldManager.php
index 6225ad6..5180879 100644
--- a/src/Import/FieldManager.php
+++ b/src/Import/FieldManager.php
@@ -262,7 +262,7 @@ class FieldManager implements FieldManagerInterface {
       $local_entity,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::FIELD_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::FIELD_MAPPING);
 
     // Return the final mappings.
     return $event->getFieldMapping();
diff --git a/src/Import/Manager.php b/src/Import/Manager.php
index 9fe3d56..0f248c4 100644
--- a/src/Import/Manager.php
+++ b/src/Import/Manager.php
@@ -956,7 +956,7 @@ class Manager extends EntityManagerBase implements ManagerInterface {
     ImmutableConfig $sync
   ) {
     $event = new RemoteEntityMappingEvent($remote_entity, $sync);
-    $this->eventDispatcher->dispatch(Events::REMOTE_ENTITY_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::REMOTE_ENTITY_MAPPING);
 
     // Return the final mapping.
     return $event->getEntityMapping();
@@ -995,7 +995,7 @@ class Manager extends EntityManagerBase implements ManagerInterface {
       $local_entity,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::LOCAL_ENTITY_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::LOCAL_ENTITY_MAPPING);
 
     // Return the final mapping.
     return $event->getEntityMapping();
@@ -1028,7 +1028,7 @@ class Manager extends EntityManagerBase implements ManagerInterface {
       $context,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::REMOTE_LIST_FILTERS, $event);
+    $this->eventDispatcher->dispatch($event, Events::REMOTE_LIST_FILTERS);
 
     // Return the final filters.
     return $event->getFilters();
diff --git a/tests/src/Unit/Config/SyncManagerTest.php b/tests/src/Unit/Config/SyncManagerTest.php
index fdcdbaa..e59034b 100644
--- a/tests/src/Unit/Config/SyncManagerTest.php
+++ b/tests/src/Unit/Config/SyncManagerTest.php
@@ -28,6 +28,7 @@ require_once __DIR__ . '/../../TestTrait/FixturesTrait.php';
  */
 class SyncManagerTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   use FixturesTrait;
 
   /**
diff --git a/tests/src/Unit/Export/FieldManagerGetNamesTest.php b/tests/src/Unit/Export/FieldManagerGetNamesTest.php
index c463f7a..a7fbee8 100644
--- a/tests/src/Unit/Export/FieldManagerGetNamesTest.php
+++ b/tests/src/Unit/Export/FieldManagerGetNamesTest.php
@@ -31,6 +31,7 @@ require_once __DIR__ . '/../../TestTrait/FixturesTrait.php';
  */
 class FieldManagerGetNamesTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   use FixturesTrait;
 
   /**
