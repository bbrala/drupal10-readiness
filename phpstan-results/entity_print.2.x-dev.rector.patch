diff --git a/src/Asset/AssetCollector.php b/src/Asset/AssetCollector.php
index a4e862b..a85fbbf 100644
--- a/src/Asset/AssetCollector.php
+++ b/src/Asset/AssetCollector.php
@@ -75,7 +75,7 @@ class AssetCollector implements AssetCollectorInterface {
       }
     }
 
-    $this->dispatcher->dispatch(PrintEvents::CSS_ALTER, new PrintCssAlterEvent($libraries, $entities));
+    $this->dispatcher->dispatch(new PrintCssAlterEvent($libraries, $entities), PrintEvents::CSS_ALTER);
 
     return $libraries;
   }
diff --git a/src/Event/PrintCssAlterEvent.php b/src/Event/PrintCssAlterEvent.php
index 9d638b8..4b3dbc5 100644
--- a/src/Event/PrintCssAlterEvent.php
+++ b/src/Event/PrintCssAlterEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * This event allows the CSS libraries to be altered.
  */
-class PrintCssAlterEvent extends Event {
+class PrintCssAlterEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The renderable array.
diff --git a/src/Event/PrintEventBase.php b/src/Event/PrintEventBase.php
index ca00d0f..35e4623 100644
--- a/src/Event/PrintEventBase.php
+++ b/src/Event/PrintEventBase.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event base class.
  */
-abstract class PrintEventBase extends Event {
+abstract class PrintEventBase extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The print engine plugin.
diff --git a/src/Event/PrintHtmlAlterEvent.php b/src/Event/PrintHtmlAlterEvent.php
index 3d4b1e0..8324708 100644
--- a/src/Event/PrintHtmlAlterEvent.php
+++ b/src/Event/PrintHtmlAlterEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * An event to alter the HTML string.
  */
-class PrintHtmlAlterEvent extends Event {
+class PrintHtmlAlterEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The HTML string.
diff --git a/src/EventSubscriber/PrintEngineExceptionSubscriber.php b/src/EventSubscriber/PrintEngineExceptionSubscriber.php
index 4794185..cd64ff5 100644
--- a/src/EventSubscriber/PrintEngineExceptionSubscriber.php
+++ b/src/EventSubscriber/PrintEngineExceptionSubscriber.php
@@ -47,11 +47,11 @@ class PrintEngineExceptionSubscriber implements EventSubscriberInterface {
   /**
    * Handles print exceptions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The exception event.
    */
-  public function handleException(GetResponseForExceptionEvent $event) {
-    $exception = $event->getException();
+  public function handleException(\Symfony\Component\HttpKernel\Event\ExceptionEvent $event) {
+    $exception = $event->getThrowable();
     if ($exception instanceof PrintEngineException) {
       \Drupal::messenger()->addError(new FormattableMarkup($exception->getPrettyMessage(), []));
 
diff --git a/src/Plugin/EntityPrintPluginManager.php b/src/Plugin/EntityPrintPluginManager.php
index b7e83f7..bfcd3f6 100644
--- a/src/Plugin/EntityPrintPluginManager.php
+++ b/src/Plugin/EntityPrintPluginManager.php
@@ -159,7 +159,7 @@ class EntityPrintPluginManager extends DefaultPluginManager implements EntityPri
     }
     $configuration = $entity->getSettings();
     $event = new GenericEvent(PrintEvents::CONFIGURATION_ALTER, ['configuration' => $configuration, 'config' => $entity]);
-    $this->dispatcher->dispatch(PrintEvents::CONFIGURATION_ALTER, $event);
+    $this->dispatcher->dispatch($event, PrintEvents::CONFIGURATION_ALTER);
     $configuration = $event->getArgument('configuration');
 
     return $configuration;
diff --git a/src/PrintBuilder.php b/src/PrintBuilder.php
index 972af13..6e0b172 100644
--- a/src/PrintBuilder.php
+++ b/src/PrintBuilder.php
@@ -56,7 +56,7 @@ class PrintBuilder implements PrintBuilderInterface {
     $renderer = $this->prepareRenderer($entities, $print_engine, $use_default_css);
 
     // Allow other modules to alter the generated Print object.
-    $this->dispatcher->dispatch(PrintEvents::PRE_SEND, new PreSendPrintEvent($print_engine, $entities));
+    $this->dispatcher->dispatch(new PreSendPrintEvent($print_engine, $entities), PrintEvents::PRE_SEND);
 
     // Calculate the filename.
     $filename = $renderer->getFilename($entities) . '.' . $print_engine->getExportType()->getFileExtension();
@@ -87,7 +87,7 @@ class PrintBuilder implements PrintBuilderInterface {
     $renderer = $this->prepareRenderer($entities, $print_engine, $use_default_css);
 
     // Allow other modules to alter the generated Print object.
-    $this->dispatcher->dispatch(PrintEvents::PRE_SEND, new PreSendPrintEvent($print_engine, $entities));
+    $this->dispatcher->dispatch(new PreSendPrintEvent($print_engine, $entities), PrintEvents::PRE_SEND);
 
     // If we didn't have a URI passed in the generate one.
     if (!$filename) {
diff --git a/src/Renderer/RendererBase.php b/src/Renderer/RendererBase.php
index 2eb19c1..568786a 100644
--- a/src/Renderer/RendererBase.php
+++ b/src/Renderer/RendererBase.php
@@ -91,7 +91,7 @@ abstract class RendererBase implements RendererInterface, EntityHandlerInterface
     });
 
     // Allow other modules to alter the generated HTML.
-    $this->dispatcher->dispatch(PrintEvents::POST_RENDER, new PrintHtmlAlterEvent($html, $entities));
+    $this->dispatcher->dispatch(new PrintHtmlAlterEvent($html, $entities), PrintEvents::POST_RENDER);
 
     return $html;
   }
