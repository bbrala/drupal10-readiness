[parsing] modules/contrib/simple_facebook_pixel/simple_facebook_pixel.api.php
[refactoring] modules/contrib/simple_facebook_pixel/simple_facebook_pixel.api.php
[post rectors] modules/contrib/simple_facebook_pixel/simple_facebook_pixel.api.php
[print] modules/contrib/simple_facebook_pixel/simple_facebook_pixel.api.php
[parsing] modules/contrib/simple_facebook_pixel/simple_facebook_pixel.module
[refactoring] modules/contrib/simple_facebook_pixel/simple_facebook_pixel.module
[post rectors] modules/contrib/simple_facebook_pixel/simple_facebook_pixel.module
[print] modules/contrib/simple_facebook_pixel/simple_facebook_pixel.module
[parsing] modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php
[refactoring] modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php
[post rectors] modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php
[print] modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php
[refactoring] modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php
[post rectors] modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php
[print] modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php
[parsing] modules/contrib/simple_facebook_pixel/src/Form/SimpleFacebookPixelSettingsForm.php
[refactoring] modules/contrib/simple_facebook_pixel/src/Form/SimpleFacebookPixelSettingsForm.php
[post rectors] modules/contrib/simple_facebook_pixel/src/Form/SimpleFacebookPixelSettingsForm.php
[print] modules/contrib/simple_facebook_pixel/src/Form/SimpleFacebookPixelSettingsForm.php
[parsing] modules/contrib/simple_facebook_pixel/src/PageContextService.php
[refactoring] modules/contrib/simple_facebook_pixel/src/PageContextService.php
[post rectors] modules/contrib/simple_facebook_pixel/src/PageContextService.php
[print] modules/contrib/simple_facebook_pixel/src/PageContextService.php
[parsing] modules/contrib/simple_facebook_pixel/src/PageContextServiceInterface.php
[refactoring] modules/contrib/simple_facebook_pixel/src/PageContextServiceInterface.php
[post rectors] modules/contrib/simple_facebook_pixel/src/PageContextServiceInterface.php
[print] modules/contrib/simple_facebook_pixel/src/PageContextServiceInterface.php
[parsing] modules/contrib/simple_facebook_pixel/src/PixelBuilderService.php
[refactoring] modules/contrib/simple_facebook_pixel/src/PixelBuilderService.php
[post rectors] modules/contrib/simple_facebook_pixel/src/PixelBuilderService.php
[print] modules/contrib/simple_facebook_pixel/src/PixelBuilderService.php
[parsing] modules/contrib/simple_facebook_pixel/src/PixelBuilderServiceInterface.php
[refactoring] modules/contrib/simple_facebook_pixel/src/PixelBuilderServiceInterface.php
[post rectors] modules/contrib/simple_facebook_pixel/src/PixelBuilderServiceInterface.php
[print] modules/contrib/simple_facebook_pixel/src/PixelBuilderServiceInterface.php
[parsing] modules/contrib/simple_facebook_pixel/tests/modules/simple_facebook_pixel_test_hooks/simple_facebook_pixel_test_hooks.module
[refactoring] modules/contrib/simple_facebook_pixel/tests/modules/simple_facebook_pixel_test_hooks/simple_facebook_pixel_test_hooks.module
[post rectors] modules/contrib/simple_facebook_pixel/tests/modules/simple_facebook_pixel_test_hooks/simple_facebook_pixel_test_hooks.module
[print] modules/contrib/simple_facebook_pixel/tests/modules/simple_facebook_pixel_test_hooks/simple_facebook_pixel_test_hooks.module
[parsing] modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php
[parsing] modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php
[parsing] modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php
[parsing] modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php
[parsing] modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php
[refactoring] modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php
[post rectors] modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php
[print] modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php

6 files with changes
====================

1) modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->user = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalCreateContentType([
@@ @@
     $edit['excluded_roles[anonymous]'] = TRUE;
     $edit['excluded_roles[authenticated]'] = FALSE;
     $edit['complete_registration_enabled'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->assertEquals(FALSE, $this->config('simple_facebook_pixel.settings')->get('pixel_enabled'));
@@ @@
     $edit['excluded_roles[anonymous]'] = FALSE;
     $edit['excluded_roles[authenticated]'] = TRUE;
     $edit['complete_registration_enabled'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->assertEquals(TRUE, $this->config('simple_facebook_pixel.settings')->get('pixel_enabled'));
@@ @@
     $edit['view_content_entities[node:article]'] = TRUE;
     $edit['view_content_entities[node:page]'] = FALSE;
     $edit['view_content_entities[taxonomy_term:tags]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->assertEquals(TRUE, $this->config('simple_facebook_pixel.settings')->get('pixel_enabled'));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->user = $this->drupalCreateUser([
@@ @@
   public function testFacebookPixelDisabled() {
     $edit['pixel_enabled'] = FALSE;
     $edit['pixel_id'] = '789012';
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '789012';
     $edit['exclude_admin_pages'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '789012';
     $edit['exclude_admin_pages'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
     $this->assertSession()->responseNotContains($pixel_builder->getPixelScriptCode());
   }
@@ @@
   public function testFacebookPixelEnabledForAllUsers() {
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '567123';
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
   public function testMultiFacebookPixelsEnabledForAllUsers() {
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '567123, 985473';
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = TRUE;
     $edit['excluded_roles[authenticated]'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = FALSE;
     $edit['excluded_roles[authenticated]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->drupalGet('<front>');
@@ @@
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = TRUE;
     $edit['excluded_roles[authenticated]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->drupalGet('<front>');
@@ @@
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = FALSE;
     $edit['excluded_roles[authenticated]'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->drupalGet('<front>');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->configFactory = \Drupal::configFactory();
@@ @@

     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, 'Create new account');
-    $this->assertText('A welcome message with further instructions has been sent to your email address.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, 'Create new account');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
@@ @@

     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, 'Create new account');
-    $this->assertText('A welcome message with further instructions has been sent to your email address.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, 'Create new account');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $account = $this->drupalCreateUser([
@@ @@
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '567123';
     $edit['view_content_entities[node:page]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php:97

    ---------- begin diff ----------
@@ @@
   /**
    * Invalidates page cache tags if needed.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();

     if (strpos($response->getContent(), 'CompleteRegistration') !== FALSE) {
@@ @@
   /**
    * Adds AddToCart event.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The add to cart event.
    */
-  public function addToCartEvent(Event $event) {
+  public function addToCartEvent(\Symfony\Contracts\EventDispatcher\Event $event) {
     if ($this->pixelBuilder->isEnabled() && $this->configFactory->get('add_to_cart_enabled')) {
       $product_variation = $event->getEntity();
       $quantity = $event->getQuantity();
@@ @@
   /**
    * Adds AddToWishlist event. Using Commerce Wishlist module.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The add to wishlist event.
    */
-  public function addToWishlist(Event $event) {
+  public function addToWishlist(\Symfony\Contracts\EventDispatcher\Event $event) {
     if ($this->pixelBuilder->isEnabled() && $this->configFactory->get('add_to_wishlist_enabled')) {
       $product_variation = $event->getEntity();
       $quantity = $event->getQuantity();
@@ @@
   /**
    * Adds AddToWishlist event. Using Flag module.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The add to wishlist event.
    */
-  public function addToWishlistFlag(Event $event) {
+  public function addToWishlistFlag(\Symfony\Contracts\EventDispatcher\Event $event) {
     if ($this->pixelBuilder->isEnabled() && $this->configFactory->get('add_to_wishlist_flag_enabled')) {
       $enabled_flags = array_filter(array_values($this->configFactory->get('add_to_wishlist_flag_list')));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 6 files have been changed by Rector                                       

