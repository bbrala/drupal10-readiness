[parsing] modules/contrib/image_popup/image_popup.module
[refactoring] modules/contrib/image_popup/image_popup.module
[post rectors] modules/contrib/image_popup/image_popup.module
[print] modules/contrib/image_popup/image_popup.module
[parsing] modules/contrib/image_popup/src/Controller/ImagePopup.php
[refactoring] modules/contrib/image_popup/src/Controller/ImagePopup.php
[post rectors] modules/contrib/image_popup/src/Controller/ImagePopup.php
[print] modules/contrib/image_popup/src/Controller/ImagePopup.php
[refactoring] modules/contrib/image_popup/src/Controller/ImagePopup.php
[post rectors] modules/contrib/image_popup/src/Controller/ImagePopup.php
[print] modules/contrib/image_popup/src/Controller/ImagePopup.php
[parsing] modules/contrib/image_popup/src/Form/EditorImagePopupDialog.php
[refactoring] modules/contrib/image_popup/src/Form/EditorImagePopupDialog.php
[post rectors] modules/contrib/image_popup/src/Form/EditorImagePopupDialog.php
[print] modules/contrib/image_popup/src/Form/EditorImagePopupDialog.php
[refactoring] modules/contrib/image_popup/src/Form/EditorImagePopupDialog.php
[post rectors] modules/contrib/image_popup/src/Form/EditorImagePopupDialog.php
[print] modules/contrib/image_popup/src/Form/EditorImagePopupDialog.php
[parsing] modules/contrib/image_popup/src/Plugin/CKEditorPlugin/ImagePopup.php
[refactoring] modules/contrib/image_popup/src/Plugin/CKEditorPlugin/ImagePopup.php
[post rectors] modules/contrib/image_popup/src/Plugin/CKEditorPlugin/ImagePopup.php
[print] modules/contrib/image_popup/src/Plugin/CKEditorPlugin/ImagePopup.php
[refactoring] modules/contrib/image_popup/src/Plugin/CKEditorPlugin/ImagePopup.php
[post rectors] modules/contrib/image_popup/src/Plugin/CKEditorPlugin/ImagePopup.php
[print] modules/contrib/image_popup/src/Plugin/CKEditorPlugin/ImagePopup.php
[parsing] modules/contrib/image_popup/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
[refactoring] modules/contrib/image_popup/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
[post rectors] modules/contrib/image_popup/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
[print] modules/contrib/image_popup/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
[refactoring] modules/contrib/image_popup/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
[post rectors] modules/contrib/image_popup/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
[print] modules/contrib/image_popup/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php

4 files with changes
====================

1) modules/contrib/image_popup/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php:270

    ---------- begin diff ----------
@@ @@
       }
       else {
         // Get absolute path for original image.
-        $absolute_path = Url::fromUri(file_create_url($image_uri))->getUri();
+        $absolute_path = \Drupal::service('file_url_generator')->generate($image_uri)->getUri();
       }

       // Create a url query to tell the controller how to build the modal.
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/image_popup/src/Plugin/CKEditorPlugin/ImagePopup.php:28

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'image_popup') . '/js/plugins/imagepopup/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('image_popup') . '/js/plugins/imagepopup/plugin.js';
   }

   /**
@@ @@
     return [
       'ImagePopup' => [
         'label' => $this->t('Image Popup'),
-        'image' => drupal_get_path('module', 'image_popup') . '/js/plugins/imagepopup/icons/imagepopup.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('image_popup') . '/js/plugins/imagepopup/icons/imagepopup.png',
       ],
     ];
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/image_popup/src/Form/EditorImagePopupDialog.php:232

    ---------- begin diff ----------
@@ @@
     $fid = $form_state->getValue(['fid', 0]);
     if (!empty($fid)) {
       $file = $this->entityTypeManager->getStorage('file')->load($fid);
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       // Transform absolute image URLs to relative image URLs: prevent problems
       // on multisite set-ups and prevent mixed content errors.
-      $file_url = file_url_transform_relative($file_url);
+      $file_url = \Drupal::service('file_url_generator')->transformRelative($file_url);
       $form_state->setValue(['attributes', 'src'], $file_url);
       $form_state->setValue(['attributes', 'data-entity-uuid'], $file->uuid());
       $form_state->setValue(['attributes', 'data-entity-type'], 'file');
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/image_popup/src/Controller/ImagePopup.php:35

    ---------- begin diff ----------
@@ @@
     }
     else {
       // Get absolute path for original image.
-      $absolute_path = Url::fromUri(file_create_url($image_uri))->getUri();
+      $absolute_path = \Drupal::service('file_url_generator')->generate($image_uri)->getUri();
     }

     $response = new AjaxResponse();
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

