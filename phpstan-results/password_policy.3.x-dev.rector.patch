diff --git a/password_policy_character_types/tests/src/Unit/CharacterTypesTest.php b/password_policy_character_types/tests/src/Unit/CharacterTypesTest.php
index 213fede..4c010f0 100644
--- a/password_policy_character_types/tests/src/Unit/CharacterTypesTest.php
+++ b/password_policy_character_types/tests/src/Unit/CharacterTypesTest.php
@@ -24,7 +24,7 @@ class CharacterTypesTest extends UnitTestCase {
     $character_types
       ->method('getConfiguration')
       ->willReturn(['character_types' => $types]);
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $this->assertEquals($character_types->validate($password, $user)->isValid(), $result);
   }
 
diff --git a/password_policy_characters/tests/src/Unit/CharactersTest.php b/password_policy_characters/tests/src/Unit/CharactersTest.php
index 722ed54..d0039ff 100644
--- a/password_policy_characters/tests/src/Unit/CharactersTest.php
+++ b/password_policy_characters/tests/src/Unit/CharactersTest.php
@@ -24,7 +24,7 @@ class CharactersTest extends UnitTestCase {
     $characters
       ->method('getConfiguration')
       ->willReturn(['character_count' => $count, 'character_type' => $type]);
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $this->assertEquals($characters->validate($password, $user)->isValid(), $result);
   }
 
diff --git a/password_policy_consecutive/tests/src/Unit/ConsecutiveCharactersTest.php b/password_policy_consecutive/tests/src/Unit/ConsecutiveCharactersTest.php
index e12eede..883558e 100644
--- a/password_policy_consecutive/tests/src/Unit/ConsecutiveCharactersTest.php
+++ b/password_policy_consecutive/tests/src/Unit/ConsecutiveCharactersTest.php
@@ -24,7 +24,7 @@ class ConsecutiveCharactersTest extends UnitTestCase {
     $characters
       ->method('getConfiguration')
       ->willReturn(['max_consecutive_characters' => $count]);
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $this->assertEquals($characters->validate($password, $user)->isValid(), $result);
   }
 
diff --git a/password_policy_length/tests/src/Unit/PasswordLengthTest.php b/password_policy_length/tests/src/Unit/PasswordLengthTest.php
index a896fdc..95e9b2c 100644
--- a/password_policy_length/tests/src/Unit/PasswordLengthTest.php
+++ b/password_policy_length/tests/src/Unit/PasswordLengthTest.php
@@ -27,7 +27,7 @@ class PasswordLengthTest extends UnitTestCase {
         'character_length' => $length,
         'character_operation' => $operation,
       ]);
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $this->assertEquals($characters->validate($password, $user)->isValid(), $result);
   }
 
diff --git a/password_policy_username/tests/src/Unit/PasswordUsernameTest.php b/password_policy_username/tests/src/Unit/PasswordUsernameTest.php
index 2931214..e5a6e00 100644
--- a/password_policy_username/tests/src/Unit/PasswordUsernameTest.php
+++ b/password_policy_username/tests/src/Unit/PasswordUsernameTest.php
@@ -34,7 +34,7 @@ class PasswordUsernameTest extends UnitTestCase {
    * Provides data for the testPasswordUsername method.
    */
   public function passwordUsernameDataProvider() {
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $user->method('getAccountName')->willReturn('username');
 
     return [
