diff --git a/website_toolbox_forum.info.yml b/website_toolbox_forum.info.yml
index dae267c..441e8aa 100644
--- a/website_toolbox_forum.info.yml
+++ b/website_toolbox_forum.info.yml
@@ -2,8 +2,7 @@ name: 'Website Toolbox Forum'
 type: module
 description: 'Cloud-based Forum Module. <br />Your Drupal forum doesnâ€™t need to be basic. Website Toolbox is a cloud-based forum module that allows <br />you to easily add a powerful, intuitive, and maintenance-free forum to Drupal without slowing it down. No database, servers, or coding required.'
 package: Custom
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: website_toolbox_forum.sync
 
 # Information added by Drupal.org packaging script on 2021-04-13
diff --git a/website_toolbox_forum.module b/website_toolbox_forum.module
index 79f8fd9..9b42379 100644
--- a/website_toolbox_forum.module
+++ b/website_toolbox_forum.module
@@ -87,14 +87,14 @@ function website_toolbox_forum_user_insert(Drupal\Core\Entity\EntityInterface $e
     );        
     $user = \Drupal\user\Entity\User::load($entity->id());
     if(!$user->user_picture->isEmpty()){
-      $avatarUrl = file_create_url($user->user_picture->entity->getFileUri());
+      $avatarUrl = \Drupal::service('file_url_generator')->generateAbsoluteString($user->user_picture->entity->getFileUri());
     }
     $forumsApiKey = \Drupal::config('node.settings')->get('forum_api_key') ;
     $forumUrl     = \Drupal::config('node.settings')->get('forum_url'); 
     $URL          = $forumUrl . "/register/create_account/";
     $request = \Drupal::httpClient()->post($URL, ['verify' => true,'form_params' => ['apikey' => $forumsApiKey,'member' => $username,'email' => $email,'externalUserid' => $userId,"avatarUrl" => $avatarUrl,]])->getBody()->getContents();      
     if (!$request) {
-        drupal_set_message($result->error);
+        \Drupal::messenger()->addStatus($result->error);
         die();
     }
     drupal_static_reset();
@@ -113,7 +113,7 @@ function website_toolbox_forum_user_update(Drupal\Core\Entity\EntityInterface $e
   $externalUserid = $entity->id();
   $user = \Drupal\user\Entity\User::load($entity->id());
   if(!$user->user_picture->isEmpty()){
-    $avatarUrl = file_create_url($user->user_picture->entity->getFileUri());
+    $avatarUrl = \Drupal::service('file_url_generator')->generateAbsoluteString($user->user_picture->entity->getFileUri());
   }
   $email = $entity->getEmail();
   $userDetails = array("email" => $email,
