[parsing] modules/contrib/periodic/periodic.install
[refactoring] modules/contrib/periodic/periodic.install
[post rectors] modules/contrib/periodic/periodic.install
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/periodic.install
[parsing] modules/contrib/periodic/periodic.module
[refactoring] modules/contrib/periodic/periodic.module
[post rectors] modules/contrib/periodic/periodic.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/periodic.module
[refactoring] modules/contrib/periodic/periodic.module
[post rectors] modules/contrib/periodic/periodic.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/periodic.module
[parsing] modules/contrib/periodic/src/Event/PeriodicEvent.php
[refactoring] modules/contrib/periodic/src/Event/PeriodicEvent.php
[post rectors] modules/contrib/periodic/src/Event/PeriodicEvent.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/src/Event/PeriodicEvent.php
[refactoring] modules/contrib/periodic/src/Event/PeriodicEvent.php
[post rectors] modules/contrib/periodic/src/Event/PeriodicEvent.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/src/Event/PeriodicEvent.php
[parsing] modules/contrib/periodic/src/PeriodicEvents.php
[refactoring] modules/contrib/periodic/src/PeriodicEvents.php
[post rectors] modules/contrib/periodic/src/PeriodicEvents.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/src/PeriodicEvents.php
[parsing] modules/contrib/periodic/src/PeriodicManager.php
[refactoring] modules/contrib/periodic/src/PeriodicManager.php
[post rectors] modules/contrib/periodic/src/PeriodicManager.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/src/PeriodicManager.php
[parsing] modules/contrib/periodic/tests/src/Functional/CronTest.php
[refactoring] modules/contrib/periodic/tests/src/Functional/CronTest.php
[post rectors] modules/contrib/periodic/tests/src/Functional/CronTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/tests/src/Functional/CronTest.php
[parsing] modules/contrib/periodic/tests/src/Unit/CronTest.php
[refactoring] modules/contrib/periodic/tests/src/Unit/CronTest.php
[post rectors] modules/contrib/periodic/tests/src/Unit/CronTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/tests/src/Unit/CronTest.php
[refactoring] modules/contrib/periodic/tests/src/Unit/CronTest.php
[post rectors] modules/contrib/periodic/tests/src/Unit/CronTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/tests/src/Unit/CronTest.php
[parsing] modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php
[refactoring] modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php
[post rectors] modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php
[refactoring] modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php
[post rectors] modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php

4 files with changes
====================

1) modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php:43

    ---------- begin diff ----------
@@ @@
   public function setUp(): void {
     parent::setUp();

-    $this->time = $this->getMockBuilder(Time::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->time = $this->createMock(Time::class);
     $this->time->expects($this->any())
       ->method('getRequestTime')
       ->willReturn(946684800);

-    $this->state = $this->getMockBuilder(State::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->state = $this->createMock(State::class);

     $this->manager = new PeriodicManager($this->state, $this->time);
   }
@@ @@

   /**
    * Resetting a task should set its timestamp to zero.
+   * @doesNotPerformAssertions
    */
   public function testResetTask() {
     $this->state->expects($this->once())
@@ @@

   /**
    * Removing a task should unset its timestamp.
+   * @doesNotPerformAssertions
    */
   public function testRemoveTask() {
     $this->state->expects($this->once())
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * GetMockBuilderGetMockToCreateMockRector


2) modules/contrib/periodic/tests/src/Unit/CronTest.php:18

    ---------- begin diff ----------
@@ @@
  */
 class CronTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Mocked Event Dispatcher.
    *
@@ @@

   /**
    * Cron hook should dispatch events that have passed their interval.
+   * @doesNotPerformAssertions
    */
   public function testCron() {
     $this->periodicManager
@@ @@
       });

     $this->eventDispatcher
-      ->dispatch(PeriodicEvents::HOUR, Argument::type(Event::class))
+      ->dispatch(PeriodicEvents::HOUR, Argument::type(\Symfony\Contracts\EventDispatcher\Event::class))
       ->shouldNotBeCalled();
     $this->eventDispatcher
-      ->dispatch(PeriodicEvents::DAY, Argument::type(Event::class))
+      ->dispatch(PeriodicEvents::DAY, Argument::type(\Symfony\Contracts\EventDispatcher\Event::class))
       ->shouldBeCalled();
     $this->eventDispatcher
-      ->dispatch(PeriodicEvents::WEEK, Argument::type(Event::class))
+      ->dispatch(PeriodicEvents::WEEK, Argument::type(\Symfony\Contracts\EventDispatcher\Event::class))
       ->shouldBeCalled();
     $this->eventDispatcher
-      ->dispatch(PeriodicEvents::MONTH, Argument::type(Event::class))
+      ->dispatch(PeriodicEvents::MONTH, Argument::type(\Symfony\Contracts\EventDispatcher\Event::class))
       ->shouldBeCalled();

     periodic_cron();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * AddProphecyTraitRector
 * RenameClassRector


3) modules/contrib/periodic/src/Event/PeriodicEvent.php:6

    ---------- begin diff ----------
@@ @@
 /**
  * Event for periodic tasks.
  */
-class PeriodicEvent extends Event {
+class PeriodicEvent extends \Symfony\Contracts\EventDispatcher\Event {

   public const INTERVAL_HOUR = 3600;
   public const INTERVAL_DAY = 86400;
    ----------- end diff -----------

Applied rules:
 * RenameClassRector


4) modules/contrib/periodic/periodic.module:28

    ---------- begin diff ----------
@@ @@
       // Argument order is set for compatibility with Drupal 8.9.
       // Will be updated when compatibility is updated to ^9.1.
       // @see https://www.drupal.org/node/3154407
-      $eventDispatcher->dispatch($name, new PeriodicEvent());
+      $eventDispatcher->dispatch(new PeriodicEvent(), $name);
     }
   }
 }
    ----------- end diff -----------

Applied rules:
 * MakeDispatchFirstArgumentEventRector


 [OK] 4 files have been changed by Rector                                       

