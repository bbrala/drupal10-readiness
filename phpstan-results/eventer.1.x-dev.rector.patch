diff --git a/src/Decorator/ModuleHandlerDecorator.php b/src/Decorator/ModuleHandlerDecorator.php
index a2e3079..94f7cde 100644
--- a/src/Decorator/ModuleHandlerDecorator.php
+++ b/src/Decorator/ModuleHandlerDecorator.php
@@ -78,7 +78,7 @@ class ModuleHandlerDecorator extends ModuleHandler {
     // This allow an easiest debugging.
     $eventParam->setKey(EventerEvents::MODULE_HOOK . $module . '.' . $hook);
     /** @var \Drupal\eventer\Event\HookEvent $event */
-    $event = $this->eventDispatcher->dispatch($eventParam->getKey(), $eventParam);
+    $event = $this->eventDispatcher->dispatch($eventParam, $eventParam->getKey());
     return $event->getResult();
   }
 
@@ -98,7 +98,7 @@ class ModuleHandlerDecorator extends ModuleHandler {
       // This allow an easiest debugging.
       $eventParam->setKey(EventerEvents::MODULE_HOOK . $module . '.' . $hook);
       /** @var \Drupal\eventer\Event\HookEvent $event */
-      $event = $this->eventDispatcher->dispatch($eventParam->getKey(), $eventParam);
+      $event = $this->eventDispatcher->dispatch($eventParam, $eventParam->getKey());
       $result = $event->getResult();
       if (isset($result) && is_array($result)) {
         $return = NestedArray::mergeDeep($return, $result);
@@ -112,7 +112,7 @@ class ModuleHandlerDecorator extends ModuleHandler {
     // This allow an easiest debugging.
     $eventParam->setKey(EventerEvents::MODULE_HOOK . $hook);
     /** @var \Drupal\eventer\Event\HookEvent $event */
-    $event = $this->eventDispatcher->dispatch($eventParam->getKey(), $eventParam);
+    $event = $this->eventDispatcher->dispatch($eventParam, $eventParam->getKey());
     $result = $event->getResult();
     if (isset($result) && is_array($result)) {
       $return = NestedArray::mergeDeep($return, $result);
diff --git a/src/Decorator/ThemeManagerDecorator.php b/src/Decorator/ThemeManagerDecorator.php
index 0e8b4aa..7abf79a 100644
--- a/src/Decorator/ThemeManagerDecorator.php
+++ b/src/Decorator/ThemeManagerDecorator.php
@@ -119,7 +119,7 @@ class ThemeManagerDecorator extends ThemeManager {
       // This allow an easiest debugging.
       $eventParam->setKey($eventName);
       /** @var \Drupal\eventer\Event\AlterEvent $event */
-      $event = $this->eventDispatcher->dispatch($eventName, $eventParam);
+      $event = $this->eventDispatcher->dispatch($eventParam, $eventName);
       $data = $event->getData();
       $context1 = $event->getContext1();
       $context2 = $event->getContext2();
diff --git a/src/Event/AlterEvent.php b/src/Event/AlterEvent.php
index e08abea..717063b 100644
--- a/src/Event/AlterEvent.php
+++ b/src/Event/AlterEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Defines an alter call replacement event.
  */
-class AlterEvent extends Event {
+class AlterEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Event key.
diff --git a/src/Event/HookEvent.php b/src/Event/HookEvent.php
index a76c5b6..6497c46 100644
--- a/src/Event/HookEvent.php
+++ b/src/Event/HookEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Defines an hook call replacement event.
  */
-class HookEvent extends Event {
+class HookEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Event key.
