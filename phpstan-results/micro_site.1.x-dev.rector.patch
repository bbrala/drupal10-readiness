diff --git a/src/EventSubscriber/NodeSubscriber.php b/src/EventSubscriber/NodeSubscriber.php
index 0d4bad3..02e1cce 100644
--- a/src/EventSubscriber/NodeSubscriber.php
+++ b/src/EventSubscriber/NodeSubscriber.php
@@ -79,10 +79,10 @@ class NodeSubscriber implements EventSubscriberInterface {
   /**
    * This method prevent to access to node without a site_id field.
    *
-   * @param GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event object.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $request = $event->getRequest();
 
     // If we've got an exception, nothing to do here.
diff --git a/src/EventSubscriber/Shield.php b/src/EventSubscriber/Shield.php
index 1210cc7..da984d5 100644
--- a/src/EventSubscriber/Shield.php
+++ b/src/EventSubscriber/Shield.php
@@ -58,10 +58,10 @@ class Shield implements EventSubscriberInterface {
    * // only if KernelEvents::REQUEST !!!
    * @see \Symfony\Component\HttpKernel\KernelEvents for details
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The Event to process.
    */
-  public function ShieldLoad(GetResponseEvent $event) {
+  public function ShieldLoad(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     // allow Drush to bypass Shield
     if (PHP_SAPI === 'cli') {
       return;
diff --git a/src/EventSubscriber/SiteRedirectSubscriber.php b/src/EventSubscriber/SiteRedirectSubscriber.php
index 1360831..a3b3c47 100644
--- a/src/EventSubscriber/SiteRedirectSubscriber.php
+++ b/src/EventSubscriber/SiteRedirectSubscriber.php
@@ -89,10 +89,10 @@ class SiteRedirectSubscriber implements EventSubscriberInterface {
   /**
    * This method is called whenever the kernel.request event is dispatched.
    *
-   * @param GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event object.
    */
-  public function onKernelRequestSite(GetResponseEvent $event) {
+  public function onKernelRequestSite(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $request = $event->getRequest();
     $exception = $request->get('exception');
     // If we've got an exception, nothing to do here.
diff --git a/src/EventSubscriber/TermSubscriber.php b/src/EventSubscriber/TermSubscriber.php
index 6901471..5a9c88e 100644
--- a/src/EventSubscriber/TermSubscriber.php
+++ b/src/EventSubscriber/TermSubscriber.php
@@ -78,10 +78,10 @@ class TermSubscriber implements EventSubscriberInterface {
   /**
    * This method prevent to access to node without a site_id field.
    *
-   * @param GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event object.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $request = $event->getRequest();
 
     // If we've got an exception, nothing to do here.
