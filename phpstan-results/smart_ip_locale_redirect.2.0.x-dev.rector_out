[parsing] modules/contrib/smart_ip_locale_redirect/smart_ip_locale_redirect.module
[refactoring] modules/contrib/smart_ip_locale_redirect/smart_ip_locale_redirect.module
[post rectors] modules/contrib/smart_ip_locale_redirect/smart_ip_locale_redirect.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/smart_ip_locale_redirect/smart_ip_locale_redirect.module
[parsing] modules/contrib/smart_ip_locale_redirect/src/EventSubscriber/RedirectRequestSubscriber.php
[refactoring] modules/contrib/smart_ip_locale_redirect/src/EventSubscriber/RedirectRequestSubscriber.php
[post rectors] modules/contrib/smart_ip_locale_redirect/src/EventSubscriber/RedirectRequestSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/smart_ip_locale_redirect/src/EventSubscriber/RedirectRequestSubscriber.php
[refactoring] modules/contrib/smart_ip_locale_redirect/src/EventSubscriber/RedirectRequestSubscriber.php
[post rectors] modules/contrib/smart_ip_locale_redirect/src/EventSubscriber/RedirectRequestSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/smart_ip_locale_redirect/src/EventSubscriber/RedirectRequestSubscriber.php
[parsing] modules/contrib/smart_ip_locale_redirect/src/Form/AdminForm.php
[refactoring] modules/contrib/smart_ip_locale_redirect/src/Form/AdminForm.php
[post rectors] modules/contrib/smart_ip_locale_redirect/src/Form/AdminForm.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/smart_ip_locale_redirect/src/Form/AdminForm.php
[parsing] modules/contrib/smart_ip_locale_redirect/src/Form/NegotiationIpDeleteForm.php
[refactoring] modules/contrib/smart_ip_locale_redirect/src/Form/NegotiationIpDeleteForm.php
[post rectors] modules/contrib/smart_ip_locale_redirect/src/Form/NegotiationIpDeleteForm.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/smart_ip_locale_redirect/src/Form/NegotiationIpDeleteForm.php
[parsing] modules/contrib/smart_ip_locale_redirect/src/RedirectChecker.php
[refactoring] modules/contrib/smart_ip_locale_redirect/src/RedirectChecker.php
[post rectors] modules/contrib/smart_ip_locale_redirect/src/RedirectChecker.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/smart_ip_locale_redirect/src/RedirectChecker.php

1 file with changes
===================

1) modules/contrib/smart_ip_locale_redirect/src/EventSubscriber/RedirectRequestSubscriber.php:201

    ---------- begin diff ----------
@@ @@
       $update_hl = $request->get('update_hl');
       if (isset($update_hl) && $update_hl != '') {
         $langcode = $update_hl;
-        $cookie = new Cookie('smart_ip_hl', $langcode, time() + $cookie_duration, $cookie_path, $cookie_domain, TRUE);
+        $cookie = \Symfony\Component\HttpFoundation\Cookie::create('smart_ip_hl', $langcode, time() + $cookie_duration, $cookie_path, $cookie_domain, TRUE);
         $response->headers->setCookie($cookie);
       }

@@ @@
             }
           }
         }
-        $cookie = new Cookie('smart_ip_hl', $langcode, time() + $cookie_duration, $cookie_path, $cookie_domain, TRUE);
+        $cookie = \Symfony\Component\HttpFoundation\Cookie::create('smart_ip_hl', $langcode, time() + $cookie_duration, $cookie_path, $cookie_domain, TRUE);
         $response->headers->setCookie($cookie);
       }
    ----------- end diff -----------

Applied rules:
 * NewToStaticCallRector


 [OK] 1 file has been changed by Rector                                         

