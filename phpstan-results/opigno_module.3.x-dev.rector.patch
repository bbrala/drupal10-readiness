diff --git a/ActivityTypes/opigno_tincan_activity/src/Plugin/Field/FieldFormatter/OpignoTincanFieldFormatter.php b/ActivityTypes/opigno_tincan_activity/src/Plugin/Field/FieldFormatter/OpignoTincanFieldFormatter.php
index c3c93b4..07e5ddb 100644
--- a/ActivityTypes/opigno_tincan_activity/src/Plugin/Field/FieldFormatter/OpignoTincanFieldFormatter.php
+++ b/ActivityTypes/opigno_tincan_activity/src/Plugin/Field/FieldFormatter/OpignoTincanFieldFormatter.php
@@ -26,7 +26,7 @@ class OpignoTincanFieldFormatter extends EntityReferenceFormatterBase {
     foreach ($this->getEntitiesToView($items, $langcode) as $delta => $file) {
       $tincan_content_service = \Drupal::service('opigno_tincan_activity.tincan');
       $uri = $tincan_content_service->getExtractPath($file);
-      $url = file_create_url($uri);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
       $package_properties = $tincan_content_service->tincanLoadByFileEntity($file);
       $launch_file = $package_properties->launch_filename;
 
diff --git a/ActivityTypes/opigno_video/src/Plugin/Field/FieldFormatter/OpignoTftFormatter.php b/ActivityTypes/opigno_video/src/Plugin/Field/FieldFormatter/OpignoTftFormatter.php
index df42d6c..8528b62 100644
--- a/ActivityTypes/opigno_video/src/Plugin/Field/FieldFormatter/OpignoTftFormatter.php
+++ b/ActivityTypes/opigno_video/src/Plugin/Field/FieldFormatter/OpignoTftFormatter.php
@@ -126,7 +126,7 @@ class OpignoTftFormatter extends FormatterBase {
       case 'video':
         $source_attributes = new Attribute();
         $source_attributes
-          ->setAttribute('src', file_url_transform_relative(file_create_url($file->getFileUri())))
+          ->setAttribute('src', \Drupal::service('file_url_generator')->generateString($file->getFileUri()))
           ->setAttribute('type', $file->getMimeType());
         $source_file = [
           'file' => $file,
diff --git a/modules/opigno_skills_system/opigno_skills_system.install b/modules/opigno_skills_system/opigno_skills_system.install
index 1c5d579..6572f9c 100644
--- a/modules/opigno_skills_system/opigno_skills_system.install
+++ b/modules/opigno_skills_system/opigno_skills_system.install
@@ -40,7 +40,7 @@ function opigno_skills_system_install($is_syncing) {
  * Implements hook_uninstall().
  */
 function opigno_skills_system_uninstall() {
-  $config_path = drupal_get_path('module', 'opigno_module') . '/config/optional';
+  $config_path = \Drupal::service('extension.list.module')->getPath('opigno_module') . '/config/optional';
 
   $storage = new FileStorage($config_path);
   $config_storage = \Drupal::service('config.storage');
diff --git a/opigno_module.install b/opigno_module.install
index f58e1a7..d821e35 100644
--- a/opigno_module.install
+++ b/opigno_module.install
@@ -339,7 +339,9 @@ function opigno_module_update_9001() {
  * Configs update helper function.
  */
 function _opigno_module_apply_update($type, $name, $path, $ymls) {
-  $theme_path = sprintf("%s/%s/", drupal_get_path($type, $name), $path);
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+  $theme_path = sprintf("%s/%s/", \Drupal::service('extension.path.resolver')->getPath($type, $name), $path);
   $config_factory = \Drupal::configFactory();
   $config_storage = \Drupal::service('config.storage');
   $configs = [];
diff --git a/opigno_module.module b/opigno_module.module
index d9c81a2..0ccb195 100644
--- a/opigno_module.module
+++ b/opigno_module.module
@@ -788,7 +788,7 @@ function opigno_module_preprocess_page(&$variables) {
     if ($gid = OpignoGroupContext::getCurrentGroupId()) {
       if ($group = \Drupal::entityTypeManager()->getStorage('group')->load($gid)) {
         $home_link = Link::createFromRoute(t('home'), 'entity.group.canonical', ['group' => $group->id()], ['attributes' => ['class' => ['w-100']]])->toRenderable();
-        $variables['home_link'] = render($home_link);
+        $variables['home_link'] = \Drupal::service('renderer')->render($home_link);
       }
     }
 
@@ -854,8 +854,8 @@ function opigno_module_page_top(array &$page_top) {
     $temporary_file_path = 'public://' . $h5p_default_path . '/temp/' . uniqid('h5p-');
     \Drupal::service('file_system')->prepareDirectory($temporary_file_path, FileSystemInterface::MODIFY_PERMISSIONS | FileSystemInterface::CREATE_DIRECTORY);
     // Load libraries.h5p.
-    $file_content = file_get_contents(drupal_get_path("module", "opigno_module") . "/h5plib/libraries.h5p");
-    $file = file_save_data($file_content, $temporary_file_path . '.h5p', FileSystemInterface::EXISTS_REPLACE);
+    $file_content = file_get_contents(\Drupal::service('extension.list.module')->getPath("opigno_module") . "/h5plib/libraries.h5p");
+    $file = \Drupal::service('file.repository')->writeData($file_content, $temporary_file_path . '.h5p', FileSystemInterface::EXISTS_REPLACE);
     if ($file) {
       $uri = $file->getFileUri();
       $interface->getUploadedH5pPath(\Drupal::service('file_system')->realpath($uri));
diff --git a/src/Controller/OpignoModuleManagerController.php b/src/Controller/OpignoModuleManagerController.php
index bf5249d..4e9741d 100644
--- a/src/Controller/OpignoModuleManagerController.php
+++ b/src/Controller/OpignoModuleManagerController.php
@@ -122,7 +122,7 @@ class OpignoModuleManagerController extends ControllerBase {
     if (!empty($_POST['data'])) {
       $data = self::jsonDecodeValidated($_POST['data']);
       $schema = json_decode(file_get_contents(
-        drupal_get_path('module', 'opigno_module') . '/json-schema/schema.json'
+        \Drupal::service('extension.list.module')->getPath('opigno_module') . '/json-schema/schema.json'
       ));
 
       if (empty($data)) {
diff --git a/src/EventSubscriber/QueryPathEventSubscriber.php b/src/EventSubscriber/QueryPathEventSubscriber.php
index 4ffd374..9bf1e09 100644
--- a/src/EventSubscriber/QueryPathEventSubscriber.php
+++ b/src/EventSubscriber/QueryPathEventSubscriber.php
@@ -11,7 +11,7 @@ use Symfony\Component\HttpKernel\KernelEvents;
 class QueryPathEventSubscriber implements EventSubscriberInterface {
 
   // Remember query string (with table sort) as session variable and reload page with it
-  public function checkRedirection(FilterResponseEvent $event) {
+  public function checkRedirection(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     // Add new routes for enable logic
     $available_routes = [
       'entity.opigno_activity.collection',
diff --git a/src/Form/OpignoActivityForm.php b/src/Form/OpignoActivityForm.php
index 196da26..ba0a92e 100644
--- a/src/Form/OpignoActivityForm.php
+++ b/src/Form/OpignoActivityForm.php
@@ -315,7 +315,7 @@ class OpignoActivityForm extends ContentEntityForm {
       $filename_new = preg_replace('/[^a-zA-Z0-9-_\.]/', '-', $filename);
       $file->setFilename($filename_new);
       $file->save();
-      file_move($file, $stream_wrapper . '://' . $filename_new);
+      \Drupal::service('file.repository')->move($file, $stream_wrapper . '://' . $filename_new);
     }
   }
 }
diff --git a/src/Plugin/Block/LearningPathProgressBlock.php b/src/Plugin/Block/LearningPathProgressBlock.php
index 2c6bff7..389f9ca 100644
--- a/src/Plugin/Block/LearningPathProgressBlock.php
+++ b/src/Plugin/Block/LearningPathProgressBlock.php
@@ -36,14 +36,14 @@ class LearningPathProgressBlock extends BlockBase {
     if ($gid = OpignoGroupContext::getCurrentGroupId()) {
       if ($group = \Drupal::entityTypeManager()->getStorage('group')->load($gid)) {
         $home_link = Link::createFromRoute(t('home'), 'entity.group.canonical', ['group' => $group->id()], ['attributes' => ['class' => ['w-100']]])->toRenderable();
-        $home_link = render($home_link);
+        $home_link = \Drupal::service('renderer')->render($home_link);
       }
     }
 
     if ($user && isset($group)) {
       $progress_service = \Drupal::service('opigno_learning_path.progress');
       $progress = $progress_service->getProgressAjaxContainer($gid, $user->id(), '', 'module-page');
-      $progress = render($progress);
+      $progress = \Drupal::service('renderer')->render($progress);
     }
 
     $build = [
