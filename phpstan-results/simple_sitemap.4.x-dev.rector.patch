diff --git a/modules/simple_sitemap_views/src/EventSubscriber/ArgumentCollector.php b/modules/simple_sitemap_views/src/EventSubscriber/ArgumentCollector.php
index 67563a3..9d31170 100755
--- a/modules/simple_sitemap_views/src/EventSubscriber/ArgumentCollector.php
+++ b/modules/simple_sitemap_views/src/EventSubscriber/ArgumentCollector.php
@@ -62,10 +62,10 @@ class ArgumentCollector implements EventSubscriberInterface {
   /**
    * Collect information about views arguments.
    *
-   * @param \Symfony\Component\HttpKernel\Event\PostResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\TerminateEvent $event
    *   Object of event after a response was sent.
    */
-  public function onTerminate(PostResponseEvent $event) {
+  public function onTerminate(\Symfony\Component\HttpKernel\Event\TerminateEvent $event) {
     // Only successful requests are interesting.
     // Collect information about arguments only if views support is enabled.
     if (!$event->getResponse()->isSuccessful() || !$this->sitemapViews->isEnabled()) {
diff --git a/tests/src/Functional/SimplesitemapTest.php b/tests/src/Functional/SimplesitemapTest.php
index 03944b2..44f6f5a 100644
--- a/tests/src/Functional/SimplesitemapTest.php
+++ b/tests/src/Functional/SimplesitemapTest.php
@@ -526,6 +526,7 @@ class SimplesitemapTest extends SimplesitemapTestBase {
 
   /**
    * Tests that a page does not break if an entity has its id set.
+   * @doesNotPerformAssertions
    */
   public function testNewEntityWithIdSet() {
     $new_node = Node::create([
