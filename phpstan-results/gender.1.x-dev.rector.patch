diff --git a/gender.info.yml b/gender.info.yml
index 8ad8db5..0c01a34 100644
--- a/gender.info.yml
+++ b/gender.info.yml
@@ -2,6 +2,6 @@ name: Gender
 type: module
 description: 'A textfield with associated data to collect gender information from users'
 package: Fields
-core_version_requirement: ^8.9 || ^9
+core_version_requirement: ^8.9 || ^9 || ^10
 dependencies:
   - drupal:options
diff --git a/gender.module b/gender.module
index 9a68691..aeaab62 100644
--- a/gender.module
+++ b/gender.module
@@ -202,7 +202,7 @@ function gender_modules_installed($modules) {
     $messenger->addMessage(
       t(
         'Please read the <a href="@url">help page</a> for the Gender module.',
-        ['@url' => \Drupal::url('help.page', ['name' => 'gender'])]
+        ['@url' => \Drupal\Core\Url::fromRoute('help.page', ['name' => 'gender'])->toString()]
       )
     );
   }
diff --git a/src/Plugin/Field/FieldType/Gender.php b/src/Plugin/Field/FieldType/Gender.php
index e194567..c5ce679 100644
--- a/src/Plugin/Field/FieldType/Gender.php
+++ b/src/Plugin/Field/FieldType/Gender.php
@@ -86,7 +86,7 @@ class Gender extends ListItemBase {
    * {@inheritdoc}
    */
   protected static function validateAllowedValue($option) {
-    if (Unicode::strlen($option) > 255) {
+    if (mb_strlen($option) > 255) {
       return t('Allowed values list: each key must be a string at most 255 characters long.');
     }
   }
diff --git a/tests/src/Functional/GenderInstallTest.php b/tests/src/Functional/GenderInstallTest.php
index 69a6fc4..1c81167 100644
--- a/tests/src/Functional/GenderInstallTest.php
+++ b/tests/src/Functional/GenderInstallTest.php
@@ -35,7 +35,7 @@ class GenderInstallTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in the user.
     $this->user = $this->drupalCreateUser([
@@ -54,8 +54,8 @@ class GenderInstallTest extends BrowserTestBase {
     $this->getSession()->getPage()->checkField('edit-modules-gender-enable');
     $this->getSession()->getPage()->findButton('Install')->click();
     // Verify that the install message appears.
-    $this->assertPattern('/consult the .{0,100}help page/');
-    $this->assertLinkByHref(\Drupal::url('help.page', ['name' => 'gender']));
+    $this->assertSession()->responseMatches('/consult the .{0,100}help page/');
+    $this->assertSession()->linkByHrefExists(\Drupal\Core\Url::fromRoute('help.page', ['name' => 'gender'])->toString());
   }
 
 }
diff --git a/tests/src/Functional/GenderTestBase.php b/tests/src/Functional/GenderTestBase.php
index 12497b4..32940d2 100644
--- a/tests/src/Functional/GenderTestBase.php
+++ b/tests/src/Functional/GenderTestBase.php
@@ -53,7 +53,7 @@ abstract class GenderTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create and log in the user.
     $this->user = $this->createUser([
diff --git a/tests/src/Functional/HelpFieldTest.php b/tests/src/Functional/HelpFieldTest.php
index a9df751..849f7d6 100644
--- a/tests/src/Functional/HelpFieldTest.php
+++ b/tests/src/Functional/HelpFieldTest.php
@@ -68,7 +68,7 @@ class HelpFieldTest extends GenderTestBase {
     $description_text = $this->getTextFromElement(self::DESCRIPTION_ELEMENT_SELECTOR);
     // Assert that the description text has been modified by adding the new
     // text.
-    $this->assertContains(self::NEW_HELP_TEXT, $description_text);
+    $this->assertStringContainsString(self::NEW_HELP_TEXT, $description_text);
     // Find the help text field itself.
     $help_text_field = $this->assertSession()->elementExists('css', self::HELP_FIELD_ELEMENT_SELECTOR);
     // Assert that the field is required.
@@ -88,7 +88,7 @@ class HelpFieldTest extends GenderTestBase {
     // Get the text from the description element.
     $description_text = $this->getTextFromElement(self::DESCRIPTION_ELEMENT_SELECTOR);
     // Assert that the description text has not been modified.
-    $this->assertNotContains(self::NEW_HELP_TEXT, $description_text);
+    $this->assertStringNotContainsString(self::NEW_HELP_TEXT, $description_text);
     // Find the help text field itself.
     $help_text_field = $this->assertSession()->elementExists('css', self::HELP_FIELD_ELEMENT_SELECTOR);
     // Assert that the field is required.
