[parsing] modules/contrib/replicate/replicate.api.php
[refactoring] modules/contrib/replicate/replicate.api.php
[post rectors] modules/contrib/replicate/replicate.api.php
[print] modules/contrib/replicate/replicate.api.php
[parsing] modules/contrib/replicate/replicate.drush.inc
[refactoring] modules/contrib/replicate/replicate.drush.inc
[post rectors] modules/contrib/replicate/replicate.drush.inc
[print] modules/contrib/replicate/replicate.drush.inc
[parsing] modules/contrib/replicate/replicate.module
[refactoring] modules/contrib/replicate/replicate.module
[post rectors] modules/contrib/replicate/replicate.module
[print] modules/contrib/replicate/replicate.module
[parsing] modules/contrib/replicate/src/EventSubscriber/ReplicatePathFieldSubscriber.php
[refactoring] modules/contrib/replicate/src/EventSubscriber/ReplicatePathFieldSubscriber.php
[post rectors] modules/contrib/replicate/src/EventSubscriber/ReplicatePathFieldSubscriber.php
[print] modules/contrib/replicate/src/EventSubscriber/ReplicatePathFieldSubscriber.php
[parsing] modules/contrib/replicate/src/Events/AfterSaveEvent.php
[refactoring] modules/contrib/replicate/src/Events/AfterSaveEvent.php
[post rectors] modules/contrib/replicate/src/Events/AfterSaveEvent.php
[print] modules/contrib/replicate/src/Events/AfterSaveEvent.php
[parsing] modules/contrib/replicate/src/Events/ReplicateAlterEvent.php
[refactoring] modules/contrib/replicate/src/Events/ReplicateAlterEvent.php
[post rectors] modules/contrib/replicate/src/Events/ReplicateAlterEvent.php
[print] modules/contrib/replicate/src/Events/ReplicateAlterEvent.php
[parsing] modules/contrib/replicate/src/Events/ReplicateEntityEvent.php
[refactoring] modules/contrib/replicate/src/Events/ReplicateEntityEvent.php
[post rectors] modules/contrib/replicate/src/Events/ReplicateEntityEvent.php
[print] modules/contrib/replicate/src/Events/ReplicateEntityEvent.php
[parsing] modules/contrib/replicate/src/Events/ReplicateEntityFieldEvent.php
[refactoring] modules/contrib/replicate/src/Events/ReplicateEntityFieldEvent.php
[post rectors] modules/contrib/replicate/src/Events/ReplicateEntityFieldEvent.php
[print] modules/contrib/replicate/src/Events/ReplicateEntityFieldEvent.php
[parsing] modules/contrib/replicate/src/Events/ReplicateEventBase.php
[refactoring] modules/contrib/replicate/src/Events/ReplicateEventBase.php
[post rectors] modules/contrib/replicate/src/Events/ReplicateEventBase.php
[print] modules/contrib/replicate/src/Events/ReplicateEventBase.php
[refactoring] modules/contrib/replicate/src/Events/ReplicateEventBase.php
[post rectors] modules/contrib/replicate/src/Events/ReplicateEventBase.php
[print] modules/contrib/replicate/src/Events/ReplicateEventBase.php
[parsing] modules/contrib/replicate/src/Events/ReplicatorEvents.php
[refactoring] modules/contrib/replicate/src/Events/ReplicatorEvents.php
[post rectors] modules/contrib/replicate/src/Events/ReplicatorEvents.php
[print] modules/contrib/replicate/src/Events/ReplicatorEvents.php
[parsing] modules/contrib/replicate/src/Replicator.php
[refactoring] modules/contrib/replicate/src/Replicator.php
[post rectors] modules/contrib/replicate/src/Replicator.php
[print] modules/contrib/replicate/src/Replicator.php
[refactoring] modules/contrib/replicate/src/Replicator.php
[post rectors] modules/contrib/replicate/src/Replicator.php
[print] modules/contrib/replicate/src/Replicator.php
[parsing] modules/contrib/replicate/tests/src/Unit/ReplicatorTest.php
[refactoring] modules/contrib/replicate/tests/src/Unit/ReplicatorTest.php
[post rectors] modules/contrib/replicate/tests/src/Unit/ReplicatorTest.php
[print] modules/contrib/replicate/tests/src/Unit/ReplicatorTest.php
[refactoring] modules/contrib/replicate/tests/src/Unit/ReplicatorTest.php
[post rectors] modules/contrib/replicate/tests/src/Unit/ReplicatorTest.php
[print] modules/contrib/replicate/tests/src/Unit/ReplicatorTest.php

3 files with changes
====================

1) modules/contrib/replicate/tests/src/Unit/ReplicatorTest.php:22

    ---------- begin diff ----------
@@ @@
  */
 class ReplicatorTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Tests the cloneEntity method.
    *
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/replicate/src/Replicator.php:96

    ---------- begin diff ----------
@@ @@
     if ($clone = $this->cloneEntity($entity)) {
       $this->entityTypeManager->getStorage($entity->getEntityTypeId())->save($clone);
       $event = new AfterSaveEvent($clone);
-      $this->eventDispatcher->dispatch(ReplicatorEvents::AFTER_SAVE, $event);
+      $this->eventDispatcher->dispatch($event, ReplicatorEvents::AFTER_SAVE);
       return $clone;
     }
   }
@@ @@
   public function cloneEntity(EntityInterface $entity) {
     if ($clone = $entity->createDuplicate()) {
       $event = new ReplicateEntityEvent($entity);
-      $this->eventDispatcher->dispatch(ReplicatorEvents::replicateEntityEvent($entity->getEntityTypeId()), $event);
+      $this->eventDispatcher->dispatch($event, ReplicatorEvents::replicateEntityEvent($entity->getEntityTypeId()));

       if ($clone instanceof FieldableEntityInterface) {
         /** @var FieldableEntityInterface $clone */
@@ @@
       }

       $event = new ReplicateAlterEvent($clone, $entity);
-      $this->eventDispatcher->dispatch(ReplicatorEvents::REPLICATE_ALTER, $event);
+      $this->eventDispatcher->dispatch($event, ReplicatorEvents::REPLICATE_ALTER);
       return $clone;
     }
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


3) modules/contrib/replicate/src/Events/ReplicateEventBase.php:4

    ---------- begin diff ----------
@@ @@
 use Drupal\Core\Entity\EntityInterface;
 use Symfony\Component\EventDispatcher\Event;

-abstract class ReplicateEventBase extends Event {
+abstract class ReplicateEventBase extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * @var \Drupal\Core\Entity\EntityInterface
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

