diff --git a/src/Entity/GenericType.php b/src/Entity/GenericType.php
index 9904de8..f2050a4 100644
--- a/src/Entity/GenericType.php
+++ b/src/Entity/GenericType.php
@@ -82,7 +82,7 @@ abstract class GenericType extends GenericConfig implements GenericTypeInterface
     if ($update && $this->getOriginalId() != $this->id()) {
       $update_count = \Drupal::entityTypeManager()->getStorage($this->getOriginalId())->updateType($this->getOriginalId(), $this->id());
       if ($update_count) {
-        drupal_set_message(\Drupal::translation()->formatPlural($update_count,
+        \Drupal::messenger()->addStatus(\Drupal::translation()->formatPlural($update_count,
           'Changed the type of 1 object from %old-type to %type.',
           'Changed the type of @count objects from %old-type to %type.',
           array(
diff --git a/src/Form/GenericConfigForm.php b/src/Form/GenericConfigForm.php
index 8f9e294..550540f 100644
--- a/src/Form/GenericConfigForm.php
+++ b/src/Form/GenericConfigForm.php
@@ -88,10 +88,10 @@ class GenericConfigForm extends EntityForm {
     $status = $entity->save();
 
     if ($status == SAVED_UPDATED) {
-      drupal_set_message($this->t($entity_label . ' %label has been updated.', ['%label' => $entity->label()]));
+      $this->messenger()->addStatus($this->t($entity_label . ' %label has been updated.', ['%label' => $entity->label()]));
     }
     else {
-      drupal_set_message($this->t($entity_label . ' %label has been created.', ['%label' => $entity->label()]));
+      $this->messenger()->addStatus($this->t($entity_label . ' %label has been created.', ['%label' => $entity->label()]));
     }
 
     $form_state->setRedirect('entity.' . $entity_type->id() . '.collection');
diff --git a/src/Form/GenericForm.php b/src/Form/GenericForm.php
index 2340a81..ad5abce 100644
--- a/src/Form/GenericForm.php
+++ b/src/Form/GenericForm.php
@@ -16,7 +16,7 @@ class GenericForm extends ContentEntityForm {
   public function save(array $form, FormStateInterface $form_state) {
     $entity = $this->getEntity();
     $entity->save();
-    drupal_set_message($this->t('The entity %label has been successfully saved.', ['%label' => $entity->label()]));
+    $this->messenger()->addStatus($this->t('The entity %label has been successfully saved.', ['%label' => $entity->label()]));
     $form_state->setRedirect('entity.' . $entity->getEntityTypeId() . '.canonical', [$entity->getEntityTypeId() => $entity->id()]);
   }
 
diff --git a/src/Form/GenericTypeForm.php b/src/Form/GenericTypeForm.php
index aeb2eed..f2dcac8 100644
--- a/src/Form/GenericTypeForm.php
+++ b/src/Form/GenericTypeForm.php
@@ -124,10 +124,10 @@ class GenericTypeForm extends BundleEntityFormBase {
     $status = $this->entity->save();
 
     if ($status == SAVED_UPDATED) {
-      drupal_set_message(t($this->entity->getEntityType()->getLabel() . ' %label has been updated.', ['%label' => $this->entity->label()]));
+      $this->messenger()->addStatus(t($this->entity->getEntityType()->getLabel() . ' %label has been updated.', ['%label' => $this->entity->label()]));
     }
     else {
-      drupal_set_message(t($this->entity->getEntityType()->getLabel() . ' %label has been created.', ['%label' => $this->entity->label()]));
+      $this->messenger()->addStatus(t($this->entity->getEntityType()->getLabel() . ' %label has been created.', ['%label' => $this->entity->label()]));
     }
 
     $this->entityManager->clearCachedFieldDefinitions();
diff --git a/src/Plugin/views/filter/IdSelect.php b/src/Plugin/views/filter/IdSelect.php
index d78d7dd..a929fce 100644
--- a/src/Plugin/views/filter/IdSelect.php
+++ b/src/Plugin/views/filter/IdSelect.php
@@ -27,7 +27,7 @@ class IdSelect extends InOperator {
       ->sort(\Drupal::entityTypeManager()->getDefinition($this->getEntityType())->getKey('label'));
     $entities = \Drupal::entityTypeManager()->getStorage($this->getEntityType())->loadMultiple($query->execute());
     foreach ($entities as $entity) {
-      $options[$entity->id()] = \Drupal::entityManager()->getTranslationFromContext($entity)->label();
+      $options[$entity->id()] = \Drupal::service('entity.repository')->getTranslationFromContext($entity)->label();
     }
 
     $default_value = (array) $this->value;
