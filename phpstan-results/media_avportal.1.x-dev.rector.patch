diff --git a/tests/modules/media_avportal_mock/src/AvPortalClientMiddleware.php b/tests/modules/media_avportal_mock/src/AvPortalClientMiddleware.php
index 8ebb400..20e3751 100644
--- a/tests/modules/media_avportal_mock/src/AvPortalClientMiddleware.php
+++ b/tests/modules/media_avportal_mock/src/AvPortalClientMiddleware.php
@@ -93,7 +93,7 @@ class AvPortalClientMiddleware {
   protected function createServicePromise(RequestInterface $request): PromiseInterface {
     // Dispatch event to gather the JSON data for responses.
     $event = new AvPortalMockEvent($request);
-    $event = $this->eventDispatcher->dispatch(AvPortalMockEvent::AV_PORTAL_MOCK_EVENT, $event);
+    $event = $this->eventDispatcher->dispatch($event, AvPortalMockEvent::AV_PORTAL_MOCK_EVENT);
 
     $uri = $request->getUri();
     $query = $uri->getQuery();
diff --git a/tests/modules/media_avportal_mock/src/AvPortalMockEvent.php b/tests/modules/media_avportal_mock/src/AvPortalMockEvent.php
index 91c498e..f6dbd97 100644
--- a/tests/modules/media_avportal_mock/src/AvPortalMockEvent.php
+++ b/tests/modules/media_avportal_mock/src/AvPortalMockEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event used to collect the mocking JSON data.
  */
-class AvPortalMockEvent extends Event {
+class AvPortalMockEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Event name.
diff --git a/tests/src/Kernel/AvPortalClientTest.php b/tests/src/Kernel/AvPortalClientTest.php
index 98d5c74..91b8d63 100644
--- a/tests/src/Kernel/AvPortalClientTest.php
+++ b/tests/src/Kernel/AvPortalClientTest.php
@@ -24,7 +24,7 @@ class AvPortalClientTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['media_avportal']);
diff --git a/tests/src/Kernel/AvPortalStreamWrapperTest.php b/tests/src/Kernel/AvPortalStreamWrapperTest.php
index d95b421..b508680 100644
--- a/tests/src/Kernel/AvPortalStreamWrapperTest.php
+++ b/tests/src/Kernel/AvPortalStreamWrapperTest.php
@@ -25,7 +25,7 @@ class AvPortalStreamWrapperTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['media_avportal']);
   }
diff --git a/tests/src/Unit/AvPortalClientTest.php b/tests/src/Unit/AvPortalClientTest.php
index 51e23f3..0740545 100644
--- a/tests/src/Unit/AvPortalClientTest.php
+++ b/tests/src/Unit/AvPortalClientTest.php
@@ -42,7 +42,7 @@ class AvPortalClientTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->configFactory = $this->getConfigFactoryStub([
@@ -52,13 +52,9 @@ class AvPortalClientTest extends UnitTestCase {
       ],
     ]);
 
-    $this->cacheBackend = $this->getMockBuilder(CacheBackendInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->cacheBackend = $this->createMock(CacheBackendInterface::class);
 
-    $this->time = $this->getMockBuilder(TimeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->time = $this->createMock(TimeInterface::class);
   }
 
   /**
@@ -71,6 +67,7 @@ class AvPortalClientTest extends UnitTestCase {
    *
    * @covers ::buildOptions
    * @dataProvider queryOptionsDataProvider
+   * @doesNotPerformAssertions
    */
   public function testQueryOptions(array $input, array $expected): void {
     $http_client = $this->getMockBuilder(Client::class)
@@ -98,9 +95,7 @@ class AvPortalClientTest extends UnitTestCase {
    * @dataProvider invalidQueryOptionsDataProvider
    */
   public function testInvalidQueryOptions(array $input, string $message) {
-    $http_client = $this->getMockBuilder(Client::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $http_client = $this->createMock(Client::class);
 
     $client = new AvPortalClient($http_client, $this->configFactory, $this->cacheBackend, $this->time, FALSE);
     $this->expectException(\InvalidArgumentException::class);
