[parsing] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.api.php
[refactoring] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.api.php
[post rectors] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.api.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.api.php
[parsing] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.install
[refactoring] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.install
[post rectors] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.install
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.install
[parsing] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.module
[refactoring] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.module
[post rectors] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/purge_akamai_optimizer/purge_akamai_optimizer.module
[parsing] modules/contrib/purge_akamai_optimizer/src/EventSubscriber/TagsHashingSubscriber.php
[refactoring] modules/contrib/purge_akamai_optimizer/src/EventSubscriber/TagsHashingSubscriber.php
[post rectors] modules/contrib/purge_akamai_optimizer/src/EventSubscriber/TagsHashingSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/purge_akamai_optimizer/src/EventSubscriber/TagsHashingSubscriber.php
[refactoring] modules/contrib/purge_akamai_optimizer/src/EventSubscriber/TagsHashingSubscriber.php
[post rectors] modules/contrib/purge_akamai_optimizer/src/EventSubscriber/TagsHashingSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/purge_akamai_optimizer/src/EventSubscriber/TagsHashingSubscriber.php
[parsing] modules/contrib/purge_akamai_optimizer/src/Form/PurgeAkamaiOptimizerSettings.php
[refactoring] modules/contrib/purge_akamai_optimizer/src/Form/PurgeAkamaiOptimizerSettings.php
[post rectors] modules/contrib/purge_akamai_optimizer/src/Form/PurgeAkamaiOptimizerSettings.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/purge_akamai_optimizer/src/Form/PurgeAkamaiOptimizerSettings.php
[parsing] modules/contrib/purge_akamai_optimizer/src/Plugin/Purge/Purger/AkamaiPurgeEverything.php
[refactoring] modules/contrib/purge_akamai_optimizer/src/Plugin/Purge/Purger/AkamaiPurgeEverything.php
[post rectors] modules/contrib/purge_akamai_optimizer/src/Plugin/Purge/Purger/AkamaiPurgeEverything.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/purge_akamai_optimizer/src/Plugin/Purge/Purger/AkamaiPurgeEverything.php
[parsing] modules/contrib/purge_akamai_optimizer/src/Services/QueueTags.php
[refactoring] modules/contrib/purge_akamai_optimizer/src/Services/QueueTags.php
[post rectors] modules/contrib/purge_akamai_optimizer/src/Services/QueueTags.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/purge_akamai_optimizer/src/Services/QueueTags.php
[parsing] modules/contrib/purge_akamai_optimizer/src/Services/ReduceTags.php
[refactoring] modules/contrib/purge_akamai_optimizer/src/Services/ReduceTags.php
[post rectors] modules/contrib/purge_akamai_optimizer/src/Services/ReduceTags.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/purge_akamai_optimizer/src/Services/ReduceTags.php

1 file with changes
===================

1) modules/contrib/purge_akamai_optimizer/src/EventSubscriber/TagsHashingSubscriber.php:142

    ---------- begin diff ----------
@@ @@
   /**
    * Instucts akamai cdn to disable its caching.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The dispatched event.
    */
-  public function edgeControlHeader(Event $event) {
+  public function edgeControlHeader(\Symfony\Contracts\EventDispatcher\Event $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * RenameClassRector


 [OK] 1 file has been changed by Rector                                         

