diff --git a/tests/src/Functional/ConvertUrlToEmbedFilterTest.php b/tests/src/Functional/ConvertUrlToEmbedFilterTest.php
index b9ee970..be2bbd1 100644
--- a/tests/src/Functional/ConvertUrlToEmbedFilterTest.php
+++ b/tests/src/Functional/ConvertUrlToEmbedFilterTest.php
@@ -28,7 +28,7 @@ class ConvertUrlToEmbedFilterTest extends BrowserTestBase {
   /**
    * Set the configuration up.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create a page content type.
     $this->drupalCreateContentType(['type' => 'page', 'name' => 'Basic page']);
@@ -87,7 +87,10 @@ class ConvertUrlToEmbedFilterTest extends BrowserTestBase {
     $node = $this->drupalCreateNode($settings);
     $this->drupalGet('node/' . $node->id());
     $this->assertSession()->responseContains('<drupal-url data-embed-url="https://twitter.com/drupal/status/735873777683320832"></drupal-url>');
-    $this->assertNoText(strip_tags($content), 'URL does not appear in the output when embed is successful.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains(strip_tags($content));
 
     $content = 'before /not-valid/url after';
     $settings = [];
@@ -123,7 +126,10 @@ class ConvertUrlToEmbedFilterTest extends BrowserTestBase {
     $node = $this->drupalCreateNode($settings);
     $this->drupalGet('node/' . $node->id());
     $this->assertSession()->responseContains('<drupal-url data-embed-url="https://twitter.com/drupal/status/735873777683320832"></drupal-url>');
-    $this->assertNoText(strip_tags($content), 'URL does not appear in the output when embed is successful.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains(strip_tags($content));
 
     $content = 'before Embed https://twitter.com/drupal/status/735873777683320832 after';
     $settings = [];
