diff --git a/src/Entity/Feed.php b/src/Entity/Feed.php
index 0e7ecd94..de94f8ba 100644
--- a/src/Entity/Feed.php
+++ b/src/Entity/Feed.php
@@ -307,7 +307,7 @@ class Feed extends ContentEntityBase implements FeedInterface {
    * {@inheritdoc}
    */
   public function dispatchEntityEvent($event, EntityInterface $entity, ItemInterface $item) {
-    return $this->eventDispatcher()->dispatch($event, new EntityEvent($this, $entity, $item));
+    return $this->eventDispatcher()->dispatch(new EntityEvent($this, $entity, $item), $event);
   }
 
   /**
@@ -328,7 +328,7 @@ class Feed extends ContentEntityBase implements FeedInterface {
     }
 
     // Allow other modules to react upon finishing importing.
-    $this->eventDispatcher()->dispatch(FeedsEvents::IMPORT_FINISHED, new ImportFinishedEvent($this));
+    $this->eventDispatcher()->dispatch(new ImportFinishedEvent($this), FeedsEvents::IMPORT_FINISHED);
 
     // Cleanup.
     $this->clearStates();
diff --git a/src/Event/DeleteFeedsEvent.php b/src/Event/DeleteFeedsEvent.php
index 9bb4aabb..4440e525 100644
--- a/src/Event/DeleteFeedsEvent.php
+++ b/src/Event/DeleteFeedsEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Fired when one or more feeds is being deleted.
  */
-class DeleteFeedsEvent extends Event {
+class DeleteFeedsEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The feeds being deleted.
diff --git a/src/Event/EventBase.php b/src/Event/EventBase.php
index 1bf0ebe5..6dbe91f6 100644
--- a/src/Event/EventBase.php
+++ b/src/Event/EventBase.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Helper class for events that need a feed.
  */
-abstract class EventBase extends Event {
+abstract class EventBase extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The feed being imported.
diff --git a/src/Event/EventDispatcherTrait.php b/src/Event/EventDispatcherTrait.php
index 9fe8fcd8..cd37a5aa 100644
--- a/src/Event/EventDispatcherTrait.php
+++ b/src/Event/EventDispatcherTrait.php
@@ -28,13 +28,13 @@ trait EventDispatcherTrait {
    *
    * @param string $event_name
    *   The name of the event.
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The event to dispatch.
    *
-   * @return \Symfony\Component\EventDispatcher\Event
+   * @return \Symfony\Contracts\EventDispatcher\Event
    *   The invoked event.
    */
-  protected function dispatchEvent($event_name, Event $event = NULL) {
+  protected function dispatchEvent($event_name, \Symfony\Contracts\EventDispatcher\Event $event = NULL) {
     return $this->getEventDispatcher()->dispatch($event_name, $event);
   }
 
diff --git a/tests/src/Functional/Commands/FeedsDrushCommandsTest.php b/tests/src/Functional/Commands/FeedsDrushCommandsTest.php
index 04ad9a4a..b4d06c79 100644
--- a/tests/src/Functional/Commands/FeedsDrushCommandsTest.php
+++ b/tests/src/Functional/Commands/FeedsDrushCommandsTest.php
@@ -26,7 +26,7 @@ class FeedsDrushCommandsTest extends FeedsBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->feedType = $this->createFeedType([
