[parsing] modules/contrib/yaml_content/src/Annotation/YamlContentProcess.php
[refactoring] modules/contrib/yaml_content/src/Annotation/YamlContentProcess.php
[post rectors] modules/contrib/yaml_content/src/Annotation/YamlContentProcess.php
[print] modules/contrib/yaml_content/src/Annotation/YamlContentProcess.php
[parsing] modules/contrib/yaml_content/src/Commands/YamlContentCommands.php
[refactoring] modules/contrib/yaml_content/src/Commands/YamlContentCommands.php
[post rectors] modules/contrib/yaml_content/src/Commands/YamlContentCommands.php
[print] modules/contrib/yaml_content/src/Commands/YamlContentCommands.php
[parsing] modules/contrib/yaml_content/src/ContentLoader/ContentLoader.php
[refactoring] modules/contrib/yaml_content/src/ContentLoader/ContentLoader.php
[post rectors] modules/contrib/yaml_content/src/ContentLoader/ContentLoader.php
[print] modules/contrib/yaml_content/src/ContentLoader/ContentLoader.php
[refactoring] modules/contrib/yaml_content/src/ContentLoader/ContentLoader.php
[post rectors] modules/contrib/yaml_content/src/ContentLoader/ContentLoader.php
[print] modules/contrib/yaml_content/src/ContentLoader/ContentLoader.php
[parsing] modules/contrib/yaml_content/src/ContentLoader/ContentLoaderInterface.php
[refactoring] modules/contrib/yaml_content/src/ContentLoader/ContentLoaderInterface.php
[post rectors] modules/contrib/yaml_content/src/ContentLoader/ContentLoaderInterface.php
[print] modules/contrib/yaml_content/src/ContentLoader/ContentLoaderInterface.php
[parsing] modules/contrib/yaml_content/src/Event/ContentParsedEvent.php
[refactoring] modules/contrib/yaml_content/src/Event/ContentParsedEvent.php
[post rectors] modules/contrib/yaml_content/src/Event/ContentParsedEvent.php
[print] modules/contrib/yaml_content/src/Event/ContentParsedEvent.php
[parsing] modules/contrib/yaml_content/src/Event/DataImportEvent.php
[refactoring] modules/contrib/yaml_content/src/Event/DataImportEvent.php
[post rectors] modules/contrib/yaml_content/src/Event/DataImportEvent.php
[print] modules/contrib/yaml_content/src/Event/DataImportEvent.php
[parsing] modules/contrib/yaml_content/src/Event/EntityImportEvent.php
[refactoring] modules/contrib/yaml_content/src/Event/EntityImportEvent.php
[post rectors] modules/contrib/yaml_content/src/Event/EntityImportEvent.php
[print] modules/contrib/yaml_content/src/Event/EntityImportEvent.php
[parsing] modules/contrib/yaml_content/src/Event/EntityPostSaveEvent.php
[refactoring] modules/contrib/yaml_content/src/Event/EntityPostSaveEvent.php
[post rectors] modules/contrib/yaml_content/src/Event/EntityPostSaveEvent.php
[print] modules/contrib/yaml_content/src/Event/EntityPostSaveEvent.php
[parsing] modules/contrib/yaml_content/src/Event/EntityPreSaveEvent.php
[refactoring] modules/contrib/yaml_content/src/Event/EntityPreSaveEvent.php
[post rectors] modules/contrib/yaml_content/src/Event/EntityPreSaveEvent.php
[print] modules/contrib/yaml_content/src/Event/EntityPreSaveEvent.php
[parsing] modules/contrib/yaml_content/src/Event/EventBase.php
[refactoring] modules/contrib/yaml_content/src/Event/EventBase.php
[post rectors] modules/contrib/yaml_content/src/Event/EventBase.php
[print] modules/contrib/yaml_content/src/Event/EventBase.php
[refactoring] modules/contrib/yaml_content/src/Event/EventBase.php
[post rectors] modules/contrib/yaml_content/src/Event/EventBase.php
[print] modules/contrib/yaml_content/src/Event/EventBase.php
[parsing] modules/contrib/yaml_content/src/Event/FieldImportEvent.php
[refactoring] modules/contrib/yaml_content/src/Event/FieldImportEvent.php
[post rectors] modules/contrib/yaml_content/src/Event/FieldImportEvent.php
[print] modules/contrib/yaml_content/src/Event/FieldImportEvent.php
[parsing] modules/contrib/yaml_content/src/Event/YamlContentEvents.php
[refactoring] modules/contrib/yaml_content/src/Event/YamlContentEvents.php
[post rectors] modules/contrib/yaml_content/src/Event/YamlContentEvents.php
[print] modules/contrib/yaml_content/src/Event/YamlContentEvents.php
[parsing] modules/contrib/yaml_content/src/EventSubscriber/MenuHierarchySubscriber.php
[refactoring] modules/contrib/yaml_content/src/EventSubscriber/MenuHierarchySubscriber.php
[post rectors] modules/contrib/yaml_content/src/EventSubscriber/MenuHierarchySubscriber.php
[print] modules/contrib/yaml_content/src/EventSubscriber/MenuHierarchySubscriber.php
[parsing] modules/contrib/yaml_content/src/Plugin/ProcessingContext.php
[refactoring] modules/contrib/yaml_content/src/Plugin/ProcessingContext.php
[post rectors] modules/contrib/yaml_content/src/Plugin/ProcessingContext.php
[print] modules/contrib/yaml_content/src/Plugin/ProcessingContext.php
[parsing] modules/contrib/yaml_content/src/Plugin/YamlContentProcessBase.php
[refactoring] modules/contrib/yaml_content/src/Plugin/YamlContentProcessBase.php
[post rectors] modules/contrib/yaml_content/src/Plugin/YamlContentProcessBase.php
[print] modules/contrib/yaml_content/src/Plugin/YamlContentProcessBase.php
[parsing] modules/contrib/yaml_content/src/Plugin/YamlContentProcessInterface.php
[refactoring] modules/contrib/yaml_content/src/Plugin/YamlContentProcessInterface.php
[post rectors] modules/contrib/yaml_content/src/Plugin/YamlContentProcessInterface.php
[print] modules/contrib/yaml_content/src/Plugin/YamlContentProcessInterface.php
[parsing] modules/contrib/yaml_content/src/Plugin/YamlContentProcessManager.php
[refactoring] modules/contrib/yaml_content/src/Plugin/YamlContentProcessManager.php
[post rectors] modules/contrib/yaml_content/src/Plugin/YamlContentProcessManager.php
[print] modules/contrib/yaml_content/src/Plugin/YamlContentProcessManager.php
[parsing] modules/contrib/yaml_content/src/Plugin/yaml_content/process/File.php
[refactoring] modules/contrib/yaml_content/src/Plugin/yaml_content/process/File.php
[post rectors] modules/contrib/yaml_content/src/Plugin/yaml_content/process/File.php
[print] modules/contrib/yaml_content/src/Plugin/yaml_content/process/File.php
[refactoring] modules/contrib/yaml_content/src/Plugin/yaml_content/process/File.php
[post rectors] modules/contrib/yaml_content/src/Plugin/yaml_content/process/File.php
[print] modules/contrib/yaml_content/src/Plugin/yaml_content/process/File.php
[parsing] modules/contrib/yaml_content/src/Plugin/yaml_content/process/LayoutSection.php
[refactoring] modules/contrib/yaml_content/src/Plugin/yaml_content/process/LayoutSection.php
[post rectors] modules/contrib/yaml_content/src/Plugin/yaml_content/process/LayoutSection.php
[print] modules/contrib/yaml_content/src/Plugin/yaml_content/process/LayoutSection.php
[parsing] modules/contrib/yaml_content/src/Plugin/yaml_content/process/Reference.php
[refactoring] modules/contrib/yaml_content/src/Plugin/yaml_content/process/Reference.php
[post rectors] modules/contrib/yaml_content/src/Plugin/yaml_content/process/Reference.php
[print] modules/contrib/yaml_content/src/Plugin/yaml_content/process/Reference.php
[parsing] modules/contrib/yaml_content/src/Plugin/yaml_content/process/ReferenceUri.php
[refactoring] modules/contrib/yaml_content/src/Plugin/yaml_content/process/ReferenceUri.php
[post rectors] modules/contrib/yaml_content/src/Plugin/yaml_content/process/ReferenceUri.php
[print] modules/contrib/yaml_content/src/Plugin/yaml_content/process/ReferenceUri.php
[parsing] modules/contrib/yaml_content/src/Service/EntityLoadHelper.php
[refactoring] modules/contrib/yaml_content/src/Service/EntityLoadHelper.php
[post rectors] modules/contrib/yaml_content/src/Service/EntityLoadHelper.php
[print] modules/contrib/yaml_content/src/Service/EntityLoadHelper.php
[parsing] modules/contrib/yaml_content/src/Service/LoadHelper.php
[refactoring] modules/contrib/yaml_content/src/Service/LoadHelper.php
[post rectors] modules/contrib/yaml_content/src/Service/LoadHelper.php
[print] modules/contrib/yaml_content/src/Service/LoadHelper.php
[refactoring] modules/contrib/yaml_content/src/Service/LoadHelper.php
[post rectors] modules/contrib/yaml_content/src/Service/LoadHelper.php
[print] modules/contrib/yaml_content/src/Service/LoadHelper.php
[parsing] modules/contrib/yaml_content/tests/src/Functional/NodeImportTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Functional/NodeImportTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Functional/NodeImportTest.php
[print] modules/contrib/yaml_content/tests/src/Functional/NodeImportTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Functional/NodeImportTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Functional/NodeImportTest.php
[print] modules/contrib/yaml_content/tests/src/Functional/NodeImportTest.php
[parsing] modules/contrib/yaml_content/tests/src/Functional/Plugin/yaml_content/process/FileTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Functional/Plugin/yaml_content/process/FileTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Functional/Plugin/yaml_content/process/FileTest.php
[print] modules/contrib/yaml_content/tests/src/Functional/Plugin/yaml_content/process/FileTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Functional/Plugin/yaml_content/process/FileTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Functional/Plugin/yaml_content/process/FileTest.php
[print] modules/contrib/yaml_content/tests/src/Functional/Plugin/yaml_content/process/FileTest.php
[parsing] modules/contrib/yaml_content/tests/src/Functional/TaxonomyImportTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Functional/TaxonomyImportTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Functional/TaxonomyImportTest.php
[print] modules/contrib/yaml_content/tests/src/Functional/TaxonomyImportTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Functional/TaxonomyImportTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Functional/TaxonomyImportTest.php
[print] modules/contrib/yaml_content/tests/src/Functional/TaxonomyImportTest.php
[parsing] modules/contrib/yaml_content/tests/src/Traits/LoadFixturesTrait.php
[refactoring] modules/contrib/yaml_content/tests/src/Traits/LoadFixturesTrait.php
[post rectors] modules/contrib/yaml_content/tests/src/Traits/LoadFixturesTrait.php
[print] modules/contrib/yaml_content/tests/src/Traits/LoadFixturesTrait.php
[parsing] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTest.php
[parsing] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTestBase.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTestBase.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTestBase.php
[print] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTestBase.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTestBase.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTestBase.php
[print] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTestBase.php
[parsing] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ExistenceCheckingTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ExistenceCheckingTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ExistenceCheckingTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ExistenceCheckingTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ExistenceCheckingTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ExistenceCheckingTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ExistenceCheckingTest.php
[parsing] modules/contrib/yaml_content/tests/src/Unit/EntityLoadHelper/EntityLoadHelperTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/EntityLoadHelper/EntityLoadHelperTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/EntityLoadHelper/EntityLoadHelperTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/EntityLoadHelper/EntityLoadHelperTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/EntityLoadHelper/EntityLoadHelperTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/EntityLoadHelper/EntityLoadHelperTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/EntityLoadHelper/EntityLoadHelperTest.php
[parsing] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/FileTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/FileTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/FileTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/FileTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/FileTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/FileTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/FileTest.php
[parsing] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/ReferenceTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/ReferenceTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/ReferenceTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/ReferenceTest.php
[refactoring] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/ReferenceTest.php
[post rectors] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/ReferenceTest.php
[print] modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/ReferenceTest.php
[parsing] modules/contrib/yaml_content/yaml_content.api.php
[refactoring] modules/contrib/yaml_content/yaml_content.api.php
[post rectors] modules/contrib/yaml_content/yaml_content.api.php
[print] modules/contrib/yaml_content/yaml_content.api.php
[parsing] modules/contrib/yaml_content/yaml_content.drush.inc
[refactoring] modules/contrib/yaml_content/yaml_content.drush.inc
[post rectors] modules/contrib/yaml_content/yaml_content.drush.inc
[print] modules/contrib/yaml_content/yaml_content.drush.inc

13 files with changes
=====================

1) modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/ReferenceTest.php:20

    ---------- begin diff ----------
@@ @@
  */
 class ReferenceTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The entity type manager service mock.
    *
@@ @@
   /**
    * Setup mocks and a reference plugin for all tests.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->entityTypeManager = $this->prophesize(EntityTypeManagerInterface::class);
     $this->entityStorageHandler = $this->prophesize(EntityStorageInterface::class);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/yaml_content/tests/src/Unit/Plugin/yaml_content/process/FileTest.php:20

    ---------- begin diff ----------
@@ @@
  */
 class FileTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   use LoadFixturesTrait;

   /**
@@ @@
   /**
    * Setup the file process plugin for all tests.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $args = [
       'my_entity',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/yaml_content/tests/src/Unit/EntityLoadHelper/EntityLoadHelperTest.php:53

    ---------- begin diff ----------
@@ @@
    * Test the entity type manager is lazy loaded upon request.
    *
    * @covers ::getEntityTypeManager
+   * @doesNotPerformAssertions
    */
   public function testEntityTypeManagerIsLazyLoaded() {
     $this->markTestIncomplete('This test has not been implemented yet.');
@@ @@
    * Test the entity field manager is lazy loaded upon request.
    *
    * @covers ::getEntityFieldManager
+   * @doesNotPerformAssertions
    */
   public function testEntityFieldManagerIsLazyLoaded() {
     $this->markTestIncomplete('This test has not been implemented yet.');
@@ @@
    * Test that UUID search only includes the UUID and entity type.
    *
    * @covers ::loadByUuid
+   * @doesNotPerformAssertions
    */
   public function testLoadByUuidSearchesByUuidOnly() {
     $this->markTestIncomplete('This test has not been implemented yet.');
@@ @@
    * Test loadByUuid returns only the first match.
    *
    * @covers ::loadByUuid
+   * @doesNotPerformAssertions
    */
   public function testLoadByUuidReturnsOnlyOneMatch() {
     $this->markTestIncomplete('This test has not been implemented yet.');
@@ @@
    * Test loadByUuid returns false if no match is found.
    *
    * @covers ::loadByUuid
+   * @doesNotPerformAssertions
    */
   public function testLoadByUuidReturnsFalseIfNoMatchIsFound() {
     $this->markTestIncomplete('This test has not been implemented yet.');
@@ @@
    * Test that property search only includes content property values.
    *
    * @covers ::loadByProperties
+   * @doesNotPerformAssertions
    */
   public function testLoadByPropertiesSearchesByPropertiesOnly() {
     $this->markTestIncomplete('This test has not been implemented yet.');
@@ @@
    * Test loadByProperties returns only the first match.
    *
    * @covers ::loadByProperties
+   * @doesNotPerformAssertions
    */
   public function testLoadByPropertiesReturnsOnlyOneMatch() {
     $this->markTestIncomplete('This test has not been implemented yet.');
@@ @@
    * Test loadByUuid returns false if no match is found.
    *
    * @covers ::loadByProperties
+   * @doesNotPerformAssertions
    */
   public function testLoadByPropertiesReturnsFalseIfNoMatchIsFound() {
     $this->markTestIncomplete('This test has not been implemented yet.');
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ExistenceCheckingTest.php:111

    ---------- begin diff ----------
@@ @@
    *
    * @covers ::buildEntity
    * @covers ::createEntity
+   * @doesNotPerformAssertions
    */
   public function testBuildEntityCallsCreateEntity($entity_type, array $test_content) {
     $this->markTestSkipped('Enable this test once event dispatching is consolidated.');
@@ @@
    * Confirm `createEntity()` does not create a new entity if a match is found.
    *
    * @covers ::createEntity
+   * @doesNotPerformAssertions
    */
   public function testCreateEntityLoadsMatchingEntityWhenFound() {
     $this->markTestIncomplete();
@@ @@

   /**
    * Confirm `createEntity()` creates a new entity if a match is not found.
+   * @doesNotPerformAssertions
    */
   public function testCreateEntityCreatesNewEntityWhenMatchNotFound() {
     $this->markTestIncomplete();
@@ @@

   /**
    * Confirm `createEntity()` does not change an existing entity if loaded.
+   * @doesNotPerformAssertions
    */
   public function testCreateEntityDoesNotChangeExistingEntities() {
     $this->markTestIncomplete();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTestBase.php:62

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Prepare the directory structure.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/yaml_content/tests/src/Unit/ContentLoader/ContentLoaderTest.php:35

    ---------- begin diff ----------
@@ @@
    * @todo Handle parse failure
    * @todo Test no array at top level of content
    * @todo Confirm array structure loaded
+   * @doesNotPerformAssertions
    */
   public function testParseContent() {
     $this->markTestIncomplete();
@@ @@
    * Test the entry point content loading behavior.
    *
    * @covers ::loadContent
+   * @doesNotPerformAssertions
    */
   public function testLoadContent() {
     $this->markTestIncomplete();
@@ @@

   /**
    * @covers ::populateField
+   * @doesNotPerformAssertions
    */
   public function testPopulateFieldProcess() {
     $field_definition = new BaseFieldDefinition();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/yaml_content/tests/src/Functional/TaxonomyImportTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Prepare the content loader.
     $this->contentLoader = \Drupal::service('yaml_content.content_loader');
     // Look for content files in the tests directory.
-    $this->contentLoader->setContentPath(drupal_get_path('module', 'yaml_content') . '/tests');
+    $this->contentLoader->setContentPath(\Drupal::service('extension.list.module')->getPath('yaml_content') . '/tests');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/yaml_content/tests/src/Functional/Plugin/yaml_content/process/FileTest.php:24

    ---------- begin diff ----------
@@ @@
  */
 class FileTest extends BrowserTestBase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   use LoadFixturesTrait;

   protected static $modules = ['file'];
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/yaml_content/tests/src/Functional/NodeImportTest.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create our article content type.
@@ @@
     // Prepare the content loader.
     $this->contentLoader = \Drupal::service('yaml_content.content_loader');
     // Look for content files in the tests directory.
-    $this->contentLoader->setContentPath(drupal_get_path('module', 'yaml_content') . '/tests');
+    $this->contentLoader->setContentPath(\Drupal::service('extension.list.module')->getPath('yaml_content') . '/tests');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/yaml_content/src/Service/LoadHelper.php:80

    ---------- begin diff ----------
@@ @@
    *   matching `*.content.yml` are queued for import.
    */
   public function importModule($module, $file = NULL) {
-    $path = drupal_get_path('module', $module);
+    $path = \Drupal::service('extension.list.module')->getPath($module);

     $this->loader->setContentPath($path);

@@ @@
    *   matching `*.content.yml` are queued for import.
    */
   public function importProfile($profile, $file = NULL) {
-    $path = drupal_get_path('profile', $profile);
+    $path = \Drupal::service('extension.list.profile')->getPath($profile);

     $this->loader->setContentPath($path);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/yaml_content/src/Plugin/yaml_content/process/File.php:49

    ---------- begin diff ----------
@@ @@
         ->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY);

       // Save the file data or return an existing file.
-      $file = file_save_data($output, $destination . $filename, FileSystemInterface::EXISTS_REPLACE);
+      $file = \Drupal::service('file.repository')->writeData($output, $destination . $filename, FileSystemInterface::EXISTS_REPLACE);

       // Use the newly created file id as the value.
       $field_data['target_id'] = $file->id();
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/yaml_content/src/Event/EventBase.php:7

    ---------- begin diff ----------
@@ @@
 /**
  * Base implementation of yaml_content events.
  */
-class EventBase extends Event {
+class EventBase extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The ContentLoader being actively executed and triggering the event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/yaml_content/src/ContentLoader/ContentLoader.php:290

    ---------- begin diff ----------
@@ @@

     // Dispatch the event notification.
     $content_parsed_event = new ContentParsedEvent($this, $this->contentFile, $this->parsedContent);
-    $this->getEventDispatcher()->dispatch(YamlContentEvents::CONTENT_PARSED, $content_parsed_event);
+    $this->getEventDispatcher()->dispatch($content_parsed_event, YamlContentEvents::CONTENT_PARSED);

     return $this->parsedContent;
   }
@@ @@

       // Dispatch the pre-save event.
       $entity_pre_save_event = new EntityPreSaveEvent($this, $entity, $content_item);
-      $this->getEventDispatcher()->dispatch(YamlContentEvents::ENTITY_PRE_SAVE, $entity_pre_save_event);
+      $this->getEventDispatcher()->dispatch($entity_pre_save_event, YamlContentEvents::ENTITY_PRE_SAVE);

       $entity->save();

       // Dispatch the post-save event.
       $entity_post_save_event = new EntityPostSaveEvent($this, $entity, $content_item);
-      $this->getEventDispatcher()->dispatch(YamlContentEvents::ENTITY_POST_SAVE, $entity_post_save_event);
+      $this->getEventDispatcher()->dispatch($entity_post_save_event, YamlContentEvents::ENTITY_POST_SAVE);

       $loaded_content[] = $entity;
     }
@@ @@

     // Dispatch the entity import event.
     $entity_import_event = new EntityImportEvent($this, $entity_definition, $content_data);
-    $this->getEventDispatcher()->dispatch(YamlContentEvents::IMPORT_ENTITY, $entity_import_event);
+    $this->getEventDispatcher()->dispatch($entity_import_event, YamlContentEvents::IMPORT_ENTITY);

     // Parse properties for creation and fields for processing.
     $attributes = $this->getContentAttributes($entity_type, $content_data);
@@ @@

           // Dispatch field import event prior to populating fields.
           $field_import_event = new FieldImportEvent($this, $entity, $field_instance, $field_data);
-          $this->getEventDispatcher()->dispatch(YamlContentEvents::IMPORT_FIELD, $field_import_event);
+          $this->getEventDispatcher()->dispatch($field_import_event, YamlContentEvents::IMPORT_FIELD);

           $this->populateField($field_instance, $field_data);
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 13 files have been changed by Rector                                      

