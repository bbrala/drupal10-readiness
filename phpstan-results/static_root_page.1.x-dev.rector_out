[parsing] modules/contrib/static_root_page/src/EventSubscriber/StaticRootPageSubscriber.php
[refactoring] modules/contrib/static_root_page/src/EventSubscriber/StaticRootPageSubscriber.php
[post rectors] modules/contrib/static_root_page/src/EventSubscriber/StaticRootPageSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/static_root_page/src/EventSubscriber/StaticRootPageSubscriber.php
[refactoring] modules/contrib/static_root_page/src/EventSubscriber/StaticRootPageSubscriber.php
[post rectors] modules/contrib/static_root_page/src/EventSubscriber/StaticRootPageSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/static_root_page/src/EventSubscriber/StaticRootPageSubscriber.php
[parsing] modules/contrib/static_root_page/src/Plugin/LanguageNegotiation/LanguageNegotiationStaticRootPage.php
[refactoring] modules/contrib/static_root_page/src/Plugin/LanguageNegotiation/LanguageNegotiationStaticRootPage.php
[post rectors] modules/contrib/static_root_page/src/Plugin/LanguageNegotiation/LanguageNegotiationStaticRootPage.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/static_root_page/src/Plugin/LanguageNegotiation/LanguageNegotiationStaticRootPage.php
[parsing] modules/contrib/static_root_page/src/StaticRootPageConditionManager.php
[refactoring] modules/contrib/static_root_page/src/StaticRootPageConditionManager.php
[post rectors] modules/contrib/static_root_page/src/StaticRootPageConditionManager.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/static_root_page/src/StaticRootPageConditionManager.php
[parsing] modules/contrib/static_root_page/static_root_page.install
[refactoring] modules/contrib/static_root_page/static_root_page.install
[post rectors] modules/contrib/static_root_page/static_root_page.install
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/static_root_page/static_root_page.install
[parsing] modules/contrib/static_root_page/static_root_page.module
[refactoring] modules/contrib/static_root_page/static_root_page.module
[post rectors] modules/contrib/static_root_page/static_root_page.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/static_root_page/static_root_page.module
[parsing] modules/contrib/static_root_page/tests/src/Functional/StaticRootPageTest.php
[refactoring] modules/contrib/static_root_page/tests/src/Functional/StaticRootPageTest.php
[post rectors] modules/contrib/static_root_page/tests/src/Functional/StaticRootPageTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/static_root_page/tests/src/Functional/StaticRootPageTest.php
[refactoring] modules/contrib/static_root_page/tests/src/Functional/StaticRootPageTest.php
[post rectors] modules/contrib/static_root_page/tests/src/Functional/StaticRootPageTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/static_root_page/tests/src/Functional/StaticRootPageTest.php

2 files with changes
====================

1) modules/contrib/static_root_page/tests/src/Functional/StaticRootPageTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $admin = $this->drupalCreateUser([], NULL, TRUE);
     $this->drupalLogin($admin);
+    $this->drupalGet('/admin/config/regional/translate/settings');
     // Disable translation download.
-    $this->drupalPostForm('/admin/config/regional/translate/settings', [
+    $this->submitForm([
       'use_source' => 'local',
     ], 'Save configuration');
+    $this->drupalGet('/admin/config/regional/language/add');
     // Create FR.
-    $this->drupalPostForm('/admin/config/regional/language/add', [
+    $this->submitForm([
       'predefined_langcode' => 'fr',
     ], 'Add language');
+    $this->drupalGet('/admin/config/regional/language/detection/url');
     // Set prefixes to en and fr.
-    $this->drupalPostForm('/admin/config/regional/language/detection/url', [
+    $this->submitForm([
       'prefix[en]' => 'en',
       'prefix[fr]' => 'fr',
     ], 'Save configuration');
+    $this->drupalGet('/admin/config/regional/language/detection');
     // Set up URL and language selection page methods.
-    $this->drupalPostForm('/admin/config/regional/language/detection', [
+    $this->submitForm([
       'language_interface[enabled][language-url]' => TRUE,
     ], 'Save settings');
+    $this->drupalGet('/admin/structure/types/add');
     // Create content type.
-    $this->drupalPostForm('/admin/structure/types/add', [
+    $this->submitForm([
       'name' => 'Page',
       'type' => 'page',
       'language_configuration[content_translation]' => TRUE,
@@ @@
    * Test the "language prefixes" condition with Static root page disabled.
    */
   public function testDisabledModule() {
-    $this->drupalPostForm('/admin/config/regional/language/detection', [
+    $this->drupalGet('/admin/config/regional/language/detection');
+    $this->submitForm([
       'language_interface[enabled][static-root-page]' => FALSE,
       'language_interface[enabled][language-url]' => TRUE,
     ], 'Save settings');
@@ @@
    * Test the "language prefixes" condition with Static root page enabled.
    */
   public function testEnabledModule() {
-    $this->drupalPostForm('/admin/config/regional/language/detection', [
+    $this->drupalGet('/admin/config/regional/language/detection');
+    $this->submitForm([
       'language_interface[enabled][static-root-page]' => TRUE,
       'language_interface[enabled][language-url]' => TRUE,
     ], 'Save settings');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/static_root_page/src/EventSubscriber/StaticRootPageSubscriber.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The event.
    *
-   * @var \Symfony\Component\HttpKernel\Event\FilterResponseEvent
+   * @var \Symfony\Component\HttpKernel\Event\ResponseEvent
    */
   protected $event;

@@ @@
   /**
    * Event callback.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event object.
    *
    * @return bool
    *   Returns FALSE.
    */
-  public function redirectToStaticRootPage(FilterResponseEvent $event) {
+  public function redirectToStaticRootPage(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $this->event = $event;
     if ($this->languageNegotiator->isNegotiationMethodEnabled('static-root-page') &&
     $this->requestStack->getCurrentRequest()->getRequestUri() === $this->requestStack->getCurrentRequest()->getBaseUrl() . '/') {
    ----------- end diff -----------

Applied rules:
 * RenameClassRector


 [OK] 2 files have been changed by Rector                                       

