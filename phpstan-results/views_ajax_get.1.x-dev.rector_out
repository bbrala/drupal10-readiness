[parsing] modules/contrib/views_ajax_get/src/CacheableAjaxResponse.php
[refactoring] modules/contrib/views_ajax_get/src/CacheableAjaxResponse.php
[post rectors] modules/contrib/views_ajax_get/src/CacheableAjaxResponse.php
[print] modules/contrib/views_ajax_get/src/CacheableAjaxResponse.php
[parsing] modules/contrib/views_ajax_get/src/CacheableViewsAjaxResponse.php
[refactoring] modules/contrib/views_ajax_get/src/CacheableViewsAjaxResponse.php
[post rectors] modules/contrib/views_ajax_get/src/CacheableViewsAjaxResponse.php
[print] modules/contrib/views_ajax_get/src/CacheableViewsAjaxResponse.php
[parsing] modules/contrib/views_ajax_get/src/Controller/ViewsAjaxController.php
[refactoring] modules/contrib/views_ajax_get/src/Controller/ViewsAjaxController.php
[post rectors] modules/contrib/views_ajax_get/src/Controller/ViewsAjaxController.php
[print] modules/contrib/views_ajax_get/src/Controller/ViewsAjaxController.php
[parsing] modules/contrib/views_ajax_get/src/EventSubscriber/AjaxResponseSubscriber.php
[refactoring] modules/contrib/views_ajax_get/src/EventSubscriber/AjaxResponseSubscriber.php
[post rectors] modules/contrib/views_ajax_get/src/EventSubscriber/AjaxResponseSubscriber.php
[print] modules/contrib/views_ajax_get/src/EventSubscriber/AjaxResponseSubscriber.php
[refactoring] modules/contrib/views_ajax_get/src/EventSubscriber/AjaxResponseSubscriber.php
[post rectors] modules/contrib/views_ajax_get/src/EventSubscriber/AjaxResponseSubscriber.php
[print] modules/contrib/views_ajax_get/src/EventSubscriber/AjaxResponseSubscriber.php
[parsing] modules/contrib/views_ajax_get/src/EventSubscriber/RouteAlterSubscriber.php
[refactoring] modules/contrib/views_ajax_get/src/EventSubscriber/RouteAlterSubscriber.php
[post rectors] modules/contrib/views_ajax_get/src/EventSubscriber/RouteAlterSubscriber.php
[print] modules/contrib/views_ajax_get/src/EventSubscriber/RouteAlterSubscriber.php
[parsing] modules/contrib/views_ajax_get/src/Plugin/views/display_extender/ViewsAjax.php
[refactoring] modules/contrib/views_ajax_get/src/Plugin/views/display_extender/ViewsAjax.php
[post rectors] modules/contrib/views_ajax_get/src/Plugin/views/display_extender/ViewsAjax.php
[print] modules/contrib/views_ajax_get/src/Plugin/views/display_extender/ViewsAjax.php
[parsing] modules/contrib/views_ajax_get/tests/modules/views_ajax_get_cache_test/views_ajax_get_cache_test.install
[refactoring] modules/contrib/views_ajax_get/tests/modules/views_ajax_get_cache_test/views_ajax_get_cache_test.install
[post rectors] modules/contrib/views_ajax_get/tests/modules/views_ajax_get_cache_test/views_ajax_get_cache_test.install
[print] modules/contrib/views_ajax_get/tests/modules/views_ajax_get_cache_test/views_ajax_get_cache_test.install
[parsing] modules/contrib/views_ajax_get/tests/src/FunctionalJavascript/ExposedFilterViewsAjaxGetTest.php
[refactoring] modules/contrib/views_ajax_get/tests/src/FunctionalJavascript/ExposedFilterViewsAjaxGetTest.php
[post rectors] modules/contrib/views_ajax_get/tests/src/FunctionalJavascript/ExposedFilterViewsAjaxGetTest.php
[print] modules/contrib/views_ajax_get/tests/src/FunctionalJavascript/ExposedFilterViewsAjaxGetTest.php
[refactoring] modules/contrib/views_ajax_get/tests/src/FunctionalJavascript/ExposedFilterViewsAjaxGetTest.php
[post rectors] modules/contrib/views_ajax_get/tests/src/FunctionalJavascript/ExposedFilterViewsAjaxGetTest.php
[print] modules/contrib/views_ajax_get/tests/src/FunctionalJavascript/ExposedFilterViewsAjaxGetTest.php
[parsing] modules/contrib/views_ajax_get/views_ajax_get.module
[refactoring] modules/contrib/views_ajax_get/views_ajax_get.module
[post rectors] modules/contrib/views_ajax_get/views_ajax_get.module
[print] modules/contrib/views_ajax_get/views_ajax_get.module

2 files with changes
====================

1) modules/contrib/views_ajax_get/tests/src/FunctionalJavascript/ExposedFilterViewsAjaxGetTest.php:46

    ---------- begin diff ----------
@@ @@

     // Verify that only the "Page One" Node is present.
     $html = $session->getPage()->getHtml();
-    $this->assertContains('Page One', $html);
-    $this->assertNotContains('Page Two', $html);
+    $this->assertStringContainsString('Page One', $html);
+    $this->assertStringNotContainsString('Page Two', $html);

     // Search for "Page Two".
     $this->submitForm(['title' => 'Page Two'], t('Filter'));
@@ @@

     // Verify that only the "Page Two" Node is present.
     $html = $session->getPage()->getHtml();
-    $this->assertContains('Page Two', $html);
-    $this->assertNotContains('Page One', $html);
+    $this->assertStringContainsString('Page Two', $html);
+    $this->assertStringNotContainsString('Page One', $html);

     // Search for "Page One".
     $this->submitForm(['title' => 'Page One'], t('Filter'));
@@ @@

     // Verify that only the "Page One" Node is present.
     $html = $session->getPage()->getHtml();
-    $this->assertContains('Page One', $html);
-    $this->assertNotContains('Page Two', $html);
+    $this->assertStringContainsString('Page One', $html);
+    $this->assertStringNotContainsString('Page Two', $html);

     // Search for "Page Two".
     $this->submitForm(['title' => 'Page Two'], t('Filter'));
@@ @@

     // Verify that only the "Page Two" Node is present.
     $html = $session->getPage()->getHtml();
-    $this->assertContains('Page Two', $html);
-    $this->assertNotContains('Page One', $html);
+    $this->assertStringContainsString('Page Two', $html);
+    $this->assertStringNotContainsString('Page One', $html);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/views_ajax_get/src/EventSubscriber/AjaxResponseSubscriber.php:12

    ---------- begin diff ----------
@@ @@
  */
 class AjaxResponseSubscriber implements EventSubscriberInterface {

-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();
     if (!$response instanceof ViewAjaxResponse) {
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 2 files have been changed by Rector                                       

