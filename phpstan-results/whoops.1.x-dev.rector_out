[parsing] modules/contrib/whoops/src/EventSubscriber/DefaultExceptionSubscriber.php
[refactoring] modules/contrib/whoops/src/EventSubscriber/DefaultExceptionSubscriber.php
[post rectors] modules/contrib/whoops/src/EventSubscriber/DefaultExceptionSubscriber.php
[print] modules/contrib/whoops/src/EventSubscriber/DefaultExceptionSubscriber.php
[parsing] modules/contrib/whoops/src/EventSubscriber/ExceptionSubscriberBase.php
[refactoring] modules/contrib/whoops/src/EventSubscriber/ExceptionSubscriberBase.php
[post rectors] modules/contrib/whoops/src/EventSubscriber/ExceptionSubscriberBase.php
[print] modules/contrib/whoops/src/EventSubscriber/ExceptionSubscriberBase.php
[refactoring] modules/contrib/whoops/src/EventSubscriber/ExceptionSubscriberBase.php
[post rectors] modules/contrib/whoops/src/EventSubscriber/ExceptionSubscriberBase.php
[print] modules/contrib/whoops/src/EventSubscriber/ExceptionSubscriberBase.php
[parsing] modules/contrib/whoops/src/EventSubscriber/JsonExceptionSubscriber.php
[refactoring] modules/contrib/whoops/src/EventSubscriber/JsonExceptionSubscriber.php
[post rectors] modules/contrib/whoops/src/EventSubscriber/JsonExceptionSubscriber.php
[print] modules/contrib/whoops/src/EventSubscriber/JsonExceptionSubscriber.php
[parsing] modules/contrib/whoops/src/StackMiddleware/WhoopsMiddleware.php
[refactoring] modules/contrib/whoops/src/StackMiddleware/WhoopsMiddleware.php
[post rectors] modules/contrib/whoops/src/StackMiddleware/WhoopsMiddleware.php
[print] modules/contrib/whoops/src/StackMiddleware/WhoopsMiddleware.php
[parsing] modules/contrib/whoops/tests/modules/whoops_test/src/Controller/WhoopsTestController.php
[refactoring] modules/contrib/whoops/tests/modules/whoops_test/src/Controller/WhoopsTestController.php
[post rectors] modules/contrib/whoops/tests/modules/whoops_test/src/Controller/WhoopsTestController.php
[print] modules/contrib/whoops/tests/modules/whoops_test/src/Controller/WhoopsTestController.php
[parsing] modules/contrib/whoops/tests/src/Functional/RequirementsTest.php
[refactoring] modules/contrib/whoops/tests/src/Functional/RequirementsTest.php
[post rectors] modules/contrib/whoops/tests/src/Functional/RequirementsTest.php
[print] modules/contrib/whoops/tests/src/Functional/RequirementsTest.php
[parsing] modules/contrib/whoops/tests/src/Functional/WhoopsTest.php
[refactoring] modules/contrib/whoops/tests/src/Functional/WhoopsTest.php
[post rectors] modules/contrib/whoops/tests/src/Functional/WhoopsTest.php
[print] modules/contrib/whoops/tests/src/Functional/WhoopsTest.php
[parsing] modules/contrib/whoops/tests/src/Unit/DefaultExceptionSubscriberTest.php
[refactoring] modules/contrib/whoops/tests/src/Unit/DefaultExceptionSubscriberTest.php
[post rectors] modules/contrib/whoops/tests/src/Unit/DefaultExceptionSubscriberTest.php
[print] modules/contrib/whoops/tests/src/Unit/DefaultExceptionSubscriberTest.php
[refactoring] modules/contrib/whoops/tests/src/Unit/DefaultExceptionSubscriberTest.php
[post rectors] modules/contrib/whoops/tests/src/Unit/DefaultExceptionSubscriberTest.php
[print] modules/contrib/whoops/tests/src/Unit/DefaultExceptionSubscriberTest.php
[parsing] modules/contrib/whoops/tests/src/Unit/JsonExceptionSubscriberTest.php
[refactoring] modules/contrib/whoops/tests/src/Unit/JsonExceptionSubscriberTest.php
[post rectors] modules/contrib/whoops/tests/src/Unit/JsonExceptionSubscriberTest.php
[print] modules/contrib/whoops/tests/src/Unit/JsonExceptionSubscriberTest.php
[refactoring] modules/contrib/whoops/tests/src/Unit/JsonExceptionSubscriberTest.php
[post rectors] modules/contrib/whoops/tests/src/Unit/JsonExceptionSubscriberTest.php
[print] modules/contrib/whoops/tests/src/Unit/JsonExceptionSubscriberTest.php
[parsing] modules/contrib/whoops/whoops.install
[refactoring] modules/contrib/whoops/whoops.install
[post rectors] modules/contrib/whoops/whoops.install
[print] modules/contrib/whoops/whoops.install

3 files with changes
====================

1) modules/contrib/whoops/tests/src/Unit/JsonExceptionSubscriberTest.php:15

    ---------- begin diff ----------
@@ @@
  */
 class JsonExceptionSubscriberTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The mocked HTTP kernel.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->kernel = $this->prophesize(HttpKernelInterface::class)->reveal();
@@ @@
     $request->setRequestFormat('json');

     $exception = new \RuntimeException('Houston, we have a problem');
-    $event = new GetResponseForExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);
+    $event = new \Symfony\Component\HttpKernel\Event\ExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);

     $subscriber = new JsonExceptionSubscriber();
     $subscriber->onException($event);
@@ @@
     $request->setRequestFormat('hal_json');

     $exception = new \RuntimeException('Houston, we have a problem');
-    $event = new GetResponseForExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);
+    $event = new \Symfony\Component\HttpKernel\Event\ExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);

     $subscriber = new JsonExceptionSubscriber();
     $subscriber->onException($event);
@@ @@
     $request->setRequestFormat('html');

     $exception = new \Exception('Houston, we have a problem');
-    $event = new GetResponseForExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);
+    $event = new \Symfony\Component\HttpKernel\Event\ExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);

     $subscriber = new JsonExceptionSubscriber();
     $subscriber->onException($event);
@@ @@
       'X-Custom' => 'test',
     ];
     $exception = new HttpException(406, 'Houston, we have a problem', NULL, $headers);
-    $event = new GetResponseForExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);
+    $event = new \Symfony\Component\HttpKernel\Event\ExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);

     $subscriber = new JsonExceptionSubscriber();
     $subscriber->onException($event);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/whoops/tests/src/Unit/DefaultExceptionSubscriberTest.php:15

    ---------- begin diff ----------
@@ @@
  */
 class DefaultExceptionSubscriberTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The mocked HTTP kernel.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->kernel = $this->prophesize(HttpKernelInterface::class)->reveal();
@@ @@
     $request = Request::create('/whoops');

     $exception = new \RuntimeException('Houston, we have a problem');
-    $event = new GetResponseForExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);
+    $event = new \Symfony\Component\HttpKernel\Event\ExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);

     $subscriber = new DefaultExceptionSubscriber();
     $subscriber->onException($event);
@@ @@
     $request->setRequestFormat('unknown');

     $exception = new \Exception('Houston, we have a problem');
-    $event = new GetResponseForExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);
+    $event = new \Symfony\Component\HttpKernel\Event\ExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);

     $subscriber = new DefaultExceptionSubscriber();
     $subscriber->onException($event);
@@ @@
       'X-Custom' => 'test',
     ];
     $exception = new HttpException(406, 'Houston, we have a problem', NULL, $headers);
-    $event = new GetResponseForExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);
+    $event = new \Symfony\Component\HttpKernel\Event\ExceptionEvent($this->kernel, $request, HttpKernelInterface::MASTER_REQUEST, $exception);

     $subscriber = new DefaultExceptionSubscriber();
     $subscriber->onException($event);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/whoops/src/EventSubscriber/ExceptionSubscriberBase.php:94

    ---------- begin diff ----------
@@ @@
   /**
    * Handles exceptions for this subscriber.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The event to process.
    */
-  public function onException(GetResponseForExceptionEvent $event) {
+  public function onException(\Symfony\Component\HttpKernel\Event\ExceptionEvent $event) {
     if ($this->applies($event->getRequest())) {
-      $exception = $event->getException();
+      $exception = $event->getThrowable();
       $response = $this->exceptionToResponse($exception);
       $event->setResponse($response);
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameMethodRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 3 files have been changed by Rector                                       

