[parsing] modules/contrib/taxonomy_container/src/Plugin/EntityReferenceSelection/TermSelection.php
[refactoring] modules/contrib/taxonomy_container/src/Plugin/EntityReferenceSelection/TermSelection.php
[post rectors] modules/contrib/taxonomy_container/src/Plugin/EntityReferenceSelection/TermSelection.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/taxonomy_container/src/Plugin/EntityReferenceSelection/TermSelection.php
[parsing] modules/contrib/taxonomy_container/tests/src/Unit/TermSelectionTest.php
[refactoring] modules/contrib/taxonomy_container/tests/src/Unit/TermSelectionTest.php
[post rectors] modules/contrib/taxonomy_container/tests/src/Unit/TermSelectionTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/taxonomy_container/tests/src/Unit/TermSelectionTest.php
[refactoring] modules/contrib/taxonomy_container/tests/src/Unit/TermSelectionTest.php
[post rectors] modules/contrib/taxonomy_container/tests/src/Unit/TermSelectionTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/taxonomy_container/tests/src/Unit/TermSelectionTest.php

1 file with changes
===================

1) modules/contrib/taxonomy_container/tests/src/Unit/TermSelectionTest.php:24

    ---------- begin diff ----------
@@ @@
  */
 class TermSelectionTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The mocked entity manager.
    *
@@ @@
    *   Optional ID of the first parent term. Omit this or set to 0 to indicate
    *   that this is a root level term.
    *
-   * @return \PHPUnit_Framework_MockObject_MockObject
+   * @return \PHPUnit\Framework\MockObject\MockObject
    *   The mocked term entity.
    */
   protected function getMockTerm($id, $label, $parent = 0) {
@@ @@
     // We're using MockBuilder instead of Prophecy so we can mock the accessing
     // of the public properties $term->parents and $term->depth. This is not
     // supported by Prophecy.
-    $term = $this->getMockBuilder(Term::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $term = $this->createMock(Term::class);
     $term->expects($this->any())
       ->method('id')
       ->willReturn($id);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector
 * GetMockBuilderGetMockToCreateMockRector


 [OK] 1 file has been changed by Rector                                         

