diff --git a/composer.json b/composer.json
index 53dd0fc..be86deb 100644
--- a/composer.json
+++ b/composer.json
@@ -6,6 +6,6 @@
     ],
     "minimum-stability": "dev",
     "require": {
-        "drupal/core": "^8 || ^9"
+        "drupal/core": "^9.3 || ^10"
     }
 }
diff --git a/media_files_handler.info.yml b/media_files_handler.info.yml
index 07edc69..62430c9 100644
--- a/media_files_handler.info.yml
+++ b/media_files_handler.info.yml
@@ -1,5 +1,5 @@
 name: 'Media Files Handler'
 type: module
 description: 'Make sure all files get deleted on updates of a media entity'
-core_version_requirement: 8.x || 9.x
+core_version_requirement: ^9.3 || ^10
 package: 'Media'
diff --git a/src/Service/HandlerService.php b/src/Service/HandlerService.php
index 38a7785..f6b0a41 100644
--- a/src/Service/HandlerService.php
+++ b/src/Service/HandlerService.php
@@ -297,7 +297,7 @@ class HandlerService {
     }
 
     // Move file. This will also delete image styles.
-    $result = file_move($file, $new_uri);
+    $result = \Drupal::service('file.repository')->move($file, $new_uri);
 
     $this->logger->info(
       'Moved file ' . $file->id() . ' to private storage.'
@@ -386,7 +386,7 @@ class HandlerService {
         }
 
         // Move file.
-        file_move($file, $new_uri);
+        \Drupal::service('file.repository')->move($file, $new_uri);
 
         $this->logger->info(
           'Moved file ' . $file->id() . ' to public storage.'
diff --git a/tests/src/Kernel/HandlerServiceTest.php b/tests/src/Kernel/HandlerServiceTest.php
index a7c1dd8..b75435c 100644
--- a/tests/src/Kernel/HandlerServiceTest.php
+++ b/tests/src/Kernel/HandlerServiceTest.php
@@ -202,7 +202,7 @@ class HandlerServiceTest extends MediaKernelTestBase {
 
     // File should have moved to private.
     $this->assertFileExists('private://text.txt');
-    $this->assertFileNotExists('public://text.txt');
+    $this->assertFileDoesNotExist('public://text.txt');
   }
 
   /**
@@ -321,7 +321,7 @@ class HandlerServiceTest extends MediaKernelTestBase {
     $media->save();
 
     $this->assertFileExists('private://' . $filename);
-    $this->assertFileNotExists('public://' . $filename);
+    $this->assertFileDoesNotExist('public://' . $filename);
   }
 
   /**
@@ -340,7 +340,7 @@ class HandlerServiceTest extends MediaKernelTestBase {
 
     // Make sure the file is initially stored as private.
     $this->assertFileExists('private://' . $filename);
-    $this->assertFileNotExists('public://' . $filename);
+    $this->assertFileDoesNotExist('public://' . $filename);
 
     // Set Media Entity status to published.
     $media->setPublished();
@@ -348,7 +348,7 @@ class HandlerServiceTest extends MediaKernelTestBase {
 
     // The file should no be public.
     $this->assertFileExists('public://' . $filename);
-    $this->assertFileNotExists('private://' . $filename);
+    $this->assertFileDoesNotExist('private://' . $filename);
   }
 
   /**
