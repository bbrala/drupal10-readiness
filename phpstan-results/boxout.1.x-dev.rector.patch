diff --git a/tests/src/Functional/BoxoutTest.php b/tests/src/Functional/BoxoutTest.php
index f42fb88..445deff 100644
--- a/tests/src/Functional/BoxoutTest.php
+++ b/tests/src/Functional/BoxoutTest.php
@@ -53,7 +53,7 @@ class BoxoutTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create admin user.
@@ -116,18 +116,18 @@ class BoxoutTest extends BrowserTestBase {
 
     // Test boxout form callback.
     $this->drupalGet('boxout/dialog');
-    $this->assertResponse(200, "Boxout Dialog works");
+    $this->assertSession()->statusCodeEquals(200, "Boxout Dialog works");
 
     $this->xpath('//select[@id=:id]/option', [':id' => 'boxout-style']);
-    $this->assertOption('boxout-style', 'default');
-    $this->assertOption('boxout-style', 'plain');
+    $this->assertSession()->optionExists('boxout-style', 'default');
+    $this->assertSession()->optionExists('boxout-style', 'plain');
 
     $this->xpath('//select[@name=:id]/option', [':id' => 'boxout-element-type']);
-    $this->assertOption('boxout-element-type', 'p');
-    $this->assertOption('boxout-element-type', 'h2');
-    $this->assertOption('boxout-element-type', 'h3');
-    $this->assertOption('boxout-element-type', 'h4');
-    $this->assertOption('boxout-element-type', 'h5');
+    $this->assertSession()->optionExists('boxout-element-type', 'p');
+    $this->assertSession()->optionExists('boxout-element-type', 'h2');
+    $this->assertSession()->optionExists('boxout-element-type', 'h3');
+    $this->assertSession()->optionExists('boxout-element-type', 'h4');
+    $this->assertSession()->optionExists('boxout-element-type', 'h5');
 
     $field_header = $this->xpath('//input[@name="attributes[header]"]');
     $this->assertTrue(count($field_header) === 1, 'Header field is present');
@@ -152,7 +152,7 @@ class BoxoutTest extends BrowserTestBase {
     ], $this->t('Save'));
 
     // Check markup.
-    $this->assertRaw($markup);
+    $this->assertSession()->responseContains($markup);
   }
 
 }
