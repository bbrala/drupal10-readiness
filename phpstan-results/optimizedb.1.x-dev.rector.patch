diff --git a/optimizedb.info.yml b/optimizedb.info.yml
index 66462c3..dfaa90b 100644
--- a/optimizedb.info.yml
+++ b/optimizedb.info.yml
@@ -1,7 +1,6 @@
 name: 'Database Optimization'
 type: module
 description: 'Optimizing the site database.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Development
 configure: optimizedb.admin_page
diff --git a/tests/src/Functional/GeneralTest.php b/tests/src/Functional/GeneralTest.php
index 2751841..f745e15 100644
--- a/tests/src/Functional/GeneralTest.php
+++ b/tests/src/Functional/GeneralTest.php
@@ -43,7 +43,7 @@ class GeneralTest extends BrowserTestBase {
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer optimizedb settings']);
@@ -61,7 +61,7 @@ class GeneralTest extends BrowserTestBase {
     // Function for output all database tables and update their total size.
     _optimizedb_tables_list();
 
-    $this->assertNotEqual($this->config('optimizedb.settings')
+    $this->assertNotEquals($this->config('optimizedb.settings')
       ->get('tables_size'), 0);
   }
 
@@ -69,8 +69,12 @@ class GeneralTest extends BrowserTestBase {
    * Testing module admin page buttons.
    */
   public function testButtonsExecutingCommands() {
-    $this->drupalPostForm('admin/config/development/optimizedb', [], $this->t('Optimize tables'));
-    $this->assertText($this->t('The operation completed successfully.'));
+    $this->drupalGet('admin/config/development/optimizedb');
+    $this->submitForm([], $this->t('Optimize tables'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('The operation completed successfully.'));
   }
 
   /**
diff --git a/tests/src/Functional/HideNotificationTest.php b/tests/src/Functional/HideNotificationTest.php
index 1c7aed0..64bf6a7 100644
--- a/tests/src/Functional/HideNotificationTest.php
+++ b/tests/src/Functional/HideNotificationTest.php
@@ -41,7 +41,7 @@ class HideNotificationTest extends BrowserTestBase {
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer optimizedb settings']);
@@ -59,14 +59,20 @@ class HideNotificationTest extends BrowserTestBase {
       ->save();
 
     $this->drupalGet('admin/config/development/optimizedb/hide');
-    $this->assertText($this->t('Alerts are not available.'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('Alerts are not available.'));
 
     $config
       ->set('notify_optimize', TRUE)
       ->save();
 
     $this->drupalGet('admin/config/development/optimizedb/hide');
-    $this->assertNoText($this->t('Alerts are not available.'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains($this->t('Alerts are not available.'));
 
     $notify_optimize = $this->config('optimizedb.settings')
       ->get('notify_optimize');
diff --git a/tests/src/Functional/ListTablesOperationExecuteTest.php b/tests/src/Functional/ListTablesOperationExecuteTest.php
index d5cadd8..746e2fa 100644
--- a/tests/src/Functional/ListTablesOperationExecuteTest.php
+++ b/tests/src/Functional/ListTablesOperationExecuteTest.php
@@ -43,7 +43,7 @@ class ListTablesOperationExecuteTest extends BrowserTestBase {
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer optimizedb settings']);
@@ -54,8 +54,12 @@ class ListTablesOperationExecuteTest extends BrowserTestBase {
    * Performing operations on tables.
    */
   public function testListTablesOperationExecute() {
-    $this->drupalPostForm('admin/config/development/optimizedb/list_tables', [], $this->t('Check tables'));
-    $this->assertText($this->t('To execute, you must select at least one table from the list.'));
+    $this->drupalGet('admin/config/development/optimizedb/list_tables');
+    $this->submitForm([], $this->t('Check tables'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('To execute, you must select at least one table from the list.'));
 
     // Output all database tables.
     $tables = _optimizedb_tables_list();
@@ -64,9 +68,13 @@ class ListTablesOperationExecuteTest extends BrowserTestBase {
     $edit = [];
     // Selected first table in list.
     $edit['tables[' . $table_name . ']'] = $table_name;
+    $this->drupalGet('admin/config/development/optimizedb/list_tables');
 
-    $this->drupalPostForm('admin/config/development/optimizedb/list_tables', $edit, $this->t('Check tables'));
-    $this->assertText($this->t('The operation completed successfully.'));
+    $this->submitForm($edit, $this->t('Check tables'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('The operation completed successfully.'));
   }
 
 }
