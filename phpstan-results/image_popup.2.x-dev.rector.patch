diff --git a/src/Controller/ImagePopup.php b/src/Controller/ImagePopup.php
index ca28638..57fccd9 100644
--- a/src/Controller/ImagePopup.php
+++ b/src/Controller/ImagePopup.php
@@ -36,7 +36,7 @@ class ImagePopup extends ControllerBase {
     }
     else {
       // Get absolute path for original image.
-      $absolute_path = Url::fromUri(file_create_url($image_uri))->getUri();
+      $absolute_path = \Drupal::service('file_url_generator')->generate($image_uri)->getUri();
     }
 
     $response = new AjaxResponse();
diff --git a/src/Form/EditorImagePopupDialog.php b/src/Form/EditorImagePopupDialog.php
index 25dfdd6..e32e1ff 100644
--- a/src/Form/EditorImagePopupDialog.php
+++ b/src/Form/EditorImagePopupDialog.php
@@ -233,10 +233,10 @@ class EditorImagePopupDialog extends FormBase {
     $fid = $form_state->getValue(['fid', 0]);
     if (!empty($fid)) {
       $file = $this->entityTypeManager->getStorage('file')->load($fid);
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       // Transform absolute image URLs to relative image URLs: prevent problems
       // on multisite set-ups and prevent mixed content errors.
-      $file_url = file_url_transform_relative($file_url);
+      $file_url = \Drupal::service('file_url_generator')->transformRelative($file_url);
       $form_state->setValue(['attributes', 'src'], $file_url);
       $form_state->setValue(['attributes', 'data-entity-uuid'], $file->uuid());
       $form_state->setValue(['attributes', 'data-entity-type'], 'file');
diff --git a/src/Plugin/CKEditorPlugin/ImagePopup.php b/src/Plugin/CKEditorPlugin/ImagePopup.php
index 4bb6a6b..0652daa 100644
--- a/src/Plugin/CKEditorPlugin/ImagePopup.php
+++ b/src/Plugin/CKEditorPlugin/ImagePopup.php
@@ -29,7 +29,7 @@ class ImagePopup extends CKEditorPluginBase implements CKEditorPluginConfigurabl
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'image_popup') . '/js/plugins/imagepopup/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('image_popup') . '/js/plugins/imagepopup/plugin.js';
   }
 
   /**
@@ -58,7 +58,7 @@ class ImagePopup extends CKEditorPluginBase implements CKEditorPluginConfigurabl
     return [
       'ImagePopup' => [
         'label' => $this->t('Image Popup'),
-        'image' => drupal_get_path('module', 'image_popup') . '/js/plugins/imagepopup/icons/imagepopup.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('image_popup') . '/js/plugins/imagepopup/icons/imagepopup.png',
       ],
     ];
   }
diff --git a/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php b/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
index 5658828..c3326c2 100644
--- a/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
@@ -271,7 +271,7 @@ class ImagePopupFieldFormatter extends ImageFormatterBase implements ContainerFa
       }
       else {
         // Get absolute path for original image.
-        $absolute_path = Url::fromUri(file_create_url($image_uri))->getUri();
+        $absolute_path = \Drupal::service('file_url_generator')->generate($image_uri)->getUri();
       }
 
       // Create a url query to tell the controller how to build the modal.
