diff --git a/tests/src/Functional/PostUpdateTest.php b/tests/src/Functional/PostUpdateTest.php
index 20cc2c1..f93a0ff 100644
--- a/tests/src/Functional/PostUpdateTest.php
+++ b/tests/src/Functional/PostUpdateTest.php
@@ -26,7 +26,7 @@ class PostUpdateTest extends UpdatePathTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->configFactory = $this->container->get('config.factory');
   }
diff --git a/tests/src/Kernel/CssCollectionRendererTest.php b/tests/src/Kernel/CssCollectionRendererTest.php
index de77168..16926e3 100644
--- a/tests/src/Kernel/CssCollectionRendererTest.php
+++ b/tests/src/Kernel/CssCollectionRendererTest.php
@@ -71,11 +71,9 @@ class CssCollectionRendererTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $filesystem = $this->getMockBuilder(FileSystemInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $filesystem = $this->createMock(FileSystemInterface::class);
 
     $filesystem
       ->method('realpath')
@@ -85,33 +83,21 @@ class CssCollectionRendererTest extends KernelTestBase {
         ['public://test-3.css', __DIR__ . '/../../fixtures/test-3.css'],
       ]);
 
-    $this->eventDispatcher = $this->getMockBuilder(EventDispatcherInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->eventDispatcher = $this->createMock(EventDispatcherInterface::class);
 
-    $this->cssCollectionRenderer = $this->getMockBuilder(AssetCollectionRendererInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->cssCollectionRenderer = $this->createMock(AssetCollectionRendererInterface::class);
 
-    $this->themeManager = $this->getMockBuilder(ThemeManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->themeManager = $this->createMock(ThemeManagerInterface::class);
 
-    $config_factory = $this->getMockBuilder(ConfigFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $config_factory = $this->createMock(ConfigFactoryInterface::class);
 
-    $this->config = $this->getMockBuilder(Config::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->config = $this->createMock(Config::class);
 
     $config_factory
       ->method('get')
       ->willReturn($this->config);
 
-    $stream = $this->getMockBuilder(StreamInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $stream = $this->createMock(StreamInterface::class);
 
     $stream
       ->method('getContents')
@@ -123,29 +109,21 @@ div {
 CSS
     );
 
-    $response = $this->getMockBuilder(ResponseInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $response = $this->createMock(ResponseInterface::class);
 
     $response
       ->method('getBody')
       ->willReturn($stream);
 
-    $http_client = $this->getMockBuilder(ClientInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $http_client = $this->createMock(ClientInterface::class);
 
     $http_client
       ->method('request')
       ->willReturn($response);
 
-    $logger = $this->getMockBuilder(LoggerChannelInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $logger = $this->createMock(LoggerChannelInterface::class);
 
-    $logger_factory = $this->getMockBuilder(LoggerChannelFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $logger_factory = $this->createMock(LoggerChannelFactoryInterface::class);
 
     $logger_factory
       ->method('get')
@@ -194,9 +172,7 @@ CSS;
    *   The theme to set.
    */
   protected function setActiveTheme($theme) {
-    $active_theme = $this->getMockBuilder(ActiveTheme::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $active_theme = $this->createMock(ActiveTheme::class);
 
     $active_theme
       ->method('getName')
@@ -209,6 +185,7 @@ CSS;
 
   /**
    * Test case for when the enabled flag is not set.
+   * @doesNotPerformAssertions
    */
   public function testCssCollectionRendererDisabled() {
     $this->setConfig(FALSE, []);
@@ -223,6 +200,7 @@ CSS;
 
   /**
    * Test case for when the enabled flag is set, but the theme is wrong.
+   * @doesNotPerformAssertions
    */
   public function testCssCollectionRendererWrongTheme() {
     $this->setConfig(TRUE, ['some_theme']);
@@ -239,6 +217,7 @@ CSS;
 
   /**
    * Test case for when the enabled flag is set and all themes are enabled.
+   * @doesNotPerformAssertions
    */
   public function testCssCollectionRendererAllThemes() {
     $this->setConfig(TRUE, []);
diff --git a/tests/src/Unit/MinifySubscriberTest.php b/tests/src/Unit/MinifySubscriberTest.php
index 6115b1a..c0318fc 100644
--- a/tests/src/Unit/MinifySubscriberTest.php
+++ b/tests/src/Unit/MinifySubscriberTest.php
@@ -56,12 +56,10 @@ CSS;
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
-    $config = $this->getMockBuilder(ImmutableConfig::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $config = $this->createMock(ImmutableConfig::class);
 
     $config
       ->method('get')
@@ -69,9 +67,7 @@ CSS;
         return $this->minificationEnabled;
       });
 
-    $config_factory = $this->getMockBuilder(ConfigFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $config_factory = $this->createMock(ConfigFactoryInterface::class);
 
     $config_factory
       ->method('get')
