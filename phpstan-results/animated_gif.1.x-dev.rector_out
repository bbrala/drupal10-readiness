[parsing] modules/contrib/animated_gif/animated_gif.module
[refactoring] modules/contrib/animated_gif/animated_gif.module
[post rectors] modules/contrib/animated_gif/animated_gif.module
[print] modules/contrib/animated_gif/animated_gif.module
[parsing] modules/contrib/animated_gif/src/AnimatedGifUtility.php
[refactoring] modules/contrib/animated_gif/src/AnimatedGifUtility.php
[post rectors] modules/contrib/animated_gif/src/AnimatedGifUtility.php
[print] modules/contrib/animated_gif/src/AnimatedGifUtility.php
[parsing] modules/contrib/animated_gif/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
[refactoring] modules/contrib/animated_gif/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
[post rectors] modules/contrib/animated_gif/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
[print] modules/contrib/animated_gif/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
[refactoring] modules/contrib/animated_gif/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
[post rectors] modules/contrib/animated_gif/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
[print] modules/contrib/animated_gif/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php
[parsing] modules/contrib/animated_gif/tests/src/Functional/AnimatedGifFieldTest.php
[refactoring] modules/contrib/animated_gif/tests/src/Functional/AnimatedGifFieldTest.php
[post rectors] modules/contrib/animated_gif/tests/src/Functional/AnimatedGifFieldTest.php
[print] modules/contrib/animated_gif/tests/src/Functional/AnimatedGifFieldTest.php
[parsing] modules/contrib/animated_gif/tests/src/Functional/AnimatedGifFunctionalTestBase.php
[refactoring] modules/contrib/animated_gif/tests/src/Functional/AnimatedGifFunctionalTestBase.php
[post rectors] modules/contrib/animated_gif/tests/src/Functional/AnimatedGifFunctionalTestBase.php
[print] modules/contrib/animated_gif/tests/src/Functional/AnimatedGifFunctionalTestBase.php
[parsing] modules/contrib/animated_gif/tests/src/Kernel/AnimatedGifImageFormatterTest.php
[refactoring] modules/contrib/animated_gif/tests/src/Kernel/AnimatedGifImageFormatterTest.php
[post rectors] modules/contrib/animated_gif/tests/src/Kernel/AnimatedGifImageFormatterTest.php
[print] modules/contrib/animated_gif/tests/src/Kernel/AnimatedGifImageFormatterTest.php
[refactoring] modules/contrib/animated_gif/tests/src/Kernel/AnimatedGifImageFormatterTest.php
[post rectors] modules/contrib/animated_gif/tests/src/Kernel/AnimatedGifImageFormatterTest.php
[print] modules/contrib/animated_gif/tests/src/Kernel/AnimatedGifImageFormatterTest.php
[parsing] modules/contrib/animated_gif/tests/src/Traits/AnimatedGifTestTrait.php
[refactoring] modules/contrib/animated_gif/tests/src/Traits/AnimatedGifTestTrait.php
[post rectors] modules/contrib/animated_gif/tests/src/Traits/AnimatedGifTestTrait.php
[print] modules/contrib/animated_gif/tests/src/Traits/AnimatedGifTestTrait.php
[refactoring] modules/contrib/animated_gif/tests/src/Traits/AnimatedGifTestTrait.php
[post rectors] modules/contrib/animated_gif/tests/src/Traits/AnimatedGifTestTrait.php
[print] modules/contrib/animated_gif/tests/src/Traits/AnimatedGifTestTrait.php

3 files with changes
====================

1) modules/contrib/animated_gif/tests/src/Traits/AnimatedGifTestTrait.php:41

    ---------- begin diff ----------
@@ @@
    */
   protected function getTestFile(string $fileName, string $fileUri): FileInterface {
     // Copy the source file to public directory.
-    $source = drupal_get_path('module', 'animated_gif');
+    $source = \Drupal::service('extension.list.module')->getPath('animated_gif');
     $source .= '/tests/images/' . $fileName;
     $this->fileSystem->copy($source, $fileUri, FileSystemInterface::EXISTS_REPLACE);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/animated_gif/tests/src/Kernel/AnimatedGifImageFormatterTest.php:148

    ---------- begin diff ----------
@@ @@
     $renderer = $this->container->get('renderer');

     $output = $renderer->renderRoot($build[$this->fieldName][0]);
-    $this->assertStringContainsString(file_url_transform_relative(file_create_url($animatedGifFile->getFileUri())), (string) $output);
+    $this->assertStringContainsString(\Drupal::service('file_url_generator')->generateString($animatedGifFile->getFileUri()), (string) $output);

     $output = $renderer->renderRoot($build[$this->fieldName][1]);
-    $this->assertStringNotContainsString(file_url_transform_relative(file_create_url($notAnimatedGifFile->getFileUri())), (string) $output);
+    $this->assertStringNotContainsString(\Drupal::service('file_url_generator')->generateString($notAnimatedGifFile->getFileUri()), (string) $output);

     $image_style = $this->entityTypeManager
       ->getStorage('image_style')
@@ @@
       ->load('medium');

     // For non animated gifs, Url should be with image style Url.
-    $this->assertStringContainsString(file_url_transform_relative($image_style->buildUrl($notAnimatedGifFile->getFileUri())), htmlspecialchars_decode((string) $output));
+    $this->assertStringContainsString(\Drupal::service('file_url_generator')->transformRelative($image_style->buildUrl($notAnimatedGifFile->getFileUri())), htmlspecialchars_decode((string) $output));
   }

 }
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/animated_gif/src/Plugin/Field/FieldFormatter/AnimatedGifImageUrlFormatter.php:39

    ---------- begin diff ----------
@@ @@

       if ($image->getMimeType() === 'image/gif' && AnimatedGifUtility::isAnAnimatedGif($image_uri)) {
         // No image style is wanted for animated gifs.
-        $url = file_url_transform_relative(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generateString($image_uri);
         $elements[$delta]['#markup'] = $url;
       }
     }
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

