diff --git a/src/Event/ShopifyTermRedirectSubscriber.php b/src/Event/ShopifyTermRedirectSubscriber.php
index 5a0f7c1..e38b25b 100644
--- a/src/Event/ShopifyTermRedirectSubscriber.php
+++ b/src/Event/ShopifyTermRedirectSubscriber.php
@@ -21,7 +21,7 @@ class ShopifyTermRedirectSubscriber implements EventSubscriberInterface {
    *
    * @todo: Not sure this is the best way of doing things.
    */
-  public function checkForRedirection(GetResponseEvent $event) {
+  public function checkForRedirection(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     if (!($term = $event->getRequest()->get('taxonomy_term'))) {
       return;
     }
diff --git a/src/Event/ShopifyWebhookEvent.php b/src/Event/ShopifyWebhookEvent.php
index dec4631..084c160 100644
--- a/src/Event/ShopifyWebhookEvent.php
+++ b/src/Event/ShopifyWebhookEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * Provides the Shopify Webhook Event.
  */
-class ShopifyWebhookEvent extends Event {
+class ShopifyWebhookEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Webhook topic (event name).
diff --git a/tests/src/Functional/SmokeTest.php b/tests/src/Functional/SmokeTest.php
index fb414b0..54e11b5 100644
--- a/tests/src/Functional/SmokeTest.php
+++ b/tests/src/Functional/SmokeTest.php
@@ -24,7 +24,7 @@ class SmokeTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Make sure to complete the normal setup steps first.
     parent::setUp();
 
@@ -46,7 +46,10 @@ class SmokeTest extends BrowserTestBase {
     $this->assertSession()->statusCodeEquals(200);
 
     // Confirm that the front page contains the standard text.
-    $this->assertText('Welcome to Drupal');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Welcome to Drupal');
   }
 
   /**
@@ -57,7 +60,10 @@ class SmokeTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/system/shopify');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Shopify Store Settings');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Shopify Store Settings');
 
   }
 
@@ -69,7 +75,10 @@ class SmokeTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/system/shopify_api');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Shopify API Settings');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Shopify API Settings');
 
   }
 
