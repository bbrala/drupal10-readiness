[parsing] modules/contrib/migrate_conditions/src/Annotation/MigrateConditionsConditionPlugin.php
[refactoring] modules/contrib/migrate_conditions/src/Annotation/MigrateConditionsConditionPlugin.php
[post rectors] modules/contrib/migrate_conditions/src/Annotation/MigrateConditionsConditionPlugin.php
[print] modules/contrib/migrate_conditions/src/Annotation/MigrateConditionsConditionPlugin.php
[parsing] modules/contrib/migrate_conditions/src/ConditionInterface.php
[refactoring] modules/contrib/migrate_conditions/src/ConditionInterface.php
[post rectors] modules/contrib/migrate_conditions/src/ConditionInterface.php
[print] modules/contrib/migrate_conditions/src/ConditionInterface.php
[parsing] modules/contrib/migrate_conditions/src/ConditionPluginManager.php
[refactoring] modules/contrib/migrate_conditions/src/ConditionPluginManager.php
[post rectors] modules/contrib/migrate_conditions/src/ConditionPluginManager.php
[print] modules/contrib/migrate_conditions/src/ConditionPluginManager.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/ArrayConditionBase.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/ArrayConditionBase.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/ArrayConditionBase.php
[print] modules/contrib/migrate_conditions/src/Plugin/ArrayConditionBase.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/ConditionBase.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/ConditionBase.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/ConditionBase.php
[print] modules/contrib/migrate_conditions/src/Plugin/ConditionBase.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/LogicalConditionBase.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/LogicalConditionBase.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/LogicalConditionBase.php
[print] modules/contrib/migrate_conditions/src/Plugin/LogicalConditionBase.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/ProcessPluginWithConditionBase.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/ProcessPluginWithConditionBase.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/ProcessPluginWithConditionBase.php
[print] modules/contrib/migrate_conditions/src/Plugin/ProcessPluginWithConditionBase.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/SimpleComparisonBase.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/SimpleComparisonBase.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/SimpleComparisonBase.php
[print] modules/contrib/migrate_conditions/src/Plugin/SimpleComparisonBase.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate/process/EvaluateCondition.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate/process/EvaluateCondition.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate/process/EvaluateCondition.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate/process/EvaluateCondition.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate/process/FilterOnCondition.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate/process/FilterOnCondition.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate/process/FilterOnCondition.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate/process/FilterOnCondition.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate/process/FirstMeetingCondition.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate/process/FirstMeetingCondition.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate/process/FirstMeetingCondition.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate/process/FirstMeetingCondition.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate/process/IfCondition.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate/process/IfCondition.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate/process/IfCondition.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate/process/IfCondition.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate/process/SkipOnCondition.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate/process/SkipOnCondition.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate/process/SkipOnCondition.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate/process/SkipOnCondition.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AllElements.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AllElements.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AllElements.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AllElements.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AndCondition.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AndCondition.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AndCondition.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/AndCondition.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Callback.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Callback.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Callback.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Callback.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Contains.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Contains.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Contains.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Contains.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EmptyCondition.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EmptyCondition.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EmptyCondition.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EmptyCondition.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EntityExists.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EntityExists.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EntityExists.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/EntityExists.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Equals.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Equals.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Equals.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/Equals.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/GreaterThan.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/GreaterThan.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/GreaterThan.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/GreaterThan.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/HasElement.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/HasElement.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/HasElement.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/HasElement.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/InArray.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/InArray.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/InArray.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/InArray.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IsNull.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IsNull.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IsNull.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IsNull.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IssetCondition.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IssetCondition.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IssetCondition.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/IssetCondition.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/LessThan.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/LessThan.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/LessThan.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/LessThan.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OlderThan.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OlderThan.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OlderThan.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OlderThan.php
[parsing] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OrCondition.php
[refactoring] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OrCondition.php
[post rectors] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OrCondition.php
[print] modules/contrib/migrate_conditions/src/Plugin/migrate_conditions/condition/OrCondition.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/ConditionPluginManagerTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/ConditionPluginManagerTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/ConditionPluginManagerTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/ConditionPluginManagerTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/ConditionPluginManagerTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/ConditionPluginManagerTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/ConditionPluginManagerTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/IfConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/IfConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/IfConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/IfConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/MigrateConditionsPipelineTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/MigrateConditionsPipelineTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/MigrateConditionsPipelineTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/MigrateConditionsPipelineTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AllElementsTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AllElementsTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AllElementsTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AllElementsTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AllElementsTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AllElementsTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AllElementsTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AndConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AndConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AndConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AndConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AndConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AndConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/AndConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/condition/CallbackTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/CallbackTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/CallbackTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/CallbackTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/condition/EntityExistsTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/EntityExistsTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/EntityExistsTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/EntityExistsTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/EntityExistsTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/EntityExistsTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/EntityExistsTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/condition/HasElementTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/HasElementTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/HasElementTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/HasElementTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/HasElementTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/HasElementTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/HasElementTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OlderThanTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OlderThanTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OlderThanTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OlderThanTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OrConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OrConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OrConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OrConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OrConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OrConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Kernel/condition/OrConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/AllElementsTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/AllElementsTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/AllElementsTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/AllElementsTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/AndConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/AndConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/AndConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/AndConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/ArrayConditionTestBase.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/ArrayConditionTestBase.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/ArrayConditionTestBase.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/ArrayConditionTestBase.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/ArrayConditionTestBase.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/ArrayConditionTestBase.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/ArrayConditionTestBase.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/CallbackTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/CallbackTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/CallbackTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/CallbackTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestBase.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestBase.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestBase.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestBase.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestBase.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestBase.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestBase.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestEvaluateExceptionsTrait.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestEvaluateExceptionsTrait.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestEvaluateExceptionsTrait.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestEvaluateExceptionsTrait.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestEvaluateExceptionsTrait.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestEvaluateExceptionsTrait.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestEvaluateExceptionsTrait.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestValidationTrait.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestValidationTrait.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestValidationTrait.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestValidationTrait.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/ContainsTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/ContainsTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/ContainsTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/ContainsTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/EmptyConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/EmptyConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/EmptyConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/EmptyConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/EntityExistsTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/EntityExistsTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/EntityExistsTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/EntityExistsTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/EntityExistsTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/EntityExistsTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/EntityExistsTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/EqualsTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/EqualsTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/EqualsTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/EqualsTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/GreaterThanTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/GreaterThanTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/GreaterThanTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/GreaterThanTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/HasElementTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/HasElementTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/HasElementTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/HasElementTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/InArrayTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/InArrayTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/InArrayTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/InArrayTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/IsNullTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/IsNullTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/IsNullTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/IsNullTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/IssetConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/IssetConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/IssetConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/IssetConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/LessThanTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/LessThanTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/LessThanTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/LessThanTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/LogicalConditionTestBase.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/LogicalConditionTestBase.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/LogicalConditionTestBase.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/LogicalConditionTestBase.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/LogicalConditionTestBase.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/LogicalConditionTestBase.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/LogicalConditionTestBase.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/OlderThanTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/OlderThanTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/OlderThanTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/OlderThanTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/condition/OrConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/condition/OrConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/condition/OrConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/condition/OrConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/process/EvaluateConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/EvaluateConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/EvaluateConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/EvaluateConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/EvaluateConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/EvaluateConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/EvaluateConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/process/FilterOnConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/FilterOnConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/FilterOnConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/FilterOnConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/FilterOnConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/FilterOnConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/FilterOnConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/process/FirstMeetingConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/FirstMeetingConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/FirstMeetingConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/FirstMeetingConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/FirstMeetingConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/FirstMeetingConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/FirstMeetingConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/process/IfConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/IfConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/IfConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/IfConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/IfConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/IfConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/IfConditionTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/process/ProcessPluginWithConditionBaseTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/ProcessPluginWithConditionBaseTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/ProcessPluginWithConditionBaseTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/ProcessPluginWithConditionBaseTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/ProcessPluginWithConditionBaseTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/ProcessPluginWithConditionBaseTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/ProcessPluginWithConditionBaseTest.php
[parsing] modules/contrib/migrate_conditions/tests/src/Unit/process/SkipOnConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/SkipOnConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/SkipOnConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/SkipOnConditionTest.php
[refactoring] modules/contrib/migrate_conditions/tests/src/Unit/process/SkipOnConditionTest.php
[post rectors] modules/contrib/migrate_conditions/tests/src/Unit/process/SkipOnConditionTest.php
[print] modules/contrib/migrate_conditions/tests/src/Unit/process/SkipOnConditionTest.php

17 files with changes
=====================

1) modules/contrib/migrate_conditions/tests/src/Unit/process/SkipOnConditionTest.php:20

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestConstructorValidation
    */
   public function testConstructorValidation($configuration, $message) {
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->any())
       ->method('createInstance')
       ->will($this->returnValue($condition));
@@ @@
    * @dataProvider providerTestSkipOnCondition
    */
   public function testSkipOnCondition($will_skip, $method, $evaluate, $message) {
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
     $condition->expects($this->once())
       ->method('evaluate')
       ->will($this->returnValue($evaluate));
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->once())
       ->method('createInstance')
       ->will($this->returnValue($condition));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/migrate_conditions/tests/src/Unit/process/ProcessPluginWithConditionBaseTest.php:19

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestConstructorValidation
    */
   public function testConstructorValidation($configuration, $message) {
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->any())
       ->method('createInstance')
       ->will($this->returnValue($condition));
@@ @@
   public function testConditionInstance() {
     $equals_configuration = ['value' => 123];
     $equals = new Equals($equals_configuration, 'equals', []);
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->once())
       ->method('createInstance')
       ->willReturnMap([['equals', ['value' => 123], $equals]]);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/migrate_conditions/tests/src/Unit/process/IfConditionTest.php:19

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestIfCondition
    */
   public function testIfCondition($source, $evaluate, $expected, $do_get = [], $else_get = []) {
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
     $condition->expects($this->once())
       ->method('evaluate')
       ->will($this->returnValue($evaluate));
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->once())
       ->method('createInstance')
       ->will($this->returnValue($condition));
@@ @@
    * @dataProvider providerTestConstructorValidation
    */
   public function testConstructorValidation($configuration, $message) {
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->any())
       ->method('createInstance')
       ->will($this->returnValue($condition));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/migrate_conditions/tests/src/Unit/process/FirstMeetingConditionTest.php:18

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestFirstMeetingCondition
    */
   public function testFirstMeetingCondition($value, $evaluate, $default_value, $expected) {
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
     $condition->expects($this->exactly(count($evaluate)))
       ->method('evaluate')
       ->willReturnOnConsecutiveCalls(...$evaluate);
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->once())
       ->method('createInstance')
       ->will($this->returnValue($condition));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/migrate_conditions/tests/src/Unit/process/FilterOnConditionTest.php:19

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestFilterOnCondition
    */
   public function testFilterOnCondition($value, $evaluate, $expected, $preserve_keys = NULL) {
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
     $condition->expects($this->exactly(count($evaluate)))
       ->method('evaluate')
       ->willReturnOnConsecutiveCalls(...$evaluate);
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->once())
       ->method('createInstance')
       ->will($this->returnValue($condition));
@@ @@
    * Tests input validation.
    */
   public function testFilterOnConditionNotArray() {
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->once())
       ->method('createInstance')
       ->will($this->returnValue($condition));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/migrate_conditions/tests/src/Unit/process/EvaluateConditionTest.php:18

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestEvaluateCondition
    */
   public function testEvaluateCondition($evaluate, $expected) {
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
     $condition->expects($this->once())
       ->method('evaluate')
       ->will($this->returnValue($evaluate));
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->once())
       ->method('createInstance')
       ->will($this->returnValue($condition));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/migrate_conditions/tests/src/Unit/condition/LogicalConditionTestBase.php:24

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestConfigurationValidation
    */
   public function testConfigurationValidation($configuration, $message) {
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->any())
       ->method('createInstance')
       ->willReturn(NULL);
@@ @@
    * @dataProvider providerTestEvaluate
    */
   public function testEvaluate($source, $evaluates, $configuration, $expected) {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');

     $conditions = [];
     for ($i = 0; $i < count($configuration['conditions']); $i++) {
-      $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-        ->getMock();
+      $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
       $condition->expects($this->any())
         ->method('evaluate')
         ->willReturn($evaluates[$i]);
@@ @@
       $conditions[] = $condition;
     }

-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->any())
       ->method('createInstance')
       ->willReturnOnConsecutiveCalls(...$conditions);
@@ @@
     $condition = new $class($configuration, $this->conditionId, [], $condition_manager);
     $this->assertSame($expected, $condition->evaluate($source, $row));
     // Negate and expect the opposite.
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->any())
       ->method('createInstance')
       ->willReturnOnConsecutiveCalls(...$conditions);
@@ @@
    * @dataProvider providerTestEvaluateExceptions
    */
   public function testEvaluateExceptions($source, $configuration, $expected_message) {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');

-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->any())
       ->method('createInstance')
       ->willReturn($condition);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/migrate_conditions/tests/src/Unit/condition/EntityExistsTest.php:20

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestEvaluate
    */
   public function testEvaluate($source, $load, $configuration, $expected) {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $storage = $this->getMockBuilder('\Drupal\Core\Entity\EntityStorageInterface')
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
+    $storage = $this->createMock('\Drupal\Core\Entity\EntityStorageInterface');
     $storage->expects($this->once())
       ->method('load')
       ->willReturnMap([[$source, $load]]);
-    $entity_type_manager = $this->getMockBuilder('\Drupal\Core\Entity\EntityTypeManagerInterface')
-      ->getMock();
+    $entity_type_manager = $this->createMock('\Drupal\Core\Entity\EntityTypeManagerInterface');
     $entity_type_manager->expects($this->once())
       ->method('getStorage')
       ->willReturnMap([[$configuration['entity_type'], $storage]]);
@@ @@
    * Data provider for ::testEvaluate().
    */
   public function providerTestEvaluate() {
-    $mock_entity = $this->getMockBuilder('\Drupal\Core\Entity\EntityInterface')->getMock();
+    $mock_entity = $this->createMock('\Drupal\Core\Entity\EntityInterface');
     return [
       [
         'source' => 123,
@@ @@
    * @covers ::evaluate
    */
   public function testEvaluateExceptions() {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $storage = $this->getMockBuilder('\Drupal\Core\Entity\EntityStorageInterface')
-      ->getMock();
-    $entity_type_manager = $this->getMockBuilder('\Drupal\Core\Entity\EntityTypeManagerInterface')
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
+    $storage = $this->createMock('\Drupal\Core\Entity\EntityStorageInterface');
+    $entity_type_manager = $this->createMock('\Drupal\Core\Entity\EntityTypeManagerInterface');
     $entity_type_manager->expects($this->once())
       ->method('getStorage')
       ->willReturn($storage);
@@ @@
    * @covers ::__construct
    */
   public function testConstructorExceptions() {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $entity_type_manager = $this->getMockBuilder('\Drupal\Core\Entity\EntityTypeManagerInterface')
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
+    $entity_type_manager = $this->createMock('\Drupal\Core\Entity\EntityTypeManagerInterface');
     $entity_type_manager->expects($this->once())
       ->method('getStorage')
       ->willThrowException(new PluginNotFoundException('foo'));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestEvaluateExceptionsTrait.php:13

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestEvaluateExceptions
    */
   public function testEvaluateExceptions($source, $configuration, $property_value, $expected_message) {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
     if (isset($configuration['property'])) {
       $row->expects($this->any())
         ->method('get')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/migrate_conditions/tests/src/Unit/condition/ConditionTestBase.php:23

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestEvaluate
    */
   public function testEvaluate($source, $configuration, $property_value, $expected) {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
     if (isset($configuration['property'])) {
       $row->expects($this->any())
         ->method('get')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/migrate_conditions/tests/src/Unit/condition/ArrayConditionTestBase.php:24

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerTestConfigurationValidation
    */
   public function testConfigurationValidation($configuration, $message) {
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->any())
       ->method('createInstance')
       ->willReturn(NULL);
@@ @@
    * @dataProvider providerTestEvaluate
    */
   public function testEvaluate($source, $configuration, $sub_evaluate_map, $expected) {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');

     $map = [];
     foreach ($sub_evaluate_map as $source_then_return) {
       $map[] = [$source_then_return[0], $row, $source_then_return[1]];
     }
-    $condition = $this->getMockBuilder('\Drupal\migrate_conditions\ConditionInterface')
-      ->getMock();
+    $condition = $this->createMock('\Drupal\migrate_conditions\ConditionInterface');
     $condition->expects($this->any())
       ->method('evaluate')
       ->willReturnMap($map);
-    $condition_manager = $this->getMockBuilder('\Drupal\Component\Plugin\PluginManagerInterface')
-      ->getMock();
+    $condition_manager = $this->createMock('\Drupal\Component\Plugin\PluginManagerInterface');
     $condition_manager->expects($this->any())
       ->method('createInstance')
       ->will($this->returnValue($condition));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/migrate_conditions/tests/src/Kernel/condition/OrConditionTest.php:19

    ---------- begin diff ----------
@@ @@
    * Tests evaluating the or condition.
    */
   public function testEvaluate() {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
     $configuration = [
       'conditions' => [
         [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


13) modules/contrib/migrate_conditions/tests/src/Kernel/condition/HasElementTest.php:19

    ---------- begin diff ----------
@@ @@
    * Tests evaluating the 'has_element' condition.
    */
   public function testEvaluate() {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
     $configuration = [
       'condition' => [
         'plugin' => 'equals',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/migrate_conditions/tests/src/Kernel/condition/EntityExistsTest.php:43

    ---------- begin diff ----------
@@ @@
    * Tests with a real entity.
    */
   public function testEvaluate() {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');

     $user = User::create([
       'name' => $this->randomString(),
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/migrate_conditions/tests/src/Kernel/condition/AndConditionTest.php:19

    ---------- begin diff ----------
@@ @@
    * Tests evaluating the and condition.
    */
   public function testEvaluate() {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
     $configuration = [
       'conditions' => [
         [
@@ @@
     $this->assertFalse($condition->evaluate(4, $row));

     // Set iterate to false and assert the same results.
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
     $configuration = [
       'iterate' => FALSE,
       'conditions' => [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


16) modules/contrib/migrate_conditions/tests/src/Kernel/condition/AllElementsTest.php:19

    ---------- begin diff ----------
@@ @@
    * Tests evaluating the 'all_elements' condition.
    */
   public function testEvaluate() {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');
     $configuration = [
       'condition' => [
         'plugin' => 'greater_than',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


17) modules/contrib/migrate_conditions/tests/src/Kernel/ConditionPluginManagerTest.php:21

    ---------- begin diff ----------
@@ @@
    * Tests using 'not:' to negate plugins.
    */
   public function testConditionPluginManagerNot() {
-    $row = $this->getMockBuilder('Drupal\migrate\Row')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $row = $this->createMock('Drupal\migrate\Row');

     // Typical scenario.
     $configuration = [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 17 files have been changed by Rector                                      

