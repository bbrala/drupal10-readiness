diff --git a/passwd_only_logintoboggan/passwd_only_logintoboggan.module b/passwd_only_logintoboggan/passwd_only_logintoboggan.module
index da8c79e..05fe956 100755
--- a/passwd_only_logintoboggan/passwd_only_logintoboggan.module
+++ b/passwd_only_logintoboggan/passwd_only_logintoboggan.module
@@ -33,7 +33,7 @@ function passwd_only_logintoboggan_menu() {
 function passwd_only_logintoboggan_js_alter(&$javascript) {
   $path = 'sites/all/modules/logintoboggan/logintoboggan.unifiedlogin.js';
   if (!empty($javascript[$path])) {
-    $javascript[$path]['data'] = drupal_get_path('module', 'passwd_only_logintoboggan') . '/logintoboggan.unifiedlogin.js';
+    $javascript[$path]['data'] = \Drupal::service('extension.list.module')->getPath('passwd_only_logintoboggan') . '/logintoboggan.unifiedlogin.js';
   }
 
 }
diff --git a/tests/src/Functional/BlockTest.php b/tests/src/Functional/BlockTest.php
index 765d1bd..a5f9104 100755
--- a/tests/src/Functional/BlockTest.php
+++ b/tests/src/Functional/BlockTest.php
@@ -32,8 +32,14 @@ class BlockTest extends PasswdOnlyWebTestBase {
   public function testBlock() {
     // No block is shown.
     $this->drupalGet('');
-    $this->assertNoText('Password only user login');
-    $this->assertNoText('First create or set an user account, you want to use with the password only login module. Go to the admin page of the password only login module.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('Password only user login');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('First create or set an user account, you want to use with the password only login module. Go to the admin page of the password only login module.');
 
     // Add the block.
     $block = $this->placeBlock('passwd_only_block', [
@@ -43,14 +49,23 @@ class BlockTest extends PasswdOnlyWebTestBase {
 
     // Block is shown.
     $this->drupalGet('');
-    $this->assertText('Password only user login');
-    $this->assertText('First create or set an user account, you want to use with the password only login module. Go to the admin page of the password only login module.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Password only user login');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('First create or set an user account, you want to use with the password only login module. Go to the admin page of the password only login module.');
 
     // Show rendered form.
     $this->configureModule();
     $this->drupalLogout();
     $this->drupalGet('');
-    $this->assertText('Some description text.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Some description text.');
   }
 
 }
