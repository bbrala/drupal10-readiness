diff --git a/tests/modules/acquia_search_test/src/EventSubscriber/AcquiaSearchTestSubscriber.php b/tests/modules/acquia_search_test/src/EventSubscriber/AcquiaSearchTestSubscriber.php
index 18d042e..7767955 100644
--- a/tests/modules/acquia_search_test/src/EventSubscriber/AcquiaSearchTestSubscriber.php
+++ b/tests/modules/acquia_search_test/src/EventSubscriber/AcquiaSearchTestSubscriber.php
@@ -14,10 +14,10 @@ class AcquiaSearchTestSubscriber implements EventSubscriberInterface {
   /**
    * Injects $_GET parameters from URLs into the some global $_ENV.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The Event to process.
    */
-  public function checkForOverrides(GetResponseEvent $event) {
+  public function checkForOverrides(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     if ($event->getRequest()->query->get('env-overrides')) {
       $allowed_keys = [
         'AH_SITE_ENVIRONMENT',
diff --git a/tests/src/Functional/AcquiaConnectorSearchOverrideTest.php b/tests/src/Functional/AcquiaConnectorSearchOverrideTest.php
index 2547761..f6360a7 100644
--- a/tests/src/Functional/AcquiaConnectorSearchOverrideTest.php
+++ b/tests/src/Functional/AcquiaConnectorSearchOverrideTest.php
@@ -74,7 +74,7 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
 
     parent::setUp();
     // Generate and store a random set of credentials.
@@ -118,7 +118,10 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/search/search-api/server/' . $this->server);
 
-    $this->assertText('automatically enforced read-only mode on this connection.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('automatically enforced read-only mode on this connection.');
 
     //phpcs:disable
     //$delete_btn = $this->xpath('//input[@value="Delete all indexed data on this server"]');
@@ -127,7 +130,10 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/search/search-api/index/' . $this->index);
 
-    $this->assertText('automatically enforced read-only mode on this connection.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('automatically enforced read-only mode on this connection.');
 
   }
 
@@ -147,8 +153,14 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/search/search-api/server/' . $this->server, ['query' => $overrides]);
 
-    $this->assertNoText('automatically enforced read-only mode on this connection.');
-    $this->assertNoText('The following Acquia Search Solr index IDs would have worked for your current environment');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('automatically enforced read-only mode on this connection.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('The following Acquia Search Solr index IDs would have worked for your current environment');
 
     //phpcs:disable
     //$delete_btn = $this->xpath('//input[@value="Delete all indexed data on this server"]');
@@ -157,8 +169,14 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/search/search-api/index/' . $this->index, ['query' => $overrides]);
 
-    $this->assertNoText('automatically enforced read-only mode on this connection.');
-    $this->assertNoText('The following Acquia Search Solr index IDs would have worked for your current environment');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('automatically enforced read-only mode on this connection.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('The following Acquia Search Solr index IDs would have worked for your current environment');
 
   }
 
@@ -179,11 +197,23 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/search/search-api/server/' . $this->server, ['query' => $overrides]);
 
-    $this->assertText('automatically enforced read-only mode on this connection.');
-
-    $this->assertText('The following Acquia Search Solr index IDs would have worked for your current environment');
-    $this->assertText($this->id . '.test.' . $this->getDbName());
-    $this->assertText($this->id . '.test.' . $this->getSiteFolderName());
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('automatically enforced read-only mode on this connection.');
+
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The following Acquia Search Solr index IDs would have worked for your current environment');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->id . '.test.' . $this->getDbName());
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->id . '.test.' . $this->getSiteFolderName());
 
     //phpcs:disable
     //$delete_btn = $this->xpath('//input[@value="Delete all indexed data on this server"]');
@@ -193,7 +223,10 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
     $this->drupalGet('/admin/config/search/search-api/index/' . $this->index, ['query' => $overrides]);
 
     // On index edit page, check the read-only mode state.
-    $this->assertText('automatically enforced read-only mode on this connection.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('automatically enforced read-only mode on this connection.');
 
   }
 
@@ -213,11 +246,23 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/search/search-api/server/' . $this->server, ['query' => $overrides]);
 
-    $this->assertText('automatically enforced read-only mode on this connection.');
-
-    $this->assertText('The following Acquia Search Solr index IDs would have worked for your current environment');
-    $this->assertText($this->id . '.prod.' . $this->getDbName());
-    $this->assertText($this->id . '.prod.' . $this->getSiteFolderName());
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('automatically enforced read-only mode on this connection.');
+
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The following Acquia Search Solr index IDs would have worked for your current environment');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->id . '.prod.' . $this->getDbName());
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->id . '.prod.' . $this->getSiteFolderName());
 
     //phpcs:disable
     //$delete_btn = $this->xpath('//input[@value="Delete all indexed data on this server"]');
@@ -226,7 +271,10 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/search/search-api/index/' . $this->index, ['query' => $overrides]);
 
-    $this->assertText('automatically enforced read-only mode on this connection.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('automatically enforced read-only mode on this connection.');
 
   }
 
@@ -247,8 +295,14 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/search/search-api/server/' . $this->server, ['query' => $overrides]);
 
-    $this->assertNoText('automatically enforced read-only mode on this connection.');
-    $this->assertNoText('The following Acquia Search Solr index IDs would have worked for your current environment');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('automatically enforced read-only mode on this connection.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('The following Acquia Search Solr index IDs would have worked for your current environment');
 
     //phpcs:disable
     //$delete_btn = $this->xpath('//input[@value="Delete all indexed data on this server"]');
@@ -257,8 +311,14 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
 
     $this->drupalGet('/admin/config/search/search-api/index/' . $this->index, ['query' => $overrides]);
 
-    $this->assertNoText('automatically enforced read-only mode on this connection.');
-    $this->assertNoText('The following Acquia Search Solr index IDs would have worked for your current environment');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('automatically enforced read-only mode on this connection.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('The following Acquia Search Solr index IDs would have worked for your current environment');
 
   }
 
@@ -279,7 +339,8 @@ class AcquiaConnectorSearchOverrideTest extends BrowserTestBase {
     ];
 
     $submit_button = 'Connect';
-    $this->drupalPostForm('admin/config/system/acquia-connector/credentials', $edit_fields, $submit_button);
+    $this->drupalGet('admin/config/system/acquia-connector/credentials');
+    $this->submitForm($edit_fields, $submit_button);
 
     \Drupal::service('module_installer')->install(['acquia_search']);
   }
