diff --git a/src/Cache/DepcalcCacheBackend.php b/src/Cache/DepcalcCacheBackend.php
index c778181..cce8e1b 100644
--- a/src/Cache/DepcalcCacheBackend.php
+++ b/src/Cache/DepcalcCacheBackend.php
@@ -109,7 +109,7 @@ class DepcalcCacheBackend implements CacheBackendInterface, CacheTagsInvalidator
     /** @var \Drupal\depcalc\DependentEntityWrapperInterface[] $wrappers */
     $wrappers = array_map(function($cache) {return $cache->data;}, $cache_objects);
     $event = new InvalidateDependenciesEvent($wrappers);
-    $this->dispatcher->dispatch(DependencyCalculatorEvents::INVALIDATE_DEPENDENCIES, $event);
+    $this->dispatcher->dispatch($event, DependencyCalculatorEvents::INVALIDATE_DEPENDENCIES);
   }
 
   /**
diff --git a/src/DependencyCalculator.php b/src/DependencyCalculator.php
index 7774e16..b3638aa 100644
--- a/src/DependencyCalculator.php
+++ b/src/DependencyCalculator.php
@@ -95,7 +95,7 @@ class DependencyCalculator {
     // resave it later when all dependencies are correctly calculated.
     $stack->addDependency($wrapper, FALSE);
     $event = new CalculateEntityDependenciesEvent($wrapper, $stack);
-    $this->dispatcher->dispatch(DependencyCalculatorEvents::CALCULATE_DEPENDENCIES, $event);
+    $this->dispatcher->dispatch($event, DependencyCalculatorEvents::CALCULATE_DEPENDENCIES);
     // Update the stack with the newest $wrapper and the correct dependencies.
     $stack->addDependency($wrapper);
 
diff --git a/src/Event/CalculateEntityDependenciesEvent.php b/src/Event/CalculateEntityDependenciesEvent.php
index 32a2a97..c445410 100644
--- a/src/Event/CalculateEntityDependenciesEvent.php
+++ b/src/Event/CalculateEntityDependenciesEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * The event dispatched to calculate dependencies.
  */
-class CalculateEntityDependenciesEvent extends Event {
+class CalculateEntityDependenciesEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The wrapper of the entity for which we are calculating dependencies.
diff --git a/src/Event/FilterDependencyCalculationFieldsEvent.php b/src/Event/FilterDependencyCalculationFieldsEvent.php
index 18b031e..7df8857 100644
--- a/src/Event/FilterDependencyCalculationFieldsEvent.php
+++ b/src/Event/FilterDependencyCalculationFieldsEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * The FilterDependencyCalculationFieldsEvent event.
  */
-class FilterDependencyCalculationFieldsEvent extends Event {
+class FilterDependencyCalculationFieldsEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The entity to calculate dependencies.
diff --git a/src/Event/FilterDependencyConfigEntityEvent.php b/src/Event/FilterDependencyConfigEntityEvent.php
index bdb9a1a..2af4105 100644
--- a/src/Event/FilterDependencyConfigEntityEvent.php
+++ b/src/Event/FilterDependencyConfigEntityEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Class FilterDependencyConfigEntityEvent
  */
-class FilterDependencyConfigEntityEvent extends Event {
+class FilterDependencyConfigEntityEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Whether or not to calculate this config entity as a dependency.
diff --git a/src/Event/InvalidateDependenciesEvent.php b/src/Event/InvalidateDependenciesEvent.php
index 3cdeedc..3ab7655 100644
--- a/src/Event/InvalidateDependenciesEvent.php
+++ b/src/Event/InvalidateDependenciesEvent.php
@@ -4,7 +4,7 @@ namespace Drupal\depcalc\Event;
 
 use Symfony\Component\EventDispatcher\Event;
 
-class InvalidateDependenciesEvent extends Event {
+class InvalidateDependenciesEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The list of DependentEntityWrappers being invalidated.
diff --git a/src/Event/SectionComponentDependenciesEvent.php b/src/Event/SectionComponentDependenciesEvent.php
index 7171460..61d24b7 100644
--- a/src/Event/SectionComponentDependenciesEvent.php
+++ b/src/Event/SectionComponentDependenciesEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * The SectionComponentDependenciesEvent event.
  */
-class SectionComponentDependenciesEvent extends Event {
+class SectionComponentDependenciesEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The component for this event.
diff --git a/src/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollector.php b/src/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollector.php
index 1adbd9c..dacd2b1 100644
--- a/src/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollector.php
+++ b/src/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollector.php
@@ -75,7 +75,7 @@ class ConfigEntityDependencyCollector extends BaseDependencyCollector {
           if ($sub_entity) {
             $sub_wrapper = new DependentEntityWrapper($sub_entity);
             $config_dependency_event = new FilterDependencyConfigEntityEvent($sub_wrapper);
-            $dispatcher->dispatch(DependencyCalculatorEvents::FILTER_CONFIG_ENTITIES, $config_dependency_event);
+            $dispatcher->dispatch($config_dependency_event, DependencyCalculatorEvents::FILTER_CONFIG_ENTITIES);
             if (!$config_dependency_event->isCalculable()) {
               continue;
             }
diff --git a/src/EventSubscriber/LayoutBuilderComponentDepencyCollector/LayoutBuilderDependencyCollectorBase.php b/src/EventSubscriber/LayoutBuilderComponentDepencyCollector/LayoutBuilderDependencyCollectorBase.php
index aa2af21..b14ca98 100644
--- a/src/EventSubscriber/LayoutBuilderComponentDepencyCollector/LayoutBuilderDependencyCollectorBase.php
+++ b/src/EventSubscriber/LayoutBuilderComponentDepencyCollector/LayoutBuilderDependencyCollectorBase.php
@@ -69,7 +69,7 @@ abstract class LayoutBuilderDependencyCollectorBase extends BaseDependencyCollec
   protected function addComponentDependencies(CalculateEntityDependenciesEvent $event, array $components) {
     foreach ($components as $component) {
       $componentEvent = new SectionComponentDependenciesEvent($component);
-      $this->dispatcher->dispatch(DependencyCalculatorEvents::SECTION_COMPONENT_DEPENDENCIES_EVENT, $componentEvent);
+      $this->dispatcher->dispatch($componentEvent, DependencyCalculatorEvents::SECTION_COMPONENT_DEPENDENCIES_EVENT);
       $this->addSectionComponentEntityDependencies($event, $componentEvent->getEntityDependencies());
       $event->setModuleDependencies($componentEvent->getModuleDependencies());
     }
diff --git a/src/FieldExtractor.php b/src/FieldExtractor.php
index 54da8a4..fcc8482 100644
--- a/src/FieldExtractor.php
+++ b/src/FieldExtractor.php
@@ -47,7 +47,7 @@ class FieldExtractor {
       $event = new FilterDependencyCalculationFieldsEvent($entity, ...$fields);
       /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher */
       $dispatcher = \Drupal::service('event_dispatcher');
-      $dispatcher->dispatch(DependencyCalculatorEvents::FILTER_FIELDS, $event);
+      $dispatcher->dispatch($event, DependencyCalculatorEvents::FILTER_FIELDS);
       $fields = $event->getFields();
     }
     return $fields;
diff --git a/tests/src/Functional/DepcalcClearCacheTest.php b/tests/src/Functional/DepcalcClearCacheTest.php
index 9d6ee09..4c7b2f6 100644
--- a/tests/src/Functional/DepcalcClearCacheTest.php
+++ b/tests/src/Functional/DepcalcClearCacheTest.php
@@ -69,7 +69,7 @@ class DepcalcClearCacheTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->calculator = $this->container->get('entity.dependency.calculator');
diff --git a/tests/src/Kernel/DependencyCalculatorTest.php b/tests/src/Kernel/DependencyCalculatorTest.php
index 7f6eb2a..1d46b4b 100644
--- a/tests/src/Kernel/DependencyCalculatorTest.php
+++ b/tests/src/Kernel/DependencyCalculatorTest.php
@@ -58,7 +58,7 @@ class DependencyCalculatorTest extends KernelTestBase {
    *
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('file', ['file_usage']);
@@ -132,9 +132,9 @@ class DependencyCalculatorTest extends KernelTestBase {
     // Calculate dependencies for the last entity from the $entities list.
     /** @var \Drupal\Core\Entity\EntityInterface $entity */
     $actual_entities = $this->getEntityDependencies($entity);
-    $this->assertEqual($actual_entities, $expected_entities);
+    $this->assertEquals($actual_entities, $expected_entities);
     $actual_modules = $this->getModuleDependencies($entity);
-    $this->assertEqual($actual_modules, $expected_modules);
+    $this->assertEquals($actual_modules, $expected_modules);
   }
 
   /**
diff --git a/tests/src/Kernel/EntityLanguageTest.php b/tests/src/Kernel/EntityLanguageTest.php
index 19d3087..35c8216 100644
--- a/tests/src/Kernel/EntityLanguageTest.php
+++ b/tests/src/Kernel/EntityLanguageTest.php
@@ -69,7 +69,7 @@ class EntityLanguageTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['language', 'field', 'filter', 'node', 'system']);
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollectorTest.php
index 7268d08..8f1f24c 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollectorTest.php
@@ -57,7 +57,7 @@ class ConfigEntityDependencyCollectorTest extends KernelTestBase {
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
@@ -81,7 +81,7 @@ class ConfigEntityDependencyCollectorTest extends KernelTestBase {
     $dependencies = $this->calculator->calculateDependencies($wrapper, new DependencyStack());
 
     $this->assertNotEmpty($dependencies);
-    $this->assertEqual(2, count($dependencies));
+    $this->assertEquals(2, count($dependencies));
     $this->assertArrayHasKey($style1->uuid(), $dependencies);
 
     // Creating a one more dependent image style.
@@ -106,11 +106,11 @@ class ConfigEntityDependencyCollectorTest extends KernelTestBase {
     $wrapper = new DependentEntityWrapper($responsiveImageStyle);
     $dependencies = $this->calculator->calculateDependencies($wrapper, new DependencyStack());
     $this->assertNotEmpty($dependencies);
-    $this->assertEqual(4, count($dependencies));
+    $this->assertEquals(4, count($dependencies));
     $this->assertArrayHasKey($style1->uuid(), $wrapper->getDependencies());
     $this->assertArrayHasKey($style2->uuid(), $wrapper->getDependencies());
 
-    $this->assertEqual($dependencies['module'], [$wrapper->getEntity()->getEntityType()->getProvider()]);
+    $this->assertEquals($dependencies['module'], [$wrapper->getEntity()->getEntityType()->getProvider()]);
   }
 
   /**
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/DrupalMediaEmbedCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/DrupalMediaEmbedCollectorTest.php
index bf2af98..b504e1c 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/DrupalMediaEmbedCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/DrupalMediaEmbedCollectorTest.php
@@ -54,7 +54,7 @@ class DrupalMediaEmbedCollectorTest extends MediaEmbedFilterTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('path_alias');
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/EmbeddedImagesCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/EmbeddedImagesCollectorTest.php
index cdef2b5..746fcbc 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/EmbeddedImagesCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/EmbeddedImagesCollectorTest.php
@@ -48,7 +48,7 @@ class EmbeddedImagesCollectorTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig('filter');
@@ -117,9 +117,7 @@ class EmbeddedImagesCollectorTest extends KernelTestBase {
    * @dataProvider dependenciesCalculationProvider
    */
   public function testDependenciesCalculationWithoutImagesCollector(array $files_ids, array $usages) {
-    $mock = $this->getMockBuilder(EmbeddedImagesCollector::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $mock = $this->createMock(EmbeddedImagesCollector::class);
     \Drupal::getContainer()->set('embedded_images.calculator', $mock);
 
     $node = $this->createNode();
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityFormDisplayDependencyCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityFormDisplayDependencyCollectorTest.php
index 9731055..c700d9f 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityFormDisplayDependencyCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityFormDisplayDependencyCollectorTest.php
@@ -48,7 +48,7 @@ class EntityFormDisplayDependencyCollectorTest extends KernelTestBase {
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig('node');
@@ -95,8 +95,8 @@ class EntityFormDisplayDependencyCollectorTest extends KernelTestBase {
 
     /** @var \Drupal\depcalc\DependentEntityWrapper $formDisplayEntityWrapper */
     $formDisplayEntityWrapper = $dependencies[$enabledFormDisplay->uuid()];
-    $this->assertEqual($formDisplayEntityWrapper->getUuid(), $enabledFormDisplay->uuid());
-    $this->assertEqual($enabledFormDisplay->getEntityTypeId(), 'entity_form_display');
+    $this->assertEquals($formDisplayEntityWrapper->getUuid(), $enabledFormDisplay->uuid());
+    $this->assertEquals($enabledFormDisplay->getEntityTypeId(), 'entity_form_display');
   }
 
   /**
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityReferenceFieldDependencyCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityReferenceFieldDependencyCollectorTest.php
index 3bae1c5..6e13ad3 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityReferenceFieldDependencyCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityReferenceFieldDependencyCollectorTest.php
@@ -53,7 +53,7 @@ class EntityReferenceFieldDependencyCollectorTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig('node');
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityViewDisplayDependencyCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityViewDisplayDependencyCollectorTest.php
index d6437a6..791f729 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityViewDisplayDependencyCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/EntityViewDisplayDependencyCollectorTest.php
@@ -50,7 +50,7 @@ class EntityViewDisplayDependencyCollectorTest extends KernelTestBase {
    * @throws \ReflectionException
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('filter_format');
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/LinkFieldCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/LinkFieldCollectorTest.php
index 193fbde..75a9729 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/LinkFieldCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/LinkFieldCollectorTest.php
@@ -58,7 +58,7 @@ class LinkFieldCollectorTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('node', 'node_access');
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/MenuDependencyTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/MenuDependencyTest.php
index e23fe73..093c139 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/MenuDependencyTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/MenuDependencyTest.php
@@ -34,7 +34,7 @@ class MenuDependencyTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
     $this->installEntitySchema('node');
@@ -103,8 +103,8 @@ class MenuDependencyTest extends KernelTestBase {
     $subscriber = new MenuItemContentDependencyCollector();
     $subscriber->onCalculateDependencies($event);
 
-    $this->assertEqual(array_keys($wrapper->getDependencies()), $expected_entities);
-    $this->assertEqual($wrapper->getModuleDependencies(), $expected_modules);
+    $this->assertEquals(array_keys($wrapper->getDependencies()), $expected_entities);
+    $this->assertEquals($wrapper->getModuleDependencies(), $expected_modules);
   }
 
   /**
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/TermParentCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/TermParentCollectorTest.php
index 968bb8e..4ac8d25 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/TermParentCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/TermParentCollectorTest.php
@@ -42,7 +42,7 @@ class TermParentCollectorTest extends KernelTestBase {
    * @throws \ReflectionException
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('filter_format');
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/TextItemFieldDependencyCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/TextItemFieldDependencyCollectorTest.php
index 2e2fff7..75fb879 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/TextItemFieldDependencyCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/TextItemFieldDependencyCollectorTest.php
@@ -55,7 +55,7 @@ class TextItemFieldDependencyCollectorTest extends KernelTestBase {
    * @throws \ReflectionException
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('filter_format');
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/WorkflowCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/WorkflowCollectorTest.php
index 8130013..31bd207 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/WorkflowCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/WorkflowCollectorTest.php
@@ -44,7 +44,7 @@ class WorkflowCollectorTest extends KernelTestBase {
    * @throws \ReflectionException
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('workflow');
     $this->installEntitySchema('node');
diff --git a/tests/src/Kernel/EventSubscriber/LayoutBuilderDependencyCalculatorTest.php b/tests/src/Kernel/EventSubscriber/LayoutBuilderDependencyCalculatorTest.php
index 07cc951..6683704 100644
--- a/tests/src/Kernel/EventSubscriber/LayoutBuilderDependencyCalculatorTest.php
+++ b/tests/src/Kernel/EventSubscriber/LayoutBuilderDependencyCalculatorTest.php
@@ -146,7 +146,7 @@ class LayoutBuilderDependencyCalculatorTest extends KernelTestBase {
     $this->assertTrue(in_array($view->uuid(), $actual_entities));
 
     $actual_modules = $this->getModuleDependencies($entity);
-    $this->assertEqual($actual_modules, [
+    $this->assertEquals($actual_modules, [
       'user',
       'block_content',
       'layout_builder',
@@ -167,7 +167,7 @@ class LayoutBuilderDependencyCalculatorTest extends KernelTestBase {
     $this->assertTrue(in_array($view->uuid(), $actual_entities));
 
     $actual_modules = $this->getModuleDependencies($node);
-    $this->assertEqual($actual_modules, [
+    $this->assertEquals($actual_modules, [
       'node',
       'layout_discovery',
       'block_content',
