diff --git a/src/Controller/LoginController.php b/src/Controller/LoginController.php
index 1c0297e..688b66c 100644
--- a/src/Controller/LoginController.php
+++ b/src/Controller/LoginController.php
@@ -175,7 +175,7 @@ class LoginController extends ControllerBase {
         $this->eventDispatcher->dispatch($event, LeagueOauthLoginEvents::LOGIN_WHILE_LOGGED_IN);
       }
       else {
-        $this->eventDispatcher->dispatch(LeagueOauthLoginEvents::LOGIN_WHILE_LOGGED_IN, $event);
+        $this->eventDispatcher->dispatch($event, LeagueOauthLoginEvents::LOGIN_WHILE_LOGGED_IN);
       }
       $url = Url::fromRoute('user.page')->toString(TRUE)->getGeneratedUrl();
       if ($event->getRedirectUrl()) {
@@ -230,7 +230,7 @@ class LoginController extends ControllerBase {
           $this->eventDispatcher->dispatch($event, LeagueOauthLoginEvents::LOGIN_WITH_CODE);
         }
         else {
-          $this->eventDispatcher->dispatch(LeagueOauthLoginEvents::LOGIN_WITH_CODE, $event);
+          $this->eventDispatcher->dispatch($event, LeagueOauthLoginEvents::LOGIN_WITH_CODE);
         }
         // Using the access token, we may look up details about the resource
         // owner.
@@ -246,7 +246,7 @@ class LoginController extends ControllerBase {
           $this->eventDispatcher->dispatch($event, LeagueOauthLoginEvents::ACCESS_TOKEN_EVENT);
         }
         else {
-          $this->eventDispatcher->dispatch(LeagueOauthLoginEvents::ACCESS_TOKEN_EVENT, $event);
+          $this->eventDispatcher->dispatch($event, LeagueOauthLoginEvents::ACCESS_TOKEN_EVENT);
         }
         /** @var \League\OAuth2\Client\Provider\ResourceOwnerInterface $resource_owner */
         $resource_owner = $provider->getResourceOwner($access_token);
diff --git a/src/Event/AccessTokenEvent.php b/src/Event/AccessTokenEvent.php
index 23541ea..ed077aa 100644
--- a/src/Event/AccessTokenEvent.php
+++ b/src/Event/AccessTokenEvent.php
@@ -19,7 +19,7 @@ else {
   /**
    * Class used for the login while logged in event.
    */
-  class AccessTokenEvent extends SymfonyEvent {
+  class AccessTokenEvent extends \Symfony\Contracts\EventDispatcher\Event {
     use LoginEventTrait;
 
   }
diff --git a/src/Event/LoginWhileLoggedInEvent.php b/src/Event/LoginWhileLoggedInEvent.php
index 79a2f72..463bb2c 100644
--- a/src/Event/LoginWhileLoggedInEvent.php
+++ b/src/Event/LoginWhileLoggedInEvent.php
@@ -19,7 +19,7 @@ else {
   /**
    * Class used for the login while logged in event.
    */
-  class LoginWhileLoggedInEvent extends SymfonyEvent {
+  class LoginWhileLoggedInEvent extends \Symfony\Contracts\EventDispatcher\Event {
     use LoginEventTrait;
 
   }
diff --git a/src/Event/LoginWithCodeEvent.php b/src/Event/LoginWithCodeEvent.php
index 567d4d2..f8394ca 100644
--- a/src/Event/LoginWithCodeEvent.php
+++ b/src/Event/LoginWithCodeEvent.php
@@ -19,7 +19,7 @@ else {
   /**
    * Class used for the login while logged in event.
    */
-  class LoginWithCodeEvent extends SymfonyEvent {
+  class LoginWithCodeEvent extends \Symfony\Contracts\EventDispatcher\Event {
     use LoginWithCodeEventTrait;
 
   }
diff --git a/tests/src/Kernel/LoginTestBase.php b/tests/src/Kernel/LoginTestBase.php
index adc7784..ceda03a 100644
--- a/tests/src/Kernel/LoginTestBase.php
+++ b/tests/src/Kernel/LoginTestBase.php
@@ -36,7 +36,7 @@ abstract class LoginTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
     $this->installSchema('system', 'sequences');
