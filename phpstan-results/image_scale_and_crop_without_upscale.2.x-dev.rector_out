[parsing] modules/contrib/image_scale_and_crop_without_upscale/src/Plugin/ImageEffect/ScaleAndCropWithoutUpscaleImageEffect.php
[refactoring] modules/contrib/image_scale_and_crop_without_upscale/src/Plugin/ImageEffect/ScaleAndCropWithoutUpscaleImageEffect.php
[post rectors] modules/contrib/image_scale_and_crop_without_upscale/src/Plugin/ImageEffect/ScaleAndCropWithoutUpscaleImageEffect.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/image_scale_and_crop_without_upscale/src/Plugin/ImageEffect/ScaleAndCropWithoutUpscaleImageEffect.php
[parsing] modules/contrib/image_scale_and_crop_without_upscale/tests/src/Functional/ImageEffectsTest.php
[refactoring] modules/contrib/image_scale_and_crop_without_upscale/tests/src/Functional/ImageEffectsTest.php
[post rectors] modules/contrib/image_scale_and_crop_without_upscale/tests/src/Functional/ImageEffectsTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/image_scale_and_crop_without_upscale/tests/src/Functional/ImageEffectsTest.php
[refactoring] modules/contrib/image_scale_and_crop_without_upscale/tests/src/Functional/ImageEffectsTest.php
[post rectors] modules/contrib/image_scale_and_crop_without_upscale/tests/src/Functional/ImageEffectsTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/image_scale_and_crop_without_upscale/tests/src/Functional/ImageEffectsTest.php

1 file with changes
===================

1) modules/contrib/image_scale_and_crop_without_upscale/tests/src/Functional/ImageEffectsTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->manager = $this->container->get('plugin.manager.image.effect');
   }
@@ @@

       // Check the parameters.
       $calls = $this->imageTestGetAllCalls();
-      $this->assertEqual($calls['scale_and_crop'][0][0], $cropX, 'X was computed and passed correctly for data set ' . serialize($data));
-      $this->assertEqual($calls['scale_and_crop'][0][1], $cropY, 'Y was computed and passed correctly for data set ' . serialize($data));
-      $this->assertEqual($calls['scale_and_crop'][0][2], $resultWidth, 'Width was computed and passed correctly for data set ' . serialize($data));
-      $this->assertEqual($calls['scale_and_crop'][0][3], $resultHeight, 'Height was computed and passed correctly for data set ' . serialize($data));
+      $this->assertEquals($calls['scale_and_crop'][0][0], $cropX, 'X was computed and passed correctly for data set ' . serialize($data));
+      $this->assertEquals($calls['scale_and_crop'][0][1], $cropY, 'Y was computed and passed correctly for data set ' . serialize($data));
+      $this->assertEquals($calls['scale_and_crop'][0][2], $resultWidth, 'Width was computed and passed correctly for data set ' . serialize($data));
+      $this->assertEquals($calls['scale_and_crop'][0][3], $resultHeight, 'Height was computed and passed correctly for data set ' . serialize($data));
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

