diff --git a/connectors/l10n_drupal/l10n_drupal.files.inc b/connectors/l10n_drupal/l10n_drupal.files.inc
index 8f0172a..1fc16e0 100644
--- a/connectors/l10n_drupal/l10n_drupal.files.inc
+++ b/connectors/l10n_drupal/l10n_drupal.files.inc
@@ -15,11 +15,11 @@ function l10n_drupal_files_scan($source = NULL, $automated = FALSE) {
   $workdir = variable_get('l10n_server_connector_l10n_drupal_files_directory', '');
 
   if (!is_dir($workdir)) {
-    drupal_set_message(t('The configured directory (%workdir) cannot be found. <a href="@configure">Check your configuration</a>.', array('%workdir' => $workdir, '@configure' => url('admin/l10n_server/connectors/config/l10n_drupal/files'))));
+    \Drupal::messenger()->addStatus(t('The configured directory (%workdir) cannot be found. <a href="@configure">Check your configuration</a>.', array('%workdir' => $workdir, '@configure' => url('admin/l10n_server/connectors/config/l10n_drupal/files'))));
   }
   else {
     // Packages are always .tar.gz files.
-    $files = file_scan_directory($workdir, '/\.tar\.gz$/');
+    $files = \Drupal::service('file_system')->scanDirectory($workdir, '/\.tar\.gz$/');
     if (count($files)) {
       foreach ($files as $path => $file) {
 
@@ -74,29 +74,31 @@ ORDER BY last_parsed ASC",
         // User feedback, if not automated. Log messages are already done.
         if (isset($result['error']) && !$automated) {
           $user_feedback = TRUE;
-          drupal_set_message($result['error'], 'error');
+          \Drupal::messenger()->addError($result['error']);
         }
         elseif (isset($result['message']) && !$automated) {
           $user_feedback = TRUE;
-          drupal_set_message($result['message']);
+          \Drupal::messenger()->addStatus($result['message']);
         }
       }
       else {
         if (!$automated) {
           $user_feedback = TRUE;
-          drupal_set_message(t('@release was already parsed, no need to scan again.', array('@release' => $release->download_link)));
+          \Drupal::messenger()->addStatus(t('@release was already parsed, no need to scan again.', array('@release' => $release->download_link)));
         }
       }
     }
     // Hackish update of last parsed time so other tarballs will get into the queue too.
-    // @todo: work on something better for this.
-    db_update('l10n_server_release')
-      ->fields(array('last_parsed' => REQUEST_TIME))
+				// @todo: work on something better for this.
+				// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				\Drupal::database()->update('l10n_server_release')
+      ->fields(array('last_parsed' => \Drupal::time()->getRequestTime()))
       ->condition('rid', $release->rid)
       ->execute();
   }
   if (!$automated && !$user_feedback) {
-    drupal_set_message(t('No (new) local Drupal files found to scan in %workdir.', array('%workdir' => $workdir)));
+    \Drupal::messenger()->addStatus(t('No (new) local Drupal files found to scan in %workdir.', array('%workdir' => $workdir)));
   }
 
   // Ensure that a Drupal page will be displayed with the messages if any.
@@ -120,9 +122,9 @@ ORDER BY last_parsed ASC",
  */
 function l10n_drupal_save_data($project_uri, $project_title, $release_version, $filepath, $filedate) {
   // Save project information first.
-  $result = db_query(
-    "SELECT * FROM {l10n_server_project} WHERE uri = :uri",
-    array(':uri' => $project_uri));
+		// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+		// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+		$result = \Drupal::database()->query("SELECT * FROM {l10n_server_project} WHERE uri = :uri", array(':uri' => $project_uri));
   if ($existing_project = $result->fetchObject()) {
     if ($existing_project->connector_module == 'l10n_drupal_files') {
       if ($existing_project->status == 0) {
@@ -130,7 +132,9 @@ function l10n_drupal_save_data($project_uri, $project_title, $release_version, $
         return;
       }
       // No need to update home_link here, as uri is not changed, and we base home_link on the uri.
-      db_update('l10n_server_project')
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						\Drupal::database()->update('l10n_server_project')
 	->fields(array('title' => $project_title))
 	->condition('uri', $project_uri)
 	->condition('connector_module', 'l10n_drupal_files')
@@ -144,14 +148,16 @@ function l10n_drupal_save_data($project_uri, $project_title, $release_version, $
         '%this_connector' => 'l10n_drupal_files',
       );
       watchdog('l10n_drupal', 'An existing project under the URI %uri is already handled by %other_connector. Not possible to add it with %this_connector.', $t_args);
-      drupal_set_message(t('An existing project under the URI %uri is already handled by %other_connector. Not possible to add it with %this_connector.', $t_args), 'error');
+      \Drupal::messenger()->addError(t('An existing project under the URI %uri is already handled by %other_connector. Not possible to add it with %this_connector.', $t_args));
       return;
     }
   }
   else {
     $home_link = (variable_get('l10n_server_connector_l10n_drupal_files_drupal_home', 0) ?
                  ('http://drupal.org/project/' . $project_uri) : '');
-    db_insert('l10n_server_project')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				\Drupal::database()->insert('l10n_server_project')
       ->fields(array(
           'uri' => $project_uri,
           'title' => $project_title,
@@ -166,15 +172,21 @@ function l10n_drupal_save_data($project_uri, $project_title, $release_version, $
   // Grab updated project data and save release information.
   $sql = "SELECT * FROM {l10n_server_project} WHERE uri = :uri AND connector_module = 'l10n_drupal_files'";
   $arg = array(':uri' => $project_uri);
-  $project = db_query($sql, $arg)->fetchObject();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+		// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+		$project = \Drupal::database()->query($sql, $arg)->fetchObject();
 
   $sql = "SELECT * FROM {l10n_server_release} WHERE pid = :pid AND title = :title";
   $arg = array(':pid' => $project->pid, ':title' => $release_version);
-  if ($existing_release = db_query($sql, $arg)->fetchObject()) {
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+		// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+		if ($existing_release = \Drupal::database()->query($sql, $arg)->fetchObject()) {
     if ($filedate != $existing_release->file_date) {
       // New file with possibly new date for the same release (dev snapshot
-      // probably), so update data, set parsed date to past.
-      db_update('l10n_server_release')
+						// probably), so update data, set parsed date to past.
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						\Drupal::database()->update('l10n_server_release')
 	->fields(array(
             'download_link' => $filepath,
             'file_date' => $filedate,
@@ -186,7 +198,9 @@ function l10n_drupal_save_data($project_uri, $project_title, $release_version, $
   }
   else {
     // No such release recorded yet.
-    db_insert('l10n_server_release')->fields(array(
+				// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				\Drupal::database()->insert('l10n_server_release')->fields(array(
       'pid' => $project->pid,
       'title' => $release_version,
       'download_link' => $filepath,
@@ -231,7 +245,7 @@ function l10n_drupal_parse_package($package_file, $release) {
   // Generate temp folder to extract the tarball. tempnam() creates a regular
   // file, thus reserving the name. But we need a directory. Because $temp_name
   // is unique, we can append '_dir', and it will still be unique.
-  $temp_name = tempnam(file_directory_temp(), 'l10n_drupal_');
+  $temp_name = tempnam(\Drupal::service('file_system')->getTempDirectory(), 'l10n_drupal_');
   $temp_path = $temp_name . '_dir';
 
   // Nothing to do if the file is not there or the extraction folder is taken.
@@ -272,22 +286,28 @@ function l10n_drupal_parse_package($package_file, $release) {
       $message = t('@filename (@files files, @sids strings) scanned.', array('@filename' => basename($package_file), '@files' => count($files), '@sids' => $sid_count));
 
       // Parsed this releases files.
-      db_update('l10n_server_release')
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						\Drupal::database()->update('l10n_server_release')
 	->fields(array(
             'sid_count' => $sid_count,
-            'last_parsed' => REQUEST_TIME,
+            'last_parsed' => \Drupal::time()->getRequestTime(),
           ))
 	->condition('rid', $release->rid)
 	->execute();
 
       // Update error list for this release. Although the errors are related to
-      // files, we are not interested in the fine details, the file names are in
-      // the error messages as text.
-      db_delete('l10n_server_error') ->condition('rid', $release->rid) ->execute();
+						// files, we are not interested in the fine details, the file names are in
+						// the error messages as text.
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						\Drupal::database()->delete('l10n_server_error') ->condition('rid', $release->rid) ->execute();
       $messages = potx_status('get');
       if (count($messages)) {
         foreach ($messages as $error_message) {
-          db_insert('l10n_server_error')->fields(array(
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+										// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+										\Drupal::database()->insert('l10n_server_error')->fields(array(
             'rid' => $release->rid,
             'value' => $error_message[0],
           ))->execute();
@@ -344,14 +364,15 @@ function l10n_drupal_callback_save_version($value = NULL, $display_name = NULL)
     return array($pid, $rid, $files[$display_name]);
   }
   else {
-    $result = db_query(
-      "SELECT * FROM {l10n_server_file} WHERE rid = :rid AND location = :location",
-      array(':rid' => $rid, ':location' => $display_name)
-    );
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				$result = \Drupal::database()->query("SELECT * FROM {l10n_server_file} WHERE rid = :rid AND location = :location", array(':rid' => $rid, ':location' => $display_name));
     if ($existing_file = $result->fetchObject()) {
       if ($existing_file->revision != $value) {
         // Changed revision on a file.
-        db_update('l10n_server_file')
+								// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+								// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+								\Drupal::database()->update('l10n_server_file')
 	  ->fields(array('revision' => $value))
 	  ->condition('fid', $existing_file->fid)
 	  ->execute();
@@ -360,7 +381,9 @@ function l10n_drupal_callback_save_version($value = NULL, $display_name = NULL)
     }
     else {
       // New file in this release.
-      $fid = db_insert('l10n_server_file')
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						$fid = \Drupal::database()->insert('l10n_server_file')
 	->fields(array(
             'pid' => $pid,
             'rid' => $rid,
@@ -424,13 +447,17 @@ function l10n_drupal_callback_save_string($value = NULL, $context = NULL, $displ
     list($pid, $rid, $fid) = $files[$display_name];
 
     // A \0 separator in the string means we deal with a string with plural variants.
-    // Unlike Drupal core, we store all in the same string, as it is easier
-    // to handle later, and we don't need the individual string parts.
-    $select = db_select('l10n_server_string', 's')->fields('s')
+				// Unlike Drupal core, we store all in the same string, as it is easier
+				// to handle later, and we don't need the individual string parts.
+				// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				$select = \Drupal::database()->select('l10n_server_string', 's')->fields('s')
       ->condition('hashkey', md5($value . $context));
     if (!($sid = $select->execute()->fetchField())) {
       // String does not exist.
-      $sid = db_insert('l10n_server_string')
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						$sid = \Drupal::database()->insert('l10n_server_string')
 	->fields(array(
             'value' => (string) $value,
             'context' => (string) $context,
@@ -439,14 +466,18 @@ function l10n_drupal_callback_save_string($value = NULL, $context = NULL, $displ
 	->execute();
     }
 
-    $select = db_select('l10n_server_line', 'l')->fields('l', array('fid'))
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				$select = \Drupal::database()->select('l10n_server_line', 'l')->fields('l', array('fid'))
       ->condition('fid', $fid)
       ->condition('sid', $sid)
       ->condition('lineno', $line)
       ->condition('type', $string_mode);
     if (!$select->execute()->fetchField()) {
       // Location does not exist with this string.
-      db_insert('l10n_server_line')
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						\Drupal::database()->insert('l10n_server_line')
 	->fields(array(
             'pid' => $pid,
             'rid' => $rid,
@@ -548,18 +579,24 @@ function l10n_drupal_save_file($revision = NULL, $file = NULL) {
     return array($pid, $rid, $files[$file]);
   }
   else {
-    $existing_file = db_select('l10n_server_file', 'l')->fields('l')->condition('rid', $rid)
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				$existing_file = \Drupal::database()->select('l10n_server_file', 'l')->fields('l')->condition('rid', $rid)
       ->condition('location', $file)->execute()->fetchObject();
     if ($existing_file) {
       if ($existing_file->revision != $revision) {
         // Changed revision on a file.
-        db_query("UPDATE {l10n_server_file} SET revision = :revision WHERE fid = :fid", [':revision' => $revision, ':fid' => $existing_file->fid]);
+								// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+								// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+								\Drupal::database()->query("UPDATE {l10n_server_file} SET revision = :revision WHERE fid = :fid", [':revision' => $revision, ':fid' => $existing_file->fid]);
       }
       $fid = $existing_file->fid;
     }
     else {
       // New file in this release.
-      $fid = db_insert('l10n_server_file')->fields(array(
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						$fid = \Drupal::database()->insert('l10n_server_file')->fields(array(
         'pid' => $pid,
         'rid' => $rid,
         'location' => $file,
@@ -625,24 +662,32 @@ function l10n_drupal_save_string($value = NULL, $context = NULL, $file = NULL, $
     $context= !is_null($context) ? $context : '';
 
     // A \0 separator in the string means we deal with a string with plural variants.
-    // Unlike Drupal core, we store all in the same string, as it is easier
-    // to handle later, and we don't need the individual string parts.
-    $sid = db_select("l10n_server_string", 'l')->fields('l', array('sid'))
+				// Unlike Drupal core, we store all in the same string, as it is easier
+				// to handle later, and we don't need the individual string parts.
+				// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				$sid = \Drupal::database()->select("l10n_server_string", 'l')->fields('l', array('sid'))
       ->condition('hashkey', md5($value . $context))->execute()->fetchField();
     if (!$sid) {
       // String does not exist.
-      $sid = db_insert('l10n_server_string')->fields(array(
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						$sid = \Drupal::database()->insert('l10n_server_string')->fields(array(
         'value' => $value,
         'context' => $context,
         'hashkey' => md5($value . $context),
       ))->execute();
     }
-    $existing_fid = db_select('l10n_server_line', 'l')->fields('l', array('fid'))
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				$existing_fid = \Drupal::database()->select('l10n_server_line', 'l')->fields('l', array('fid'))
       ->condition('fid', $fid)->condition('sid', $sid)->condition('lineno', $line)
       ->condition('type', $string_type)->execute()->fetchField();
     if (!$existing_fid) {
       // Location does not exist with this string.
-      db_insert('l10n_server_line')->fields(array(
+						// TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						\Drupal::database()->insert('l10n_server_line')->fields(array(
         'pid' => $pid,
         'rid' => $rid,
         'fid' => $fid,
diff --git a/connectors/l10n_drupal/l10n_drupal.module b/connectors/l10n_drupal/l10n_drupal.module
index 92669b4..e6711d5 100644
--- a/connectors/l10n_drupal/l10n_drupal.module
+++ b/connectors/l10n_drupal/l10n_drupal.module
@@ -44,7 +44,7 @@ function l10n_drupal_l10n_server_connector_info() {
   $connectors['l10n_drupal'] = array(
     'title' => t('Drupal packages'),
     'sources' => array('files', 'uploads'),
-    'file' => drupal_get_path('module', 'l10n_drupal') . '/l10n_drupal.files.inc',
+    'file' => \Drupal::service('extension.list.module')->getPath('l10n_drupal') . '/l10n_drupal.files.inc',
     // Only provide scan functionality if enabled.
     'scan' => variable_get('l10n_server_connector_l10n_drupal_files_enabled', FALSE) ? 'l10n_drupal_files_scan' : NULL,
     // Display warnings tab, because we are parsing source code here.
diff --git a/connectors/l10n_drupal/l10n_drupal.potx.inc b/connectors/l10n_drupal/l10n_drupal.potx.inc
index 1117e9b..4083c6a 100644
--- a/connectors/l10n_drupal/l10n_drupal.potx.inc
+++ b/connectors/l10n_drupal/l10n_drupal.potx.inc
@@ -34,8 +34,9 @@ function _l10n_drupal_schema_store_lookup($keys, $module_name) {
     return;
   }
 
-  $result = db_query("SELECT * FROM {l10n_drupal_schema_reverse_lookup} WHERE schema_key IN (:keys) AND module_name = :module_name",
-      array(':keys' => $keys, ':module_name' => $module_name));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query("SELECT * FROM {l10n_drupal_schema_reverse_lookup} WHERE schema_key IN (:keys) AND module_name = :module_name", array(':keys' => $keys, ':module_name' => $module_name));
 
   // Exclude existing records
   foreach ($result as $record) {
@@ -46,7 +47,9 @@ function _l10n_drupal_schema_store_lookup($keys, $module_name) {
     return;
   }
 
-  $query = db_insert('l10n_drupal_schema_reverse_lookup')->fields(array('schema_key', 'module_name'));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $query = \Drupal::database()->insert('l10n_drupal_schema_reverse_lookup')->fields(array('schema_key', 'module_name'));
   foreach ($keys as $key) {
     $query->values(array(
       'schema_key' => $key,
@@ -72,7 +75,9 @@ function _l10n_drupal_schema_store_lookup($keys, $module_name) {
  */
 function _l10n_drupal_schema_reverse_lookup($matching_candidates) {
   // Search for modules that contain any schema definitions that could possibly match with this config file.
-  $result = db_query("SELECT * FROM {l10n_drupal_schema_reverse_lookup} WHERE schema_key IN (:matching_candidates)", array(':matching_candidates' => $matching_candidates));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query("SELECT * FROM {l10n_drupal_schema_reverse_lookup} WHERE schema_key IN (:matching_candidates)", array(':matching_candidates' => $matching_candidates));
 
   $mapped = array();
   foreach ($result as $record) {
@@ -103,7 +108,9 @@ function _l10n_drupal_load_module_metadata($module_name) {
 
   $_potx_module_metadata[$module_name]['dependencies'] = array();
 
-  $record = db_query("SELECT * FROM {l10n_drupal_parsed_module_data} WHERE module_name = :module_name", array(':module_name' => $module_name))->fetchObject();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $record = \Drupal::database()->query("SELECT * FROM {l10n_drupal_parsed_module_data} WHERE module_name = :module_name", array(':module_name' => $module_name))->fetchObject();
 
   if ($record === FALSE) {
     // Module metadata not found.
@@ -158,7 +165,9 @@ function _l10n_drupal_schema_store($module_name) {
  *   The module's name.
  */
 function _l10n_drupal_schema_load($module_name) {
-  $record = db_query("SELECT * FROM {l10n_drupal_parsed_module_data} WHERE module_name = :module_name", array(':module_name' => $module_name))->fetchObject();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $record = \Drupal::database()->query("SELECT * FROM {l10n_drupal_parsed_module_data} WHERE module_name = :module_name", array(':module_name' => $module_name))->fetchObject();
 
   if ($record === FALSE) {
     // Module metadata not found.
diff --git a/connectors/l10n_drupal_rest/l10n_drupal_rest.connector.inc b/connectors/l10n_drupal_rest/l10n_drupal_rest.connector.inc
index d40a60d..9f26939 100644
--- a/connectors/l10n_drupal_rest/l10n_drupal_rest.connector.inc
+++ b/connectors/l10n_drupal_rest/l10n_drupal_rest.connector.inc
@@ -10,7 +10,7 @@
  */
 function l10n_drupal_drupalorg_parse_release($release) {
   $filename = basename($release->download_link);
-  $package_file = file_directory_temp() . '/' . $filename;
+  $package_file = \Drupal::service('file_system')->getTempDirectory() . '/' . $filename;
 
   watchdog('l10n_drupal_rest', 'Retrieving @filename for parsing.', ['@filename' => $filename]);
 
@@ -94,10 +94,12 @@ function l10n_drupal_drupalorg_parse_release($release) {
   ]);
 
   // Parsed this releases files.
-  db_update('l10n_server_release')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->update('l10n_server_release')
     ->fields([
       'sid_count' => $sid_count,
-      'last_parsed' => REQUEST_TIME,
+      'last_parsed' => \Drupal::time()->getRequestTime(),
     ])
     ->condition('rid', $release->rid)
     ->execute();
@@ -106,11 +108,15 @@ function l10n_drupal_drupalorg_parse_release($release) {
   // files, we are not interested in the fine details, the file names are in
   // the error messages as text. We assume no other messages are added while
   // importing, so we can safely use drupal_get_message() to grab our errors.
-  db_delete('l10n_server_error')->condition('rid', $release->rid)->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_error')->condition('rid', $release->rid)->execute();
   $messages = drupal_get_messages('error');
   if (isset($messages['error']) && is_array($messages['error'])) {
     foreach ($messages['error'] as $error_message) {
-      db_insert('l10n_server_error')
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      \Drupal::database()->insert('l10n_server_error')
         ->fields([
           'rid' => $release->rid,
           'value' => $error_message,
diff --git a/connectors/l10n_drupal_rest/l10n_drupal_rest.drupal_core.inc b/connectors/l10n_drupal_rest/l10n_drupal_rest.drupal_core.inc
index 1eb77f1..285898a 100644
--- a/connectors/l10n_drupal_rest/l10n_drupal_rest.drupal_core.inc
+++ b/connectors/l10n_drupal_rest/l10n_drupal_rest.drupal_core.inc
@@ -10,7 +10,9 @@ function l10n_drupal_rest_drupal_core_status() {
   drupal_set_title(t('Drupal core translation status'));
 
   $project_id = db_query_range("SELECT pid FROM {l10n_server_project} WHERE title = 'Drupal core'", 0, 1)->fetchField();
-  $releases = db_query('SELECT sr.rid, sr.title FROM {l10n_server_release} sr WHERE sr.pid = :pid', [
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $releases = \Drupal::database()->query('SELECT sr.rid, sr.title FROM {l10n_server_release} sr WHERE sr.pid = :pid', [
     ':pid' => $project_id,
   ])->fetchAllKeyed();
   uksort($releases, 'version_compare');
diff --git a/connectors/l10n_drupal_rest/l10n_drupal_rest.module b/connectors/l10n_drupal_rest/l10n_drupal_rest.module
index 031a031..1bc32ed 100644
--- a/connectors/l10n_drupal_rest/l10n_drupal_rest.module
+++ b/connectors/l10n_drupal_rest/l10n_drupal_rest.module
@@ -87,7 +87,7 @@ function l10n_drupal_rest_l10n_server_connector_info() {
   $connectors['l10n_drupal_rest'] = array(
     'title'    => t('Drupal.org packages'),
     'sources'  => array('restapi'),
-    'file'     => drupal_get_path('module', 'l10n_drupal_rest') . '/l10n_drupal_rest.connector.inc',
+    'file'     => \Drupal::service('extension.list.module')->getPath('l10n_drupal_rest') . '/l10n_drupal_rest.connector.inc',
     // Display warnings tab, because we are parsing source code here.
     'warnings' => TRUE,
   );
@@ -104,7 +104,7 @@ function l10n_drupal_rest_l10n_server_source_info() {
       'title' => t('the drupal.org REST API'),
       // Reuse file settings mostly (will be modified in form_alter()).
       'form'  => 'l10n_server_connectors_files_settings_form',
-      'file'  => drupal_get_path('module', 'l10n_server') . '/l10n_server.connectors.inc',
+      'file'  => \Drupal::service('extension.list.module')->getPath('l10n_server') . '/l10n_server.connectors.inc',
     ),
   );
 }
diff --git a/l10n_community/export.inc b/l10n_community/export.inc
index 66a81f6..99eb2f8 100644
--- a/l10n_community/export.inc
+++ b/l10n_community/export.inc
@@ -22,7 +22,7 @@ function l10n_community_export_page($uri = NULL, $langcode = NULL) {
   // browse forms, they can do that without loosing their filters.
   $filters = l10n_community_build_filter_values($_GET);
   l10n_community_add_url_modifiers($langcode, $filters);
-  drupal_add_js(drupal_get_path('module', 'l10n_community') . '/l10n_community.js');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('l10n_community') . '/l10n_community.js');
 
   // Set a matching title with the translation page.
   if (isset($langcode)) {
@@ -43,7 +43,7 @@ function l10n_community_export_page($uri = NULL, $langcode = NULL) {
   if (isset($project)) {
     module_load_include('inc', 'l10n_community', 'pages');
     if (!$num_source = l10n_community_get_string_count('project', $project->pid)) {
-      drupal_set_message(t('No strings found to export in this project yet.'), 'warning');
+      \Drupal::messenger()->addWarning(t('No strings found to export in this project yet.'));
       return '';
     }
   }
@@ -379,7 +379,9 @@ function _l10n_community_export_string_files(&$po_data, $uri, $language, $templa
 function l10n_community_export($uri, $release = NULL, $language = NULL, $template = TRUE, $compact = FALSE, $installer = FALSE, $suggestions = FALSE) {
   $project = l10n_server_get_projects(array('uri' => $uri));
 
-  $query = db_select('l10n_server_file', 'f');
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $query = \Drupal::database()->select('l10n_server_file', 'f');
   $query->innerJoin('l10n_server_line', 'l', 'f.fid = l.fid');
   $query->innerJoin('l10n_server_string', 's', 'l.sid = s.sid');
   $query
@@ -482,14 +484,14 @@ function l10n_community_export($uri, $release = NULL, $language = NULL, $templat
       $message = t('There are no strings in any releases of %project to export.', array('%project' => $project->title));
     }
     // Message to the user.
-    drupal_set_message($message);
+    \Drupal::messenger()->addStatus($message);
     // Message to watchdog for possible automated packaging.
     watchdog('l10n_community', $message);
     return NULL;
   }
 
   // Generate a 'unique' temporary filename for this package.
-  $tempfile = tempnam(file_directory_temp(), 'l10n_community-' . $uri);
+  $tempfile = tempnam(\Drupal::service('file_system')->getTempDirectory(), 'l10n_community-' . $uri);
 
   if (!$compact) {
     if (count($po_data['revisions']) == 1) {
diff --git a/l10n_community/import.inc b/l10n_community/import.inc
index 1a915d2..3bca868 100644
--- a/l10n_community/import.inc
+++ b/l10n_community/import.inc
@@ -133,13 +133,13 @@ function l10n_community_import_form_submit($form, &$form_state) {
 
     // Do the actual parsing on the local file.
     if (l10n_server_parse_po($file, '_l10n_community_import_one_string', array($form_state['values']['langcode'], $form_state['values']['is_suggestion'], $form_state['values']['import_uid']))) {
-      drupal_set_message(t('The translation was successfully imported.'));
+      \Drupal::messenger()->addStatus(t('The translation was successfully imported.'));
       l10n_community_update_message();
       cache_clear_all('l10n:stats:' . $form_state['values']['langcode'], 'cache');
     }
   }
   else {
-    drupal_set_message(t('File to import not found. Did you choose a .po file to upload which was under %maxsize?', array('%maxsize' => format_size(file_upload_max_size()))), 'error');
+    \Drupal::messenger()->addError(t('File to import not found. Did you choose a .po file to upload which was under %maxsize?', array('%maxsize' => format_size(file_upload_max_size()))));
   }
 }
 
@@ -179,8 +179,9 @@ function _l10n_community_import_one_string($value, $langcode = NULL, $is_suggest
     // If context was not set, set to empty.
     $value['msgctxt'] = !empty($value['msgctxt']) ? $value['msgctxt'] : '';
 
-    if ($sid = db_query("SELECT sid FROM {l10n_server_string} WHERE hashkey = :hashkey",
-               array(':hashkey' => md5($value['msgid'] . $value['msgctxt'])))
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    if ($sid = \Drupal::database()->query("SELECT sid FROM {l10n_server_string} WHERE hashkey = :hashkey", array(':hashkey' => md5($value['msgid'] . $value['msgctxt'])))
       ->fetchField()) {
       // Merge plural versions into one for saving values.
       $value['msgstr'] = is_array($value['msgstr']) ? join("\0", $value['msgstr']) : $value['msgstr'];
diff --git a/l10n_community/l10n_community.module b/l10n_community/l10n_community.module
index d9a3de5..3d7970f 100644
--- a/l10n_community/l10n_community.module
+++ b/l10n_community/l10n_community.module
@@ -332,9 +332,9 @@ function l10n_community_access_warnings($uri) {
  */
 function l10n_community_init() {
   if (arg(0) == 'translate') {
-    drupal_add_css(drupal_get_path('module', 'l10n_community') . '/l10n_community.css');
+    drupal_add_css(\Drupal::service('extension.list.module')->getPath('l10n_community') . '/l10n_community.css');
     // For the translation overview pages. This is used to present admin page like panels.
-    drupal_add_css(drupal_get_path('module', 'system') . '/admin.css');
+    drupal_add_css(\Drupal::service('extension.list.module')->getPath('system') . '/admin.css');
   }
 
   // Check if language is RTL
@@ -344,7 +344,7 @@ function l10n_community_init() {
 
     // Add RTL style if the current language's direction is RTL
     if ($language->direction == LANGUAGE_RTL) {
-      drupal_add_css(drupal_get_path('module', 'l10n_community') . '/l10n_community-rtl.css');
+      drupal_add_css(\Drupal::service('extension.list.module')->getPath('l10n_community') . '/l10n_community-rtl.css');
     }
   }
 }
@@ -506,7 +506,9 @@ function l10n_community_user_view($account) {
   if (user_access('access localization community')) {
     // Add user contributions to its profile page
     $languages = l10n_community_get_languages('name');
-    $result = db_query("SELECT COUNT(*) AS sum, language FROM {l10n_server_translation} t
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query("SELECT COUNT(*) AS sum, language FROM {l10n_server_translation} t
       WHERE t.uid_entered = :uid_entered AND t.is_suggestion = 0 AND t.is_active = 1
       GROUP by t.language", array(':uid_entered' => $account->uid));
     $items = array();
@@ -541,7 +543,9 @@ function l10n_community_get_languages($key = NULL) {
   static $languages = NULL;
 
   if (!isset($languages)) {
-    $result = db_query("SELECT * FROM {languages} WHERE language <> 'en' ORDER BY name");
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query("SELECT * FROM {languages} WHERE language <> 'en' ORDER BY name");
     $languages = array();
     foreach ($result as $language) {
       $languages[$language->language] = $language;
@@ -589,7 +593,9 @@ function l10n_community_review_access() {
  */
 function l10n_community_get_contexts() {
   $contexts = array();
-  $result = db_query("SELECT DISTINCT context FROM {l10n_server_string} ORDER BY context");
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query("SELECT DISTINCT context FROM {l10n_server_string} ORDER BY context");
   foreach ($result as $context) {
     $contexts[empty($context->context) ? 'none' : $context->context] = empty($context->context) ? t('No context') : $context->context;
   }
@@ -675,7 +681,7 @@ function l10n_community_update_message() {
   }
 
   if ($messages) {
-    drupal_set_message(implode(', ', $messages));
+    \Drupal::messenger()->addStatus(implode(', ', $messages));
   }
 }
 
@@ -704,7 +710,9 @@ function l10n_community_projects_autocomplete($string = '') {
  * @return
  */
 function l10n_community_project_uri_by_title($title) {
-  return db_query("SELECT uri FROM {l10n_server_project} WHERE title = :title", array(':title' => $title))->fetchField();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  return \Drupal::database()->query("SELECT uri FROM {l10n_server_project} WHERE title = :title", array(':title' => $title))->fetchField();
 }
 
 // = Theme functions ===========================================================
@@ -790,10 +798,18 @@ function l10n_community_get_stats($langcode = NULL) {
     }
     else {
       $stats = array();
-      $stats['strings'] = db_query('SELECT COUNT(*) FROM {l10n_server_string}')->fetchField();
-      $stats['translations'] = db_query("SELECT COUNT(*) FROM {l10n_server_status_flag} WHERE has_translation = 1 AND language = :language", array(':language' => $langcode))->fetchField();
-      $stats['suggestions'] = db_query("SELECT COUNT(*) FROM {l10n_server_translation} WHERE is_suggestion = 1 AND is_active = 1 AND language = :language", array(':language' => $langcode))->fetchField();
-      $stats['users'] = db_query("SELECT COUNT(DISTINCT uid_entered) FROM {l10n_server_translation} WHERE is_suggestion = 0 AND is_active = 1 AND language = :language", array(':language' => $langcode))->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['strings'] = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_string}')->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['translations'] = \Drupal::database()->query("SELECT COUNT(*) FROM {l10n_server_status_flag} WHERE has_translation = 1 AND language = :language", array(':language' => $langcode))->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['suggestions'] = \Drupal::database()->query("SELECT COUNT(*) FROM {l10n_server_translation} WHERE is_suggestion = 1 AND is_active = 1 AND language = :language", array(':language' => $langcode))->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['users'] = \Drupal::database()->query("SELECT COUNT(DISTINCT uid_entered) FROM {l10n_server_translation} WHERE is_suggestion = 0 AND is_active = 1 AND language = :language", array(':language' => $langcode))->fetchField();
 
       // Cache results for next time. Not setting a timestamp as cache validity
       // time, we would like to retain control of recalculating these values.
@@ -808,17 +824,35 @@ function l10n_community_get_stats($langcode = NULL) {
     }
     else {
       $stats = array();
-      $stats['users'] = (int)db_query("SELECT COUNT(DISTINCT uid_entered) FROM {l10n_server_translation}")->fetchField();
-      $stats['projects'] = db_query('SELECT COUNT(*) FROM {l10n_server_project} WHERE status = 1')->fetchField();
-      $stats['releases_parsed'] = db_query('SELECT COUNT(*) FROM {l10n_server_release} WHERE last_parsed != 0')->fetchField();
-      $stats['releases_queue'] = db_query('SELECT COUNT(*) FROM {l10n_server_release} r INNER JOIN {l10n_server_project} p ON r.pid = p.pid WHERE p.status = 1 AND r.last_parsed = 0')->fetchField();
-      $stats['files'] = db_query('SELECT COUNT(*) FROM {l10n_server_file}')->fetchField();
-      $stats['strings'] = db_query('SELECT COUNT(*) FROM {l10n_server_string}')->fetchField();
-      $stats['translations'] = db_query('SELECT COUNT(*) FROM {l10n_server_status_flag} WHERE has_translation = 1')->fetchField();
-      $stats['suggestions'] = db_query('SELECT COUNT(*) FROM {l10n_server_translation} WHERE is_suggestion = 1 AND is_active = 1')->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['users'] = (int)\Drupal::database()->query("SELECT COUNT(DISTINCT uid_entered) FROM {l10n_server_translation}")->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['projects'] = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_project} WHERE status = 1')->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['releases_parsed'] = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_release} WHERE last_parsed != 0')->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['releases_queue'] = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_release} r INNER JOIN {l10n_server_project} p ON r.pid = p.pid WHERE p.status = 1 AND r.last_parsed = 0')->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['files'] = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_file}')->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['strings'] = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_string}')->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['translations'] = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_status_flag} WHERE has_translation = 1')->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $stats['suggestions'] = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_translation} WHERE is_suggestion = 1 AND is_active = 1')->fetchField();
 
       if (module_exists('l10n_groups')) {
-        $stats['groups'] = db_query('SELECT COUNT(*) FROM {l10n_groups_group}')->fetchField();
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $stats['groups'] = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_groups_group}')->fetchField();
       }
 
       // Cache results for next time. Not setting a timestamp as cache validity
@@ -870,10 +904,9 @@ function l10n_community_rebuild_stats() {
  */
 function l10n_community_get_highlighted_project() {
   if ($highlight_project = variable_get('l10n_community_highlighted_project', '')) {
-    $result = db_query(
-      "SELECT * FROM {l10n_server_project} WHERE title = :title",
-      array(':title' => $highlight_project)
-    );
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query("SELECT * FROM {l10n_server_project} WHERE title = :title", array(':title' => $highlight_project));
     if ($project = $result->fetchObject()) {
       return $project;
     }
@@ -923,10 +956,9 @@ function l10n_community_build_filter_values($params) {
     // redirect to make the URL shorter.
     $project = l10n_server_get_projects(array('uri' => $params['project']));
     if (empty($project)) {
-      $project = db_query(
-        "SELECT * FROM {l10n_server_project} WHERE title = :title",
-        array(':title' => $params['project'])
-      )->fetchObject();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $project = \Drupal::database()->query("SELECT * FROM {l10n_server_project} WHERE title = :title", array(':title' => $params['project']))->fetchObject();
     }
     if (!empty($project)) {
       $filter['project'] = $project;
@@ -1014,7 +1046,9 @@ function l10n_community_ajax_releases($form, $form_state) {
 function l10n_community_add_suggestion($sid, $translation, $langcode, $uid_attribution, $uid_user, $medium, $force = FALSE) {
 
   // Load source string and adjust translation whitespace based on source.
-  $source_string = db_query('SELECT value FROM {l10n_server_string} WHERE sid = :sid', array(':sid' => $sid))->fetchField();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $source_string = \Drupal::database()->query('SELECT value FROM {l10n_server_string} WHERE sid = :sid', array(':sid' => $sid))->fetchField();
   $translation = l10n_community_trim($translation, $source_string);
 
   // Don't store empty translations.
@@ -1022,11 +1056,13 @@ function l10n_community_add_suggestion($sid, $translation, $langcode, $uid_attri
     return NULL;
   }
 
-  $time = REQUEST_TIME;
+  $time = \Drupal::time()->getRequestTime();
 
   // Look for an existing active translation, if any.
   // Use BINARY matching to avoid marking case-corrections as duplicate.
-  $existing = db_select('l10n_server_translation', 't')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $existing = \Drupal::database()->select('l10n_server_translation', 't')
     ->fields('t', array('tid', 'is_active', 'is_suggestion'))
     ->condition('sid', $sid)
     ->condition('language', $langcode)
@@ -1037,7 +1073,9 @@ function l10n_community_add_suggestion($sid, $translation, $langcode, $uid_attri
   if (!empty($existing)) {
     if ($existing->is_active == 0 || ($existing->is_suggestion == 1 && $force)) {
       // If the existing item is not active, make it an active suggestion and clean up its possible previous approval information.
-      db_update('l10n_server_translation')
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      \Drupal::database()->update('l10n_server_translation')
         ->fields(array(
         'is_suggestion' => 1,
         'is_active' => 1,
@@ -1054,7 +1092,9 @@ function l10n_community_add_suggestion($sid, $translation, $langcode, $uid_attri
   }
   else {
     // Insert the new suggestion.
-    $tid = db_insert('l10n_server_translation')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $tid = \Drupal::database()->insert('l10n_server_translation')
       ->fields(array(
       'sid' => $sid,
       'translation' => $translation,
@@ -1068,7 +1108,9 @@ function l10n_community_add_suggestion($sid, $translation, $langcode, $uid_attri
       ->execute();
     $type = L10N_SERVER_ACTION_ADD;
   }
-  db_insert('l10n_server_translation_history')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->insert('l10n_server_translation_history')
     ->fields(array(
     'tid' => $tid,
     'uid_action' => $uid_user,
@@ -1097,8 +1139,10 @@ function l10n_community_add_suggestion($sid, $translation, $langcode, $uid_attri
  *   The user performing the action.
  */
 function l10n_community_decline_string($langcode, $sid, $tid, $uid) {
-  $time = REQUEST_TIME;
-  db_update('l10n_server_translation')
+  $time = \Drupal::time()->getRequestTime();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->update('l10n_server_translation')
     ->fields(array(
     'is_active' => 0,
     'time_changed' => $time,
@@ -1106,7 +1150,9 @@ function l10n_community_decline_string($langcode, $sid, $tid, $uid) {
     ->condition('tid', $tid)
     ->execute();
   // ATM we only support this through the web, so always save the web medium.
-  $id = db_insert('l10n_server_translation_history')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $id = \Drupal::database()->insert('l10n_server_translation_history')
     ->fields(array(
     'tid' => $tid,
     'uid_action' => $uid,
@@ -1128,16 +1174,24 @@ function l10n_community_decline_string($langcode, $sid, $tid, $uid) {
  */
 function l10n_community_update_string_status($langcode, $sid) {
   // Let's see if we have any suggestions remaining in this language.
-  $has_suggestion = db_query("SELECT 1 FROM {l10n_server_translation} WHERE sid = :sid AND is_suggestion = 1 AND is_active = 1 AND language = :language", array(':sid' => $sid, ':language' => $langcode))->fetchField();
-  $has_translation = db_query("SELECT 1 FROM {l10n_server_translation} WHERE sid = :sid AND is_suggestion = 0 AND is_active = 1 AND language = :language", array(':sid' => $sid, ':language' => $langcode))->fetchField();
-
-  db_delete('l10n_server_status_flag')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $has_suggestion = \Drupal::database()->query("SELECT 1 FROM {l10n_server_translation} WHERE sid = :sid AND is_suggestion = 1 AND is_active = 1 AND language = :language", array(':sid' => $sid, ':language' => $langcode))->fetchField();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $has_translation = \Drupal::database()->query("SELECT 1 FROM {l10n_server_translation} WHERE sid = :sid AND is_suggestion = 0 AND is_active = 1 AND language = :language", array(':sid' => $sid, ':language' => $langcode))->fetchField();
+
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_status_flag')
     ->condition('sid', $sid)
     ->condition('language', $langcode)
     ->execute();
 
   if ($has_suggestion || $has_translation) {
-    db_insert('l10n_server_status_flag')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->insert('l10n_server_status_flag')
       ->fields(array(
       'sid' => $sid,
       'language' => $langcode,
@@ -1161,12 +1215,16 @@ function l10n_community_update_string_status($langcode, $sid) {
 function l10n_community_approve_string($langcode, $sid, $tid) {
   global $user;
 
-  $time = REQUEST_TIME;
+  $time = \Drupal::time()->getRequestTime();
 
   // Make the existing approved string a suggestion (if applicable).
   // There should only ever be one string like this.
-  if ($existing_tid = db_query("SELECT tid FROM {l10n_server_translation} WHERE sid = :sid AND language = :language AND is_suggestion = 0 AND is_active = 1", array(':sid' => $sid, ':language' => $langcode))->fetchField()) {
-    db_update('l10n_server_translation')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  if ($existing_tid = \Drupal::database()->query("SELECT tid FROM {l10n_server_translation} WHERE sid = :sid AND language = :language AND is_suggestion = 0 AND is_active = 1", array(':sid' => $sid, ':language' => $langcode))->fetchField()) {
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->update('l10n_server_translation')
       ->fields(array(
       'is_suggestion' => 1,
       'time_changed' => $time,
@@ -1174,7 +1232,9 @@ function l10n_community_approve_string($langcode, $sid, $tid) {
       ->condition('tid', $existing_tid)
       ->execute();
     // ATM we only support this through the web, so always save the web medium.
-    $id = db_insert('l10n_server_translation_history')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $id = \Drupal::database()->insert('l10n_server_translation_history')
       ->fields(array(
       'tid' => $existing_tid,
       'uid_action' => $user->uid,
@@ -1186,7 +1246,9 @@ function l10n_community_approve_string($langcode, $sid, $tid) {
   }
 
   // Mark this exact suggestion as active translation, and set approval time.
-  db_update('l10n_server_translation')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->update('l10n_server_translation')
     ->fields(array(
     'time_changed' => $time,
     'is_suggestion' => 0,
@@ -1195,7 +1257,9 @@ function l10n_community_approve_string($langcode, $sid, $tid) {
     ->condition('tid', $tid)
     ->execute();
   // ATM we only support this through the web, so always save the web medium.
-  $id = db_insert('l10n_server_translation_history')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $id = \Drupal::database()->insert('l10n_server_translation_history')
     ->fields(array(
     'tid' => $tid,
     'uid_action' => $user->uid,
diff --git a/l10n_community/pages.inc b/l10n_community/pages.inc
index 10eb4dc..8c33f1a 100644
--- a/l10n_community/pages.inc
+++ b/l10n_community/pages.inc
@@ -14,11 +14,11 @@ function l10n_community_explore_languages() {
 
   // Checking whether we have languages and strings.
   if (!$languages = l10n_community_get_languages()) {
-    drupal_set_message(t('No languages to list.'), 'error');
+    \Drupal::messenger()->addError(t('No languages to list.'));
     return '';
   }
   if (!$num_source = l10n_community_get_string_count('all')) {
-    drupal_set_message(t('No strings to translate.'), 'error');
+    \Drupal::messenger()->addError(t('No strings to translate.'));
     return '';
   }
 
@@ -137,7 +137,7 @@ function l10n_community_explore_projects() {
   $pager_setting = variable_get('l10n_community_project_per_page', 10);
   $options['initial'] = $initial;
   if (!$all_projects = l10n_server_get_projects($options)) {
-    drupal_set_message(t('No projects found.'), 'error');
+    \Drupal::messenger()->addError(t('No projects found.'));
     return '';
   }
   $options['pager'] = $pager_setting;
@@ -158,7 +158,9 @@ function l10n_community_explore_projects() {
   if (variable_get('l10n_community_stats_explore_projects_enabled', TRUE)) {
     // General community statistics.
     $string_counts = array();
-    $query = db_select('l10n_server_line', 'l')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $query = \Drupal::database()->select('l10n_server_line', 'l')
       ->fields('l', array('pid'))
       ->groupBy('pid');
     $query->addExpression('COUNT(DISTINCT sid)', 'string_count');
@@ -173,7 +175,9 @@ function l10n_community_explore_projects() {
     // per project. This is run per project because big installs of the
     // module were choking on GROUP BY based solutions.
     foreach (array_keys($string_counts) as $pid) {
-      $query = db_select('l10n_server_line', 'l');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $query = \Drupal::database()->select('l10n_server_line', 'l');
       $query->condition('l.pid', $pid);
       $query->leftJoin('l10n_server_status_flag', 'tst', 'l.sid = tst.sid AND tst.has_translation = 1');
       $query->leftJoin('l10n_server_status_flag', 'tss', 'l.sid = tss.sid AND tst.has_suggestion = 1');
@@ -264,7 +268,7 @@ function l10n_community_explore_projects_jump_form_submit($form, &$form_state) {
  */
 function l10n_community_overview_language($langcode = NULL) {
   if (!isset($langcode)) {
-    drupal_set_message(t('No language selected.'), 'error');
+    \Drupal::messenger()->addError(t('No language selected.'));
     return '';
   }
 
@@ -281,7 +285,7 @@ function l10n_community_overview_language($langcode = NULL) {
         // Found tag, look for posts.
         $result = taxonomy_select_nodes(reset($terms)->tid);
         foreach ($result as $nid) {
-          $content_output[] = node_view(node_load($nid), 'teaser');
+          $content_output[] = node_view(\Drupal::service('entity_type.manager')->getStorage('node')->load($nid), 'teaser');
         }
       }
       if (empty($content_output)) {
@@ -330,13 +334,13 @@ function l10n_community_overview_project($uri = NULL) {
   );
 
   if (!isset($uri)) {
-    drupal_set_message(t('No project selected.'), 'error');
+    \Drupal::messenger()->addError(t('No project selected.'));
     return '';
   }
   drupal_set_title(t('@project project translations', array('@project' => drupal_get_title())), PASS_THROUGH);
 
   if (!$languages = l10n_community_get_languages()) {
-    drupal_set_message(t('No languages to list.'), 'error');
+    \Drupal::messenger()->addError(t('No languages to list.'));
     return '';
   }
 
@@ -345,7 +349,7 @@ function l10n_community_overview_project($uri = NULL) {
     return t('Statistics for projects have been disabled.');
   }
   elseif (!$num_source = l10n_community_get_string_count('project', $project->pid)) {
-    drupal_set_message(t('No strings found to translate in this project yet.'), 'warning');
+    \Drupal::messenger()->addWarning(t('No strings found to translate in this project yet.'));
     return '';
   }
 
@@ -373,7 +377,9 @@ function l10n_community_block_stats_project($project) {
     }
     $num_releases = count($releases);
 
-    $num_warnings = db_query("SELECT COUNT(DISTINCT e.eid) FROM {l10n_server_project} p LEFT JOIN {l10n_server_release} r ON p.pid = r.pid LEFT JOIN {l10n_server_error} e ON r.rid = e.rid WHERE p.uri = :uri", array(':uri' => $project->uri))->fetchField();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $num_warnings = \Drupal::database()->query("SELECT COUNT(DISTINCT e.eid) FROM {l10n_server_project} p LEFT JOIN {l10n_server_release} r ON p.pid = r.pid LEFT JOIN {l10n_server_error} e ON r.rid = e.rid WHERE p.uri = :uri", array(':uri' => $project->uri))->fetchField();
 
     // Build list of links for summary.
     $list = array();
@@ -551,7 +557,7 @@ function l10n_community_language_progress_for_project($project, $languages, $tit
  */
 function l10n_community_project_releases($uri = NULL) {
   if (!$uri) {
-    drupal_set_message(t('No project selected.'), 'error');
+    \Drupal::messenger()->addError(t('No project selected.'));
     return '';
   }
   $project = l10n_server_get_projects(array('uri' => $uri));
@@ -560,7 +566,7 @@ function l10n_community_project_releases($uri = NULL) {
 
   $releases = l10n_server_get_releases($uri);
   if (empty($releases)) {
-    drupal_set_message(t('No releases found for this project yet.'), 'warning');
+    \Drupal::messenger()->addWarning(t('No releases found for this project yet.'));
     return '';
   }
 
@@ -580,14 +586,18 @@ function l10n_community_project_releases($uri = NULL) {
 function l10n_community_project_releases_table($releases, $project_uri, $project_name, $link_releases = TRUE) {
   $rows = array();
   foreach ($releases as $release) {
-    $file_count = db_query('SELECT COUNT(*) FROM {l10n_server_file} WHERE rid = :rid', array(':rid' => $release->rid))->fetchField();
-    $error_count = db_query('SELECT COUNT(*) FROM {l10n_server_error} WHERE rid = :rid', array(':rid' => $release->rid))->fetchField();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $file_count = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_file} WHERE rid = :rid', array(':rid' => $release->rid))->fetchField();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $error_count = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_error} WHERE rid = :rid', array(':rid' => $release->rid))->fetchField();
     $release_title = $project_name . ' ' . $release->title;
     $rows[] = array(
       $link_releases ? l($release_title, 'translate/projects/' . $project_uri . '/releases/' . $release->rid) : $release_title,
       empty($release->download_link) ? t('n/a') : l(basename($release->download_link), $release->download_link),
-      empty($release->file_date) ? t('n/a') : format_date($release->file_date),
-      empty($release->last_parsed) ? t('in queue') : format_date($release->last_parsed),
+      empty($release->file_date) ? t('n/a') : \Drupal::service('date.formatter')->format($release->file_date),
+      empty($release->last_parsed) ? t('in queue') : \Drupal::service('date.formatter')->format($release->last_parsed),
       $file_count ? l($file_count, 'translate/projects/' . $project_uri . '/releases/' . $release->rid, array('fragment' => 'parsed-files')) : $file_count,
       $release->sid_count,
       $error_count ? l($error_count, 'translate/projects/' . $project_uri . '/releases/' . $release->rid, array('fragment' => 'source-warnings')) : $error_count,
@@ -614,13 +624,13 @@ function l10n_community_project_releases_table($releases, $project_uri, $project
  */
 function l10n_community_project_release($uri = NULL, $rid = NULL) {
   if (!isset($uri) || !isset($rid)) {
-    drupal_set_message(t('No project or release selected.'), 'error');
+    \Drupal::messenger()->addError(t('No project or release selected.'));
     return '';
   }
   $project = l10n_server_get_projects(array('uri' => $uri));
   $releases = l10n_server_get_releases($uri);
   if (empty($releases) || !isset($releases[$rid])) {
-    drupal_set_message(t('The requested release could not be found.'), 'error');
+    \Drupal::messenger()->addError(t('The requested release could not be found.'));
     return '';
   }
   $release = $releases[$rid];
@@ -636,7 +646,9 @@ function l10n_community_project_release($uri = NULL, $rid = NULL) {
   // List of release parse warnings we found.
   $output .= '<h3 id="source-warnings">' . t('Source code warnings identified') . '</h3>';
   $output .= '<p>' . t('Some of these warnings may indicate issues in how certain APIs are used, while others are false positives of legitimate use of the APIs in a non-standard way.') . '</p>';
-  $result = db_query("SELECT * FROM {l10n_server_error} WHERE rid = :rid", array(':rid' => $release->rid));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query("SELECT * FROM {l10n_server_error} WHERE rid = :rid", array(':rid' => $release->rid));
   $rows = array();
   foreach ($result as $warning) {
     $rows[] = array($warning->value);
@@ -651,7 +663,9 @@ function l10n_community_project_release($uri = NULL, $rid = NULL) {
 
   // List the files that we looked at.
   $output .= '<h3 id="parsed-files">' . t('Files parsed in this release') . '</h3>';
-  $result = db_query('SELECT * FROM {l10n_server_file} WHERE rid = :rid', array(':rid' => $release->rid));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query('SELECT * FROM {l10n_server_file} WHERE rid = :rid', array(':rid' => $release->rid));
   $rows = array();
   foreach ($result as $file) {
     // Insert word break hints for the browser to avoid breaking the page layout
@@ -780,11 +794,15 @@ function l10n_community_get_string_count($type, $id = NULL) {
   switch ($type) {
     case 'all':
       // Return a count of all strings.
-      return db_query("SELECT COUNT(sid) FROM {l10n_server_string}")->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      return \Drupal::database()->query("SELECT COUNT(sid) FROM {l10n_server_string}")->fetchField();
 
     case 'project':
       // Return a count of all strings in this project, id required.
-      return db_query('SELECT COUNT(DISTINCT l.sid) FROM {l10n_server_line} l WHERE l.pid = :pid', array(':pid' => $id))->fetchField();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      return \Drupal::database()->query('SELECT COUNT(DISTINCT l.sid) FROM {l10n_server_line} l WHERE l.pid = :pid', array(':pid' => $id))->fetchField();
 
     case 'languages':
       if ($stats = cache_get('l10n:count:languages:' . $id, 'cache')) {
@@ -805,11 +823,15 @@ function l10n_community_get_string_count($type, $id = NULL) {
           $count2_sql = "SELECT COUNT(DISTINCT ts.sid) AS translation_count, ts.language FROM {l10n_server_line} l INNER JOIN {l10n_server_status_flag} ts ON l.sid = ts.sid WHERE l.pid = :pid AND ts.has_suggestion = 1 GROUP BY ts.language";
           $count_args = array(':pid' => $id);
         }
-        $result = db_query($count1_sql, $count_args);
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $result = \Drupal::database()->query($count1_sql, $count_args);
         foreach ($result as $row) {
           $sums[$row->language]['translations'] = $row->translation_count;
         }
-        $result = db_query($count2_sql, $count_args);
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $result = \Drupal::database()->query($count2_sql, $count_args);
         foreach ($result as $row) {
           $sums[$row->language]['suggestions'] = $row->translation_count;
         }
@@ -848,15 +870,21 @@ function l10n_community_get_l10n_packager_string_count($pid, $rid = NULL) {
   // l10n_packager_file table for the project requested, then get the
   // translation count of the release.
   if (empty($rid)) {
-    $rid = db_query("SELECT pf.rid FROM {l10n_server_release} sr INNER JOIN {l10n_packager_file} pf ON sr.rid = pf.rid WHERE pid = :pid ORDER BY pf.rid DESC LIMIT 0, 1", array(':pid' => $pid))->fetchField();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $rid = \Drupal::database()->query("SELECT pf.rid FROM {l10n_server_release} sr INNER JOIN {l10n_packager_file} pf ON sr.rid = pf.rid WHERE pid = :pid ORDER BY pf.rid DESC LIMIT 0, 1", array(':pid' => $pid))->fetchField();
   }
-  $results = db_query("SELECT language, sid_count FROM {l10n_packager_file} WHERE rid = :rid", array(':rid' => $rid))->fetchAllKeyed();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $results = \Drupal::database()->query("SELECT language, sid_count FROM {l10n_packager_file} WHERE rid = :rid", array(':rid' => $rid))->fetchAllKeyed();
   foreach ($results as $language => $sid_count) {
     $sums[$language]['translations'] = $sid_count;
   }
   ksort($sums);
   // Finally, get the string count of the release
-  $num_source = db_query("SELECT COUNT(DISTINCT l.sid) FROM {l10n_server_line} l WHERE l.rid = :rid", array(':rid' => $rid))->fetchField();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $num_source = \Drupal::database()->query("SELECT COUNT(DISTINCT l.sid) FROM {l10n_server_line} l WHERE l.rid = :rid", array(':rid' => $rid))->fetchField();
   return array($num_source, $sums);
 }
 
@@ -930,15 +958,15 @@ function l10n_community_projects_release_reset($form, &$form_state, $langcode, $
       return confirm_form($form, $question, 'translate/languages/' . $langcode . '/translate', $description);
     }
     else {
-      drupal_set_message(t('The release is not found, or the selected %release release does not belongs to the %project project.', array(
+      \Drupal::messenger()->addError(t('The release is not found, or the selected %release release does not belongs to the %project project.', array(
         '%project' => $form_state['values']['project']->title,
         '%release' => $form_state['values']['release']->title,
-      )), 'error');
+      )));
       drupal_goto('translate/languages/' . $langcode . '/translate');
     }
   }
   else {
-    drupal_set_message(t('Please, contact your localization team manager (or any other translation community manager) with their personal contact form to solve this problem.'));
+    \Drupal::messenger()->addStatus(t('Please, contact your localization team manager (or any other translation community manager) with their personal contact form to solve this problem.'));
     drupal_goto('translate/languages/' . $langcode . '/translate', 'project=' . $project_uri . '&release=' . $release_rid);
   }
 }
@@ -952,16 +980,16 @@ function l10n_community_projects_release_reset_submit($form, &$form_state) {
   if (isset($releases[$form_state['values']['release']->rid])) {
     module_load_include('inc', 'l10n_server', 'l10n_server.projects');
     l10n_server_delete_release($form_state['values']['release']->rid, TRUE);
-    drupal_set_message(t('Release data for %project %release was deleted from the Localization server.', array(
+    \Drupal::messenger()->addStatus(t('Release data for %project %release was deleted from the Localization server.', array(
       '%project' => $project->title,
       '%release' => $form_state['values']['release']->title,
     )));
   }
   else {
-    drupal_set_message(t('The release is not found, or the selected %release release does not belongs to the %project project.', array(
+    \Drupal::messenger()->addError(t('The release is not found, or the selected %release release does not belongs to the %project project.', array(
       '%project' => $form_state['values']['project']->title,
       '%release' => $form_state['values']['release']->title,
-    )), 'error');
+    )));
   }
   $form_state['redirect'] = 'translate/languages/' . $form_state['values']['langcode'] . '/translate';
 }
diff --git a/l10n_community/translate.inc b/l10n_community/translate.inc
index 4e50184..082feba 100644
--- a/l10n_community/translate.inc
+++ b/l10n_community/translate.inc
@@ -273,10 +273,10 @@ function l10n_community_filter_form_submit($form, &$form_state) {
  * @return array
  */
 function l10n_community_translate_page($langcode) {
-  drupal_add_css(drupal_get_path('module', 'l10n_community') . '/editor.css');
-  drupal_add_js(drupal_get_path('module', 'l10n_community') . '/jquery.worddiff.js');
-  drupal_add_js(drupal_get_path('module', 'l10n_community') . '/editor.js');
-  drupal_add_js(drupal_get_path('module', 'l10n_community') . '/l10n_community.js');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('l10n_community') . '/editor.css');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('l10n_community') . '/jquery.worddiff.js');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('l10n_community') . '/editor.js');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('l10n_community') . '/l10n_community.js');
 
   $language = l10n_community_get_language($langcode);
   $filters = l10n_community_build_filter_values($_GET);
@@ -284,7 +284,7 @@ function l10n_community_translate_page($langcode) {
 
   // Add RTL style if the current language's direction is RTL
   if ($language->direction == LANGUAGE_RTL) {
-    drupal_add_css(drupal_get_path('module', 'l10n_community') . '/editor-rtl.css');
+    drupal_add_css(\Drupal::service('extension.list.module')->getPath('l10n_community') . '/editor-rtl.css');
   }
 
   // Set the most appropriate title.
@@ -339,7 +339,7 @@ function l10n_community_translate_form($form, &$form_state, $language, $filters,
   }
 
   if (!count($strings)) {
-    drupal_set_message(t('No strings found with this filter. Try adjusting the filter options.'));
+    \Drupal::messenger()->addStatus(t('No strings found with this filter. Try adjusting the filter options.'));
     return FALSE;
   }
 
@@ -432,7 +432,9 @@ function _l10n_community_translate_form_item(&$form_state, $source, $language, $
 
   // When there are suggestions, load them from the database.
   if ($source->has_suggestion) {
-    $result = db_query("SELECT t.tid, t.sid, t.translation, t.uid_entered, t.time_entered, t.time_changed, t.is_active, t.is_suggestion, u.name as username FROM {l10n_server_translation} t LEFT JOIN {users} u ON u.uid = t.uid_entered WHERE t.language = :language AND t.sid = :sid AND t.is_active = 1 AND t.is_suggestion = 1 ORDER BY t.time_entered", array(
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query("SELECT t.tid, t.sid, t.translation, t.uid_entered, t.time_entered, t.time_changed, t.is_active, t.is_suggestion, u.name as username FROM {l10n_server_translation} t LEFT JOIN {users} u ON u.uid = t.uid_entered WHERE t.language = :language AND t.sid = :sid AND t.is_active = 1 AND t.is_suggestion = 1 ORDER BY t.time_entered", array(
       ':language' => $language->language,
       ':sid' => $source->sid,
     ));
@@ -615,8 +617,8 @@ function l10n_community_translate_byline($name, $uid, $time, $medium, $type, $li
     )) : check_plain($name)) : t('unknown user'),
     // Also skip handling time if uid was not specified (for decline entries
     // in the update, which have time for ordering reasons, but no uid).
-    '@date' => $time && $uid ? format_date($time) : t('unknown time'),
-    '@ago' => $time ? t('@time ago', array('@time' => format_interval(REQUEST_TIME - $time))) : t('no time record available'),
+    '@date' => $time && $uid ? \Drupal::service('date.formatter')->format($time) : t('unknown time'),
+    '@ago' => $time ? t('@time ago', array('@time' => format_interval(\Drupal::time()->getRequestTime() - $time))) : t('no time record available'),
   );
   switch ($type) {
     case L10N_SERVER_ACTION_ADD:
@@ -706,7 +708,7 @@ function theme_l10n_community_translate_table($variables) {
 function theme_l10n_community_translate_source($variables) {
   $element = $variables['element'];
   $output = theme('l10n_community_translate_actions', array('element' => $element['source']));
-  $output .= '<label class="l10n-string' . ($element['filters_match']['#value'] ? ' filter-match' : ' filter-no-match') . '">' . drupal_render($element['source']['string']) . '</label>';
+  $output .= '<label class="l10n-string' . ($element['filters_match']['#value'] ? ' filter-match' : ' filter-no-match') . '">' . \Drupal::service('renderer')->render($element['source']['string']) . '</label>';
   $output .= theme('l10n_community_in_context', array('source' => $element['#string']));
 
   $output .= '<div class="l10n-usage"><a href="' . url('translate/source-details/' . $element['#string']->sid) . '" class="l10n-more-link" title="' . t('Show list of projects and releases where this text is used.') . '">' . t('Show related projects') . '</a><div class="l10n-more-info"></div></div>';
@@ -721,7 +723,7 @@ function theme_l10n_community_translate_actions($variables) {
   $actions = '';
   foreach (array('declined', 'edit') as $type) {
     if (isset($element[$type])) {
-      $actions .= '<li class="' . $type . '">' . drupal_render($element[$type]) . '</li>';
+      $actions .= '<li class="' . $type . '">' . \Drupal::service('renderer')->render($element[$type]) . '</li>';
     }
   }
   if (!empty($actions)) {
@@ -786,14 +788,14 @@ function theme_l10n_community_translate_translation($variables) {
   $output = '<li' . drupal_attributes($element['#attributes']) . '>';
   $output .= theme('l10n_community_translate_actions', array('element' => $element));
   // Add the radio box to pick the active translation.
-  $output .= drupal_render($element['active']);
+  $output .= \Drupal::service('renderer')->render($element['active']);
 
   if (isset($element['author'])) {
-    $output .= '<div class="author">' . drupal_render($element['author']) . '</div>';
+    $output .= '<div class="author">' . \Drupal::service('renderer')->render($element['author']) . '</div>';
   }
 
   if (isset($element['value'])) {
-    $output .= drupal_render($element['value']);
+    $output .= \Drupal::service('renderer')->render($element['value']);
   }
   return $output . '</li>';
 }
@@ -825,7 +827,7 @@ function theme_l10n_community_translate_translation_list($variables) {
   $output = '<ul>';
   foreach (element_children($element) as $child) {
     if (is_numeric($child) || $child == 'new') {
-      $output .= drupal_render($element[$child]);
+      $output .= \Drupal::service('renderer')->render($element[$child]);
     }
   }
   $output .= '</ul>';
@@ -839,7 +841,9 @@ function theme_l10n_community_translate_translation_list($variables) {
  */
 function l10n_community_translate_form_validate($form, &$form_state) {
   // Load original strings.
-  $originals = db_select('l10n_server_string', 's')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $originals = \Drupal::database()->select('l10n_server_string', 's')
     ->fields('s')
     ->condition('sid', array_keys($form_state['values']['strings']))
     ->execute()
@@ -997,7 +1001,9 @@ function l10n_community_translate_form_submit($form, &$form_state) {
  *   matching the filters provided.
  */
 function l10n_community_get_strings($langcode, $filters, $pager, $sids = array()) {
-  $query = db_select('l10n_server_string', 's');
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $query = \Drupal::database()->select('l10n_server_string', 's');
   $query->leftJoin('l10n_server_status_flag', 'ts',
     's.sid = ts.sid AND ts.language = :language', array(':language' => $langcode));
   $query
@@ -1118,7 +1124,9 @@ function l10n_community_get_strings($langcode, $filters, $pager, $sids = array()
     // have found a suggestion above in which case we need the translation
     // loaded anyway. This query should use indexes even if the above did not.
     if ($string->has_translation) {
-      $q = db_select('l10n_server_translation', 't');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      $q = \Drupal::database()->select('l10n_server_translation', 't');
       $q->leftJoin('users', 'u', 'u.uid = t.uid_entered');
       $q->fields('t', array(
         'tid',
@@ -1206,17 +1214,18 @@ function l10n_community_string_details($sid = 0, $ajax = 0) {
   }
   else {
     // Get data about this source string.
-    $string = db_query(
-      'SELECT value, context FROM {l10n_server_string} WHERE sid = :sid',
-      array(':sid' => $sid)
-    )->fetchObject();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $string = \Drupal::database()->query('SELECT value, context FROM {l10n_server_string} WHERE sid = :sid', array(':sid' => $sid))->fetchObject();
     $unpacked = l10n_community_unpack_string($string->value);
     $output .= '<h3>' . t('Source string') . '</h3>' . theme('item_list', array('items' => $unpacked));
     $output .= '<h3>' . (empty($string->context) ? t('Used at the following places') : t('Used at the following places in context %context', array('%context' => $string->context))) . '</h3>';
   }
 
   // List of project releases, where this string is used.
-  $result = db_query('SELECT l.pid, p.title project_title, l.rid, r.title release_title, COUNT(l.lineno) as occurrence_count FROM {l10n_server_line} l INNER JOIN {l10n_server_project} p ON l.pid = p.pid INNER JOIN {l10n_server_release} r ON l.rid = r.rid WHERE l.sid = :sid AND p.status = 1 GROUP BY l.rid ORDER BY l.pid, l.rid', array(':sid' => $sid));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query('SELECT l.pid, p.title project_title, l.rid, r.title release_title, COUNT(l.lineno) as occurrence_count FROM {l10n_server_line} l INNER JOIN {l10n_server_project} p ON l.pid = p.pid INNER JOIN {l10n_server_release} r ON l.rid = r.rid WHERE l.sid = :sid AND p.status = 1 GROUP BY l.rid ORDER BY l.pid, l.rid', array(':sid' => $sid));
 
   $version_list = array();
   $project_list = array();
@@ -1260,10 +1269,9 @@ function l10n_community_string_details($sid = 0, $ajax = 0) {
 function l10n_community_translation_details($tid = 0, $ajax = 0) {
 
   // Get data about this translation.
-  $string = db_query(
-    'SELECT * FROM {l10n_server_translation} WHERE tid = :tid',
-    array(':tid' => $tid)
-  )->fetchObject();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $string = \Drupal::database()->query('SELECT * FROM {l10n_server_translation} WHERE tid = :tid', array(':tid' => $tid))->fetchObject();
 
   $output = '';
   if ($ajax) {
@@ -1276,7 +1284,9 @@ function l10n_community_translation_details($tid = 0, $ajax = 0) {
   }
 
   // List of project releases, where this string is used.
-  $result = db_query('SELECT h.*, u.name FROM {l10n_server_translation_history} h INNER JOIN {users} u ON h.uid_action = u.uid WHERE tid = :tid ORDER BY time_action DESC, type_action DESC', array(':tid' => $tid));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query('SELECT h.*, u.name FROM {l10n_server_translation_history} h INNER JOIN {users} u ON h.uid_action = u.uid WHERE tid = :tid ORDER BY time_action DESC, type_action DESC', array(':tid' => $tid));
 
   $uid_submitted = 0;
   $history_list = array();
@@ -1295,7 +1305,7 @@ function l10n_community_translation_details($tid = 0, $ajax = 0) {
     // TODO Convert "user_load" to "user_load_multiple" if "$string->uid_entered" is other than a uid.
     // To return a single user object, wrap "user_load_multiple" with "array_shift" or equivalent.
     // Example: array_shift(user_load_multiple(array(), $string->uid_entered))
-    $account = user_load($string->uid_entered);
+    $account = \Drupal::service('entity_type.manager')->getStorage('user')->load($string->uid_entered);
     $author = theme('username', array('account' => $account));
     array_unshift($history_list, t('by !author', array('!author' => $author)));
   }
diff --git a/l10n_groups/l10n_groups.install b/l10n_groups/l10n_groups.install
index 403e4a7..6b1d4c2 100644
--- a/l10n_groups/l10n_groups.install
+++ b/l10n_groups/l10n_groups.install
@@ -90,7 +90,9 @@ function l10n_groups_update_last_removed() {
  */
 function l10n_groups_update_7100() {
   // Delete the block from the table.
-  db_delete('blocks')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('blocks')
     ->condition('module', 'l10n_groups')
     ->condition('delta', 'info')
     ->condition('theme', 'bluecheese');
diff --git a/l10n_groups/l10n_groups.module b/l10n_groups/l10n_groups.module
index 5d1713e..0a487da 100644
--- a/l10n_groups/l10n_groups.module
+++ b/l10n_groups/l10n_groups.module
@@ -113,7 +113,7 @@ function l10n_groups_og_context_negotiation_info() {
 function l10n_groups_form_alter(&$form, $form_state, $form_id) {
   if ($form_id == 'l10n_group_node_form') {
     if (empty($form['l10n_group_language']['#value']) && empty($form['l10n_group_language']['#options'])) {
-      drupal_set_message(t("All available languages have groups now. You cannot create another group until a new language is added on the administration interface."), 'error');
+      \Drupal::messenger()->addError(t("All available languages have groups now. You cannot create another group until a new language is added on the administration interface."));
       $form['submit']['#disabled'] = TRUE;
     }
     $form['body'][LANGUAGE_NONE][0]['#title'] = t('Welcome message');
@@ -152,7 +152,7 @@ function l10n_groups_set_context($langcode = NULL) {
   if (!empty($langcode)) {
     $groups = l10n_groups_get_groups();
     // Set group context and ask for og details block.
-    if (isset($groups[$langcode]) && $node = node_load($groups[$langcode])) {
+    if (isset($groups[$langcode]) && $node = \Drupal::service('entity_type.manager')->getStorage('node')->load($groups[$langcode])) {
       return og_context('node', $node);
     }
   }
@@ -216,12 +216,14 @@ function l10n_groups_block_view($delta) {
               }
             }
             // Get the number of members
-            $subscribers_count = db_select('og_membership', 'ogm')->condition('state', OG_STATE_ACTIVE)
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+            $subscribers_count = \Drupal::database()->select('og_membership', 'ogm')->condition('state', OG_STATE_ACTIVE)
               ->condition('type', OG_MEMBERSHIP_TYPE_DEFAULT)->condition('entity_type', 'user')
               ->condition('gid', $group->nid)->countQuery()->execute()->fetchField();
             $links['subscribers'] = l(t('!subscribers-count members', array('!subscribers-count' => $subscribers_count)), "group/node/$group->nid/admin/people");
             // Get the manager
-            $account = user_load($group->uid);
+            $account = \Drupal::service('entity_type.manager')->getStorage('user')->load($group->uid);
             $links['manager'] = t('Manager: !name', array('!name' => theme('username', array('account' => $account))));
           }
           elseif ($og_state == OG_STATE_PENDING) {
@@ -266,7 +268,7 @@ function l10n_groups_block_view($delta) {
 function l10n_groups_views_api() {
   return array(
     'api' => 3,
-    'path' => drupal_get_path('module', 'l10n_groups'),
+    'path' => \Drupal::service('extension.list.module')->getPath('l10n_groups'),
   );
 }
 
@@ -292,7 +294,9 @@ function l10n_groups_node_info() {
  * Implements hook_insert().
  */
 function l10n_groups_insert($node) {
-  db_insert('l10n_groups_group')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->insert('l10n_groups_group')
     ->fields(array(
     'nid' => $node->nid,
     'language' => $node->l10n_group_language,
@@ -305,7 +309,9 @@ function l10n_groups_insert($node) {
  * Implements hook_delete().
  */
 function l10n_groups_delete(&$node) {
-  db_delete('l10n_groups_group')->condition('nid', $node->nid)->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_groups_group')->condition('nid', $node->nid)->execute();
   l10n_community_cache_clear_all();
 }
 
@@ -313,8 +319,12 @@ function l10n_groups_delete(&$node) {
  * Implements hook_update().
  */
 function l10n_groups_update($node) {
-  if ($nid = db_query('SELECT nid FROM {l10n_groups_group} WHERE nid = :nid', array(':nid' => $node->nid))->fetchField()) {
-    db_update('l10n_groups_group')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  if ($nid = \Drupal::database()->query('SELECT nid FROM {l10n_groups_group} WHERE nid = :nid', array(':nid' => $node->nid))->fetchField()) {
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->update('l10n_groups_group')
       ->fields(array('language' => $node->l10n_group_language))
       ->condition('nid', $node->nid)
       ->execute();
@@ -330,7 +340,9 @@ function l10n_groups_update($node) {
 function l10n_groups_load($nodes) {
   $q = 'SELECT language AS l10n_group_language FROM {l10n_groups_group} WHERE nid = :nid';
   foreach ($nodes as $nid => &$node) {
-    $node_additions = db_query($q, array(':nid' => $nid))->fetchObject();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $node_additions = \Drupal::database()->query($q, array(':nid' => $nid))->fetchObject();
     foreach ($node_additions as $property => &$value) {
       $node->$property = $value;
     }
@@ -401,7 +413,9 @@ function l10n_groups_form($node, &$form_state) {
   }
   else {
     // Create a list of languages on the site having no translation group.
-    $groups = db_query('SELECT language FROM {l10n_groups_group}');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $groups = \Drupal::database()->query('SELECT language FROM {l10n_groups_group}');
     foreach ($groups as $group) {
       if ($languages[$group->language]) {
         unset($languages[$group->language]);
@@ -418,7 +432,7 @@ function l10n_groups_form($node, &$form_state) {
     );
 
     // Add a message to configure plurals for language.
-    drupal_set_message(t('Remember to configure plurals for the language you mean to create a group for.'), 'warning');
+    \Drupal::messenger()->addWarning(t('Remember to configure plurals for the language you mean to create a group for.'));
   }
 
   return $form;
@@ -461,7 +475,9 @@ function l10n_groups_get_groups() {
 
   if (!isset($groups)) {
     $groups = array();
-    $result = db_query('SELECT nid, language FROM {l10n_groups_group}');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query('SELECT nid, language FROM {l10n_groups_group}');
     foreach ($result as $group) {
       $groups[$group->language] = $group->nid;
     }
@@ -514,7 +530,7 @@ function l10n_groups_broadcast_access($langcode) {
 function l10n_groups_broadcast($langcode) {
   $groups = l10n_groups_get_groups();
   module_load_include('inc', 'og', 'og.pages');
-  return drupal_get_form('og_broadcast_form', node_load($groups[$langcode]));
+  return drupal_get_form('og_broadcast_form', \Drupal::service('entity_type.manager')->getStorage('node')->load($groups[$langcode]));
 }
 
 // = Summary page outputs ======================================================
@@ -527,7 +543,7 @@ function l10n_groups_broadcast($langcode) {
 function l10n_groups_l10n_community_build_language_page($language) {
   $groups = l10n_groups_get_groups();
   $lang_code = $language->language;
-  if (isset($groups[$lang_code]) && node_access('view', $group_node = node_load($groups[$lang_code]))) {
+  if (isset($groups[$lang_code]) && node_access('view', $group_node = \Drupal::service('entity_type.manager')->getStorage('node')->load($groups[$lang_code]))) {
     if (!empty($group_node->body[LANGUAGE_NONE][0])) {
       $output = $group_node->body[LANGUAGE_NONE][0]['safe_value'];
     }
@@ -549,7 +565,7 @@ function l10n_groups_views_post_render(&$view, &$output, &$cache) {
   if ($view->name == 'l10n_groups_ron') {
     $context = og_context();
     if (!empty($context)) {
-      $node = node_load($context['gid']);
+      $node = \Drupal::service('entity_type.manager')->getStorage('node')->load($context['gid']);
       $language = l10n_community_get_language($node->l10n_group_language);
       $view->build_info['title'] = t('Board - @language', array('@language' => $language->name));
     }
@@ -568,7 +584,7 @@ function l10n_groups_og_context_handler_translate_path() {
     if ($langcode = l10n_community_language_load($path[2])) {
       $groups = l10n_groups_get_groups();
       // Set group context and ask for og details block.
-      if (isset($groups[$langcode]) && $node = node_load($groups[$langcode])) {
+      if (isset($groups[$langcode]) && $node = \Drupal::service('entity_type.manager')->getStorage('node')->load($groups[$langcode])) {
         if (!entity_access('view', 'node', $node)) {
           // User can't access entity.
           return array();
diff --git a/l10n_packager/l10n_packager.admin.inc b/l10n_packager/l10n_packager.admin.inc
index 7aee8c4..96981d6 100644
--- a/l10n_packager/l10n_packager.admin.inc
+++ b/l10n_packager/l10n_packager.admin.inc
@@ -72,7 +72,7 @@ function l10n_packager_settings_form($form, &$form_state) {
  * Check/create directory if not there already.
  */
 function l10n_packager_admin_check_directory($form_element) {
-  file_prepare_directory($form_element['#value'], FILE_CREATE_DIRECTORY, $form_element['#parents'][0]);
+  \Drupal::service('file_system')->prepareDirectory($form_element['#value'], \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY, $form_element['#parents'][0]);
   return $form_element;
 }
 
@@ -180,7 +180,9 @@ function l10n_packager_admin_projects_form_validate($form, &$form_state) {
     }
   }
   if (!empty($form_state['values']['release'])) {
-    $query = db_select('l10n_server_release');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $query = \Drupal::database()->select('l10n_server_release');
     $query->addExpression('COUNT(rid)');
     $query->condition('title', $form_state['values']['release'], 'LIKE');
     if (!empty($project)) {
@@ -207,7 +209,9 @@ function l10n_packager_admin_projects_form_submit($form, $form_state) {
   $release = !empty($form_state['values']['release']) ? $form_state['values']['release'] : NULL;
 
   // Build the query that will be used in different ways depending on the operation
-  $query = db_select('l10n_server_release', 'r')->fields('r', array('rid'));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $query = \Drupal::database()->select('l10n_server_release', 'r')->fields('r', array('rid'));
   if ($pid) {
     $query = $query->condition('pid', $pid);
   }
@@ -223,11 +227,13 @@ function l10n_packager_admin_projects_form_submit($form, $form_state) {
       batch_set($batch);
     }
     else {
-      drupal_set_message(t('No releases found for repackaging.'), 'error');
+      \Drupal::messenger()->addError(t('No releases found for repackaging.'));
     }
   }
   elseif ($op == t('Mark for repackaging')) {
-    $affected_rows = db_update('l10n_packager_release')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $affected_rows = \Drupal::database()->update('l10n_packager_release')
       ->fields(array(
           'updated' => 0,
           'checked' => 0,
@@ -235,7 +241,7 @@ function l10n_packager_admin_projects_form_submit($form, $form_state) {
         ))
       ->condition('rid', $query, 'IN')
       ->execute();
-    drupal_set_message(t("Marked %count releases for repackaging.", array('%count' => $affected_rows)));
+    \Drupal::messenger()->addStatus(t("Marked %count releases for repackaging.", array('%count' => $affected_rows)));
   }
 }
 
@@ -291,7 +297,7 @@ function l10n_packager_admin_installer_form_submit($form, $form_state) {
   module_load_include('inc', 'l10n_community', 'export');
 
   // Generate tgz file with all files added.
-  $tempfile = tempnam(file_directory_temp(), 'l10n_community-' . $form_state['values']['project']->uri . '-installer');
+  $tempfile = tempnam(\Drupal::service('file_system')->getTempDirectory(), 'l10n_community-' . $form_state['values']['project']->uri . '-installer');
   $tar = new Archive_Tar($tempfile, 'gz');
 
   $languages = l10n_community_get_languages();
diff --git a/l10n_packager/l10n_packager.inc b/l10n_packager/l10n_packager.inc
index 059c127..7c3b9ae 100644
--- a/l10n_packager/l10n_packager.inc
+++ b/l10n_packager/l10n_packager.inc
@@ -35,7 +35,7 @@ function l10n_packager_release_check($release, $force = FALSE, $limit = 0, $lang
   $updated = array();
   // We get update time before creating files so the release checked time
   // is <= file timestamp.
-  $timestamp = REQUEST_TIME;
+  $timestamp = \Drupal::time()->getRequestTime();
 
   $files = l10n_packager_release_get_files($release->rid);
   $last_updated = l10n_packager_translation_last_updated($release->rid);
@@ -104,7 +104,7 @@ function l10n_packager_release_check($release, $force = FALSE, $limit = 0, $lang
  */
 function l10n_packager_release_package($release, $language, $file = NULL, $timestamp = NULL) {
 
-  $timestamp = $timestamp ? $timestamp : REQUEST_TIME;
+  $timestamp = $timestamp ? $timestamp : \Drupal::time()->getRequestTime();
   $variables = array(
     '%release' => l10n_packager_release_name($release),
     '%language' => $language->name,
@@ -140,8 +140,8 @@ function l10n_packager_release_package($release, $language, $file = NULL, $times
     $file->filename = basename($file_path);
     $file->filemime = $mime_type;
     $file->uri = $file_path;
-    file_unmanaged_move($export_name, $file->uri, FILE_EXISTS_REPLACE);
-    $file->filesize = filesize(drupal_realpath($file->uri));
+    file_unmanaged_move($export_name, $file->uri, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+    $file->filesize = filesize(\Drupal::service('file_system')->realpath($file->uri));
     $file->sid_count = $sid_count;
     // Create actual symlink to latest
     l10n_packager_create_latest_symlink($file_path, $release, $language);
@@ -196,7 +196,7 @@ function _l10n_packager_build_batch($operations = array(), $title = '') {
     'title' => $title ? $title : t('Translations packager.'),
     'operations' => $operations,
     // Tell the batch engine which file to load before calling operations.
-    'file' => drupal_get_path('module', 'l10n_packager') . '/l10n_packager.inc',
+    'file' => \Drupal::service('extension.list.module')->getPath('l10n_packager') . '/l10n_packager.inc',
   );
   return $batch;
 }
@@ -215,7 +215,7 @@ function _l10n_packager_batch_repackage($rid, $langcode) {
     $language = $languages[$langcode];
     $updates = l10n_packager_release_check($release, TRUE, 0, $language);
     if ($file = current($updates)) {
-      drupal_set_message(t("Repackaged release %release for %language. Created file %filename.", array('%release' => l10n_packager_release_name($release), '%filename' => $file->filename, '%language' => t($language->name))));
+      \Drupal::messenger()->addStatus(t("Repackaged release %release for %language. Created file %filename.", array('%release' => l10n_packager_release_name($release), '%filename' => $file->filename, '%language' => t($language->name))));
     }
   }
 }
@@ -245,7 +245,7 @@ function l10n_packager_create_latest_symlink($file, $release, $language) {
   $abbreviated_release = clone $release;
   $abbreviated_release->branch = preg_replace('/\.[0-9]+\.x$/', '.x', $abbreviated_release->branch);
 
-  $target = drupal_realpath($file);
+  $target = \Drupal::service('file_system')->realpath($file);
   $latest_file = dirname($target) . '/' . l10n_packager_get_filepath($abbreviated_release, $language, '%project-%branch.%language.po');
 
   if (file_exists($latest_file)) {
@@ -268,13 +268,14 @@ function l10n_packager_get_release($rid) {
     return $rid;
   }
   else {
-    $result = db_query("
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query("
 SELECT r.rid, r.pid, r.title, pr.checked, pr.updated, pr.status, p.uri
 FROM {l10n_server_project} p
 INNER JOIN {l10n_server_release} r ON p.pid = r.pid
 LEFT JOIN {l10n_packager_release} pr ON r.rid = pr.rid
-WHERE r.rid = :rid",
-              array(':rid' => $rid));
+WHERE r.rid = :rid", array(':rid' => $rid));
     $release = $result->fetchObject();
     l10n_packager_release_set_branch($release);
     return $release;
@@ -297,8 +298,9 @@ function l10n_packager_release_name($rid) {
  * Get timestamp of the last updated string for a release, for each language.
  */
 function l10n_packager_translation_last_updated($rid) {
-  $result = db_query("SELECT t.language, MAX(t.time_changed) AS latest_time FROM {l10n_server_translation} t INNER JOIN {l10n_server_line} l ON t.sid = l.sid WHERE t.is_active = 1 AND t.is_suggestion = 0 AND l.rid = :rid GROUP BY t.language",
-            array(':rid' => $rid));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query("SELECT t.language, MAX(t.time_changed) AS latest_time FROM {l10n_server_translation} t INNER JOIN {l10n_server_line} l ON t.sid = l.sid WHERE t.is_active = 1 AND t.is_suggestion = 0 AND l.rid = :rid GROUP BY t.language", array(':rid' => $rid));
   return $result->fetchAllKeyed();
 }
 
@@ -306,8 +308,9 @@ function l10n_packager_translation_last_updated($rid) {
  * Get files for a release, indexed by language.
  */
 function l10n_packager_release_get_files($rid) {
-  $result = db_query('SELECT * FROM {l10n_packager_file} r LEFT JOIN {file_managed} f ON r.fid = f.fid WHERE r.rid = :rid',
-            array(':rid' => $rid));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query('SELECT * FROM {l10n_packager_file} r LEFT JOIN {file_managed} f ON r.fid = f.fid WHERE r.rid = :rid', array(':rid' => $rid));
   return $result->fetchAllAssoc('language');
 }
 
diff --git a/l10n_packager/l10n_packager.install b/l10n_packager/l10n_packager.install
index 9005a2f..8be3242 100644
--- a/l10n_packager/l10n_packager.install
+++ b/l10n_packager/l10n_packager.install
@@ -138,10 +138,14 @@ function l10n_packager_update_7000(&$sandbox) {
 
   // Remove existing stale packages.
   if (!variable_get('l10n_packager_update_7000_inprogress', false)) {
-    db_delete('file_managed')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->delete('file_managed')
       ->condition('uid', 0)
       ->execute();
-    db_delete('file_usage')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->delete('file_usage')
       ->condition('module', 'l10n_packager')
       ->execute();
     variable_set('l10n_packager_update_7000_inprogress', true);
@@ -150,9 +154,13 @@ function l10n_packager_update_7000(&$sandbox) {
   $fid = variable_get('l10n_packager_update_7000_fid', -1);
   if (!isset($sandbox['progress'])) {
     // Delete stale rows from {upload} where the fid is not in the {files} table.
-    db_delete('l10n_packager_file')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->delete('l10n_packager_file')
       ->notExists(
-        db_select('files', 'f')
+        \Drupal::database()->select('files', 'f')
         ->fields('f', array('fid'))
         ->where('f.fid = {l10n_packager_file}.fid')
       )
@@ -160,18 +168,22 @@ function l10n_packager_update_7000(&$sandbox) {
     // Initialize batch update information.
     $sandbox['progress'] = variable_get('l10n_packager_update_7000_progress', 0);
     $sandbox['last_fid_processed'] = $fid;
-    $sandbox['max'] = db_query("SELECT COUNT(*) FROM {l10n_packager_file}")->fetchField();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $sandbox['max'] = \Drupal::database()->query("SELECT COUNT(*) FROM {l10n_packager_file}")->fetchField();
   }
 
   $basename = variable_get('file_directory_path', conf_path() . '/files');
-  $scheme = file_default_scheme() . '://';
+  $scheme = \Drupal::config('system.file')->get('default_scheme') . '://';
 
   // Determine vids for this batch.
   // Process all files attached to a given revision during the same batch.
   $limit = variable_get('l10n_packager_update_7000_batch_size', 5000);
   $count = 0;
 
-  $query = db_select('files', 'fi');
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $query = \Drupal::database()->select('files', 'fi');
   $query->join('l10n_packager_file', 'pf', 'fi.fid = pf.fid');
   $query->fields('fi', array('fid', 'uid', 'filename', 'filepath', 'filemime', 'filesize', 'status', 'timestamp'))
     ->fields('pf', array('drid'))
@@ -189,14 +201,16 @@ function l10n_packager_update_7000(&$sandbox) {
     // hooks while validating the scheme, and those will not work during
     // the upgrade. Instead, use a simpler version that just assumes the
     // scheme from above is already valid.
-    if (($file_uri_scheme = file_uri_scheme($file['uri'])) && ($file_uri_target = file_uri_target($file['uri']))) {
+    if (($file_uri_scheme = file_uri_scheme($file['uri'])) && ($file_uri_target = \Drupal::service('stream_wrapper_manager')->getTarget($file['uri']))) {
       $file['uri'] = $file_uri_scheme . '://' . $file_uri_target;
     }
     unset($file['filepath']);
     // Insert into the file_managed table.
     // Each fid and uri should only be stored once in file_managed.
     try {
-      db_insert('file_managed')
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+      \Drupal::database()->insert('file_managed')
         ->fields(array(
           'fid' => $file['fid'],
           'uid' => $file['uid'],
@@ -239,9 +253,13 @@ function l10n_packager_update_7000(&$sandbox) {
     variable_del('l10n_packager_update_7000_fid');
 
     // Remove stale file duplicates from the l10n_packager_file table.
-    db_delete('l10n_packager_file')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->delete('l10n_packager_file')
       ->notExists(
-        db_select('file_managed', 'f')
+        \Drupal::database()->select('file_managed', 'f')
         ->fields('f', array('fid'))
         ->where('f.fid = {l10n_packager_file}.fid')
       )
diff --git a/l10n_packager/l10n_packager.module b/l10n_packager/l10n_packager.module
index 3abf53a..8c82425 100644
--- a/l10n_packager/l10n_packager.module
+++ b/l10n_packager/l10n_packager.module
@@ -90,7 +90,7 @@ function l10n_packager_check_updates() {
 
     timer_start('l10n_packager');
     module_load_include('inc', 'l10n_packager');
-    $timestamp = REQUEST_TIME - $interval;
+    $timestamp = \Drupal::time()->getRequestTime() - $interval;
     $file_limit = variable_get('l10n_packager_file_limit', 1);
     $count_files = $count_check = 0;
 
@@ -211,14 +211,14 @@ function l10n_packager_export_metafile() {
 
   // Export to static file.
   $xml_path = l10n_packager_directory();
-  file_prepare_directory($xml_path, FILE_CREATE_DIRECTORY);
+  \Drupal::service('file_system')->prepareDirectory($xml_path, \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY);
   $t_args = array('%file' => $xml_path . '/l10n_server.xml');
 
   if ($xml->asXML($xml_path . '/l10n_server.xml')) {
-    drupal_set_message(t('Server information XML exported to %file.', $t_args));
+    \Drupal::messenger()->addStatus(t('Server information XML exported to %file.', $t_args));
   }
   else {
-    drupal_set_message(t('Error when trying to export server info XML to %file.', $t_args), 'error');
+    \Drupal::messenger()->addError(t('Error when trying to export server info XML to %file.', $t_args));
   }
 }
 
@@ -228,7 +228,7 @@ function l10n_packager_export_metafile() {
  * Get directory for creating files
  */
 function l10n_packager_directory() {
-  return variable_get('l10n_packager_directory', file_default_scheme() . '://l10n_packager');
+  return variable_get('l10n_packager_directory', \Drupal::config('system.file')->get('default_scheme') . '://l10n_packager');
 }
 
 /**
@@ -239,9 +239,9 @@ function l10n_packager_create_path($path) {
   $basepath = $currentpath = l10n_packager_directory();
   $finalpath = $basepath . '/' . $directory;
   $parts = explode('/', $directory);
-  $htaccess_path = drupal_realpath($basepath) . '/.htaccess';
+  $htaccess_path = \Drupal::service('file_system')->realpath($basepath) . '/.htaccess';
   if (!is_dir($basepath)) {
-    file_prepare_directory($basepath, FILE_CREATE_DIRECTORY);
+    \Drupal::service('file_system')->prepareDirectory($basepath, \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY);
   }
   if (!file_exists($htaccess_path)) {
     $htaccess_lines = "\n\n<FilesMatch \"\.(po)$\">\n\tForceType \"text/plain; charset=utf-8\"\n\tAllow from ALL\n</FilesMatch>\n";
@@ -252,7 +252,7 @@ function l10n_packager_create_path($path) {
   }
   while (is_dir($currentpath) && !is_dir($finalpath) && ($more = array_shift($parts))) {
     $currentpath .= '/' . $more;
-    file_prepare_directory($currentpath, FILE_CREATE_DIRECTORY);
+    \Drupal::service('file_system')->prepareDirectory($currentpath, \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY);
   }
   return $basepath . '/' . $path;
 }
@@ -313,7 +313,7 @@ function l10n_packager_build_download_links($uri) {
 
     $rendered = count($list) ? theme('item_list', array('items' => $list)) : t('No downloads available for this project.');
     // Store for later use.
-    cache_set('project:' . $uri, $rendered, 'cache_l10n_packager', REQUEST_TIME + 60 * 60 * 24);
+    cache_set('project:' . $uri, $rendered, 'cache_l10n_packager', \Drupal::time()->getRequestTime() + 60 * 60 * 24);
   }
   else {
     $rendered = $rendered->data;
@@ -328,8 +328,8 @@ function l10n_packager_build_download_links($uri) {
  * Build download table contents for the language view pages.
  */
 function l10n_packager_l10n_community_build_language_page($language) {
-  drupal_add_css(drupal_get_path('module', 'l10n_packager') . '/l10n_packager.css');
-  drupal_add_js(drupal_get_path('module', 'l10n_packager') . '/l10n_packager.js');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('l10n_packager') . '/l10n_packager.css');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('l10n_packager') . '/l10n_packager.js');
 
   // Expire old entries and then try to look up our entry.
   cache_clear_all(NULL, 'cache_l10n_packager');
@@ -365,7 +365,9 @@ function l10n_packager_l10n_community_build_language_page($language) {
   );
 
   // Output the highlighted project first and foremost.
-  $select = db_select('l10n_server_project', 'p')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $select = \Drupal::database()->select('l10n_server_project', 'p')
     ->fields('p', array('title', 'uri', 'pid'))
     ->condition('status', 1)
     ->orderBy('weight')
@@ -397,7 +399,7 @@ function l10n_packager_l10n_community_build_language_page($language) {
     $output .= '<p>' . format_plural($project_count, '<a href="@download">More downloads</a> are available. These are just the top projects among @count projects translated on this server.', '<a href="@download">More downloads</a> are available. These are just the top projects among @count projects translated on this server.', array('@download' => url('translate/downloads'))) . '</p>';
   }
 
-  cache_set('download:language:' . $language->language, $output, 'cache_l10n_packager', REQUEST_TIME + 60 * 60 * 24);
+  cache_set('download:language:' . $language->language, $output, 'cache_l10n_packager', \Drupal::time()->getRequestTime() + 60 * 60 * 24);
   return array('#markup' => $output);
 }
 
@@ -407,7 +409,9 @@ function l10n_packager_l10n_community_build_language_page($language) {
 function l10n_packager_project_downloads($project, $language, $summary = FALSE, $headers = array()) {
   $files = array();
   $branches = array();
-  $result = db_query("SELECT r.*, pr.*, pr.checked as release_checked, lf.*, f.* FROM {l10n_server_release} r INNER JOIN {l10n_packager_release} pr ON r.rid = pr.rid INNER JOIN {l10n_packager_file} lf ON r.rid = lf.rid INNER JOIN {file_managed} f ON lf.fid = f.fid WHERE r.pid = :pid AND lf.language = :language", array(':pid' => $project->pid, ':language' => $language->language));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query("SELECT r.*, pr.*, pr.checked as release_checked, lf.*, f.* FROM {l10n_server_release} r INNER JOIN {l10n_packager_release} pr ON r.rid = pr.rid INNER JOIN {l10n_packager_file} lf ON r.rid = lf.rid INNER JOIN {file_managed} f ON lf.fid = f.fid WHERE r.pid = :pid AND lf.language = :language", array(':pid' => $project->pid, ':language' => $language->language));
   foreach ($result as $item) {
     // Trim versions to only the major version, and any preceeding components.
     // For example, 1.2.3 → 1.x, 8.x-1.0-beta1 → 8.x-1.x.
@@ -448,8 +452,8 @@ function l10n_packager_project_downloads($project, $language, $summary = FALSE,
             '#href' => l10n_packager_get_download_url($project, $branch, $latest_item),
             '#options' => array('html' => TRUE),
           )),
-        format_date($latest_item->timestamp, 'custom', 'Y-M-d'),
-        format_date($up_to_date, 'custom', 'Y-M-d'),
+        \Drupal::service('date.formatter')->format($latest_item->timestamp, 'custom', 'Y-M-d'),
+        \Drupal::service('date.formatter')->format($up_to_date, 'custom', 'Y-M-d'),
       ),
     );
     $summary_list[] = l($latest_item->title, l10n_packager_get_download_url($project, $branch, $latest_item));
@@ -505,7 +509,7 @@ function l10n_packager_get_download_url($project, $branch, $file) {
     l10n_packager_release_set_branch($release);
     return $download_url . '/' . $release->core . '/' . $project->uri . '/' . $file->filename;
   }
-  return file_create_url($file->uri);
+  return \Drupal::service('file_url_generator')->generateAbsoluteString($file->uri);
 }
 
 /**
diff --git a/l10n_packager/l10n_packager.pages.inc b/l10n_packager/l10n_packager.pages.inc
index 425017a..f0d4cb9 100644
--- a/l10n_packager/l10n_packager.pages.inc
+++ b/l10n_packager/l10n_packager.pages.inc
@@ -9,8 +9,8 @@
  * Menu callback, search for project, and show its translation downloads.
  */
 function l10n_packager_explore_downloads() {
-  drupal_add_css(drupal_get_path('module', 'l10n_packager') . '/l10n_packager.css');
-  drupal_add_css(drupal_get_path('module', 'l10n_community') . '/l10n_community.css');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('l10n_packager') . '/l10n_packager.css');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('l10n_community') . '/l10n_community.css');
 
   $projects = l10n_server_get_projects();
   $form = drupal_get_form('l10n_packager_download_project_form', $projects);
@@ -29,7 +29,7 @@ function l10n_packager_explore_downloads() {
   }
   if (empty($project)) {
     if (!empty($_GET['project'])) {
-      drupal_set_message(t('Requested project not found.'), 'warning');
+      \Drupal::messenger()->addWarning(t('Requested project not found.'));
     }
     return $form;
   }
@@ -37,7 +37,7 @@ function l10n_packager_explore_downloads() {
   // Set proper title for given project.
   drupal_set_title(t('@project translation downloads', array('@project' => $project->title)), PASS_THROUGH);
 
-  $output = drupal_render($form);
+  $output = \Drupal::service('renderer')->render($form);
   // Expire old entries and then try to look up our entry.
   cache_clear_all(NULL, 'cache_l10n_packager');
   $rendered = cache_get('download:' . $project->uri, 'cache_l10n_packager');
@@ -45,7 +45,7 @@ function l10n_packager_explore_downloads() {
   if (empty($rendered)) {
     $downloads = l10n_packager_show_downloads($project);
     // Store for later use (cached for an hour).
-    cache_set('download:' . $project->uri, $downloads, 'cache_l10n_packager', REQUEST_TIME + 60 * 60);
+    cache_set('download:' . $project->uri, $downloads, 'cache_l10n_packager', \Drupal::time()->getRequestTime() + 60 * 60);
     $output .= $downloads;
   }
   else {
@@ -119,7 +119,9 @@ function l10n_packager_download_project_form_submit($form, $form_state) {
 function l10n_packager_show_downloads($project) {
   $files = array();
   $branches = array();
-  $result = db_query('SELECT r.*, pr.*, pr.checked as release_checked, lf.*, f.* FROM {l10n_server_release} r INNER JOIN {l10n_packager_release} pr ON r.rid = pr.rid INNER JOIN {l10n_packager_file} lf ON r.rid = lf.rid INNER JOIN {file_managed} f ON lf.fid = f.fid WHERE r.pid = :pid', array(':pid' => $project->pid));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query('SELECT r.*, pr.*, pr.checked as release_checked, lf.*, f.* FROM {l10n_server_release} r INNER JOIN {l10n_packager_release} pr ON r.rid = pr.rid INNER JOIN {l10n_packager_file} lf ON r.rid = lf.rid INNER JOIN {file_managed} f ON lf.fid = f.fid WHERE r.pid = :pid', array(':pid' => $project->pid));
   foreach ($result as $item) {
     // Trim versions to only the major version, and any preceeding components.
     // For example, 1.2.3 → 1.x, 8.x-1.0-beta1 → 8.x-1.x.
@@ -151,10 +153,10 @@ function l10n_packager_show_downloads($project) {
         krsort($files[$langcode][$branch]);
         $latest_item = array_shift($files[$langcode][$branch]);
         $cell = '<p>' . l($latest_item->title . ' (' . format_size($latest_item->filesize) . ')', l10n_packager_get_download_url($project, $branch, $latest_item)) . '</p>';
-        $cell .= '<p class="l10n-packager-meta">' . t('Generated: @generated', array('@generated' => format_date($latest_item->timestamp, 'custom', 'Y-M-d H:i'))) . '</p>';
+        $cell .= '<p class="l10n-packager-meta">' . t('Generated: @generated', array('@generated' => \Drupal::service('date.formatter')->format($latest_item->timestamp, 'custom', 'Y-M-d H:i'))) . '</p>';
         $up_to_date = max($latest_item->checked, $latest_item->release_checked);
         if ($up_to_date > $latest_item->timestamp) {
-          $cell .= '<p class="l10n-packager-meta">' . t('Up to date as of: @checked', array('@checked' => format_date($up_to_date, 'custom', 'Y-M-d H:i'))) . '</p>';
+          $cell .= '<p class="l10n-packager-meta">' . t('Up to date as of: @checked', array('@checked' => \Drupal::service('date.formatter')->format($up_to_date, 'custom', 'Y-M-d H:i'))) . '</p>';
         }
         $row[] = $cell;
       }
diff --git a/l10n_remote/l10n_remote.module b/l10n_remote/l10n_remote.module
index c760a63..3c0b4ee 100644
--- a/l10n_remote/l10n_remote.module
+++ b/l10n_remote/l10n_remote.module
@@ -48,11 +48,11 @@ function l10n_remote_user_page($client_token) {
   global $user;
 
   if (!$user->uid) {
-    drupal_set_message(t('Please log in first to generate your Localization Server API key.'), 'error');
+    \Drupal::messenger()->addError(t('Please log in first to generate your Localization Server API key.'));
     return '';
   }
   elseif (!user_access('submit suggestions remotely', $user)) {
-    drupal_set_message(t("You don't have the required permissions to use remote submission on this Localization Server."), 'error');
+    \Drupal::messenger()->addError(t("You don't have the required permissions to use remote submission on this Localization Server."));
     return '';
   }
 
@@ -62,7 +62,7 @@ function l10n_remote_user_page($client_token) {
     '#markup' => l10n_remote_user_api_key($user->uid, $client_token),
     '#description' => t('Copy and paste this API key into your user account on the client host.'),
   );
-  return drupal_render($items);
+  return \Drupal::service('renderer')->render($items);
 }
 
 /**
@@ -138,7 +138,7 @@ function l10n_remote_xmlrpc_string_submit($langcode, $source, $translation, $uid
   // TODO Convert "user_load" to "user_load_multiple" if "$uid" is other than a uid.
   // To return a single user object, wrap "user_load_multiple" with "array_shift" or equivalent.
   // Example: array_shift(user_load_multiple(array(), $uid))
-  if (!(($account = user_load($uid)) && $account->status && user_access('access localization community', $account) && user_access('submit suggestions remotely', $account))) {
+  if (!(($account = \Drupal::service('entity_type.manager')->getStorage('user')->load($uid)) && $account->status && user_access('access localization community', $account) && user_access('submit suggestions remotely', $account))) {
     //watchdog('l10n_community', 'Unauthorized or blocked user attempted submission.', NULL, WATCHDOG_WARNING);
     return array('status' => FALSE, 'reason' => 'Blocked user account or no permission to submit translations.');
   }
@@ -162,7 +162,9 @@ function l10n_remote_xmlrpc_string_submit($langcode, $source, $translation, $uid
   // Check whether we have this source string managed.
   // @todo: add context support as soon as l10n_client starts to support it!
   // @todo: append $context to $source in MD5 counting when available.
-  $select = db_select('l10n_server_string', 's')->fields('s', array('sid'))
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $select = \Drupal::database()->select('l10n_server_string', 's')->fields('s', array('sid'))
     ->condition('hashkey', md5($source));
   $sid = $select->execute()->fetchField();
   if (!$sid) {
diff --git a/l10n_server/l10n_server.connectors.inc b/l10n_server/l10n_server.connectors.inc
index be86701..5cad542 100644
--- a/l10n_server/l10n_server.connectors.inc
+++ b/l10n_server/l10n_server.connectors.inc
@@ -14,7 +14,7 @@ function l10n_server_connectors_overview() {
   $connectors = l10n_server_get_connectors();
   $sources = l10n_server_get_sources();
   if (empty($connectors) || empty($sources)) {
-    drupal_set_message(t('No localization server connectors found.'), 'error');
+    \Drupal::messenger()->addError(t('No localization server connectors found.'));
     return '';
   }
   return drupal_get_form('l10n_server_admin_connectors_form', $connectors, $sources);
@@ -84,7 +84,7 @@ function theme_l10n_server_admin_connectors_form($variables) {
         if (!empty($item['#type']) && ($item['#type'] == 'checkbox')) {
           $row[1] = $item['#title'];
           unset($item['#title']);
-          $row[0] = drupal_render($item);
+          $row[0] = \Drupal::service('renderer')->render($item);
         }
         elseif (!empty($item['#type']) && ($item['#type'] == 'value')) {
           $row = array_merge($row, $item['#value']);
@@ -169,7 +169,7 @@ function l10n_server_connectors_files_settings_form($form, &$form_state, $connec
  * Check/create directory if not there already.
  */
 function l10n_server_connectors_files_check_directory($form_element) {
-  file_prepare_directory($form_element['#value'], FILE_CREATE_DIRECTORY, $form_element['#parents'][0]);
+  \Drupal::service('file_system')->prepareDirectory($form_element['#value'], \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY, $form_element['#parents'][0]);
   return $form_element;
 }
 
diff --git a/l10n_server/l10n_server.devel.inc b/l10n_server/l10n_server.devel.inc
index 64af82b..31d557a 100644
--- a/l10n_server/l10n_server.devel.inc
+++ b/l10n_server/l10n_server.devel.inc
@@ -31,9 +31,13 @@ function l10n_server_generate_languages_form($form, &$form_state) {
  */
 function l10n_server_generate_languages_form_submit($form_id, &$form_state) {
   include_once DRUPAL_ROOT . '/' . 'includes/iso.inc';
-  db_delete('languages') ->condition('language', 'en', '<>') ->execute();
-  db_delete('locales_target') ->execute();
-  drupal_set_message(t('Languages deleted.'));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+		// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+		\Drupal::database()->delete('languages') ->condition('language', 'en', '<>') ->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+		// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+		\Drupal::database()->delete('locales_target') ->execute();
+  \Drupal::messenger()->addStatus(t('Languages deleted.'));
   $num = $form_state['values']['num'];
   if ($num > 0) {
     $predefined = _locale_get_predefined_list();
@@ -55,7 +59,9 @@ function l10n_server_generate_languages_form_submit($form_id, &$form_state) {
       $plural_formula = (isset($formulas['langcode']) ? $formulas['langcode'] : $default_formula);
       // We know we get a valid formula here so no need for error handling.
       list($plurals, $formula) = l10n_server_parse_plural_formula($plural_formula);
-      db_insert('languages')
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						\Drupal::database()->insert('languages')
 	->fields(array(
             'language' => $langcode,
             'name' => $language[0],
@@ -71,7 +77,7 @@ function l10n_server_generate_languages_form_submit($form_id, &$form_state) {
           ))
 	->execute();
     }
-    drupal_set_message(format_plural($num, '1 language created.', '@count languages created.'));
+    \Drupal::messenger()->addStatus(format_plural($num, '1 language created.', '@count languages created.'));
   }
 }
 
@@ -81,10 +87,12 @@ function l10n_server_generate_languages_form_submit($form_id, &$form_state) {
  * User interface to generate translations and languages.
  */
 function l10n_server_generate_translations_form($form, &$form_state) {
-  $count = db_query('SELECT COUNT(*) FROM {l10n_server_string}')->fetchField();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+		// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+		$count = \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_string}')->fetchField();
   $limit = (int) $count * 0.75;
   if (empty($count)) {
-    drupal_set_message(t('No source strings found, cannot generate translations and suggestions.'));
+    \Drupal::messenger()->addStatus(t('No source strings found, cannot generate translations and suggestions.'));
   }
   else {
     $form['limit'] = array(
@@ -112,43 +120,57 @@ function l10n_server_generate_translations_form($form, &$form_state) {
  */
 function l10n_server_generate_translations_form_submit($form_id, &$form_state) {
   if ($form_state['values']['delete_existing']) {
-    db_delete('l10n_server_translation')->execute();
-    db_delete('l10n_server_status_flag')->execute();
-    drupal_set_message(t('Previous translations and suggestions deleted.'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				\Drupal::database()->delete('l10n_server_translation')->execute();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+				// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+				\Drupal::database()->delete('l10n_server_status_flag')->execute();
+    \Drupal::messenger()->addStatus(t('Previous translations and suggestions deleted.'));
   }
 
   $limit = (int) $form_state['values']['limit'];
   $languages = language_list();
   foreach ($languages as $language) {
     if ($language->language != 'en') {
-      $uid = db_select('users', 'u')
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						$uid = \Drupal::database()->select('users', 'u')
         ->fields('u', array('uid'))
         ->orderBy('RAND()')
         ->execute()
         ->fetchField();
 
-      $query = db_select('l10n_server_string', 's')->range(0, $limit);
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						$query = \Drupal::database()->select('l10n_server_string', 's')->range(0, $limit);
       $query->addExpression('sid', 'sid');
       $query->addExpression(':lng', 'language', array(':lng' => $language->language));
       $query->addExpression('value', 'translation');
       $query->addExpression($uid, 'uid_entered');
-      $query->addExpression(REQUEST_TIME, 'time_entered');
+      $query->addExpression(\Drupal::time()->getRequestTime(), 'time_entered');
       $query->addExpression(1, 'is_suggestion');
       $query->addExpression(1, 'is_active');
-      $query->addExpression(REQUEST_TIME, 'time_changed');
-      db_insert('l10n_server_translation')
+      $query->addExpression(\Drupal::time()->getRequestTime(), 'time_changed');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						\Drupal::database()->insert('l10n_server_translation')
         ->from($query)
         ->execute();
 
-      $query = db_select('l10n_server_string', 's')->range(0, $limit);
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						$query = \Drupal::database()->select('l10n_server_string', 's')->range(0, $limit);
       $query->addExpression('sid', 'sid');
       $query->addExpression(':lng', 'language', array(':lng' => $language->language));
       $query->addExpression(1, 'has_suggestion');
       $query->addExpression(1, 'has_translation');
-      db_insert('l10n_server_status_flag')
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+						// You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+						\Drupal::database()->insert('l10n_server_status_flag')
         ->from($query)
         ->execute();
     }
   }
-  drupal_set_message(format_plural($limit * count($languages), '1 translation created.', '@count translations created.'));
+  \Drupal::messenger()->addStatus(format_plural($limit * count($languages), '1 translation created.', '@count translations created.'));
 }
diff --git a/l10n_server/l10n_server.module b/l10n_server/l10n_server.module
index be9794f..91d5dce 100644
--- a/l10n_server/l10n_server.module
+++ b/l10n_server/l10n_server.module
@@ -434,7 +434,7 @@ function l10n_server_l10n_server_source_info() {
       'title' => t('the file system'),
       'form' => 'l10n_server_connectors_files_settings_form',
       'scan' => TRUE,
-      'file' => drupal_get_path('module', 'l10n_server') . '/l10n_server.connectors.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('l10n_server') . '/l10n_server.connectors.inc',
     ),
     'uploads' => array(
       'title' => t('file uploads'),
@@ -471,7 +471,7 @@ function l10n_server_form_l10n_server_admin_projects_release_edit_form_alter(&$f
       $form['last_parsed'] = array(
         '#type' => 'item',
         '#title' => t('Source last parsed'),
-        '#markup' => format_date($form['previous_release']['#value']->last_parsed),
+        '#markup' => \Drupal::service('date.formatter')->format($form['previous_release']['#value']->last_parsed),
         '#description' => t('To start over this same release with a new source file, <a href="@startover">start over the release</a>, edit and upload a new source file.', array('@startover' => url('admin/l10n_server/projects/releases/' . $form['project']['#value']->uri . '/reset/' . $form['previous_release']['#value']->rid))),
         '#weight' => 100,
       );
@@ -526,7 +526,9 @@ function l10n_server_release_file_upload_submit($form, &$form_state) {
 function l10n_server_get_projects($options = array()) {
   static $projects = array();
 
-  $select = db_select('l10n_server_project', 'p')->fields('p');
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $select = \Drupal::database()->select('l10n_server_project', 'p')->fields('p');
 
   // Consider returning all projects or just published ones.
   if (empty($options['all'])) {
@@ -564,7 +566,9 @@ function l10n_server_get_projects($options = array()) {
       return $projects[$options['uri']];
     }
     // Not found in cache, so query and cache before returning.
-    $result = db_query("SELECT * FROM {l10n_server_project} WHERE uri = :uri", array(':uri' => $options['uri']));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query("SELECT * FROM {l10n_server_project} WHERE uri = :uri", array(':uri' => $options['uri']));
     if ($project = $result->fetchObject()) {
       $projects[$options['uri']] = $project;
       return $project;
@@ -585,7 +589,9 @@ function l10n_server_get_projects($options = array()) {
  */
 function l10n_server_get_project_initials() {
   // Grab the unique initials of all active projects
-  $result = db_query('SELECT DISTINCT(SUBSTR(title, 1, 1)) AS initial FROM {l10n_server_project} WHERE status = :status ORDER BY initial ASC', array(':status' => 1));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query('SELECT DISTINCT(SUBSTR(title, 1, 1)) AS initial FROM {l10n_server_project} WHERE status = :status ORDER BY initial ASC', array(':status' => 1));
 
   // Create an array of elements, all non-letters are grouped in '#'.
   $initials = array();
@@ -642,7 +648,9 @@ function l10n_server_get_releases($uri, $parsed_only = TRUE) {
   if ($parsed_only) {
     $query .= 'AND r.last_parsed > 0 ';
   }
-  $result = db_query($query, array(':uri' => $uri));
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $result = \Drupal::database()->query($query, array(':uri' => $uri));
   $releases = $result->fetchAllAssoc('rid');
   uasort($releases, '_l10n_server_version_compare');
   return $releases;
@@ -700,7 +708,7 @@ function l10n_server_split_connector($connector_module) {
 function l10n_server_parse_po($file, $string_callback, $callback_arguments) {
   include_once DRUPAL_ROOT . '/' . 'includes/locale.inc';
 
-  $fd = fopen(drupal_realpath($file->uri), "rb"); // File will get closed by PHP on return
+  $fd = fopen(\Drupal::service('file_system')->realpath($file->uri), "rb"); // File will get closed by PHP on return
   if (!$fd) {
     _locale_import_message('The Gettext file import failed, because the file %filename could not be read.', $file);
     return FALSE;
diff --git a/l10n_server/l10n_server.projects.inc b/l10n_server/l10n_server.projects.inc
index e55c39f..e348175 100644
--- a/l10n_server/l10n_server.projects.inc
+++ b/l10n_server/l10n_server.projects.inc
@@ -17,7 +17,7 @@ define('L10N_SERVER_ADMIN_PROJECTS_PER_PAGE', 30);
  */
 function l10n_server_admin_projects() {
   if (!$projects = l10n_server_get_projects(array('pager' => L10N_SERVER_ADMIN_PROJECTS_PER_PAGE, 'all' => TRUE))) {
-    drupal_set_message(t('No projects found.'), 'error');
+    \Drupal::messenger()->addError(t('No projects found.'));
     return '';
   }
   return drupal_get_form('l10n_server_admin_projects_form', $projects);
@@ -79,7 +79,7 @@ function l10n_server_admin_projects_form($form, &$form_state, $projects) {
  */
 function theme_l10n_server_admin_projects_form($variables) {
   $form = $variables['form'];
-  $output = ($pager = drupal_render($form['pager']));
+  $output = ($pager = \Drupal::service('renderer')->render($form['pager']));
   $table = array();
   foreach ($form['projects'] as $pid => &$project_element) {
     if (!is_int($pid)) {
@@ -87,12 +87,12 @@ function theme_l10n_server_admin_projects_form($variables) {
       continue;
     }
     $table[] = array(
-      drupal_render($project_element['status']),
-      drupal_render($project_element['title']),
-      drupal_render($project_element['edit']),
-      drupal_render($project_element['releases']),
-      drupal_render($project_element['reset']),
-      drupal_render($project_element['delete']),
+      \Drupal::service('renderer')->render($project_element['status']),
+      \Drupal::service('renderer')->render($project_element['title']),
+      \Drupal::service('renderer')->render($project_element['edit']),
+      \Drupal::service('renderer')->render($project_element['releases']),
+      \Drupal::service('renderer')->render($project_element['reset']),
+      \Drupal::service('renderer')->render($project_element['delete']),
     );
   }
   $headers = array(t('Enabled'), t('Project'), array(
@@ -104,7 +104,7 @@ function theme_l10n_server_admin_projects_form($variables) {
   $output .= drupal_render_children($form);
 
   if ($form['orphans']['#value']) {
-    drupal_set_message(format_plural($form['orphans']['#value'], 'There is @count source string orphaned.', 'There are @count source strings orphaned.') . ' ' . t('Deleting projects will not be available until you <a href="@cleanup">clean up the database</a> or rescan projects (within connectors you use) if you have started over with some of them.', array('@cleanup' => url('admin/l10n_server/projects/cleanup'))));
+    \Drupal::messenger()->addStatus(format_plural($form['orphans']['#value'], 'There is @count source string orphaned.', 'There are @count source strings orphaned.') . ' ' . t('Deleting projects will not be available until you <a href="@cleanup">clean up the database</a> or rescan projects (within connectors you use) if you have started over with some of them.', array('@cleanup' => url('admin/l10n_server/projects/cleanup'))));
   }
   return $output;
 }
@@ -115,14 +115,16 @@ function theme_l10n_server_admin_projects_form($variables) {
 function l10n_server_admin_projects_form_submit($form, &$form_state) {
   $disabled = array();
   foreach ($form_state['values']['projects'] as $pid => $project) {
-    db_update('l10n_server_project')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->update('l10n_server_project')
       ->fields(array(
           'status' => $project['status'],
         ))
       ->condition('pid', $pid)
       ->execute();
   }
-  drupal_set_message(t('Localization server project changes saved.'));
+  \Drupal::messenger()->addStatus(t('Localization server project changes saved.'));
 }
 
 // = Delete a project from the database ========================================
@@ -146,7 +148,7 @@ function l10n_server_admin_projects_delete($form, &$form_state, $project_uri) {
  */
 function l10n_server_admin_projects_delete_submit($form, &$form_state) {
   l10n_server_delete_project($form_state['values']['project']->pid);
-  drupal_set_message(t('The %project was deleted from the Localization server.', array('%project' => $form_state['values']['project']->title)));
+  \Drupal::messenger()->addStatus(t('The %project was deleted from the Localization server.', array('%project' => $form_state['values']['project']->title)));
   $form_state['redirect'] = 'admin/l10n_server/projects';
 }
 
@@ -171,7 +173,7 @@ function l10n_server_admin_projects_reset($form, &$form_state, $project_uri) {
  */
 function l10n_server_admin_projects_reset_submit($form, &$form_state) {
   l10n_server_delete_project($form_state['values']['project']->pid, TRUE);
-  drupal_set_message(t('Project data for %project was deleted from the Localization server. Make sure to parse releases for this project again before deleting a project or cleaning up the database, or you will loose existing translation data.', array('%project' => $form_state['values']['project']->title)));
+  \Drupal::messenger()->addStatus(t('Project data for %project was deleted from the Localization server. Make sure to parse releases for this project again before deleting a project or cleaning up the database, or you will loose existing translation data.', array('%project' => $form_state['values']['project']->title)));
   $form_state['redirect'] = 'admin/l10n_server/projects';
 }
 
@@ -184,7 +186,7 @@ function l10n_server_admin_releases($project_uri) {
   $project = l10n_server_get_projects(array('uri' => $project_uri));
   drupal_set_title(t('Releases of project @project', array('@project' => $project->title)), PASS_THROUGH);
   if (!$project_releases = l10n_server_get_releases($project_uri, FALSE)) {
-    drupal_set_message(t('No releases found for this project.'), 'error');
+    \Drupal::messenger()->addError(t('No releases found for this project.'));
     return '';
   }
   return drupal_get_form('l10n_server_admin_releases_form', $project, $project_releases);
@@ -213,13 +215,13 @@ function l10n_server_admin_releases_form($form, &$form_state, $project, $release
         '#markup' => (!empty($release->download_link) ? l(basename($release->download_link), $release->download_link) : t('none')),
       ),
       'file_date' => array(
-        '#markup' => (!empty($release->file_date) ? format_date($release->file_date) : t('n/a')),
+        '#markup' => (!empty($release->file_date) ? \Drupal::service('date.formatter')->format($release->file_date) : t('n/a')),
       ),
       'is_parsed' => array(
         '#markup' => (!empty($release->last_parsed) ? theme('image', array('path' => 'misc/watchdog-ok.png', 'width' => t('parsed'), 'height' => t('parsed'))) : ''),
       ),
       'last_parsed' => array(
-        '#markup' => (!empty($release->last_parsed) ? format_date($release->last_parsed) : t('n/a')),
+        '#markup' => (!empty($release->last_parsed) ? \Drupal::service('date.formatter')->format($release->last_parsed) : t('n/a')),
       ),
       'weight' => array(
         '#markup' => (!empty($release->weight) ? $release->weight : t('n/a')),
@@ -252,12 +254,12 @@ function theme_l10n_server_admin_releases_form($variables) {
       continue;
     }
     $row = array(
-      drupal_render($release_element['is_parsed']),
-      drupal_render($release_element['title']),
-      drupal_render($release_element['download_link']),
-      drupal_render($release_element['file_date']),
-      drupal_render($release_element['last_parsed']),
-      drupal_render($release_element['weight']),
+      \Drupal::service('renderer')->render($release_element['is_parsed']),
+      \Drupal::service('renderer')->render($release_element['title']),
+      \Drupal::service('renderer')->render($release_element['download_link']),
+      \Drupal::service('renderer')->render($release_element['file_date']),
+      \Drupal::service('renderer')->render($release_element['last_parsed']),
+      \Drupal::service('renderer')->render($release_element['weight']),
     );
     $max_operations = max($max_operations, count($release_element['operations']));
     foreach ($release_element['operations']['#markup'] as $operation) {
@@ -289,7 +291,7 @@ function l10n_server_admin_projects_cleanup() {
   if ($orphans = l10n_server_orphan_strings()) {
     return drupal_get_form('l10n_server_admin_projects_cleanup_form', $orphans);
   }
-  drupal_set_message(t('You have no orphan source strings in your database to clean up.'));
+  \Drupal::messenger()->addStatus(t('You have no orphan source strings in your database to clean up.'));
   return array();
 }
 
@@ -305,7 +307,7 @@ function l10n_server_admin_projects_cleanup_form($form, &$form_state, $orphans)
  */
 function l10n_server_admin_projects_cleanup_form_submit($form, &$form_state) {
   l10n_server_delete_orphans();
-  drupal_set_message(t('Orphan strings and their translations were removed.'));
+  \Drupal::messenger()->addStatus(t('Orphan strings and their translations were removed.'));
   $form_state['redirect'] = 'admin/l10n_server/projects';
 }
 
@@ -416,7 +418,7 @@ function l10n_server_admin_projects_edit_form_submit($form, &$form_state) {
   $new_project->weight = (int) $new_project->weight;
 
   drupal_write_record('l10n_server_project', $new_project, !empty($new_project->pid) ? 'pid' : array());
-  drupal_set_message(t('Project data saved.'));
+  \Drupal::messenger()->addStatus(t('Project data saved.'));
   $form_state['redirect'] = 'admin/l10n_server/projects';
 }
 
@@ -483,7 +485,9 @@ function l10n_server_admin_projects_release_edit_form($form, &$form_state, $proj
 function l10n_server_admin_projects_release_edit_form_validate($form, &$form_state) {
   if (empty($form_state['values']['previous_release']->rid)) {
     // Check that only no release with this name already exists.
-    $result = db_query("SELECT * FROM {l10n_server_release} WHERE title = :title AND pid = :pid", array(
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query("SELECT * FROM {l10n_server_release} WHERE title = :title AND pid = :pid", array(
       ':title' => $form_state['values']['title'],
       ':pid'   => $form_state['values']['project']->pid,
     ));
@@ -509,7 +513,7 @@ function l10n_server_admin_projects_release_edit_form_submit($form, &$form_state
   $new_release->weight = (int) $new_release->weight;
 
   drupal_write_record('l10n_server_release', $new_release, !empty($new_release->rid) ? 'rid' : array());
-  drupal_set_message(t('Release data saved.'));
+  \Drupal::messenger()->addStatus(t('Release data saved.'));
 
   // Save the new release for any successive form handlers
   // (such as an uploads source handler).
@@ -545,7 +549,7 @@ function l10n_server_admin_projects_release_delete($form, &$form_state, $project
  */
 function l10n_server_admin_projects_release_delete_submit($form, &$form_state) {
   l10n_server_delete_release($form_state['values']['release']->rid);
-  drupal_set_message(t('%project %release was deleted from the Localization server.', array('%project' => $form_state['values']['project']->title, '%release' => $form_state['values']['release']->title)));
+  \Drupal::messenger()->addStatus(t('%project %release was deleted from the Localization server.', array('%project' => $form_state['values']['project']->title, '%release' => $form_state['values']['release']->title)));
   $form_state['redirect'] = 'admin/l10n_server/projects/releases/' . $form_state['values']['project']->uri;
 }
 
@@ -576,7 +580,7 @@ function l10n_server_admin_projects_release_reset($form, &$form_state, $project_
  */
 function l10n_server_admin_projects_release_reset_submit($form, &$form_state) {
   l10n_server_delete_release($form_state['values']['release']->rid, TRUE);
-  drupal_set_message(t('Release data for %project %release was deleted from the Localization server. Make sure to parse this release data again before deleting a project or cleaning up the database, or you will loose existing translation data.', array('%project' => $form_state['values']['project']->title, '%release' => $form_state['values']['release']->title)));
+  \Drupal::messenger()->addStatus(t('Release data for %project %release was deleted from the Localization server. Make sure to parse this release data again before deleting a project or cleaning up the database, or you will loose existing translation data.', array('%project' => $form_state['values']['project']->title, '%release' => $form_state['values']['release']->title)));
   $form_state['redirect'] = 'admin/l10n_server/projects/releases/' . $form_state['values']['project']->uri;
 }
 
@@ -599,21 +603,33 @@ function l10n_server_admin_projects_release_reset_submit($form, &$form_state) {
 function l10n_server_delete_project($pid, $keep_strings_and_project = FALSE) {
 
   // Drop errors stored for releases of this project.
-  db_delete('l10n_server_error')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_error')
     ->where('rid IN (SELECT rid FROM {l10n_server_release} WHERE pid = :pid)', array(':pid' => $pid))
     ->execute();
 
   // Almost all other related data has the pid associated directly.
-  db_delete('l10n_server_line') ->condition('pid', $pid) ->execute();
-  db_delete('l10n_server_file') ->condition('pid', $pid) ->execute();
-  db_delete('l10n_server_release') ->condition('pid', $pid) ->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_line') ->condition('pid', $pid) ->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_file') ->condition('pid', $pid) ->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_release') ->condition('pid', $pid) ->execute();
 
   if (!$keep_strings_and_project) {
-    db_delete('l10n_server_project') ->condition('pid', $pid) ->execute();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->delete('l10n_server_project') ->condition('pid', $pid) ->execute();
     l10n_server_delete_orphans();
   }
   else {
-    db_update('l10n_server_project')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->update('l10n_server_project')
       ->fields(array('last_parsed' =>  0))
       ->condition('pid', $pid)
       ->execute();
@@ -625,13 +641,19 @@ function l10n_server_delete_project($pid, $keep_strings_and_project = FALSE) {
  */
 function l10n_server_delete_orphans() {
   // Drop all stale source strings, translations and status flags.
-  db_delete('l10n_server_string')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_string')
     ->where('sid NOT IN (SELECT sid FROM {l10n_server_line})')
     ->execute();
-  db_delete('l10n_server_translation')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_translation')
     ->where('sid NOT IN (SELECT sid FROM {l10n_server_line})')
     ->execute();
-  db_delete('l10n_server_status_flag')
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_status_flag')
     ->where('sid NOT IN (SELECT sid FROM {l10n_server_line})')
     ->execute();
 }
@@ -640,7 +662,9 @@ function l10n_server_delete_orphans() {
  * Detect the count of orphan strings in the database, if any.
  */
 function l10n_server_orphan_strings() {
-  return db_query('SELECT COUNT(*) FROM {l10n_server_string} s LEFT JOIN {l10n_server_line} l ON s.sid = l.sid WHERE l.sid IS NULL')->fetchField();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  return \Drupal::database()->query('SELECT COUNT(*) FROM {l10n_server_string} s LEFT JOIN {l10n_server_line} l ON s.sid = l.sid WHERE l.sid IS NULL')->fetchField();
 }
 
 /**
@@ -660,18 +684,28 @@ function l10n_server_orphan_strings() {
 function l10n_server_delete_release($rid, $keep_strings_and_release = FALSE) {
 
   // Drop errors stored for releases of this project.
-  db_delete('l10n_server_error') ->condition('rid', $rid) ->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_error') ->condition('rid', $rid) ->execute();
 
   // Almost all other related data has the rid associated directly.
-  db_delete('l10n_server_line') ->condition('rid', $rid) ->execute();
-  db_delete('l10n_server_file') ->condition('rid', $rid) ->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_line') ->condition('rid', $rid) ->execute();
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  \Drupal::database()->delete('l10n_server_file') ->condition('rid', $rid) ->execute();
 
   if (!$keep_strings_and_release) {
-    db_delete('l10n_server_release') ->condition('rid', $rid) ->execute();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->delete('l10n_server_release') ->condition('rid', $rid) ->execute();
     l10n_server_delete_orphans();
   }
   else {
-    db_update('l10n_server_release')
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    \Drupal::database()->update('l10n_server_release')
       ->fields(array('last_parsed' =>  0))
       ->condition('rid', $rid)
       ->execute();
diff --git a/l10n_server/tests/src/Kernel/L10nServerProjectUriUniqueTest.php b/l10n_server/tests/src/Kernel/L10nServerProjectUriUniqueTest.php
index 3efcb13..763c693 100644
--- a/l10n_server/tests/src/Kernel/L10nServerProjectUriUniqueTest.php
+++ b/l10n_server/tests/src/Kernel/L10nServerProjectUriUniqueTest.php
@@ -20,7 +20,7 @@ class L10nServerProjectUriUniqueTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('l10n_server_project');
   }
