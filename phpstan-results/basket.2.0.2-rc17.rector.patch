diff --git a/basket.install b/basket.install
index 53de264..ed5310c 100644
--- a/basket.install
+++ b/basket.install
@@ -645,7 +645,7 @@ function basket_update_8008() {
  */
 function basket_update_8009() {
   if (empty(\Drupal::service('Basket')->getSettings('templates', 'order_view_info'))) {
-    $ymlFile = drupal_get_path('module', 'basket') . '/config/install/basket.setting.templates.yml';
+    $ymlFile = \Drupal::service('extension.list.module')->getPath('basket') . '/config/install/basket.setting.templates.yml';
     if (file_exists($ymlFile)) {
       $ymlFile = Yaml::decode(file_get_contents($ymlFile));
       if (!empty($ymlFile['order_view_info'])) {
diff --git a/basket.module b/basket.module
index 6eef250..a48b3e9 100644
--- a/basket.module
+++ b/basket.module
@@ -71,7 +71,7 @@ function basket_theme() {
           'variables' => [
             'info'      => NULL,
           ],
-          'path'      => drupal_get_path('module', 'basket') . '/templates/' . $tplKey,
+          'path'      => \Drupal::service('extension.list.module')->getPath('basket') . '/templates/' . $tplKey,
         ];
       }
     }
@@ -436,7 +436,7 @@ function basket_preprocess_menu_local_tasks(&$vars) {
  */
 function basket_scss_compiler_import_paths_alter(array &$additional_import_paths) {
   if (!isset($additional_import_paths['basket_colors'])) {
-    $additional_import_paths['basket_colors'] = drupal_get_path('module', 'basket') . '/misc/scss';
+    $additional_import_paths['basket_colors'] = \Drupal::service('extension.list.module')->getPath('basket') . '/misc/scss';
   }
 }
 
diff --git a/src/Admin/Page/Blocks.php b/src/Admin/Page/Blocks.php
index d867ff2..163ba75 100644
--- a/src/Admin/Page/Blocks.php
+++ b/src/Admin/Page/Blocks.php
@@ -87,7 +87,7 @@ class Blocks {
    */
   public function deliverys() {
     $items = [];
-    $deliveryServices = Yaml::decode(file_get_contents(drupal_get_path('module', 'basket') . '/config/basket_install/deliverys.yml'));
+    $deliveryServices = Yaml::decode(file_get_contents(\Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/deliverys.yml'));
     $deliverySystems = \Drupal::service('BasketDelivery')->getDefinitions();
     if (!empty($deliveryServices)) {
       $onclick = 'basket_admin_ajax_link(this, \'' . Url::fromRoute('basket.admin.pages', ['page_type' => 'api-help'])->toString() . '\')';
diff --git a/src/Admin/Page/FreeAdditional.php b/src/Admin/Page/FreeAdditional.php
index d7c4c32..cd698ea 100644
--- a/src/Admin/Page/FreeAdditional.php
+++ b/src/Admin/Page/FreeAdditional.php
@@ -29,7 +29,7 @@ class FreeAdditional {
    */
   public function view() {
     $config = [];
-    $path = drupal_get_path('module', 'basket') . '/config/basket_install/additional.free.yml';
+    $path = \Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/additional.free.yml';
     if( file_exists($path) ) {
       $yml = file_get_contents($path);
       if (!empty($yml)) {
@@ -43,7 +43,7 @@ class FreeAdditional {
       'content'       => [
         '#theme'        => 'basket_admin_additional_free',
         '#info'         => $config + [
-          'image_path'  => drupal_get_path('module', 'basket') . '/misc/images/free/',
+          'image_path'  => \Drupal::service('extension.list.module')->getPath('basket') . '/misc/images/free/',
           'ico'         => $this->basket->getIco('help.svg', 'base'),
           'mail'        => Markup::create('<a href="mailto:'.$mail.'">'.$mail.'</a>'),
           'youtubeLink' => Markup::create('<a href="'.$config['youtube']['url'].'" target="_blank">'.$config['youtube']['name'].'</a>'),
diff --git a/src/Admin/Page/Templates.php b/src/Admin/Page/Templates.php
index 488807e..ce3dd82 100644
--- a/src/Admin/Page/Templates.php
+++ b/src/Admin/Page/Templates.php
@@ -116,7 +116,7 @@ class Templates {
   public function getTemplateYamls() {
     if (!isset($this->getTemplateYamls)) {
       $ymldata = [];
-      $templates_file = drupal_get_path('module', 'basket') . '/config/basket_install/Templates.yml';
+      $templates_file = \Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/Templates.yml';
       if (file_exists($templates_file)) {
         $ymldata = Yaml::decode(file_get_contents($templates_file));
         // subModules.
@@ -124,7 +124,7 @@ class Templates {
         \Drupal::moduleHandler()->alter('basket_translate_context', $subModules);
         if (!empty($subModules)) {
           foreach ($subModules as $subModule) {
-            $templatesSubFile = drupal_get_path('module', $subModule) . '/config/basket_install/Templates.yml';
+            $templatesSubFile = \Drupal::service('extension.list.module')->getPath($subModule) . '/config/basket_install/Templates.yml';
             if (file_exists($templatesSubFile)) {
               $ymlSubData = Yaml::decode(file_get_contents($templatesSubFile));
               if (!empty($ymlSubData)) {
diff --git a/src/Admin/Pages.php b/src/Admin/Pages.php
index 6e6bee0..91adc22 100644
--- a/src/Admin/Pages.php
+++ b/src/Admin/Pages.php
@@ -572,7 +572,7 @@ class Pages {
                         'class'     => ['status_' . $term->type . '_' . $_POST['orderID']],
                       ]
                     );
-                    $response->addCommand(new InvokeCommand('.status_' . $_POST['status_type'] . '_' . $_POST['orderID'], 'replaceWith', [render($new_html)]));
+                    $response->addCommand(new InvokeCommand('.status_' . $_POST['status_type'] . '_' . $_POST['orderID'], 'replaceWith', [\Drupal::service('renderer')->render($new_html)]));
                   }
                 }
                 if ($_POST['status_type'] == 'status') {
diff --git a/src/Basket.php b/src/Basket.php
index 08492a6..8f0afc4 100644
--- a/src/Basket.php
+++ b/src/Basket.php
@@ -229,7 +229,7 @@ class Basket {
     }
     if ($isUseBase) {
       if (!isset($this->getIco[$icoName])) {
-        $ico_url = drupal_get_path('module', $moduleName) . '/misc/images/' . $icoName;
+        $ico_url = \Drupal::service('extension.list.module')->getPath($moduleName) . '/misc/images/' . $icoName;
         $this->getIco[$icoName] = file_exists($ico_url) ? file_get_contents($ico_url) : NULL;
       }
       return $this->getIco[$icoName];
diff --git a/src/BasketExport.php b/src/BasketExport.php
index e3fb717..8d536d5 100644
--- a/src/BasketExport.php
+++ b/src/BasketExport.php
@@ -196,7 +196,7 @@ class BasketExport {
    * {@inheritdoc}
    */
   public function getTokenInfo() {
-    $info = drupal_get_path('module', 'basket') . '/config/basket_install/TwigExcelTokens.yml';
+    $info = \Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/TwigExcelTokens.yml';
     $tokens = Yaml::decode(file_get_contents($info));
     // Alter.
     $templateType = 'orders_export';
diff --git a/src/BasketInstall.php b/src/BasketInstall.php
index ae79575..fbe8bfe 100644
--- a/src/BasketInstall.php
+++ b/src/BasketInstall.php
@@ -25,7 +25,7 @@ class BasketInstall {
    * {@inheritdoc}
    */
   private function createList($file_name, $type) {
-    $file_path = drupal_get_path('module', 'basket') . '/config/basket_install/' . $file_name;
+    $file_path = \Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/' . $file_name;
     if (file_exists($file_path)) {
       $yml = file_get_contents($file_path);
       if (!empty($yml)) {
diff --git a/src/BasketTokens.php b/src/BasketTokens.php
index d5ebbc4..6ef6948 100644
--- a/src/BasketTokens.php
+++ b/src/BasketTokens.php
@@ -53,11 +53,11 @@ class BasketTokens {
           break;
 
         case'theme_path':
-          $this->getToken[$tokenName_] = $GLOBALS['base_url'] . '/' . drupal_get_path('theme', \Drupal::config('system.theme')->get('default'));
+          $this->getToken[$tokenName_] = $GLOBALS['base_url'] . '/' . \Drupal::service('extension.list.theme')->getPath(\Drupal::config('system.theme')->get('default'));
           break;
 
         case'basket_imgs':
-          $this->getToken[$tokenName_] = $GLOBALS['base_url'] . '/' . drupal_get_path('module', 'basket') . '/misc/images/mail';
+          $this->getToken[$tokenName_] = $GLOBALS['base_url'] . '/' . \Drupal::service('extension.list.module')->getPath('basket') . '/misc/images/mail';
           break;
 
         case'appearance_color':
diff --git a/src/BasketWaybill.php b/src/BasketWaybill.php
index 40f11ce..133b0af 100644
--- a/src/BasketWaybill.php
+++ b/src/BasketWaybill.php
@@ -106,7 +106,7 @@ class BasketWaybill {
       'tempDir'               => \Drupal::service('file_system')->realpath('temporary://'),
     ]);
     $mpdf->fontdata['Arial'] = [
-      'R'                     => drupal_get_path('module', 'basket') . '/misc/fonts/Arial.ttf',
+      'R'                     => \Drupal::service('extension.list.module')->getPath('basket') . '/misc/fonts/Arial.ttf',
     ];
     $mpdf->SetDefaultFont('Arial');
     // Set header.
diff --git a/src/Commands/BasketCommands.php b/src/Commands/BasketCommands.php
index 9f3a90b..bfa2529 100644
--- a/src/Commands/BasketCommands.php
+++ b/src/Commands/BasketCommands.php
@@ -29,7 +29,7 @@ class BasketCommands extends DrushCommands {
         \Drupal::logger('basket:po')->error($moduleName . '.info.yml not "project" info');
       }
       if (!empty($moduleInfo['project'])) {
-        $dir = realpath(drupal_get_path('module', $moduleName)) . '/translations/';
+        $dir = realpath(\Drupal::service('extension.list.module')->getPath($moduleName)) . '/translations/';
         if (is_dir($dir)) {
           \Drupal::service('file_system')->deleteRecursive($dir);
         }
@@ -121,7 +121,7 @@ class BasketCommands extends DrushCommands {
         \Drupal::logger('basket:po')->error($moduleName . '.info.yml not "project" info');
       }
       if (!empty($moduleInfo['project'])) {
-        $dir = drupal_get_path('module', $moduleName) . '/translations/';
+        $dir = \Drupal::service('extension.list.module')->getPath($moduleName) . '/translations/';
         if (is_dir($dir)) {
           \Drupal::moduleHandler()->loadInclude('locale', 'translation.inc');
           \Drupal::moduleHandler()->loadInclude('locale', 'bulk.inc');
@@ -161,7 +161,7 @@ class BasketCommands extends DrushCommands {
     }
     $items = [];
     // ---
-    $hooksFile = drupal_get_path('module', $moduleName) . '/config/basket_install/HOOKs.yml';
+    $hooksFile = \Drupal::service('extension.list.module')->getPath($moduleName) . '/config/basket_install/HOOKs.yml';
     if (file_exists($hooksFile)) {
       $ymldata = Yaml::decode(file_get_contents($hooksFile));
       foreach ($ymldata as $groupKey => $groupInfo) {
@@ -195,7 +195,7 @@ class BasketCommands extends DrushCommands {
       }
     }
     // ---
-    file_put_contents(drupal_get_path('module', $moduleName) . '/README.md', trim(implode(PHP_EOL, $items)));
+    file_put_contents(\Drupal::service('extension.list.module')->getPath($moduleName) . '/README.md', trim(implode(PHP_EOL, $items)));
   }
 
 }
diff --git a/src/Entity.php b/src/Entity.php
index a331c28..d4d251b 100644
--- a/src/Entity.php
+++ b/src/Entity.php
@@ -77,15 +77,15 @@ class Entity {
       'basket_delivery',
       'value',
     ]);
-    
+
     // Not Discount
     $_SESSION['payment_tid'] = $form_state->getValue('basket_payment');
     $GLOBALS['cartNotDiscount'] = $this->basket->getSettings('payment_not_discounts', $_SESSION['payment_tid']);
     $this->cart->reset();
-    
+
     // ---
     $cartItems = $this->cart->getItemsInBasket();
-    
+
     // ---
     $countGoods = 0;
     $bd_nids = [0];
diff --git a/src/Event/EventSubscriber.php b/src/Event/EventSubscriber.php
index ac29a10..334f8c9 100644
--- a/src/Event/EventSubscriber.php
+++ b/src/Event/EventSubscriber.php
@@ -23,7 +23,7 @@ class EventSubscriber implements EventSubscriberInterface {
   /**
    * {@inheritdoc}
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();
     if ($response instanceof ViewAjaxResponse) {
       $view = $response->getView();
