modules/contrib/term_level/src/Normalizer/TermLevelItemNormalizer.php
modules/contrib/term_level/src/Plugin/Field/FieldFormatter/TermLevelFormatter.php
modules/contrib/term_level/src/Plugin/Field/FieldType/TermLevelItem.php
modules/contrib/term_level/src/Plugin/Field/FieldWidget/TermLevelWidget.php
modules/contrib/term_level/tests/src/Functional/TermLevelFieldTest.php

1 file with changes
===================

1) modules/contrib/term_level/tests/src/Functional/TermLevelFieldTest.php:61

    ---------- begin diff ----------
@@ @@
    *
    * Prepare test user and test vocabulary with test terms.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create test CV content type.
@@ @@
       'label' => 'Test term level',
       'field_name' => 'test_term_level',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/curriculum_vitae/fields/add-field', $values, 'Save and continue');
+    $this->drupalGet('admin/structure/types/manage/curriculum_vitae/fields/add-field');
+    $this->submitForm($values, 'Save and continue');
     // Configure levels and cardinality.
     $values = [
       'cardinality' => FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED,
       'settings[levels]' => $this->buildLevelsValue(),
     ];
-    $this->drupalPostForm('admin/structure/types/manage/curriculum_vitae/fields/node.curriculum_vitae.field_test_term_level/storage', $values, 'Save field settings');
+    $this->drupalGet('admin/structure/types/manage/curriculum_vitae/fields/node.curriculum_vitae.field_test_term_level/storage');
+    $this->submitForm($values, 'Save field settings');
     // Configure referenced vocabulary.
     $this->drupalGet('admin/structure/types/manage/curriculum_vitae/fields/node.curriculum_vitae.field_term_level');
     $vocabulary_id = $this->vocabulary->id();
@@ @@
       'settings[handler]' => 'default:taxonomy_term',
       'settings[handler_settings][target_bundles][' . $vocabulary_id . ']' => $vocabulary_id,
     ];
-    $this->drupalPostForm('admin/structure/types/manage/curriculum_vitae/fields/node.curriculum_vitae.field_test_term_level', $values, 'Save settings');
+    $this->drupalGet('admin/structure/types/manage/curriculum_vitae/fields/node.curriculum_vitae.field_test_term_level');
+    $this->submitForm($values, 'Save settings');
     // Display the term level field on the node view.
     $values = [
       'fields[field_test_term_level][weight]' => '0',
@@ @@
       'fields[field_test_term_level][label]' => 'above',
       'fields[field_test_term_level][type]' => 'term_level_formatter',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/curriculum_vitae/display', $values, 'Save');
+    $this->drupalGet('admin/structure/types/manage/curriculum_vitae/display');
+    $this->submitForm($values, 'Save');
     // Test term level form element to contain expected options.
     $this->drupalGet('node/add/curriculum_vitae');
     $assert_session = $this->assertSession();
@@ @@
     // Create the CV test node with term level field.
     $this->drupalGet('node/add/curriculum_vitae');
     // Add two more term level field items.
-    $this->drupalPostForm(NULL, [], 'Add another item');
-    $this->drupalPostForm(NULL, [], 'Add another item');
+    $this->submitForm([], 'Add another item');
+    $this->submitForm([], 'Add another item');
     // Create test test CV node.
     $values = [
       'title[0][value]' => 'Test CV',
@@ @@
       'field_test_term_level[2][level]' => '6',
       'field_test_term_level[2][_weight]' => '2',
     ];
-    $this->drupalPostForm(NULL, $values, 'Save');
+    $this->submitForm($values, 'Save');
     // Test the term level is properly shown with expected values.
     $term_level_element = $assert_session->elementExists('css', '.field--name-field-test-term-level');
     $term_level_element_text = $term_level_element->getText();
-    $this->assertContains('Nginx : n/a', $term_level_element_text);
-    $this->assertContains('Drupal 8 : Expert', $term_level_element_text);
-    $this->assertContains('Javascript : Intermediate', $term_level_element_text);
+    $this->assertStringContainsString('Nginx : n/a', $term_level_element_text);
+    $this->assertStringContainsString('Drupal 8 : Expert', $term_level_element_text);
+    $this->assertStringContainsString('Javascript : Intermediate', $term_level_element_text);
   }

 }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

