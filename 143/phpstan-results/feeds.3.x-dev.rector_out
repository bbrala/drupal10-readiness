modules/contrib/feeds/feeds.install
modules/contrib/feeds/src/Annotation/FeedsBase.php
modules/contrib/feeds/src/EntityFinderInterface.php
modules/contrib/feeds/src/Exception/LockException.php
modules/contrib/feeds/src/Feeds/Item/SyndicationItem.php
modules/contrib/feeds/src/FeedTypeListBuilder.php
modules/contrib/feeds/src/Feeds/Target/DateRange.php
modules/contrib/feeds/src/Annotation/FeedsCustomSource.php
modules/contrib/feeds/src/Annotation/FeedsFetcher.php
modules/contrib/feeds/src/Annotation/FeedsParser.php
modules/contrib/feeds/src/Annotation/FeedsProcessor.php
modules/contrib/feeds/src/Annotation/FeedsSource.php
modules/contrib/feeds/src/Annotation/FeedsTarget.php
modules/contrib/feeds/src/Commands/FeedsDrushCommands.php
modules/contrib/feeds/src/Event/CleanEvent.php
modules/contrib/feeds/src/Feeds/Target/UserRole.php
modules/contrib/feeds/src/Feeds/Parser/CsvParser.php
modules/contrib/feeds/src/Event/ClearEvent.php
modules/contrib/feeds/src/Event/DeleteFeedsEvent.php
modules/contrib/feeds/src/Form/FeedScheduleImportForm.php
modules/contrib/feeds/src/Event/EntityEvent.php
modules/contrib/feeds/src/Plugin/Field/FieldFormatter/FeedsUriLinkFormatter.php
modules/contrib/feeds/src/Exception/MissingTargetException.php
modules/contrib/feeds/src/Exception/NotModifiedException.php
modules/contrib/feeds/src/Exception/ReferenceNotFoundException.php
modules/contrib/feeds/src/Exception/SkipItemException.php
modules/contrib/feeds/src/Exception/TargetValidationException.php
modules/contrib/feeds/src/Exception/ValidationException.php
modules/contrib/feeds/src/Plugin/Type/Parser/ParserInterface.php
modules/contrib/feeds/src/Event/EventBase.php
modules/contrib/feeds/src/Event/EventDispatcherTrait.php
modules/contrib/feeds/src/Event/ExpireEvent.php
modules/contrib/feeds/src/Event/FeedsEvents.php
modules/contrib/feeds/src/Event/FetchEvent.php
modules/contrib/feeds/src/Event/ImportFinishedEvent.php
modules/contrib/feeds/src/Event/InitEvent.php
modules/contrib/feeds/src/SubscriptionInterface.php
modules/contrib/feeds/src/Event/ParseEvent.php
modules/contrib/feeds/tests/modules/feeds_test_alter_source/src/EventSubscriber/CsvFeed.php
modules/contrib/feeds/tests/src/Functional/Commands/FeedsDrushCommandsTest.php
modules/contrib/feeds/tests/modules/feeds_test_multiple_cron_runs/src/EventSubscriber/FeedSubscriber.php
modules/contrib/feeds/src/Event/ProcessEvent.php
modules/contrib/feeds/tests/src/Functional/Form/MappingFormTest.php
modules/contrib/feeds/src/EventSubscriber/AfterParseBase.php
modules/contrib/feeds/src/Feeds/Target/DateTargetBase.php
modules/contrib/feeds/src/FeedAccessControlHandler.php
modules/contrib/feeds/src/Plugin/Type/PluginBase.php
modules/contrib/feeds/src/FeedClearHandler.php
modules/contrib/feeds/src/EventSubscriber/LazySubscriber.php
modules/contrib/feeds/src/TargetDefinition.php
modules/contrib/feeds/feeds.module
modules/contrib/feeds/src/Feeds/Target/DateTime.php
modules/contrib/feeds/src/FeedExpireHandler.php
modules/contrib/feeds/src/TargetDefinitionInterface.php
modules/contrib/feeds/src/Feeds/Target/Email.php
modules/contrib/feeds/src/Utility/Feed.php
modules/contrib/feeds/src/FeedForm.php
modules/contrib/feeds/src/Feeds/Parser/Form/CsvParserFeedForm.php
modules/contrib/feeds/src/Form/FeedTypeDeleteForm.php
modules/contrib/feeds/src/Plugin/Type/Processor/EntityProcessorInterface.php
modules/contrib/feeds/src/Feeds/Parser/Form/CsvParserForm.php
modules/contrib/feeds/src/Plugin/Type/Processor/ProcessorInterface.php
modules/contrib/feeds/src/Feeds/Parser/OpmlParser.php
modules/contrib/feeds/src/Form/FeedUnlockForm.php
modules/contrib/feeds/src/Plugin/Type/Source/SourceBase.php
modules/contrib/feeds/src/Plugin/Type/Source/SourceInterface.php
modules/contrib/feeds/src/FeedViewBuilder.php
modules/contrib/feeds/src/Plugin/Type/Target/ConfigurableTargetInterface.php
modules/contrib/feeds/src/Plugin/Type/Target/FieldTargetBase.php
modules/contrib/feeds/src/Feeds/Target/EntityReference.php
modules/contrib/feeds/src/EventSubscriber/PubSubHubbub.php
modules/contrib/feeds/src/Form/MappingForm.php
modules/contrib/feeds/src/FeedViewsData.php
modules/contrib/feeds/src/Component/CsvParser.php
modules/contrib/feeds/src/Feeds/CustomSource/BlankSource.php
modules/contrib/feeds/src/Feeds/CustomSource/CsvSource.php
modules/contrib/feeds/src/Feeds/Parser/ParserBase.php
modules/contrib/feeds/src/Plugin/Field/FieldType/FeedsItem.php
modules/contrib/feeds/src/Feeds/FeedsSingleLazyPluginCollection.php
modules/contrib/feeds/tests/modules/feeds_test_plugin/src/Feeds/CustomSource/FooSource.php
modules/contrib/feeds/src/Feeds/Parser/SitemapParser.php
modules/contrib/feeds/src/Feeds/Fetcher/DirectoryFetcher.php
modules/contrib/feeds/src/Utility/File.php
modules/contrib/feeds/src/Zend/Extension/Georss/Entry.php
modules/contrib/feeds/tests/bootstrap.php
modules/contrib/feeds/tests/fixtures/feed_type.deprecated-action-ids.php
modules/contrib/feeds/tests/modules/feeds_test_plugin/src/Feeds/Parser/ParserWithFooSource.php
modules/contrib/feeds/tests/fixtures/feeds-8.x-3.0-alpha11/feed_type.custom-sources-without-type.php
modules/contrib/feeds/src/Component/GenericOpmlParser.php
modules/contrib/feeds/tests/modules/feeds_test_alter_source/src/EventSubscriber/UserFeed.php
modules/contrib/feeds/tests/fixtures/feeds-8.x-3.0-alpha6-feeds_installed.php
modules/contrib/feeds/tests/modules/feeds_test_plugin/src/Feeds/Parser/ParserWithMappingForm.php
modules/contrib/feeds/feeds.post_update.php
modules/contrib/feeds/src/Feeds/Parser/SyndicationParser.php
modules/contrib/feeds/tests/modules/feeds_test_entity/feeds_test_entity.module
modules/contrib/feeds/tests/modules/feeds_test_plugin/src/Feeds/Processor/EntityTestProcessor.php
modules/contrib/feeds/src/Feeds/Fetcher/Form/DirectoryFetcherFeedForm.php
modules/contrib/feeds/tests/src/Kernel/DependencyTest.php
modules/contrib/feeds/tests/modules/feeds_test_entity/src/Entity/EntityTestNoLinks.php
modules/contrib/feeds/src/Component/HttpHelpers.php
modules/contrib/feeds/tests/modules/feeds_test_events/src/EventSubscriber/FeedsSubscriber.php
modules/contrib/feeds/src/Feeds/Fetcher/Form/DirectoryFetcherForm.php
modules/contrib/feeds/src/Exception/EmptyFeedException.php
modules/contrib/feeds/src/Exception/EntityAccessException.php
modules/contrib/feeds/src/Exception/FeedsRuntimeException.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/TranslationTest.php
modules/contrib/feeds/src/Plugin/Field/FieldType/FeedsItemList.php
modules/contrib/feeds/src/Component/XmlParserTrait.php
modules/contrib/feeds/feeds.theme.inc
modules/contrib/feeds/src/Controller/CustomSourceListController.php
modules/contrib/feeds/src/Feeds/Fetcher/Form/HttpFetcherFeedForm.php
modules/contrib/feeds/tests/modules/feeds_test_extra_sources/src/EventSubscriber/MyFeed.php
modules/contrib/feeds/src/Plugin/PluginAwareInterface.php
modules/contrib/feeds/src/Plugin/PluginFormFactory.php
modules/contrib/feeds/src/Access/FeedAddAccessCheck.php
modules/contrib/feeds/tests/modules/feeds_test_extra_sources/src/Feeds/Source/SiteSource.php
modules/contrib/feeds/src/FeedHandlerBase.php
modules/contrib/feeds/src/FeedImportHandler.php
modules/contrib/feeds/src/Feeds/Fetcher/Form/HttpFetcherForm.php
modules/contrib/feeds/src/Plugin/Type/Target/TargetBase.php
modules/contrib/feeds/tests/modules/feeds_test_files/src/Controller/CsvController.php
modules/contrib/feeds/src/FeedsBatchBase.php
modules/contrib/feeds/src/FeedsBatchBatch.php
modules/contrib/feeds/src/Feeds/Fetcher/Form/UploadFetcherFeedForm.php
modules/contrib/feeds/tests/src/Kernel/Entity/FeedTest.php
modules/contrib/feeds/src/Plugin/QueueWorker/FeedQueueWorkerBase.php
modules/contrib/feeds/src/Plugin/Type/Target/TargetInterface.php
modules/contrib/feeds/src/Plugin/Type/Target/TranslatableTargetInterface.php
modules/contrib/feeds/src/Result/FetcherResult.php
modules/contrib/feeds/src/FeedInterface.php
modules/contrib/feeds/src/FeedsBatchExecutable.php
modules/contrib/feeds/src/FeedsBatchInterface.php
modules/contrib/feeds/src/FeedsDirectBatch.php
modules/contrib/feeds/src/FeedListBuilder.php
modules/contrib/feeds/src/FeedsExecutable.php
modules/contrib/feeds/tests/fixtures/feeds-8.x-3.0-beta1-feeds_installed.php
modules/contrib/feeds/src/Result/FetcherResultInterface.php
modules/contrib/feeds/src/Result/HttpFetcherResult.php
modules/contrib/feeds/src/Plugin/QueueWorker/FeedRefresh.php
modules/contrib/feeds/src/Ajax/SetHashCommand.php
modules/contrib/feeds/src/Controller/ItemListController.php
modules/contrib/feeds/tests/src/Unit/Component/HttpHelpersTest.php
modules/contrib/feeds/src/Feeds/Target/FeedsItem.php
modules/contrib/feeds/src/Result/HttpFetcherResultInterface.php
modules/contrib/feeds/src/Result/ParserResult.php
modules/contrib/feeds/src/Feeds/Fetcher/Form/UploadFetcherForm.php
modules/contrib/feeds/tests/src/Unit/Component/XmlParserTraitTest.php
modules/contrib/feeds/tests/src/Functional/Plugin/Action/DeleteFeedTest.php
modules/contrib/feeds/src/Result/ParserResultInterface.php
modules/contrib/feeds/src/Result/RawFetcherResult.php
modules/contrib/feeds/src/Feeds/Target/File.php
modules/contrib/feeds/tests/src/Unit/Controller/SubscriptionControllerTest.php
modules/contrib/feeds/src/Plugin/Type/CleanableInterface.php
modules/contrib/feeds/src/State.php
modules/contrib/feeds/src/Plugin/Type/ClearableInterface.php
modules/contrib/feeds/src/Plugin/Type/ConfigurablePluginTrait.php
modules/contrib/feeds/src/Plugin/Type/CustomSource/CustomSourceBase.php
modules/contrib/feeds/src/FeedsExecutableInterface.php
modules/contrib/feeds/tests/modules/feeds_test_multiple_cron_runs/feeds_test_multiple_cron_runs.module
modules/contrib/feeds/src/Feeds/Fetcher/HttpFetcher.php
modules/contrib/feeds/src/FeedsItemInterface.php
modules/contrib/feeds/src/Plugin/Type/CustomSource/CustomSourceInterface.php
modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/DirectoryFetcherTest.php
modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemFormatterTestBase.php
modules/contrib/feeds/src/Plugin/Type/ExternalPluginFormBase.php
modules/contrib/feeds/src/FeedsItemListInterface.php
modules/contrib/feeds/src/FeedsPermissions.php
modules/contrib/feeds/src/StateInterface.php
modules/contrib/feeds/src/Plugin/Type/ExternalPluginFormInterface.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/ConfigEntityReferenceTestBase.php
modules/contrib/feeds/src/Plugin/Type/FeedsAnnotationFactory.php
modules/contrib/feeds/src/Feeds/Processor/EntityProcessorBase.php
modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemGuidFormatterTest.php
modules/contrib/feeds/src/FeedStorage.php
modules/contrib/feeds/src/Controller/SubscriptionController.php
modules/contrib/feeds/src/FeedsQueueBatch.php
modules/contrib/feeds/src/Plugin/Type/FeedsPluginInterface.php
modules/contrib/feeds/src/Plugin/Type/FeedsPluginManager.php
modules/contrib/feeds/src/FeedsQueueExecutable.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/DateRangeTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/UriTest.php
modules/contrib/feeds/src/FieldTargetDefinition.php
modules/contrib/feeds/tests/src/Functional/Controller/CustomSourceListControllerTest.php
modules/contrib/feeds/src/Plugin/Type/Fetcher/FetcherInterface.php
modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemImportedFormatterTest.php
modules/contrib/feeds/src/Plugin/Type/LockableInterface.php
modules/contrib/feeds/src/Plugin/Type/MappingPluginFormInterface.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/UserRoleTest.php
modules/contrib/feeds/src/Form/CustomSourceDeleteForm.php
modules/contrib/feeds/src/Feeds/Fetcher/UploadFetcher.php
modules/contrib/feeds/src/FeedStorageInterface.php
modules/contrib/feeds/src/FeedTypeAccessControlHandler.php
modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemTargetEntityFormatterTest.php
modules/contrib/feeds/src/Form/CustomSourceEditForm.php
modules/contrib/feeds/src/FeedTypeForm.php
modules/contrib/feeds/src/Feeds/Item/BaseItem.php
modules/contrib/feeds/src/Feeds/Item/DynamicItem.php
modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemTargetIdFormatterTest.php
modules/contrib/feeds/src/Feeds/Item/ItemInterface.php
modules/contrib/feeds/src/Feeds/Item/OpmlItem.php
modules/contrib/feeds/src/Feeds/Item/SitemapItem.php
modules/contrib/feeds/src/Form/DeleteMultiple.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/DateTimeTest.php
modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemTargetLabelFormatterTest.php
modules/contrib/feeds/src/Element/Uri.php
modules/contrib/feeds/tests/src/Functional/Controller/ItemListControllerTest.php
modules/contrib/feeds/src/Feeds/Target/Image.php
modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/Form/DirectoryFetcherFeedFormTest.php
modules/contrib/feeds/tests/src/Functional/CronTest.php
modules/contrib/feeds/src/Feeds/Target/Integer.php
modules/contrib/feeds/src/Feeds/Target/Language.php
modules/contrib/feeds/src/Form/FeedClearForm.php
modules/contrib/feeds/src/Laminas/Extension/Georss/Entry.php
modules/contrib/feeds/src/Feeds/Target/Link.php
modules/contrib/feeds/src/Feeds/Target/Number.php
modules/contrib/feeds/src/Form/FeedDeleteForm.php
modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemUrlFormatterTest.php
modules/contrib/feeds/src/Feeds/Target/Password.php
modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/Form/DirectoryFetcherFormTest.php
modules/contrib/feeds/src/Form/FeedImportForm.php
modules/contrib/feeds/tests/src/Functional/PrivateFileTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/EmailTest.php
modules/contrib/feeds/src/Entity/Feed.php
modules/contrib/feeds/src/Laminas/Extension/Mediarss/Entry.php
modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/Form/HttpFetcherFormTest.php
modules/contrib/feeds/src/Feeds/Target/Path.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/EntityReferenceTest.php
modules/contrib/feeds/src/Feeds/Target/StringTarget.php
modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/Form/UploadFetcherFeedFormTest.php
modules/contrib/feeds/src/Feeds/Target/Telephone.php
modules/contrib/feeds/src/Feeds/Target/Temporary.php
modules/contrib/feeds/src/MissingTargetDefinition.php
modules/contrib/feeds/tests/src/Unit/FeedsExecutableTest.php
modules/contrib/feeds/src/Plugin/Action/DeleteFeed.php
modules/contrib/feeds/src/Feeds/Target/Text.php
modules/contrib/feeds/src/Plugin/DependentWithRemovalPluginInterface.php
modules/contrib/feeds/src/Plugin/Derivative/ExtraLinks.php
modules/contrib/feeds/src/Feeds/Target/Timestamp.php
modules/contrib/feeds/src/Feeds/Target/Uri.php
modules/contrib/feeds/tests/src/Unit/Element/UriTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/Form/UploadFetcherFormTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/EntityReferenceTestBase.php
modules/contrib/feeds/src/Plugin/Derivative/FeedQueueWorker.php
modules/contrib/feeds/tests/src/Functional/QueueTest.php
modules/contrib/feeds/src/Plugin/Derivative/GenericContentEntityProcessor.php
modules/contrib/feeds/src/FeedTypeInterface.php
modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/HttpFetcherTest.php
modules/contrib/feeds/src/Plugin/Discovery/OverridableDerivativeDiscoveryDecorator.php
modules/contrib/feeds/tests/src/Unit/Entity/FeedTypeTest.php
modules/contrib/feeds/src/Plugin/Field/FieldFormatter/FeedsItemFormatterBase.php
modules/contrib/feeds/src/Plugin/Field/FieldFormatter/FeedsItemGuidFormatter.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/FeedsItemTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/FieldTargetTestBase.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/FieldTargetWithContainerTestBase.php
modules/contrib/feeds/tests/src/Functional/ExpireTest.php
modules/contrib/feeds/src/Plugin/Field/FieldFormatter/FeedsItemImportedFormatter.php
modules/contrib/feeds/src/Plugin/Field/FieldFormatter/FeedsItemTargetEntityFormatter.php
modules/contrib/feeds/src/Plugin/Field/FieldFormatter/FeedsItemTargetIdFormatter.php
modules/contrib/feeds/src/Plugin/Field/FieldFormatter/FeedsItemTargetLabelFormatter.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/UserRoleTest.php
modules/contrib/feeds/src/Plugin/Field/FieldFormatter/FeedsItemUrlFormatter.php
modules/contrib/feeds/tests/src/Functional/Update/UpdateCustomSourcesUpdateTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/FileTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/UploadFetcherTest.php
modules/contrib/feeds/tests/src/Functional/Update/UpdateFeedsItemFieldsCardinalityUpdateTest.php
modules/contrib/feeds/tests/src/Unit/FeedsUnitTestCase.php
modules/contrib/feeds/tests/src/Kernel/EntityIdTest.php
modules/contrib/feeds/tests/src/Unit/FieldTargetDefinitionTest.php
modules/contrib/feeds/tests/src/Functional/Update/UpdateNonExistentActionUpdateTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/ImageTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Item/BaseItemTest.php
modules/contrib/feeds/tests/src/Functional/UpdateExistingTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/IntegerTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Item/DynamicItemTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Item/ItemTestBase.php
modules/contrib/feeds/tests/src/Unit/EntityFinderTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/LinkTest.php
modules/contrib/feeds/tests/src/Functional/FeedDeleteTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Fetcher/DirectoryFetcherTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Parser/CsvParserTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/NumberTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Parser/CsvParserTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/PasswordTest.php
modules/contrib/feeds/tests/src/Functional/FeedListBuilderOwnTest.php
modules/contrib/feeds/tests/src/Functional/UpdateNonExistentTest.php
modules/contrib/feeds/tests/src/Unit/Laminas/Extension/Georss/EntryTest.php
modules/contrib/feeds/tests/src/Unit/Plugin/QueueWorker/FeedQueueWorkerBaseTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/PathTest.php
modules/contrib/feeds/tests/src/Unit/Plugin/QueueWorker/FeedRefreshTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Processor/EntityProcessorBaseTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/StringTargetTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/TelephoneTest.php
modules/contrib/feeds/tests/src/Unit/Event/DeleteFeedsEventTest.php
modules/contrib/feeds/tests/src/Unit/Event/EventBaseTest.php
modules/contrib/feeds/tests/src/Unit/Event/EventDispatcherTraitTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/TextTest.php
modules/contrib/feeds/tests/src/Unit/Event/FetchEventTest.php
modules/contrib/feeds/tests/src/Kernel/FeedsEventsTest.php
modules/contrib/feeds/tests/src/Unit/Event/ParseEventTest.php
modules/contrib/feeds/tests/src/Unit/Event/ProcessEventTest.php
modules/contrib/feeds/tests/src/Unit/EventSubscriber/AfterParseBaseTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Parser/Form/CsvParserFeedFormTest.php
modules/contrib/feeds/src/Entity/FeedType.php
modules/contrib/feeds/tests/src/Unit/Feeds/Parser/Form/CsvParserFormTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Parser/OpmlParserTest.php
modules/contrib/feeds/tests/src/Kernel/FeedsItemTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/TimestampTest.php
modules/contrib/feeds/src/Feeds/Processor/Form/DefaultEntityProcessorForm.php
modules/contrib/feeds/tests/src/Unit/EventSubscriber/LazySubscriberTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Parser/SitemapParserTest.php
modules/contrib/feeds/tests/src/FunctionalJavascript/Feeds/Parser/CsvParserTest.php
modules/contrib/feeds/tests/src/Kernel/FeedsKernelTestBase.php
modules/contrib/feeds/tests/src/Unit/Result/FetcherResultTest.php
modules/contrib/feeds/tests/src/Functional/FeedListBuilderTest.php
modules/contrib/feeds/tests/src/Unit/Result/ParserResultTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Parser/SyndicationParserTest.php
modules/contrib/feeds/tests/src/FunctionalJavascript/Feeds/Parser/ParserTestBase.php
modules/contrib/feeds/tests/src/FunctionalJavascript/FeedsJavascriptTestBase.php
modules/contrib/feeds/tests/src/Kernel/HashTest.php
modules/contrib/feeds/tests/src/Unit/Result/RawFetcherResultTest.php
modules/contrib/feeds/src/Feeds/Processor/Form/EntityProcessorOptionForm.php
modules/contrib/feeds/src/Feeds/Processor/GenericContentEntityProcessor.php
modules/contrib/feeds/src/Feeds/Processor/NodeProcessor.php
modules/contrib/feeds/src/Feeds/Processor/ProcessorBase.php
modules/contrib/feeds/tests/src/Unit/StateTest.php
modules/contrib/feeds/tests/src/Unit/TargetDefinitionTest.php
modules/contrib/feeds/src/Entity/Subscription.php
modules/contrib/feeds/src/Feeds/Source/BasicFieldSource.php
modules/contrib/feeds/tests/src/Kernel/MultiFeedTest.php
modules/contrib/feeds/src/Feeds/State/CleanState.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Processor/GenericContentEntityProcessorTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/BookTest.php
modules/contrib/feeds/tests/src/Unit/FeedAccessControlHandlerTest.php
modules/contrib/feeds/tests/src/Functional/FeedTypeListBuilderTest.php
modules/contrib/feeds/tests/src/Kernel/MultiMappingTest.php
modules/contrib/feeds/src/EntityFinder.php
modules/contrib/feeds/src/Feeds/State/CleanStateInterface.php
modules/contrib/feeds/src/Feeds/Target/Book.php
modules/contrib/feeds/tests/src/Functional/FeedTypeTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Source/BasicFieldSourceTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/BookTest.php
modules/contrib/feeds/tests/src/Functional/Feeds/Fetcher/HttpFetcherTest.php
modules/contrib/feeds/tests/src/Kernel/Plugin/Derivative/GenericContentEntityProcessorTest.php
modules/contrib/feeds/tests/src/Kernel/SkipNewTest.php
modules/contrib/feeds/tests/src/Unit/FeedClearHandlerTest.php
modules/contrib/feeds/src/Feeds/Target/Boolean.php
modules/contrib/feeds/tests/src/FunctionalJavascript/Form/MappingFormTest.php
modules/contrib/feeds/src/Feeds/Target/ConfigEntityReference.php
modules/contrib/feeds/tests/src/Unit/FeedExpireHandlerTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/BooleanTest.php
modules/contrib/feeds/tests/src/Functional/Feeds/Fetcher/UploadFetcherTest.php
modules/contrib/feeds/tests/src/Unit/Feeds/Target/ConfigEntityReferenceTest.php
modules/contrib/feeds/tests/src/Kernel/SourcePluginsTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/ConfigEntityReferenceTest.php
modules/contrib/feeds/tests/src/Functional/Feeds/Parser/Form/CsvParserFeedFormTest.php
modules/contrib/feeds/tests/src/Functional/Feeds/Target/FileTest.php
modules/contrib/feeds/tests/src/Functional/Feeds/Target/PasswordTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/EntityReferenceTest.php
modules/contrib/feeds/tests/src/Unit/FeedHandlerBaseTest.php
modules/contrib/feeds/tests/src/Unit/FeedImportHandlerTest.php
modules/contrib/feeds/tests/src/Kernel/TestLogger.php
modules/contrib/feeds/tests/src/Kernel/UpdateExistingTest.php
modules/contrib/feeds/tests/src/Functional/FeedsBrowserTestBase.php
modules/contrib/feeds/tests/src/Functional/FeedsInstallTest.php
modules/contrib/feeds/tests/src/Functional/FeedsUninstallTest.php
modules/contrib/feeds/tests/src/Kernel/UpdateNonExistentTest.php
modules/contrib/feeds/tests/src/Unit/FeedTypeAccessControlHandlerTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/FieldTest.php
modules/contrib/feeds/tests/src/Traits/FeedCreationTrait.php
modules/contrib/feeds/tests/src/Traits/FeedsCommonTrait.php
modules/contrib/feeds/tests/src/Functional/FieldValidationTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/FileTest.php
modules/contrib/feeds/tests/src/Functional/Form/CustomSourceEditFormTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/FileTestBase.php
modules/contrib/feeds/tests/src/Traits/FeedsMockingTrait.php
modules/contrib/feeds/tests/src/Traits/FeedsReflectionTrait.php
modules/contrib/feeds/tests/src/Unit/Component/CsvParserTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/ImageTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/LanguageTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/LinkTest.php
modules/contrib/feeds/tests/src/Unit/Component/GenericOpmlParserTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/PathTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/TemporaryTest.php
modules/contrib/feeds/tests/src/Kernel/Feeds/Target/TimestampTest.php

99 files with changes
=====================

1) modules/contrib/feeds/src/Event/EventDispatcherTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\feeds\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;

 /**
@@ @@
    *
    * @param string $event_name
    *   The name of the event.
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The event to dispatch.
    *
-   * @return \Symfony\Component\EventDispatcher\Event
+   * @return \Symfony\Contracts\EventDispatcher\Event
    *   The invoked event.
    */
   protected function dispatchEvent($event_name, Event $event = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/feeds/src/Event/EventBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\feeds\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\feeds\FeedInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Helper class for events that need a feed.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/feeds/src/Event/DeleteFeedsEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\feeds\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Fired when one or more feeds is being deleted.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/feeds/tests/modules/feeds_test_files/src/Controller/CsvController.php:167

    ---------- begin diff ----------
@@ @@
   protected function getModulePath(string $module_name): string {
     // @todo Remove drupal_get_path() when Drupal 9.2 is no longer supported.
     if ($this->extensionList == NULL) {
-      return drupal_get_path('module', $module_name);
+      return \Drupal::service('extension.list.module')->getPath($module_name);
     }

     return $this->extensionList->getPath($module_name);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/feeds/src/Feeds/Target/File.php:380

    ---------- begin diff ----------
@@ @@
   protected function writeData($data, $destination = NULL, $replace = FileSystemInterface::EXISTS_RENAME) {
     // @todo Remove file_save_data() when Drupal 9.2 is no longer supported.
     if (!\Drupal::hasService('file.repository')) {
-      return file_save_data($data, $destination, $replace);
+      return \Drupal::service('file.repository')->writeData($data, $destination, $replace);
     }

     if (empty($destination)) {
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/feeds/tests/src/Unit/Feeds/Target/TextTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Target;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
  */
 class TextTest extends FieldTargetTestBase {

+  use ProphecyTrait;
   /**
    * The FeedsTarget plugin being tested.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->filter = $this->prophesize(FilterFormatInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/feeds/tests/src/Unit/Feeds/Target/PasswordTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Target;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Password\PasswordInterface;
 use Drupal\Core\Password\PhpassHashedPassword;
@@ @@
  */
 class PasswordTest extends FieldTargetTestBase {

+  use ProphecyTrait;
   /**
    * The password hash service.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->passwordHasher = $this->prophesize(PasswordInterface::class);

     $container = new ContainerBuilder();
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/feeds/tests/src/Unit/Feeds/Target/FileTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Target;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
  */
 class FileTest extends FieldTargetTestBase {

+  use ProphecyTrait;
   /**
    * The entity type manager prophecy used in the test.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->entityTypeManager = $this->prophesize(EntityTypeManagerInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/feeds/tests/src/Unit/Feeds/Target/FieldTargetWithContainerTestBase.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $container = new ContainerBuilder();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/feeds/tests/src/Unit/Feeds/Target/EntityReferenceTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Target;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ @@
  */
 abstract class EntityReferenceTestBase extends FieldTargetTestBase {

+  use ProphecyTrait;
   /**
    * The entity type manager prophecy used in the test.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $referencable_entity_type_id = $this->getReferencableEntityTypeId();
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/feeds/tests/src/Unit/Feeds/Target/EntityReferenceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Target;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ @@
  */
 class EntityReferenceTest extends EntityReferenceTestBase {

+  use ProphecyTrait;
   /**
    * Field manager used in the test.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->entityFieldManager = $this->prophesize(EntityFieldManagerInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/feeds/tests/src/Unit/Feeds/Target/DateTimeTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->feedType = $this->createMock('Drupal\feeds\FeedTypeInterface');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/feeds/tests/src/Unit/Feeds/Target/DateRangeTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->feedType = $this->createMock('Drupal\feeds\FeedTypeInterface');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/feeds/tests/src/Unit/Feeds/Target/ConfigEntityReferenceTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Target;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Transliteration\TransliterationInterface;
 use Drupal\Core\Config\TypedConfigManagerInterface;

@@ @@
  */
 abstract class ConfigEntityReferenceTestBase extends EntityReferenceTestBase {

+  use ProphecyTrait;
   /**
    * The transliteration manager.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->transliteration = $this->prophesize(TransliterationInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/feeds/tests/src/Unit/Plugin/QueueWorker/FeedRefreshTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Plugin\QueueWorker;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\StatementInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
  */
 class FeedRefreshTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * The event dispatcher.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->dispatcher = new EventDispatcher();
     $queue_factory = $this->createMock(QueueFactory::class, [], [], '', FALSE);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/feeds/tests/src/Unit/FieldTargetDefinitionTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\feeds\FieldTargetDefinition;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\TypedData\ComplexDataDefinitionInterface;
@@ @@
  */
 class FieldTargetDefinitionTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * A prophesized data definition for the field item.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->itemDefinition = $this->prophesize(ComplexDataDefinitionInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/feeds/tests/src/Unit/FeedsUnitTestCase.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->defineConstants();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/feeds/tests/src/Unit/FeedsExecutableTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $entity_type_manager = $this->createMock(EntityTypeManagerInterface::class);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/feeds/tests/src/Unit/Feeds/Target/UserRoleTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Target;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Config\Entity\ConfigEntityTypeInterface;
 use Drupal\Core\Language\LanguageInterface;
@@ @@
  */
 class UserRoleTest extends ConfigEntityReferenceTestBase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->transliteration->transliterate('Bar', LanguageInterface::LANGCODE_DEFAULT, '_')
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/feeds/src/Entity/Feed.php:306

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function dispatchEntityEvent($event, EntityInterface $entity, ItemInterface $item) {
-    return $this->eventDispatcher()->dispatch($event, new EntityEvent($this, $entity, $item));
+    return $this->eventDispatcher()->dispatch(new EntityEvent($this, $entity, $item), $event);
   }

   /**
@@ @@
     }

     // Allow other modules to react upon finishing importing.
-    $this->eventDispatcher()->dispatch(FeedsEvents::IMPORT_FINISHED, new ImportFinishedEvent($this));
+    $this->eventDispatcher()->dispatch(new ImportFinishedEvent($this), FeedsEvents::IMPORT_FINISHED);

     // Cleanup.
     $this->clearStates();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


21) modules/contrib/feeds/tests/src/FunctionalJavascript/FeedsJavascriptTestBase.php:45

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a content type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/feeds/tests/src/FunctionalJavascript/Feeds/Parser/ParserTestBase.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create a feed type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/feeds/tests/src/Functional/UpdateNonExistentTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a feed type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/feeds/tests/src/Functional/UpdateExistingTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a feed type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/feeds/tests/src/Functional/PrivateFileTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // This test expects unused managed files to be marked as a temporary file.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemTargetLabelFormatterTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set display mode for feeds_item to feeds_item_target_label on article
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemTargetIdFormatterTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set display mode for feeds_item to feeds_item_target on article content
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemTargetEntityFormatterTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set display mode for feeds_item to feeds_item_target_entity_view on
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


29) modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemImportedFormatterTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set display mode for feeds_item to feeds_item_imported on article content
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


30) modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemGuidFormatterTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set display mode for feeds_item to feeds_item_guid on article content
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


31) modules/contrib/feeds/tests/src/Functional/Plugin/Field/FieldFormatter/FeedsItemFormatterTestBase.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create feeds_item field.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


32) modules/contrib/feeds/tests/src/Functional/Plugin/Action/DeleteFeedTest.php:42

    ---------- begin diff ----------
@@ @@
     // Select the first two feeds.
     $edit = [];
     for ($i = 0; $i < 2; $i++) {
-      $this->assertFieldById('edit-feeds-feed-bulk-form-' . $i);
+      $this->assertSession()->fieldValueEquals('edit-feeds-feed-bulk-form-' . $i, '');
       $edit["feeds_feed_bulk_form[$i]"] = TRUE;
     }

     // Delete the selected feeds.
     $edit += ['action' => 'feeds_feed_delete_action'];
-    $this->drupalPostForm(NULL, $edit, 'Apply to selected items');
+    $this->submitForm($edit, 'Apply to selected items');

     // Assert a confirmation page is shown.
     $this->assertSession()->pageTextContains('Are you sure you want to delete these items?');
-    $this->drupalPostForm(NULL, [], 'Delete');
+    $this->submitForm([], 'Delete');

     // Assert that feed 1 and feed 2 are deleted, but feed 3 is not.
     $this->assertNull(Feed::load(1));
    ----------- end diff -----------

Applied rules:
 * AssertFieldByIdRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


33) modules/contrib/feeds/tests/src/Functional/Form/MappingFormTest.php:35

    ---------- begin diff ----------
@@ @@
     $edit = [
       'add_target' => 'status',
     ];
-    $this->drupalPostForm('/admin/structure/feeds/manage/' . $feed_type->id() . '/mapping', $edit, 'Save');
+    $this->drupalGet('/admin/structure/feeds/manage/' . $feed_type->id() . '/mapping');
+    $this->submitForm($edit, 'Save');

     // Now try to map to a new source called 'title'. This shouldn't be allowed
     // because that source name already exists on the feed type.
@@ @@
       'mappings[2][map][value][custom__csv][value]' => 'title',
       'mappings[2][map][value][custom__csv][machine_name]' => 'title',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     // Assert that the double source name is detected.
     $this->assertSession()->pageTextContains('The machine-readable name is already in use. It must be unique.');
@@ @@
     $edit = [
       'dummy' => 'dummyValue',
     ];
+    $this->drupalGet('/admin/structure/feeds/manage/' . $feed_type->id() . '/mapping');

-    $this->drupalPostForm('/admin/structure/feeds/manage/' . $feed_type->id() . '/mapping', $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     // Assert that the dummy value was saved for the parser.
     $feed_type = $this->reloadEntity($feed_type);
@@ @@
     $edit = [
       'dummy' => 'invalid',
     ];
+    $this->drupalGet('/admin/structure/feeds/manage/' . $feed_type->id() . '/mapping');

-    $this->drupalPostForm('/admin/structure/feeds/manage/' . $feed_type->id() . '/mapping', $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->responseContains('Invalid value.');

     // Assert that the dummy value was *not* saved for the parser.
@@ @@
     $edit = [
       'add_target' => 'nid',
     ];
-    $this->drupalPostForm('/admin/structure/feeds/manage/' . $feed_type->id() . '/mapping', $edit, 'Save');
+    $this->drupalGet('/admin/structure/feeds/manage/' . $feed_type->id() . '/mapping');
+    $this->submitForm($edit, 'Save');

     // Now untick "unique".
     $edit = [
       'mappings[2][unique][value]' => 0,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     // Assert that a message is being displayed.
     $this->assertSession()->pageTextContains('When mapping to the entity ID (ID), it is recommended to set it as unique.');
@@ @@
     $edit = [
       'remove_mappings[2]' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     // Reload the page to clear any warnings.
     $this->drupalGet('/admin/structure/feeds/manage/' . $feed_type->id() . '/mapping');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


34) modules/contrib/feeds/tests/src/Unit/Feeds/Target/ConfigEntityReferenceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Target;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Config\Entity\ConfigEntityTypeInterface;
 use Drupal\feeds\Exception\ReferenceNotFoundException;
@@ @@
  */
 class ConfigEntityReferenceTest extends ConfigEntityReferenceTestBase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->buildContainer();
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


35) modules/contrib/feeds/tests/src/Unit/Feeds/Target/BookTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Target {

+  use Prophecy\PhpUnit\ProphecyTrait;
   use Drupal\book\BookManagerInterface;
   use Drupal\Core\Database\Connection;
   use Drupal\Core\DependencyInjection\ContainerBuilder;
@@ @@
    */
   class BookTest extends FeedsUnitTestCase {

+    use ProphecyTrait;
     /**
      * Database Service Object.
      *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


36) modules/contrib/feeds/tests/src/Unit/Feeds/Parser/SyndicationParserTest.php:67

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $container = new ContainerBuilder();
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


37) modules/contrib/feeds/tests/src/Unit/Feeds/Parser/SitemapParserTest.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->feedType = $this->createMock('Drupal\feeds\FeedTypeInterface');
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


38) modules/contrib/feeds/tests/src/Unit/Feeds/Parser/OpmlParserTest.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->feedType = $this->createMock('Drupal\feeds\FeedTypeInterface');
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


39) modules/contrib/feeds/tests/src/Unit/Feeds/Parser/Form/CsvParserFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Parser\Form;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Form\FormState;
 use Drupal\Tests\feeds\Unit\FeedsUnitTestCase;
 use Drupal\feeds\Feeds\Parser\Form\CsvParserForm;
@@ @@
  */
 class CsvParserFormTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * @covers ::buildConfigurationForm
    */
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


40) modules/contrib/feeds/tests/src/Unit/Feeds/Parser/Form/CsvParserFeedFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Parser\Form;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Form\FormState;
 use Drupal\Tests\feeds\Unit\FeedsUnitTestCase;
 use Drupal\feeds\FeedInterface;
@@ @@
  */
 class CsvParserFeedFormTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * Tests the feed form.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


41) modules/contrib/feeds/tests/src/Unit/Feeds/Parser/CsvParserTest.php:47

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->feedType = $this->createMock(FeedTypeInterface::class);
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


42) modules/contrib/feeds/tests/src/Unit/Feeds/Item/DynamicItemTest.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->item = new DynamicItem();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


43) modules/contrib/feeds/tests/src/Unit/Feeds/Item/BaseItemTest.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->item = $this->getMockForAbstractClass(BaseItem::class);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


44) modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/UploadFetcherTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->fileStorage = $this->createMock(EntityStorageInterface::class);
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


45) modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/HttpFetcherTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Fetcher;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Tests\feeds\Unit\FeedsUnitTestCase;
@@ @@
  */
 class HttpFetcherTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * The feed entity.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $feed_type = $this->createMock(FeedTypeInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


46) modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/Form/UploadFetcherFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Fetcher\Form;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormState;
@@ @@
  */
 class UploadFetcherFormTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * Tests the configuration form.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


47) modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/Form/UploadFetcherFeedFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Fetcher\Form;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Uuid\UuidInterface;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
  */
 class UploadFetcherFeedFormTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * Tests the feed form.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


48) modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/Form/DirectoryFetcherFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Fetcher\Form;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Form\FormState;
 use Drupal\Tests\feeds\Unit\FeedsUnitTestCase;
@@ @@
  */
 class DirectoryFetcherFormTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * Tests the configuration form.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


49) modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/Form/DirectoryFetcherFeedFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Feeds\Fetcher\Form;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Form\FormState;
 use Drupal\Tests\feeds\Unit\FeedsUnitTestCase;
 use Drupal\feeds\FeedInterface;
@@ @@
  */
 class DirectoryFetcherFeedFormTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * Tests the feed form.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


50) modules/contrib/feeds/tests/src/Unit/Feeds/Fetcher/DirectoryFetcherTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $feed_type = $this->createMock('Drupal\feeds\FeedTypeInterface');
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


51) modules/contrib/feeds/tests/src/Unit/FeedTypeAccessControlHandlerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Cache\Context\CacheContextsManager;
 use Drupal\Core\DependencyInjection\Container;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ @@
  */
 class FeedTypeAccessControlHandlerTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $cache_contexts_manager = $this->prophesize(CacheContextsManager::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


52) modules/contrib/feeds/tests/src/Unit/FeedImportHandlerTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->dispatcher = new EventDispatcher();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


53) modules/contrib/feeds/tests/src/Unit/FeedExpireHandlerTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->dispatcher = new EventDispatcher();
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


54) modules/contrib/feeds/tests/src/Unit/FeedClearHandlerTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->dispatcher = new EventDispatcher();
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


55) modules/contrib/feeds/tests/src/Unit/FeedAccessControlHandlerTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->entityType = $this->createMock('\Drupal\Core\Entity\EntityTypeInterface');
     $this->entityType->expects($this->once())
@@ @@
    * @covers ::access
    */
   public function testAccess() {
-    $feed = $this->getMockBuilder('\Drupal\feeds\FeedInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $feed = $this->createMock('\Drupal\feeds\FeedInterface');
     $feed->expects($this->any())
       ->method('bundle')
       ->will($this->returnValue('feed_bundle'));
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


56) modules/contrib/feeds/tests/src/Unit/EventSubscriber/LazySubscriberTest.php:79

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->dispatcher = new EventDispatcher();
@@ @@

     // Fetch.
     $subscriber->onInitImport(new InitEvent($this->feed, 'fetch'), FeedsEvents::INIT_IMPORT, $this->dispatcher);
-    $fetch_event = $this->dispatcher->dispatch(FeedsEvents::FETCH, new FetchEvent($this->feed));
+    $fetch_event = $this->dispatcher->dispatch(new FetchEvent($this->feed), FeedsEvents::FETCH);
     $this->assertSame($fetcher_result, $fetch_event->getFetcherResult());

     // Parse.
     $subscriber->onInitImport(new InitEvent($this->feed, 'parse'), FeedsEvents::INIT_IMPORT, $this->dispatcher);
-    $parse_event = $this->dispatcher->dispatch(FeedsEvents::PARSE, new ParseEvent($this->feed, $fetcher_result));
+    $parse_event = $this->dispatcher->dispatch(new ParseEvent($this->feed, $fetcher_result), FeedsEvents::PARSE);
     $this->assertSame($parser_result, $parse_event->getParserResult());

     // Process.
     $subscriber->onInitImport(new InitEvent($this->feed, 'process'), FeedsEvents::INIT_IMPORT, $this->dispatcher);
     foreach ($parse_event->getParserResult() as $item) {
-      $this->dispatcher->dispatch(FeedsEvents::PROCESS, new ProcessEvent($this->feed, $item));
+      $this->dispatcher->dispatch(new ProcessEvent($this->feed, $item), FeedsEvents::PROCESS);
     }

     // Call again.
@@ @@
     $subscriber = new LazySubscriber();

     $subscriber->onInitClear(new InitEvent($this->feed), FeedsEvents::INIT_CLEAR, $this->dispatcher);
-    $this->dispatcher->dispatch(FeedsEvents::CLEAR, new ClearEvent($this->feed));
+    $this->dispatcher->dispatch(new ClearEvent($this->feed), FeedsEvents::CLEAR);

     // Call again.
     $subscriber->onInitClear(new InitEvent($this->feed), FeedsEvents::INIT_CLEAR, $this->explodingDispatcher);
@@ @@

     $subscriber = new LazySubscriber();
     $subscriber->onInitExpire(new InitEvent($this->feed), FeedsEvents::INIT_IMPORT, $this->dispatcher);
-    $this->dispatcher->dispatch(FeedsEvents::EXPIRE, new ExpireEvent($this->feed, 1234));
+    $this->dispatcher->dispatch(new ExpireEvent($this->feed, 1234), FeedsEvents::EXPIRE);

     // Call again.
     $subscriber->onInitExpire(new InitEvent($this->feed), FeedsEvents::INIT_IMPORT, $this->explodingDispatcher);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


57) modules/contrib/feeds/tests/src/Unit/EventSubscriber/AfterParseBaseTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create the event subscriber.
-    $this->subscriber = $this->getMockBuilder(AfterParseBase::class)
-      ->setMethods(['alterItem'])
-      ->getMock();
+    $this->subscriber = $this->createMock(AfterParseBase::class);

     // Create a parser result.
     $this->parserResult = new ParserResult();

     // Create the event that returns the parser result.
-    $this->event = $this->getMockBuilder(ParseEvent::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['getParserResult'])
-      ->getMock();
+    $this->event = $this->createMock(ParseEvent::class);
     $this->event->expects($this->any())
       ->method('getParserResult')
       ->willReturn($this->parserResult);
@@ @@
    * @covers ::afterParse
    */
   public function testApplies() {
-    $subscriber = $this->getMockBuilder(AfterParseBase::class)
-      ->setMethods(['applies', 'alterItem'])
-      ->getMock();
+    $subscriber = $this->createMock(AfterParseBase::class);

     // Create a few items.
     for ($i = 1; $i <= 3; $i++) {
@@ @@
     $dispatcher->addSubscriber($this->subscriber);

     // Dispatch the event.
-    $dispatcher->dispatch(FeedsEvents::PARSE, $this->event);
+    $dispatcher->dispatch($this->event, FeedsEvents::PARSE);
   }

 }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


58) modules/contrib/feeds/tests/src/Unit/Event/EventDispatcherTraitTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Tests\feeds\Unit\FeedsUnitTestCase;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * @coversDefaultClass \Drupal\feeds\Event\EventDispatcherTrait
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


59) modules/contrib/feeds/tests/src/Unit/EntityFinderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ @@
  */
 class EntityFinderTest extends FeedsUnitTestCase {

+  use ProphecyTrait;
   /**
    * The entity type manager prophecy used in the test.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Entity type manager.
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


60) modules/contrib/feeds/tests/src/Unit/Entity/FeedTypeTest.php:32

    ---------- begin diff ----------
@@ @@
    */
   protected function getFeedTypeMock($feed_type_id, array $stubs = []) {
     // Plugin manager.
-    $pluginManager = $this->getMockBuilder(FeedsPluginManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $pluginManager = $this->createMock(FeedsPluginManager::class);
     $pluginManager->expects($this->any())
       ->method('getDefinitions')
       ->will($this->returnValue([]));
@@ @@
       ->getMock();

     // Parser.
-    $parser = $this->getMockBuilder(ParserInterface::class)
-      ->getMock();
+    $parser = $this->createMock(ParserInterface::class);
     $parser->expects($this->any())
       ->method('getMappingSources')
       ->will($this->returnValue([]));
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->feedType = $this->getFeedTypeMock($this->randomMachineName());
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


61) modules/contrib/feeds/tests/src/Unit/Element/UriTest.php:16

    ---------- begin diff ----------
@@ @@
     /**
      * {@inheritdoc}
      */
-    public function setUp() {
+    public function setUp(): void {
       parent::setUp();

       // Set a stub for the string translation service.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


62) modules/contrib/feeds/tests/src/Unit/Controller/SubscriptionControllerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Unit\Controller;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\feeds\Controller\SubscriptionController;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class SubscriptionControllerTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The controller under test.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->request = new Request();
     $this->request->query->set('hub_mode', 'subscribe');
     $this->request->query->set('hub_challenge', '1234');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


63) modules/contrib/feeds/tests/src/Functional/FieldValidationTest.php:131

    ---------- begin diff ----------
@@ @@
       'import my_feed_type feeds',
     ]);
     $this->drupalLogin($account);
+    $this->drupalGet('feed/1/import');

     // And import!
-    $this->drupalPostForm('feed/1/import', [], 'Import');
+    $this->submitForm([], 'Import');

     // Assert that 2 nodes have been created.
     $this->assertNodeCount(2);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


64) modules/contrib/feeds/tests/src/Functional/FeedsUninstallTest.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Ensure that the queue table exists by making a fake queue item.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


65) modules/contrib/feeds/tests/src/Functional/FeedsInstallTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->moduleHandler = $this->container->get('module_handler');
     $this->moduleInstaller = $this->container->get('module_installer');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


66) modules/contrib/feeds/tests/src/Functional/FeedsBrowserTestBase.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a content type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


67) modules/contrib/feeds/tests/src/Functional/Feeds/Target/PasswordTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create a feed type for importing users with passwords.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


68) modules/contrib/feeds/tests/src/Functional/Feeds/Target/FileTest.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create a file field.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


69) modules/contrib/feeds/tests/src/Functional/Feeds/Parser/Form/CsvParserFeedFormTest.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a feed type.
@@ @@
       'title[0][value]' => $this->randomMachineName(),
       'files[plugin_fetcher_source]' => \Drupal::service('file_system')->realpath($this->resourcesPath() . '/csv/nodes_comma.csv'),
     ];
-    $this->drupalPostForm('feed/add/' . $this->feedType->id(), $edit, t('Save and import'));
+    $this->drupalGet('feed/add/' . $this->feedType->id());
+    $this->submitForm($edit, t('Save and import'));

     // Load feed.
     $feed = Feed::load(1);
@@ @@
       'files[plugin_fetcher_source]' => \Drupal::service('file_system')->realpath($this->resourcesPath() . '/csv/' . $csv_file),
       'plugin[parser][delimiter]' => $delimiter,
     ];
-    $this->drupalPostForm('feed/add/' . $this->feedType->id(), $edit, t('Save and import'));
+    $this->drupalGet('feed/add/' . $this->feedType->id());
+    $this->submitForm($edit, t('Save and import'));

     // Load feed.
     $feed = Feed::load(1);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


70) modules/contrib/feeds/tests/src/Functional/Feeds/Fetcher/UploadFetcherTest.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a feed type.
@@ @@
       'title[0][value]' => $this->randomMachineName(),
       'files[plugin_fetcher_source]' => \Drupal::service('file_system')->realpath($this->resourcesPath() . '/rss/googlenewstz.rss2'),
     ];
-    $this->drupalPostForm('feed/add/' . $this->feedType->id(), $edit, t('Save and import'));
+    $this->drupalGet('feed/add/' . $this->feedType->id());
+    $this->submitForm($edit, t('Save and import'));

     // Load feed.
     $feed = Feed::load(1);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


71) modules/contrib/feeds/tests/src/Functional/Feeds/Fetcher/HttpFetcherTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Flush all caches to make table "cache_feeds_download" available.
@@ @@

     $this->drupalGet('feed/' . $feed->id());
     $this->clickLink(t('Import'));
-    $this->drupalPostForm(NULL, [], t('Import'));
+    $this->submitForm([], t('Import'));
     $this->assertSession()->pageTextContains('Created 6');
     $this->assertNodeCount(6);

@@ @@
       }
       $this->assertEquals($expected_terms[$nid], $terms);
     }
+    $this->drupalGet('feed/' . $feed->id() . '/import');

     // Test cache.
-    $this->drupalPostForm('feed/' . $feed->id() . '/import', [], t('Import'));
+    $this->submitForm([], t('Import'));
     $this->assertSession()->pageTextContains('The feed has not been updated.');

     // Import again.
     \Drupal::cache('feeds_download')->deleteAll();
-    $this->drupalPostForm('feed/' . $feed->id() . '/import', [], t('Import'));
+    $this->drupalGet('feed/' . $feed->id() . '/import');
+    $this->submitForm([], t('Import'));
     $this->assertSession()->pageTextContains('There are no new');

     // Test force-import.
@@ @@
     $configuration['update_existing'] = ProcessorInterface::UPDATE_EXISTING;
     $this->feedType->getProcessor()->setConfiguration($configuration);
     $this->feedType->save();
-    $this->drupalPostForm('feed/' . $feed->id() . '/import', [], t('Import'));
+    $this->drupalGet('feed/' . $feed->id() . '/import');
+    $this->submitForm([], t('Import'));
     $this->assertNodeCount(6);
     $this->assertSession()->pageTextContains('Updated 6');

     // Delete items.
     $this->clickLink(t('Delete items'));
-    $this->drupalPostForm(NULL, [], t('Delete items'));
+    $this->submitForm([], t('Delete items'));
     $this->assertNodeCount(0);
     $this->assertSession()->pageTextContains('Deleted 6');
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


72) modules/contrib/feeds/tests/src/Functional/FeedDeleteTest.php:19

    ---------- begin diff ----------
@@ @@
     $feed = $this->createFeed($feed_type->id(), [
       'source' => $this->resourcesPath() . '/rss/googlenewstz.rss2',
     ]);
+    $this->drupalGet('/feed/1/delete');

     // Now try to delete this feed.
-    $this->drupalPostForm('/feed/1/delete', [], 'Delete');
+    $this->submitForm([], 'Delete');

     // Ensure that no errors are shown.
     $this->assertSession()->pageTextNotContains('The website encountered an unexpected error.');
@@ @@
     // Import data.
     $feed->import();
     $this->assertNodeCount(6);
+    $this->drupalGet('/feed/1/delete');

     // Now try to delete this feed.
-    $this->drupalPostForm('/feed/1/delete', [], 'Delete');
+    $this->submitForm([], 'Delete');

     // Ensure that the feed now no longer exists.
     $this->assertNull($this->reloadEntity($feed));
@@ @@

     // Programmatically delete the feed type. The feed is now orphaned.
     $feed_type->delete();
+    $this->drupalGet('/feed/1/delete');

     // Now try to delete this feed.
-    $this->drupalPostForm('/feed/1/delete', [], 'Delete');
+    $this->submitForm([], 'Delete');

     // Ensure that no errors are shown.
     $this->assertSession()->pageTextNotContains('The website encountered an unexpected error.');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


73) modules/contrib/feeds/tests/src/Functional/ExpireTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a feed type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


74) modules/contrib/feeds/tests/src/Functional/CronTest.php:59

    ---------- begin diff ----------
@@ @@
     // Check that items import normally.
     \Drupal::cache('feeds_download')->deleteAll();
     sleep(1);
-    $this->drupalPostForm('feed/' . $feed->id() . '/import', [], t('Import'));
+    $this->drupalGet('feed/' . $feed->id() . '/import');
+    $this->submitForm([], t('Import'));
     $feed = $this->reloadEntity($feed);

     $manual_imported_time = $feed->getImportedTime();
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


75) modules/contrib/feeds/tests/src/Functional/Commands/FeedsDrushCommandsTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->feedType = $this->createFeedType([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


76) modules/contrib/feeds/tests/src/Traits/FeedsCommonTrait.php:213

    ---------- begin diff ----------
@@ @@
   protected function getModulePath(string $module_name): string {
     // @todo Remove drupal_get_path() when Drupal 9.2 is no longer supported.
     if (!\Drupal::hasService('extension.list.module')) {
-      return drupal_get_path('module', $module_name);
+      return \Drupal::service('extension.list.module')->getPath($module_name);
     }

     return \Drupal::service('extension.list.module')->getPath($module_name);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


77) modules/contrib/feeds/tests/src/Kernel/UpdateNonExistentTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a feed type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


78) modules/contrib/feeds/tests/src/Kernel/SourcePluginsTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setUpBodyField();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


79) modules/contrib/feeds/tests/src/Kernel/SkipNewTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Setup an event dispatcher. We use this to check the number of created and
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


80) modules/contrib/feeds/tests/src/Kernel/MultiMappingTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(['field', 'filter', 'node', 'datetime']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


81) modules/contrib/feeds/tests/src/Kernel/MultiFeedTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set up an event dispatcher to check the number of created and/or updated
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


82) modules/contrib/feeds/tests/src/Kernel/FeedsKernelTestBase.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Install database schemes.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


83) modules/contrib/feeds/tests/src/Kernel/FeedsItemTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setUpBodyField();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


84) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/UserRoleTest.php:45

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


85) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/TranslationTest.php:58

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Add languages.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


86) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/TimestampTest.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create feed type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


87) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/TemporaryTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create and configure feed type. Map once to the temporary target.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


88) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/PathTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Install config for path module.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


89) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/LinkTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->createFieldWithStorage('field_link', [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


90) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/LanguageTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $language = $this->container->get('entity_type.manager')->getStorage('configurable_language')->create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


91) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/FileTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds\Kernel\Feeds\Target;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ @@
  */
 abstract class FileTestBase extends FeedsKernelTestBase {

+  use ProphecyTrait;
   use FeedsMockingTrait;

   /**
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->setUpFileFields();

@@ @@
   protected function writeData($data, $destination = NULL, $replace = FileSystemInterface::EXISTS_RENAME) {
     // @todo Remove file_save_data() when Drupal 9.2 is no longer supported.
     if (!\Drupal::hasService('file.repository')) {
-      return file_save_data($data, $destination, $replace);
+      return \Drupal::service('file.repository')->writeData($data, $destination, $replace);
     }

     if (empty($destination)) {
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


92) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/FieldTest.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Add fields.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


93) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/ConfigEntityReferenceTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create two config entities.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


94) modules/contrib/feeds/tests/src/Kernel/Feeds/Target/BookTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->installSchema('book', 'book');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


95) modules/contrib/feeds/tests/src/Kernel/Feeds/Processor/GenericContentEntityProcessorTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['field', 'filter', 'node']);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


96) modules/contrib/feeds/tests/src/Kernel/Feeds/Processor/EntityProcessorBaseTest.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->feedType = $this->createMock(FeedTypeInterface::class);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


97) modules/contrib/feeds/tests/src/Kernel/Feeds/Parser/CsvParserTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->setUpBodyField();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


98) modules/contrib/feeds/tests/src/Kernel/Feeds/Fetcher/DirectoryFetcherTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a feed type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


99) modules/contrib/feeds/tests/src/Kernel/Entity/FeedTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->feedType = $this->createFeedType([
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 99 files have been changed by Rector                                      

