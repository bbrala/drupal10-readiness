modules/contrib/drupal_yext/drupal_yext.module
modules/contrib/drupal_yext/modules/drupal_yext_sync_deleted/drupal_yext_sync_deleted.module
modules/contrib/drupal_yext/src/YextContent/YextEntity.php
modules/contrib/drupal_yext/test/YextContent/NodeMigrateSourceInterfaceTest.php
modules/contrib/drupal_yext/modules/drupal_yext_find_by_title/src/Plugin/YextPlugin/FindByTitle.php
modules/contrib/drupal_yext/modules/drupal_yext_sync_deleted/src/YextSyncDeleted.php
modules/contrib/drupal_yext/modules/drupal_yext_find_by_title/src/YextFindByTitle.php
modules/contrib/drupal_yext/test/YextContent/NodeMigratorTest.php
modules/contrib/drupal_yext/test/YextContent/YextEntityFactoryTest.php
modules/contrib/drupal_yext/test/YextContent/YextEntityTest.php
modules/contrib/drupal_yext/modules/drupal_yext_find_by_title/tests/src/Unit/Plugin/YextPlugin/FindByTitleTest.php
modules/contrib/drupal_yext/src/YextContent/YextEntityFactory.php
modules/contrib/drupal_yext/test/YextContent/YextSourceRecordTest.php
modules/contrib/drupal_yext/test/YextContent/YextTargetNodeTest.php
modules/contrib/drupal_yext/test/traits/CommonUtilitiesTest.php
modules/contrib/drupal_yext/test/traits/SingletonTest.php
modules/contrib/drupal_yext/modules/drupal_yext_sync_deleted/tests/YextSyncDeletedTest.php
modules/contrib/drupal_yext/src/YextContent/YextIgnoreNode.php
modules/contrib/drupal_yext/src/YextContent/YextIgnoreSourceRecord.php
modules/contrib/drupal_yext/src/YextContent/YextSourceRecord.php
modules/contrib/drupal_yext/phpunit-autoload.php
modules/contrib/drupal_yext/phpunit-bootstrap.php
modules/contrib/drupal_yext/src/Annotation/YextPluginAnnotation.php
modules/contrib/drupal_yext/src/YextContent/YextSourceRecordFactory.php
modules/contrib/drupal_yext/src/Form/YextSettingsForm.php
modules/contrib/drupal_yext/src/YextContent/YextTargetNode.php
modules/contrib/drupal_yext/src/YextPluginBase.php
modules/contrib/drupal_yext/src/YextPluginCollection.php
modules/contrib/drupal_yext/src/YextPluginInterface.php
modules/contrib/drupal_yext/src/YextPluginManager.php
modules/contrib/drupal_yext/src/traits/CommonUtilities.php
modules/contrib/drupal_yext/src/traits/Singleton.php
modules/contrib/drupal_yext/test/Form/YextSettingsFormTest.php
modules/contrib/drupal_yext/test/Plugin/YextPlugin/YextIdAlreadyExistsTest.php
modules/contrib/drupal_yext/test/Plugin/YextPlugin/YextNonNumericFieldParserTest.php
modules/contrib/drupal_yext/test/Plugin/YextPlugin/YextNumericFieldParserTest.php
modules/contrib/drupal_yext/test/Yext/FieldMapperTest.php
modules/contrib/drupal_yext/test/Yext/YextTest.php
modules/contrib/drupal_yext/test/YextContent/NodeMigrateDestinationInterfaceTest.php
modules/contrib/drupal_yext/src/Plugin/YextPlugin/YextIdAlreadyExists.php
modules/contrib/drupal_yext/src/Plugin/YextPlugin/YextNonNumericFieldParser.php
modules/contrib/drupal_yext/src/Plugin/YextPlugin/YextNumericFieldParser.php
modules/contrib/drupal_yext/src/SelfTest/SelfTest.php
modules/contrib/drupal_yext/src/Yext/FieldMapper.php
modules/contrib/drupal_yext/src/Yext/Yext.php
modules/contrib/drupal_yext/src/YextContent/NodeMigrateDestinationInterface.php
modules/contrib/drupal_yext/src/YextContent/NodeMigrateSourceInterface.php
modules/contrib/drupal_yext/src/YextContent/NodeMigrationAtCreation.php
modules/contrib/drupal_yext/src/YextContent/NodeMigrationOnSave.php

14 files with changes
=====================

1) modules/contrib/drupal_yext/modules/drupal_yext_find_by_title/tests/src/Unit/Plugin/YextPlugin/FindByTitleTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(FindByTitle::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(FindByTitle::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/drupal_yext/test/YextContent/YextTargetNodeTest.php:27

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerSetBio
    */
   public function testSetBio(string $message, string $bio_field, array $expected) {
-    $object = $this->getMockBuilder(YextTargetNode::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods([
-        'fieldmap',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(YextTargetNode::class);

     $object->method('fieldmap')
       ->willReturn(new class($bio_field) extends FieldMapper {
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/drupal_yext/test/YextContent/YextSourceRecordTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(YextSourceRecord::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(YextSourceRecord::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/drupal_yext/test/YextContent/YextEntityTest.php:27

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerFieldValue
    */
   public function testFieldValue(string $message, array $mock_entity, string $field_name, string $expected) {
-    $object = $this->getMockBuilder(YextEntity::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods([
-        'drupalEntity'
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(YextEntity::class);

     $object->method('drupalEntity')
       ->willReturn(new class($mock_entity, $field_name) {
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/drupal_yext/test/YextContent/YextEntityFactoryTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(YextEntityFactory::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(YextEntityFactory::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/drupal_yext/test/YextContent/NodeMigratorTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(NodeMigrationOnSave::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(NodeMigrationOnSave::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/drupal_yext/test/Yext/YextTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(Yext::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(Yext::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/drupal_yext/test/Yext/FieldMapperTest.php:25

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerErrors
    */
   public function testErrors(string $message, array $all_fields, array $expected) {
-    $object = $this->getMockBuilder(FieldMapper::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods([
-        'yext',
-        'nodeTypeLoad',
-        'fieldDefinitions',
-        'allFields',
-        't',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(FieldMapper::class);

     $object->method('yext')
       ->willReturn(new class {
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/drupal_yext/test/Plugin/YextPlugin/YextNumericFieldParserTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(YextNumericFieldParser::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(YextNumericFieldParser::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/drupal_yext/test/Plugin/YextPlugin/YextNonNumericFieldParserTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(YextNonNumericFieldParser::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(YextNonNumericFieldParser::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/drupal_yext/test/Plugin/YextPlugin/YextIdAlreadyExistsTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(YextIdAlreadyExists::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(YextIdAlreadyExists::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/drupal_yext/test/Form/YextSettingsFormTest.php:31

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerConfigSetFromUserInput
    */
   public function testConfigSetFromUserInput(string $message, string $config_name, array $input, string $key, $default, string $expected) {
-    $object = $this->getMockBuilder(YextSettingsForm::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods([
-        'configSet',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(YextSettingsForm::class);

     $object->expects($this->once())
       ->method('configSet')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


13) modules/contrib/drupal_yext/src/Form/YextSettingsForm.php:86

    ---------- begin diff ----------
@@ @@
       '#type' => 'details',
       '#title' => $this->t('Basic node information'),
       '#description' => $this->t('This website attempts to synchronize data from @yext using their @api, creating nodes. Enter information about the target nodes here.', [
-        '@yext' => $this->link('Yext', 'https://www.yext.com')->toString(),
-        '@api' => $this->link('API', 'http://developer.yext.ca/docs/guides/get-started/')->toString(),
+        '@yext' => $this->toLink('Yext', 'https://www.yext.com')->toString()->toString(),
+        '@api' => $this->toLink('API', 'http://developer.yext.ca/docs/guides/get-started/')->toString()->toString(),
       ]),
       '#open' => FALSE,
     ];
@@ @@
         '#type' => 'details',
         '#title' => $this->t('Yext integration'),
         '#description' => $this->t('This website attempts to synchronize data from @yext using their @api, creating nodes. Once you have an "app" and API key set up, you can enter them here.', [
-          '@yext' => $this->link('Yext', 'https://www.yext.com')->toString(),
-          '@api' => $this->link('API', 'http://developer.yext.ca/docs/guides/get-started/')->toString(),
+          '@yext' => $this->toLink('Yext', 'https://www.yext.com')->toString()->toString(),
+          '@api' => $this->toLink('API', 'http://developer.yext.ca/docs/guides/get-started/')->toString()->toString(),
         ]),
         '#open' => FALSE,
       ];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/drupal_yext/modules/drupal_yext_sync_deleted/tests/YextSyncDeletedTest.php:31

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerSomeNids
    */
   public function testSomeNids(string $message, array $input, int $first, int $count, array $expected, $expected_next_first) {
-    $object = $this->getMockBuilder(YextSyncDeleted::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods([
-        'numItemsPerCronRun',
-        'getFirst',
-        'setFirst',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(YextSyncDeleted::class);

     $object->method('numItemsPerCronRun')
       ->willReturn($count);
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 14 files have been changed by Rector                                      

