diff --git a/page_notifications.install b/page_notifications.install
index d5d201e..51bfa60 100644
--- a/page_notifications.install
+++ b/page_notifications.install
@@ -40,7 +40,7 @@ use Drupal\Core\Database\Database;
        'checkbox_field' => '',
        'notes_field' => '',
        'node_timestamp' => '',
-       'created' => REQUEST_TIME,
+       'created' => \Drupal::time()->getRequestTime(),
        'verification_email_subject' => 'Subscription Confirmation â€“ [notify_node_title]',
        'verification_email_text' => '<p>Hello [notify_user_email],</p>
           <p>Please <a href="[notify_verify_url]">confirm your subscription</a>.</p>
diff --git a/page_notifications.module b/page_notifications.module
index 582893d..c5271d6 100644
--- a/page_notifications.module
+++ b/page_notifications.module
@@ -151,7 +151,7 @@ function page_notifications_node_presave(Drupal\node\NodeInterface $node) {
         if ($template_info['node_timestamp'] && !is_null($template_info['node_timestamp'])) {
           $notify_node_timestamp = $template_info['node_timestamp'];
           if($node->hasField($notify_node_timestamp)) {
-            $node->set($notify_node_timestamp, REQUEST_TIME);
+            $node->set($notify_node_timestamp, \Drupal::time()->getRequestTime());
           }
         }
         $node->set($checkbox_field, 0);
diff --git a/src/Controller/AdminSubscriptionsListPage.php b/src/Controller/AdminSubscriptionsListPage.php
index d1b11b7..9aa55ea 100644
--- a/src/Controller/AdminSubscriptionsListPage.php
+++ b/src/Controller/AdminSubscriptionsListPage.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\page_notifications\Controller;
 
+use Drupal\node\Entity\Node;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\page_notifications\Form\AccessVerificationStep;
@@ -42,12 +43,12 @@ class AdminSubscriptionsListPage extends ControllerBase {
 
       $rows = array();
       foreach ($records as $record) {
-        $node_record = \Drupal\node\Entity\Node::load($record);
+        $node_record = Node::load($record);
         $field_token_notify = $node_record->get("field_page_notify_token")->getValue();
         $field_node_id_notify = $node_record->get("field_page_notify_node_id")->getValue();
         $field_page_notify_email = $node_record->get("field_page_notify_email")->getValue();
 
-        $subscriptions_record = \Drupal\node\Entity\Node::load($field_node_id_notify[0]['value']);
+        $subscriptions_record = Node::load($field_node_id_notify[0]['value']);
           $rows[] = array('data' => array(
             'title' => new FormattableMarkup('<a href="@page_url">@page_title</a>',
               [
diff --git a/src/Controller/SubscriberPage.php b/src/Controller/SubscriberPage.php
index 095f57f..8dad550 100644
--- a/src/Controller/SubscriberPage.php
+++ b/src/Controller/SubscriberPage.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\page_notifications\Controller;
 
+use Drupal\node\Entity\Node;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Drupal\examples\Utility\DescriptionTemplateTrait;
@@ -44,11 +45,11 @@ class SubscriberPage extends ControllerBase {
       // Populate the rows.
       $rows = array();
       foreach ($records as $record) {
-        $node_record = \Drupal\node\Entity\Node::load($record);
+        $node_record = Node::load($record);
         $field_token_notify = $node_record->get("field_page_notify_token")->getValue();
         $field_node_id_notify = $node_record->get("field_page_notify_node_id")->getValue();
 
-        $subscriptions_record = \Drupal\node\Entity\Node::load($field_node_id_notify[0]['value']);
+        $subscriptions_record = Node::load($field_node_id_notify[0]['value']);
           $rows[] = array('data' => array(
             'title' => new FormattableMarkup('<a href="@page_url">@page_title</a>',
               [
@@ -137,7 +138,7 @@ function getAllRecords($email) {
     ->condition('field_page_notify_email', $email, '=');
   $records = $query->execute();
   foreach ($records as $key => $record) {
-    $node = \Drupal\node\Entity\Node::load($record);
+    $node = Node::load($record);
     $nodes[] = $node;
   }
   if ($nodes) {
diff --git a/src/Form/EmailConfirmationPage.php b/src/Form/EmailConfirmationPage.php
index ce410cf..fa8b4e3 100644
--- a/src/Form/EmailConfirmationPage.php
+++ b/src/Form/EmailConfirmationPage.php
@@ -97,7 +97,7 @@ class EmailConfirmationPage extends FormBase {
           return $form;
         }
         else {
-          $node = \Drupal\node\Entity\Node::load($node_id);
+          $node = Node::load($node_id);
           $node_title = $node->getTitle();
           $subscribed_node_url = $node->toUrl()->setAbsolute()->toString();
           $user_token_exist = \Drupal::service('load.databaseinnfo.service')->pageNotifyGetUserToken($email);
diff --git a/src/Form/EmailUnsubscribePage.php b/src/Form/EmailUnsubscribePage.php
index b5e2865..9ff937b 100644
--- a/src/Form/EmailUnsubscribePage.php
+++ b/src/Form/EmailUnsubscribePage.php
@@ -88,7 +88,7 @@ class EmailUnsubscribePage extends FormBase {
       if (is_string($subscription_token) && !is_null($subscription_token)) {
         $part_subscription_token = explode("-", $subscription_token);
         if (strlen($part_subscription_token[1]) == 10) {
-          $node = \Drupal\node\Entity\Node::load($part_subscription_token[0]);
+          $node = Node::load($part_subscription_token[0]);
           $subscriptions_url = $host . '/page-notifications/verify-list/' . $subscription_token;
           if ($node) {
             $node_title = $node->getTitle();
@@ -203,7 +203,7 @@ class EmailUnsubscribePage extends FormBase {
           $entities = $storage_handler->loadMultiple($result);
           $storage_handler->delete($entities);
           if($result){
-            $node = \Drupal\node\Entity\Node::load($node_id_unsubscribe);
+            $node = Node::load($node_id_unsubscribe);
             $node_title = $node->getTitle();
             \Drupal::messenger()->addStatus(t('You have successfully unsubscribed from @title.', ['@title' => $node_title,]));
           }
@@ -215,7 +215,7 @@ class EmailUnsubscribePage extends FormBase {
       \Drupal::messenger()->addError(t('You link might be broken or incomplete.'));
     }
 
-    $url = \Drupal\Core\Url::fromRoute('<front>')->toString();
+    $url = Url::fromRoute('<front>')->toString();
     $response = new RedirectResponse($url);
     $response->send();
   }
diff --git a/src/Form/MessagesForm.php b/src/Form/MessagesForm.php
index f8c4392..80b1ec0 100644
--- a/src/Form/MessagesForm.php
+++ b/src/Form/MessagesForm.php
@@ -271,7 +271,7 @@ class MessagesForm extends FormBase {
           'checkbox_field' => $form_state->getValue('checkbox_field'),
           'notes_field' => $form_state->getValue('notes_field'),
           'node_timestamp' => $form_state->getValue('node_timestamp'),
-          'created' => REQUEST_TIME,
+          'created' => \Drupal::time()->getRequestTime(),
           'body' => $notify_body_info['value'],
           'verification_email_subject' => $form_state->getValue('verification_email_subject'),
           'verification_email_text' => $notify_verification_email_text['value'],
@@ -297,7 +297,7 @@ class MessagesForm extends FormBase {
           'checkbox_field' => $form_state->getValue('checkbox_field'),
           'notes_field' => $form_state->getValue('notes_field'),
           'node_timestamp' => $form_state->getValue('node_timestamp'),
-          'created' => REQUEST_TIME,
+          'created' => \Drupal::time()->getRequestTime(),
           'body' => $notify_body_info['value'],
           'verification_email_subject' => $form_state->getValue('verification_email_subject'),
           'verification_email_text' => $notify_verification_email_text['value'],
diff --git a/src/Form/MigrationForm.php b/src/Form/MigrationForm.php
index 705a3ff..5a56a1c 100644
--- a/src/Form/MigrationForm.php
+++ b/src/Form/MigrationForm.php
@@ -100,7 +100,7 @@ class MigrationForm extends FormBase {
     $count = 0;
     foreach ($node_subscriptions_list as $key => $value) {
       if ($value['field_page_notify_node_id'] != 0) {
-        $node = \Drupal\node\Entity\Node::load($value['field_page_notify_node_id']);
+        $node = Node::load($value['field_page_notify_node_id']);
         $new_title = 'Subscription to - ' . $page_values['subscription_import'] . ' - ' . $node->field_page_notify_token->getString();
         $node->set('title', $new_title);
         $node->set('field_page_notify_node_id',  $page_values['subscription_import']);
@@ -170,7 +170,7 @@ class MigrationForm extends FormBase {
       ->sort('created', 'DESC')
       ->pager(10)
       ->execute();
-    $nodes = \Drupal\node\Entity\Node::loadMultiple($nids);
+    $nodes = Node::loadMultiple($nids);
     $nids = array_keys($nodes);
     $export_records_count = count($nids);
     if($export_records_count == 0){
@@ -205,7 +205,7 @@ class MigrationForm extends FormBase {
 
       $i=0;
       foreach($nids as $nid) {
-        $node = \Drupal\node\Entity\Node::load($nid);
+        $node = Node::load($nid);
         $contenttitle=$node->title->value;
         $receivername = $node->getOwner()->getDisplayName();
         $field_page_notify_email = $node->get('field_page_notify_email')->getValue();
@@ -213,7 +213,7 @@ class MigrationForm extends FormBase {
         $field_page_notify_token = $node->get('field_page_notify_token')->getValue();
         \Drupal::entityTypeManager()->getStorage('node')->resetCache(array($nid));
 
-        $subscribed_node = \Drupal\node\Entity\Node::load($field_page_notify_node_id[0]['value']);
+        $subscribed_node = Node::load($field_page_notify_node_id[0]['value']);
         $subscribed_node_url_str = $subscribed_node->toUrl()->toString();
         $subscribed_node_title = $subscribed_node->getTitle();
         $truncated_subscribed_node_title = (strlen($subscribed_node_title) > 20) ? substr($subscribed_node_title, 0, 20) . '...' : $subscribed_node_title;
diff --git a/src/Form/PageNotificationsBlockForm.php b/src/Form/PageNotificationsBlockForm.php
index 08f7867..0dbfeaa 100644
--- a/src/Form/PageNotificationsBlockForm.php
+++ b/src/Form/PageNotificationsBlockForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\page_notifications\Form;
 
+use Drupal\node\NodeInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Mail\MailManagerInterface;
@@ -106,8 +107,8 @@ class PageNotificationsBlockForm extends FormBase {
     $route_match = \Drupal::routeMatch();
     if ($route_match->getRouteName() == 'entity.node.canonical') {
       $node = \Drupal::routeMatch()->getParameter('node');
-        if ($node instanceof \Drupal\node\NodeInterface) {
-          $node = \Drupal\node\Entity\Node::load($node->id());
+        if ($node instanceof NodeInterface) {
+          $node = Node::load($node->id());
           $node_title = $node->getTitle();
           $node_node_url = $node->toUrl()->setAbsolute()->toString();
           $block_header_replacements = array(
@@ -232,7 +233,7 @@ class PageNotificationsBlockForm extends FormBase {
           $record_exist = \Drupal::service('load.databaseinnfo.service')->checkIfRecordExistNode($email_notify, $node_id);
           if ($record_exist) {
             $unsubscribe_link = $host . "/page-notifications/unsubscribe/" . $record_exist['field_page_notify_node_id'] . '-' . $record_exist['field_page_notify_token'];
-            $node = \Drupal\node\Entity\Node::load($node_id);
+            $node = Node::load($node_id);
             $node_title = $node->getTitle();
             $subscribed_node_url = $node->toUrl()->setAbsolute()->toString();
             $replacements = array(
@@ -264,7 +265,7 @@ class PageNotificationsBlockForm extends FormBase {
             $reload_page_link = $host . $current_uri;
 
             $subscription_token = page_notifications_generateRandomString();
-            $node = \Drupal\node\Entity\Node::load($node_id);
+            $node = Node::load($node_id);
             $node_title = $node->getTitle();
             $subscribed_node_url = $node->toUrl()->setAbsolute()->toString();
             $confrm_url = $host . "/page-notifications/confirmation/" . $form_state->getValue('email_notify') . "/" . $form_state->getValue('current_node') . "-" . $subscription_token;
diff --git a/src/Form/UserSubscriptionsPage.php b/src/Form/UserSubscriptionsPage.php
index fed5c6b..007c7f9 100644
--- a/src/Form/UserSubscriptionsPage.php
+++ b/src/Form/UserSubscriptionsPage.php
@@ -211,11 +211,11 @@ class UserSubscriptionsPage extends FormBase {
       $records = $query->execute();
       $rows = array();
       foreach ($records as $record) {
-        $node_record = \Drupal\node\Entity\Node::load($record);
+        $node_record = Node::load($record);
         $field_token_notify = $node_record->get("field_page_notify_token")->getValue();
         $field_node_id_notify = $node_record->get("field_page_notify_node_id")->getValue();
 
-        $subscriptions_record = \Drupal\node\Entity\Node::load($field_node_id_notify[0]['value']);
+        $subscriptions_record = Node::load($field_node_id_notify[0]['value']);
           $rows[] = array('data' => array(
             'title' => new FormattableMarkup('<a href="@page_url">@page_title</a>',
               [
@@ -262,7 +262,7 @@ class UserSubscriptionsPage extends FormBase {
       return $build;
 
     } else {
-      $url = \Drupal\Core\Url::fromRoute('<front>')->toString();
+      $url = Url::fromRoute('<front>')->toString();
       $response = new RedirectResponse($url);
       $response->send();
       \Drupal::messenger()->addError(t('You link might be broken or incomplete.'));
@@ -312,7 +312,7 @@ function getAllRecords($email) {
     ->condition('field_page_notify_email', $email, '=');
   $records = $query->execute();
   foreach ($records as $key => $record) {
-    $node = \Drupal\node\Entity\Node::load($record);
+    $node = Node::load($record);
     $nodes[] = $node;
   }
   if ($nodes) {
diff --git a/src/LoadDataBaseInfo.php b/src/LoadDataBaseInfo.php
index 787e820..e85ed96 100644
--- a/src/LoadDataBaseInfo.php
+++ b/src/LoadDataBaseInfo.php
@@ -1,13 +1,14 @@
 <?php
 
-namespace Drupal\page_notifications;
-
+namespace Drupal\page_notifications;
+
+use Drupal\node\Entity\Node;
+use Drupal\node\NodeInterface;
 /**
  * Class LoadDataBaseInfo.
  *
  * @package Drupal\page_notifications\src
- */
-
+ */
 class LoadDataBaseInfo {
 
   public function get_notify_email_template() {
@@ -209,7 +210,7 @@ class LoadDataBaseInfo {
     if ($records && !is_null($records)) {
       $user_records = [];
       foreach ($records as $record) {
-        $node_record = \Drupal\node\Entity\Node::load($record);
+        $node_record = Node::load($record);
         if ($node_record && $node_record->isPublished() == true) {
           $field_token_notify_user_id = $node_record->get("field_page_notify_token_user_id")->getValue();
           $field_email_notify = $node_record->get("field_page_notify_email")->getValue();
@@ -241,7 +242,7 @@ class LoadDataBaseInfo {
     if ($records && !is_null($records)) {
       $node_subscriptions = [];
       foreach ($records as $record) {
-        $node_record = \Drupal\node\Entity\Node::load($record);
+        $node_record = Node::load($record);
 
         if ($node_record) {
           $field_token_notify_user_id = $node_record->get("field_page_notify_token_user_id")->getValue();
@@ -268,7 +269,7 @@ class LoadDataBaseInfo {
 
   public function getCurrentPageInfo() {
     $node = \Drupal::routeMatch()->getParameter('node');
-    if ($node instanceof \Drupal\node\NodeInterface) {
+    if ($node instanceof NodeInterface) {
       $nid = $node->id();
       $pageinfo = [
         'current_node' => $nid,
diff --git a/src/Plugin/Block/PageNotificationsBlock.php b/src/Plugin/Block/PageNotificationsBlock.php
index 5709c5a..9535887 100644
--- a/src/Plugin/Block/PageNotificationsBlock.php
+++ b/src/Plugin/Block/PageNotificationsBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\page_notifications\Plugin\Block;
 
+use Drupal\node\NodeInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -110,7 +111,7 @@ class PageNotificationsBlock extends BlockBase implements ContainerFactoryPlugin
     $route_match = \Drupal::routeMatch();
     if ($route_match->getRouteName() == 'entity.node.canonical') {
       $node = \Drupal::routeMatch()->getParameter('node');
-        if ($node instanceof \Drupal\node\NodeInterface) {
+        if ($node instanceof NodeInterface) {
           $output['form'] = $this->formBuilder->getForm(PageNotificationsBlockForm::class);
         } else {
           $output['body'] = [
