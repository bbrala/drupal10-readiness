modules/contrib/views_bulk_operations/modules/actions_permissions/src/ActionsPermissions.php
modules/contrib/views_bulk_operations/src/Form/ConfigureAction.php
modules/contrib/views_bulk_operations/tests/src/Unit/TestViewsBulkOperationsBatch.php
modules/contrib/views_bulk_operations/tests/src/Unit/ViewsBulkOperationsBatchTest.php
modules/contrib/views_bulk_operations/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php
modules/contrib/views_bulk_operations/modules/views_bulk_operations_example/src/Plugin/Action/ViewsBulkOperationExampleAction.php
modules/contrib/views_bulk_operations/src/Form/ConfirmAction.php
modules/contrib/views_bulk_operations/src/Form/ViewsBulkOperationsFormTrait.php
modules/contrib/views_bulk_operations/src/Access/ViewsBulkOperationsAccess.php
modules/contrib/views_bulk_operations/src/Action/ViewsBulkOperationsActionBase.php
modules/contrib/views_bulk_operations/src/Plugin/Action/CancelUserAction.php
modules/contrib/views_bulk_operations/src/Action/ViewsBulkOperationsActionCompletedTrait.php
modules/contrib/views_bulk_operations/src/Action/ViewsBulkOperationsActionInterface.php
modules/contrib/views_bulk_operations/src/Action/ViewsBulkOperationsPreconfigurationInterface.php
modules/contrib/views_bulk_operations/tests/views_bulk_operations_test/src/Plugin/Action/ViewsBulkOperationsAdvancedTestAction.php
modules/contrib/views_bulk_operations/src/Commands/ViewsBulkOperationsCommands.php
modules/contrib/views_bulk_operations/src/Plugin/Action/EntityDeleteAction.php
modules/contrib/views_bulk_operations/src/Plugin/views/field/ViewsBulkOperationsBulkForm.php
modules/contrib/views_bulk_operations/tests/views_bulk_operations_test/src/Plugin/Action/ViewsBulkOperationsPassTestAction.php
modules/contrib/views_bulk_operations/tests/views_bulk_operations_test/src/Plugin/Action/ViewsBulkOperationsSimpleTestAction.php
modules/contrib/views_bulk_operations/views_bulk_operations.drush.inc
modules/contrib/views_bulk_operations/views_bulk_operations.install
modules/contrib/views_bulk_operations/src/Controller/ViewsBulkOperationsController.php
modules/contrib/views_bulk_operations/views_bulk_operations.module
modules/contrib/views_bulk_operations/src/EventSubscriber/ViewsBulkOperationsEventSubscriber.php
modules/contrib/views_bulk_operations/src/Service/ViewsBulkOperationsActionManager.php
modules/contrib/views_bulk_operations/src/Service/ViewsBulkOperationsActionProcessor.php
modules/contrib/views_bulk_operations/src/Service/ViewsBulkOperationsActionProcessorInterface.php
modules/contrib/views_bulk_operations/src/Service/ViewsBulkOperationsViewData.php
modules/contrib/views_bulk_operations/src/Service/ViewsBulkOperationsViewDataInterface.php
modules/contrib/views_bulk_operations/src/ViewsBulkOperationsBatch.php
modules/contrib/views_bulk_operations/src/ViewsBulkOperationsEvent.php
modules/contrib/views_bulk_operations/tests/src/Functional/DrushCommandsTest.php
modules/contrib/views_bulk_operations/tests/src/Functional/ViewsBulkOperationsBulkFormTest.php
modules/contrib/views_bulk_operations/tests/src/Functional/ViewsBulkOperationsFunctionalTestBase.php
modules/contrib/views_bulk_operations/tests/src/FunctionalJavascript/ViewsBulkOperationsBulkFormTest.php
modules/contrib/views_bulk_operations/tests/src/Kernel/ViewsBulkOperationsActionProcessorTest.php
modules/contrib/views_bulk_operations/tests/src/Kernel/ViewsBulkOperationsDataServiceTest.php
modules/contrib/views_bulk_operations/tests/src/Kernel/ViewsBulkOperationsKernelTestBase.php

12 files with changes
=====================

1) modules/contrib/views_bulk_operations/tests/src/Unit/ViewsBulkOperationsBatchTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->container = new ContainerBuilder();
@@ @@
    *   A mocked action processor.
    */
   public function getViewsBulkOperationsActionProcessorStub($entities_count) {
-    $actionProcessor = $this->getMockBuilder('Drupal\views_bulk_operations\Service\ViewsBulkOperationsActionProcessor')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $actionProcessor = $this->createMock('Drupal\views_bulk_operations\Service\ViewsBulkOperationsActionProcessor');

     $actionProcessor->expects($this->any())
       ->method('populateQueue')
@@ @@
     $this->container->set('views_bulk_operations.processor', $this->getViewsBulkOperationsActionProcessorStub($batch_size));

     $view = new View(['id' => 'test_view'], 'view');
-    $view_storage = $this->getMockBuilder('Drupal\Core\Config\Entity\ConfigEntityStorage')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $view_storage = $this->createMock('Drupal\Core\Config\Entity\ConfigEntityStorage');
     $view_storage->expects($this->any())
       ->method('load')
       ->with('test_view')
@@ @@
       ->will($this->returnValue($view_storage));
     $this->container->set('entity_type.manager', $entity_type_manager);

-    $executable = $this->getMockBuilder('Drupal\views\ViewExecutable')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $executable = $this->createMock('Drupal\views\ViewExecutable');

     $executable->result = [];

@@ @@
       $executable->result[] = $row;
     }

-    $viewExecutableFactory = $this->getMockBuilder('Drupal\views\ViewExecutableFactory')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $viewExecutableFactory = $this->createMock('Drupal\views\ViewExecutableFactory');
     $viewExecutableFactory->expects($this->any())
       ->method('get')
       ->will($this->returnValue($executable));
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/views_bulk_operations/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\actions_permissions\EventSubscriber;

+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\views_bulk_operations\Service\ViewsBulkOperationsActionManager;

 /**
@@ @@
   /**
    * Alter the actions' definitions.
    *
-   * @var \Symfony\Component\EventDispatcher\Event $event
+   * @var \Symfony\Contracts\EventDispatcher\Event $event
    *   The event to respond to.
    */
   public function alterActions(Event $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


3) modules/contrib/views_bulk_operations/tests/src/Kernel/ViewsBulkOperationsKernelTestBase.php:78

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/views_bulk_operations/tests/src/Kernel/ViewsBulkOperationsDataServiceTest.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->createTestNodes([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/views_bulk_operations/tests/src/Kernel/ViewsBulkOperationsActionProcessorTest.php:10

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->createTestNodes([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/views_bulk_operations/tests/src/FunctionalJavascript/ViewsBulkOperationsBulkFormTest.php:73

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create some nodes for testing.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/views_bulk_operations/tests/src/Functional/ViewsBulkOperationsFunctionalTestBase.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create some nodes for testing.
@@ @@
     foreach ($selection as $index) {
       $data["views_bulk_operations_bulk_form[$index]"] = TRUE;
     }
-    $this->drupalPostForm($path, $data, $button_text);
+    $this->drupalGet($path);
+    $this->submitForm($data, $button_text);
   }

 }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/views_bulk_operations/tests/src/Functional/ViewsBulkOperationsBulkFormTest.php:121

    ---------- begin diff ----------
@@ @@
     $edit = [
       'test_config' => $config_value,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Apply'));
+    $this->submitForm($edit, t('Apply'));

     // Execute action by posting the confirmation form
     // (also tests if the submit button exists on the page).
-    $this->drupalPostForm(NULL, [], t('Execute action'));
+    $this->submitForm([], t('Execute action'));

     // If all went well and Batch API did its job,
     // the next page should display results.
@@ @@
     foreach ([0, 2] as $index) {
       $edit["views_bulk_operations_bulk_form[$index]"] = TRUE;
     }
-    $this->drupalPostForm(NULL, $edit, t('Apply to selected items'));
-    $this->drupalPostForm(NULL, ['test_config' => 'unpublish'], t('Apply'));
-    $this->drupalPostForm(NULL, [], t('Execute action'));
+    $this->submitForm($edit, t('Apply to selected items'));
+    $this->submitForm(['test_config' => 'unpublish'], t('Apply'));
+    $this->submitForm([], t('Execute action'));
     // Again, take offset into account (-1), also take 2 excluded
     // rows into account (-2).
     // Also, check if the custom completed message appears.
@@ @@
       }

       $this->drupalGet('views-bulk-operations-test-advanced', $options);
-      $this->drupalPostForm(NULL, $edit, t('Apply to selected items'));
+      $this->submitForm($edit, t('Apply to selected items'));

       // On batch-enabled processes check if provided context data is correct.
       if ($case['batch']) {
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/views_bulk_operations/tests/src/Functional/DrushCommandsTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create some nodes for testing.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/views_bulk_operations/src/ViewsBulkOperationsEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\views_bulk_operations;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\views\ViewExecutable;

 /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/views_bulk_operations/src/Service/ViewsBulkOperationsViewData.php:93

    ---------- begin diff ----------
@@ @@

     // @todo Remove the conditional when Drupal 8 is no longer supported.
     if (floatval(\Drupal::VERSION) < 9) {
-      $this->eventDispatcher->dispatch(ViewsBulkOperationsEvent::NAME, $event);
+      $this->eventDispatcher->dispatch($event, ViewsBulkOperationsEvent::NAME);
     }
     else {
       $this->eventDispatcher->dispatch($event, ViewsBulkOperationsEvent::NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


12) modules/contrib/views_bulk_operations/src/Service/ViewsBulkOperationsActionManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\views_bulk_operations\Service;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Action\ActionManager;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;

 /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 12 files have been changed by Rector                                      

