diff --git a/modules/slack_rules/src/ProxyClass/UninstallValidator/SlackRulesUninstallValidator.php b/modules/slack_rules/src/ProxyClass/UninstallValidator/SlackRulesUninstallValidator.php
index cfcb21f..d6631bf 100755
--- a/modules/slack_rules/src/ProxyClass/UninstallValidator/SlackRulesUninstallValidator.php
+++ b/modules/slack_rules/src/ProxyClass/UninstallValidator/SlackRulesUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\slack_rules\ProxyClass\UninstallValidator {
 
+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\slack_rules\UninstallValidator\SlackRulesUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class SlackRulesUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class SlackRulesUninstallValidator implements ModuleUninstallValidatorInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -46,7 +50,7 @@ namespace Drupal\slack_rules\ProxyClass\UninstallValidator {
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\slack_rules\ProxyClass\UninstallValidator {
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
diff --git a/src/Controller/SlackAppController.php b/src/Controller/SlackAppController.php
index 7a73ab0..cba59b2 100755
--- a/src/Controller/SlackAppController.php
+++ b/src/Controller/SlackAppController.php
@@ -124,7 +124,7 @@ class SlackAppController extends ControllerBase implements ContainerInjectionInt
           ]));
         }
         else {
-          $link = $slack_app->link($date);
+          $link = $slack_app->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/src/Controller/SlackRequestContentController.php b/src/Controller/SlackRequestContentController.php
index b8a7904..3453290 100755
--- a/src/Controller/SlackRequestContentController.php
+++ b/src/Controller/SlackRequestContentController.php
@@ -124,7 +124,7 @@ class SlackRequestContentController extends ControllerBase implements ContainerI
           ]));
         }
         else {
-          $link = $slack_request_content->link($date);
+          $link = $slack_request_content->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/src/Form/SlackAppRevisionDeleteForm.php b/src/Form/SlackAppRevisionDeleteForm.php
index a87daba..70f780f 100755
--- a/src/Form/SlackAppRevisionDeleteForm.php
+++ b/src/Form/SlackAppRevisionDeleteForm.php
@@ -57,7 +57,7 @@ class SlackAppRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -92,7 +92,7 @@ class SlackAppRevisionDeleteForm extends ConfirmFormBase {
     $this->SlackAppStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Slack App: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of Slack App %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of Slack App %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.slack_app.canonical',
        ['slack_app' => $this->revision->id()]
diff --git a/src/Form/SlackAppRevisionRevertForm.php b/src/Form/SlackAppRevisionRevertForm.php
index c8c01f3..e19e78f 100755
--- a/src/Form/SlackAppRevisionRevertForm.php
+++ b/src/Form/SlackAppRevisionRevertForm.php
@@ -129,7 +129,7 @@ class SlackAppRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(SlackAppInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/SlackAppRevisionRevertTranslationForm.php b/src/Form/SlackAppRevisionRevertTranslationForm.php
index 8ab86fe..6166685 100755
--- a/src/Form/SlackAppRevisionRevertTranslationForm.php
+++ b/src/Form/SlackAppRevisionRevertTranslationForm.php
@@ -89,7 +89,7 @@ class SlackAppRevisionRevertTranslationForm extends SlackAppRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/SlackRequestContentRevisionDeleteForm.php b/src/Form/SlackRequestContentRevisionDeleteForm.php
index e18c146..817641f 100755
--- a/src/Form/SlackRequestContentRevisionDeleteForm.php
+++ b/src/Form/SlackRequestContentRevisionDeleteForm.php
@@ -57,7 +57,7 @@ class SlackRequestContentRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -92,7 +92,7 @@ class SlackRequestContentRevisionDeleteForm extends ConfirmFormBase {
     $this->SlackRequestContentStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Slack request content: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of Slack request content %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of Slack request content %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.slack_request_content.canonical',
        ['slack_request_content' => $this->revision->id()]
diff --git a/src/Form/SlackRequestContentRevisionRevertForm.php b/src/Form/SlackRequestContentRevisionRevertForm.php
index 6315617..e6bafa8 100755
--- a/src/Form/SlackRequestContentRevisionRevertForm.php
+++ b/src/Form/SlackRequestContentRevisionRevertForm.php
@@ -129,7 +129,7 @@ class SlackRequestContentRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(SlackRequestContentInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/SlackRequestContentRevisionRevertTranslationForm.php b/src/Form/SlackRequestContentRevisionRevertTranslationForm.php
index cec774a..5859d71 100755
--- a/src/Form/SlackRequestContentRevisionRevertTranslationForm.php
+++ b/src/Form/SlackRequestContentRevisionRevertTranslationForm.php
@@ -89,7 +89,7 @@ class SlackRequestContentRevisionRevertTranslationForm extends SlackRequestConte
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Service/SlackSendRequest.php b/src/Service/SlackSendRequest.php
index d13cb00..f608406 100755
--- a/src/Service/SlackSendRequest.php
+++ b/src/Service/SlackSendRequest.php
@@ -64,15 +64,15 @@ class SlackSendRequest extends SlackApiIntegration {
       $response = $this->sendHttpRequest(self::FORM_URL_ENCODED, $webhook_url, $sending_data, $type, NULL, FALSE);
       $logger->info('Message was successfully sent!');
       return $response;
-    } catch (\GuzzleHttp\Exception\ServerException $e) {
+    } catch (ServerException $e) {
       $logger->error('Server error! It may appear if you try to use unexisting chatroom.');
       watchdog_exception('slack', $e);
       return FALSE;
-    } catch (\GuzzleHttp\Exception\ConnectException $e) {
+    } catch (ConnectException $e) {
       $logger->error('Connection error! Something wrong with your connection. Message was\'nt sent.');
       watchdog_exception('slack', $e);
       return FALSE;
-    } catch (\GuzzleHttp\Exception\RequestException $e) {
+    } catch (RequestException $e) {
       $logger->error('Request error! It may appear if you entered the invalid Webhook value.');
       watchdog_exception('slack', $e);
       return FALSE;
