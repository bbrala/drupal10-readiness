modules/contrib/field_validation/field_validation.install
modules/contrib/field_validation/src/Form/FieldValidationRuleDeleteForm.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/WordsFieldValidationRule.php
modules/contrib/field_validation/field_validation.module
modules/contrib/field_validation/src/Annotation/FieldValidationRule.php
modules/contrib/field_validation/src/ConfigurableFieldValidationRuleBase.php
modules/contrib/field_validation/src/ConfigurableFieldValidationRuleInterface.php
modules/contrib/field_validation/src/Entity/FieldValidationRuleSet.php
modules/contrib/field_validation/src/Form/FieldValidationRuleEditForm.php
modules/contrib/field_validation/src/Form/FieldValidationRuleFormBase.php
modules/contrib/field_validation/src/Plugin/Validation/Constraint/FieldValidationConstraint.php
modules/contrib/field_validation/src/Plugin/Validation/Constraint/FieldValidationConstraintValidator.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/BlackListFieldValidationRuleTest.php
modules/contrib/field_validation/src/FieldValidationRuleBase.php
modules/contrib/field_validation/src/FieldValidationRuleInterface.php
modules/contrib/field_validation/src/FieldValidationRuleManager.php
modules/contrib/field_validation/src/Form/FieldValidationRuleSetAddForm.php
modules/contrib/field_validation/src/FieldValidationRulePluginCollection.php
modules/contrib/field_validation/src/FieldValidationRuleSetInterface.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/DateRangeFieldValidationRuleTest.php
modules/contrib/field_validation/src/FieldValidationRuleSetListBuilder.php
modules/contrib/field_validation/src/Form/FieldValidationRuleAddForm.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/EmailFieldValidationRuleTest.php
modules/contrib/field_validation/src/Form/FieldValidationRuleSetDeleteForm.php
modules/contrib/field_validation/src/Form/FieldValidationRuleSetEditForm.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/FieldValidationRuleBase.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/IntegerFieldValidationTest.php
modules/contrib/field_validation/src/Form/FieldValidationRuleSetFormBase.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/BlacklistFieldValidationRule.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/IpFieldValidationRuleTest.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/DateRangeFieldValidationRule.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/LengthFieldValidationRuleTest.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/EmailFieldValidationRule.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/MustBeEmptyFieldValidationRuleTest.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/IntegerFieldValidationRule.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/NumericFieldValidationRuleTest.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/PhoneFieldValidationRuleTest.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/IpFieldValidationRule.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/LengthFieldValidationRule.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/PlainTextFieldValidationRuleTest.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/MustBeEmptyFieldValidationRule.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/NumericFieldValidationRule.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/RegexFieldValidationRuleTest.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/UniqueFieldValidationRuleTest.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/OneOfSeveralValidationRule.php
modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/WordsFieldValidationRuleTest.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/PhoneFieldValidationRule.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/PlainTextFieldValidationRule.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/RegexFieldValidationRule.php
modules/contrib/field_validation/src/Plugin/FieldValidationRule/UniqueFieldValidationRule.php

17 files with changes
=====================

1) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/WordsFieldValidationRuleTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/UniqueFieldValidationRuleTest.php:62

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/RegexFieldValidationRuleTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/PlainTextFieldValidationRuleTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/PhoneFieldValidationRuleTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/NumericFieldValidationRuleTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->min = -255;
     $this->max = 255;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/MustBeEmptyFieldValidationRuleTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/LengthFieldValidationRuleTest.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->min = 10;
     $this->max = 32;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/IpFieldValidationRuleTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/IntegerFieldValidationTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->min = -255;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/FieldValidationRuleBase.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->nodeStorage = $this->entityTypeManager->getStorage('node');
     $this->ruleSetStorage = $this->entityTypeManager->getStorage(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/EmailFieldValidationRuleTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/DateRangeFieldValidationRuleTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/field_validation/tests/src/Kernel/Plugin/FieldValidationRule/BlackListFieldValidationRuleTest.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupTestArticle(self::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/field_validation/src/Plugin/FieldValidationRule/UniqueFieldValidationRule.php:86

    ---------- begin diff ----------
@@ @@
 	$delta = isset($params['delta']) ? $params['delta'] : '';
 	$column = $rule->getColumn();

-	
+
 	$settings = array();
 	if(!empty($rule) && !empty($rule->configuration)){
 	  $settings = $rule->configuration;
@@ @@
     if ($flag) {
       $entity = $items->getEntity();
       $entity_type_id = $entity->getEntityTypeId();	
-	  
+
 	  $query = \Drupal::entityQuery($entity_type_id);
 	  $query->addTag('field_validation');
 	  $query->accessCheck(FALSE);
@@ @@

 	  $id_key = $entity->getEntityType()->getKey('id');
 	  $query->condition($id_key, (int) $items->getEntity()->id(), '<>');
-	  
+
 	  $field_name = $items->getFieldDefinition()->getName();
-	  
+
 	  if(!empty($column)){
 	    $field_name = $field_name . '.' . $column;
 	  }
 	  $query->condition($field_name, $value);
-	  
+
 	  $count = $query->range(0, 1)
         ->count()
         ->execute();
@@ @@
     if (!$flag) {
       $context->addViolation($rule->getErrorMessage());
     }	
-	
+
     //return true;
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


16) modules/contrib/field_validation/src/Plugin/FieldValidationRule/IntegerFieldValidationRule.php:92

    ---------- begin diff ----------
@@ @@
 	    $max = $settings['max'];
         $options['options']['max_range'] = $max;
       }  
-  
+
       if (FALSE === filter_var($value, FILTER_VALIDATE_INT, $options)) {
         $context->addViolation($rule->getErrorMessage());
       }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


17) modules/contrib/field_validation/src/Form/FieldValidationRuleSetAddForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\field_validation\Form;

+use Drupal\Core\Entity\ContentEntityTypeInterface;
 use Drupal\Core\Form\FormStateInterface;

 /**
@@ @@

 	foreach($entity_types as $key => $entitytype){

-	  if($entitytype instanceof \Drupal\Core\Entity\ContentEntityTypeInterface){
+	  if($entitytype instanceof ContentEntityTypeInterface){
 	    $entity_type_options[$key] = $entitytype->getLabel();
 	  }
 	  if($key =='block_content'){
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 17 files have been changed by Rector                                      

