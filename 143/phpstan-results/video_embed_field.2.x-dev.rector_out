modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/src/Commands/VemCommands.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Plugin/CKEditorPlugin/VideoEmbedWysiwyg.php
modules/contrib/video_embed_field/src/Plugin/migrate/field/VideoEmbedField.php
modules/contrib/video_embed_field/tests/src/FunctionalJavascript/LazyLoadFormatterTest.php
modules/contrib/video_embed_field/src/Plugin/video_embed_field/Provider/Vimeo.php
modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/src/VemMigrate.php
modules/contrib/video_embed_field/src/Plugin/video_embed_field/Provider/YouTube.php
modules/contrib/video_embed_field/src/Plugin/video_embed_field/Provider/YouTubePlaylist.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Plugin/Filter/VideoEmbedWysiwyg.php
modules/contrib/video_embed_field/src/ProviderManager.php
modules/contrib/video_embed_field/tests/src/Kernel/ConstraintTest.php
modules/contrib/video_embed_field/src/ProviderManagerInterface.php
modules/contrib/video_embed_field/src/ProviderPluginBase.php
modules/contrib/video_embed_field/tests/src/Kernel/Drupal6EmfieldMigrationTest.php
modules/contrib/video_embed_field/tests/src/Kernel/Drupal7MigrationTest.php
modules/contrib/video_embed_field/src/ProviderPluginInterface.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/Functional/TextFormatConfigurationTest.php
modules/contrib/video_embed_field/tests/modules/video_embed_field_mock_provider/src/Plugin/video_embed_field/Provider/MockProvider.php
modules/contrib/video_embed_field/tests/src/Functional/AdminUserTrait.php
modules/contrib/video_embed_field/tests/src/Functional/AutoplayPermissionTest.php
modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/tests/src/Functional/oEmbedUpdateTest.php
modules/contrib/video_embed_field/tests/src/Kernel/EntityLoadTrait.php
modules/contrib/video_embed_field/tests/src/Kernel/FieldOutputTest.php
modules/contrib/video_embed_field/tests/src/Functional/EntityDisplaySetupTrait.php
modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/vem_migrate_oembed.drush.inc
modules/contrib/video_embed_field/modules/video_embed_media/src/Plugin/media/Source/VideoEmbedField.php
modules/contrib/video_embed_field/tests/src/Functional/FieldConfigurationTest.php
modules/contrib/video_embed_field/tests/src/Kernel/FormatterDependenciesTest.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/FunctionalJavascript/EmbedDialogTest.php
modules/contrib/video_embed_field/tests/src/Functional/FormatterConfigurationTest.php
modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Functional/BundleTest.php
modules/contrib/video_embed_field/tests/src/Kernel/KernelTestBase.php
modules/contrib/video_embed_field/tests/src/Functional/InstallationTest.php
modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Kernel/DefaultNameTest.php
modules/contrib/video_embed_field/tests/src/Kernel/MockHttpClient.php
modules/contrib/video_embed_field/tests/src/Kernel/StripWhitespaceTrait.php
modules/contrib/video_embed_field/tests/src/Kernel/VideoEmbedIFrameTest.php
modules/contrib/video_embed_field/tests/src/Unit/ProviderManagerTest.php
modules/contrib/video_embed_field/tests/src/Functional/WidgetTest.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/Kernel/FilterTest.php
modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Kernel/ProvidedFieldsTest.php
modules/contrib/video_embed_field/tests/src/FunctionalJavascript/ColorboxFormatterTest.php
modules/contrib/video_embed_field/tests/src/Unit/ProviderUrlParseTest.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/video_embed_wysiwyg.module
modules/contrib/video_embed_field/modules/video_embed_media/video_embed_media.install
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Access/FilterInUse.php
modules/contrib/video_embed_field/src/Annotation/VideoEmbedProvider.php
modules/contrib/video_embed_field/src/Element/VideoEmbedIFrame.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Form/VideoEmbedDialog.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/Colorbox.php
modules/contrib/video_embed_field/video_embed_field.api.php
modules/contrib/video_embed_field/video_embed_field.module
modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/LazyLoad.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/Thumbnail.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/Video.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldType/VideoEmbedField.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldWidget/VideoTextfield.php
modules/contrib/video_embed_field/src/Plugin/Validation/Constraint/VideoEmbedConstraint.php
modules/contrib/video_embed_field/src/Plugin/Validation/Constraint/VideoEmbedConstraintValidator.php
modules/contrib/video_embed_field/src/Plugin/migrate/field/EmvideoField.php

19 files with changes
=====================

1) modules/contrib/video_embed_field/tests/src/FunctionalJavascript/ColorboxFormatterTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityDisplays();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/video_embed_field/tests/src/Functional/InstallationTest.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->createAdminUser());
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/video_embed_field/tests/src/Functional/FormatterConfigurationTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->createAdminUser());
     $this->setupEntityDisplays();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/video_embed_field/tests/src/Unit/ProviderManagerTest.php:101

    ---------- begin diff ----------
@@ @@
    */
   protected function getManagerMock() {
     $definitions = $this->mockProviders;
-    $manager = $this->getMockBuilder('Drupal\video_embed_field\ProviderManager')
-      ->disableOriginalConstructor()
-      ->setMethods(['getDefinitions', 'getDefinition', 'createInstance'])
-      ->getMock();
+    $manager = $this->createMock('Drupal\video_embed_field\ProviderManager');
     $manager
       ->method('getDefinitions')
       ->willReturn($definitions);
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/video_embed_field/tests/src/Kernel/KernelTestBase.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema($this->entityTypeId);
@@ @@
     $this->container->set('http_client', new MockHttpClient());

     // Shim in a service required from the colorbox module.
-    $colorbox_mock = $this->getMockBuilder('ColorboxAttachment')->setMethods(['attach'])->getMock();
+    $colorbox_mock = $this->createMock('ColorboxAttachment');
     $this->container->set('colorbox.attachment', $colorbox_mock);
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/video_embed_field/tests/src/Kernel/FormatterDependenciesTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->style = ImageStyle::create(['name' => 'style_foo', 'label' => $this->randomString()]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/video_embed_field/tests/src/Kernel/Drupal7MigrationTest.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('node');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/video_embed_field/tests/src/Kernel/ConstraintTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/video_embed_field/tests/src/FunctionalJavascript/LazyLoadFormatterTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityDisplays();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/video_embed_field/modules/video_embed_media/video_embed_media.install:13

    ---------- begin diff ----------
@@ @@
   /** @var \Drupal\Core\File\FileSystemInterface $file_system */
   $file_system = \Drupal::service('file_system');
   // Copy the video icons into the right place.
-  $icon_folder = drupal_get_path('module', 'video_embed_media') . '/images/icons';
+  $icon_folder = \Drupal::service('extension.list.module')->getPath('video_embed_media') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
   $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


11) modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Kernel/ProvidedFieldsTest.php:113

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->entityType = $this->createMediaType('video_embed_field');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Kernel/DefaultNameTest.php:72

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['video_embed_field', 'video_embed_media']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Functional/BundleTest.php:62

    ---------- begin diff ----------
@@ @@
       'field_media_video_embed_field[0][value]' => 'https://www.youtube.com/watch?v=XgYu7-DQjDQ',
     ], 'Save');
     // We should see the video thumbnail on the media page.
-    $this->assertContains('video_thumbnails/XgYu7-DQjDQ.jpg', $this->getSession()->getPage()->getHtml());
+    $this->assertStringContainsString('video_thumbnails/XgYu7-DQjDQ.jpg', $this->getSession()->getPage()->getHtml());
   }

 }
    ----------- end diff -----------

Applied rules:
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/tests/src/Functional/oEmbedUpdateTest.php:30

    ---------- begin diff ----------
@@ @@
   public function testOEmbedUpdate() {

     $mediaType = $this->createMediaType('video_embed_field');
-    $this->assertEqual($mediaType->getSource()->getPluginId(), 'video_embed_field');
+    $this->assertEquals($mediaType->getSource()->getPluginId(), 'video_embed_field');

     $sourceField = $mediaType->getSource()->getSourceFieldDefinition($mediaType);
-    $this->assertEqual($sourceField->getType(), 'video_embed_field');
+    $this->assertEquals($sourceField->getType(), 'video_embed_field');

     /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
     $display_repository = $this->container->get('entity_display.repository');
@@ @@
     $formDisplay = $display_repository->getFormDisplay('media', $mediaType->id());
     $formField = $formDisplay->getComponent($sourceField->getName());

-    $this->assertEqual($formField['type'], 'video_embed_field_textfield');
+    $this->assertEquals($formField['type'], 'video_embed_field_textfield');

     /** @var \Drupal\vem_migrate_oembed\VemMigrate $vemService */
     $vemService = \Drupal::service('vem_migrate_oembed.migrate');
@@ @@

     /** @var \Drupal\media\Entity\MediaType $mediaType */
     $mediaType = MediaType::load($mediaType->id());
-    $this->assertEqual($mediaType->getSource()->getPluginId(), 'oembed:video');
+    $this->assertEquals($mediaType->getSource()->getPluginId(), 'oembed:video');

     $sourceField = $mediaType->getSource()->getSourceFieldDefinition($mediaType);
-    $this->assertEqual($sourceField->getType(), 'string');
+    $this->assertEquals($sourceField->getType(), 'string');

     $formDisplay = $display_repository->getFormDisplay('media', $mediaType->id());
     $formField = $formDisplay->getComponent($sourceField->getName());

-    $this->assertEqual($formField['type'], 'oembed_textfield');
+    $this->assertEquals($formField['type'], 'oembed_textfield');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


15) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/video_embed_wysiwyg.module:14

    ---------- begin diff ----------
@@ @@
  * Implements hook_ckeditor_css_alter().
  */
 function video_embed_wysiwyg_ckeditor_css_alter(array &$css, Editor $editor) {
-  $css[] = drupal_get_path('module', 'video_embed_wysiwyg') . '/plugin/plugin.css';
+  $css[] = \Drupal::service('extension.list.module')->getPath('video_embed_wysiwyg') . '/plugin/plugin.css';
 }

 /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


16) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/Kernel/FilterTest.php:103

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->filter = FilterFormat::create([
       'format' => 'test_format',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/FunctionalJavascript/EmbedDialogTest.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->adminUser = $this->drupalCreateUser(array_keys($this->container->get('user.permissions')->getPermissions()));
     $this->drupalLogin($this->adminUser);
@@ @@
     $this->find('button.form-submit')->click();
     $this->assertSession()->assertWaitOnAjaxRequest();
     $this->assertSession()->pageTextContains('Could not find a video provider to handle the given URL.');
-    $this->assertContains('http://example.com/', $this->getSession()->getPage()->getHtml());
+    $this->assertStringContainsString('http://example.com/', $this->getSession()->getPage()->getHtml());

     // Submit a valid URL.
     $this->find('input[name="video_url"]')->setValue('https://www.youtube.com/watch?v=iaf3Sl2r3jE&t=1553s');
    ----------- end diff -----------

Applied rules:
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/Functional/TextFormatConfigurationTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalLogin($this->createAdminUser());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Plugin/CKEditorPlugin/VideoEmbedWysiwyg.php:23

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'video_embed_wysiwyg') . '/plugin/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('video_embed_wysiwyg') . '/plugin/plugin.js';
   }

   /**
@@ @@
     return [
       'video_embed' => [
         'label' => $this->t('Video Embed'),
-        'image' => drupal_get_path('module', 'video_embed_wysiwyg') . '/plugin/icon.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('video_embed_wysiwyg') . '/plugin/icon.png',
       ],
     ];
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 19 files have been changed by Rector                                      

