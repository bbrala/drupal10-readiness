modules/contrib/block_visibility_groups/block_visibility_groups.install
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Plugin/ConditionCreator/RolesConditionCreator.php
modules/contrib/block_visibility_groups/src/Form/ConditionEditForm.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Plugin/ConditionCreator/RouteConditionCreator.php
modules/contrib/block_visibility_groups/block_visibility_groups.module
modules/contrib/block_visibility_groups/src/Form/ConditionFormBase.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Plugin/ConditionCreatorBase.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Plugin/ConditionCreatorInterface.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Tests/GroupListerTest.php
modules/contrib/block_visibility_groups/src/BlockVisibilityGroupInterface.php
modules/contrib/block_visibility_groups/src/BlockVisibilityGroupedListBuilder.php
modules/contrib/block_visibility_groups/block_visibility_groups.post_update.php
modules/contrib/block_visibility_groups/src/GroupEvaluator.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Annotation/ConditionCreator.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/ConditionCreatorManager.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Controller/GroupLister.php
modules/contrib/block_visibility_groups/src/GroupEvaluatorInterface.php
modules/contrib/block_visibility_groups/src/Plugin/Condition/ConditionGroup.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Form/ConditionCreatorForm.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/GroupInfo.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/GroupInfoInterface.php
modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Plugin/ConditionCreator/NodeTypeConditionCreator.php
modules/contrib/block_visibility_groups/tests/src/Functional/BlockVisibilityGroupsTestBase.php
modules/contrib/block_visibility_groups/src/BlockVisibilityLister.php
modules/contrib/block_visibility_groups/tests/src/Functional/BlockVisibilityGroupsUiTest.php
modules/contrib/block_visibility_groups/src/ConditionRedirectTrait.php
modules/contrib/block_visibility_groups/src/ConditionsSetFormTrait.php
modules/contrib/block_visibility_groups/src/Controller/BlockLibraryGroupsController.php
modules/contrib/block_visibility_groups/src/Controller/BlockVisibilityGroupController.php
modules/contrib/block_visibility_groups/src/Controller/BlockVisibilityGroupListBuilder.php
modules/contrib/block_visibility_groups/src/Entity/BlockVisibilityGroup.php
modules/contrib/block_visibility_groups/src/Form/BlockVisibilityGroupDeleteForm.php
modules/contrib/block_visibility_groups/src/Form/BlockVisibilityGroupForm.php
modules/contrib/block_visibility_groups/src/Form/ConditionAddForm.php
modules/contrib/block_visibility_groups/src/Form/ConditionDeleteForm.php
modules/contrib/block_visibility_groups/tests/src/Functional/VisibilityTest.php
modules/contrib/block_visibility_groups/tests/src/FunctionalJavascript/BlockVisibilityGroupsTest.php
modules/contrib/block_visibility_groups/tests/src/FunctionalJavascript/BlockVisibilityGroupsUiTest.php
modules/contrib/block_visibility_groups/tests/src/Traits/BlockVisibilityGroupTrait.php

3 files with changes
====================

1) modules/contrib/block_visibility_groups/block_visibility_groups_admin/src/Tests/GroupListerTest.php:33

    ---------- begin diff ----------
@@ @@
    */
   public function testGroupLister() {
     // Check that the basic functions of module block_visibility_groups_admin.
-    $this->assertEqual(TRUE, TRUE, 'Test Unit Generated via App Console.');
+    $this->assertEquals(TRUE, TRUE, 'Test Unit Generated via App Console.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/block_visibility_groups/tests/src/Functional/BlockVisibilityGroupsUiTest.php:32

    ---------- begin diff ----------
@@ @@

     $this->drupalGet('admin/structure/block/manage/' . $block->id());
     $selected = $this->assertSession()->elementExists('css', '#edit-visibility-condition-group-block-visibility-group option:selected');
-    $this->assertEqual($selected->getText(), $group->label());
+    $this->assertEquals($selected->getText(), $group->label());

     $block = \Drupal::service('entity_type.manager')
       ->getStorage('block')
@@ @@
       ->load($block->id());

     $actual = $block->getVisibility();
-    $this->assertEqual($actual['condition_group']['block_visibility_group'], $group->id());
+    $this->assertEquals($actual['condition_group']['block_visibility_group'], $group->id());
   }

   /**
@@ @@
       'label' => $this->randomMachineName(),
       'id' => 'test_block_visibility_groups',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Block visibility created successfully or not.
     $this->assertPageTextContains('Saved the @group Block Visibility Group.', ['@group' => $edit['label']]);
@@ @@
       ->getStorage('block_visibility_group')
       ->load($edit['id']);

-    $this->assertEqual($block_visibility_group->id(), $edit['id']);
-    $this->assertEqual($block_visibility_group->label(), $edit['label']);
+    $this->assertEquals($block_visibility_group->id(), $edit['id']);
+    $this->assertEquals($block_visibility_group->label(), $edit['label']);
   }

   /**
@@ @@
     $this->drupalGet('admin/structure/block/manage/' . $block->id());
     $tabs = $this->assertSession()->elementExists('css', "div[data-drupal-selector=\"edit-visibility-tabs\"]");
     $items = $tabs->findAll('css', 'summary');
-    $this->assertEqual('Condition Group', $items[0]->getText());
+    $this->assertEquals('Condition Group', $items[0]->getText());
     $this->assertSession()->fieldValueEquals('Block Visibility Groups', '');

     $group = $this->createGroup();
@@ @@
     $ul->clickLink('Manage Blocks');

     $selected = $this->assertSession()->elementExists('css', '#block-admin-display-form option:selected');
-    $this->assertEqual($group->label(), $selected->getText());
+    $this->assertEquals($group->label(), $selected->getText());

     // Find the block's row and visit it's configuration page.
     $row = $this->assertSession()->elementExists('css', "tr[data-drupal-selector=\"edit-blocks-{$block->id()}\"]");
@@ @@
     $row->clickLink('Configure');

     $selected = $this->assertSession()->elementExists('css', '#edit-visibility-condition-group-block-visibility-group option:selected');
-    $this->assertEqual($selected->getText(), $group->label());
+    $this->assertEquals($selected->getText(), $group->label());

     $this->getSession()->getPage()->pressButton('Save block');

@@ @@
     $tabs = $this->assertSession()->elementExists('css', "div[data-drupal-selector=\"edit-visibility-tabs\"]");
     $items = $tabs->findAll('css', 'summary');
     $this->assertCount(1, $items);
-    $this->assertEqual('Condition Group', $items[0]->getText());
+    $this->assertEquals('Condition Group', $items[0]->getText());
     $item = $tabs->find('css', '.form-item-visibility-condition-group-block-visibility-group');
     $label = $item->find('css', 'label');
-    $this->assertEqual('Block Visibility Groups', $label->getText());
+    $this->assertEquals('Block Visibility Groups', $label->getText());
     $this->assertSession()->fieldValueEquals('Block Visibility Groups', $group->id());
   }

@@ @@
     $row = $this->assertSession()->elementExists('css', "tr[data-drupal-selector=\"edit-conditions-$condition_id\"]");
     $cells = $row->findAll('css', 'td');
     $this->assertCount(3, $cells);
-    $this->assertEqual($expected['label'], $cells[0]->getText());
-    $this->assertEqual($expected['description'], $cells[1]->getText());
+    $this->assertEquals($expected['label'], $cells[0]->getText());
+    $this->assertEquals($expected['description'], $cells[1]->getText());
     $this->assertSession()->elementExists('css', 'ul.dropbutton', $row);

     return $row;
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/block_visibility_groups/tests/src/Functional/BlockVisibilityGroupsTestBase.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create and login with user who can administer blocks.
     $this->blockVisibilityGroupsUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

