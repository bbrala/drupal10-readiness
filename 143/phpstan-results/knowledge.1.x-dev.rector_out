modules/contrib/knowledge/knowledge.api.php
modules/contrib/knowledge/knowledge.module
modules/contrib/knowledge/modules/knowledge_external_incident/src/Controller/ExternalIncidentController.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Form/ExternalIncidentRevisionRevertTranslationForm.php
modules/contrib/knowledge/modules/knowledge_incident/src/Entity/IncidentTypeInterface.php
modules/contrib/knowledge/modules/knowledge_incident/src/Entity/IncidentViewsData.php
modules/contrib/knowledge/src/Controller/KnowledgeController.php
modules/contrib/knowledge/src/KnowledgeStorage.php
modules/contrib/knowledge/src/Plugin/views/argument/UserUid.php
modules/contrib/knowledge/tests/modules/knowledge_base_field_test/src/Entity/KnowledgeTestBaseField.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeAccessTest.php
modules/contrib/knowledge/modules/knowledge_incident/src/Form/IncidentDeleteForm.php
modules/contrib/knowledge/tests/src/Functional/KnowledgePreviewTest.php
modules/contrib/knowledge/knowledge.install
modules/contrib/knowledge/modules/knowledge_incident/src/Form/IncidentForm.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeXmlAnonTest.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeOrphanTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Form/ExternalIncidentSettingsForm.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Form/ExternalIncidentTypeDeleteForm.php
modules/contrib/knowledge/modules/knowledge_incident/src/Form/IncidentRevisionDeleteForm.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Form/ExternalIncidentTypeForm.php
modules/contrib/knowledge/tests/modules/knowledge_display_configurable_test/knowledge_display_configurable_test.module
modules/contrib/knowledge/modules/knowledge_external_incident/src/Plugin/EntityReferenceSelection/ExternalIncidentSelection.php
modules/contrib/knowledge/tests/modules/knowledge_empty_title_test/knowledge_empty_title_test.module
modules/contrib/knowledge/tests/modules/knowledge_test/knowledge_test.module
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeXmlBasicAuthTest.php
modules/contrib/knowledge/src/KnowledgeStorageInterface.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeXmlCookieTest.php
modules/contrib/knowledge/src/KnowledgeStorageSchema.php
modules/contrib/knowledge/tests/src/Functional/Views/DefaultViewRecentKnowledgesTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/tests/src/Functional/LoadTest.php
modules/contrib/knowledge/modules/knowledge_incident/src/Form/IncidentRevisionRevertForm.php
modules/contrib/knowledge/src/Plugin/views/field/EntityLink.php
modules/contrib/knowledge/tests/modules/knowledge_test/src/Controller/KnowledgeTestController.php
modules/contrib/knowledge/src/KnowledgeTranslationHandler.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeStringIdEntitiesTest.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeUninstallTest.php
modules/contrib/knowledge/src/Plugin/views/field/KnowledgeBulkForm.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeAdminTest.php
modules/contrib/knowledge/modules/knowledge_incident/incident.page.inc
modules/contrib/knowledge/src/Plugin/views/field/KnowledgeedEntity.php
modules/contrib/knowledge/modules/knowledge_incident/knowledge_incident.module
modules/contrib/knowledge/src/KnowledgeTypeForm.php
modules/contrib/knowledge/modules/knowledge_incident/src/Form/IncidentRevisionRevertTranslationForm.php
modules/contrib/knowledge/modules/knowledge_incident/src/Controller/IncidentController.php
modules/contrib/knowledge/src/Plugin/views/field/KnowledgeedIncident.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeValidationTest.php
modules/contrib/knowledge/src/Plugin/views/field/LastTimestamp.php
modules/contrib/knowledge/src/Plugin/views/field/LinkApprove.php
modules/contrib/knowledge/src/Plugin/views/field/LinkReply.php
modules/contrib/knowledge/tests/src/Functional/Views/KnowledgeAdminTest.php
modules/contrib/knowledge/modules/knowledge_incident/src/Form/IncidentSettingsForm.php
modules/contrib/knowledge/src/Plugin/views/field/NodeNewKnowledge.php
modules/contrib/knowledge/modules/knowledge_incident/src/Form/IncidentTypeDeleteForm.php
modules/contrib/knowledge/modules/knowledge_incident/src/Form/IncidentTypeForm.php
modules/contrib/knowledge/src/Entity/Knowledge.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeRssTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeAnonymousTest.php
modules/contrib/knowledge/src/KnowledgeTypeInterface.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Entity/ExternalIncident.php
modules/contrib/knowledge/src/KnowledgeTypeListBuilder.php
modules/contrib/knowledge/modules/knowledge_incident/src/IncidentAccessControlHandler.php
modules/contrib/knowledge/src/KnowledgeViewBuilder.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeStatisticsTest.php
modules/contrib/knowledge/tests/src/Kernel/Migrate/MigrateKnowledgeStubTest.php
modules/contrib/knowledge/modules/knowledge_incident/src/Entity/Incident.php
modules/contrib/knowledge/modules/knowledge_incident/src/IncidentHtmlRouteProvider.php
modules/contrib/knowledge/tests/src/Kernel/Views/FilterAndArgumentUserUidTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeBlockTest.php
modules/contrib/knowledge/src/Plugin/views/field/StatisticsLastUpdated.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeStatusFieldAccessTest.php
modules/contrib/knowledge/src/Plugin/views/filter/NodeKnowledge.php
modules/contrib/knowledge/src/KnowledgeViewsData.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeTestBase.php
modules/contrib/knowledge/modules/knowledge_incident/src/IncidentListBuilder.php
modules/contrib/knowledge/src/Plugin/views/filter/StatisticsLastUpdated.php
modules/contrib/knowledge/knowledge.post_update.php
modules/contrib/knowledge/knowledge.tokens.inc
modules/contrib/knowledge/modules/knowledge_incident/src/IncidentPermissions.php
modules/contrib/knowledge/src/Plugin/views/filter/UserUid.php
modules/contrib/knowledge/src/Entity/KnowledgeType.php
modules/contrib/knowledge/modules/knowledge_incident/src/IncidentStorage.php
modules/contrib/knowledge/src/Form/ConfirmDeleteMultiple.php
modules/contrib/knowledge/src/Plugin/views/row/Rss.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Entity/ExternalIncidentInterface.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeBookTest.php
modules/contrib/knowledge/src/Form/DeleteForm.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Entity/ExternalIncidentType.php
modules/contrib/knowledge/modules/knowledge_incident/src/Entity/IncidentInterface.php
modules/contrib/knowledge/tests/src/Kernel/Views/KnowledgeAdminViewTest.php
modules/contrib/knowledge/modules/knowledge_incident/src/Entity/IncidentType.php
modules/contrib/knowledge/knowledge.views.inc
modules/contrib/knowledge/modules/knowledge_external_incident/src/Entity/ExternalIncidentTypeInterface.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeCSSTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Entity/ExternalIncidentViewsData.php
modules/contrib/knowledge/src/Form/KnowledgeAdminOverview.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/ExternalIncidentAccessControlHandler.php
modules/contrib/knowledge/modules/knowledge_incident/src/IncidentStorageInterface.php
modules/contrib/knowledge/modules/knowledge_incident/src/IncidentTranslationHandler.php
modules/contrib/knowledge/modules/knowledge_external_incident/external_incident.page.inc
modules/contrib/knowledge/modules/knowledge_external_incident/knowledge_external_incident.module
modules/contrib/knowledge/modules/knowledge_incident/src/IncidentTypeHtmlRouteProvider.php
modules/contrib/knowledge/modules/knowledge_incident/src/IncidentTypeListBuilder.php
modules/contrib/knowledge/src/Plugin/views/sort/StatisticsLastUpdated.php
modules/contrib/knowledge/tests/src/Functional/Views/KnowledgeEditTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/ExternalIncidentHtmlRouteProvider.php
modules/contrib/knowledge/tests/src/Functional/Views/KnowledgeFieldFilterTest.php
modules/contrib/knowledge/src/Plugin/views/sort/Thread.php
modules/contrib/knowledge/src/Plugin/views/wizard/Knowledge.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeCacheTagsTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeTitleTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/ExternalIncidentListBuilder.php
modules/contrib/knowledge/src/Plugin/Action/UnpublishByKeywordKnowledge.php
modules/contrib/knowledge/src/Tests/KnowledgeTestTrait.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/ExternalIncidentPermissions.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/ExternalIncidentStorage.php
modules/contrib/knowledge/tests/src/Functional/Views/KnowledgeOperationsTest.php
modules/contrib/knowledge/tests/src/Kernel/Views/KnowledgeFieldNameTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeTokenReplaceTest.php
modules/contrib/knowledge/tests/src/Functional/Views/KnowledgeRowTest.php
modules/contrib/knowledge/src/Plugin/EntityReferenceSelection/KnowledgeSelection.php
modules/contrib/knowledge/tests/src/Functional/Views/KnowledgeTestBase.php
modules/contrib/knowledge/src/Form/KnowledgeTypeDeleteForm.php
modules/contrib/knowledge/src/Plugin/Field/FieldFormatter/AuthorNameFormatter.php
modules/contrib/knowledge/tests/src/Functional/Views/NodeKnowledgesTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/ExternalIncidentStorageInterface.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/ExternalIncidentTranslationHandler.php
modules/contrib/knowledge/tests/src/Functional/Views/RowRssTest.php
modules/contrib/knowledge/src/Plugin/Field/FieldFormatter/KnowledgeDefaultFormatter.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/ExternalIncidentTypeHtmlRouteProvider.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeDisplayConfigurableTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/ExternalIncidentTypeListBuilder.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Form/ExternalIncidentAddForm.php
modules/contrib/knowledge/src/KnowledgeAccessControlHandler.php
modules/contrib/knowledge/tests/src/Functional/Views/WizardTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeEntityTest.php
modules/contrib/knowledge/tests/src/Kernel/Views/KnowledgeLinksTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Form/ExternalIncidentDeleteForm.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeFieldsTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Form/ExternalIncidentForm.php
modules/contrib/knowledge/src/KnowledgeBreadcrumbBuilder.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeTranslationUITest.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeActionsTest.php
modules/contrib/knowledge/src/Plugin/Field/FieldFormatter/KnowledgePermalinkFormatter.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Form/ExternalIncidentRevisionDeleteForm.php
modules/contrib/knowledge/src/Plugin/Field/FieldType/KnowledgeItem.php
modules/contrib/knowledge/src/KnowledgeFieldItemList.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeInterfaceTest.php
modules/contrib/knowledge/modules/knowledge_external_incident/src/Form/ExternalIncidentRevisionRevertForm.php
modules/contrib/knowledge/src/KnowledgeForm.php
modules/contrib/knowledge/tests/src/Kernel/Views/KnowledgeUserNameTest.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeBaseFieldTest.php
modules/contrib/knowledge/src/Plugin/Field/FieldType/KnowledgeItemInterface.php
modules/contrib/knowledge/src/Plugin/Field/FieldWidget/KnowledgeWidget.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeBundlesTest.php
modules/contrib/knowledge/tests/src/Kernel/Views/KnowledgeViewsFieldAccessTest.php
modules/contrib/knowledge/src/Plugin/Menu/LocalTask/UnapprovedKnowledge.php
modules/contrib/knowledge/src/Plugin/migrate/destination/EntityKnowledge.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeDefaultFormatterCacheTagsTest.php
modules/contrib/knowledge/tests/src/Kernel/Views/KnowledgeViewsKernelTestBase.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeTypeTest.php
modules/contrib/knowledge/src/Plugin/migrate/destination/EntityKnowledgeType.php
modules/contrib/knowledge/tests/src/Unit/KnowledgeLinkBuilderTest.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeFieldAccessTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeJsonAnonTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeLanguageTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeJsonBasicAuthTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeJsonCookieTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeResourceTestBase.php
modules/contrib/knowledge/src/KnowledgeInterface.php
modules/contrib/knowledge/src/KnowledgeLazyBuilders.php
modules/contrib/knowledge/src/KnowledgeLinkBuilder.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeIntegrationTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeLinksAlterTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeLinksTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeTypeJsonAnonTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeTypeJsonBasicAuthTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeNewIndicatorTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeTypeJsonCookieTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeTypeResourceTestBase.php
modules/contrib/knowledge/tests/src/Unit/KnowledgeManagerTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeTypeXmlAnonTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeTypeXmlBasicAuthTest.php
modules/contrib/knowledge/tests/src/Functional/Rest/KnowledgeTypeXmlCookieTest.php
modules/contrib/knowledge/tests/src/Kernel/KnowledgeItemTest.php
modules/contrib/knowledge/src/KnowledgeLinkBuilderInterface.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeNodeAccessTest.php
modules/contrib/knowledge/src/KnowledgeManager.php
modules/contrib/knowledge/tests/src/Unit/KnowledgeStatisticsUnitTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeNodeChangesTest.php
modules/contrib/knowledge/tests/src/Functional/KnowledgeNonNodeTest.php
modules/contrib/knowledge/src/KnowledgeManagerInterface.php
modules/contrib/knowledge/src/KnowledgeStatistics.php
modules/contrib/knowledge/tests/src/Unit/Plugin/views/field/KnowledgeBulkFormTest.php
modules/contrib/knowledge/src/KnowledgeStatisticsInterface.php
modules/contrib/knowledge/tests/src/Functional/KnowledgePagerTest.php

15 files with changes
=====================

1) modules/contrib/knowledge/modules/knowledge_incident/src/Controller/IncidentController.php:123

    ---------- begin diff ----------
@@ @@
           ]));
         }
         else {
-          $link = $incident->link($date);
+          $link = $incident->toLink($date)->toString();
         }

         $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/knowledge/modules/knowledge_external_incident/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/knowledge/knowledge.module:36

    ---------- begin diff ----------
@@ @@
  *
  * @todo Remove when https://www.drupal.org/node/1029708 lands.
  */
-define('KNOWLEDGE_NEW_LIMIT', REQUEST_TIME - 30 * 24 * 60 * 60);
+define('KNOWLEDGE_NEW_LIMIT', \Drupal::time()->getRequestTime() - 30 * 24 * 60 * 60);

 /**
  * Implements hook_help().
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector


4) modules/contrib/knowledge/modules/knowledge_external_incident/src/Controller/ExternalIncidentController.php:123

    ---------- begin diff ----------
@@ @@
           ]));
         }
         else {
-          $link = $external_incident->link($date);
+          $link = $external_incident->toLink($date)->toString();
         }

         $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/knowledge/tests/src/Functional/KnowledgeTranslationUITest.php:173

    ---------- begin diff ----------
@@ @@
       $user = $this->drupalCreateUser();
       $values[$langcode] = [
         'uid' => $user->id(),
-        'created' => REQUEST_TIME - mt_rand(0, 1000),
+        'created' => \Drupal::time()->getRequestTime() - mt_rand(0, 1000),
       ];
       /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
       $date_formatter = $this->container->get('date.formatter');
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/knowledge/tests/src/Functional/KnowledgeTestBase.php:53

    ---------- begin diff ----------
@@ @@
    */
   protected $node;

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create an article content type only if it does not yet exist, so that
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/knowledge/tests/src/Functional/Views/KnowledgeTestBase.php:54

    ---------- begin diff ----------
@@ @@
    */
   protected $knowledge;

-  protected function setUp($import_test_views = TRUE, $modules = ['knowledge_test_views']) {
+  protected function setUp($import_test_views = TRUE, $modules = ['knowledge_test_views']): void {
     parent::setUp($import_test_views, $modules);

     // Add two users, create a node with the user1 as author and another node
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/knowledge/tests/src/Functional/Views/DefaultViewRecentKnowledgesTest.php:95

    ---------- begin diff ----------
@@ @@
       $knowledge->knowledge_body->format = 'full_html';

       // Ensure knowledge are sorted in ascending order.
-      $time = REQUEST_TIME + ($this->defaultDisplayResults - $i);
+      $time = \Drupal::time()->getRequestTime() + ($this->defaultDisplayResults - $i);
       $knowledge->setCreatedTime($time);
       $knowledge->changed->value = $time;
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/knowledge/tests/src/Unit/Plugin/views/field/KnowledgeBulkFormTest.php:59

    ---------- begin diff ----------
@@ @@

     $messenger = $this->createMock('Drupal\Core\Messenger\MessengerInterface');

-    $views_data = $this->getMockBuilder('Drupal\views\ViewsData')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $views_data = $this->createMock('Drupal\views\ViewsData');
     $views_data->expects($this->any())
       ->method('get')
       ->with('knowledge')
@@ @@
       ->with('base_table')
       ->will($this->returnValue('knowledge'));

-    $executable = $this->getMockBuilder('Drupal\views\ViewExecutable')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $executable = $this->createMock('Drupal\views\ViewExecutable');
     $executable->storage = $storage;

-    $display = $this->getMockBuilder('Drupal\views\Plugin\views\display\DisplayPluginBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $display = $this->createMock('Drupal\views\Plugin\views\display\DisplayPluginBase');

     $definition['title'] = '';
     $options = [];
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/knowledge/tests/src/Unit/KnowledgeStatisticsUnitTest.php:50

    ---------- begin diff ----------
@@ @@
    * Sets up required mocks and the KnowledgeStatistics service under test.
    */
   protected function setUp(): void {
-    $this->statement = $this->getMockBuilder('Drupal\sqlite\Driver\Database\sqlite\Statement')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->statement = $this->createMock('Drupal\sqlite\Driver\Database\sqlite\Statement');

     $this->statement->expects($this->any())
       ->method('fetchObject')
       ->willReturnCallback([$this, 'fetchObjectCallback']);

-    $this->select = $this->getMockBuilder('Drupal\Core\Database\Query\Select')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->select = $this->createMock('Drupal\Core\Database\Query\Select');

     $this->select->expects($this->any())
       ->method('fields')
@@ @@
       ->method('execute')
       ->will($this->returnValue($this->statement));

-    $this->database = $this->getMockBuilder('Drupal\Core\Database\Connection')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->database = $this->createMock('Drupal\Core\Database\Connection');

     $this->database->expects($this->once())
       ->method('select')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/knowledge/tests/src/Unit/KnowledgeManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\knowledge\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\knowledge\KnowledgeManager;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
@@ @@
  */
 class KnowledgeManagerTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Tests the getFields method.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/knowledge/tests/src/Kernel/Views/KnowledgeViewsKernelTestBase.php:38

    ---------- begin diff ----------
@@ @@
    */
   protected $userStorage;

-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp($import_test_views);

     ViewTestData::createTestViews(static::class, ['knowledge_test_views']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/knowledge/src/KnowledgeStatistics.php:131

    ---------- begin diff ----------
@@ @@
         $last_knowledge_uid = $this->currentUser->id();
       }
       // Default to REQUEST_TIME when entity does not have a changed property.
-      $last_knowledge_timestamp = REQUEST_TIME;
+      $last_knowledge_timestamp = \Drupal::time()->getRequestTime();
       // @todo Make knowledge statistics language aware and add some tests. See
       //   https://www.drupal.org/node/2318875
       if ($entity instanceof EntityChangedInterface) {
@@ @@
           'short_count' => 0,
           // Use the changed date of the entity if it's set, or default to
           // REQUEST_TIME.
-          'last_knowledge_timestamp' => ($entity instanceof EntityChangedInterface) ? $entity->getChangedTimeAcrossTranslations() : REQUEST_TIME,
+          'last_knowledge_timestamp' => ($entity instanceof EntityChangedInterface) ? $entity->getChangedTimeAcrossTranslations() : \Drupal::time()->getRequestTime(),
           'last_knowledge_uid' => $last_knowledge_uid,
         ])
         ->condition('entity_id', $knowledge->getKnowledgeedEntityId())
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector


14) modules/contrib/knowledge/src/KnowledgeForm.php:244

    ---------- begin diff ----------
@@ @@
       $knowledge->setCreatedTime($form_state->getValue('date')->getTimestamp());
     }
     else {
-      $knowledge->setCreatedTime(REQUEST_TIME);
+      $knowledge->setCreatedTime(\Drupal::time()->getRequestTime());
     }
     // Empty author ID should revert to anonymous.
     $author_id = $form_state->getValue('uid');
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


15) modules/contrib/knowledge/tests/src/Functional/KnowledgeBlockTest.php:46

    ---------- begin diff ----------
@@ @@
     // Add some test knowledge, with and without subjects. Because the 10 newest
     // knowledge should be shown by the block, we create 11 to test that behavior
     // below.
-    $timestamp = REQUEST_TIME;
+    $timestamp = \Drupal::time()->getRequestTime();
     for ($i = 0; $i < 11; ++$i) {
       $subject = ($i % 2) ? $this->randomMachineName() : '';
       $knowledge_links[$i] = $this->postKnowledge($this->node, $this->randomMachineName(), $subject);
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 15 files have been changed by Rector                                      

