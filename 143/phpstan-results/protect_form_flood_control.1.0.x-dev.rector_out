modules/contrib/protect_form_flood_control/protect_form_flood_control.module
modules/contrib/protect_form_flood_control/src/Form/ProtectFormFloodControlSettings.php
modules/contrib/protect_form_flood_control/src/Manager.php
modules/contrib/protect_form_flood_control/src/ManagerInterface.php
modules/contrib/protect_form_flood_control/tests/src/Functional/ProtectFormFloodControlFormTest.php

1 file with changes
===================

1) modules/contrib/protect_form_flood_control/tests/src/Functional/ProtectFormFloodControlFormTest.php:56

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     // Enable modules required for this test.
     parent::setUp();

@@ @@
     // Set up form and submit it.
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, $this->t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, $this->t('Create new account'));
     // Form should have been submitted successfully.
     $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');

     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, $this->t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, $this->t('Create new account'));
     // Form should have been submitted successfully.
     $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');

     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, $this->t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, $this->t('Create new account'));

     $window = \Drupal::service('date.formatter')->formatInterval(60);
     $this->assertSession()->pageTextContains("You cannot submit the form more than 2 times in $window. Please, try again later.");
@@ @@

     // Set up form and submit it.
     $edit["comment_body[0][value]"] = $comment;
-    $this->drupalPostForm('comment/reply/node/' . $this->node->id() . '/comment', $edit, $this->t('Save'));
+    $this->drupalGet('comment/reply/node/' . $this->node->id() . '/comment');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()->pageTextContains('Your comment has been queued for review');
+    $this->drupalGet('comment/reply/node/' . $this->node->id() . '/comment');

-    $this->drupalPostForm('comment/reply/node/' . $this->node->id() . '/comment', $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()->pageTextContains('Your comment has been queued for review');
+    $this->drupalGet('comment/reply/node/' . $this->node->id() . '/comment');

-    $this->drupalPostForm('comment/reply/node/' . $this->node->id() . '/comment', $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $window = \Drupal::service('date.formatter')->formatInterval(60);
     $this->assertSession()->pageTextContains("You cannot submit the form more than 2 times in $window. Please, try again later.");
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

