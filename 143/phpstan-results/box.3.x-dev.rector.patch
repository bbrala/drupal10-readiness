diff --git a/modules/insert_box/tests/src/Functional/BoxPlacementTest.php b/modules/insert_box/tests/src/Functional/BoxPlacementTest.php
index 850e52b..c919627 100644
--- a/modules/insert_box/tests/src/Functional/BoxPlacementTest.php
+++ b/modules/insert_box/tests/src/Functional/BoxPlacementTest.php
@@ -51,7 +51,7 @@ class BoxPlacementTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create admin user.
@@ -68,7 +68,8 @@ class BoxPlacementTest extends BrowserTestBase {
 
     // Add Slovak language.
     $edit = ['predefined_langcode' => 'sk'];
-    $this->drupalPostForm('admin/config/regional/language/add', $edit, t('Add language'));
+    $this->drupalGet('admin/config/regional/language/add');
+    $this->submitForm($edit, t('Add language'));
     $this->container->get('language_manager')->reset();
 
     // Add text format and add 'Insert box' filter.
diff --git a/tests/src/Functional/EntityTest.php b/tests/src/Functional/EntityTest.php
index 6a207eb..ddd06a3 100644
--- a/tests/src/Functional/EntityTest.php
+++ b/tests/src/Functional/EntityTest.php
@@ -44,7 +44,7 @@ class EntityTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->userAdmin = $this->drupalCreateUser([
       'access box overview',
@@ -74,9 +74,10 @@ class EntityTest extends BrowserTestBase {
     // Add box entity.
     $edit = [];
     $edit['title[0][value]'] = $box_label = $this->randomString();
-    $edit['machine_name[0][value]'] = $box_machine_name = Unicode::strtolower($this->randomMachineName());
+    $edit['machine_name[0][value]'] = $box_machine_name = mb_strtolower($this->randomMachineName());
     $edit['field_body[0][value]'] = $box_text = $this->randomString(50);
-    $this->drupalPostForm('box/add/default', $edit, t('Save'));
+    $this->drupalGet('box/add/default');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains(t('@type box %title has been created.', [
       '@type' => BoxType::load('default')->label(),
       '%title' => $box_label,
@@ -101,13 +102,15 @@ class EntityTest extends BrowserTestBase {
     $edit = [];
     $edit['title[0][value]'] = $box_label_updated = $this->randomString();
     $edit['field_body[0][value]'] = $box_text_new = $this->randomString(50);
-    $this->drupalPostForm("box/{$box_id}", $edit, t('Save'));
+    $this->drupalGet("box/{$box_id}");
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains(t('Box %title has been updated.', [
       '%title' => $box_label_updated,
     ]));
+    $this->drupalGet("box/{$box_id}/delete");
 
     // Delete box entity.
-    $this->drupalPostForm("box/{$box_id}/delete", [], t('Delete'));
+    $this->submitForm([], t('Delete'));
     $this->assertSession()->responseContains(t('The @entity-type %label has been deleted.', [
       '@entity-type' => 'box',
       '%label' => $box_label_updated,
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index e3e57e7..893bd81 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/tests/src/Functional/TypeTest.php b/tests/src/Functional/TypeTest.php
index dfaa50e..2ac85a9 100644
--- a/tests/src/Functional/TypeTest.php
+++ b/tests/src/Functional/TypeTest.php
@@ -36,7 +36,7 @@ class TypeTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer box entities']);
   }
@@ -54,9 +54,10 @@ class TypeTest extends BrowserTestBase {
     // Add box type.
     $edit = [];
     $edit['label'] = $box_type_label = $this->randomString();
-    $edit['id'] = $box_type_id = Unicode::strtolower($this->randomMachineName());
+    $edit['id'] = $box_type_id = mb_strtolower($this->randomMachineName());
     $edit['title_label'] = $this->randomString();
-    $this->drupalPostForm('admin/structure/box-types/add', $edit, t('Save'));
+    $this->drupalGet('admin/structure/box-types/add');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains(t('Created the %label Box type.', [
       '%label' => $box_type_label,
     ]));
@@ -70,9 +71,10 @@ class TypeTest extends BrowserTestBase {
     $this->assertSession()->pageTextContains($box_type_label);
     $this->drupalLogout();
     $this->drupalLogin($this->user);
+    $this->drupalGet("admin/structure/box-types/manage/{$box_type_id}/delete");
 
     // Delete box type.
-    $this->drupalPostForm("admin/structure/box-types/manage/{$box_type_id}/delete", [], t('Delete'));
+    $this->submitForm([], t('Delete'));
     $this->assertSession()->responseContains(t('The @entity-type %label has been deleted.', [
       '@entity-type' => 'box type',
       '%label' => $box_type_label,
diff --git a/tests/src/Kernel/BoxValidationTest.php b/tests/src/Kernel/BoxValidationTest.php
index 97c806e..7125338 100644
--- a/tests/src/Kernel/BoxValidationTest.php
+++ b/tests/src/Kernel/BoxValidationTest.php
@@ -25,7 +25,7 @@ class BoxValidationTest extends EntityKernelTestBase {
   /**
    * Set the default field storage backend for fields created during tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
    $this->installEntitySchema('box');
