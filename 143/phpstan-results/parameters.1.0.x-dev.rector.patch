diff --git a/modules/parameters_ui/src/Controller/ParametersUiController.php b/modules/parameters_ui/src/Controller/ParametersUiController.php
index 7d4b99e..be8101f 100644
--- a/modules/parameters_ui/src/Controller/ParametersUiController.php
+++ b/modules/parameters_ui/src/Controller/ParametersUiController.php
@@ -28,6 +28,10 @@ class ParametersUiController extends ControllerBase {
    * @var \Drupal\parameters\Plugin\ParameterManager
    */
   protected ParameterManager $parameterManager;
+  public function __construct(ParameterManager $parameterManager)
+  {
+      $this->parameterManager = $parameterManager;
+  }
 
   /**
    * {@inheritdoc}
@@ -36,7 +40,7 @@ class ParametersUiController extends ControllerBase {
     /** @var \Drupal\parameters_ui\Controller\ParametersUiController $instance */
     $instance = parent::create($container);
     $instance->setCollectionStorage($container->get('entity_type.manager')->getStorage(ParametersCollectionInterface::ENTITY_TYPE_ID));
-    $instance->setParameterManager($container->get(ParameterManager::SERVICE_NAME));
+    $instance->setParameterManager($this->parameterManager);
     return $instance;
   }
 
diff --git a/modules/parameters_ui/src/Form/ParametersCollectionForm.php b/modules/parameters_ui/src/Form/ParametersCollectionForm.php
index 28ecd7a..a24176c 100644
--- a/modules/parameters_ui/src/Form/ParametersCollectionForm.php
+++ b/modules/parameters_ui/src/Form/ParametersCollectionForm.php
@@ -32,16 +32,17 @@ class ParametersCollectionForm extends EntityForm {
    * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
    *   The route match.
    */
-  public function __construct(ParameterManager $parameter_manager, RouteMatchInterface $route_match) {
+  public function __construct(ParameterManager $parameter_manager, RouteMatchInterface $route_match, ParameterManager $parameterManager) {
     $this->parameterManager = $parameter_manager;
     $this->routeMatch = $route_match;
+    $this->parameterManager = $parameterManager;
   }
 
   /**
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    $instance = new static($container->get(ParameterManager::SERVICE_NAME), $container->get('current_route_match'));
+    $instance = new static($this->parameterManager, $container->get('current_route_match'));
     $instance->setEntityTypeManager($container->get('entity_type.manager'));
     $instance->setModuleHandler($container->get('module_handler'));
     $instance->setRedirectDestination($container->get('redirect.destination'));
diff --git a/src/Plugin/Parameter/Yaml.php b/src/Plugin/Parameter/Yaml.php
index 676e25f..04df959 100644
--- a/src/Plugin/Parameter/Yaml.php
+++ b/src/Plugin/Parameter/Yaml.php
@@ -30,6 +30,11 @@ class Yaml extends ParameterBase implements PropertyParameterInterface {
    * @var \Drupal\parameters\Plugin\ParameterManager
    */
   protected ParameterManager $parameterManager;
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, ParameterManager $parameterManager)
+  {
+      $this->parameterManager = $parameterManager;
+      parent::__construct($configuration, $plugin_id, $plugin_definition);
+  }
 
   /**
    * {@inheritdoc}
@@ -37,7 +42,7 @@ class Yaml extends ParameterBase implements PropertyParameterInterface {
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     /** @var \Drupal\parameters\Plugin\Parameter\Yaml $instance */
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
-    $instance->setParameterManager($container->get(ParameterManager::SERVICE_NAME));
+    $instance->setParameterManager($this->parameterManager);
     return $instance;
   }
 
