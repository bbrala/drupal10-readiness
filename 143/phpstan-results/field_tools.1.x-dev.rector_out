modules/contrib/field_tools/field_tools.admin.inc
modules/contrib/field_tools/src/Form/FieldBulkCloneForm.php
modules/contrib/field_tools/src/Form/FieldConfigCloneForm.php
modules/contrib/field_tools/src/Form/FieldStorageConfigDeleteForm.php
modules/contrib/field_tools/src/Plugin/Derivative/FieldToolsLocalTask.php
modules/contrib/field_tools/src/Routing/RouteSubscriber.php
modules/contrib/field_tools/field_tools.module
modules/contrib/field_tools/src/Controller/FieldGraph.php
modules/contrib/field_tools/src/Controller/FieldList.php
modules/contrib/field_tools/src/Controller/FieldListTrait.php
modules/contrib/field_tools/src/Controller/FieldReferencesList.php
modules/contrib/field_tools/src/DisplayCloner.php
modules/contrib/field_tools/src/DisplaySettingsCopier.php
modules/contrib/field_tools/src/EntityHandler/FieldStorageConfigAccess.php
modules/contrib/field_tools/src/FieldCloner.php
modules/contrib/field_tools/src/FieldToolsReferencesInfo.php
modules/contrib/field_tools/src/Form/BundleDestinationOptionsTrait.php
modules/contrib/field_tools/src/Form/ConfigFieldsExportToCodeForm.php
modules/contrib/field_tools/src/Form/EntityDisplayBulkCloneForm.php
modules/contrib/field_tools/src/Form/EntityDisplaySettingsBulkCopyForm.php

3 files with changes
====================

1) modules/contrib/field_tools/src/Form/ConfigFieldsExportToCodeForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\field_tools\Form;

+use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormBase;
@@ @@
       $code[] = "  ->setRequired(TRUE)";
     }

-    if ($field instanceof \Drupal\Core\Field\FieldStorageDefinitionInterface) {
+    if ($field instanceof FieldStorageDefinitionInterface) {
       if ($field->isRevisionable()) {
         $code[] = "  ->setRevisionable(TRUE)";
       }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/field_tools/field_tools.module:0

    ---------- begin diff ----------
@@ @@
 <?php
+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\field_tools\Form\FieldStorageConfigDeleteForm;
+use Drupal\field_tools\EntityHandler\FieldStorageConfigAccess;
+use Drupal\Core\Entity\Routing\AdminHtmlRouteProvider;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Url;
 /**
  * @file field_tools.module
  * Contains useful tools for working with fields.
@@ @@
 /**
  * Implements hook_help().
  */
-function field_tools_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
+function field_tools_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     // Main module help.
     case 'help.page.field_tools':
@@ @@
   // FieldConfig::linkTemplates(), but we can't hack into that.

   // Add a delete form and link to field storage config.
-  $entity_types['field_storage_config']->setFormClass('delete', Drupal\field_tools\Form\FieldStorageConfigDeleteForm::class);
+  $entity_types['field_storage_config']->setFormClass('delete', FieldStorageConfigDeleteForm::class);
   $entity_types['field_storage_config']->setLinkTemplate('delete-form', '/admin/reports/fields/tools/{field_storage_config}/delete');
-  $entity_types['field_storage_config']->setHandlerClass('access', Drupal\field_tools\EntityHandler\FieldStorageConfigAccess::class);
+  $entity_types['field_storage_config']->setHandlerClass('access', FieldStorageConfigAccess::class);
   // @todo Core forgot to add a direct way to manipulate route_provider, so
   // we have to do it the sloppy way for now.
   $route_providers = $entity_types['field_storage_config']->getRouteProviderClasses() ?: [];
@@ @@
   if (empty($route_providers['field_tools'])) {
     // This will only provide the delete route, as all the other link templates
     // aren't defined.
-    $route_providers['field_tools'] = \Drupal\Core\Entity\Routing\AdminHtmlRouteProvider::class;
+    $route_providers['field_tools'] = AdminHtmlRouteProvider::class;
     $entity_types['field_storage_config']->setHandlerClass('route_provider', $route_providers);
   }
 }
@@ @@
 /**
  * Implements hook_entity_operation().
  */
-function field_tools_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
+function field_tools_entity_operation(EntityInterface $entity) {
   $operations = [];

   if ($entity->getEntityTypeId() == 'field_config' && $entity->access('update')) {
@@ @@
     // Field clone operation.
     $operations['clone'] = array(
       'title' => t('Clone'),
-      'url' => \Drupal\Core\Url::fromRoute("entity.field_config.{$target_entity_type_id}_field_tools_clone_form", $parameters),
+      'url' => Url::fromRoute("entity.field_config.{$target_entity_type_id}_field_tools_clone_form", $parameters),
       'weight' => 50,
     );
   }
@@ @@

       $operations['clone_fields'] = array(
         'title' => t('Clone fields'),
-        'url' => \Drupal\Core\Url::fromRoute("field_tools.field_bulk_clone_{$bundle_of_entity_type_id}", $parameters),
+        'url' => Url::fromRoute("field_tools.field_bulk_clone_{$bundle_of_entity_type_id}", $parameters),
         'weight' => 50,
       );
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


3) modules/contrib/field_tools/field_tools.admin.inc:68

    ---------- begin diff ----------
@@ @@
     'header' => $header,
   ));

-  drupal_add_css(drupal_get_path('module', 'field_tools') . '/field_tools.css');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('field_tools') . '/field_tools.css');

   return $output;
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

