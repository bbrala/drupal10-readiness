modules/contrib/image_browser/image_browser.module
modules/contrib/image_browser/image_browser.views.inc
modules/contrib/image_browser/src/Controller/ImageBrowserController.php
modules/contrib/image_browser/src/Element/ImageBrowser.php
modules/contrib/image_browser/src/Form/LibraryForm.php
modules/contrib/image_browser/src/Form/UploadForm.php
modules/contrib/image_browser/src/Plugin/views/field/ImageBrowserPreview.php

5 files with changes
====================

1) modules/contrib/image_browser/src/Plugin/views/field/ImageBrowserPreview.php:24

    ---------- begin diff ----------
@@ @@
     $file = $values->_entity;
     if($file->getMimeType() == 'image/svg+xml'){
       return $build = [
-        '#markup' => '<img src="' . file_create_url($file->getFileUri()) .'"/>',
+        '#markup' => '<img src="' . \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) .'"/>',
       ];
     }
     return $build = [
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/image_browser/src/Form/UploadForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\image_browser\Form;

+use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   public function buildForm(array $form, FormStateInterface $form_state) {
     //We only accept ajax request for that page
     if(false == \Drupal::request()->isXmlHttpRequest()){
-      throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+      throw new NotFoundHttpException;
     }
     $form['image'] = array(
       '#type' => 'managed_file',
@@ @@
     $response = new AjaxResponse();
     $fid = $form_state->getValue(array('image', 0));
     if ($file = File::load($fid)) {
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       if($file->getMimeType() == 'image/svg+xml'){
         $preview = array(
           '#markup' => '<img src="' . $file_url .'" style="max-width:100px"/>',
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/image_browser/src/Form/LibraryForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\image_browser\Form;

+use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   public function buildForm(array $form, FormStateInterface $form_state) {
     //We only accept ajax request for that page
     if(false == \Drupal::request()->isXmlHttpRequest()){
-      throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+      throw new NotFoundHttpException;
     }
     $form['library'] = array(
       views_embed_view('dexp_image_browser', 'image_browser'),
@@ @@
     }
     if ($fid) {
       $file = File::load($fid);
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       if($file->getMimeType() == 'image/svg+xml'){
         $preview = array(
           '#markup' => '<img src="' . $file_url .'"/>',
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/image_browser/src/Controller/ImageBrowserController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\image_browser\Controller;

+use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+use Drupal\Core\Url;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   public function page() {
     //We only accept ajax request for that page
     if(false == \Drupal::request()->isXmlHttpRequest()){
-      throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+      throw new NotFoundHttpException;
     }
     $html_id = Html::getUniqueId('dexp-image-browser');
     return [
@@ @@
         '#links' => [
           'upload_link' => [
             'title' => $this->t('Upload'),
-            'url' => \Drupal\Core\Url::fromRoute('image_browser.upload'),
+            'url' => Url::fromRoute('image_browser.upload'),
             'ajax' => [
               'wrapper' => $html_id,
               'method' => 'html',
@@ @@
           ],
           'library_browser' => [
             'title' => $this->t('Library'),
-            'url' => \Drupal\Core\Url::fromRoute('image_browser.library'),
+            'url' => Url::fromRoute('image_browser.library'),
             'ajax' => [
               'wrapper' => $html_id,
               'method' => 'html',
@@ @@
     $fid = str_replace('file:', '', $file);
     if ($fid) {
       $file = File::load($fid);
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       if($file->getMimeType() == 'image/svg+xml'){
         $preview = array(
           '#markup' => '<img src="' . $file_url .'"/>',
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/image_browser/image_browser.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Component\Utility\Html;
 /**
  * @file
  * Extends Drupal file entities to be fieldable and viewable.
@@ @@
     if($file = File::load($fid)){
       if($file->getMimeType() == 'image/svg+xml'){
         $variables['preview'] = array(
-          '#markup' => '<img src="' . file_create_url($file->getFileUri()) .'" style="max-width: 100px"/>',
+          '#markup' => '<img src="' . \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) .'" style="max-width: 100px"/>',
         );
       }else{
         $variables['preview'] = array(
@@ @@
     }
   }
   $variables['children'] = $element['#children'];
-  $variables['html_id'] = \Drupal\Component\Utility\Html::getUniqueId('dexp-image-browser');
+  $variables['html_id'] = Html::getUniqueId('dexp-image-browser');
 }

 /**
@@ @@
     $form['actions']['#type'] = 'container';
     $form['actions']['#id'] = 'search-actions';
   }
-}
+}
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

