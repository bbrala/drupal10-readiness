diff --git a/password_policy_blacklist/tests/src/Unit/PasswordBlacklistTest.php b/password_policy_blacklist/tests/src/Unit/PasswordBlacklistTest.php
index 6b40151..a599f6f 100644
--- a/password_policy_blacklist/tests/src/Unit/PasswordBlacklistTest.php
+++ b/password_policy_blacklist/tests/src/Unit/PasswordBlacklistTest.php
@@ -17,10 +17,7 @@ class PasswordBlacklistTest extends UnitTestCase {
    * @dataProvider passwordBlacklistDataProvider
    */
   public function testPasswordBlacklist($blacklist, $match_substrings, $password, $result) {
-    $blacklist_test = $this->getMockBuilder('Drupal\password_policy_blacklist\Plugin\PasswordConstraint\PasswordBlacklist')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['getConfiguration', 't'])
-      ->getMock();
+    $blacklist_test = $this->createMock('Drupal\password_policy_blacklist\Plugin\PasswordConstraint\PasswordBlacklist');
 
     $blacklist_test
       ->method('getConfiguration')
diff --git a/password_policy_character_types/tests/src/Unit/CharacterTypesTest.php b/password_policy_character_types/tests/src/Unit/CharacterTypesTest.php
index 213fede..31fb85d 100644
--- a/password_policy_character_types/tests/src/Unit/CharacterTypesTest.php
+++ b/password_policy_character_types/tests/src/Unit/CharacterTypesTest.php
@@ -17,14 +17,11 @@ class CharacterTypesTest extends UnitTestCase {
    * @dataProvider characterTypesDataProvider
    */
   public function testCharacterTypes($types, $password, $result) {
-    $character_types = $this->getMockBuilder('Drupal\password_policy_character_types\Plugin\PasswordConstraint\CharacterTypes')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['getConfiguration', 't'])
-      ->getMock();
+    $character_types = $this->createMock('Drupal\password_policy_character_types\Plugin\PasswordConstraint\CharacterTypes');
     $character_types
       ->method('getConfiguration')
       ->willReturn(['character_types' => $types]);
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $this->assertEquals($character_types->validate($password, $user)->isValid(), $result);
   }
 
diff --git a/password_policy_characters/tests/src/Unit/CharactersTest.php b/password_policy_characters/tests/src/Unit/CharactersTest.php
index 722ed54..a598146 100644
--- a/password_policy_characters/tests/src/Unit/CharactersTest.php
+++ b/password_policy_characters/tests/src/Unit/CharactersTest.php
@@ -17,14 +17,11 @@ class CharactersTest extends UnitTestCase {
    * @dataProvider charactersDataProvider
    */
   public function testCharacters($count, $type, $password, $result) {
-    $characters = $this->getMockBuilder('Drupal\password_policy_characters\Plugin\PasswordConstraint\PasswordCharacter')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['getConfiguration', 'formatPlural'])
-      ->getMock();
+    $characters = $this->createMock('Drupal\password_policy_characters\Plugin\PasswordConstraint\PasswordCharacter');
     $characters
       ->method('getConfiguration')
       ->willReturn(['character_count' => $count, 'character_type' => $type]);
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $this->assertEquals($characters->validate($password, $user)->isValid(), $result);
   }
 
diff --git a/password_policy_consecutive/tests/src/Unit/ConsecutiveCharactersTest.php b/password_policy_consecutive/tests/src/Unit/ConsecutiveCharactersTest.php
index e12eede..c590f66 100644
--- a/password_policy_consecutive/tests/src/Unit/ConsecutiveCharactersTest.php
+++ b/password_policy_consecutive/tests/src/Unit/ConsecutiveCharactersTest.php
@@ -17,14 +17,11 @@ class ConsecutiveCharactersTest extends UnitTestCase {
    * @dataProvider passwordsDataProvider
    */
   public function testConsecutiveCharacters($count, $password, $result) {
-    $characters = $this->getMockBuilder('Drupal\password_policy_consecutive\Plugin\PasswordConstraint\ConsecutiveCharacters')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['getConfiguration', 't'])
-      ->getMock();
+    $characters = $this->createMock('Drupal\password_policy_consecutive\Plugin\PasswordConstraint\ConsecutiveCharacters');
     $characters
       ->method('getConfiguration')
       ->willReturn(['max_consecutive_characters' => $count]);
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $this->assertEquals($characters->validate($password, $user)->isValid(), $result);
   }
 
diff --git a/password_policy_length/tests/src/Unit/PasswordLengthTest.php b/password_policy_length/tests/src/Unit/PasswordLengthTest.php
index a896fdc..4ea1437 100644
--- a/password_policy_length/tests/src/Unit/PasswordLengthTest.php
+++ b/password_policy_length/tests/src/Unit/PasswordLengthTest.php
@@ -17,17 +17,14 @@ class PasswordLengthTest extends UnitTestCase {
    * @dataProvider lengthDataProvider
    */
   public function testLength($length, $operation, $password, $result) {
-    $characters = $this->getMockBuilder('Drupal\password_policy_length\Plugin\PasswordConstraint\PasswordLength')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['getConfiguration', 'formatPlural'])
-      ->getMock();
+    $characters = $this->createMock('Drupal\password_policy_length\Plugin\PasswordConstraint\PasswordLength');
     $characters
       ->method('getConfiguration')
       ->willReturn([
         'character_length' => $length,
         'character_operation' => $operation,
       ]);
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $this->assertEquals($characters->validate($password, $user)->isValid(), $result);
   }
 
diff --git a/password_policy_username/tests/src/Unit/PasswordUsernameTest.php b/password_policy_username/tests/src/Unit/PasswordUsernameTest.php
index 2931214..b38b8e2 100644
--- a/password_policy_username/tests/src/Unit/PasswordUsernameTest.php
+++ b/password_policy_username/tests/src/Unit/PasswordUsernameTest.php
@@ -18,10 +18,7 @@ class PasswordUsernameTest extends UnitTestCase {
    * @dataProvider passwordUsernameDataProvider
    */
   public function testPasswordUsername($disallow_username, UserInterface $user, $password, $result) {
-    $username_test = $this->getMockBuilder('Drupal\password_policy_username\Plugin\PasswordConstraint\PasswordUsername')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['getConfiguration', 't'])
-      ->getMock();
+    $username_test = $this->createMock('Drupal\password_policy_username\Plugin\PasswordConstraint\PasswordUsername');
 
     $username_test
       ->method('getConfiguration')
@@ -34,7 +31,7 @@ class PasswordUsernameTest extends UnitTestCase {
    * Provides data for the testPasswordUsername method.
    */
   public function passwordUsernameDataProvider() {
-    $user = $this->getMockBuilder('Drupal\user\Entity\User')->disableOriginalConstructor()->getMock();
+    $user = $this->createMock('Drupal\user\Entity\User');
     $user->method('getAccountName')->willReturn('username');
 
     return [
