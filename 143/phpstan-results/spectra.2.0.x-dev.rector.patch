diff --git a/spectra.install b/spectra.install
index b5a444d..8714774 100644
--- a/spectra.install
+++ b/spectra.install
@@ -1,4 +1,9 @@
 <?php
+use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\Core\Database\Database;
+use Drupal\spectra\Entity\SpectraAction;
+use Drupal\spectra\Entity\SpectraVerb;
+use Drupal\spectra\Entity\SpectraNoun;
 /**
  * @file
  */
@@ -31,7 +36,7 @@ function spectra_update_8101 () {
 
 
 // Create a new field definition.
-  $new_status_field = \Drupal\Core\Field\BaseFieldDefinition::create('entity_reference')
+  $new_status_field = BaseFieldDefinition::create('entity_reference')
     ->setLabel(t('Parent Statement'))
     ->setDescription(t('The Parent statement, to which this item is a sub-statement'))
     ->setSetting('target_type', 'spectra_statement')
@@ -55,13 +60,13 @@ function spectra_update_8102 ()
   );
   foreach ($types as $key => $value) {
     // Uninstall the old definition
-    $schema = \Drupal\Core\Database\Database::getConnection()->schema();
+    $schema = Database::getConnection()->schema();
     $schema->dropField($key, $value);
     // Set up new definition
     $bundle_of = $key;
     $definition_manager = \Drupal::entityDefinitionUpdateManager();
     // Create a new field definition.
-    $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('jsonb')
+    $new_field = BaseFieldDefinition::create('jsonb')
       ->setLabel(t('JSON Data'))
       ->setDescription(t('The stored JSON data for this data object.'));
     // Install the new definition.
@@ -74,7 +79,7 @@ function spectra_update_8102 ()
  */
 function spectra_update_8103 ()
 {
-  $schema = \Drupal\Core\Database\Database::getConnection()->schema();
+  $schema = Database::getConnection()->schema();
 
   /**
    * Verbs
@@ -138,7 +143,7 @@ function spectra_update_8103 ()
   $definition_manager = \Drupal::entityDefinitionUpdateManager();
   // Create a new field definition.
   try {
-    $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('jsonb')
+    $new_field = BaseFieldDefinition::create('jsonb')
       ->setLabel(t('JSON Data'))
       ->setDescription(t('Stored JSON data with further information.'));
     // Install the new definition.
@@ -207,7 +212,7 @@ function spectra_update_8103 ()
   $definition_manager = \Drupal::entityDefinitionUpdateManager();
   // Create a new field definition.
   try {
-    $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('jsonb')
+    $new_field = BaseFieldDefinition::create('jsonb')
       ->setLabel(t('JSON Data'))
       ->setDescription(t('Stored JSON data with further information.'));
     // Install the new definition.
@@ -243,14 +248,14 @@ function spectra_update_8104 ()
     'action_data' => 'data',
   ];
   foreach ($actions as $action_id) {
-    $act = \Drupal\spectra\Entity\SpectraAction::load($action_id);
+    $act = SpectraAction::load($action_id);
     $vals = [];
     foreach ($action_props as $key => $val) {
       $vals[$val] = $act->get($key)->getValue();
       $vals[$val] = isset($vals[$val][0]['value']) ? $vals[$val][0]['value'] : $vals[$val];
     }
 
-    $verb = \Drupal\spectra\Entity\SpectraVerb::create($vals);
+    $verb = SpectraVerb::create($vals);
     $verb->save();
     $act->delete();
   }
@@ -285,7 +290,7 @@ function spectra_update_8104 ()
         $vals[$val] = $bnoun->get($key)->getValue();
         $vals[$val] = isset($vals[$val][0]['value']) ? $vals[$val][0]['value'] : $vals[$val];
       }
-      $noun = \Drupal\spectra\Entity\SpectraNoun::create($vals);
+      $noun = SpectraNoun::create($vals);
       $noun->save();
       $bnoun->delete();
     }
@@ -296,7 +301,7 @@ function spectra_update_8104 ()
  * Remove Actors, Actions, Objects, and Contexts, as these were replaced in update 8104
  */
 function spectra_update_8105 () {
-  $schema = \Drupal\Core\Database\Database::getConnection()->schema();
+  $schema = Database::getConnection()->schema();
   $schema->dropTable('spectra_actor');
   $schema->dropTable('spectra_action');
   $schema->dropTable('spectra_object');
@@ -312,25 +317,25 @@ function spectra_update_8106() {
   try {
     // Actor
     $definition = $definition_manager->getFieldStorageDefinition('actor_id','spectra_statement');
-    $new_definition = \Drupal\Core\Field\BaseFieldDefinition::createFromFieldStorageDefinition($definition)
+    $new_definition = BaseFieldDefinition::createFromFieldStorageDefinition($definition)
       ->setSetting('target_type', 'spectra_noun');
     $definition_manager->updateFieldStorageDefinition($new_definition);
 
     // Action
     $definition = $definition_manager->getFieldStorageDefinition('action_id','spectra_statement');
-    $new_definition = \Drupal\Core\Field\BaseFieldDefinition::createFromFieldStorageDefinition($definition)
+    $new_definition = BaseFieldDefinition::createFromFieldStorageDefinition($definition)
       ->setSetting('target_type', 'spectra_verb');
     $definition_manager->updateFieldStorageDefinition($new_definition);
 
     // Object
     $definition = $definition_manager->getFieldStorageDefinition('object_id','spectra_statement');
-    $new_definition = \Drupal\Core\Field\BaseFieldDefinition::createFromFieldStorageDefinition($definition)
+    $new_definition = BaseFieldDefinition::createFromFieldStorageDefinition($definition)
       ->setSetting('target_type', 'spectra_noun');
     $definition_manager->updateFieldStorageDefinition($new_definition);
 
     // Context
     $definition = $definition_manager->getFieldStorageDefinition('context_id','spectra_statement');
-    $new_definition = \Drupal\Core\Field\BaseFieldDefinition::createFromFieldStorageDefinition($definition)
+    $new_definition = BaseFieldDefinition::createFromFieldStorageDefinition($definition)
       ->setSetting('target_type', 'spectra_noun');
     $definition_manager->updateFieldStorageDefinition($new_definition);
   }
