modules/contrib/set_front_page/set_front_page.install
modules/contrib/set_front_page/src/ConfigOverride.php
modules/contrib/set_front_page/src/Controller/SetFrontPageController.php
modules/contrib/set_front_page/src/Form/SetFrontPageConfigForm.php
modules/contrib/set_front_page/src/Form/SetFrontPageEntitySettings.php
modules/contrib/set_front_page/src/SetFrontPageManager.php
modules/contrib/set_front_page/tests/src/Functional/SetFrontPageTests.php

1 file with changes
===================

1) modules/contrib/set_front_page/tests/src/Functional/SetFrontPageTests.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create admin user, log in admin user, and create one node.
@@ @@

     // Change the front page to an invalid path.
     $edit = ['site_frontpage' => '/kittens'];
-    $this->drupalPostForm('admin/config/set_front_page/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/set_front_page/settings');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains(t("The path '@path' is either invalid or you do not have access to it.", ['@path' => $edit['site_frontpage']]));
     // Change the front page to a valid path without a starting slash.
     $edit = ['site_frontpage' => $this->nodePath];
-    $this->drupalPostForm('admin/config/set_front_page/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/set_front_page/settings');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains((string) new FormattableMarkup("The path '@path' has to start with a slash.", ['@path' => $edit['site_frontpage']]));
     // Change the front page to a valid path.
     $edit['site_frontpage'] = '/' . $this->nodePath;
-    $this->drupalPostForm('admin/config/set_front_page/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/set_front_page/settings');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains(t('The configuration options have been saved.'), 'The configuration have been saved.');
     // The homepage is $this->node and its title changed.
     $this->drupalGet('');
@@ @@

     // Configure a default frontpage path with an invalid path.
     $edit = ['site_frontpage_default' => '/kittens'];
-    $this->drupalPostForm('admin/config/set_front_page/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/set_front_page/settings');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains(t("The path '@path' is either invalid or you do not have access to it.", ['@path' => $edit['site_frontpage_default']]));
     // Configure a default frontpage path with a valid path without starting
     // slash.
     $edit = ['site_frontpage_default' => $this->nodePath];
-    $this->drupalPostForm('admin/config/set_front_page/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/set_front_page/settings');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains((string) new FormattableMarkup("The path '@path' has to start with a slash.", ['@path' => $edit['site_frontpage_default']]));
     // Change the default front page to a valid path.
-    $edit['site_frontpage_default'] = '/node'; // . $this->nodePath;
-    $this->drupalPostForm('admin/config/set_front_page/settings', $edit, t('Save configuration'));
+    $edit['site_frontpage_default'] = '/node';
+    $this->drupalGet('admin/config/set_front_page/settings'); // . $this->nodePath;
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains(t('The configuration options have been saved.'));

     // The set frontpage tab is not accessible by this user, because the
@@ @@

     // Enabled valid content type to be an homepage.
     $edit['set_front_page_node_type__page'] = TRUE;
-    $this->drupalPostForm('admin/config/set_front_page/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/set_front_page/settings');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains(t('The configuration options have been saved.'));

     // The set frontpage tab is accessible by this user
@@ @@
     $this->assertTrue(!empty($this->xpath('//input[@id="edit-save" and @type="submit" and not(@disabled)]')), 'The "Use this page as the front page" button is present and enabled.');
     // The default buttons is enabled.
     $this->assertTrue(!empty($this->xpath('//input[@id="edit-change-to-default" and @type="submit" and not(@disabled)]')), 'The "Revert to the default page" button is present and enabled.');
+    $this->drupalGet('node/' . $node->id() . '/set_front_page');
     // Change the front page to $node.
-    $this->drupalPostForm('node/' . $node->id() . '/set_front_page', [], t('Use this page as the front page'));
+    $this->submitForm([], t('Use this page as the front page'));
     // The frontapge is the current node, so is disabled.
     $this->assertTrue(!empty($this->xpath('//input[@id="edit-save" and @type="submit" and @disabled="disabled"]')), 'The "Use this page as the front page" button is present and disabled.');
     // The default buttons is enabled.
@@ @@

     // Change the default frontpage path.
     $edit = ['site_frontpage_default' => '/' . $this->nodePath];
-    $this->drupalPostForm('admin/config/set_front_page/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/set_front_page/settings');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains(t('The configuration options have been saved.'));
     $this->drupalGet($this->nodePath . '/set_front_page');
     $this->assertSession()->statusCodeEquals(200, 'The set front page is available to the user');
@@ @@
     // If the default frontpage path is not defined, the related button should
     // disappear.
     $edit = ['site_frontpage_default' => ''];
-    $this->drupalPostForm('admin/config/set_front_page/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/set_front_page/settings');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains(t('The configuration options have been saved.'));
     $this->drupalGet($this->nodePath . '/set_front_page');
     $this->assertTrue(empty($this->xpath('//input[@id="edit-change-to-default" and @type="submit"]')), 'The "Revert to the default page" button is not present.');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

