diff --git a/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php b/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php
index 5730511..2204321 100644
--- a/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php
+++ b/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\actions_permissions\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\views_bulk_operations\Service\ViewsBulkOperationsActionManager;
 
 /**
@@ -31,7 +31,7 @@ class ActionsPermissionsEventSubscriber implements EventSubscriberInterface {
   /**
    * Alter the actions' definitions.
    *
-   * @var \Symfony\Component\EventDispatcher\Event $event
+   * @var \Symfony\Contracts\EventDispatcher\Event $event
    *   The event to respond to.
    */
   public function alterActions(Event $event) {
diff --git a/src/Service/ViewsBulkOperationsActionManager.php b/src/Service/ViewsBulkOperationsActionManager.php
index 6ac13cc..5f44ccf 100644
--- a/src/Service/ViewsBulkOperationsActionManager.php
+++ b/src/Service/ViewsBulkOperationsActionManager.php
@@ -2,12 +2,12 @@
 
 namespace Drupal\views_bulk_operations\Service;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Action\ActionManager;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 
 /**
diff --git a/src/Service/ViewsBulkOperationsViewData.php b/src/Service/ViewsBulkOperationsViewData.php
index a96643b..0951a85 100644
--- a/src/Service/ViewsBulkOperationsViewData.php
+++ b/src/Service/ViewsBulkOperationsViewData.php
@@ -94,7 +94,7 @@ class ViewsBulkOperationsViewData implements ViewsBulkOperationsViewDataInterfac
 
     // @todo Remove the conditional when Drupal 8 is no longer supported.
     if (floatval(\Drupal::VERSION) < 9) {
-      $this->eventDispatcher->dispatch(ViewsBulkOperationsEvent::NAME, $event);
+      $this->eventDispatcher->dispatch($event, ViewsBulkOperationsEvent::NAME);
     }
     else {
       $this->eventDispatcher->dispatch($event, ViewsBulkOperationsEvent::NAME);
diff --git a/src/ViewsBulkOperationsEvent.php b/src/ViewsBulkOperationsEvent.php
index 44ad3e5..df0b6fa 100644
--- a/src/ViewsBulkOperationsEvent.php
+++ b/src/ViewsBulkOperationsEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\views_bulk_operations;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\views\ViewExecutable;
 
 /**
diff --git a/tests/src/Functional/DrushCommandsTest.php b/tests/src/Functional/DrushCommandsTest.php
index ab7dc1a..1f014a7 100644
--- a/tests/src/Functional/DrushCommandsTest.php
+++ b/tests/src/Functional/DrushCommandsTest.php
@@ -34,7 +34,7 @@ class DrushCommandsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create some nodes for testing.
diff --git a/tests/src/Functional/ViewsBulkOperationsBulkFormTest.php b/tests/src/Functional/ViewsBulkOperationsBulkFormTest.php
index a6dae55..a1bfa1b 100644
--- a/tests/src/Functional/ViewsBulkOperationsBulkFormTest.php
+++ b/tests/src/Functional/ViewsBulkOperationsBulkFormTest.php
@@ -122,11 +122,11 @@ class ViewsBulkOperationsBulkFormTest extends ViewsBulkOperationsFunctionalTestB
     $edit = [
       'test_config' => $config_value,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Apply'));
+    $this->submitForm($edit, t('Apply'));
 
     // Execute action by posting the confirmation form
     // (also tests if the submit button exists on the page).
-    $this->drupalPostForm(NULL, [], t('Execute action'));
+    $this->submitForm([], t('Execute action'));
 
     // If all went well and Batch API did its job,
     // the next page should display results.
@@ -154,9 +154,9 @@ class ViewsBulkOperationsBulkFormTest extends ViewsBulkOperationsFunctionalTestB
     foreach ([0, 2] as $index) {
       $edit["views_bulk_operations_bulk_form[$index]"] = TRUE;
     }
-    $this->drupalPostForm(NULL, $edit, t('Apply to selected items'));
-    $this->drupalPostForm(NULL, ['test_config' => 'unpublish'], t('Apply'));
-    $this->drupalPostForm(NULL, [], t('Execute action'));
+    $this->submitForm($edit, t('Apply to selected items'));
+    $this->submitForm(['test_config' => 'unpublish'], t('Apply'));
+    $this->submitForm([], t('Execute action'));
     // Again, take offset into account (-1), also take 2 excluded
     // rows into account (-2).
     // Also, check if the custom completed message appears.
@@ -236,7 +236,7 @@ class ViewsBulkOperationsBulkFormTest extends ViewsBulkOperationsFunctionalTestB
       }
 
       $this->drupalGet('views-bulk-operations-test-advanced', $options);
-      $this->drupalPostForm(NULL, $edit, t('Apply to selected items'));
+      $this->submitForm($edit, t('Apply to selected items'));
 
       // On batch-enabled processes check if provided context data is correct.
       if ($case['batch']) {
diff --git a/tests/src/Functional/ViewsBulkOperationsFunctionalTestBase.php b/tests/src/Functional/ViewsBulkOperationsFunctionalTestBase.php
index eb7fd6f..b502566 100644
--- a/tests/src/Functional/ViewsBulkOperationsFunctionalTestBase.php
+++ b/tests/src/Functional/ViewsBulkOperationsFunctionalTestBase.php
@@ -32,7 +32,7 @@ abstract class ViewsBulkOperationsFunctionalTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create some nodes for testing.
@@ -71,7 +71,8 @@ abstract class ViewsBulkOperationsFunctionalTestBase extends BrowserTestBase {
     foreach ($selection as $index) {
       $data["views_bulk_operations_bulk_form[$index]"] = TRUE;
     }
-    $this->drupalPostForm($path, $data, $button_text);
+    $this->drupalGet($path);
+    $this->submitForm($data, $button_text);
   }
 
 }
diff --git a/tests/src/FunctionalJavascript/ViewsBulkOperationsBulkFormTest.php b/tests/src/FunctionalJavascript/ViewsBulkOperationsBulkFormTest.php
index c270110..abd6a21 100644
--- a/tests/src/FunctionalJavascript/ViewsBulkOperationsBulkFormTest.php
+++ b/tests/src/FunctionalJavascript/ViewsBulkOperationsBulkFormTest.php
@@ -74,7 +74,7 @@ class ViewsBulkOperationsBulkFormTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create some nodes for testing.
diff --git a/tests/src/Kernel/ViewsBulkOperationsActionProcessorTest.php b/tests/src/Kernel/ViewsBulkOperationsActionProcessorTest.php
index 7f25010..d185ee9 100644
--- a/tests/src/Kernel/ViewsBulkOperationsActionProcessorTest.php
+++ b/tests/src/Kernel/ViewsBulkOperationsActionProcessorTest.php
@@ -11,7 +11,7 @@ class ViewsBulkOperationsActionProcessorTest extends ViewsBulkOperationsKernelTe
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->createTestNodes([
diff --git a/tests/src/Kernel/ViewsBulkOperationsDataServiceTest.php b/tests/src/Kernel/ViewsBulkOperationsDataServiceTest.php
index 1a004a3..ccb681b 100644
--- a/tests/src/Kernel/ViewsBulkOperationsDataServiceTest.php
+++ b/tests/src/Kernel/ViewsBulkOperationsDataServiceTest.php
@@ -13,7 +13,7 @@ class ViewsBulkOperationsDataServiceTest extends ViewsBulkOperationsKernelTestBa
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->createTestNodes([
diff --git a/tests/src/Kernel/ViewsBulkOperationsKernelTestBase.php b/tests/src/Kernel/ViewsBulkOperationsKernelTestBase.php
index 032e3a4..fc5e18f 100644
--- a/tests/src/Kernel/ViewsBulkOperationsKernelTestBase.php
+++ b/tests/src/Kernel/ViewsBulkOperationsKernelTestBase.php
@@ -79,7 +79,7 @@ abstract class ViewsBulkOperationsKernelTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
diff --git a/tests/src/Unit/ViewsBulkOperationsBatchTest.php b/tests/src/Unit/ViewsBulkOperationsBatchTest.php
index 4dbc630..b0ad65a 100644
--- a/tests/src/Unit/ViewsBulkOperationsBatchTest.php
+++ b/tests/src/Unit/ViewsBulkOperationsBatchTest.php
@@ -22,7 +22,7 @@ class ViewsBulkOperationsBatchTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->container = new ContainerBuilder();
@@ -36,9 +36,7 @@ class ViewsBulkOperationsBatchTest extends UnitTestCase {
    *   A mocked action processor.
    */
   public function getViewsBulkOperationsActionProcessorStub($entities_count) {
-    $actionProcessor = $this->getMockBuilder('Drupal\views_bulk_operations\Service\ViewsBulkOperationsActionProcessor')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $actionProcessor = $this->createMock('Drupal\views_bulk_operations\Service\ViewsBulkOperationsActionProcessor');
 
     $actionProcessor->expects($this->any())
       ->method('populateQueue')
@@ -87,9 +85,7 @@ class ViewsBulkOperationsBatchTest extends UnitTestCase {
     $this->container->set('views_bulk_operations.processor', $this->getViewsBulkOperationsActionProcessorStub($batch_size));
 
     $view = new View(['id' => 'test_view'], 'view');
-    $view_storage = $this->getMockBuilder('Drupal\Core\Config\Entity\ConfigEntityStorage')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $view_storage = $this->createMock('Drupal\Core\Config\Entity\ConfigEntityStorage');
     $view_storage->expects($this->any())
       ->method('load')
       ->with('test_view')
@@ -102,9 +98,7 @@ class ViewsBulkOperationsBatchTest extends UnitTestCase {
       ->will($this->returnValue($view_storage));
     $this->container->set('entity_type.manager', $entity_type_manager);
 
-    $executable = $this->getMockBuilder('Drupal\views\ViewExecutable')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $executable = $this->createMock('Drupal\views\ViewExecutable');
 
     $executable->result = [];
 
@@ -116,9 +110,7 @@ class ViewsBulkOperationsBatchTest extends UnitTestCase {
       $executable->result[] = $row;
     }
 
-    $viewExecutableFactory = $this->getMockBuilder('Drupal\views\ViewExecutableFactory')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $viewExecutableFactory = $this->createMock('Drupal\views\ViewExecutableFactory');
     $viewExecutableFactory->expects($this->any())
       ->method('get')
       ->will($this->returnValue($executable));
