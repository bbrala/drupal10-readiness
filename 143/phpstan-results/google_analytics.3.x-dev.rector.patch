diff --git a/google_analytics.module b/google_analytics.module
index 2635c6b..88dcc34 100644
--- a/google_analytics.module
+++ b/google_analytics.module
@@ -350,7 +350,7 @@ function google_analytics_page_attachments(array &$page) {
       $query_string = '?' . (\Drupal::state()->get('system.css_js_query_string') ?: '0');
       // @todo: Remove conditional after dropping support lower than 9.3.
       // @phpstan-ignore-next-line
-      $library = method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString('public://google_analytics/gtag.js') : file_url_transform_relative(file_create_url('public://google_analytics/gtag.js')) . $query_string;
+      $library = method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString('public://google_analytics/gtag.js') : \Drupal::service('file_url_generator')->generateString('public://google_analytics/gtag.js') . $query_string;
     }
     else {
       // Fallback to default.
@@ -563,7 +563,7 @@ function _google_analytics_cache($location, $synchronize = FALSE) {
 
           // @todo: Remove conditional after dropping support lower than 9.3.
           // @phpstan-ignore-next-line
-          return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : file_url_transform_relative(file_create_url($file_destination));
+          return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : \Drupal::service('file_url_generator')->generateString($file_destination);
 
         }
       }
@@ -575,7 +575,7 @@ function _google_analytics_cache($location, $synchronize = FALSE) {
   else {
     // @todo: Remove conditional after dropping support lower than 9.3.
     // @phpstan-ignore-next-line
-    return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : file_url_transform_relative(file_create_url($file_destination));
+    return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : \Drupal::service('file_url_generator')->generateString($file_destination);
   }
 }
 
diff --git a/tests/src/Functional/GoogleAnalyticsUninstallTest.php b/tests/src/Functional/GoogleAnalyticsUninstallTest.php
index fb86e29..7692ab4 100644
--- a/tests/src/Functional/GoogleAnalyticsUninstallTest.php
+++ b/tests/src/Functional/GoogleAnalyticsUninstallTest.php
@@ -38,7 +38,7 @@ class GoogleAnalyticsUninstallTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
@@ -77,10 +77,11 @@ class GoogleAnalyticsUninstallTest extends BrowserTestBase {
     // Uninstall the module.
     $edit = [];
     $edit['uninstall[google_analytics]'] = TRUE;
-    $this->drupalPostForm('admin/modules/uninstall', $edit, $this->t('Uninstall'));
-    $this->assertNoText(\Drupal::translation()->translate('Configuration deletions'));
-    $this->drupalPostForm(NULL, NULL, $this->t('Uninstall'));
-    $this->assertText($this->t('The selected modules have been uninstalled.'));
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm($edit, $this->t('Uninstall'));
+    $this->assertSession()->pageTextNotContains(\Drupal::translation()->translate('Configuration deletions'));
+    $this->submitForm(NULL, $this->t('Uninstall'));
+    $this->assertSession()->pageTextContains($this->t('The selected modules have been uninstalled.'));
 
     // Test if the directory and all files have been removed.
     $this->assertFalse($file_system->prepareDirectory($cache_path), 'Cache directory "public://google_analytics" has been removed.');
diff --git a/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php b/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php
index 61a2073..626a439 100644
--- a/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php
+++ b/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php
@@ -38,7 +38,7 @@ class GoogleAnalyticsUserFieldsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
@@ -61,28 +61,28 @@ class GoogleAnalyticsUserFieldsTest extends BrowserTestBase {
 
     // Check if the pseudo field is shown on account forms.
     $this->drupalGet('admin/config/people/accounts/form-display');
-    $this->assertResponse(200);
-    $this->assertRaw($this->t('Google Analytics settings'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains($this->t('Google Analytics settings'));
 
     // No customization allowed.
     $this->config('google_analytics.settings')->set('visibility.user_account_mode', 0)->save();
     $this->drupalGet('user/' . $this->adminUser->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertNoRaw($this->t('Google Analytics settings'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseNotContains($this->t('Google Analytics settings'));
 
     // Tracking on by default, users with opt-in or out of tracking permission
     // can opt out.
     $this->config('google_analytics.settings')->set('visibility.user_account_mode', 1)->save();
     $this->drupalGet('user/' . $this->adminUser->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertRaw($this->t('Users are tracked by default, but you are able to opt out.'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains($this->t('Users are tracked by default, but you are able to opt out.'));
 
     // Tracking off by default, users with opt-in or out of tracking permission
     // can opt in.
     $this->config('google_analytics.settings')->set('visibility.user_account_mode', 2)->save();
     $this->drupalGet('user/' . $this->adminUser->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertRaw($this->t('Users are <em>not</em> tracked by default, but you are able to opt in.'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains($this->t('Users are <em>not</em> tracked by default, but you are able to opt in.'));
   }
 
 }
