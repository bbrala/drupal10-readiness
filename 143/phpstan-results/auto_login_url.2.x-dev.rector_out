modules/contrib/auto_login_url/auto_login_url.install
modules/contrib/auto_login_url/auto_login_url.module
modules/contrib/auto_login_url/src/AutoLoginUrlConvertTextClass.php
modules/contrib/auto_login_url/src/AutoLoginUrlCreate.php
modules/contrib/auto_login_url/src/AutoLoginUrlGeneral.php
modules/contrib/auto_login_url/src/AutoLoginUrlLogin.php
modules/contrib/auto_login_url/src/Controller/AutoLoginUrlMainController.php
modules/contrib/auto_login_url/src/Form/ConfigForm.php
modules/contrib/auto_login_url/src/Tests/AutoLoginUrlTest.php

1 file with changes
===================

1) modules/contrib/auto_login_url/src/Tests/AutoLoginUrlTest.php:59

    ---------- begin diff ----------
@@ @@
     $this->drupalGet($url);

     // Make assertions.
-    $this->assertResponse(200, t('User logged in successfully.'));
-    $this->assertText($user->get('name')->value, t('User name is visible, hence user is logged in.'));
+    $this->assertSession()->statusCodeEquals(200, t('User logged in successfully.'));
+    $this->assertSession()->pageTextContains($user->get('name')->value);

     // Create another user and login again.
     $user2 = $this->createUser([
@@ @@
     $this->drupalGet($url);

     // Make assertions.
-    $this->assertResponse(200, t('User 2 logged in successfully.'));
-    $this->assertText($user2->get('name')->value, t('User 2 name is visible, hence user is logged in.'));
+    $this->assertSession()->statusCodeEquals(200, t('User 2 logged in successfully.'));
+    $this->assertSession()->pageTextContains($user2->get('name')->value);
   }

   /**
@@ @@
     $this->drupalGet($url);

     // Make assertions.
-    $this->assertResponse(200, t('User logged in successfully.'));
-    $this->assertText($user->get('name')->value, t('User name is visible, hence user is logged in.'));
+    $this->assertSession()->statusCodeEquals(200, t('User logged in successfully.'));
+    $this->assertSession()->pageTextContains($user->get('name')->value);
   }

   /**
@@ @@
     // Access 10 false URLs. Essentially triggering flood.
     for ($i = 1; $i < 6; $i++) {
       $this->drupalGet('autologinurl/' . $i . '/some-token' . $i);
-      $this->assertResponse(403, t('Got access denied page.'));
+      $this->assertSession()->statusCodeEquals(403, t('Got access denied page.'));
     }

     // Generate actual auto login url for this user.
@@ @@
     $this->drupalGet($url);

     // Make assertions.
-    $this->assertResponse(403, t('Got access denied page.'));
-    $this->assertText(t('Sorry, too many failed login attempts from your IP address. This IP address is temporarily blocked. Try again later.'),
-          t('Cannot login message visible.'));
+    $this->assertSession()->statusCodeEquals(403, t('Got access denied page.'));
+    $this->assertSession()->pageTextContains(t('Sorry, too many failed login attempts from your IP address. This IP address is temporarily blocked. Try again later.'));

     // Clear flood table. I am using sql instead of the flood interface
     // (\Drupal::flood()->clear('user.failed_login_ip');) because it does not
@@ @@

     // Try to login again.
     $this->drupalGet($url);
-    $this->assertResponse(200, t('User logged in successfully.'));
-    $this->assertText($user->get('name')->value, t('User name is visible, hence user is logged in.'));
+    $this->assertSession()->statusCodeEquals(200, t('User logged in successfully.'));
+    $this->assertSession()->pageTextContains($user->get('name')->value);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

