modules/contrib/opigno_group_manager/opigno_group_manager.install
modules/contrib/opigno_group_manager/opigno_group_manager.module
modules/contrib/opigno_group_manager/src/Entity/OpignoGroupManagedContent.php
modules/contrib/opigno_group_manager/src/Annotation/OpignoGroupManagerContentType.php
modules/contrib/opigno_group_manager/src/ContentTypeBase.php
modules/contrib/opigno_group_manager/src/ContentTypeInterface.php
modules/contrib/opigno_group_manager/src/Controller/InfoCardController.php
modules/contrib/opigno_group_manager/src/Controller/OpignoGroupManagerController.php
modules/contrib/opigno_group_manager/src/Entity/OpignoGroupManagedLink.php
modules/contrib/opigno_group_manager/src/OpignoGroupContent.php
modules/contrib/opigno_group_manager/src/OpignoGroupContentTypesManager.php
modules/contrib/opigno_group_manager/src/OpignoGroupContext.php

2 files with changes
====================

1) modules/contrib/opigno_group_manager/src/Controller/OpignoGroupManagerController.php:105

    ---------- begin diff ----------
@@ @@
       '#base_path' => $request->getBasePath(),
       '#base_href' => $request->getPathInfo(),
       '#group_id' => $group->id(),
-      '#next_link' => isset($next_link) ? render($next_link) : NULL,
+      '#next_link' => isset($next_link) ? \Drupal::service('renderer')->render($next_link) : NULL,
       '#user_has_info_card' => $tempstore->get('hide_info_card') ? FALSE : TRUE,
       '#text_add_a_link' => $this->t('add a link')->render(),
       '#text_add_your_first_item' => $this->t('Add your first item')->render(),
@@ @@
     $item['entityId'] = $entity->id();
     $item['entityBundle'] = \Drupal::routeMatch()->getParameter('type');
     $item['title'] = $entity->label();
-    $item['imageUrl'] = (isset($file) && $file) ? file_create_url($file->getFileUri()) :
+    $item['imageUrl'] = (isset($file) && $file) ? \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) :
       self::getDefaultBundleImageUrl($entity->bundle());
     $item['in_skills_system'] = FALSE;
     $item['isMandatory'] = FALSE;
@@ @@
         $content = $serializer->serialize($data_structure, $format);
         $filename_path = "{$dir}/{$filename}";

-        \Drupal::service('file_system')->saveData($content, $filename_path, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+        \Drupal::service('file_system')->saveData($content, $filename_path, FileSystemInterface::EXISTS_REPLACE);

         $zip->addFile($filename_path, $filename);

@@ @@
           }

           $content = $serializer->serialize($data_structure, $format);
-          $context['results']['file'] = \Drupal::service('file_system')->saveData($content, $filename_path, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+          $context['results']['file'] = \Drupal::service('file_system')->saveData($content, $filename_path, FileSystemInterface::EXISTS_REPLACE);

           $zip->addFile($filename_path, $filename);
         }
@@ @@
         $files_to_export['files'][$item['id']]['media'] = $filename;

         $content = $serializer->serialize($media, $format);
-        $context['results']['file'] = \Drupal::service('file_system')->saveData($content, $filename_path, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+        $context['results']['file'] = \Drupal::service('file_system')->saveData($content, $filename_path, FileSystemInterface::EXISTS_REPLACE);
         $zip->addFile($filename_path, 'library/' . $filename);

         $file_id = $media->get('tft_file')->getValue()[0]['target_id'];
@@ @@
           $files_to_export['files'][$item['id']]['file'] = $filename;
           $filename_path = "{$folder_library}/{$filename}";
           $content = $serializer->serialize($file, $format);
-          $context['results']['file'] = \Drupal::service('file_system')->saveData($content, $filename_path, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+          $context['results']['file'] = \Drupal::service('file_system')->saveData($content, $filename_path, FileSystemInterface::EXISTS_REPLACE);
           $zip->addFile($filename_path, 'library/' . $filename);
         }
       }
@@ @@
           $files_to_export['terms'][] = $filename;

           $content = $serializer->serialize($term, $format);
-          $context['results']['file'] = \Drupal::service('file_system')->saveData($content, $filename_path, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+          $context['results']['file'] = \Drupal::service('file_system')->saveData($content, $filename_path, FileSystemInterface::EXISTS_REPLACE);

           $zip->addFile($filename_path, 'library/' . $filename);
         }
@@ @@
     $filename_path = "{$dir}/{$filename}";
     $files_to_export['activities'][] = $filename;

-    \Drupal::service('file_system')->saveData($content, $filename_path, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+    \Drupal::service('file_system')->saveData($content, $filename_path, FileSystemInterface::EXISTS_REPLACE);

     $zip->addFile($filename_path, $filename);
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/opigno_group_manager/opigno_group_manager.module:208

    ---------- begin diff ----------
@@ @@
 /**
  * Implements hook_entity_operation().
  */
-function opigno_group_manager_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
+function opigno_group_manager_entity_operation(EntityInterface $entity) {
   if (!(\Drupal::currentUser()->hasPermission('access content'))) {
     return [];
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

