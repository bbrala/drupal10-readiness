diff --git a/instapage.info.yml b/instapage.info.yml
index 856dc33..89100de 100644
--- a/instapage.info.yml
+++ b/instapage.info.yml
@@ -2,8 +2,7 @@ name: Instapage
 type: module
 description: Implements Instapage landing pages as menu callback.
 package: Web services
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: instapage.settings
 libraries:
   - instapage/insta-style
\ No newline at end of file
diff --git a/src/Controller/PageSettingsController.php b/src/Controller/PageSettingsController.php
index bc43f80..508eb6a 100644
--- a/src/Controller/PageSettingsController.php
+++ b/src/Controller/PageSettingsController.php
@@ -135,7 +135,7 @@ class PageSettingsController extends ControllerBase {
                   ],
                 ],
               ];
-              $op_links = render($links);
+              $op_links = \Drupal::service('renderer')->render($links);
 
               // The current url alias of the page.
               $path_url = Url::fromUri('internal:/' . $path, ['attributes' => ['target' => '_blank']]);
@@ -166,7 +166,7 @@ class PageSettingsController extends ControllerBase {
 
     // Render the rable.
     $table['#rows'] = $rows;
-    $table_render = render($table);
+    $table_render = \Drupal::service('renderer')->render($table);
 
     $add_new = [
       '#type' => 'link',
@@ -178,7 +178,7 @@ class PageSettingsController extends ControllerBase {
     $add_new['#attributes']['class'][] = 'instapage-add-new';
 
     // Render the 'Add new page' link.
-    $add_new_render = render($add_new);
+    $add_new_render = \Drupal::service('renderer')->render($add_new);
 
     $build['#markup'] = $markup . $add_new_render . $table_render;
     $build['#attached']['library'][] = 'core/drupal.dialog.ajax';
diff --git a/tests/src/Functional/PageFormAccessTest.php b/tests/src/Functional/PageFormAccessTest.php
index 29800b3..41a3e2c 100644
--- a/tests/src/Functional/PageFormAccessTest.php
+++ b/tests/src/Functional/PageFormAccessTest.php
@@ -49,7 +49,7 @@ class PageFormAccessTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->settingsConfig = $this->config('instapage.settings');
     $this->pagesConfig = $this->config('instapage.pages');
@@ -135,13 +135,13 @@ class PageFormAccessTest extends BrowserTestBase {
     $this->loginCreateUser(['administer instapage landing pages']);
     if (!empty($this->settingsConfig->get('instapage_user_token'))) {
       $this->drupalGet(Url::fromRoute('instapage.page_new'));
-      $this->assertField('page');
-      $this->assertField('path');
+      $this->assertSession()->fieldExists('page');
+      $this->assertSession()->fieldExists('path');
     }
     else {
       $this->drupalGet(Url::fromRoute('instapage.page_new'));
-      $this->assertNoField('page');
-      $this->assertNoField('path');
+      $this->assertSession()->fieldNotExists('page');
+      $this->assertSession()->fieldNotExists('path');
     }
   }
 
diff --git a/tests/src/FunctionalJavascript/PageSettingsControllerTest.php b/tests/src/FunctionalJavascript/PageSettingsControllerTest.php
index 1b30810..b58dd5f 100644
--- a/tests/src/FunctionalJavascript/PageSettingsControllerTest.php
+++ b/tests/src/FunctionalJavascript/PageSettingsControllerTest.php
@@ -59,7 +59,7 @@ class PageSettingsControllerTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'administer instapage settings',
diff --git a/tests/src/Kernel/ApiTest.php b/tests/src/Kernel/ApiTest.php
index bc9c652..a0f1107 100644
--- a/tests/src/Kernel/ApiTest.php
+++ b/tests/src/Kernel/ApiTest.php
@@ -73,11 +73,11 @@ class ApiTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->settingsConfig = $this->config('instapage.settings');
     $this->pagesConfig = $this->config('instapage.pages');
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->container->set('http_client', $this->mockClient);
     $this->api = $this->container->get('instapage.api');
     $this->token = 'iuaphdsaihdhjsdikbfhdsjbfhskfius744758ogf83bfi3bbfbf88ob3zbfsdf3';
diff --git a/tests/src/Kernel/PageDeleteFormTest.php b/tests/src/Kernel/PageDeleteFormTest.php
index 08567f5..cde03bc 100644
--- a/tests/src/Kernel/PageDeleteFormTest.php
+++ b/tests/src/Kernel/PageDeleteFormTest.php
@@ -79,16 +79,16 @@ class PageDeleteFormTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->mockClient
       ->method('request')
       ->will($this->onConsecutiveCalls(
         new Response(200, [], '{"success":true,"error":false,"data":{"accountkeys":["auihldailbdaibd287z738g3vb39b3z9bzigb9gf3gbfi3bf83gf8383gh38g8b3","ajsibdu28orh3obfo3bfo38fb3ozbf3izfb3zbf3zb3zbf3ib3ib3zibf3zibf33","ahsuh2o8hc3gtb3z80f38bz3b3oh8v3biz3bfu83hb3zbvhbu83bvz3bvz3bvb3b","fb3ibf389hf3bfz839hbf3bf3ufb3ubf3bf3bu3bf3bfu3bfuz3bz3bf3bf3f3bf"]},"message":"Found 4 keys"}', '1.1', 'OK'),
         new Response(200, [], '{"success":true,"error":false}', '1.1', 'OK')
       ));
-    $this->mockRequestStack = $this->getMockBuilder(RequestStack::class)->disableOriginalConstructor()->getMock();
+    $this->mockRequestStack = $this->createMock(RequestStack::class);
     $this->mockRequestStack
       ->method('getCurrentRequest')
       ->willReturn(new Request([], [], ['instapage_id' => '234567'], [], []));
diff --git a/tests/src/Kernel/PageEditFormTest.php b/tests/src/Kernel/PageEditFormTest.php
index 96ed1c6..62bf28e 100644
--- a/tests/src/Kernel/PageEditFormTest.php
+++ b/tests/src/Kernel/PageEditFormTest.php
@@ -79,16 +79,16 @@ class PageEditFormTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->mockClient
       ->method('request')
       ->will($this->onConsecutiveCalls(
         new Response(200, [], '{"success":true,"error":false,"data":{"accountkeys":["auihldailbdaibd287z738g3vb39b3z9bzigb9gf3gbfi3bf83gf8383gh38g8b3","ajsibdu28orh3obfo3bfo38fb3ozbf3izfb3zbf3zb3zbf3ib3ib3zibf3zibf33","ahsuh2o8hc3gtb3z80f38bz3b3oh8v3biz3bfu83hb3zbvhbu83bvz3bvz3bvb3b","fb3ibf389hf3bfz839hbf3bf3ufb3ubf3bf3bu3bf3bfu3bfuz3bz3bf3bf3f3bf"]},"message":"Found 4 keys"}', '1.1', 'OK'),
         new Response(200, [], '{"success":true,"error":false}', '1.1', 'OK')
       ));
-    $this->mockRequestStack = $this->getMockBuilder(RequestStack::class)->disableOriginalConstructor()->getMock();
+    $this->mockRequestStack = $this->createMock(RequestStack::class);
     $this->mockRequestStack
       ->method('getCurrentRequest')
       ->willReturn(new Request([], [], ['instapage_id' => '234567'], [], []));
diff --git a/tests/src/Kernel/PageNewFormTest.php b/tests/src/Kernel/PageNewFormTest.php
index 3f809c6..261baa2 100644
--- a/tests/src/Kernel/PageNewFormTest.php
+++ b/tests/src/Kernel/PageNewFormTest.php
@@ -71,9 +71,9 @@ class PageNewFormTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->mockClient
       ->method('request')
       ->will($this->onConsecutiveCalls(
diff --git a/tests/src/Kernel/SettingsFormTest.php b/tests/src/Kernel/SettingsFormTest.php
index 97f6e4a..5750ccb 100644
--- a/tests/src/Kernel/SettingsFormTest.php
+++ b/tests/src/Kernel/SettingsFormTest.php
@@ -69,9 +69,9 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->container->set('http_client', $this->mockClient);
     $this->token = 'iuaphdsaihdhjsdikbfhdsjbfhskfius744758ogf83bfi3bbfbf88ob3zbfsdf3';
     $this->email = 'testing@testing.com';
