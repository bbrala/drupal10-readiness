modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_general/vc_actions_general.install
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/src/Access/MaxVolunteers.php
modules/contrib/vc_base/modules/vc_actions/src/Entity/VCAction.php
modules/contrib/vc_base/modules/vc_actions/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_contacts/modules/vc_contacts_volunteers/src/Plugin/AJAXDashboardButton/VolunteerContacts.php
modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactForm.php
modules/contrib/vc_base/modules/vc_contacts/vc_contact.page.inc
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_general/vc_actions_general.module
modules/contrib/vc_base/modules/vc_events/src/Form/VCEventForm.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_contacts/src/Controller/GroupVCGCContactsController.php
modules/contrib/vc_base/modules/vc_groups/modules/vc_groups_dashboard/vc_groups_dashboard.module
modules/contrib/vc_base/modules/vc_groups/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedRevisionRevertForm.php
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/src/Access/NewVolunteer.php
modules/contrib/vc_base/modules/vc_contacts/vc_contacts.install
modules/contrib/vc_base/modules/vc_needs/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/src/Access/VolunteerPendingStatus.php
modules/contrib/vc_base/modules/vc_operations/vc_operations.module
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/src/Controller/VCActionsVolunteerController.php
modules/contrib/vc_base/modules/vc_resources/modules/vc_resources_information/src/Plugin/AJAXDashboardSection/UserInformationResources.php
modules/contrib/vc_base/modules/vc_contacts/vc_contacts.module
modules/contrib/vc_base/modules/vc_dashboard/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_resources/src/Plugin/views_add_button/VABVCResource.php
modules/contrib/vc_base/modules/vc_groups/vc_groups.module
modules/contrib/vc_base/modules/vc_needs/src/Access/ActiveNeed.php
modules/contrib/vc_base/modules/vc_needs/src/Controller/VCNeedController.php
modules/contrib/vc_base/modules/vc_actions/src/Entity/VCActionInterface.php
modules/contrib/vc_base/modules/vc_actions/src/Entity/VCActionType.php
modules/contrib/vc_base/modules/vc_events/src/Form/VCEventSettingsForm.php
modules/contrib/vc_base/modules/vc_events/src/Form/VCEventTypeDeleteForm.php
modules/contrib/vc_base/modules/vc_actions/src/Entity/VCActionTypeInterface.php
modules/contrib/vc_base/modules/vc_actions/src/Entity/VCActionViewsData.php
modules/contrib/vc_base/modules/vc_actions/vc_action.page.inc
modules/contrib/vc_base/modules/vc_actions/vc_actions.module
modules/contrib/vc_base/modules/vc_actions/src/Form/VCActionDeleteForm.php
modules/contrib/vc_base/modules/vc_resources/src/VCResourceAccessControlHandler.php
modules/contrib/vc_base/modules/vc_events/src/Form/VCEventTypeForm.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_contacts/src/Plugin/GroupContentEnabler/GroupVCGCContacts.php
modules/contrib/vc_base/modules/vc_actions/src/Form/VCActionForm.php
modules/contrib/vc_base/modules/vc_events/src/VCEventAccessControlHandler.php
modules/contrib/vc_base/modules/vc_needs/vc_need.page.inc
modules/contrib/vc_base/modules/vc_dashboard/vc_dashboard.module
modules/contrib/vc_base/modules/vc_needs/vc_needs.install
modules/contrib/vc_base/modules/vc_events/src/Entity/VCEvent.php
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/src/Plugin/views/field/VolunteerForNeed.php
modules/contrib/vc_base/modules/vc_actions/src/Form/VCActionSettingsForm.php
modules/contrib/vc_base/modules/vc_actions/src/Form/VCActionTypeDeleteForm.php
modules/contrib/vc_base/modules/vc_contacts/modules/vc_contacts_volunteers/src/Plugin/EntityReferenceSelection/ProfileLink.php
modules/contrib/vc_base/modules/vc_resources/src/VCResourceHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_contacts/src/Plugin/GroupContentEnabler/GroupVCGCContactsDeriver.php
modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedRevisionRevertTranslationForm.php
modules/contrib/vc_base/modules/vc_actions/src/Form/VCActionTypeForm.php
modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactRevisionDeleteForm.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_contacts/src/Routing/GroupVCGCContactsRouteProvider.php
modules/contrib/vc_base/modules/vc_events/src/VCEventHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_actions/src/VCActionAccessControlHandler.php
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/src/VCActionsVolunteerTrait.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_contacts/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_resources/modules/vc_resources_information/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_events/src/VCEventListBuilder.php
modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedSettingsForm.php
modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedTypeDeleteForm.php
modules/contrib/vc_base/modules/vc_contacts/modules/vc_contacts_volunteers/src/VCContactVolunteersUtilities.php
modules/contrib/vc_base/modules/vc_actions/src/VCActionHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_events/src/VCEventPermissions.php
modules/contrib/vc_base/modules/vc_contacts/modules/vc_contacts_volunteers/vc_contacts_volunteers.install
modules/contrib/vc_base/modules/vc_contacts/modules/vc_contacts_volunteers/vc_contacts_volunteers.module
modules/contrib/vc_base/modules/vc_resources/src/VCResourceListBuilder.php
modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedTypeForm.php
modules/contrib/vc_base/modules/vc_events/src/Entity/VCEventInterface.php
modules/contrib/vc_base/modules/vc_events/src/Entity/VCEventType.php
modules/contrib/vc_base/modules/vc_resources/src/VCResourcePermissions.php
modules/contrib/vc_base/modules/vc_needs/src/Plugin/EntityReferenceSelection/AllOfNeedTypeOrQuery.php
modules/contrib/vc_base/modules/vc_events/src/Entity/VCEventTypeInterface.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_contacts/vc_gc_contacts.module
modules/contrib/vc_base/modules/vc_events/src/Entity/VCEventViewsData.php
modules/contrib/vc_base/modules/vc_actions/src/VCActionListBuilder.php
modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactRevisionRevertForm.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_resources/src/Controller/GroupVCGCResourcesController.php
modules/contrib/vc_base/modules/vc_resources/modules/vc_resources_information/vc_resources_information.install
modules/contrib/vc_base/modules/vc_events/src/Form/VCEventDeleteForm.php
modules/contrib/vc_base/modules/vc_events/src/VCEventTranslationHandler.php
modules/contrib/vc_base/modules/vc_needs/vc_needs.module
modules/contrib/vc_base/modules/vc_contacts/src/Controller/VCContactController.php
modules/contrib/vc_base/modules/vc_actions/src/VCActionPermissions.php
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/vc_actions_volunteer.install
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/vc_actions_volunteer.module
modules/contrib/vc_base/modules/vc_events/src/VCEventTypeHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_operations/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_resources/src/VCResourceStorage.php
modules/contrib/vc_base/modules/vc_events/src/VCEventTypeListBuilder.php
modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/vc_actions_volunteer.views.inc
modules/contrib/vc_base/modules/vc_needs/src/Entity/VCNeed.php
modules/contrib/vc_base/modules/vc_actions/src/VCActionTranslationHandler.php
modules/contrib/vc_base/modules/vc_resources/modules/vc_resources_information/vc_resources_information.module
modules/contrib/vc_base/modules/vc_events/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedAccessControlHandler.php
modules/contrib/vc_base/modules/vc_resources/src/Controller/VCResourceController.php
modules/contrib/vc_base/modules/vc_actions/src/VCActionTypeHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_actions/src/VCActionTypeListBuilder.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_resources/src/Plugin/GroupContentEnabler/GroupVCGCResources.php
modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactRevisionRevertTranslationForm.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_resources/src/Plugin/GroupContentEnabler/GroupVCGCResourcesDeriver.php
modules/contrib/vc_base/modules/vc_resources/src/VCResourceStorageInterface.php
modules/contrib/vc_base/modules/vc_resources/src/VCResourceTranslationHandler.php
modules/contrib/vc_base/modules/vc_events/vc_event.page.inc
modules/contrib/vc_base/modules/vc_group_content/vc_gc_resources/src/Routing/GroupVCGCResourcesRouteProvider.php
modules/contrib/vc_base/modules/vc_events/vc_events.module
modules/contrib/vc_base/modules/vc_resources/src/VCResourceTypeHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_resources/src/VCResourceTypeListBuilder.php
modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactSettingsForm.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_resources/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_resources/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactTypeDeleteForm.php
modules/contrib/vc_base/modules/vc_group_content/vc_gc_resources/vc_gc_resources.module
modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactTypeForm.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedListBuilder.php
modules/contrib/vc_base/modules/vc_contacts/src/Plugin/EntityReferenceSelection/VCContactAuthor.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedPermissions.php
modules/contrib/vc_base/modules/vc_resources/vc_resource.page.inc
modules/contrib/vc_base/modules/vc_resources/vc_resources.install
modules/contrib/vc_base/modules/vc_resources/vc_resources.module
modules/contrib/vc_base/modules/vc_needs/src/VCNeedStatus.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedStatusManager.php
modules/contrib/vc_base/modules/vc_contacts/src/Entity/VCContact.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedStatusManagerInterface.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedStorage.php
modules/contrib/vc_base/modules/vc_needs/src/Entity/VCNeedInterface.php
modules/contrib/vc_base/modules/vc_needs/src/Entity/VCNeedType.php
modules/contrib/vc_base/modules/vc_needs/src/Entity/VCNeedTypeInterface.php
modules/contrib/vc_base/modules/vc_needs/src/Entity/VCNeedViewsData.php
modules/contrib/vc_base/modules/vc_resources/src/Entity/VCResource.php
modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedDeleteForm.php
modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedForm.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedStorageInterface.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedTranslationHandler.php
modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedRevisionDeleteForm.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedTypeHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_needs/src/VCNeedTypeListBuilder.php
modules/contrib/vc_base/modules/vc_contacts/src/Entity/VCContactInterface.php
modules/contrib/vc_base/modules/vc_contacts/src/Entity/VCContactType.php
modules/contrib/vc_base/modules/vc_contacts/src/Entity/VCContactTypeInterface.php
modules/contrib/vc_base/modules/vc_contacts/src/Entity/VCContactViewsData.php
modules/contrib/vc_base/modules/vc_contacts/src/VCContactAccessControlHandler.php
modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactDeleteForm.php
modules/contrib/vc_base/modules/vc_resources/src/Entity/VCResourceInterface.php
modules/contrib/vc_base/modules/vc_resources/src/Entity/VCResourceType.php
modules/contrib/vc_base/modules/vc_resources/src/Entity/VCResourceTypeInterface.php
modules/contrib/vc_base/modules/vc_resources/src/Entity/VCResourceViewsData.php
modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceDeleteForm.php
modules/contrib/vc_base/modules/vc_contacts/src/VCContactHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceForm.php
modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceRevisionDeleteForm.php
modules/contrib/vc_base/modules/vc_contacts/src/VCContactListBuilder.php
modules/contrib/vc_base/modules/vc_contacts/src/VCContactPermissions.php
modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceRevisionRevertForm.php
modules/contrib/vc_base/modules/vc_contacts/src/VCContactStorage.php
modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceRevisionRevertTranslationForm.php
modules/contrib/vc_base/modules/vc_contacts/src/VCContactStorageInterface.php
modules/contrib/vc_base/modules/vc_contacts/src/VCContactTranslationHandler.php
modules/contrib/vc_base/modules/vc_contacts/src/VCContactTypeHtmlRouteProvider.php
modules/contrib/vc_base/modules/vc_contacts/src/VCContactTypeListBuilder.php
modules/contrib/vc_base/modules/vc_contacts/tests/src/Functional/LoadTest.php
modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceSettingsForm.php
modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceTypeDeleteForm.php
modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceTypeForm.php
modules/contrib/vc_base/modules/vc_resources/src/Plugin/AJAXDashboardSection/UserResources.php

27 files with changes
=====================

1) modules/contrib/vc_base/modules/vc_actions/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/vc_base/modules/vc_dashboard/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/vc_base/modules/vc_actions/modules/vc_actions_volunteer/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/vc_base/modules/vc_operations/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/vc_base/modules/vc_needs/vc_needs.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\vc_needs\Entity\VCNeed;
 /**
  * @file
  * Contains vc_needs.install.
@@ @@
   $definition_manager = \Drupal::entityDefinitionUpdateManager();

     // Create a new field definition.
-    $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('boolean')
+    $new_field = BaseFieldDefinition::create('boolean')
       ->setLabel(t('Active'))
       ->setRevisionable(TRUE)
       ->setDescription(t('A boolean indicating whether the Need is active for volunteer purposes.'))
@@ @@
   $definition_manager = \Drupal::entityDefinitionUpdateManager();

   // Create a new field definition.
-  $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('list_string')
+  $new_field = BaseFieldDefinition::create('list_string')
     ->setLabel(t('Need Status'))
     ->setDescription(t('The current status of the need'))
     ->setRevisionable(TRUE)
     ->setSettings([
-      'allowed_values' => \Drupal\vc_needs\Entity\VCNeed::getNeedStatusesAsSelectOptions(),
+      'allowed_values' => VCNeed::getNeedStatusesAsSelectOptions(),
       'text_processing' => 0,
     ])
     ->setDefaultValue('inactive')
@@ @@
   foreach ($entities as $entity) {
     $entity->set('need_status', 'active')->save();
   }
-}
+}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


6) modules/contrib/vc_base/modules/vc_needs/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/vc_base/modules/vc_events/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/vc_base/modules/vc_group_content/vc_gc_resources/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/vc_base/modules/vc_group_content/vc_gc_contacts/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/vc_base/modules/vc_resources/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedRevisionRevertTranslationForm.php:88

    ---------- begin diff ----------
@@ @@

     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $latest_revision_translation;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedRevisionRevertForm.php:128

    ---------- begin diff ----------
@@ @@
   protected function prepareRevertedRevision(VCNeedInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $revision;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


13) modules/contrib/vc_base/modules/vc_contacts/src/Controller/VCContactController.php:123

    ---------- begin diff ----------
@@ @@
           ]));
         }
         else {
-          $link = $vc_contact->link($date);
+          $link = $vc_contact->toLink($date)->toString();
         }

         $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/vc_base/modules/vc_contacts/modules/vc_contacts_volunteers/vc_contacts_volunteers.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\vc_contacts_volunteers\VCContactVolunteersUtilities;
 /**
  * @file
  */
@@ @@
 /**
  * Implements hook_help().
  */
-function vc_contacts_volunteers_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
+function vc_contacts_volunteers_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     // Main module help for the vc_contacts module.
     case 'help.page.vc_contacts':
@@ @@
 /**
  * Implements hook_ENTITY_TYPE_view().
  */
-function vc_contacts_volunteers_user_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
+function vc_contacts_volunteers_user_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
   if ($display->getComponent('profile_dashboard')) {
-    $profile = \Drupal\vc_contacts_volunteers\VCContactVolunteersUtilities::getProfileFromUser($entity, TRUE);
+    $profile = VCContactVolunteersUtilities::getProfileFromUser($entity, TRUE);
     $build['profile_dashboard'] = [
       '#theme' => 'ajax_dashboard',
       '#id' => 'vc_dashboard_user_profile',
@@ @@
  * Implements hook_ENTITY_TYPE_insert()
  * @param $entity
  */
-function vc_contacts_volunteers_vc_contact_insert(Drupal\Core\Entity\EntityInterface $entity) {
+function vc_contacts_volunteers_vc_contact_insert(EntityInterface $entity) {
   $query = \Drupal::request()->query->get('associate-user');
   if($entity->bundle() === 'volunteer' && $query) {
     $associate = $entity->get('field_associate_user')->getValue();
@@ @@
  * Implements hook_ENTITY_TYPE_update()
  * @param $entity
  */
-function vc_contacts_volunteers_vc_contact_update(Drupal\Core\Entity\EntityInterface $entity) {
+function vc_contacts_volunteers_vc_contact_update(EntityInterface $entity) {
   vc_contacts_volunteers_vc_contact_insert($entity);
-}
+}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


15) modules/contrib/vc_base/modules/vc_needs/src/Form/VCNeedRevisionDeleteForm.php:56

    ---------- begin diff ----------
@@ @@
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }

@@ @@
     $this->VCNeedStorage->deleteRevision($this->revision->getRevisionId());

     $this->logger('content')->notice('VCNeed: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of VCNeed %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of VCNeed %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.vc_need.canonical',
        ['vc_need' => $this->revision->id()]
    ----------- end diff -----------

Applied rules:
 * FormatDateRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


16) modules/contrib/vc_base/modules/vc_needs/src/Controller/VCNeedController.php:123

    ---------- begin diff ----------
@@ @@
           ]));
         }
         else {
-          $link = $vc_need->link($date);
+          $link = $vc_need->toLink($date)->toString();
         }

         $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


17) modules/contrib/vc_base/modules/vc_groups/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceRevisionRevertTranslationForm.php:88

    ---------- begin diff ----------
@@ @@

     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $latest_revision_translation;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


19) modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceRevisionRevertForm.php:128

    ---------- begin diff ----------
@@ @@
   protected function prepareRevertedRevision(VCResourceInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $revision;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


20) modules/contrib/vc_base/modules/vc_resources/src/Form/VCResourceRevisionDeleteForm.php:56

    ---------- begin diff ----------
@@ @@
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }

@@ @@
     $this->VCResourceStorage->deleteRevision($this->revision->getRevisionId());

     $this->logger('content')->notice('VCResource: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of VCResource %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of VCResource %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.vc_resource.canonical',
        ['vc_resource' => $this->revision->id()]
    ----------- end diff -----------

Applied rules:
 * FormatDateRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


21) modules/contrib/vc_base/modules/vc_resources/src/Controller/VCResourceController.php:123

    ---------- begin diff ----------
@@ @@
           ]));
         }
         else {
-          $link = $vc_resource->link($date);
+          $link = $vc_resource->toLink($date)->toString();
         }

         $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


22) modules/contrib/vc_base/modules/vc_resources/modules/vc_resources_information/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/vc_base/modules/vc_resources/modules/vc_resources_information/src/Plugin/AJAXDashboardSection/UserInformationResources.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\vc_resources_information\Plugin\AJAXDashboardSection;

+use Drupal\user\Entity\User;
 use Drupal\ajax_dashboard\Plugin\AJAXDashboardSectionBase;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
@@ @@
         ]
       ];

-      $u = \Drupal\user\Entity\User::load($user);
+      $u = User::load($user);
       $section['vc_resources_managed_info_resources'] = [
         '#type' => 'button',
         '#value' => t('Information Resources'),
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


24) modules/contrib/vc_base/modules/vc_contacts/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactRevisionRevertTranslationForm.php:88

    ---------- begin diff ----------
@@ @@

     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $latest_revision_translation;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


26) modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactRevisionRevertForm.php:128

    ---------- begin diff ----------
@@ @@
   protected function prepareRevertedRevision(VCContactInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $revision;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


27) modules/contrib/vc_base/modules/vc_contacts/src/Form/VCContactRevisionDeleteForm.php:56

    ---------- begin diff ----------
@@ @@
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }

@@ @@
     $this->VCContactStorage->deleteRevision($this->revision->getRevisionId());

     $this->logger('content')->notice('VCContact: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of VCContact %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of VCContact %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.vc_contact.canonical',
        ['vc_contact' => $this->revision->id()]
    ----------- end diff -----------

Applied rules:
 * FormatDateRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 27 files have been changed by Rector                                      

