diff --git a/src/Controller/UserPointsController.php b/src/Controller/UserPointsController.php
index 89d5ae3..ff0a0f9 100644
--- a/src/Controller/UserPointsController.php
+++ b/src/Controller/UserPointsController.php
@@ -134,7 +134,7 @@ class UserPointsController extends ControllerBase implements ContainerInjectionI
         ]));
       }
       else {
-        $link = $userpoints->link($date);
+        $link = $userpoints->toLink($date)->toString();
       }
 
       $row = [];
diff --git a/src/Form/UserPointsRevisionDeleteForm.php b/src/Form/UserPointsRevisionDeleteForm.php
index b2a37e2..422a808 100644
--- a/src/Form/UserPointsRevisionDeleteForm.php
+++ b/src/Form/UserPointsRevisionDeleteForm.php
@@ -74,7 +74,7 @@ class UserPointsRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -109,7 +109,7 @@ class UserPointsRevisionDeleteForm extends ConfirmFormBase {
     $this->UserPointsStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('User points: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of User points %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of User points %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.userpoints.canonical',
        ['userpoints' => $this->revision->id()]
diff --git a/src/Form/UserPointsRevisionRevertForm.php b/src/Form/UserPointsRevisionRevertForm.php
index d6be60b..20292f1 100644
--- a/src/Form/UserPointsRevisionRevertForm.php
+++ b/src/Form/UserPointsRevisionRevertForm.php
@@ -145,7 +145,7 @@ class UserPointsRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(UserPointsInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Service/UserPointsService.php b/src/Service/UserPointsService.php
index 650f8e5..5f0b55f 100644
--- a/src/Service/UserPointsService.php
+++ b/src/Service/UserPointsService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\userpoints\Service;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
@@ -10,7 +11,6 @@ use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\userpoints\Entity\UserPointsInterface;
 use Drupal\userpoints\Exception\UserPointsException;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the User Points service.
diff --git a/userpoints.info.yml b/userpoints.info.yml
index 2d61e6a..1ace309 100644
--- a/userpoints.info.yml
+++ b/userpoints.info.yml
@@ -1,5 +1,5 @@
 name: Userpoints
 description: Allows to assign points to users.
 type: module
-core_version_requirement: ^9
+core_version_requirement: ^9 || ^10
 configure: userpoints.admin
