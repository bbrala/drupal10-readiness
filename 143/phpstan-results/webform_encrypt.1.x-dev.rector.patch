diff --git a/tests/src/Functional/WebformEncryptEditSumissionsTest.php b/tests/src/Functional/WebformEncryptEditSumissionsTest.php
index 78c13c4..25c85b6 100644
--- a/tests/src/Functional/WebformEncryptEditSumissionsTest.php
+++ b/tests/src/Functional/WebformEncryptEditSumissionsTest.php
@@ -36,7 +36,7 @@ class WebformEncryptEditSumissionsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->notViewEncryptedUser = $this->drupalCreateUser([
       'view any webform submission',
@@ -62,7 +62,8 @@ class WebformEncryptEditSumissionsTest extends BrowserTestBase {
       'test_text_area' => 'Test text area encrypted value',
       'test_not_encrypted' => 'Test not encrypted value',
     ];
-    $this->drupalPostForm('/webform/test_encryption', $edit, 'Submit');
+    $this->drupalGet('/webform/test_encryption');
+    $this->submitForm($edit, 'Submit');
     $assert_session->responseContains('New submission added to Test encryption.');
 
     // Ensure form is not accessible by user without the view encrypted values
@@ -79,8 +80,9 @@ class WebformEncryptEditSumissionsTest extends BrowserTestBase {
     $assert_session->fieldValueEquals('test_text_field', $edit['test_text_field']);
     $assert_session->fieldValueEquals('test_text_area', $edit['test_text_area']);
     $assert_session->fieldValueEquals('test_not_encrypted', $edit['test_not_encrypted']);
+    $this->drupalGet($edit_submission_path);
     // Save the form without changing any values.
-    $this->drupalPostForm($edit_submission_path, [], 'Save');
+    $this->submitForm([], 'Save');
     // Check submission is still editeable and values are unchanged.
     $this->drupalGet($edit_submission_path);
     $assert_session->fieldValueEquals('test_text_field', $edit['test_text_field']);
diff --git a/tests/src/Functional/WebformEncryptFunctionalTest.php b/tests/src/Functional/WebformEncryptFunctionalTest.php
index 30ef4e0..cc1c515 100644
--- a/tests/src/Functional/WebformEncryptFunctionalTest.php
+++ b/tests/src/Functional/WebformEncryptFunctionalTest.php
@@ -43,7 +43,7 @@ class WebformEncryptFunctionalTest extends BrowserTestBase {
   /**
    * Sets the test up.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Test admin user.
     $this->adminUser = $this->drupalCreateUser($this->permissions);
@@ -102,7 +102,8 @@ class WebformEncryptFunctionalTest extends BrowserTestBase {
 
       'test_date' => '2019-09-15',
     ];
-    $this->drupalPostForm('/webform/test_encryption', $edit, 'Submit');
+    $this->drupalGet('/webform/test_encryption');
+    $this->submitForm($edit, 'Submit');
     $assert_session->responseContains('New submission added to Test encryption.');
 
     // Ensure encrypted fields do not show values.
diff --git a/tests/src/Functional/WebformEncryptUninstallTest.php b/tests/src/Functional/WebformEncryptUninstallTest.php
index adb1677..8706f2b 100644
--- a/tests/src/Functional/WebformEncryptUninstallTest.php
+++ b/tests/src/Functional/WebformEncryptUninstallTest.php
@@ -53,18 +53,21 @@ class WebformEncryptUninstallTest extends BrowserTestBase {
       'test_multiple_address_field[items][0][_item_][postal_code]' => 'AA11AA',
       'test_multiple_address_field[items][0][_item_][country]' => 'United Kingdom',
     ];
-    $this->drupalPostForm('/webform/test_encryption', $edit, 'Submit');
+    $this->drupalGet('/webform/test_encryption');
+    $this->submitForm($edit, 'Submit');
     $assert_session->responseContains('New submission added to Test encryption.');
 
     // Uninstall the module.
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('/admin/modules/uninstall');
-    $this->drupalPostForm('admin/modules/uninstall', ['uninstall[webform_encrypt_test]' => TRUE], 'Uninstall');
-    $this->drupalPostForm(NULL, [], 'Uninstall');
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm(['uninstall[webform_encrypt_test]' => TRUE], 'Uninstall');
+    $this->submitForm([], 'Uninstall');
     $assert_session->pageTextContains('The selected modules have been uninstalled.');
     $assert_session->pageTextNotContains('Webform Encrypt Test');
-    $this->drupalPostForm('admin/modules/uninstall', ['uninstall[webform_encrypt]' => TRUE], 'Uninstall');
-    $this->drupalPostForm(NULL, [], 'Uninstall');
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm(['uninstall[webform_encrypt]' => TRUE], 'Uninstall');
+    $this->submitForm([], 'Uninstall');
     $assert_session->pageTextContains('The selected modules have been uninstalled.');
     $assert_session->pageTextNotContains('Webform Encrypt');
 
@@ -124,7 +127,8 @@ class WebformEncryptUninstallTest extends BrowserTestBase {
       'test_multiple_address_field[items][0][_item_][postal_code]' => 'AA11AA',
       'test_multiple_address_field[items][0][_item_][country]' => 'United Kingdom',
     ];
-    $this->drupalPostForm('/webform/test_encryption', $edit, 'Submit');
+    $this->drupalGet('/webform/test_encryption');
+    $this->submitForm($edit, 'Submit');
     $assert_session->responseContains('New submission added to Test encryption.');
     $this->drupalGet('admin/structure/webform/manage/test_encryption/results/submissions');
     $assert_session->responseContains($edit['test_text_field']);
diff --git a/tests/src/Functional/WebformEncryptWizardTest.php b/tests/src/Functional/WebformEncryptWizardTest.php
index 9b98334..63ebf04 100644
--- a/tests/src/Functional/WebformEncryptWizardTest.php
+++ b/tests/src/Functional/WebformEncryptWizardTest.php
@@ -29,7 +29,7 @@ class WebformEncryptWizardTest extends BrowserTestBase {
   /**
    * Sets the test up.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Test admin user.
     $this->adminUser = $this->drupalCreateUser([
@@ -58,14 +58,14 @@ class WebformEncryptWizardTest extends BrowserTestBase {
     ];
 
     // Move to next page.
-    $this->drupalPostForm(NULL, $edit, 'Next Page >');
+    $this->submitForm($edit, 'Next Page >');
 
     // Return to the first page and check the plain text value is still there.
-    $this->drupalPostForm(NULL, NULL, '< Previous Page');
+    $this->submitForm(NULL, '< Previous Page');
     $assert_session->fieldValueEquals('test_last_name_field', $edit['test_last_name_field']);
 
     // Providing the above assertion is correct move back to the second page.
-    $this->drupalPostForm(NULL, NULL, 'Next Page >');
+    $this->submitForm(NULL, 'Next Page >');
 
     // Enter a value on the second page.
     $edit = [
@@ -89,10 +89,10 @@ class WebformEncryptWizardTest extends BrowserTestBase {
     ];
 
     // Post and move to third page.
-    $this->drupalPostForm(NULL, $edit, 'Next Page >');
+    $this->submitForm($edit, 'Next Page >');
 
     // Return to the second page and check previously entered values.
-    $this->drupalPostForm(NULL, NULL, '< Previous Page');
+    $this->submitForm(NULL, '< Previous Page');
     $assert_session->fieldValueEquals('test_email_field', $edit['test_email_field']);
     $assert_session->fieldValueEquals('test_phone_field', $edit['test_phone_field']);
     $assert_session->fieldValueEquals('test_contact_via_phone_field', $edit['test_contact_via_phone_field']);
diff --git a/tests/src/Kernel/WebformEncryptSubmissionStorageTest.php b/tests/src/Kernel/WebformEncryptSubmissionStorageTest.php
index 298bbcb..41b744a 100644
--- a/tests/src/Kernel/WebformEncryptSubmissionStorageTest.php
+++ b/tests/src/Kernel/WebformEncryptSubmissionStorageTest.php
@@ -35,7 +35,7 @@ class WebformEncryptSubmissionStorageTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('webform', ['webform']);
