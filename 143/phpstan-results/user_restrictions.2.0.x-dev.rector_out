modules/contrib/user_restrictions/src/Annotation/UserRestrictionType.php
modules/contrib/user_restrictions/tests/src/Functional/UserRestrictionsBasicTest.php
modules/contrib/user_restrictions/src/Entity/UserRestrictionInterface.php
modules/contrib/user_restrictions/src/Entity/UserRestrictions.php
modules/contrib/user_restrictions/src/Form/UserRestrictionsAddForm.php
modules/contrib/user_restrictions/src/Form/UserRestrictionsDeleteForm.php
modules/contrib/user_restrictions/src/Form/UserRestrictionsEditForm.php
modules/contrib/user_restrictions/src/Form/UserRestrictionsFormBase.php
modules/contrib/user_restrictions/tests/src/Functional/UserRestrictionsExpireTest.php
modules/contrib/user_restrictions/tests/src/Functional/UserRestrictionsLoginTest.php
modules/contrib/user_restrictions/src/Form/UserRestrictionsReviewForm.php
modules/contrib/user_restrictions/tests/src/Functional/UserRestrictionsTestBase.php
modules/contrib/user_restrictions/user_restrictions.module
modules/contrib/user_restrictions/src/Plugin/UserRestrictionType/ClientIp.php
modules/contrib/user_restrictions/src/Plugin/UserRestrictionType/Email.php
modules/contrib/user_restrictions/src/Plugin/UserRestrictionType/Name.php
modules/contrib/user_restrictions/src/Plugin/UserRestrictionType/UserRestrictionTypeBase.php
modules/contrib/user_restrictions/src/Plugin/UserRestrictionTypeInterface.php
modules/contrib/user_restrictions/src/UserRestrictionTypeManager.php
modules/contrib/user_restrictions/src/UserRestrictionTypeManagerInterface.php
modules/contrib/user_restrictions/src/UserRestrictionsListBuilder.php
modules/contrib/user_restrictions/src/UserRestrictionsManager.php
modules/contrib/user_restrictions/src/UserRestrictionsManagerInterface.php

4 files with changes
====================

1) modules/contrib/user_restrictions/tests/src/Functional/UserRestrictionsTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\user_restrictions\Functional;

+use Drupal\Tests\user_restrictions\Functional\Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 abstract class UserRestrictionsTestBase extends BrowserTestBase {
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->storage = \Drupal::service('entity_type.manager')
@@ @@
       ->getStorage('user_restrictions');

     // Allow registration by site visitors without administrator approval.
-    \Drupal::configFactory()->getEditable('user.settings')->set('register', Drupal\user\UserInterface::REGISTER_VISITORS)->save();
+    \Drupal::configFactory()->getEditable('user.settings')->set('register', UserInterface::REGISTER_VISITORS)->save();
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/user_restrictions/tests/src/Functional/UserRestrictionsLoginTest.php:25

    ---------- begin diff ----------
@@ @@
     $edit = [];
     $edit['name'] = $name;
     $edit['mail'] = $this->randomMachineName() . '@example.com';
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
     $text = (string) new FormattableMarkup('The name <em class="placeholder">@name</em> is reserved, and cannot be used.', ['@name' => $name]);
-    $this->assertRaw((string) $text, 'User "name" restricted.');
+    $this->assertSession()->responseContains((string) $text);
   }

   /**
@@ @@
     $edit = [];
     $edit['name'] = 'lolcats';
     $edit['mail'] = $this->randomMachineName() . '@example.com';
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message with further instructions has been sent to your email address.'), 'User registered successfully.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
+    $this->assertSession()->pageTextContains(t('A welcome message with further instructions has been sent to your email address.'));
   }

   /**
@@ @@
     $edit = [];
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $mail;
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
     $text = (string) new FormattableMarkup('The email <em class="placeholder">@mail</em> is reserved, and cannot be used.', ['@mail' => $mail]);
-    $this->assertRaw((string) $text, 'User "email" restricted.');
+    $this->assertSession()->responseContains((string) $text);
   }

   /**
@@ @@
     $edit = [];
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = 'typhonius@mail.ru';
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message with further instructions has been sent to your email address.'), 'User registered successfully.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
+    $this->assertSession()->pageTextContains(t('A welcome message with further instructions has been sent to your email address.'));
   }

   /**
@@ @@
     $edit = [];
     $edit['name'] = 'ilikecoffee';
     $edit['mail'] = $mail;
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message with further instructions has been sent to your email address.'), 'User registered successfully.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
+    $this->assertSession()->pageTextContains(t('A welcome message with further instructions has been sent to your email address.'));
   }

   /**
@@ @@
     $edit = [];
     $edit['name'] = $name;
     $edit['mail'] = $this->randomMachineName() . '@' . $this->randomMachineName() . '.com';
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
     $text = (string) new FormattableMarkup('The name <em class="placeholder">@name</em> is reserved, and cannot be used.', ['@name' => $name]);
-    $this->assertRaw((string) $text, 'User "name" restricted.');
+    $this->assertSession()->responseContains((string) $text);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertRawRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/user_restrictions/tests/src/Functional/UserRestrictionsExpireTest.php:23

    ---------- begin diff ----------
@@ @@
   public function testUserRestrictionsRecordExists() {
     $restriction = $this->storage->load($this->id);
     $this->assertNotNull($restriction, 'User Restriction exists in the database');
-    $this->assertEqual($restriction->label(), $this->name, 'User restriction exists');
+    $this->assertEquals($restriction->label(), $this->name, 'User restriction exists');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/user_restrictions/tests/src/Functional/UserRestrictionsBasicTest.php:40

    ---------- begin diff ----------
@@ @@
   public function testUserRestrictionsRecordExists() {
     $restriction = $this->storage->load($this->id);
     $this->assertTrue($restriction, 'User restriction exists in the database');
-    $this->assertEqual($restriction->label(), $this->label, 'User restriction name matches');
-    $this->assertEqual($restriction->getRuleType(), $this->type, 'User restriction type matches');
+    $this->assertEquals($restriction->label(), $this->label, 'User restriction name matches');
+    $this->assertEquals($restriction->getRuleType(), $this->type, 'User restriction type matches');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

