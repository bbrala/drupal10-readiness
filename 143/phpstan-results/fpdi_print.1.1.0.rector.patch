diff --git a/composer.json b/composer.json
index 955490b..aa08622 100644
--- a/composer.json
+++ b/composer.json
@@ -18,8 +18,8 @@
     }
   ],
   "require": {
-    "drupal/core": "^8 || ^9",
     "tecnickcom/tcpdf": "6.4.*",
-    "setasign/fpdi": "^2.0"
+    "setasign/fpdi": "^2.0",
+    "drupal/core": "^9.3 || ^10"
   }
 }
diff --git a/fpdi_print.info.yml b/fpdi_print.info.yml
index e51257a..3bdcfda 100644
--- a/fpdi_print.info.yml
+++ b/fpdi_print.info.yml
@@ -1,7 +1,7 @@
 name: 'FPDI Print'
 type: module
 description: 'Allows any views can print from existing PDF'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: 'Views'
 configure: fpdi_print.settings
 
diff --git a/src/Controller/ViewPrintController.php b/src/Controller/ViewPrintController.php
index a8396e8..a2fec42 100644
--- a/src/Controller/ViewPrintController.php
+++ b/src/Controller/ViewPrintController.php
@@ -143,7 +143,7 @@ class ViewPrintController extends ControllerBase {
         }
         if ($print_logo) {
           $site_config = \Drupal::config('system.site');
-          $logo =  \Drupal::root().file_url_transform_relative(file_create_url(theme_get_setting('logo.url')));
+          $logo =  \Drupal::root().\Drupal::service('file_url_generator')->generateString(theme_get_setting('logo.url'));
           $path_parts = pathinfo($logo);
           $logo_width_max = 10;
           $logo_height_max = 11;
diff --git a/src/PrintBuilder.php b/src/PrintBuilder.php
index 1250c01..a178715 100644
--- a/src/PrintBuilder.php
+++ b/src/PrintBuilder.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\fpdi_print;
 
+use Drupal\file\Entity\File;
+use Drupal\Core\Url;
 use Drupal\Component\Utility\Html;
 use FPDM;
 use setasign\Fpdi\Tcpdf\Fpdi;
@@ -320,7 +322,7 @@ class PrintBuilder {
     }
   }
   protected function getRealPathFromFid(int $fid) {
-    $file = \Drupal\file\Entity\File::load($fid);
+    $file = File::load($fid);
     if(!empty($file)){
       $uri = $file->getFileUri();
       $stream_manager = \Drupal::service('stream_wrapper_manager')->getViaUri($uri);
@@ -337,7 +339,7 @@ class PrintBuilder {
       $filename = $this->getRealPathFromFid($url);
     } elseif (!file_exists($url)) {
       //remove url absolute
-      $urlSite = \Drupal\Core\Url::fromUserInput('/', ['absolute' => TRUE])
+      $urlSite = Url::fromUserInput('/', ['absolute' => TRUE])
         ->toString();
       if (strpos($url, $urlSite) !== false) {
         $url = str_replace($urlSite, '', $url);
diff --git a/src/fpdm/src/filters/FilterASCIIHex.php b/src/fpdm/src/filters/FilterASCIIHex.php
index c2abeb3..ddf41a5 100644
--- a/src/fpdm/src/filters/FilterASCIIHex.php
+++ b/src/fpdm/src/filters/FilterASCIIHex.php
@@ -20,20 +20,20 @@
 		*
 		**/
 	  function decode($data) {
-			
+
 			$hexString=$data;
 			$BinStr = '';
-		
+
 			$hexLength=strlen($hexString);
 			// only hex numbers is allowed
 			 if ($hexLength % 2 != 0 || preg_match("/[^\da-fA-F]/",$hexString)) return FALSE;
-		
-		
+
+
 			//Loop through the input and convert it
 			for ($i = 0; $i < $hexLength; $i += 2)
 				$BinStr .= '%'.substr ($hexString, $i, 2);
-		
-			
+
+
 			// Raw url-decode and return the result
 			return rawurldecode ($BinStr);//chr(hexdec())
 	  }
diff --git a/src/fpdm/src/filters/FilterFlate.php b/src/fpdm/src/filters/FilterFlate.php
index 908a3b6..e85bb8d 100644
--- a/src/fpdm/src/filters/FilterFlate.php
+++ b/src/fpdm/src/filters/FilterFlate.php
@@ -11,14 +11,14 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 	if(isset($FPDM_FILTERS)) array_push($FPDM_FILTERS,"FlateDecode");
 
     class FilterFlate {
-        
+
         var $data = null;
         var $dataLength = 0;
-    
+
         function error($msg) {
             die($msg);
         }
-        
+
         /**
          * Method to decode GZIP compressed data.
          *
@@ -26,19 +26,19 @@ if (!call_user_func_array('class_exists', $__tmp)) {
          * @return uncompressed data
          */
         function decode($data) {
-    
+
             $this->data = $data;
             $this->dataLength = strlen($data);
-    
+
             // uncompress
             $data=gzuncompress($data);
-            
+
             if(!$data) $this->error("FilterFlateDecode: invalid stream data.");
-             
+
             return $data;
         }
-        
-        
+
+
         function encode($in) {
             return gzcompress($in, 9);
         }
diff --git a/src/fpdm/src/fpdm.php b/src/fpdm/src/fpdm.php
index 721f345..3b8bf93 100644
--- a/src/fpdm/src/fpdm.php
+++ b/src/fpdm/src/fpdm.php
@@ -473,30 +473,30 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 		**/
 		function Merge($flatten=false) {
 		//------------------------------
-		
+
 			if($flatten) $this->Flatten();
-		
-			
+
+
 			if($this->support == "native") {
-			
+
 				if($this->fdf_parse_needed) {
 					$fields=$this->parseFDFContent();
 				}else {
 					$fields=$this->fields;
 				}
-				
+
 				$count_fields=count($fields);
-				
+
 				if($this->verbose&&($count_fields==0)) 
 					$this->dumpContent("The FDF content has either no field data or parsing may failed","FDF parser: ");
-						
+
 				$fields_value_definition_lines=array();
-				
+
 				$count_entries=$this->parsePDFEntries($fields_value_definition_lines);
-			
-			
+
+
 				if($count_entries) {
-				
+
 					$this->value_entries=$fields_value_definition_lines;
 					if($this->verbose) {
 						$this->dumpContent("$count_entries Field entry values found for $count_fields field values to fill","Merge info: ");
@@ -511,18 +511,18 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 						}
 					}
 					//===========================================================
-				
+
 					//===== Cross refs/size fixes (offsets calculations for objects have been previously be done in set_field_value) ======= 
-					
+
 					//Update cross reference table to match object size changes 
 					$this->fix_xref_table();
-					
+
 					//update the pointer to the cross reference table
 					$this->fix_xref_start();
-					
+
 				}else
 					$this->Error("PDF file is empty!");
-					
+
 			} //else pdftk's job is done in Output, not here.
 		}
 		
@@ -1094,17 +1094,17 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 		{
 			//echo "<br>_hex2bin($hexString)";
 			$BinStr = '';
-		
+
 			$hexLength=strlen($hexString);
 			// only hex numbers is allowed
 			 if ($hexLength % 2 != 0 || preg_match("/[^\da-fA-F]/",$hexString)) return FALSE;
-		
-		
+
+
 			//Loop through the input and convert it
 			for ($i = 0; $i < $hexLength; $i += 2)
 				$BinStr .= '%'.substr ($hexString, $i, 2);
-		
-			
+
+
 			// Raw url-decode and return the result
 			return rawurldecode ($BinStr);//chr(hexdec())
 		}
@@ -1691,16 +1691,16 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 								
 								//We process fields here, save only Annotations texts that are supported by now
 								if($subtype=="Widget") {
-								
+
 									if($name != '') {
 										$lines["$name"]=$object;
 										if($verbose_parsing) $this->dumpContent("$type $subtype (obj id=$obj) is a text annotation of name '$name', saves it.");
 									}//else
 //										$this->Error("$type $subtype (obj id=$obj) is a text annotation without a name, this cannot be.");
-									
-									
+
+
 									$values=$object["values"];
-									
+
 									//Sanity values checks, watchdog.
 //									if(!array_key_exists("current",$values)) $this->Error("Cannot find value (/V) for field $name");
 //									if(!array_key_exists("default",$values)) $this->Error("Cannot find default value (/DV) for field $name");
@@ -1818,7 +1818,7 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 									}
 									
 								} else {
-								
+
 									/*
 									Producer<FEFF004F00700065006E004F00660066006900630065002E006F0072006700200033002E0032>
 									/CreationDate (D:20101225151810+01'00')>>
@@ -1828,19 +1828,19 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 										if($verbose_parsing) echo("Creator read ($creator)");
 										$this->info["Creator"]=$creator;
 									}
-								
+
 									if(($producer=='')&&preg_match("/\/Producer\<([^\>]+)\>/",$CurLine,$values)) {
 										$producer=$this->decodeValue("hex",$values[1]);
 										if($verbose_parsing) echo("Producer read ($producer)");
 										$this->info["Producer"]=$producer;
 									}
-									
+
 									if(($creationDate=='')&&preg_match("/\/CreationDate\(([^\)]+)\)/",$CurLine,$values)) {
 										$creationDate=$values[1];
 										if($verbose_parsing) echo("Creation date read ($creationDate)");
 										$this->info["CreationDate"]=$creationDate;
 									}
-								
+
 									//=== DEFINITION ====
 									//preg_match("/^\/Type\s+\/(\w+)$/",$CurLine,$match)
 									$match=array();
@@ -1879,48 +1879,48 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 									}
 									//ENDFIX
 									if(($type=='')||($subtype=='')||($name=="")) {
-									
+
 										if(($type=='')&&$this->extract_pdf_definition_value("/Type",$CurLine,$match)) {
-										
+
 											if($match[1]!='Border') {
 												$type=$match[1];
 												if($verbose_parsing) echo("<br>Object's type is '<i>$type</i>'");
 											}
-											
+
 										}
 										if(($subtype=='')&&$this->extract_pdf_definition_value("/Subtype",$CurLine,$match)) {
-										
+
 											$subtype=$match[1];
 											if($verbose_parsing) echo("<br>Object's subType is '<i>$subtype</i>'");
-											
+
 										}
 										if(($name=="")&&preg_match("/^\/T\s?\((.+)\)\s*$/",$this->_protectContentValues($CurLine),$match)) {
-								
+
 											$name=$this->_unprotectContentValues($match[1]);
 											//FIX: convert ASCII object names to utf-8
 											// don't use utf8_encode($name) yet, it's core function since php 7.2
 											$name = mb_convert_encoding($name, 'UTF-8', 'ASCII');
 											//ENDFIX
 											if($verbose_parsing) echo ("Object's name is '<i>$name</i>'");
-											
+
 											$object["infos"]["name"]=$name; //Keep a track
 											$object["infos"]["name_line"]=$Counter;
-											
+
 											//$this->dumpContent(" Name [$name]");
 										}
-										
+
 									}// else { 
-									
+
 										//=== CONTENT ====
-									
+
 										//$this->dumpContent($CurLine);
 										//=== Now, start the serious work , read DV, V Values and eventually TU
 										//note if(preg_match_all("/^\/(V|DV)\s+(\<|\))([^\)\>]+)(\)|\>)/",$CurLine,$matches)) {
 										//do not work as all is encoded on the same line...
 										if(preg_match("/^\/(V|DV|TU)\s+([\<\(])/",$CurLine,$def)) { 
-											
+
 											//get an human readable format of value type and encoding
-											
+
 											if($def[1] == "TU") {
 												$valuetype="info";
 												$object["infos"]["tooltip"]=$Counter;
@@ -1928,37 +1928,37 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 												$valuetype=($def[1] == "DV") ? "default" : "current";
 												$object["values"]["$valuetype"]=$Counter; //Set a marker to process lately
 											}
-											
+
 											$encoding=($def[2]=="<") ? "hex" : "plain";
-											
+
 											if(preg_match("/^\/(V|DV|TU)\s+(\<|\)|\()([^\)\>]*)(\)|\>\))/",$CurLine,$values)) {
 												$value=$values[3];
 												$value=$this->decodeValue($encoding,$value);
 											}else 
 												$value='';
-											
+
 											if($verbose_parsing) 
 												$this->dumpContent("$type $subtype (obj id=$obj) has $encoding $valuetype value [$value] at line $Counter");
-											
-											
+
+
 										}else if(preg_match("/^\/MaxLen\s+(\d+)/",$CurLine,$values)) {
 											$maxLen=$values[1];
 											$object["constraints"]["maxlen"]=intval($maxLen);
 										} else
 											if($verbose_parsing) echo("WARNING: definition ignored");
-										
+
 										if(substr($CurLine,0,7)=='/Fields' && !$this->needAppearancesTrue) {
 											$CurLine='/NeedAppearances true '.$CurLine;
 											$entries[$Counter]=$CurLine;
 										}
-										
+
 										//TODO: Fetch the XObject..and change Td <> Tj
 /*										if(preg_match("/^\/AP/",$CurLine,$values)) {
 											//die("stop");
 											$CurLine=''; //clear link to Xobject
 											$entries[$Counter]=$CurLine;
 										}*/
-										
+
 //									} 
 									
 								}
@@ -2028,7 +2028,7 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 									
 				
 								}else if(($trailer_table>0)&&((!is_null($id_def))||preg_match("/^\/(Size|Root|Info|ID|DocChecksum)/",$CurLine,$match))) {
-								
+
 									//Value can be extracted using (\d+|\[[^\]]+\])
 									if(preg_match("/\/Size (\d+)/",$CurLine,$match)) {
 										//Seems to match with xref entries count..
@@ -2041,13 +2041,13 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 										$oid=$match[1];
 										$id_def=true;
 										if($verbose_parsing) $this->dumpContent("ID chunk one ($oid) for pdf found.");
-										
+
 										//Determines if the ID definition is one line...
 										if(preg_match("/\>\s?\</",$CurLine,$match))
 											$id_single_line_def=true;
-							
+
 									}  
-									
+
 									if($id_def) {//we are inside the ID definition
 										if($id_single_line_def||$id_multi_line_def) {
 											//decode the second ID chunk
@@ -2061,13 +2061,13 @@ if (!call_user_func_array('class_exists', $__tmp)) {
 										} else
 											$id_multi_line_def=true;
 									}
-									
+
 									if(preg_match("/^\/DocChecksum \/([\da-fA-F]+)/",$CurLine,$match)) {
 										$checksum=$match[1];
 										$this->info["checksum"]=$checksum;
 										if($verbose_parsing) $this->dumpContent("Checksum read ($checksum) for pdf found.");
 									}  
-									
+
 									if(preg_match("/>>/",$CurLine,$match)) 
 										$trailer_table=-1;//negative value: expects startxref to follow
 									
diff --git a/src/fpdm/src/lib/url.php b/src/fpdm/src/lib/url.php
index 52e946c..253ada2 100644
--- a/src/fpdm/src/lib/url.php
+++ b/src/fpdm/src/lib/url.php
@@ -11,10 +11,10 @@
 	*@note 
 	* 	V1.0 (27.10.2010) First release
 	******************************************************************/
-	
+
 	if (!defined('URL_TOOLBOX')) {
-    
-	
+
+
 		function getScheme(/*$port is optional*/) {
 		//---------------------------------------
 			$numargs = func_num_args();
@@ -28,13 +28,13 @@
 			$ports=array_flip($schemes);
 			return (array_key_exists($port,$ports)) ? $ports[$port] : 0;
 		}
-		
+
 		function getHost() {
 		//------------------
 			return $_SERVER["HTTP_HOST"];// [SERVER_NAME] 
 		}
-		
-	
+
+
 		if (!function_exists('fix_path')) {
 			// fixes windows paths...
 			// (windows accepts forward slashes and backwards slashes, so why does PHP use backwards?
@@ -43,14 +43,14 @@
 				return str_replace('\\','/',$path);
 			}
 		}
-		
+
 		function getWebDir($local_dir) {
 		//----------------------------
 			$local_root=$_SERVER["DOCUMENT_ROOT"];
 			$server_dir=str_replace($local_root,'',$local_dir);
 			return $server_dir;
 		}
-		
+
 		//Local dir may be:
 		//  the main script dir: dirname($_SERVER['PHP_SELF'])
 		//  the current script dir fix_path(dirname(__FILE__))
@@ -62,7 +62,7 @@
 			$server_host=getHost();
 			return "{$server_scheme}://{$server_host}/$server_dir";
 		}
-		
+
 		/**
 		 * Compiles url out of array of it's pieces 
 		 * 'query' is ignored if 'query_params' is present
@@ -72,13 +72,13 @@
 		function build_url($aUrl) {
 		//-------------------------
 			//[scheme]://[user]:[pass]@[host]/[path]?[query]#[fragment]
-		   
+
 		    if (!is_array($aUrl)) {
 				return "";
 			}
-		   
+
 			$sQuery = '';
-		   
+
 			// Compile query
 			if (isset($aUrl['query_params']) && is_array($aUrl['query_params'])) {
 				$aPairs = array();
@@ -89,7 +89,7 @@
 			} else {
 				if(isset($aUrl['query'])) $sQuery = $aUrl['query'];
 			}
-		   
+
 			// Compile url
 			$sUrl =
 				$aUrl['scheme'] . '://' . (
@@ -112,7 +112,7 @@
 				);
 			return $sUrl;
 		}
-		
+
 		function resolve_url($relative_url) {
 		//-----------------------------
 			$url=parse_url($relative_url);
@@ -120,8 +120,8 @@
 			$absolute_url=build_url($url);
 			return $absolute_url;
 		}
-		
-		
+
+
 		//Get realpath without checking existence of file like php function does..
 		function resolve_path($path) {
 		//----------------------------------
@@ -132,8 +132,8 @@
 			else $out[]= $fold;
 			} return ($path{0}=='/'?'/':'').join('/', $out);
 		}
-		
-		
+
+
 		//This part is from http://fr2.php.net/manual/en/function.parse-url.php
 		function j_parseUrl($url) {
 		//--------------------------
@@ -177,8 +177,8 @@
 									($parts['port']?":".$parts['port']:"");
 		  return $parts;
 		}
-	
+
 		define('URL_TOOLBOX',1);
-	
+
 	}//End of URL_TOOLBOX
 ?>
\ No newline at end of file
