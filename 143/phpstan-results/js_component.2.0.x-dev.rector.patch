diff --git a/js_component.api.php b/js_component.api.php
index 0c65cda..bc9fda3 100644
--- a/js_component.api.php
+++ b/js_component.api.php
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Form\FormStateInterface;
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * @file
  * Define the JS component API documentation.
@@ -20,12 +22,12 @@
  * @param \Drupal\Core\Form\FormStateInterface $form_state
  *   The form state instance.
  */
-function hook_js_component_form_alter(array &$form, array $configuration, Drupal\Core\Form\FormStateInterface $form_state) {
+function hook_js_component_form_alter(array &$form, array $configuration, FormStateInterface $form_state) {
   $form['resource'] = [
     '#type' => 'select',
-    '#title' => new Drupal\Core\StringTranslation\TranslatableMarkup('Resource'),
+    '#title' => new TranslatableMarkup('Resource'),
     '#options' => [],
-    '#empty_option' => new Drupal\Core\StringTranslation\TranslatableMarkup('- None -'),
+    '#empty_option' => new TranslatableMarkup('- None -'),
     '#default_value' => $configuration['resource'] ?? NULL,
   ];
 }
@@ -40,7 +42,7 @@ function hook_js_component_form_alter(array &$form, array $configuration, Drupal
  */
 function hook_js_component_form_submit(
   array &$values,
-  Drupal\Core\Form\FormStateInterface $form_state
+  FormStateInterface $form_state
 ) {
   if ($resource = $form_state->getValue('resource')) {
     $values['resource'] = $resource;
diff --git a/js_component.info.yml b/js_component.info.yml
index 7a6f1b6..ce9667f 100644
--- a/js_component.info.yml
+++ b/js_component.info.yml
@@ -1,5 +1,5 @@
 type: module
 name: JS Component
 description: Define JS components as custom blocks from a theme or module.
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Other
diff --git a/src/Event/BuildComponentDataEvent.php b/src/Event/BuildComponentDataEvent.php
index 4c0b5e6..e86980f 100644
--- a/src/Event/BuildComponentDataEvent.php
+++ b/src/Event/BuildComponentDataEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\js_component\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\js_component\Plugin\JSComponent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Build component data event object.
diff --git a/src/Plugin/Block/JSComponentBlockType.php b/src/Plugin/Block/JSComponentBlockType.php
index 8dbd3f5..c03b80f 100644
--- a/src/Plugin/Block/JSComponentBlockType.php
+++ b/src/Plugin/Block/JSComponentBlockType.php
@@ -611,8 +611,8 @@ class JSComponentBlockType extends BlockBase implements ContainerFactoryPluginIn
     );
 
     return ($this->eventDispatcher->dispatch(
-      Events::BUILD_COMPONENT_DATA,
-      $component_data_event
+      $component_data_event,
+      Events::BUILD_COMPONENT_DATA
     ))->build();
   }
 
diff --git a/src/Plugin/JSComponent.php b/src/Plugin/JSComponent.php
index 5bc803e..c9df89f 100644
--- a/src/Plugin/JSComponent.php
+++ b/src/Plugin/JSComponent.php
@@ -316,7 +316,7 @@ class JSComponent extends PluginBase implements JSComponentInterface, ContainerF
    * @throws \Exception
    */
   public function getProviderPath() {
-    return drupal_get_path($this->getProviderType(), $this->provider());
+    return \Drupal::service('extension.path.resolver')->getPath($this->getProviderType(), $this->provider());
   }
 
   /**
