modules/contrib/url_restriction_by_role/src/EventSubscriber/UrlRestrictionByRole.php
modules/contrib/url_restriction_by_role/src/Form/UrlRestrictionByRoleSettingsForm.php
modules/contrib/url_restriction_by_role/tests/src/Functional/CrudFormTest.php

2 files with changes
====================

1) modules/contrib/url_restriction_by_role/tests/src/Functional/CrudFormTest.php:34

    ---------- begin diff ----------
@@ @@

     $this->drupalLogin($account);
     $this->drupalGet('/admin/config/search/path/url-restriction-by-role');
-    $this->assertText('Url Restriction by Role');
+    $this->assertSession()->pageTextContains('Url Restriction by Role');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/url_restriction_by_role/src/EventSubscriber/UrlRestrictionByRole.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\url_restriction_by_role\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Session\AccountProxyInterface;
@@ @@
   /**
    * Restrict access to URLs defined.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(RequestEvent $event) {
     $error_message = $this->config->get(static::SETTINGS)->get(static::ERROR_MESSAGE);
     $use_custom_error_message = $this->config->get(static::SETTINGS)->get(static::USE_CUSTOM_ERROR_MESSAGE);
     $roles = $this->currentUser->getRoles();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

