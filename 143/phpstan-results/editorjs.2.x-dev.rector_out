modules/contrib/editorjs/editorjs.module
modules/contrib/editorjs/modules/prism/editorjs_prism.module
modules/contrib/editorjs/editorjs.theme.inc
modules/contrib/editorjs/src/Plugin/EditorJsTools/Header.php
modules/contrib/editorjs/modules/prism/src/Plugin/EditorJsTools/PrismJsCodeTool.php
modules/contrib/editorjs/tests/src/Functional/EditorJsFieldTestBase.php
modules/contrib/editorjs/modules/prism/tests/src/Functional/PrismJsToolTest.php
modules/contrib/editorjs/src/Plugin/EditorJsTools/ImageTool.php
modules/contrib/editorjs/modules/media/editorjs_media.module
modules/contrib/editorjs/src/Annotation/EditorJsTools.php
modules/contrib/editorjs/modules/media/src/Ajax/EditorJsDialogSave.php
modules/contrib/editorjs/src/Controller/ImageController.php
modules/contrib/editorjs/src/Plugin/EditorJsTools/InlineCode.php
modules/contrib/editorjs/src/Plugin/EditorJsTools/LinkTool.php
modules/contrib/editorjs/modules/media/src/MediaLibraryEditorJsOpener.php
modules/contrib/editorjs/src/Plugin/EditorJsTools/ListTool.php
modules/contrib/editorjs/src/Plugin/EditorJsTools/TableTool.php
modules/contrib/editorjs/src/Plugin/Field/FieldFormatter/EditerJsFormatter.php
modules/contrib/editorjs/tests/src/Kernel/EditorJsFieldItemTest.php
modules/contrib/editorjs/modules/media/src/Plugin/EditorJsTools/MediaImageTool.php
modules/contrib/editorjs/src/Plugin/Field/FieldType/EditorjsItem.php
modules/contrib/editorjs/src/Plugin/Field/FieldWidget/EditorjsWidget.php
modules/contrib/editorjs/modules/media/tests/src/Functional/MediaToolTest.php
modules/contrib/editorjs/src/Controller/LinkController.php
modules/contrib/editorjs/src/EditorJsToolsInterface.php
modules/contrib/editorjs/src/EditorJsToolsPluginBase.php
modules/contrib/editorjs/src/EditorJsToolsPluginManager.php
modules/contrib/editorjs/src/Event/EditorJsEvents.php
modules/contrib/editorjs/src/Event/LinkFetchEvent.php
modules/contrib/editorjs/src/Event/MassageValuesEvent.php
modules/contrib/editorjs/src/EventSubscriber/EditorjsSubscriber.php
modules/contrib/editorjs/tests/src/Functional/EditorJsFieldTest.php
modules/contrib/editorjs/src/Plugin/EditorJsTools/ChecklistTool.php
modules/contrib/editorjs/src/Plugin/EditorJsTools/CodeTool.php
modules/contrib/editorjs/src/Plugin/EditorJsTools/DelimiterTool.php

4 files with changes
====================

1) modules/contrib/editorjs/src/Event/MassageValuesEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\editorjs\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Form\FormStateInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines event post form submit.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/editorjs/src/Event/LinkFetchEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\editorjs\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Defines event fetch metadata for linkTool.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/editorjs/src/Controller/LinkController.php:71

    ---------- begin diff ----------
@@ @@
     }

     $event = new LinkFetchEvent($url);
-    $this->dispatcher->dispatch(EditorJsEvents::LINK_FETCH, $event);
+    $this->dispatcher->dispatch($event, EditorJsEvents::LINK_FETCH);

     $result = [
       'success' => \count($event->meta()),
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


4) modules/contrib/editorjs/src/Plugin/Field/FieldWidget/EditorjsWidget.php:205

    ---------- begin diff ----------
@@ @@
     $event = new MassageValuesEvent($values, $form, $form_state, $this->fieldDefinition->getName());
     $this
       ->dispatcher
-      ->dispatch(EditorJsEvents::MASSAGE_FORM_VALUES, $event);
+      ->dispatch($event, EditorJsEvents::MASSAGE_FORM_VALUES);
     return parent::massageFormValues($event->getNewValues(), $form, $form_state);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

