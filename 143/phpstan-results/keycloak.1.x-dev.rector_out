modules/contrib/keycloak/keycloak.install
modules/contrib/keycloak/keycloak.module
modules/contrib/keycloak/src/Controller/KeycloakController.php
modules/contrib/keycloak/src/EventSubscriber/KeycloakRequestSubscriber.php
modules/contrib/keycloak/src/Plugin/OpenIDConnectClient/Keycloak.php
modules/contrib/keycloak/src/Routing/KeycloakRouteSubscriber.php
modules/contrib/keycloak/src/Service/KeycloakRoleMatcher.php
modules/contrib/keycloak/src/Service/KeycloakService.php
modules/contrib/keycloak/src/Service/KeycloakServiceInterface.php

1 file with changes
===================

1) modules/contrib/keycloak/src/EventSubscriber/KeycloakRequestSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\keycloak\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Path\PathMatcherInterface;
@@ @@
 use Drupal\keycloak\Service\KeycloakServiceInterface;
 use Drupal\openid_connect\OpenIDConnectStateToken;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

 /**
@@ @@
   /**
    * Redirects keycloak logout requests to Keycloak.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function onKernelRequestCheckKeycloakRedirect(GetResponseEvent $event) {
+  public function onKernelRequestCheckKeycloakRedirect(RequestEvent $event) {
     // Whether Keycloak is enabled and configured for RP initiated
     // Single Sign-Out.
     if (!$this->keycloak->isKeycloakSignOutEnabled()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 1 file has been changed by Rector                                         

