diff --git a/tests/src/Functional/ResponsivePreviewAdminTest.php b/tests/src/Functional/ResponsivePreviewAdminTest.php
index 7a4e89e..8bffebe 100644
--- a/tests/src/Functional/ResponsivePreviewAdminTest.php
+++ b/tests/src/Functional/ResponsivePreviewAdminTest.php
@@ -65,8 +65,7 @@ class ResponsivePreviewAdminTest extends ResponsivePreviewTestBase {
     // Ensures that all default devices are listed in the table.
     $default_devices = $this->getDefaultDevices();
     foreach ($default_devices as $label) {
-      $xpath = $this->assertSession()
-        ->buildXPathQuery('//table//tr//td[text()=:text]', [':text' => $label]);
+      $xpath = $this->assertSession()->buildXPathQuery('//table//tr//td[text()=:text]', [':text' => $label]);
       $this->assertSession()->elementExists('xpath', $xpath);
     }
 
@@ -85,14 +84,16 @@ class ResponsivePreviewAdminTest extends ResponsivePreviewTestBase {
       'dimensions[dppx]' => '3',
       'orientation' => 'portrait',
     ];
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview/add', $edit, $this->t('Save'));
+    $this->drupalGet('admin/config/user-interface/responsive-preview/add');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()
       ->responseContains($this->t('Device %name has been added.', ['%name' => 'Smartwatch']));
     $this->assertSession()
       ->elementExists('xpath', '//table//tr//td[text()="Smartwatch"]');
+    $this->drupalGet('admin/config/user-interface/responsive-preview/add');
 
     // Ensures that is not possible to insert a non-unique device id.
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview/add', $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()
       ->responseContains($this->t('The machine-readable name is already in use. It must be unique.'));
 
@@ -105,15 +106,17 @@ class ResponsivePreviewAdminTest extends ResponsivePreviewTestBase {
       'dimensions[dppx]' => '2.5',
       'orientation' => 'landscape',
     ];
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview/small/edit', $edit, $this->t('Save'));
+    $this->drupalGet('admin/config/user-interface/responsive-preview/small/edit');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()
       ->responseContains($this->t('Device %name has been updated.', ['%name' => 'Smart phone updated']));
     $this->assertSession()
       ->elementExists('xpath', '//table//tr//td[text()="Smart phone updated"]');
     $this->assertSession()->checkboxChecked('entities[small][status]');
+    $this->drupalGet('admin/config/user-interface/responsive-preview/large/delete');
 
     // Tests the delete of a predefined devices.
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview/large/delete', [], $this->t('Delete'));
+    $this->submitForm([], $this->t('Delete'));
     $this->assertSession()
       ->responseContains($this->t('Device %name has been deleted.', ['%name' => 'Typical desktop']));
     $this->assertSession()
@@ -125,7 +128,8 @@ class ResponsivePreviewAdminTest extends ResponsivePreviewTestBase {
       'entities[small][status]' => 0,
       'entities[smartwatch][status]' => 0,
     ];
-    $this->drupalPostForm('admin/config/user-interface/responsive-preview', $edit, $this->t('Save'));
+    $this->drupalGet('admin/config/user-interface/responsive-preview');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()
       ->responseContains($this->t('The device settings have been updated.'));
     $this->assertSession()->checkboxChecked('entities[medium][status]');
diff --git a/tests/src/Functional/ResponsivePreviewToolbarTest.php b/tests/src/Functional/ResponsivePreviewToolbarTest.php
index d8a9c75..487fd15 100644
--- a/tests/src/Functional/ResponsivePreviewToolbarTest.php
+++ b/tests/src/Functional/ResponsivePreviewToolbarTest.php
@@ -24,7 +24,7 @@ class ResponsivePreviewToolbarTest extends ResponsivePreviewTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->previewUser = $this->drupalCreateUser([
diff --git a/tests/src/FunctionalJavascript/ResponsivePreviewTest.php b/tests/src/FunctionalJavascript/ResponsivePreviewTest.php
index 5c2c418..027d740 100644
--- a/tests/src/FunctionalJavascript/ResponsivePreviewTest.php
+++ b/tests/src/FunctionalJavascript/ResponsivePreviewTest.php
@@ -39,7 +39,7 @@ class ResponsivePreviewTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     NodeType::create(['type' => 'article', 'name' => 'Article'])->save();
