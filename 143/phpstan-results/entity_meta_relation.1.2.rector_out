modules/contrib/entity_meta_relation/emr.install
modules/contrib/entity_meta_relation/modules/emr_node/emr_node.module
modules/contrib/entity_meta_relation/src/Entity/EntityMetaRelationType.php
modules/contrib/entity_meta_relation/modules/entity_meta_example/modules/entity_meta_force/src/Plugin/EntityMetaRelation/ForceConfiguration.php
modules/contrib/entity_meta_relation/modules/emr_node/emr_node.post_update.php
modules/contrib/entity_meta_relation/src/Field/DefaultRevisionFieldItemList.php
modules/contrib/entity_meta_relation/src/Entity/EntityMetaType.php
modules/contrib/entity_meta_relation/src/Entity/Query/Sql/Query.php
modules/contrib/entity_meta_relation/modules/emr_node/src/NodeFormHandler.php
modules/contrib/entity_meta_relation/modules/entity_meta_example/entity_meta_example.install
modules/contrib/entity_meta_relation/modules/entity_meta_example/modules/entity_meta_audio/src/AudioEntityMetaWrapper.php
modules/contrib/entity_meta_relation/emr.module
modules/contrib/entity_meta_relation/modules/entity_meta_example/modules/entity_meta_speed/src/Plugin/EntityMetaRelation/SpeedConfiguration.php
modules/contrib/entity_meta_relation/modules/entity_meta_example/modules/entity_meta_audio/src/Plugin/EntityMetaRelation/AudioConfiguration.php
modules/contrib/entity_meta_relation/emr.post_update.php
modules/contrib/entity_meta_relation/modules/entity_meta_example/modules/entity_meta_force/src/ForceEntityMetaWrapper.php
modules/contrib/entity_meta_relation/modules/entity_meta_example/modules/entity_meta_speed/src/SpeedEntityMetaWrapper.php
modules/contrib/entity_meta_relation/modules/entity_meta_example/modules/entity_meta_visual/src/Plugin/EntityMetaRelation/VisualConfiguration.php
modules/contrib/entity_meta_relation/src/Entity/Query/Sql/QueryFactory.php
modules/contrib/entity_meta_relation/src/Annotation/EntityMetaRelation.php
modules/contrib/entity_meta_relation/src/EntityMetaListBuilder.php
modules/contrib/entity_meta_relation/src/ContentFormHandlerBase.php
modules/contrib/entity_meta_relation/src/Field/EntityMetaItemListInterface.php
modules/contrib/entity_meta_relation/src/Form/EntityMetaForm.php
modules/contrib/entity_meta_relation/src/EntityMetaRelationInstaller.php
modules/contrib/entity_meta_relation/src/ContentFormHandlerInterface.php
modules/contrib/entity_meta_relation/src/Entity/EntityMeta.php
modules/contrib/entity_meta_relation/src/Form/EntityMetaRelationForm.php
modules/contrib/entity_meta_relation/src/Form/EntityMetaRelationTypeForm.php
modules/contrib/entity_meta_relation/src/EntityMetaRelationListBuilder.php
modules/contrib/entity_meta_relation/src/Form/EntityMetaTypeForm.php
modules/contrib/entity_meta_relation/src/EntityMetaRelationStorage.php
modules/contrib/entity_meta_relation/src/Plugin/EntityMetaRelationContentFormPluginBase.php
modules/contrib/entity_meta_relation/src/Entity/EntityMetaInterface.php
modules/contrib/entity_meta_relation/src/Plugin/EntityMetaRelationContentFormPluginInterface.php
modules/contrib/entity_meta_relation/src/Plugin/EntityMetaRelationInlineContentFormPluginBase.php
modules/contrib/entity_meta_relation/src/Entity/EntityMetaRelation.php
modules/contrib/entity_meta_relation/src/Plugin/EntityMetaRelationPluginBase.php
modules/contrib/entity_meta_relation/src/Entity/EntityMetaRelationInterface.php
modules/contrib/entity_meta_relation/src/Plugin/EntityMetaRelationPluginInterface.php
modules/contrib/entity_meta_relation/src/Plugin/EntityMetaRelationPluginManager.php
modules/contrib/entity_meta_relation/src/Plugin/Field/FieldType/BaseEntityMetaRelationItem.php
modules/contrib/entity_meta_relation/src/EntityMetaRelationStorageInterface.php
modules/contrib/entity_meta_relation/src/EntityMetaRelationTypeListBuilder.php
modules/contrib/entity_meta_relation/src/Plugin/Field/FieldType/EntityMetaRelationEntityMetaItem.php
modules/contrib/entity_meta_relation/src/Plugin/Field/FieldType/EntityMetaRelationHostEntityMetaItem.php
modules/contrib/entity_meta_relation/tests/src/Functional/EntityMetaRelationContentFormTest.php
modules/contrib/entity_meta_relation/src/EntityMetaStorage.php
modules/contrib/entity_meta_relation/src/EntityMetaStorageInterface.php
modules/contrib/entity_meta_relation/src/EntityMetaTypeListBuilder.php
modules/contrib/entity_meta_relation/src/EntityMetaWrapper.php
modules/contrib/entity_meta_relation/src/EntityMetaWrapperFactory.php
modules/contrib/entity_meta_relation/src/EntityMetaWrapperFactoryInterface.php
modules/contrib/entity_meta_relation/src/EntityMetaWrapperInterface.php
modules/contrib/entity_meta_relation/src/Exception/EntityMetaEmptyException.php
modules/contrib/entity_meta_relation/src/Field/ComputedEntityMetasItemList.php
modules/contrib/entity_meta_relation/tests/src/Kernel/EntityMetaRelationAttachByDefaultTest.php
modules/contrib/entity_meta_relation/src/Field/ComputedHostEntityItemList.php
modules/contrib/entity_meta_relation/tests/src/Kernel/EntityMetaRelationRevisionTest.php
modules/contrib/entity_meta_relation/tests/src/Kernel/EntityMetaRelationTest.php

2 files with changes
====================

1) modules/contrib/entity_meta_relation/src/Form/EntityMetaRelationForm.php:20

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result === SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New entity meta relation %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_meta_relation/src/Form/EntityMetaForm.php:20

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result === SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New entity meta %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

