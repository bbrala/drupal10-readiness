modules/contrib/broken_link/broken_link.install
modules/contrib/broken_link/src/Form/BrokenLinkRedirectDeleteForm.php
modules/contrib/broken_link/broken_link.module
modules/contrib/broken_link/src/BrokenLinkHtmlRouteProvider.php
modules/contrib/broken_link/src/BrokenLinkListBuilder.php
modules/contrib/broken_link/src/Form/BrokenLinkRedirectForm.php
modules/contrib/broken_link/src/BrokenLinkRedirectListBuilder.php
modules/contrib/broken_link/src/BrokenLinkViewsData.php
modules/contrib/broken_link/src/Entity/BrokenLink.php
modules/contrib/broken_link/src/Plugin/Action/DeleteBrokenLink.php
modules/contrib/broken_link/src/Plugin/views/field/BrokenLinkBulkForm.php
modules/contrib/broken_link/src/Entity/BrokenLinkRedirect.php
modules/contrib/broken_link/src/EventSubscriber/BrokenLinkSubscriber.php
modules/contrib/broken_link/src/Form/BrokenLinkDeleteForm.php
modules/contrib/broken_link/src/Form/BrokenLinkDeleteMultipleForm.php

1 file with changes
===================

1) modules/contrib/broken_link/src/EventSubscriber/BrokenLinkSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\broken_link\EventSubscriber;

+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Drupal\broken_link\Entity\BrokenLink;
 use Drupal\broken_link\Entity\BrokenLinkRedirect;
@@ @@
    * Logs the broken link hit rate. And redirect to path configured, if broken
    * link matches any pattern defined.
    *
-   * @param Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   Event object.
    */
   public function handleBrokenLink(Event $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 1 file has been changed by Rector                                         

