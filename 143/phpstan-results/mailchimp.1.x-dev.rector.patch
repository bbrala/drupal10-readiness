diff --git a/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php b/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php
index ad06cb4..3ff5782 100644
--- a/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php
+++ b/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php
@@ -2,12 +2,13 @@
 
 namespace Mailchimp\Tests;
 
+use GuzzleHttp\Psr7\Response;
 /**
  * Test HTTP Response.
  *
  * @package Mailchimp\Tests
  */
-class MailchimpTestHttpResponse extends \GuzzleHttp\Psr7\Response {
+class MailchimpTestHttpResponse extends Response {
 
   public function getBody() {
     return '{}';
diff --git a/mailchimp.module b/mailchimp.module
index 8c4c806..3e20f47 100644
--- a/mailchimp.module
+++ b/mailchimp.module
@@ -1,5 +1,6 @@
 <?php
 
+use function GuzzleHttp\default_user_agent;
 /**
  * @file
  * Mailchimp module.
@@ -108,7 +109,7 @@ function _mailchimp_get_user_agent() {
     }
   }
 
-  $user_agent = "DrupalMailchimp/$version " . \GuzzleHttp\default_user_agent();
+  $user_agent = "DrupalMailchimp/$version " . default_user_agent();
 
   return $user_agent;
 }
diff --git a/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php b/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php
index 7967d49..ba1dbd7 100644
--- a/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php
+++ b/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php
@@ -775,7 +775,7 @@ class MailchimpCampaignForm extends ContentEntityForm {
         }
       }
 
-      return render($element);
+      return \Drupal::service('renderer')->render($element);
     }
     else {
       return $this->t('No custom merge vars exist for the current audience.');
diff --git a/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php b/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php
index 986ee97..487bb99 100644
--- a/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php
+++ b/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php
@@ -66,7 +66,7 @@ class FilterMailchimpCampaign extends FilterBase {
       if (isset($build[$entity_type][$entity_id]['#contextual_links'])) {
         unset($build[$entity_type][$entity_id]['#contextual_links']);
       }
-      $content = render($build);
+      $content = \Drupal::service('renderer')->render($build);
     }
 
     return $content;
diff --git a/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php b/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php
index 8a860f2..60f882d 100644
--- a/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php
+++ b/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php
@@ -26,10 +26,10 @@ class MailchimpCampaignTest extends MailchimpCampaignTestBase {
 
     $this->assertTrue(is_object($campaign), 'Tested retrieval of campaign data.');
 
-    $this->assertEqual($campaign->id, $campaign_id);
-    $this->assertEqual($campaign->type, 'regular');
-    $this->assertEqual($campaign->recipients->list_id, '57afe96172');
-    $this->assertEqual($campaign->settings->subject_line, 'Test Campaign');
+    $this->assertEquals($campaign->id, $campaign_id);
+    $this->assertEquals($campaign->type, 'regular');
+    $this->assertEquals($campaign->recipients->list_id, '57afe96172');
+    $this->assertEquals($campaign->settings->subject_line, 'Test Campaign');
     $this->assertTrue($campaign->tracking->html_clicks);
     $this->assertFalse($campaign->tracking->text_clicks);
   }
diff --git a/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php b/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php
index c0eff76..9190025 100644
--- a/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php
+++ b/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php
@@ -25,8 +25,8 @@ class MailchimpListsSubscriptionTest extends MailchimpListsTestBase {
 
     $member_info = mailchimp_get_memberinfo($list_id, $email);
 
-    $this->assertEqual($member_info->id, md5($email));
-    $this->assertEqual($member_info->email_address, $email);
+    $this->assertEquals($member_info->id, md5($email));
+    $this->assertEquals($member_info->email_address, $email);
   }
 
   /**
@@ -64,11 +64,11 @@ class MailchimpListsSubscriptionTest extends MailchimpListsTestBase {
 
     $member_info = mailchimp_subscribe($list_id, $email, $merge_vars, $interests);
 
-    $this->assertEqual($member_info->id, md5($email), 'Tested new user subscription.');
+    $this->assertEquals($member_info->id, md5($email), 'Tested new user subscription.');
 
-    $this->assertEqual($member_info->merge_fields->EMAIL, $email);
-    $this->assertEqual($member_info->interests->{$interest_ids[0]}, TRUE);
-    $this->assertEqual($member_info->interests->{$interest_ids[1]}, FALSE);
+    $this->assertEquals($member_info->merge_fields->EMAIL, $email);
+    $this->assertEquals($member_info->interests->{$interest_ids[0]}, TRUE);
+    $this->assertEquals($member_info->interests->{$interest_ids[1]}, FALSE);
   }
 
   /**
diff --git a/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php b/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php
index 6ec0b8a..d19e17d 100644
--- a/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php
+++ b/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php
@@ -24,8 +24,8 @@ class MailchimpListsTest extends MailchimpListsTestBase {
 
     $list = mailchimp_get_list($list_id);
 
-    $this->assertEqual($list->id, $list_id);
-    $this->assertEqual($list->name, 'Test List One');
+    $this->assertEquals($list->id, $list_id);
+    $this->assertEquals($list->name, 'Test List One');
   }
 
   /**
@@ -39,13 +39,13 @@ class MailchimpListsTest extends MailchimpListsTestBase {
 
     $lists = mailchimp_get_lists($list_ids);
 
-    $this->assertEqual(count($lists), 2, 'Tested correct list count on retrieval.');
+    $this->assertEquals(count($lists), 2, 'Tested correct list count on retrieval.');
 
-    $this->assertEqual($lists[$list_ids[0]]->id, $list_ids[0]);
-    $this->assertEqual($lists[$list_ids[0]]->name, 'Test List One');
+    $this->assertEquals($lists[$list_ids[0]]->id, $list_ids[0]);
+    $this->assertEquals($lists[$list_ids[0]]->name, 'Test List One');
 
-    $this->assertEqual($lists[$list_ids[1]]->id, $list_ids[1]);
-    $this->assertEqual($lists[$list_ids[1]]->name, 'Test List Two');
+    $this->assertEquals($lists[$list_ids[1]]->id, $list_ids[1]);
+    $this->assertEquals($lists[$list_ids[1]]->name, 'Test List Two');
   }
 
   /**
@@ -58,11 +58,11 @@ class MailchimpListsTest extends MailchimpListsTestBase {
 
     $mergevars = mailchimp_get_mergevars($list_ids);
 
-    $this->assertEqual(count($mergevars[$list_ids[0]]), 3, 'Tested correct mergevar count on retrieval.');
+    $this->assertEquals(count($mergevars[$list_ids[0]]), 3, 'Tested correct mergevar count on retrieval.');
 
-    $this->assertEqual($mergevars[$list_ids[0]][0]->tag, 'EMAIL');
-    $this->assertEqual($mergevars[$list_ids[0]][1]->tag, 'FNAME');
-    $this->assertEqual($mergevars[$list_ids[0]][2]->tag, 'LNAME');
+    $this->assertEquals($mergevars[$list_ids[0]][0]->tag, 'EMAIL');
+    $this->assertEquals($mergevars[$list_ids[0]][1]->tag, 'FNAME');
+    $this->assertEquals($mergevars[$list_ids[0]][2]->tag, 'LNAME');
   }
 
 }
diff --git a/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php b/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php
index 1708d65..33d4dc0 100644
--- a/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php
+++ b/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php
@@ -24,13 +24,13 @@ class MailchimpListsWebhookTest extends MailchimpListsTestBase {
 
     $webhooks = mailchimp_webhook_get($list_id);
 
-    $this->assertEqual($webhooks[0]->list_id, $list_id);
-    $this->assertEqual($webhooks[0]->id, '37b9c73a88');
-    $this->assertEqual($webhooks[0]->url, 'http://example.org');
-    $this->assertEqual($webhooks[0]->events->subscribe, TRUE);
-    $this->assertEqual($webhooks[0]->events->unsubscribe, FALSE);
-    $this->assertEqual($webhooks[0]->sources->user, TRUE);
-    $this->assertEqual($webhooks[0]->sources->api, FALSE);
+    $this->assertEquals($webhooks[0]->list_id, $list_id);
+    $this->assertEquals($webhooks[0]->id, '37b9c73a88');
+    $this->assertEquals($webhooks[0]->url, 'http://example.org');
+    $this->assertEquals($webhooks[0]->events->subscribe, TRUE);
+    $this->assertEquals($webhooks[0]->events->unsubscribe, FALSE);
+    $this->assertEquals($webhooks[0]->sources->user, TRUE);
+    $this->assertEquals($webhooks[0]->sources->api, FALSE);
   }
 
   /**
@@ -50,7 +50,7 @@ class MailchimpListsWebhookTest extends MailchimpListsTestBase {
 
     $webhook_id = mailchimp_webhook_add($list_id, $url, $events, $sources);
 
-    $this->assertEqual($webhook_id, 'ab24521a00');
+    $this->assertEquals($webhook_id, 'ab24521a00');
   }
 
   /**
diff --git a/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php b/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php
index a8ead52..cd8787a 100644
--- a/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php
+++ b/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php
@@ -46,7 +46,7 @@ class MailchimpSignupFormFormatter extends EntityReferenceFormatterBase {
 
       $messenger = \Drupal::messenger();
 
-      $form = new \Drupal\mailchimp_signup\Form\MailchimpSignupPageForm($messenger);
+      $form = new MailchimpSignupPageForm($messenger);
 
       $form->setFormID($this->getFormId($signup));
       $form->setSignup($signup);
diff --git a/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php b/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php
index 20a0164..9c91b51 100644
--- a/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php
+++ b/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php
@@ -20,7 +20,7 @@ class MailchimpSignupFormTest extends FunctionalMailchimpTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $rid = $this->adminUser->getRoles()[1];
@@ -33,20 +33,20 @@ class MailchimpSignupFormTest extends FunctionalMailchimpTestBase {
   public function testSignUpForm() {
     $this->drupalLogin($this->lowUser);
     $this->drupalGet('/admin/config/services/mailchimp/signup');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/services/mailchimp/signup');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     // This implicitly tests the _mailchimp_configuration_access_check check.
     \Drupal::configFactory()->getEditable('mailchimp.settings')
       ->set('api_key', 'TEST_KEY')
       ->set('test_mode', TRUE)
       ->save();
     $this->drupalGet('/admin/config/services/mailchimp/signup');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Create a signup form.
     $this->drupalGet('/admin/config/services/mailchimp/signup/add');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->submitForm([
       'title' => 'My signup form',
       'id' => 'my_signup_form',
@@ -59,37 +59,37 @@ class MailchimpSignupFormTest extends FunctionalMailchimpTestBase {
       'settings[destination]' => 'home',
       'mc_lists[57afe96172]' => TRUE,
     ], 'Save');
-    $this->assertUrl('/admin/config/services/mailchimp/signup');
-    $this->assertText('My signup form');
+    $this->assertSession()->addressEquals('/admin/config/services/mailchimp/signup');
+    $this->assertSession()->pageTextContains('My signup form');
     // Visit/submit the signup form.
     $this->drupalLogin($this->lowUser);
     $this->drupalGet('/newsletter/signup');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $rid = $this->lowUser->getRoles()[0];
     $this->grantPermissions(Role::load($rid), ['access mailchimp signup pages']);
     $this->drupalGet('/newsletter/signup');
-    $this->assertResponse(200);
-    $this->assertText('My signup form');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->pageTextContains('My signup form');
     $this->submitForm([
       'mergevars[EMAIL]' => 'admin@example.com',
     ], 'Sign up');
-    $this->assertText('You have signed up');
-    $this->assertUrl('/home');
+    $this->assertSession()->pageTextContains('You have signed up');
+    $this->assertSession()->addressEquals('/home');
 
     /** @var \Drupal\Core\Block\BlockManager $manager */
     $manager = \Drupal::service('plugin.manager.block');
     $manager->clearCachedDefinitions();
 
     // Test the block.
-    $this->assertNoText('My signup block');
+    $this->assertSession()->pageTextNotContains('My signup block');
     $this->drupalPlaceBlock('mailchimp_signup_subscribe_block:my_signup_form', ['label' => 'My signup block']);
     $this->drupalGet('/foo');
-    $this->assertText('My signup block');
+    $this->assertSession()->pageTextContains('My signup block');
     $this->submitForm([
       'mergevars[EMAIL]' => 'admin@example.com',
     ], 'Sign up');
-    $this->assertText('You have signed up');
-    $this->assertUrl('/home');
+    $this->assertSession()->pageTextContains('You have signed up');
+    $this->assertSession()->addressEquals('/home');
   }
 
 }
diff --git a/tests/src/Functional/FunctionalMailchimpTestBase.php b/tests/src/Functional/FunctionalMailchimpTestBase.php
index 91da3c1..3bb6951 100644
--- a/tests/src/Functional/FunctionalMailchimpTestBase.php
+++ b/tests/src/Functional/FunctionalMailchimpTestBase.php
@@ -70,7 +70,7 @@ abstract class FunctionalMailchimpTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('page_title_block');
diff --git a/tests/src/Functional/MailchimpAPITest.php b/tests/src/Functional/MailchimpAPITest.php
index 2ad5526..9821ace 100644
--- a/tests/src/Functional/MailchimpAPITest.php
+++ b/tests/src/Functional/MailchimpAPITest.php
@@ -17,7 +17,7 @@ class MailchimpAPITest extends FunctionalMailchimpTestBase {
 
     $this->assertNotNull($mailchimp_api);
 
-    $this->assertEqual(get_class($mailchimp_api), 'Mailchimp\Tests\Mailchimp');
+    $this->assertEquals(get_class($mailchimp_api), 'Mailchimp\Tests\Mailchimp');
   }
 
 }
diff --git a/tests/src/Functional/MailchimpAdminSettingsFormTest.php b/tests/src/Functional/MailchimpAdminSettingsFormTest.php
index ef293e0..bb932a4 100644
--- a/tests/src/Functional/MailchimpAdminSettingsFormTest.php
+++ b/tests/src/Functional/MailchimpAdminSettingsFormTest.php
@@ -20,14 +20,14 @@ class MailchimpAdminSettingsFormTest extends FunctionalMailchimpTestBase {
   public function testSettingsForm() {
     $this->drupalLogin($this->lowUser);
     $this->drupalGet('/admin/config/services/mailchimp');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/services/mailchimp');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->submitForm([
       'api_key' => 'TEST_KEY',
     ], 'Save configuration');
-    $this->assertText('The configuration options have been saved');
+    $this->assertSession()->pageTextContains('The configuration options have been saved');
     $this->assertEquals('TEST_KEY', \Drupal::config('mailchimp.settings')->get('api_key'));
   }
 
diff --git a/tests/src/Functional/MailchimpCampaignTestBase.php b/tests/src/Functional/MailchimpCampaignTestBase.php
index 7140162..cf44f9e 100644
--- a/tests/src/Functional/MailchimpCampaignTestBase.php
+++ b/tests/src/Functional/MailchimpCampaignTestBase.php
@@ -24,7 +24,7 @@ abstract class MailchimpCampaignTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     \Drupal::configFactory()->addOverride(new MailchimpCampaignConfigOverrider());
diff --git a/tests/src/Functional/MailchimpListsTestBase.php b/tests/src/Functional/MailchimpListsTestBase.php
index 3aaee1d..99994cc 100644
--- a/tests/src/Functional/MailchimpListsTestBase.php
+++ b/tests/src/Functional/MailchimpListsTestBase.php
@@ -24,7 +24,7 @@ abstract class MailchimpListsTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     \Drupal::configFactory()->addOverride(new MailchimpListsConfigOverrider());
