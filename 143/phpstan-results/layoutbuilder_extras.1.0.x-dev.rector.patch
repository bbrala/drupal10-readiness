diff --git a/layoutbuilder_extras.module b/layoutbuilder_extras.module
index bfa8f2e..8571097 100644
--- a/layoutbuilder_extras.module
+++ b/layoutbuilder_extras.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\layoutbuilder_extras\LayoutBuilderElementOverride;
 /**
  * @file
  * Module file for Layout builder extras.
@@ -135,7 +137,7 @@ function layoutbuilder_extras_preprocess_layout(array &$variables) {
   if ($lbeConfig->get('empty_region_placeholder') && ($isLayoutBuilderRoute || $isAdminRoute)) {
     $placeHolderText = $lbeConfig->get('empty_region_placeholder_text')['value'];
     if (empty($placeHolderText)) {
-      $placeHolderText = new \Drupal\Core\StringTranslation\TranslatableMarkup('Add content here');
+      $placeHolderText = new TranslatableMarkup('Add content here');
     }
 
     $regions = array_keys($variables['layout']->getRegions());
@@ -280,7 +282,7 @@ function layoutbuilder_extras_page_attachments(array &$attachments) {
  */
 function layoutbuilder_extras_element_info_alter(array &$types) {
   $types['layout_builder']['#pre_render'][] =
-    [\Drupal\layoutbuilder_extras\LayoutBuilderElementOverride::class, 'preRenderOverride'];
+    [LayoutBuilderElementOverride::class, 'preRenderOverride'];
 }
 
 /**
diff --git a/src/Form/LayoutBuilderExtrasSettingsForm.php b/src/Form/LayoutBuilderExtrasSettingsForm.php
index c254883..83bd98e 100644
--- a/src/Form/LayoutBuilderExtrasSettingsForm.php
+++ b/src/Form/LayoutBuilderExtrasSettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layoutbuilder_extras\Form;
 
+use Drupal\user\Entity\Role;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -105,7 +106,7 @@ class LayoutBuilderExtrasSettingsForm extends ConfigFormBase {
       '#description' => $this->t('You can also configure for which roles the contextual links should still be shown.'),
       '#default_value' => $config->get('contextual_links_only_lb') ?? FALSE,
     ];
-    $roles = \Drupal\user\Entity\Role::loadMultiple();
+    $roles = Role::loadMultiple();
     $roleOptions = [];
     foreach ($roles as $roleID => $roleObject) {
       /** @var \Drupal\user\Entity\Role $roleObject */
