diff --git a/modules/sharemessage_demo/tests/src/Functional/ShareMessageDemoTest.php b/modules/sharemessage_demo/tests/src/Functional/ShareMessageDemoTest.php
index cc37b85..f9fc47c 100644
--- a/modules/sharemessage_demo/tests/src/Functional/ShareMessageDemoTest.php
+++ b/modules/sharemessage_demo/tests/src/Functional/ShareMessageDemoTest.php
@@ -45,50 +45,50 @@ class ShareMessageDemoTest extends BrowserTestBase {
 
     $this->drupalLogin($admin_user);
     $this->drupalGet('admin/structure/block');
-    $this->assertText(t('Share Message'));
+    $this->assertSession()->pageTextContains(t('Share Message'));
     $this->clickLink(t('Configure'), 0);
 
     $this->drupalGet('admin/structure/types');
-    $this->assertText(t('Shareable content'));
+    $this->assertSession()->pageTextContains(t('Shareable content'));
 
     // Search for the Share Message block on the demo node.
     $this->drupalGet('admin/content');
     $this->clickLink(t('Share Message demo'));
-    $this->assertText(t('Welcome to the Share Message demo module!'));
-    $this->assertText(t('Share Message'));
+    $this->assertSession()->pageTextContains(t('Welcome to the Share Message demo module!'));
+    $this->assertSession()->pageTextContains(t('Share Message'));
     // Assert the demo links are correct.
     $node = $this->getNodeByTitle('Share Message demo');
     $this->drupalGet('node/' . $node->id());
-    $this->assertLinkByHref('admin/config/services/sharemessage/sharemessage-settings');
-    $this->assertLinkByHref('admin/config/services/sharemessage/manage/share_message_addthis_demo');
-    $this->assertLinkByHref('admin/config/services/sharemessage');
-    $this->assertLinkByHref('admin/structure/block/manage/sharemessage_addthis');
+    $this->assertSession()->linkByHrefExists('admin/config/services/sharemessage/sharemessage-settings');
+    $this->assertSession()->linkByHrefExists('admin/config/services/sharemessage/manage/share_message_addthis_demo');
+    $this->assertSession()->linkByHrefExists('admin/config/services/sharemessage');
+    $this->assertSession()->linkByHrefExists('admin/structure/block/manage/sharemessage_addthis');
 
     // Asserts that the buttons are displayed.
-    $this->assertRaw('addthis_button_preferred_1');
-    $this->assertRaw('addthis_button_preferred_2');
-    $this->assertRaw('addthis_button_preferred_3');
-    $this->assertRaw('addthis_button_preferred_4');
-    $this->assertRaw('addthis_button_preferred_5');
-    $this->assertRaw('addthis_button_compact');
+    $this->assertSession()->responseContains('addthis_button_preferred_1');
+    $this->assertSession()->responseContains('addthis_button_preferred_2');
+    $this->assertSession()->responseContains('addthis_button_preferred_3');
+    $this->assertSession()->responseContains('addthis_button_preferred_4');
+    $this->assertSession()->responseContains('addthis_button_preferred_5');
+    $this->assertSession()->responseContains('addthis_button_compact');
 
     // Test OG headers for image, video and url.
-    $this->assertRaw('<meta property="og:image" content="https://www.drupal.org/files/drupal%208%20logo%20Stacked%20CMYK%20300.png" />');
-    $this->assertRaw('<meta property="og:video" content="https://www.youtube.com/watch?v=ktCgVopf7D0?fs=1" />');
-    $this->assertRaw('<meta property="og:video:width" content="360" />');
-    $this->assertRaw('<meta property="og:video:height" content="270" />');
-    $this->assertRaw('<meta property="og:url" content="' . $this->getUrl() . '" />');
+    $this->assertSession()->responseContains('<meta property="og:image" content="https://www.drupal.org/files/drupal%208%20logo%20Stacked%20CMYK%20300.png" />');
+    $this->assertSession()->responseContains('<meta property="og:video" content="https://www.youtube.com/watch?v=ktCgVopf7D0?fs=1" />');
+    $this->assertSession()->responseContains('<meta property="og:video:width" content="360" />');
+    $this->assertSession()->responseContains('<meta property="og:video:height" content="270" />');
+    $this->assertSession()->responseContains('<meta property="og:url" content="' . $this->getUrl() . '" />');
 
     // Test that Sharrre plugin works.
-    $this->assertText('Share Message - Sharrre');
-    $this->assertRaw('<div id="block-sharemessage-sharrre" class="block block-sharemessage block-sharemessage-block">');
-    $this->assertRaw('"services":{"googlePlus":"googlePlus","facebook":"facebook","twitter":"twitter"}');
+    $this->assertSession()->pageTextContains('Share Message - Sharrre');
+    $this->assertSession()->responseContains('<div id="block-sharemessage-sharrre" class="block block-sharemessage block-sharemessage-block">');
+    $this->assertSession()->responseContains('"services":{"googlePlus":"googlePlus","facebook":"facebook","twitter":"twitter"}');
 
     // Test that Social Share Privacy plugin works.
-    $this->assertText('Share Message - Social Share Privacy');
-    $this->assertRaw('<div id="block-sharemessage-socialshareprivacy" class="block block-sharemessage block-sharemessage-block">');
-    $this->assertRaw('"twitter":{"status":true');
-    $this->assertRaw('"facebook":{"status":true');
+    $this->assertSession()->pageTextContains('Share Message - Social Share Privacy');
+    $this->assertSession()->responseContains('<div id="block-sharemessage-socialshareprivacy" class="block block-sharemessage block-sharemessage-block">');
+    $this->assertSession()->responseContains('"twitter":{"status":true');
+    $this->assertSession()->responseContains('"facebook":{"status":true');
   }
 
 }
diff --git a/sharemessage.module b/sharemessage.module
index 974eb4a..5adc231 100644
--- a/sharemessage.module
+++ b/sharemessage.module
@@ -206,7 +206,7 @@ function sharemessage_get_addthis_services() {
  */
 function addthis_get_services_json() {
   if (\Drupal::config('sharemessage.addthis')->get('local_services_definition')) {
-    $file_uri = drupal_get_path('module', 'sharemessage') . '/addthis/sharing.en.json';
+    $file_uri = \Drupal::service('extension.list.module')->getPath('sharemessage') . '/addthis/sharing.en.json';
   }
   else {
     $file_uri = 'http://cache.addthiscdn.com/services/v1/sharing.en.json';
diff --git a/src/Entity/ShareMessage.php b/src/Entity/ShareMessage.php
index ecad78e..ada820b 100644
--- a/src/Entity/ShareMessage.php
+++ b/src/Entity/ShareMessage.php
@@ -542,7 +542,7 @@ class ShareMessage extends ConfigEntityBase implements ShareMessageInterface {
       /** @var \Drupal\file\FileInterface $image */
       $fallback_image = $entity_repository->loadEntityByUuid('file', $this->fallback_image);
       if ($fallback_image) {
-        $image_url = file_create_url($fallback_image->getFileUri());
+        $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($fallback_image->getFileUri());
       }
     }
     return $image_url;
diff --git a/src/Plugin/sharemessage/SocialSharePrivacy.php b/src/Plugin/sharemessage/SocialSharePrivacy.php
index 882827e..cfe2572 100644
--- a/src/Plugin/sharemessage/SocialSharePrivacy.php
+++ b/src/Plugin/sharemessage/SocialSharePrivacy.php
@@ -244,10 +244,10 @@ class SocialSharePrivacy extends SharePluginBase implements SharePluginInterface
         $enabled_services[$service] = array_merge($enabled_services[$service], $this->servicesWithSettings()[$service]);
       }
       if (in_array($service, ['mail', 'tumblr', 'fbshare'])) {
-        $enabled_services[$service]['line_img'] = file_create_url($images_folder . $service . '.png');
+        $enabled_services[$service]['line_img'] = \Drupal::service('file_url_generator')->generateAbsoluteString($images_folder . $service . '.png');
       }
       else {
-        $enabled_services[$service]['dummy_line_img'] = file_create_url($images_folder . 'dummy_' . $service . '.png');
+        $enabled_services[$service]['dummy_line_img'] = \Drupal::service('file_url_generator')->generateAbsoluteString($images_folder . 'dummy_' . $service . '.png');
       }
     }
 
diff --git a/tests/src/Functional/Plugin/ShareMessageAddthisTest.php b/tests/src/Functional/Plugin/ShareMessageAddthisTest.php
index e2e582d..9a7753a 100644
--- a/tests/src/Functional/Plugin/ShareMessageAddthisTest.php
+++ b/tests/src/Functional/Plugin/ShareMessageAddthisTest.php
@@ -24,11 +24,12 @@ class ShareMessageAddthisTest extends ShareMessageTestBase {
       'default_additional_services' => FALSE,
       'default_icon_style' => 'addthis_16x16_style',
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/addthis-settings', $default_settings, t('Save configuration'));
+    $this->drupalGet('admin/config/services/sharemessage/addthis-settings');
+    $this->submitForm($default_settings, t('Save configuration'));
 
     // Set a new Share Message.
     $this->drupalGet('admin/config/services/sharemessage/add');
-    $this->assertText('AddThis plugin for Share Message module.');
+    $this->assertSession()->pageTextContains('AddThis plugin for Share Message module.');
     $override_settings = '//details[starts-with(@data-drupal-selector, "edit-settings")]';
     $this->assertFieldByXPath($override_settings);
     $sharemessage = [
@@ -37,14 +38,15 @@ class ShareMessageAddthisTest extends ShareMessageTestBase {
       'plugin' => 'addthis',
       'title' => 'AddThis test',
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/add', $sharemessage, t('Save'));
+    $this->drupalGet('admin/config/services/sharemessage/add');
+    $this->submitForm($sharemessage, t('Save'));
 
     // Assert that the initial settings are saved correctly.
     $this->drupalGet('sharemessage-test/sharemessage_test_addthis_label');
     $this->assertShareButtons($sharemessage, $default_settings['default_icon_style'], TRUE);
-    $this->assertRaw('<a class="addthis_button_facebook">');
-    $this->assertRaw('<a class="addthis_button_facebook_like">');
-    $this->assertNoRaw('<a class="addthis_button_compact">');
+    $this->assertSession()->responseContains('<a class="addthis_button_facebook">');
+    $this->assertSession()->responseContains('<a class="addthis_button_facebook_like">');
+    $this->assertSession()->responseNotContains('<a class="addthis_button_compact">');
 
     // Set new AddThis settings.
     $default_settings = [
@@ -56,16 +58,17 @@ class ShareMessageAddthisTest extends ShareMessageTestBase {
       'default_additional_services' => TRUE,
       'default_icon_style' => 'addthis_32x32_style',
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/addthis-settings', $default_settings, t('Save configuration'));
+    $this->drupalGet('admin/config/services/sharemessage/addthis-settings');
+    $this->submitForm($default_settings, t('Save configuration'));
 
     // Check that the saving of the new AddThis settings works correctly.
     $this->drupalGet('sharemessage-test/sharemessage_test_addthis_label');
     $this->assertShareButtons($sharemessage, $default_settings['default_icon_style'], TRUE);
-    $this->assertRaw('<a class="addthis_button_facebook">');
-    $this->assertNoRaw('<a class="addthis_button_facebook_like">');
-    $this->assertRaw('<a class="addthis_button_linkedin">');
-    $this->assertRaw('<a class="addthis_button_twitter">');
-    $this->assertRaw('<a class="addthis_button_compact">');
+    $this->assertSession()->responseContains('<a class="addthis_button_facebook">');
+    $this->assertSession()->responseNotContains('<a class="addthis_button_facebook_like">');
+    $this->assertSession()->responseContains('<a class="addthis_button_linkedin">');
+    $this->assertSession()->responseContains('<a class="addthis_button_twitter">');
+    $this->assertSession()->responseContains('<a class="addthis_button_compact">');
   }
 
 }
diff --git a/tests/src/Functional/Plugin/ShareMessageOGHeadersTest.php b/tests/src/Functional/Plugin/ShareMessageOGHeadersTest.php
index 6b91815..bc15af8 100644
--- a/tests/src/Functional/Plugin/ShareMessageOGHeadersTest.php
+++ b/tests/src/Functional/Plugin/ShareMessageOGHeadersTest.php
@@ -31,15 +31,16 @@ class ShareMessageOGHeadersTest extends ShareMessageTestBase {
       'message_short' => 'OG headers short description',
       'fallback_image' => $file->uuid(),
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/add', $sharemessage, t('Save'));
-    $this->assertText(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
+    $this->drupalGet('admin/config/services/sharemessage/add');
+    $this->submitForm($sharemessage, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_og_label');
     $override_settings = '//details[starts-with(@data-drupal-selector, "edit-settings")]';
     $this->assertFieldByXPath($override_settings);
-    $this->assertText('Open graph headers are used when users want to use it as a framework or a background tool only.');
-    $this->assertText('The OG Headers plugin doesn\'t provide any settings.');
+    $this->assertSession()->pageTextContains('Open graph headers are used when users want to use it as a framework or a background tool only.');
+    $this->assertSession()->pageTextContains('The OG Headers plugin doesn\'t provide any settings.');
     $this->drupalGet('sharemessage-test/sharemessage_test_og_label');
-    $url = file_create_url($file->getFileUri());
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
 
     $image = \Drupal::service('image.factory')->get($file->getFileUri());
     $image_width = $image->getWidth();
@@ -62,7 +63,7 @@ class ShareMessageOGHeadersTest extends ShareMessageTestBase {
       'message_long' => 'Long description',
       'message_short' => 'Short description',
     ];
-    $this->drupalPostForm(NULL, $sharemessage, t('Save'));
+    $this->submitForm($sharemessage, t('Save'));
     $this->drupalGet('sharemessage-test/sharemessage_test_special_characters');
     // Test for special characters (such as ', ", <, >, &) in a node title
     // used as token for a Share Message title.
diff --git a/tests/src/Functional/Plugin/ShareMessageSharrreTest.php b/tests/src/Functional/Plugin/ShareMessageSharrreTest.php
index 762756f..548ee07 100644
--- a/tests/src/Functional/Plugin/ShareMessageSharrreTest.php
+++ b/tests/src/Functional/Plugin/ShareMessageSharrreTest.php
@@ -28,7 +28,7 @@ class ShareMessageSharrreTest extends ShareMessageTestBase {
       'enable_counter' => FALSE,
       'enable_tracking' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $default_settings, t('Save configuration'));
+    $this->submitForm($default_settings, t('Save configuration'));
 
     // Set a new Share Message.
     $sharemessage = [
@@ -37,16 +37,17 @@ class ShareMessageSharrreTest extends ShareMessageTestBase {
       'plugin' => 'sharrre',
       'title' => 'Sharrre test',
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/add', $sharemessage, t('Save'));
+    $this->drupalGet('admin/config/services/sharemessage/add');
+    $this->submitForm($sharemessage, t('Save'));
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_sharrre_label');
     $override_settings = '//details[starts-with(@data-drupal-selector, "edit-settings")]';
     $this->assertFieldByXPath($override_settings);
-    $this->assertText('Sharrre is a jQuery plugin that allows you to create nice widgets sharing for Facebook, Twitter, Google Plus (with PHP script) and more.');
+    $this->assertSession()->pageTextContains('Sharrre is a jQuery plugin that allows you to create nice widgets sharing for Facebook, Twitter, Google Plus (with PHP script) and more.');
 
     // Assert that the initial settings are saved correctly.
     $this->drupalGet('sharemessage-test/sharemessage_test_sharrre_label');
-    $this->assertRaw('"services":{"googlePlus":"googlePlus","facebook":"facebook"}');
-    $this->assertRaw('"shorter_total":false,"enable_hover":false,"enable_counter":false,"enable_tracking":false');
+    $this->assertSession()->responseContains('"services":{"googlePlus":"googlePlus","facebook":"facebook"}');
+    $this->assertSession()->responseContains('"shorter_total":false,"enable_hover":false,"enable_counter":false,"enable_tracking":false');
 
     // Set new Sharrre settings.
     $this->drupalGet('admin/config/services/sharemessage/sharrre-settings');
@@ -64,13 +65,13 @@ class ShareMessageSharrreTest extends ShareMessageTestBase {
       'enable_counter' => TRUE,
       'enable_tracking' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $default_settings, t('Save configuration'));
+    $this->submitForm($default_settings, t('Save configuration'));
 
     // Check that the saving of the new Sharrre settings works correctly.
     $this->drupalGet('sharemessage-test/sharemessage_test_sharrre_label');
-    $this->assertRaw('"services":{"googlePlus":"googlePlus","facebook":"facebook","twitter":"twitter","linkedin":"linkedin","pinterest":"pinterest"}');
-    $this->assertNoRaw('"services":{"googlePlus":"googlePlus","facebook":"facebook"}');
-    $this->assertRaw('"shorter_total":true,"enable_hover":true,"enable_counter":true,"enable_tracking":false');
-    $this->assertNoRaw('"shorter_total":false,"enable_hover":false,"enable_counter":false,"enable_tracking":false');
+    $this->assertSession()->responseContains('"services":{"googlePlus":"googlePlus","facebook":"facebook","twitter":"twitter","linkedin":"linkedin","pinterest":"pinterest"}');
+    $this->assertSession()->responseNotContains('"services":{"googlePlus":"googlePlus","facebook":"facebook"}');
+    $this->assertSession()->responseContains('"shorter_total":true,"enable_hover":true,"enable_counter":true,"enable_tracking":false');
+    $this->assertSession()->responseNotContains('"shorter_total":false,"enable_hover":false,"enable_counter":false,"enable_tracking":false');
   }
 }
diff --git a/tests/src/Functional/Plugin/ShareMessageSocialSharePrivacyTest.php b/tests/src/Functional/Plugin/ShareMessageSocialSharePrivacyTest.php
index 44f5ecb..6b93cd5 100644
--- a/tests/src/Functional/Plugin/ShareMessageSocialSharePrivacyTest.php
+++ b/tests/src/Functional/Plugin/ShareMessageSocialSharePrivacyTest.php
@@ -23,7 +23,7 @@ class ShareMessageSocialSharePrivacyTest extends ShareMessageTestBase {
         'facebook',
       ],
     ];
-    $this->drupalPostForm(NULL, $default_settings, t('Save configuration'));
+    $this->submitForm($default_settings, t('Save configuration'));
 
     // Set a new Share Message.
     $sharemessage = [
@@ -32,17 +32,18 @@ class ShareMessageSocialSharePrivacyTest extends ShareMessageTestBase {
       'plugin' => 'socialshareprivacy',
       'title' => 'SocialSharePrivacy test',
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/add', $sharemessage, t('Save'));
+    $this->drupalGet('admin/config/services/sharemessage/add');
+    $this->submitForm($sharemessage, t('Save'));
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_socialshareprivacy_label');
     $override_settings = '//details[starts-with(@data-drupal-selector, "edit-settings")]';
     $this->assertFieldByXPath($override_settings);
-    $this->assertText('Social Share Privacy is a jQuery plugin that lets you add social share buttons to your website that don\'t allow the social sites to track your users.');
+    $this->assertSession()->pageTextContains('Social Share Privacy is a jQuery plugin that lets you add social share buttons to your website that don\'t allow the social sites to track your users.');
 
     // Assert that the initial settings are saved correctly.
     $this->drupalGet('sharemessage-test/sharemessage_test_socialshareprivacy_label');
-    $this->assertRaw('"facebook":{"status":true');
-    $this->assertRaw('"gplus":{"status":true');
-    $this->assertRaw('"twitter":{"status":false');
+    $this->assertSession()->responseContains('"facebook":{"status":true');
+    $this->assertSession()->responseContains('"gplus":{"status":true');
+    $this->assertSession()->responseContains('"twitter":{"status":false');
 
     // Set new Social Share Privacy settings.
     $this->drupalGet('admin/config/services/sharemessage/socialshareprivacy-settings');
@@ -52,13 +53,13 @@ class ShareMessageSocialSharePrivacyTest extends ShareMessageTestBase {
         'twitter',
       ],
     ];
-    $this->drupalPostForm(NULL, $default_settings, t('Save configuration'));
+    $this->submitForm($default_settings, t('Save configuration'));
 
     // Check the saving of the new Social Share Privacy settings is correctly.
     $this->drupalGet('sharemessage-test/sharemessage_test_socialshareprivacy_label');
-    $this->assertRaw('"twitter":{"status":true');
-    $this->assertRaw('"gplus":{"status":true');
-    $this->assertRaw('"facebook":{"status":false');
+    $this->assertSession()->responseContains('"twitter":{"status":true');
+    $this->assertSession()->responseContains('"gplus":{"status":true');
+    $this->assertSession()->responseContains('"facebook":{"status":false');
   }
 
 }
diff --git a/tests/src/Functional/ShareMessageExposeToBlockTest.php b/tests/src/Functional/ShareMessageExposeToBlockTest.php
index fe4b18b..2f996df 100644
--- a/tests/src/Functional/ShareMessageExposeToBlockTest.php
+++ b/tests/src/Functional/ShareMessageExposeToBlockTest.php
@@ -23,7 +23,7 @@ class ShareMessageExposeToBlockTest extends ShareMessageTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->adminPermissions[] = 'access contextual links';
     $this->adminPermissions[] = 'administer nodes';
     $this->adminPermissions[] = 'access content';
@@ -73,8 +73,8 @@ class ShareMessageExposeToBlockTest extends ShareMessageTestBase {
       'image_test' => $file,
     ]);
     $this->drupalGet('node/' . $node->id());
-    $this->assertTitle('Share Message article | Drupal');
-    $this->assertNoRaw('<h2>Share Message test block</h2>');
+    $this->assertSession()->titleEquals('Share Message article | Drupal');
+    $this->assertSession()->responseNotContains('<h2>Share Message test block</h2>');
 
     // Create another Share Message.
     $sharemessage = [
@@ -86,15 +86,16 @@ class ShareMessageExposeToBlockTest extends ShareMessageTestBase {
       'image_width' => '[node:image_test:width]',
       'image_height' => '[node:image_test:height]',
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/add', $sharemessage, t('Save'));
+    $this->drupalGet('admin/config/services/sharemessage/add');
+    $this->submitForm($sharemessage, t('Save'));
     // Check for confirmation message and listing of the Share Message entity.
-    $this->assertText(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
-    $this->assertText($sharemessage['label']);
+    $this->assertSession()->pageTextContains(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
+    $this->assertSession()->pageTextContains($sharemessage['label']);
 
     // Enable twitter and tweet services for AddThis.
     $this->drupalGet('admin/config/services/sharemessage/addthis-settings');
     $edit = ['default_services[]' => ['twitter', 'tweet']];
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');
 
     // Add a block that will contain the created Share Message.
     $block = [
@@ -102,12 +103,13 @@ class ShareMessageExposeToBlockTest extends ShareMessageTestBase {
       'settings[sharemessage]' => $sharemessage['id'],
       'region' => 'content',
     ];
-    $this->drupalPostForm('admin/structure/block/add/sharemessage_block/' . $theme, $block, t('Save block'));
+    $this->drupalGet('admin/structure/block/add/sharemessage_block/' . $theme);
+    $this->submitForm($block, t('Save block'));
 
     // Check the Share Message block is now displayed on the article node.
     $this->drupalGet('node/' . $node->id());
-    $this->assertTitle('Share Message article | Drupal');
-    $this->assertRaw('<h2>Share Message test block</h2>');
+    $this->assertSession()->titleEquals('Share Message article | Drupal');
+    $this->assertSession()->responseContains('<h2>Share Message test block</h2>');
     $sharemessage_values = $sharemessage;
     $sharemessage_values['message_long'] = 'Share Message article';
     $this->assertShareButtons($sharemessage_values, 'addthis_16x16_style', TRUE);
@@ -125,22 +127,22 @@ class ShareMessageExposeToBlockTest extends ShareMessageTestBase {
       'revision' => TRUE,
       'title[0][value]' => 'Share Message article edit',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
-    $this->assertTitle('Share Message article edit | Drupal');
-    $this->assertRaw('<h2>Share Message test block</h2>');
+    $this->submitForm($edit, 'Save');
+    $this->assertSession()->titleEquals('Share Message article edit | Drupal');
+    $this->assertSession()->responseContains('<h2>Share Message test block</h2>');
     $sharemessage_values['message_long'] = 'Share Message article edit';
     $this->assertShareButtons($sharemessage_values, 'addthis_16x16_style', TRUE);
     // Visit the old article node's revision and check the Share message block.
     $this->drupalGet('node/' . $node->id() . '/revisions/' . $node->getRevisionId() . '/view');
-    $this->assertResponse(200);
-    $this->assertTitle('Share Message article | Drupal');
-    $this->assertRaw('<h2>Share Message test block</h2>');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->titleEquals('Share Message article | Drupal');
+    $this->assertSession()->responseContains('<h2>Share Message test block</h2>');
     $sharemessage_values['message_long'] = '';
     $this->assertShareButtons($sharemessage_values, 'addthis_16x16_style', TRUE);
 
     // Verify that the block is in the submitted region of the bartik theme.
     $this->drupalGet('admin/structure/block/list/' . $theme);
-    $this->assertText($block['settings[label]']);
+    $this->assertSession()->pageTextContains($block['settings[label]']);
 
     // Go to front page and check whether Share Message is displayed.
     $this->drupalGet('');
@@ -148,11 +150,11 @@ class ShareMessageExposeToBlockTest extends ShareMessageTestBase {
 
     // Check the twitter template placeholder.
     $twitter_template = 'var addthis_share = { templates: { twitter: "AddThis sharemessage short description." } }';
-    $this->assertRaw($twitter_template);
+    $this->assertSession()->responseContains($twitter_template);
 
     // Check for the contextual links presence.
     $sharemessage_contextual_id = 'data-contextual-id="block:block=sharemessage:langcode=en|sharemessage:sharemessage=sharemessage_test_label:langcode=en"';
-    $this->assertRaw($sharemessage_contextual_id);
+    $this->assertSession()->responseContains($sharemessage_contextual_id);
 
     // Logout the user and check for the Share Message block.
     $this->drupalLogout();
@@ -167,7 +169,7 @@ class ShareMessageExposeToBlockTest extends ShareMessageTestBase {
     $this->assertShareButtons($sharemessage_values, 'addthis_16x16_style', TRUE);
 
     // A normal user must not see contextual links.
-    $this->assertNoRaw($sharemessage_contextual_id);
+    $this->assertSession()->responseNotContains($sharemessage_contextual_id);
   }
 
 }
diff --git a/tests/src/Functional/ShareMessageExtraFieldTest.php b/tests/src/Functional/ShareMessageExtraFieldTest.php
index 30db258..20819e6 100644
--- a/tests/src/Functional/ShareMessageExtraFieldTest.php
+++ b/tests/src/Functional/ShareMessageExtraFieldTest.php
@@ -52,7 +52,7 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
   /**
    * @inheritdoc
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Setup vocabulary and terms.
@@ -103,7 +103,7 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
     // Step 1: Create a Share Message in the UI.
     $this->drupalGet('admin/config/services/sharemessage/add');
     // Check the Share Message extra field is per default set to '- None -'.
-    $this->assertOptionSelected('edit-entity-type', '');
+    $this->assertTrue($this->assertSession()->optionExists('edit-entity-type', '')->hasAttribute('selected'));
     $this->assertSession()->pageTextContains('Browse available tokens.');
     $this->assertSession()->responseNotContains('<fieldset data-drupal-selector="edit-bundles"');
     // Use tokens in the Share Message title to display the node's title.
@@ -116,8 +116,8 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
       'image_url' => 'http://www.example.com/drupal.jpg',
       'share_url' => 'http://www.example.com',
     ];
-    $this->drupalPostForm(NULL, $sharemessage, t('Save'));
-    $this->assertText(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]), 'Share Message is successfully saved.');
+    $this->submitForm($sharemessage, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
     // Share Message settings for article and page.
     $sharemessage_article = [
       'title' => $article->getTitle(),
@@ -137,24 +137,24 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
 
     // Step 2: Select 'node' entity type. All content types are displayed.
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
-    $this->assertOptionSelected('edit-entity-type', '');
+    $this->assertTrue($this->assertSession()->optionExists('edit-entity-type', '')->hasAttribute('selected'));
     $this->assertSession()->responseNotContains('<fieldset data-drupal-selector="edit-bundles"');
-    $this->drupalPostForm(NULL, ['entity_type' => 'node'], 'Save');
+    $this->submitForm(['entity_type' => 'node'], 'Save');
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
     $this->assertSession()->responseContains('<span class="fieldset-legend">Content type</span>');
     $this->assertSession()->checkboxNotChecked('bundles[article]');
     $this->assertSession()->checkboxNotChecked('bundles[page]');
     // Select no bundle to allow all content types.
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->submitForm([], t('Save'));
     // Enable the extra fields in the article and page 'Manage display' pages.
     $extra_field = [
       'fields[sharemessage__sharemessage_test_label][region]' => 'content',
       'fields[sharemessage__sharemessage_test_label][weight]' => 105,
     ];
     $this->drupalGet('admin/structure/types/manage/article/display/teaser');
-    $this->drupalPostForm(NULL, $extra_field, 'Save');
+    $this->submitForm($extra_field, 'Save');
     $this->drupalGet('admin/structure/types/manage/page/display/teaser');
-    $this->drupalPostForm(NULL, $extra_field, 'Save');
+    $this->submitForm($extra_field, 'Save');
     // Check that in the front page the nodes have the extra fields now.
     $this->setEntityRawContent('node', $article);
     $this->assertShareButtons($sharemessage_article, 'addthis_16x16_style', TRUE);
@@ -163,18 +163,18 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
 
     // Step 3: Select no entity type to disable the Share Message extra field.
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
-    $this->assertOptionSelected('edit-entity-type', 'node');
+    $this->assertTrue($this->assertSession()->optionExists('edit-entity-type', 'node')->hasAttribute('selected'));
     $this->assertSession()->checkboxNotChecked('bundles[article]');
     $this->assertSession()->checkboxNotChecked('bundles[page]');
-    $this->drupalPostForm(NULL, ['entity_type' => ''], 'Save');
+    $this->submitForm(['entity_type' => ''], 'Save');
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
     $this->assertSession()->responseNotContains('<fieldset data-drupal-selector="edit-bundles"');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     // Check the extra fields are not shown anymore for any content types.
     $this->drupalGet('admin/structure/types/manage/article/display/teaser');
-    $this->assertNoFieldByName('fields[sharemessage__sharemessage_test_label][type]');
+    $this->assertSession()->fieldValueNotEquals('fields[sharemessage__sharemessage_test_label][type]', '');
     $this->drupalGet('admin/structure/types/manage/page/display/teaser');
-    $this->assertNoFieldByName('fields[sharemessage__sharemessage_test_label][type]');
+    $this->assertSession()->fieldValueNotEquals('fields[sharemessage__sharemessage_test_label][type]', '');
     // Check in the front page, the nodes don't have the extra fields anymore.
     $this->setEntityRawContent('node', $article);
     $this->assertNoShareButtons($sharemessage_article, 'addthis_16x16_style', TRUE);
@@ -183,19 +183,19 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
 
     // Check that the extra field has not been enabled for any bundles.
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
-    $this->assertOptionSelected('edit-entity-type', '');
+    $this->assertTrue($this->assertSession()->optionExists('edit-entity-type', '')->hasAttribute('selected'));
 
     // Step 4: Select 'node' entity type, select just the article bundle.
-    $this->drupalPostForm(NULL, ['entity_type' => 'node'], 'Save');
+    $this->submitForm(['entity_type' => 'node'], 'Save');
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
     $this->assertSession()->checkboxNotChecked('bundles[article]');
     $this->assertSession()->checkboxNotChecked('bundles[page]');
-    $this->drupalPostForm(NULL, ['bundles[article]' => 1], t('Save'));
+    $this->submitForm(['bundles[article]' => 1], t('Save'));
     // Check that Share Message extra field is displayed only for article.
     $this->drupalGet('admin/structure/types/manage/article/display/teaser');
-    $this->drupalPostForm(NULL, $extra_field, 'Save');
+    $this->submitForm($extra_field, 'Save');
     $this->drupalGet('admin/structure/types/manage/page/display/teaser');
-    $this->assertNoFieldByName('fields[sharemessage__sharemessage_test_label][type]');
+    $this->assertSession()->fieldValueNotEquals('fields[sharemessage__sharemessage_test_label][type]', '');
     // Check that in the front page, only article node has the extra field now.
     $this->setEntityRawContent('node', $article);
     $this->assertShareButtons($sharemessage_article, 'addthis_16x16_style', TRUE);
@@ -214,24 +214,24 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
 
     // Step 5: Select 'user' entity type. No bundles should be displayed.
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
-    $this->assertOptionSelected('edit-entity-type', 'node');
+    $this->assertTrue($this->assertSession()->optionExists('edit-entity-type', 'node')->hasAttribute('selected'));
     $this->assertSession()->checkboxChecked('bundles[article]');
     $this->assertSession()->checkboxNotChecked('bundles[page]');
-    $this->drupalPostForm(NULL, ['entity_type' => 'user'], 'Save');
+    $this->submitForm(['entity_type' => 'user'], 'Save');
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
     $this->assertSession()->responseNotContains('<fieldset data-drupal-selector="edit-bundles"');
     // Use tokens in the Share Message title to display the user's name and ID.
-    $this->drupalPostForm(NULL, ['title' => '[user:name], [user:uid]'], t('Save'));
+    $this->submitForm(['title' => '[user:name], [user:uid]'], t('Save'));
     // Check the extra fields are not shown anymore for any content types.
     $this->drupalGet('admin/structure/types/manage/article/display/teaser');
-    $this->assertNoFieldByName('fields[sharemessage__sharemessage_test_label][type]');
+    $this->assertSession()->fieldValueNotEquals('fields[sharemessage__sharemessage_test_label][type]', '');
     $this->drupalGet('admin/structure/types/manage/page/display/teaser');
-    $this->assertNoFieldByName('fields[sharemessage__sharemessage_test_label][type]');
+    $this->assertSession()->fieldValueNotEquals('fields[sharemessage__sharemessage_test_label][type]', '');
     // Enable the extra field in the accounts 'Manage display' page.
     $this->drupalGet('admin/config/people/accounts/display');
-    $this->drupalPostForm(NULL, ['display_modes_custom[full]' => TRUE], t('Save'));
+    $this->submitForm(['display_modes_custom[full]' => TRUE], t('Save'));
     $this->drupalGet('admin/config/people/accounts/display/full');
-    $this->drupalPostForm(NULL, $extra_field, 'Save');
+    $this->submitForm($extra_field, 'Save');
     // Check in the front page, the nodes don't have the extra fields anymore.
     $this->setEntityRawContent('node', $article);
     $this->assertNoShareButtons($sharemessage_article, 'addthis_16x16_style', TRUE);
@@ -255,24 +255,24 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
 
     // Step 6: Select 'taxonomy_term' entity type. 'Tags' bundle is displayed.
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
-    $this->assertOptionSelected('edit-entity-type', 'user');
-    $this->drupalPostForm(NULL, ['entity_type' => 'taxonomy_term'], 'Save');
+    $this->assertTrue($this->assertSession()->optionExists('edit-entity-type', 'user')->hasAttribute('selected'));
+    $this->submitForm(['entity_type' => 'taxonomy_term'], 'Save');
     $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_label');
     $this->assertSession()->checkboxNotChecked('bundles[tags]');
     // Use tokens in the Share Message title to display the term's name.
-    $this->drupalPostForm(NULL, ['title' => '[term:vocabulary:name], [term:name]'], t('Save'));
+    $this->submitForm(['title' => '[term:vocabulary:name], [term:name]'], t('Save'));
     // Check the extra fields are not shown for any content types and user.
     $this->drupalGet('admin/structure/types/manage/article/display/teaser');
-    $this->assertNoFieldByName('fields[sharemessage__sharemessage_test_label][type]');
+    $this->assertSession()->fieldValueNotEquals('fields[sharemessage__sharemessage_test_label][type]', '');
     $this->drupalGet('admin/structure/types/manage/page/display/teaser');
-    $this->assertNoFieldByName('fields[sharemessage__sharemessage_test_label][type]');
+    $this->assertSession()->fieldValueNotEquals('fields[sharemessage__sharemessage_test_label][type]', '');
     $this->drupalGet('admin/config/people/accounts/display/full');
-    $this->assertNoFieldByName('fields[sharemessage__sharemessage_test_label][type]');
+    $this->assertSession()->fieldValueNotEquals('fields[sharemessage__sharemessage_test_label][type]', '');
     // Enable the extra field in the taxonomy terms 'Manage display' page.
     $this->drupalGet('admin/structure/taxonomy/manage/tags/overview/display');
-    $this->drupalPostForm(NULL, ['display_modes_custom[full]' => TRUE], t('Save'));
+    $this->submitForm(['display_modes_custom[full]' => TRUE], t('Save'));
     $this->drupalGet('admin/structure/taxonomy/manage/tags/overview/display/full');
-    $this->drupalPostForm(NULL, $extra_field, 'Save');
+    $this->submitForm($extra_field, 'Save');
     // Check in the front page, the nodes don't have the extra fields anymore.
     $this->setEntityRawContent('node', $article);
     $this->assertNoShareButtons($sharemessage_article, 'addthis_16x16_style', TRUE);
@@ -304,8 +304,10 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
       'message_long' => 'Long description',
       'message_short' => 'Short description',
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/add', $sharemessage, t('Save'));
-    $this->drupalPostForm('admin/config/services/sharemessage/manage/sharemessage_test_special_characters', [
+    $this->drupalGet('admin/config/services/sharemessage/add');
+    $this->submitForm($sharemessage, t('Save'));
+    $this->drupalGet('admin/config/services/sharemessage/manage/sharemessage_test_special_characters');
+    $this->submitForm([
       'entity_type' => 'node',
     ], 'Save');
     // Enable the extra field in the article 'Manage display page'.
@@ -313,7 +315,8 @@ class ShareMessageExtraFieldTest extends ShareMessageTestBase {
       'fields[sharemessage__sharemessage_test_special_characters][region]' => 'content',
       'fields[sharemessage__sharemessage_test_special_characters][weight]' => 105,
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/display/default', $extra_field, 'Save');
+    $this->drupalGet('admin/structure/types/manage/article/display/default');
+    $this->submitForm($extra_field, 'Save');
     // Check that the Share Message title is properly encoded.
     $sharemessage_article = [
       'title' => 'Test with special characters &#039; &quot; &lt; &gt; &amp; ',
diff --git a/tests/src/Functional/ShareMessageSettingsTest.php b/tests/src/Functional/ShareMessageSettingsTest.php
index ec3565c..10c1b08 100644
--- a/tests/src/Functional/ShareMessageSettingsTest.php
+++ b/tests/src/Functional/ShareMessageSettingsTest.php
@@ -24,7 +24,7 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       'default_additional_services' => FALSE,
       'default_icon_style' => 'addthis_16x16_style',
     ];
-    $this->drupalPostForm(NULL, $default_settings, t('Save configuration'));
+    $this->submitForm($default_settings, t('Save configuration'));
 
     // Step 2: Create Share Message with customized settings.
     $this->drupalGet('admin/config/services/sharemessage/add');
@@ -38,8 +38,8 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       'settings[additional_services]' => 1,
       'settings[icon_style]' => 'addthis_32x32_style',
     ];
-    $this->drupalPostForm(NULL, $sharemessage, t('Save'));
-    $this->assertText(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
+    $this->submitForm($sharemessage, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
 
     // Step 3: Verify that settings are overridden
     // (services, additional_services and icon_style).
@@ -48,10 +48,10 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
     $raw_html_additional_services = '<a class="addthis_button_compact"></a>';
 
     // Check services (facebook_like button should not be displayed).
-    $this->assertNoRaw($raw_html_services, 'Facebook like button that is globally enabled is not displayed on the page, so that the global settings are overridden.');
+    $this->assertSession()->responseNotContains($raw_html_services);
 
     // Additional services should be displayed.
-    $this->assertRaw($raw_html_additional_services, 'Additional services button is displayed, so that the global settings are overridden.');
+    $this->assertSession()->responseContains($raw_html_additional_services);
 
     // Check if the icon style has been changed so that the global settings are overridden.
     $this->assertShareButtons($sharemessage, $sharemessage['settings[icon_style]'], TRUE);
@@ -61,17 +61,17 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
     $edit = [
       'settings[override_default_settings]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
-    $this->assertText(t('Share Message @label has been updated.', ['@label' => $sharemessage['label']]));
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been updated.', ['@label' => $sharemessage['label']]));
 
     // Step 5: Check that addThis widget is displayed with default settings.
     $this->drupalGet('sharemessage-test/sharemessage_test_label');
 
     // Check services (facebook_like button should be displayed).
-    $this->assertRaw($raw_html_services, 'Facebook like button is displayed as it is globally configured.');
+    $this->assertSession()->responseContains($raw_html_services);
 
     // Additional services button should not be displayed.
-    $this->assertNoRaw($raw_html_additional_services, 'Additional services button is not displayed as it is globally configured.');
+    $this->assertSession()->responseNotContains($raw_html_additional_services);
 
     // Check icon style (should be addthis_16x16_style).
     $this->assertShareButtons($sharemessage, $default_settings['default_icon_style'], TRUE);
@@ -80,8 +80,8 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
     $this->drupalGet('admin/config/services/sharemessage/sharrre-settings');
 
     // Check if configuration is correct (library placeholder from CDN).
-    $this->assertNoText('Either set the library locally (in /libraries/sharrre) and enable the libraries module or enter the remote URL on Sharrre settings page.');
-    $this->assertNoLinkByHref('admin/config/services/sharemessage/sharrre-settings');
+    $this->assertSession()->pageTextNotContains('Either set the library locally (in /libraries/sharrre) and enable the libraries module or enter the remote URL on Sharrre settings page.');
+    $this->assertSession()->linkByHrefNotExists('admin/config/services/sharemessage/sharrre-settings');
 
     // Test for empty remote library URL.
     $settings_without_url = [
@@ -90,10 +90,10 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       ],
       'library_url' => '',
     ];
-    $this->drupalPostForm(NULL, $settings_without_url, t('Save configuration'));
-    $this->assertText('The configuration options have been saved.');
-    $this->assertText('Either set the library locally (in /libraries/sharrre) and enable the libraries module or enter the remote URL on Sharrre settings page.');
-    $this->assertLinkByHref('admin/config/services/sharemessage/sharrre-settings');
+    $this->submitForm($settings_without_url, t('Save configuration'));
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
+    $this->assertSession()->pageTextContains('Either set the library locally (in /libraries/sharrre) and enable the libraries module or enter the remote URL on Sharrre settings page.');
+    $this->assertSession()->linkByHrefExists('admin/config/services/sharemessage/sharrre-settings');
 
     // Test for wrong naming of remote library.
     $this->drupalGet('admin/config/services/sharemessage/sharrre-settings');
@@ -103,9 +103,9 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       ],
       'library_url' => 'test/sharrre.js',
     ];
-    $this->drupalPostForm(NULL, $settings_with_wrong_url, t('Save configuration'));
-    $this->assertText('The configuration options have been saved.');
-    $this->assertText('The remote URL is unexpected. Please, provide the correct URL to the minimized version of the library found on Sharrre CDN.');
+    $this->submitForm($settings_with_wrong_url, t('Save configuration'));
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
+    $this->assertSession()->pageTextContains('The remote URL is unexpected. Please, provide the correct URL to the minimized version of the library found on Sharrre CDN.');
 
     $default_settings = [
       'default_services[]' => [
@@ -120,7 +120,7 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       'enable_hover' => TRUE,
       'enable_counter' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $default_settings, t('Save configuration'));
+    $this->submitForm($default_settings, t('Save configuration'));
 
     // Step 2: Switch to Sharrre plugin.
     $this->drupalGet('admin/config/services/sharemessage');
@@ -132,12 +132,12 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       'message_long' => 'Test long message',
       'message_short' => 'Test short message',
     ];
-    $this->drupalPostForm(NULL, $sharemessage, t('Save'));
-    $this->assertText(t('Share Message @label has been updated.', ['@label' => $sharemessage['label']]));
+    $this->submitForm($sharemessage, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been updated.', ['@label' => $sharemessage['label']]));
 
     $this->drupalGet('sharemessage-test/sharemessage_test_label');
-    $this->assertRaw('"library_url":"\/\/cdn.jsdelivr.net\/sharrre\/1.3.4\/jquery.sharrre-1.3.4.min.js"');
-    $this->assertRaw('"googlePlus":"googlePlus","facebook":"facebook","twitter":"twitter","linkedin":"linkedin","pinterest":"pinterest"');
+    $this->assertSession()->responseContains('"library_url":"\/\/cdn.jsdelivr.net\/sharrre\/1.3.4\/jquery.sharrre-1.3.4.min.js"');
+    $this->assertSession()->responseContains('"googlePlus":"googlePlus","facebook":"facebook","twitter":"twitter","linkedin":"linkedin","pinterest":"pinterest"');
 
     // Test the naming of the file warning.
     $this->drupalGet('admin/config/services/sharemessage/sharrre-settings');
@@ -147,9 +147,9 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       ],
       'library_url' => '//cdn.jsdelivr.net/sharrre/1.3.4/jquery.sharrre.js',
     ];
-    $this->drupalPostForm(NULL, $settings_with_wrong_library_naming, t('Save configuration'));
-    $this->assertText('The configuration options have been saved.');
-    $this->assertText('The naming of the library is unexpected. Double check that this is the real Sharrre library. The URL for the minimized version of the library can be found on Sharrre CDN.');
+    $this->submitForm($settings_with_wrong_library_naming, t('Save configuration'));
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
+    $this->assertSession()->pageTextContains('The naming of the library is unexpected. Double check that this is the real Sharrre library. The URL for the minimized version of the library can be found on Sharrre CDN.');
 
     // Test if preg match for the naming of the library works correctly.
     $settings_with_correct_library_naming = [
@@ -158,9 +158,9 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       ],
       'library_url' => '//cdn.jsdelivr.net/sharrre/1.3.4/jquery.sharrre-10.130.1234.min.js',
     ];
-    $this->drupalPostForm(NULL, $settings_with_correct_library_naming, t('Save configuration'));
-    $this->assertText('The configuration options have been saved.');
-    $this->assertNoText('The naming of the library is unexpected. Double check that this is the real Sharrre library. The URL for the minimized version of the library can be found on Sharrre CDN.');
+    $this->submitForm($settings_with_correct_library_naming, t('Save configuration'));
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
+    $this->assertSession()->pageTextNotContains('The naming of the library is unexpected. Double check that this is the real Sharrre library. The URL for the minimized version of the library can be found on Sharrre CDN.');
 
     // Test UrlCurl script for Sharrre.
     // This test requires capability to connect to Google Plus, Stumbleupon,
@@ -183,7 +183,7 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
         'twitter',
       ],
     ];
-    $this->drupalPostForm(NULL, $default_settings, t('Save configuration'));
+    $this->submitForm($default_settings, t('Save configuration'));
 
     $this->drupalGet('admin/config/services/sharemessage/add');
     // Step 2: Create Social Share Privacy with customized settings.
@@ -196,25 +196,25 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       ],
       'plugin' => 'socialshareprivacy',
     ];
-    $this->drupalPostForm(NULL, $sharemessage, t('Save'));
-    $this->assertText(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
+    $this->submitForm($sharemessage, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
 
     // Step 3: Verify that settings are overridden.
     $this->drupalGet('sharemessage-test/socialshareprivacy_test_label');
-    $this->assertRaw('"facebook":{"status":true');
+    $this->assertSession()->responseContains('"facebook":{"status":true');
     // Step 4: Uncheck "Override default settings" checkbox.
     $this->drupalGet('admin/config/services/sharemessage/manage/' . $sharemessage['id']);
     $edit = [
       'settings[override_default_settings]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
-    $this->assertText(t('Share Message @label has been updated.', ['@label' => $sharemessage['label']]));
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been updated.', ['@label' => $sharemessage['label']]));
     // Step 5: Check default settings of Social Share Privacy is displayed.
     $this->drupalGet('sharemessage-test/socialshareprivacy_test_label');
     // Check services (googlePlus and twitter should be displayed).
-    $this->assertRaw('"gplus":{"status":true');
-    $this->assertRaw('"twitter":{"status":true');
-    $this->assertRaw('"facebook":{"status":false');
+    $this->assertSession()->responseContains('"gplus":{"status":true');
+    $this->assertSession()->responseContains('"twitter":{"status":true');
+    $this->assertSession()->responseContains('"facebook":{"status":false');
 
     // Test sharemessage global settings.
     $this->drupalGet('admin/config/services/sharemessage/sharemessage-settings');
@@ -222,10 +222,10 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       'add_twitter_card' => TRUE,
       'twitter_user' => 'fancy_twitter_name',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
-    $this->assertText(t('The configuration options have been saved.'));
-    $this->assertFieldByName('add_twitter_card', TRUE);
-    $this->assertFieldByName('twitter_user', 'fancy_twitter_name');
+    $this->submitForm($edit, t('Save configuration'));
+    $this->assertSession()->pageTextContains(t('The configuration options have been saved.'));
+    $this->assertSession()->fieldValueEquals('add_twitter_card', TRUE);
+    $this->assertSession()->fieldValueEquals('twitter_user', 'fancy_twitter_name');
   }
 
   /**
@@ -244,30 +244,30 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       'settings[additional_services]' => 1,
       'settings[icon_style]' => 'addthis_32x32_style',
     ];
-    $this->drupalPostForm(NULL, $sharemessage, t('Save'));
+    $this->submitForm($sharemessage, t('Save'));
 
     // Check newly created Share Message on list page.
     $this->drupalGet('admin/config/services/sharemessage');
-    $this->assertText($sharemessage['label'], 'Newly created sharemessage found.');
+    $this->assertSession()->pageTextContains($sharemessage['label']);
     // Check for Edit link.
-    $this->assertLink('Edit');
+    $this->assertSession()->linkExists('Edit');
     // Check for the Delete link.
-    $this->assertLink('Delete');
+    $this->assertSession()->linkExists('Delete');
 
     // Click delete link on admin ui.
     $this->clickLink('Delete');
-    $this->assertText(t('Are you sure you want to delete the share message @label?', ['@label' => $sharemessage['label']]));
+    $this->assertSession()->pageTextContains(t('Are you sure you want to delete the share message @label?', ['@label' => $sharemessage['label']]));
 
     // Check if cancel button is present or not.
-    $this->assertLink('Cancel');
+    $this->assertSession()->linkExists('Cancel');
 
     // Delete the Share Message.
-    $this->drupalPostForm(NULL, [], t('Delete'));
-    $this->assertText(t('The share message @label has been deleted.', ['@label' => $sharemessage['label']]));
+    $this->submitForm([], t('Delete'));
+    $this->assertSession()->pageTextContains(t('The share message @label has been deleted.', ['@label' => $sharemessage['label']]));
 
     // Check if removed from listing page as well.
     $this->drupalGet('admin/config/services/sharemessage');
-    $this->assertNoText($sharemessage['label'], 'Not found the deleted message.');
+    $this->assertSession()->pageTextNotContains($sharemessage['label']);
   }
 
   /**
@@ -284,8 +284,8 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       'message_long' => 'Long description',
       'message_short' => 'Short description',
     ];
-    $this->drupalPostForm(NULL, $sharemessage, t('Save'));
-    $this->assertText(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
+    $this->submitForm($sharemessage, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been added.', ['@label' => $sharemessage['label']]));
     $this->drupalGet('sharemessage-test/sharemessage_test_special_chars');
     // Check for correct encoding in meta tags.
     $this->assertOGTags('og:title', 'Inondations sur la Côte d&#039;Azur: «C’est apocalyptique, c’est Tchernobyl»');
@@ -303,7 +303,7 @@ class ShareMessageSettingsTest extends ShareMessageTestBase {
       'message_long' => 'Long description 2',
       'message_short' => 'Short description 2',
     ];
-    $this->drupalPostForm(NULL, $sharemessage2, t('Save'));
+    $this->submitForm($sharemessage2, t('Save'));
     $this->drupalGet('sharemessage-test/sharemessage_test_special_chars_2');
     $this->assertOGTags('og:title', 'This is a second test with quotes &quot;');
     $this->assertNoOGTags('og:title', 'This is a second test with quotes "');
diff --git a/tests/src/Functional/ShareMessageTestBase.php b/tests/src/Functional/ShareMessageTestBase.php
index db8776f..476d18f 100644
--- a/tests/src/Functional/ShareMessageTestBase.php
+++ b/tests/src/Functional/ShareMessageTestBase.php
@@ -50,7 +50,7 @@ abstract class ShareMessageTestBase extends BrowserTestBase {
    */
   protected $adminUser;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create an admin user.
@@ -178,7 +178,7 @@ abstract class ShareMessageTestBase extends BrowserTestBase {
     }
 
     if (isset($this->renderedEntity)) {
-      return $not_exists ? $this->assertNotContains($raw_html_icon_style, $this->renderedEntity, $message) : $this->assertContains($raw_html_icon_style, $this->renderedEntity, $message);
+      return $not_exists ? $this->assertStringNotContainsString($raw_html_icon_style, $this->renderedEntity, $message) : $this->assertStringContainsString($raw_html_icon_style, $this->renderedEntity, $message);
     }
 
     if ($not_exists) {
@@ -261,10 +261,10 @@ abstract class ShareMessageTestBase extends BrowserTestBase {
     }
 
     if ($not_exists) {
-      return $this->assertNoRaw($meta_tag, $message);
+      return $this->assertSession()->responseNotContains($meta_tag);
     }
     else {
-      return $this->assertRaw($meta_tag, $message);
+      return $this->assertSession()->responseContains($meta_tag);
     }
   }
 
diff --git a/tests/src/Functional/ShareMessageTwitterCardsTest.php b/tests/src/Functional/ShareMessageTwitterCardsTest.php
index d0b4399..5b626e5 100644
--- a/tests/src/Functional/ShareMessageTwitterCardsTest.php
+++ b/tests/src/Functional/ShareMessageTwitterCardsTest.php
@@ -19,7 +19,8 @@ class ShareMessageTwitterCardsTest extends ShareMessageTestBase {
       'add_twitter_card' => TRUE,
       'twitter_user' => $user_name,
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/sharemessage-settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/services/sharemessage/sharemessage-settings');
+    $this->submitForm($edit, t('Save configuration'));
 
     // Create a share message in the UI.
     $this->drupalGet('admin/config/services/sharemessage/add');
@@ -33,31 +34,32 @@ class ShareMessageTwitterCardsTest extends ShareMessageTestBase {
       'image_url' => 'http://www.example.com/drupal.jpg',
       'share_url' => 'http://www.example.com',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
-    $this->assertText(t('Share Message @label has been added.', ['@label' => $edit['label']]), 'Share Message is successfully saved.');
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been added.', ['@label' => $edit['label']]));
 
     // Display share message and verify the twitter card meta tags.
     $this->drupalGet('sharemessage-test/sharemessage_test_label');
 
     $meta = '<meta name="twitter:card" content="summary_large_image" />';
-    $this->assertRaw($meta);
+    $this->assertSession()->responseContains($meta);
     $meta = '<meta name="twitter:site" content="' . $user_name . '" />';
-    $this->assertRaw($meta);
+    $this->assertSession()->responseContains($meta);
     $meta = '<meta name="twitter:description" content="' . $edit['message_long'] . '" />';
-    $this->assertRaw($meta);
+    $this->assertSession()->responseContains($meta);
     $meta = '<meta name="twitter:image" content="' . $edit['image_url'] . '" />';
-    $this->assertRaw($meta);
+    $this->assertSession()->responseContains($meta);
 
     // Disable rendering of twitter cards meta tags.
     $edit = [
       'add_twitter_card' => FALSE,
     ];
-    $this->drupalPostForm('admin/config/services/sharemessage/sharemessage-settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/services/sharemessage/sharemessage-settings');
+    $this->submitForm($edit, t('Save configuration'));
 
     $this->drupalGet('sharemessage-test/sharemessage_test_label');
-    $this->assertNoRaw('<meta name="twitter:card"');
-    $this->assertNoRaw('<meta name="twitter:site"');
-    $this->assertNoRaw('<meta name="twitter:description"');
+    $this->assertSession()->responseNotContains('<meta name="twitter:card"');
+    $this->assertSession()->responseNotContains('<meta name="twitter:site"');
+    $this->assertSession()->responseNotContains('<meta name="twitter:description"');
   }
 
 }
diff --git a/tests/src/Functional/ShareMessageViewModesTest.php b/tests/src/Functional/ShareMessageViewModesTest.php
index 08ca838..4fa527c 100644
--- a/tests/src/Functional/ShareMessageViewModesTest.php
+++ b/tests/src/Functional/ShareMessageViewModesTest.php
@@ -25,8 +25,8 @@ class ShareMessageViewModesTest extends ShareMessageTestBase {
       'image_url' => 'http://www.example.com/drupal.jpg',
       'share_url' => 'http://www.example.com',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
-    $this->assertText(t('Share Message @label has been added.', ['@label' => $edit['label']]), 'Share Message is successfully saved.');
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been added.', ['@label' => $edit['label']]));
 
     $this->drupalGet('sharemessage-test/sharemessage_test_label');
     $this->assertShareButtons($edit, 'addthis_16x16_style', TRUE);
diff --git a/tests/src/Functional/ShareMessageWorkflowTest.php b/tests/src/Functional/ShareMessageWorkflowTest.php
index 7331d53..c227f22 100644
--- a/tests/src/Functional/ShareMessageWorkflowTest.php
+++ b/tests/src/Functional/ShareMessageWorkflowTest.php
@@ -32,8 +32,8 @@ class ShareMessageWorkflowTest extends ShareMessageTestBase {
       'image_url' => 'http://www.example.com/drupal.jpg',
       'share_url' => 'http://www.example.com',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
-    $this->assertText(t('Share Message @label has been added.', ['@label' => $edit['label']]), 'Share Message is successfully saved.');
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains(t('Share Message @label has been added.', ['@label' => $edit['label']]));
 
     // Step 2: Display Share Message and verify AddThis markup
     // and meta header elements.
@@ -47,7 +47,7 @@ class ShareMessageWorkflowTest extends ShareMessageTestBase {
 
     $this->drupalGet('admin/config/services/sharemessage/add');
     // Check if the enforce checkbox is there.
-    $this->assertFieldByName('enforce_usage', NULL, 'The enforce checkbox was found.');
+    $this->assertSession()->fieldExists('enforce_usage');
 
     $edit_2 = [
       'label' => 'Share Message 2 Test Label',
@@ -59,12 +59,12 @@ class ShareMessageWorkflowTest extends ShareMessageTestBase {
       'share_url' => $edit['share_url'],
       'enforce_usage' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit_2, t('Save'));
+    $this->submitForm($edit_2, t('Save'));
 
     /** @var \Drupal\sharemessage\ShareMessageInterface $sharemessage */
     $sharemessage = \Drupal::entityTypeManager()->getStorage('sharemessage')->load('sharemessage_test_label2');
     // Check if the option was saved as expected.
-    $this->assertEqual($sharemessage->enforce_usage, TRUE, 'Enforce setting was saved on the entity.');
+    $this->assertEquals($sharemessage->enforce_usage, TRUE, 'Enforce setting was saved on the entity.');
     $this->drupalGet('sharemessage-test/sharemessage_test_label', ['query' => ['smid' => 'sharemessage_test_label2']]);
 
     // Check if the og:description tag gets rendered correctly.
@@ -76,7 +76,7 @@ class ShareMessageWorkflowTest extends ShareMessageTestBase {
     $this->assertNoOGTags('og:url', $edit['share_url'], $message_description);
 
     // Check if the overridden Share Message is rendered correctly.
-    $this->assertRaw('addthis:description="' . $edit['message_long'] . '"', 'Overridden sharemessage has og data as attributes.');
+    $this->assertSession()->responseContains('addthis:description="' . $edit['message_long'] . '"');
 
     // Disable enforcement of overrides in the global settings.
     $this->config('sharemessage.settings')->set('message_enforcement', FALSE)->save();
@@ -100,7 +100,7 @@ class ShareMessageWorkflowTest extends ShareMessageTestBase {
       'title' => 'Share Message Test Title [current-user:name]',
       'message_long' => 'Share Message Test Long Description',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
 
     // Add a block that will contain the created Share Message.
     $theme = 'classy';
@@ -109,20 +109,21 @@ class ShareMessageWorkflowTest extends ShareMessageTestBase {
       'settings[sharemessage]' => $edit['id'],
       'region' => 'content',
     ];
-    $this->drupalPostForm('admin/structure/block/add/sharemessage_block/' . $theme, $block, t('Save block'));
+    $this->drupalGet('admin/structure/block/add/sharemessage_block/' . $theme);
+    $this->submitForm($block, t('Save block'));
 
     $this->drupalGet('user');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Check that the username is displayed.
-    $this->assertRaw('Share Message Test Title ' . $this->adminUser->getAccountName());
+    $this->assertSession()->responseContains('Share Message Test Title ' . $this->adminUser->getAccountName());
 
     // Step 2: Edit the username.
     $this->adminUser->name = 'new user';
     $this->adminUser->save();
 
     $this->drupalGet('user');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Check that the changed username is displayed.
-    $this->assertRaw('Share Message Test Title ' . $this->adminUser->getAccountName());
+    $this->assertSession()->responseContains('Share Message Test Title ' . $this->adminUser->getAccountName());
   }
 }
diff --git a/tests/src/FunctionalJavascript/ShareMessageJavascriptTest.php b/tests/src/FunctionalJavascript/ShareMessageJavascriptTest.php
index aceebd1..68e0d63 100644
--- a/tests/src/FunctionalJavascript/ShareMessageJavascriptTest.php
+++ b/tests/src/FunctionalJavascript/ShareMessageJavascriptTest.php
@@ -19,7 +19,7 @@ class ShareMessageJavascriptTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Install bartik theme.
