modules/contrib/licensing/licensing.module
modules/contrib/licensing/src/Form/LicenseTypeForm.php
modules/contrib/licensing/src/LicenseAccessControlHandler.php
modules/contrib/licensing/licensing.page.inc
modules/contrib/licensing/src/Entity/License.php
modules/contrib/licensing/src/LicenseHtmlRouteProvider.php
modules/contrib/licensing/src/LicenseListBuilder.php
modules/contrib/licensing/src/LicenseTranslationHandler.php
modules/contrib/licensing/src/LicenseTypeHtmlRouteProvider.php
modules/contrib/licensing/src/LicenseTypeListBuilder.php
modules/contrib/licensing/src/LicensingService.php
modules/contrib/licensing/src/Plugin/Condition/Licensing.php
modules/contrib/licensing/src/Entity/LicenseInterface.php
modules/contrib/licensing/src/Entity/LicenseType.php
modules/contrib/licensing/src/Entity/LicenseTypeInterface.php
modules/contrib/licensing/src/Entity/LicenseViewsData.php
modules/contrib/licensing/src/Form/LicenseDeleteForm.php
modules/contrib/licensing/src/Form/LicenseForm.php
modules/contrib/licensing/src/Form/LicenseSettingsForm.php
modules/contrib/licensing/src/Form/LicenseTypeDeleteForm.php

1 file with changes
===================

1) modules/contrib/licensing/licensing.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Session\AccountInterface;
+use Drupal\licensing\Entity\LicenseInterface;
+use Drupal\licensing\Entity\LicenseType;
+use Drupal\licensing\Entity\License;
 /**
  * @file
  * Contains license.module..
@@ @@
 /**
  * Implements hook_entity_access().
  */
-function licensing_entity_access(\Drupal\Core\Entity\EntityInterface $entity, $operation, \Drupal\Core\Session\AccountInterface $account) {
+function licensing_entity_access(EntityInterface $entity, $operation, AccountInterface $account) {
     $access = AccessResult::neutral();

     if ($account->hasPermission('administer license entities')) {
@@ @@
  *
  * @return bool|\Drupal\licensing\Entity\License
  */
-function licensing_load_active_user_license_for_entity(\Drupal\Core\Session\AccountInterface $account, \Drupal\Core\Entity\EntityInterface $entity, $properties = []) {
+function licensing_load_active_user_license_for_entity(AccountInterface $account, EntityInterface $entity, $properties = []) {
     $default_properties['status'] = LICENSE_ACTIVE;
     $properties = array_merge($default_properties, $properties);
     $licenses = licensing_load_user_licenses_for_entity($account, $entity, $properties);
@@ @@
  *
  * @return \Drupal\licensing\Entity\License[]
  */
-function licensing_load_user_licenses_for_entity(\Drupal\Core\Session\AccountInterface $account, \Drupal\Core\Entity\EntityInterface $entity, $properties = []) {
+function licensing_load_user_licenses_for_entity(AccountInterface $account, EntityInterface $entity, $properties = []) {
     $default_properties = [
       'user_id' => $account->id(),
       'licensed_entity' => $entity->id(),
@@ @@
  *
  * @return bool
  */
-function licensing_license_applies_to_user(\Drupal\licensing\Entity\LicenseInterface $license, \Drupal\Core\Session\AccountInterface $account) {
+function licensing_license_applies_to_user(LicenseInterface $license, AccountInterface $account) {
     $bundle = $license->bundle();
     $license_type = \Drupal::entityTypeManager()->getStorage('license_type')->load($bundle);

@@ @@
  *
  * @return bool
  */
-function licensing_license_type_applies_to_user(\Drupal\licensing\Entity\LicenseType $license_type, \Drupal\Core\Session\AccountInterface $account) {
+function licensing_license_type_applies_to_user(LicenseType $license_type, AccountInterface $account) {
   // Licensing does no apply to administrators.
   if ($account->hasPermission('administer license entities')) {
     return FALSE;
@@ @@
   $query = \Drupal::entityQuery('license');
   $query->condition('status', LICENSE_EXPIRED, '!=')
     ->condition('expires_automatically', '1')
-    ->condition('expiry', REQUEST_TIME, '<=');
+    ->condition('expiry', \Drupal::time()->getRequestTime(), '<=');
   if ($ids = $query->execute()) {
-    $licenses = \Drupal\licensing\Entity\License::loadMultiple($ids);
+    $licenses = License::loadMultiple($ids);

     // @todo Queue this!
     /** @var \Drupal\Core\Entity\EntityInterface $license */
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector


 [OK] 1 file has been changed by Rector                                         

