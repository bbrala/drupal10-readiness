diff --git a/src/EventSubscriber/WeerlyRedirect.php b/src/EventSubscriber/WeerlyRedirect.php
index e2b8cad..9da0dfc 100644
--- a/src/EventSubscriber/WeerlyRedirect.php
+++ b/src/EventSubscriber/WeerlyRedirect.php
@@ -2,13 +2,13 @@
 
 namespace Drupal\weerly\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\TrustedRedirectResponse;
 use Drupal\Core\Session\AccountProxy;
 use Drupal\Core\Url;
 use Drupal\Core\Path\CurrentPathStack;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -68,10 +68,10 @@ class WeerlyRedirect implements EventSubscriberInterface {
   /**
    * Redirect requests for `weerly URL` nodes to their destination url.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   Event object of current event.
    */
-  public function redirect(GetResponseEvent $event) {
+  public function redirect(RequestEvent $event) {
     $path = $this->currentPath->getPath();
     $current_path = str_replace("/", "", $path);
 
diff --git a/src/EventSubscriber/WeerlyRedirectOn403Subscriber.php b/src/EventSubscriber/WeerlyRedirectOn403Subscriber.php
index 934aea9..82a1758 100644
--- a/src/EventSubscriber/WeerlyRedirectOn403Subscriber.php
+++ b/src/EventSubscriber/WeerlyRedirectOn403Subscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\weerly\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\EventSubscriber\HttpExceptionSubscriberBase;
 use Drupal\Core\Routing\TrustedRedirectResponse;
@@ -10,7 +11,6 @@ use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\CurrentRouteMatch;
 use Drupal\Core\Url;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 
 /**
  * Redirect whenever a 403 meets the criteria for unpublished nodes.
@@ -74,10 +74,10 @@ class WeerlyRedirectOn403Subscriber extends HttpExceptionSubscriberBase {
   /**
    * Redirects on 403 Access Denied kernel exceptions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The Event to process.
    */
-  public function on403(GetResponseForExceptionEvent $event) {
+  public function on403(ExceptionEvent $event) {
 
     $request = clone $event->getRequest();
     if ($request->attributes->get('node') != NULL) {
