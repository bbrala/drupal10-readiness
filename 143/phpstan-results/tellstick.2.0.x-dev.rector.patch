diff --git a/src/Controller/TellstickSensorUpdateController.php b/src/Controller/TellstickSensorUpdateController.php
index 4bd84d9..d6e2141 100644
--- a/src/Controller/TellstickSensorUpdateController.php
+++ b/src/Controller/TellstickSensorUpdateController.php
@@ -85,7 +85,7 @@ class TellstickSensorUpdateController extends ControllerBase {
       }
     }
     // Save the last run time for this Controller.
-    \Drupal::state()->set('tellstick.sensor_update', REQUEST_TIME);
+    \Drupal::state()->set('tellstick.sensor_update', \Drupal::time()->getRequestTime());
     // Set message with number of sensors imported.
     $message = $this->t('A total of @updateCount sensor(s) updated out of @sensorCount checked.', [
       '@sensorCount' => $sensorCount,
diff --git a/src/TellstickService.php b/src/TellstickService.php
index 748e01c..1b06e5a 100644
--- a/src/TellstickService.php
+++ b/src/TellstickService.php
@@ -91,7 +91,7 @@ class TellstickService implements TellstickServiceInterface {
     // If this is the first time force an update.
     // If it is more than 1 h also force an update.
     $update = empty($sensor) ? TRUE :
-      $sensor->get('changed')->value < REQUEST_TIME - 1 * 60 * 60;
+      $sensor->get('changed')->value < \Drupal::time()->getRequestTime() - 1 * 60 * 60;
     if ($update) {
       // Try first loading from the Telldus Live instead.
       $live_sensor = $this->tellstickLiveService
@@ -125,7 +125,7 @@ class TellstickService implements TellstickServiceInterface {
             'ignored' => (string) $ignored,
             // Use the last update from Tellstick Live!.
             'changed' => (string) $changed,
-            'created' => REQUEST_TIME,
+            'created' => \Drupal::time()->getRequestTime(),
             'weight' => 0,
             'data' => serialize($data),
           ]);
diff --git a/tellstick.module b/tellstick.module
index b26900d..ab580c3 100644
--- a/tellstick.module
+++ b/tellstick.module
@@ -72,7 +72,7 @@ function tellstick_cron() {
     $tellstick_data = TellstickData::create([
       'sensor' => $attrib['id'],
       'data' => serialize($values),
-      'created' => REQUEST_TIME,
+      'created' => \Drupal::time()->getRequestTime(),
     ]);
     $tellstick_data->save();
   }
@@ -82,7 +82,7 @@ function tellstick_cron() {
     ->get('database_lifetime');
 
   // Remove only once a day.
-  $midnight = strtotime(date('Y-m-d', REQUEST_TIME));
+  $midnight = strtotime(date('Y-m-d', \Drupal::time()->getRequestTime()));
   if ($lifetime <> 0) {
     $database = \Drupal::database();
     $tellstickService = \Drupal::service('tellstick');
@@ -99,7 +99,7 @@ function tellstick_cron() {
     if ($records_removed <> 0) {
       $message = t('Cleaned out @number sensor records older than @lifetime', [
         '@number' => $records_removed,
-        '@lifetime' => date('Y-m-d', REQUEST_TIME - $lifetime * 24 * 60 * 60),
+        '@lifetime' => date('Y-m-d', \Drupal::time()->getRequestTime() - $lifetime * 24 * 60 * 60),
       ]);
       \Drupal::logger('tellstick')
         ->notice($message);
@@ -113,6 +113,6 @@ function tellstick_cron() {
 function tellstick_views_api() {
   return [
     'api' => 3,
-    'path' => drupal_get_path('module', 'tellstick') . '/views',
+    'path' => \Drupal::service('extension.list.module')->getPath('tellstick') . '/views',
   ];
 }
