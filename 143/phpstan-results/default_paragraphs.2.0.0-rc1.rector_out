modules/contrib/default_paragraphs/default_paragraphs.module
modules/contrib/default_paragraphs/src/Events/DefaultParagraphsAddEvent.php
modules/contrib/default_paragraphs/src/Events/DefaultParagraphsEvents.php
modules/contrib/default_paragraphs/src/Plugin/Field/FieldWidget/DefaultParagraphsWidget.php

2 files with changes
====================

1) modules/contrib/default_paragraphs/src/Plugin/Field/FieldWidget/DefaultParagraphsWidget.php:329

    ---------- begin diff ----------
@@ @@
         $paragraphs_entity = Paragraph::create(['type' => $default_type_name]);

         // Allow other modules to set default value for each paragraph entity.
-        $this->eventDispatcher->dispatch(DefaultParagraphsEvents::ADDED, new DefaultParagraphsAddEvent($paragraphs_entity, $target_bundle));
+        $this->eventDispatcher->dispatch(new DefaultParagraphsAddEvent($paragraphs_entity, $target_bundle), DefaultParagraphsEvents::ADDED);

         $field_state['selected_bundle'] = $default_type_name;
         $display = EntityFormDisplay::collectRenderDisplay($paragraphs_entity, $this->getSetting('form_display_mode'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/default_paragraphs/src/Events/DefaultParagraphsAddEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\default_paragraphs\Events;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\paragraphs\ParagraphInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Represents Paragraph Entity adding as default.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

