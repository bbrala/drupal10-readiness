modules/contrib/layout_builder_at/layout_builder_at.install
modules/contrib/layout_builder_at/layout_builder_at.module
modules/contrib/layout_builder_at/src/EventSubscriber/SetInlineBlockDependencyWithContextTranslation.php
modules/contrib/layout_builder_at/src/LayoutBuilderAtServiceProvider.php
modules/contrib/layout_builder_at/src/Plugin/Field/FieldWidget/LayoutBuilderCopyWidget.php
modules/contrib/layout_builder_at/src/Plugin/SectionStorage/TranslatableOverridesSectionStorage.php
modules/contrib/layout_builder_at/tests/src/Functional/LayoutBuilderAtBase.php
modules/contrib/layout_builder_at/tests/src/Functional/LayoutBuilderAtInstallTest.php
modules/contrib/layout_builder_at/tests/src/Functional/LayoutBuilderAtReplicateTest.php
modules/contrib/layout_builder_at/tests/src/Functional/LayoutBuilderAtTranslationTest.php

4 files with changes
====================

1) modules/contrib/layout_builder_at/tests/src/Functional/LayoutBuilderAtTranslationTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setUpViewDisplay();
     $this->setUpFormDisplay();
@@ @@
       'settings[entity_test_mul][entity_test_mul][fields][layout_builder__layout]' => TRUE,
     ];
     $assert_session->pageTextNotContains('Layout Builder does not support translating layouts.');
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');

     // Create default entity.
     $this->createDefaultTranslationEntity();
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/layout_builder_at/tests/src/Functional/LayoutBuilderAtReplicateTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setUpViewDisplay();
     $this->setUpFormDisplay();
@@ @@
       'settings[entity_test_mul][entity_test_mul][fields][layout_builder__layout]' => TRUE,
     ];
     $assert_session->pageTextNotContains('Layout Builder does not support translating layouts.');
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');

     // Create default entity.
     $user = $this->loggedInUser;
@@ @@
     $this->drupalLogin($this->fullAdmin);
     $url = Url::fromRoute("entity.$this->entityTypeId.add_form", ['type' => 'entity_test_mul'])->toString();
     $this->drupalGet($url);
-    $this->assertNoText('Copy blocks into translation');
+    $this->assertSession()->pageTextNotContains('Copy blocks into translation');
     $this->drupalLogin($user);
     $this->createDefaultTranslationEntity();
    ----------- end diff -----------

Applied rules:
 * AssertNoTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/layout_builder_at/tests/src/Functional/LayoutBuilderAtInstallTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setUpViewDisplay();
     $this->setUpEntities();
@@ @@
       'settings[entity_test_mul][entity_test_mul][fields][layout_builder__layout]' => TRUE,
     ];
     $assert_session->pageTextNotContains('Layout Builder does not support translating layouts.');
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');
   }

 }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/layout_builder_at/tests/src/Functional/LayoutBuilderAtBase.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->fullAdmin = $this->drupalCreateUser([], NULL, TRUE);
   }
@@ @@
     $this->drupalLogin($this->administrator);

     $field_ui_prefix = 'entity_test_mul/structure/entity_test_mul';
+    $this->drupalGet("$field_ui_prefix/display/default");
     // Allow overrides for the layout.
-    $this->drupalPostForm("$field_ui_prefix/display/default", ['layout[enabled]' => TRUE], 'Save');
-    $this->drupalPostForm("$field_ui_prefix/display/default", ['layout[allow_custom]' => TRUE], 'Save');
+    $this->submitForm(['layout[enabled]' => TRUE], 'Save');
+    $this->drupalGet("$field_ui_prefix/display/default");
+    $this->submitForm(['layout[allow_custom]' => TRUE], 'Save');

     // @todo The Layout Builder UI relies on local tasks; fix in
     //   https://www.drupal.org/project/drupal/issues/2917777.
@@ @@
         'settings[label_display]' => FALSE,
         'settings[block_form][body][0][value]' => $custom_block_content_body
       ];
-      $this->drupalPostForm(NULL, $edit, $button->getValue());
+      $this->submitForm($edit, $button->getValue());
     }

     $assert_session->buttonExists('Save layout');
@@ @@
       $edit = [
         'settings[block_form][body][0][value]' => $custom_block_content_body
       ];
-      $this->drupalPostForm(NULL, $edit, $button->getValue());
+      $this->submitForm($edit, $button->getValue());
     }

     $page->pressButton('Save layout');
@@ @@
     $this->drupalGet($add_translation_url);

     if ($source_language) {
-      $this->drupalPostForm(NULL, ['source_langcode[source]' => $source_language], 'Change');
+      $this->submitForm(['source_langcode[source]' => $source_language], 'Change');
     }

     $edit = ["{$this->fieldName}[0][value]" => 'The translated field value'];
     if ($copy) {
-      $this->assertText('Copy blocks into translation');
+      $this->assertSession()->pageTextContains('Copy blocks into translation');
       $edit['layout_builder__layout[value]'] = TRUE;
     }
     elseif (isset($copy)) {
-      $this->assertNoText('Copy blocks into translation');
+      $this->assertSession()->pageTextNotContains('Copy blocks into translation');
     }

-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->drupalLogin($user);
   }

@@ @@
     ], ['language' => \Drupal::languageManager()->getLanguage($langcode)]);

     $edit = [];
-    $this->drupalPostForm($update_url, $edit, 'Save');
+    $this->drupalGet($update_url);
+    $this->submitForm($edit, 'Save');
     $this->drupalLogin($user);
   }
    ----------- end diff -----------

Applied rules:
 * AssertNoTextRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

