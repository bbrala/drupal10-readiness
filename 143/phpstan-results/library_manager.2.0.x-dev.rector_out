modules/contrib/library_manager/library_manager.drush.inc
modules/contrib/library_manager/src/Form/LibraryDefinitionCssDeleteForm.php
modules/contrib/library_manager/tests/src/Functional/LibraryDefinitionTest.php
modules/contrib/library_manager/library_manager.module
modules/contrib/library_manager/src/Form/LibraryDefinitionCssForm.php
modules/contrib/library_manager/src/Commands/LibraryManagerCommands.php
modules/contrib/library_manager/src/Form/LibraryDefinitionDeleteForm.php
modules/contrib/library_manager/src/Form/LibraryDefinitionDuplicateForm.php
modules/contrib/library_manager/src/Form/LibraryDefinitionForm.php
modules/contrib/library_manager/src/Controller/LibraryCollectionController.php
modules/contrib/library_manager/src/Controller/LibraryDefinitionListBuilder.php
modules/contrib/library_manager/src/Controller/LibraryDetailsController.php
modules/contrib/library_manager/src/Form/LibraryDefinitionJsDeleteForm.php
modules/contrib/library_manager/src/Form/LibraryDefinitionJsForm.php
modules/contrib/library_manager/src/Entity/LibraryDefinition.php
modules/contrib/library_manager/src/Form/SettingsForm.php
modules/contrib/library_manager/src/Form/AssetsCheckForm.php
modules/contrib/library_manager/src/LibraryDefinitionInterface.php
modules/contrib/library_manager/src/LibraryDiscovery.php
modules/contrib/library_manager/src/LibraryDiscoveryInterface.php
modules/contrib/library_manager/tests/src/Functional/AccessTest.php
modules/contrib/library_manager/src/Form/LibraryDefinitionBuildForm.php
modules/contrib/library_manager/tests/src/Functional/AssetsCheckFormTest.php
modules/contrib/library_manager/tests/src/Functional/LibraryInformationTest.php
modules/contrib/library_manager/tests/src/Functional/CodeMirrorAssetsTest.php
modules/contrib/library_manager/tests/src/Functional/LibraryAutoLoadTest.php
modules/contrib/library_manager/tests/src/Functional/LibraryDefinitionAssetsTest.php
modules/contrib/library_manager/tests/src/Functional/LibraryDefinitionBuildFormTest.php
modules/contrib/library_manager/tests/src/Functional/LibraryOverrideTest.php
modules/contrib/library_manager/tests/src/Functional/SettingsFormTest.php
modules/contrib/library_manager/tests/src/Functional/TestBase.php
modules/contrib/library_manager/tests/src/FunctionalJavascript/LibraryFilterTest.php
modules/contrib/library_manager/tests/src/Kernel/LibraryDiscoveryTest.php
modules/contrib/library_manager/tests/src/Unit/LocalTasksTest.php

12 files with changes
=====================

1) modules/contrib/library_manager/src/Form/AssetsCheckForm.php:107

    ---------- begin diff ----------
@@ @@
       foreach (['css', 'js'] as $asset_type) {
         foreach ($library_info[$asset_type] as $file) {
           if ($file['type'] == 'file') {
-            $operations[] = [$processCallback, [file_create_url($file['data'])]];
+            $operations[] = [$processCallback, [\Drupal::service('file_url_generator')->generateAbsoluteString($file['data'])]];
           }
           elseif ($file['type'] == 'external') {
             $operations[] = [$processCallback, [$file['data']]];
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/library_manager/src/Commands/LibraryManagerCommands.php:151

    ---------- begin diff ----------
@@ @@
         foreach ($library_info[$asset_type] as $file) {

           if ($file['type'] == 'file') {
-            $url = file_create_url($file['data']);
+            $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file['data']);
           }
           elseif ($file['type'] == 'external') {
             $url = $file['data'];
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/library_manager/library_manager.drush.inc:101

    ---------- begin diff ----------
@@ @@
       foreach ($library_info[$asset_type] as $file) {

         if ($file['type'] == 'file') {
-          $url = file_create_url($file['data']);
+          $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file['data']);
         }
         elseif ($file['type'] == 'external') {
           $url = $file['data'];
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


4) modules/contrib/library_manager/tests/src/Functional/SettingsFormTest.php:18

    ---------- begin diff ----------
@@ @@
     $edit = [
       'libraries_path' => 'sites/default/files/foo',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertStatusMessage('The configuration options have been saved.');
     $this->assertXpath($form_prefix . '//input[@name = "libraries_path" and @value = "sites/default/files/foo"]');
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/library_manager/tests/src/Functional/LibraryOverrideTest.php:22

    ---------- begin diff ----------
@@ @@
     // Override core/jquery library.
     $this->drupalGet('admin/structure/library');
     $this->clickLinkInRow('core/jquery', 'Create definition');
-    $this->drupalPostForm(NULL, ['id' => 'jquery_overridden'], 'Create');
+    $this->submitForm(['id' => 'jquery_overridden'], 'Create');

     // Make sure that the jQuery library is replaced.
     $this->drupalGet('<front>');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/library_manager/tests/src/Functional/LibraryInformationTest.php:45

    ---------- begin diff ----------
@@ @@
    */
   public function testDetailsPage() {

-    $module_path = drupal_get_path('module', 'library_manager_test');
+    $module_path = \Drupal::service('extension.list.module')->getPath('library_manager_test');

     $this->drupalGet('admin/structure/library');
     $this->clickLinkInRow('library_manager_test/library_manager_test', 'library_manager_test/library_manager_test');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/library_manager/tests/src/Functional/LibraryDefinitionTest.php:99

    ---------- begin diff ----------
@@ @@
       'visibility[user_role][roles][anonymous]' => TRUE,
     ];

-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertStatusMessage('Library definition has been created.');

     // Check default form values for newly created definition.
@@ @@
     $this->clickLink('Cancel');
     $this->assertPageTitle('Library definitions');
     $this->drupalGet($delete_url);
-    $this->drupalPostForm(NULL, [], 'Delete');
+    $this->submitForm([], 'Delete');
     $this->assertStatusMessage($this->t('Deleted library definition %definition_name.', ['%definition_name' => 'foo']));
     $this->assertPageTitle('Library definitions');
   }
@@ @@
       'external' => FALSE,
       'code' => 'console.log(123);',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertErrorMessage('The file name is not correct.');

     $edit['file_name'] = 'foo.php';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertErrorMessage('The file name is not correct.');

     $edit['file_name'] = 'bar/../foo.js';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertErrorMessage('The file name is not correct.');

     $edit['file_name'] = 'foo.js';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     $this->assertStatusMessage('The JS file has been saved.');
     $this->assertPageTitle('Edit library definition');
@@ @@
     $this->assertPageTitle('Edit library definition');

     $this->clickLinkInRow('foo.js', 'Delete');
-    $this->drupalPostForm(NULL, [], 'Delete');
+    $this->submitForm([], 'Delete');

     $this->assertStatusMessage('The JS file has been deleted.');
     $this->assertPageTitle('Edit library definition');
@@ @@
       'url' => 'http://example.com/foo.css',
     ];

-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertErrorMessage('The file name is not correct.');

     $edit['file_name'] = 'foo.php';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertErrorMessage('The file name is not correct.');

     $edit['file_name'] = 'bar/../foo.css';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertErrorMessage('The file name is not correct.');

     $edit['file_name'] = 'foo.css';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     $this->assertStatusMessage('The CSS file has been saved.');
     $this->assertPageTitle('Edit library definition');
@@ @@

     $this->clickLinkInRow('foo.css', 'Delete');

-    $this->drupalPostForm(NULL, [], 'Delete');
+    $this->submitForm([], 'Delete');

     $this->assertStatusMessage('The CSS file has been deleted.');
     $this->assertPageTitle('Edit library definition');
@@ @@
     $this->clickLinkInRow('alpha', 'Duplicate');
     $this->assertPageTitle('Duplicate of alpha');
     $this->assertXpath('//input[@name = "id" and @value = "duplicate_of_alpha"]');
-    $this->drupalPostForm(NULL, ['id' => 'alpha'], 'Duplicate');
+    $this->submitForm(['id' => 'alpha'], 'Duplicate');
     $this->assertErrorMessage('The machine-readable name is already in use. It must be unique.');
-    $this->drupalPostForm(NULL, ['id' => 'beta'], 'Duplicate');
+    $this->submitForm(['id' => 'beta'], 'Duplicate');
     $this->assertPageTitle('Edit library definition');
     $this->assertXpath('//input[@name = "id" and @value = "beta"]');
     $this->assertXpath('//input[@name = "version" and @value = "1.2.3"]');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/library_manager/tests/src/Functional/LibraryDefinitionBuildFormTest.php:39

    ---------- begin diff ----------
@@ @@
       $this->assertPageTitle('Create library definition');
       $cloned_library_id = $extension . '_' . $library . '_cloned';

-      $this->drupalPostForm(NULL, ['id' => $cloned_library_id], 'Create');
+      $this->submitForm(['id' => $cloned_library_id], 'Create');
       $this->assertStatusMessage('Library definition has been created.');
       $this->assertPageTitle('Edit library definition');

       // Register a new library to compare its properties with original.
-      $this->drupalPostForm(NULL, ['mode' => 'new'], 'Save');
+      $this->submitForm(['mode' => 'new'], 'Save');

       drupal_static_reset('library_manager_build_libraries');
       $library_info = $library_discovery->exportLibraryByName($extension, $library);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/library_manager/tests/src/Functional/LibraryDefinitionAssetsTest.php:19

    ---------- begin diff ----------
@@ @@
       'id' => 'beta',
       'version' => '1.0.0',
     ];
-    $this->drupalPostForm('admin/structure/library/definition/add', $edit, 'Save');
+    $this->drupalGet('admin/structure/library/definition/add');
+    $this->submitForm($edit, 'Save');

     // Create new file.
     $edit = [
@@ @@
       'file_name' => 'example-1.js',
       'code' => 'alert(123)',
     ];
-    $this->drupalPostForm('admin/structure/library/definition/beta/js/add', $edit, 'Save');
+    $this->drupalGet('admin/structure/library/definition/beta/js/add');
+    $this->submitForm($edit, 'Save');
     $this->assertTrue(file_exists($libraries_path . 'beta/example-1.js'));

     // Rename the file.
@@ @@
     $edit = [
       'file_name' => 'example-2.js',
     ];
-    $this->drupalPostForm('admin/structure/library/definition/beta/js/1/edit', $edit, 'Save');
+    $this->drupalGet('admin/structure/library/definition/beta/js/1/edit');
+    $this->submitForm($edit, 'Save');
     $this->assertFalse(file_exists($libraries_path . 'beta/example-1.js'));
     $this->assertTrue(file_exists($libraries_path . 'beta/example-2.js'));
+    $this->drupalGet('admin/structure/library/definition/beta/js/1/delete');

     // Delete the file.
-    $this->drupalPostForm('admin/structure/library/definition/beta/js/1/delete', [], 'Delete');
+    $this->submitForm([], 'Delete');
     $this->assertFalse(file_exists($libraries_path . 'beta/example-2.js'));

     // Create new file.
@@ @@
       'file_name' => 'example-3.css',
       'code' => 'body {color: blue;}',
     ];
-    $this->drupalPostForm('admin/structure/library/definition/beta/css/add', $edit, 'Save');
+    $this->drupalGet('admin/structure/library/definition/beta/css/add');
+    $this->submitForm($edit, 'Save');
     $this->assertTrue(file_exists($libraries_path . 'beta/example-3.css'));
+    $this->drupalGet('admin/structure/library/definition/beta/delete');

     // Delete the definition.
-    $this->drupalPostForm('admin/structure/library/definition/beta/delete', [], 'Delete');
+    $this->submitForm([], 'Delete');
     $this->assertFalse(file_exists($libraries_path . 'beta'));
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/library_manager/tests/src/Functional/LibraryAutoLoadTest.php:28

    ---------- begin diff ----------
@@ @@
       'load' => TRUE,
       'visibility[request_path][pages]' => '/node/1',
     ];
+    $this->drupalGet('admin/structure/library/definition/alpha/edit');

-    $this->drupalPostForm('admin/structure/library/definition/alpha/edit', $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     $this->drupalGet('node/1');
     $assert_session->responseContains('/sites/default/files/libraries/custom/alpha/example.css');
@@ @@

     // Negate the condition and check the pages again.
     $edit['visibility[request_path][negate]'] = TRUE;
-    $this->drupalPostForm('admin/structure/library/definition/alpha/edit', $edit, 'Save');
+    $this->drupalGet('admin/structure/library/definition/alpha/edit');
+    $this->submitForm($edit, 'Save');
     $this->drupalGet('admin/structure/library/definition/alpha/edit');

     drupal_flush_all_caches();
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/library_manager/tests/src/Functional/AssetsCheckFormTest.php:17

    ---------- begin diff ----------
@@ @@
     $this->clickLink('Library assets');
     $this->assertPageTitle('Library assets');
     $this->assertXpath('//div[normalize-space() = "Last check: never."]');
-    $this->drupalPostForm(NULL, [], 'Check assets');
+    $this->submitForm([], 'Check assets');
     $assert_session = $this->assertSession();
     $assert_session->responseMatches('#Could not load .*library_manager/tests/library_manager_test/js/example.js#');
     $assert_session->responseMatches('#Could not load .*library_manager/tests/library_manager_test/css/example.css#');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/library_manager/src/LibraryDiscovery.php:130

    ---------- begin diff ----------
@@ @@
   public function getExtensionPath($extension) {
     $path = $extension == 'core' ?
       'core' :
-      drupal_get_path($this->moduleHandler->moduleExists($extension) ? 'module' : 'theme', $extension);
+      \Drupal::service('extension.path.resolver')->getPath($this->moduleHandler->moduleExists($extension) ? 'module' : 'theme', $extension);

     return $path . '/';
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 12 files have been changed by Rector                                      

