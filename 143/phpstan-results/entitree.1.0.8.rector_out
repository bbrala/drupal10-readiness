modules/contrib/entitree/entitree.install
modules/contrib/entitree/modules/entitree_location_rules/src/Annotation/EntitreeLocationRule.php
modules/contrib/entitree/modules/entitree_location_rules/tests/src/Functional/LoadTest.php
modules/contrib/entitree/modules/entitree_permissions/src/EntitreePermissionsManagerInterface.php
modules/contrib/entitree/src/AliasUniquifierInterface.php
modules/contrib/entitree/src/Plugin/EntitreeEntityTypeInterface.php
modules/contrib/entitree/modules/entitree_permissions/src/EventSubscriber/EntitreePermissionsEventsSubscriber.php
modules/contrib/entitree/modules/entitree_location_rules/src/EntitreeLocationRulesService.php
modules/contrib/entitree/src/Annotation/EntitreeEntityType.php
modules/contrib/entitree/src/Controller/EntitreeDisplayController.php
modules/contrib/entitree/src/Plugin/EntitreeEntityTypeManager.php
modules/contrib/entitree/src/Routing/DynamicEntitreeRoutes.php
modules/contrib/entitree/modules/entitree_permissions/src/Form/EntitreePermissionsLocationAccessRulesForm.php
modules/contrib/entitree/src/TwigExtension/EntitreeTwigExtension.php
modules/contrib/entitree/modules/entitree_node/entitree_node.install
modules/contrib/entitree/modules/entitree_node/entitree_node.module
modules/contrib/entitree/tests/src/Functional/LoadTest.php
modules/contrib/entitree/modules/entitree_location_rules/src/EntitreeLocationRulesServiceInterface.php
modules/contrib/entitree/modules/entitree_location_rules/src/EntitreeLocationRulesetAccessControlHandler.php
modules/contrib/entitree/entitree.module
modules/contrib/entitree/modules/entitree_node/src/Plugin/EntitreeEntityType/EntitreeNode.php
modules/contrib/entitree/src/EntitreeLocationInterface.php
modules/contrib/entitree/modules/entitree_location_rules/src/EntitreeLocationRulesetHtmlRouteProvider.php
modules/contrib/entitree/modules/entitree_permissions/src/Form/EntitreePermissionsRuleDeleteForm.php
modules/contrib/entitree/src/EntitreeManager.php
modules/contrib/entitree/modules/entitree_location_rules/entitree_location_rules.module
modules/contrib/entitree/modules/entitree_location_rules/entitree_location_ruleset.page.inc
modules/contrib/entitree/modules/entitree_permissions/src/Form/RoleAccessForm.php
modules/contrib/entitree/modules/entitree_location_rules/src/EntitreeLocationRulesetListBuilder.php
modules/contrib/entitree/modules/entitree_permissions/src/Form/UserAccessForm.php
modules/contrib/entitree/modules/entitree_node/src/Plugin/Menu/LocalAction/EntitreeNodeLocationAddAction.php
modules/contrib/entitree/modules/entitree_location_rules/src/EntitreeLocationRulesetTranslationHandler.php
modules/contrib/entitree/modules/entitree_location_rules/src/Entity/EntitreeLocationRuleset.php
modules/contrib/entitree/modules/entitree_node/src/Plugin/Menu/LocalAction/EntitreeNodeOrganizeLocationsAction.php
modules/contrib/entitree/modules/entitree_permissions/src/Plugin/EntitreePermissionsType/EntitreePermissionsTypeRole.php
modules/contrib/entitree/modules/entitree_node/tests/src/Functional/LoadTest.php
modules/contrib/entitree/modules/entitree_permissions/entitree_permissions.install
modules/contrib/entitree/modules/entitree_permissions/src/Plugin/EntitreePermissionsType/EntitreePermissionsTypeUser.php
modules/contrib/entitree/modules/entitree_permissions/entitree_permissions.module
modules/contrib/entitree/modules/entitree_permissions/src/Access/EntitreePermissionsAccessCheck.php
modules/contrib/entitree/modules/entitree_permissions/src/Plugin/EntitreePermissionsTypeBase.php
modules/contrib/entitree/modules/entitree_permissions/src/Plugin/EntitreePermissionsTypeInterface.php
modules/contrib/entitree/modules/entitree_permissions/src/Plugin/EntitreePermissionsTypeManager.php
modules/contrib/entitree/modules/entitree_taxonomy_term/entitree_taxonomy_term.module
modules/contrib/entitree/modules/entitree_taxonomy_term/src/Plugin/EntitreeEntityType/EntitreeTaxonomyTerm.php
modules/contrib/entitree/modules/entitree_location_rules/src/Entity/EntitreeLocationRulesetInterface.php
modules/contrib/entitree/modules/entitree_location_rules/src/Entity/EntitreeLocationRulesetViewsData.php
modules/contrib/entitree/modules/entitree_location_rules/src/Form/EntitreeLocationRulesetDeleteForm.php
modules/contrib/entitree/src/EntitreeManagerInterface.php
modules/contrib/entitree/modules/entitree_location_rules/src/Form/EntitreeLocationRulesetForm.php
modules/contrib/entitree/src/EntitreeStore.php
modules/contrib/entitree/modules/entitree_taxonomy_term/src/Plugin/Menu/LocalAction/EntitreeTaxonomyTermLocationAddAction.php
modules/contrib/entitree/src/AliasUniquifier.php
modules/contrib/entitree/modules/entitree_permissions/src/Annotation/EntitreePermissionsType.php
modules/contrib/entitree/modules/entitree_permissions/src/Controller/LocationPermissionsController.php
modules/contrib/entitree/src/EntitreeStoreInterface.php
modules/contrib/entitree/src/Entity/EmptyLocation.php
modules/contrib/entitree/modules/entitree_permissions/src/EntitreePermissionsFormBase.php
modules/contrib/entitree/src/Entity/EntitreeLocation.php
modules/contrib/entitree/modules/entitree_permissions/src/EntitreePermissionsManager.php
modules/contrib/entitree/modules/entitree_location_rules/src/Form/EntitreeLocationRulesetSettingsForm.php
modules/contrib/entitree/modules/entitree_location_rules/src/Plugin/EntitreeLocationRule/EntityBundleLocationRule.php
modules/contrib/entitree/modules/entitree_location_rules/src/Plugin/EntitreeLocationRule/EntityTypeLocationRule.php
modules/contrib/entitree/modules/entitree_location_rules/src/Plugin/EntitreeLocationRuleBase.php
modules/contrib/entitree/modules/entitree_location_rules/src/Plugin/EntitreeLocationRuleInterface.php
modules/contrib/entitree/modules/entitree_location_rules/src/Plugin/EntitreeLocationRuleManager.php
modules/contrib/entitree/src/Event/EntitreeOperationsEvent.php
modules/contrib/entitree/src/Form/DeleteLocationForm.php
modules/contrib/entitree/src/Form/EntitreeConfigForm.php
modules/contrib/entitree/src/Form/EntitreeLocationForm.php
modules/contrib/entitree/src/Form/LocationOrganizeForm.php
modules/contrib/entitree/src/NestedSetFactory.php
modules/contrib/entitree/src/NestedSetFactoryInterface.php
modules/contrib/entitree/src/Plugin/Derivative/DynamicTasks.php
modules/contrib/entitree/src/Plugin/EntitreeEntityType/EntitreeEmptyLocation.php
modules/contrib/entitree/src/Plugin/EntitreeEntityTypeBase.php

12 files with changes
=====================

1) modules/contrib/entitree/entitree.module:70

    ---------- begin diff ----------
@@ @@
         $operations['open_url'] = [
           'title' => t('Open URL'),
           'label' => t('Open URL'),
-          'url' => \Drupal\Core\Url::fromUri("base:" . $entity->getPath()),
+          'url' => Url::fromUri("base:" . $entity->getPath()),
           'weight' => 10,
         ];
       }
@@ @@
       $operations['edit_location'] = [
         'title' => t('Edit Location'),
         'label' => t('Edit'),
-        'url' => \Drupal\Core\Url::fromRoute('entitree.location.edit',
+        'url' => Url::fromRoute('entitree.location.edit',
           ['location' => $entity->getId()]),
         'weight' => 50
       ];
@@ @@
       $operations['create_empty_child'] = [
         'title' => t('Add Empty Child Location'),
         'label' => t('Add Child'),
-        'url' => \Drupal\Core\Url::fromRoute('entitree.location.add_empty',[
+        'url' => Url::fromRoute('entitree.location.add_empty',[
           'parent' => $entity->getId(),
         ]),
         'weight' => 60,
@@ @@
       $operations['delete_location'] = [
         'title' => t('Delete Location'),
         'label' => 'Delete',
-        'url' => \Drupal\Core\Url::fromRoute('entitree.location.delete',
+        'url' => Url::fromRoute('entitree.location.delete',
           ['location' => $entity->getId()]
         ),
         'weight' => 99
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/entitree/entitree.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\entitree\Entity\EmptyLocation;
+use Drupal\entitree\Entity\EntitreeLocation;
 use \Drupal\entitree\NestedSetFactory;

 function entitree_install(){
@@ @@
   $nestedSetFactory->createRootNode();

   // Create empty location for root node
-  $emptyLocation = \Drupal\entitree\Entity\EmptyLocation::create(
+  $emptyLocation = EmptyLocation::create(
     ['label' => t("Entitree Root")]);
   $emptyLocation->save();

   // Create entitree location location for root node
-  $rootLocation = \Drupal\entitree\Entity\EntitreeLocation::create([
+  $rootLocation = EntitreeLocation::create([
     "label" => t("Entitree Root"),
     "path_segment" => "",
     "ref_entity_type" => "empty_location",
@@ @@
         ->execute();

   // Create site root node
-  $emptyLocation = \Drupal\entitree\Entity\EmptyLocation::create(
+  $emptyLocation = EmptyLocation::create(
     ['label' => t("Entitree Site Root")]);
   $emptyLocation->save();

   // Create entitree location location for site root node
-  $siteRootLocation = \Drupal\entitree\Entity\EntitreeLocation::create([
+  $siteRootLocation = EntitreeLocation::create([
     "label" => t("Entitree Site Root"),
     "path_segment" => "/",
     "ref_entity_type" => "empty_location",
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


3) modules/contrib/entitree/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entitree/modules/entitree_taxonomy_term/src/Plugin/EntitreeEntityType/EntitreeTaxonomyTerm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entitree_taxonomy_term\Plugin\EntitreeEntityType;

+use Drupal\Core\Entity\EntityInterface;
+use Drupal\taxonomy\Entity\Term;
+use Drupal\Core\Url;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Entity\Entity;
 use Drupal\entitree\Plugin\EntitreeEntityTypeBase;
@@ @@

   public function loadEntityByRouteParams(
     array $params
-  ): \Drupal\Core\Entity\EntityInterface {
-    return \Drupal\taxonomy\Entity\Term::load($params['taxonomy_term']);
+  ): EntityInterface {
+    return Term::load($params['taxonomy_term']);
   }

-  public function getLocationsPathById(int $tid): \Drupal\Core\Url{
-    return \Drupal\Core\Url::fromRoute('entitree.locations.taxonomy_term', [
+  public function getLocationsPathById(int $tid): Url{
+    return Url::fromRoute('entitree.locations.taxonomy_term', [
       "taxonomy_term" => $tid
     ]);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entitree/modules/entitree_taxonomy_term/entitree_taxonomy_term.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Url;

 /**
@@ @@
  */
 function entitree_taxonomy_term_entity_operation_alter(
   array &$operations,
-  \Drupal\Core\Entity\EntityInterface $entity
+  EntityInterface $entity
 ) {
   /**
    * @todo implement proper access check
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


6) modules/contrib/entitree/modules/entitree_permissions/src/Plugin/EntitreePermissionsType/EntitreePermissionsTypeUser.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entitree_permissions\Plugin\EntitreePermissionsType;

+use Drupal\user\Entity\User;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\entitree_permissions\Plugin\EntitreePermissionsTypeBase;
 use Drupal\entitree\EntitreeLocationInterface;
@@ @@
   }

   public function formatAccessValue($userId): string{
-    $user = \Drupal\user\Entity\User::load($userId);
+    $user = User::load($userId);
     return $user->getUsername();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/entitree/modules/entitree_permissions/src/EventSubscriber/EntitreePermissionsEventsSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entitree_permissions\EventSubscriber;

+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Event subscriber to update the operations array for Entitree Permissions.
@@ @@
   /**
    * This method is called when the entitree_operations is dispatched.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The dispatched event.
    */
   public function entitreeOperations(Event $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


8) modules/contrib/entitree/modules/entitree_permissions/entitree_permissions.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Url;
 function entitree_permissions_theme($existing, $type, $theme, $path) {
   return [
     'entitree_permissions__location' => [
@@ @@
 }

 function entitree_permissions_entity_operation(
-  \Drupal\Core\Entity\EntityInterface $entity
+  EntityInterface $entity
 ) {
   $operations = [];

@@ @@
     $operations['manage_permissions'] = [
       'title' => t('Manage Permissions'),
       'label' => 'Permissions',
-      'url' => \Drupal\Core\Url::fromRoute(
+      'url' => Url::fromRoute(
         'entitree_permissions.location_permissions_controller_render',
         ['location' => $entity->getId()]),
       'weight' => 51
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


9) modules/contrib/entitree/modules/entitree_node/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/entitree/modules/entitree_node/entitree_node.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Contains entitree_node.module.
@@ @@
 /**
  * Implements hook_entity_operation_alter().
  */
-function entitree_node_entity_operation_alter(array &$operations, \Drupal\Core\Entity\EntityInterface $entity) {
+function entitree_node_entity_operation_alter(array &$operations, EntityInterface $entity) {
   /**
    * @todo implement proper access check
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


11) modules/contrib/entitree/modules/entitree_location_rules/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/entitree/src/Event/EntitreeOperationsEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entitree\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Event definition for the entitree operations event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 12 files have been changed by Rector                                      

