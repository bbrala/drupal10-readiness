diff --git a/markdown.api.php b/markdown.api.php
index da2877b..0ce11af 100644
--- a/markdown.api.php
+++ b/markdown.api.php
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\markdown\Plugin\Markdown\PhpMarkdown\PhpMarkdownExtra;
+use Drupal\Component\Utility\Crypt;
 /**
  * @file
  * Hooks and alters provided by the Markdown module.
@@ -86,7 +88,7 @@ function hook_markdown_compatible_filters_alter(array &$compatibleFilters) {
 function hook_markdown_html_alter(&$html, array $context) {
   // Ignore non PHP Markdown Extra parsers.
   $parser = $context['parser'];
-  if (!($parser instanceof \Drupal\markdown\Plugin\Markdown\PhpMarkdown\PhpMarkdownExtra)) {
+  if (!($parser instanceof PhpMarkdownExtra)) {
     return;
   }
 
@@ -96,7 +98,7 @@ function hook_markdown_html_alter(&$html, array $context) {
   if ($phpMarkdown->omit_footnotes && $phpMarkdown->footnotes_assembled) {
     // Create a hash based on the contents of the HTML output.
     // This can be used as the lookup identifier to load the footnotes later.
-    $hash = \Drupal\Component\Utility\Crypt::hashBase64($html);
+    $hash = Crypt::hashBase64($html);
     \Drupal::keyValue('my_module.markdown.footnotes')->set($hash, $phpMarkdown->footnotes_assembled);
   }
 }
diff --git a/src/Annotation/InstallableLibrary.php b/src/Annotation/InstallableLibrary.php
index ea27965..c3066c7 100644
--- a/src/Annotation/InstallableLibrary.php
+++ b/src/Annotation/InstallableLibrary.php
@@ -496,7 +496,7 @@ class InstallableLibrary extends AnnotationObject {
       // Cache response in the database. The TTL value defaults to one day,
       // but allow it to be overrideable via settings.
       $ttl = Settings::get('installable_library_request_ttl', 86400);
-      $cache->set($cid, $cacheableResponse, REQUEST_TIME + $ttl);
+      $cache->set($cid, $cacheableResponse, \Drupal::time()->getRequestTime() + $ttl);
     }
     catch (GuzzleException $exception) {
       \Drupal::logger('markdown')->warning('%type: @message in %function (line %line of %file).<pre><code>@backtrace_string</code></pre>', Error::decodeException($exception));
diff --git a/src/Commands/MarkdownCommands.php b/src/Commands/MarkdownCommands.php
index 48aafec..d34ccbd 100644
--- a/src/Commands/MarkdownCommands.php
+++ b/src/Commands/MarkdownCommands.php
@@ -132,7 +132,7 @@ class MarkdownCommands extends DrushCommands implements ContainerInjectionInterf
    *   The temporary directory path.
    */
   protected function createTempDir() {
-    $tempDir = 'temporary://markdown_' . REQUEST_TIME . Crypt::randomBytesBase64(10);
+    $tempDir = 'temporary://markdown_' . \Drupal::time()->getRequestTime() . Crypt::randomBytesBase64(10);
     if (!is_dir($tempDir) && $this->fileSystem->prepareDirectory($tempDir, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS)) {
       $tempDir = $this->fileSystem->realpath($tempDir);
       static::$tempDirs[] = $tempDir;
diff --git a/src/Plugin/Markdown/CommonMark/Extension/HeadingPermalinkExtension.php b/src/Plugin/Markdown/CommonMark/Extension/HeadingPermalinkExtension.php
index 92e8191..2fe4c3a 100644
--- a/src/Plugin/Markdown/CommonMark/Extension/HeadingPermalinkExtension.php
+++ b/src/Plugin/Markdown/CommonMark/Extension/HeadingPermalinkExtension.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\markdown\Plugin\Markdown\CommonMark\Extension;
 
+use League\CommonMark\Extension\HeadingPermalink\HeadingPermalinkRenderer;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\PluginFormInterface;
 use Drupal\Core\Theme\ActiveTheme;
@@ -51,7 +52,7 @@ class HeadingPermalinkExtension extends BaseExtension implements AllowedHtmlInte
     $innerContents = '';
     if (defined('\\League\\CommonMark\\Extension\\HeadingPermalink\\HeadingPermalinkRenderer::DEFAULT_INNER_CONTENTS')) {
       /* @noinspection PhpFullyQualifiedNameUsageInspection */
-      $innerContents = \League\CommonMark\Extension\HeadingPermalink\HeadingPermalinkRenderer::DEFAULT_INNER_CONTENTS; // phpcs:ignore
+      $innerContents = HeadingPermalinkRenderer::DEFAULT_INNER_CONTENTS; // phpcs:ignore
     }
 
     return [
diff --git a/src/Plugin/Markdown/Pecl/Cmark.php b/src/Plugin/Markdown/Pecl/Cmark.php
index 7bcbc77..b142d60 100644
--- a/src/Plugin/Markdown/Pecl/Cmark.php
+++ b/src/Plugin/Markdown/Pecl/Cmark.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\markdown\Plugin\Markdown\Pecl;
 
+use function CommonMark\Parse;
+use function CommonMark\Render\HTML;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\markdown\Plugin\Markdown\AllowedHtmlInterface;
 use Drupal\markdown\Plugin\Markdown\BaseParser;
@@ -35,8 +37,8 @@ class Cmark extends BaseParser implements AllowedHtmlInterface {
     try {
       if (is_string($markdown)) {
         // NOTE: these are functions, not classes.
-        $node = \CommonMark\Parse($markdown);
-        return \CommonMark\Render\HTML($node);
+        $node = Parse($markdown);
+        return HTML($node);
       }
     }
     catch (\Exception $e) {
diff --git a/src/Render/ParsedMarkdown.php b/src/Render/ParsedMarkdown.php
index f465cc2..f9e6bc0 100644
--- a/src/Render/ParsedMarkdown.php
+++ b/src/Render/ParsedMarkdown.php
@@ -108,7 +108,7 @@ class ParsedMarkdown implements ParsedMarkdownInterface {
 
     // Handle relative time.
     if (is_string($expire)) {
-      $expire = strtotime($expire, $from_time ?: REQUEST_TIME);
+      $expire = strtotime($expire, $from_time ?: \Drupal::time()->getRequestTime());
     }
 
     return $expire;
diff --git a/src/Traits/HttpClientTrait.php b/src/Traits/HttpClientTrait.php
index fa3cd2b..8ac35a3 100644
--- a/src/Traits/HttpClientTrait.php
+++ b/src/Traits/HttpClientTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\markdown\Traits;
 
+use function GuzzleHttp\default_user_agent;
 /**
  * Trait to assist with creating an HTTP client using module info as user-agent.
  *
@@ -51,7 +52,7 @@ trait HttpClientTrait {
       $httpClientFactory = \Drupal::service('http_client_factory');
       static::$httpClient = $httpClientFactory->fromOptions([
         'headers' => [
-          'User-Agent' => $extension . ' Drupal/' . \Drupal::VERSION . ' (+https://www.drupal.org/) ' . \GuzzleHttp\default_user_agent(),
+          'User-Agent' => $extension . ' Drupal/' . \Drupal::VERSION . ' (+https://www.drupal.org/) ' . default_user_agent(),
         ],
       ]);
     }
diff --git a/tests/src/Kernel/MarkdownKernelTestBase.php b/tests/src/Kernel/MarkdownKernelTestBase.php
index 60028b0..d92b3b4 100644
--- a/tests/src/Kernel/MarkdownKernelTestBase.php
+++ b/tests/src/Kernel/MarkdownKernelTestBase.php
@@ -21,7 +21,7 @@ abstract class MarkdownKernelTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['filter', 'markdown']);
diff --git a/tests/src/Kernel/Plugin/Markdown/MissingParserTest.php b/tests/src/Kernel/Plugin/Markdown/MissingParserTest.php
index acaf042..c09521b 100644
--- a/tests/src/Kernel/Plugin/Markdown/MissingParserTest.php
+++ b/tests/src/Kernel/Plugin/Markdown/MissingParserTest.php
@@ -28,7 +28,7 @@ class MissingParserTest extends MarkdownKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->parser = $this->container->get('plugin.manager.markdown.parser')
