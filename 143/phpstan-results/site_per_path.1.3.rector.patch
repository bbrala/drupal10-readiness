diff --git a/src/EventSubscriber/SitePerPathSubscriber.php b/src/EventSubscriber/SitePerPathSubscriber.php
index ba9c270..3b0a2c1 100644
--- a/src/EventSubscriber/SitePerPathSubscriber.php
+++ b/src/EventSubscriber/SitePerPathSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\site_per_path\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\Core\Condition\ConditionManager;
@@ -9,8 +11,6 @@ use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Routing\TrustedRedirectResponse;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -58,12 +58,12 @@ class SitePerPathSubscriber implements EventSubscriberInterface {
   /**
    * Checks whether request should be redirected to another site.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The response event.
    *
    * @throws \Drupal\Component\Plugin\Exception\PluginException
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $sites = $this->configFactory->get('site_per_path.settings')->get('sites');
 
     // Do nothing if no config is set.
@@ -91,10 +91,10 @@ class SitePerPathSubscriber implements EventSubscriberInterface {
   /**
    * Responds to kernel respones.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     if ($response instanceof CacheableResponseInterface) {
       $response->addCacheableDependency((new CacheableMetadata())->addCacheContexts(['url.site']));
