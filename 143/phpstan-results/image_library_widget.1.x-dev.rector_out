modules/contrib/image_library_widget/image_library_widget.module
modules/contrib/image_library_widget/src/Element/ImageLibraryWidgetElement.php
modules/contrib/image_library_widget/src/Plugin/Field/FieldWidget/ImageLibraryWidget.php
modules/contrib/image_library_widget/tests/src/Functional/ImageLibraryWidgetSettingsTest.php
modules/contrib/image_library_widget/tests/src/FunctionalJavascript/ImageLibraryWidgetTest.php
modules/contrib/image_library_widget/tests/src/Kernel/ImageLibraryWidgetDependencyTest.php
modules/contrib/image_library_widget/tests/src/Traits/ImageLibraryWidgetTestTrait.php

2 files with changes
====================

1) modules/contrib/image_library_widget/tests/src/FunctionalJavascript/ImageLibraryWidgetTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     foreach (['logo' => 'Logo', 'banner' => 'Banner'] as $id => $label) {
@@ @@
     $page = $session->getPage();

     // Check that when there are not media entries the library is not displayed.
-    $this->assertElementNotPresent('.image-library-widget');
+    $this->assertSession()->elementNotExists('.image-library-widget');

     // Add some pre-uploaded logos.
     $this->addMedia('logo', 30);
@@ @@
     $session->reload();

     // Check that the label doesn't exist as it hasn't been configured.
-    $this->assertElementNotPresent('.image-library-widget-label');
+    $this->assertSession()->elementNotExists('.image-library-widget-label');

     /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $form_display */
     $form_display = EntityFormDisplay::load('entity_test.entity_test.default');
@@ @@
     $session->reload();

     // Check that the image library is displayed.
-    $this->assertElementPresent('.image-library-widget-label');
+    $this->assertSession()->elementExists('.image-library-widget-label');
     $assert->pageTextContains('Or choose a predefined Logo');
-    $this->assertElementPresent('.image-library-widget');
+    $this->assertSession()->elementExists('.image-library-widget');

     $image_fid = $this->selectImageFromLibrary();

     // Check that after a image has been selected the browser won't show.
-    $this->assertElementNotPresent('.image-library-widget-label');
+    $this->assertSession()->elementNotExists('.image-library-widget-label');
     $assert->pageTextNotContains('Or choose a predefined Logo');
-    $this->assertElementNotPresent('.image-library-widget');
+    $this->assertSession()->elementNotExists('.image-library-widget');

     // Save the new entity.
     $page->pressButton('Save');
    ----------- end diff -----------

Applied rules:
 * AssertElementNotPresentRector
 * AssertElementPresentRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/image_library_widget/tests/src/Functional/ImageLibraryWidgetSettingsTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->createImageField();
@@ @@
     $assert_session->pageTextNotContains('Image library type:');

     // Use the 'Image Library Widget' widget.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'fields[image][type]' => 'image_library_widget',
     ], 'Save');

@@ @@

     // Add two media types to be used as image libraries for the widget.
     $this->clickLink('add some media types');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'label' => 'Logo',
       'id' => 'logo',
       'source' => 'image',
@@ @@
     ], 'Save');
     $page->selectFieldOption('Field with source information', 'media.image_library_widget_image');
     $page->pressButton('Save');
+    $this->drupalGet('admin/structure/media/add');

-    $this->drupalPostForm('admin/structure/media/add', [
+    $this->submitForm([
       'label' => 'Banner',
       'id' => 'banner',
       'source' => 'image',
@@ @@
     ], 'Save');
     $page->selectFieldOption('Field with source information', 'media.image_library_widget_image');
     $page->pressButton('Save');
+    $this->drupalGet('admin/structure/media/add');

     // Add a media type that doesn't qualify as an image library for the widget.
-    $this->drupalPostForm('admin/structure/media/add', [
+    $this->submitForm([
       'label' => 'Not a widget image library',
       'id' => 'not_a_widget_image_library',
       'source' => 'file',
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

