diff --git a/date_recur.api.php b/date_recur.api.php
index 2b4d7e9..ccff5dc 100644
--- a/date_recur.api.php
+++ b/date_recur.api.php
@@ -9,6 +9,10 @@
 
 declare(strict_types = 1);
 
+use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+use Drupal\date_recur\Event\DateRecurValueEvent;
+use Drupal\date_recur\Event\DateRecurEvents;
+
 /**
  * @file
  * Contains hooks and event examples for date_recur module.
@@ -29,7 +33,7 @@ declare(strict_types = 1);
  * ```
  * </code>
  */
-class MyEventSubscriber implements \Symfony\Component\EventDispatcher\EventSubscriberInterface {
+class MyEventSubscriber implements EventSubscriberInterface {
 
   /**
    * Dispatched after an entity containing a date recur field is saved.
@@ -44,7 +48,7 @@ class MyEventSubscriber implements \Symfony\Component\EventDispatcher\EventSubsc
    * @see \Drupal\date_recur\DateRecurOccurrences::onSave
    *   Live example.
    */
-  public function onSave(\Drupal\date_recur\Event\DateRecurValueEvent $event): void {}
+  public function onSave(DateRecurValueEvent $event): void {}
 
   /**
    * Dispatched when an entity containing date recur fields is almost deleted.
@@ -59,7 +63,7 @@ class MyEventSubscriber implements \Symfony\Component\EventDispatcher\EventSubsc
    * @see \Drupal\date_recur\DateRecurOccurrences::onEntityDelete
    *   Live example.
    */
-  public function onEntityDelete(\Drupal\date_recur\Event\DateRecurValueEvent $event): void {}
+  public function onEntityDelete(DateRecurValueEvent $event): void {}
 
   /**
    * Dispatched when an entity revision is deleted.
@@ -74,16 +78,16 @@ class MyEventSubscriber implements \Symfony\Component\EventDispatcher\EventSubsc
    * @see \Drupal\date_recur\DateRecurOccurrences::onEntityRevisionDelete
    *   Live example.
    */
-  public function onEntityRevisionDelete(\Drupal\date_recur\Event\DateRecurValueEvent $event): void {}
+  public function onEntityRevisionDelete(DateRecurValueEvent $event): void {}
 
   /**
    * {@inheritdoc}
    */
   public static function getSubscribedEvents(): array {
     return [
-      \Drupal\date_recur\Event\DateRecurEvents::FIELD_VALUE_SAVE => ['onSave'],
-      \Drupal\date_recur\Event\DateRecurEvents::FIELD_ENTITY_DELETE => ['onEntityDelete'],
-      \Drupal\date_recur\Event\DateRecurEvents::FIELD_REVISION_DELETE => ['onEntityRevisionDelete'],
+      DateRecurEvents::FIELD_VALUE_SAVE => ['onSave'],
+      DateRecurEvents::FIELD_ENTITY_DELETE => ['onEntityDelete'],
+      DateRecurEvents::FIELD_REVISION_DELETE => ['onEntityRevisionDelete'],
     ];
   }
 
diff --git a/src/Event/DateRecurValueEvent.php b/src/Event/DateRecurValueEvent.php
index 0e8e937..acb7a15 100644
--- a/src/Event/DateRecurValueEvent.php
+++ b/src/Event/DateRecurValueEvent.php
@@ -4,8 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\date_recur\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\date_recur\Plugin\Field\FieldType\DateRecurFieldItemList;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Event dispatched when an entity containing a date recur field is modified.
diff --git a/src/Plugin/Field/FieldType/DateRecurFieldItemList.php b/src/Plugin/Field/FieldType/DateRecurFieldItemList.php
index a7c560c..de8e678 100644
--- a/src/Plugin/Field/FieldType/DateRecurFieldItemList.php
+++ b/src/Plugin/Field/FieldType/DateRecurFieldItemList.php
@@ -34,7 +34,7 @@ class DateRecurFieldItemList extends DateRangeFieldItemList {
   public function postSave($update): bool {
     parent::postSave($update);
     $event = new DateRecurValueEvent($this, !$update);
-    $this->getDispatcher()->dispatch(DateRecurEvents::FIELD_VALUE_SAVE, $event);
+    $this->getDispatcher()->dispatch($event, DateRecurEvents::FIELD_VALUE_SAVE);
     return FALSE;
   }
 
@@ -44,7 +44,7 @@ class DateRecurFieldItemList extends DateRangeFieldItemList {
   public function delete(): void {
     parent::delete();
     $event = new DateRecurValueEvent($this, FALSE);
-    $this->getDispatcher()->dispatch(DateRecurEvents::FIELD_ENTITY_DELETE, $event);
+    $this->getDispatcher()->dispatch($event, DateRecurEvents::FIELD_ENTITY_DELETE);
   }
 
   /**
@@ -53,7 +53,7 @@ class DateRecurFieldItemList extends DateRangeFieldItemList {
   public function deleteRevision(): void {
     parent::deleteRevision();
     $event = new DateRecurValueEvent($this, FALSE);
-    $this->getDispatcher()->dispatch(DateRecurEvents::FIELD_REVISION_DELETE, $event);
+    $this->getDispatcher()->dispatch($event, DateRecurEvents::FIELD_REVISION_DELETE);
   }
 
   /**
diff --git a/tests/src/Kernel/DateRecurFieldItemTest.php b/tests/src/Kernel/DateRecurFieldItemTest.php
index e1844eb..e25d232 100644
--- a/tests/src/Kernel/DateRecurFieldItemTest.php
+++ b/tests/src/Kernel/DateRecurFieldItemTest.php
@@ -254,7 +254,7 @@ class DateRecurFieldItemTest extends KernelTestBase {
   public function testGenerateSampleValue() {
     $entity = DrEntityTest::create();
     $entity->dr->generateSampleItems();
-    $this->assertRegExp('/^FREQ=DAILY;COUNT=\d{1,2}$/', $entity->dr->rrule);
+    $this->assertMatchesRegularExpression('/^FREQ=DAILY;COUNT=\d{1,2}$/', $entity->dr->rrule);
     $this->assertFalse($entity->dr->infinite);
     $this->assertTrue(in_array($entity->dr->timezone, timezone_identifiers_list(), TRUE));
 
diff --git a/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php b/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php
index 8f806b3..38ca429 100644
--- a/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php
+++ b/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php
@@ -26,7 +26,7 @@ class DateRecurViewsFieldAttachedTest extends DateRecurViewsFieldTest {
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
 
     // This is the name of the attached field.
diff --git a/tests/src/Kernel/DateRecurViewsFieldTest.php b/tests/src/Kernel/DateRecurViewsFieldTest.php
index 0387981..870eb54 100644
--- a/tests/src/Kernel/DateRecurViewsFieldTest.php
+++ b/tests/src/Kernel/DateRecurViewsFieldTest.php
@@ -64,7 +64,7 @@ class DateRecurViewsFieldTest extends ViewsKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
     $this->installEntitySchema('dr_entity_test');
     ViewTestData::createTestViews(get_class($this), ['date_recur_views_test']);
diff --git a/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php b/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php
index a7c5a2f..0a8d7e5 100644
--- a/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php
+++ b/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php
@@ -25,7 +25,7 @@ class DateRecurViewsOccurrenceFilterAttachedTest extends DateRecurViewsOccurrenc
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
 
     // This is the name of the attached field.
diff --git a/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php b/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php
index f702db1..fad0f92 100644
--- a/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php
+++ b/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php
@@ -55,7 +55,7 @@ class DateRecurViewsOccurrenceFilterTest extends ViewsKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
     $this->installEntitySchema('dr_entity_test');
     ViewTestData::createTestViews(get_class($this), ['date_recur_views_test']);
