modules/contrib/advanced_title_block/advanced_title_block.module
modules/contrib/advanced_title_block/src/Form/AdvacedTitleBlockForm.php
modules/contrib/advanced_title_block/src/Plugin/Block/AdvancedTitleBlock.php

1 file with changes
===================

1) modules/contrib/advanced_title_block/src/Plugin/Block/AdvancedTitleBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advanced_title_block\Plugin\Block;

+use Drupal\node\NodeInterface;
+use Symfony\Cmf\Component\Routing\RouteObjectInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\file\Entity\File;
@@ @@
   public function build() {
     $node = \Drupal::routeMatch()->getParameter('node');
     $uri = '';
-    if (isset($this->configuration['entity_image']) && $node instanceof \Drupal\node\NodeInterface) {
+    if (isset($this->configuration['entity_image']) && $node instanceof NodeInterface) {
       $field_name = $this->configuration['entity_image'];
       if ($node->hasField($field_name) && $node->$field_name->entity != null) {
         $type = $field_type = $node->get($field_name)->getFieldDefinition()->getType();
@@ @@
       }
     }
     $text = '';
-    if (isset($this->configuration['entity_text']) && $node instanceof \Drupal\node\NodeInterface) {
+    if (isset($this->configuration['entity_text']) && $node instanceof NodeInterface) {
       $field_name = $this->configuration['entity_text'];
       if ($node->hasField($field_name)) {
         $text = $node->$field_name->value();
@@ @@
     }

     $request = \Drupal::request();
-    if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
+    if ($route = $request->attributes->get(RouteObjectInterface::ROUTE_OBJECT)) {
       $title = \Drupal::service('title_resolver')->getTitle($request, $route);
     }
     $build = [];
@@ @@
       '#title' => $title,
       '#text' => $text,
       '#color' => $this->configuration['color'],
-      '#image' => file_url_transform_relative(file_create_url($uri)),
+      '#image' => \Drupal::service('file_url_generator')->generateString($uri),
       '#image_title' => $image_title,
     ];
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

