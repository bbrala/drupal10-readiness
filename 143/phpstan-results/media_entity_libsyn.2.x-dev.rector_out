modules/contrib/media_entity_libsyn/media_entity_libsyn.install
modules/contrib/media_entity_libsyn/media_entity_libsyn.module
modules/contrib/media_entity_libsyn/media_entity_libsyn.theme.inc
modules/contrib/media_entity_libsyn/src/Plugin/Field/FieldFormatter/LibsynEmbedFormatter.php
modules/contrib/media_entity_libsyn/src/Plugin/media/Source/Libsyn.php
modules/contrib/media_entity_libsyn/tests/src/Functional/LibsynEmbedFormatterTest.php

2 files with changes
====================

1) modules/contrib/media_entity_libsyn/tests/src/Functional/LibsynEmbedFormatterTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a test libsyn media bundle.
@@ @@

     // Assert that the media bundle has the expected values before proceeding.
     $this->drupalGet('admin/structure/media/manage/' . $this->bundle->id());
-    $this->assertFieldByName('label', $this->bundle->label());
-    $this->assertFieldByName('source', 'libsyn');
+    $this->assertSession()->fieldValueEquals('label', $this->bundle->label());
+    $this->assertSession()->fieldValueEquals('source', 'libsyn');

     // Media added a URL source field for us, so let's find it.
     $source_field = $this->bundle
@@ @@
       'settings[link_type]' => 16,
       'settings[title]' => 0,
     ];
-    $this->drupalPostForm('admin/structure/media/manage/' . $this->bundle->id() . '/fields/' . $source_field->getConfig($this->bundle->id())->id(), $edit, t('Save settings'));
+    $this->drupalGet('admin/structure/media/manage/' . $this->bundle->id() . '/fields/' . $source_field->getConfig($this->bundle->id())->id());
+    $this->submitForm($edit, t('Save settings'));
     // Check if the field has been saved successfully.
     $assert->pageTextMatches('/Saved .+ configuration/');
     $assert->pageTextContains($source_field->getName());
@@ @@
       // Ensure the field is not hidden from view.
       'fields[' . $source_field->getName() . '][region]' => 'content',
     ];
-    $this->drupalPostForm('admin/structure/media/manage/' . $this->bundle->id() . '/display', $edit, t('Save'));
-    $this->assertText('Your settings have been saved.');
+    $this->drupalGet('admin/structure/media/manage/' . $this->bundle->id() . '/display');
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains('Your settings have been saved.');

     // Add a media entity.
     $findable_name = 'podcast_entity_' . $this->randomMachineName();
@@ @@
       'name[0][value]' => $findable_name,
       $source_field->getName() . '[0][uri]' => $podcast_url,
     ];
-    $this->drupalPostForm('media/add/' . $this->bundle->id(), $edit, 'Save');
+    $this->drupalGet('media/add/' . $this->bundle->id());
+    $this->submitForm($edit, 'Save');
     // We should be redirected to the media listing page.
     $assert->pageTextContains($findable_name);

@@ @@
     $edit = [
       'fields[field_' . $field_name . '][type]' => 'entity_reference_entity_view',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/' . $node_type->id() . '/display', $edit, 'Save');
+    $this->drupalGet('admin/structure/types/manage/' . $node_type->id() . '/display');
+    $this->submitForm($edit, 'Save');

     // Add a node that references our media entity.
     $edit = [
@@ @@
       'title[0][value]' => 'Test Node',
       'field_' . $field_name . '[0][target_id]' => $media_entity->label() . ' (' . $media_entity->id() . ')',
     ];
-    $this->drupalPostForm('node/add/' . $node_type->id(), $edit, 'Save');
+    $this->drupalGet('node/add/' . $node_type->id());
+    $this->submitForm($edit, 'Save');

     // Assert that the formatter exists on this page.
     $this->assertFieldByXPath('//iframe');
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/media_entity_libsyn/media_entity_libsyn.install:13

    ---------- begin diff ----------
@@ @@
   /** @var \Drupal\Core\File\FileSystemInterface $file_system */
   $file_system = \Drupal::service('file_system');

-  $source = drupal_get_path('module', 'media_entity_libsyn') . '/images/icons';
+  $source = \Drupal::service('extension.list.module')->getPath('media_entity_libsyn') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
   $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

