diff --git a/filebrowser.module b/filebrowser.module
index 2cca292..f488316 100644
--- a/filebrowser.module
+++ b/filebrowser.module
@@ -1,4 +1,7 @@
 <?php
+use Drupal\Core\Cache\Cache;
+use Drupal\filebrowser\File\DisplayFileList;
+use Drupal\filebrowser\Statistics;
 /* This file is part of "filebrowser".
  *    Copyright 2016, YagoSoft
  *    Author : Joop Sint Jago
@@ -117,7 +120,7 @@ function filebrowser_entity_extra_field_info() {
  * @param FormStateInterface $form_state
  * @param $form_id
  */
-function filebrowser_form_node_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function filebrowser_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   /** @var NodeInterface $node */
   $node = $form_state->getFormObject()->getEntity();
   if ($node->bundle() == 'dir_listing') {
@@ -192,7 +195,7 @@ function filebrowser_node_update(NodeInterface $node) {
     //print_r($node->filebrowser);
     $manager->updateFilebrowser($node->filebrowser, 'edit');
     // invalidate the cache for this node
-    \Drupal\Core\Cache\Cache::invalidateTags(['filebrowser:node:' . $node->id()]);
+    Cache::invalidateTags(['filebrowser:node:' . $node->id()]);
   }
 }
 
@@ -240,7 +243,7 @@ function filebrowser_node_view(array &$build, NodeInterface $node, EntityViewDis
     // get the argument $fid from query
     $fid = \Drupal::request()->query->get('fid');
 
-    $list = new \Drupal\filebrowser\File\DisplayFileList($node, $fid);
+    $list = new DisplayFileList($node, $fid);
     $display_list = $list->get();
 
     // Show file listing content part
@@ -251,7 +254,7 @@ function filebrowser_node_view(array &$build, NodeInterface $node, EntityViewDis
 
     // Show the statistics of this listing
     if ($display->getComponent('filebrowser_statistics')) {
-      $statistics = new \Drupal\filebrowser\Statistics($display_list);
+      $statistics = new Statistics($display_list);
       $build['filebrowser_statistics'] = $statistics->get();
     }
 
diff --git a/src/Controller/DefaultController.php b/src/Controller/DefaultController.php
index a378b4e..83076de 100644
--- a/src/Controller/DefaultController.php
+++ b/src/Controller/DefaultController.php
@@ -88,7 +88,7 @@ class DefaultController extends ControllerBase {
     // todo:
     // RedirectResponse needs a relative path so we will convert the full url into a relative path
     // This is done here, but should be moved to a better place in Common
-    $file_path = file_url_transform_relative($file_data->url);
+    $file_path = \Drupal::service('file_url_generator')->transformRelative($file_data->url);
     if ($filebrowser->downloadManager == 'public' && StreamWrapperManager::getScheme($file_data->uri) == 'public') {
       $response = new RedirectResponse($file_path);
       return $response;
diff --git a/src/Form/GridActionForm.php b/src/Form/GridActionForm.php
index c33a44c..a6a8d0b 100644
--- a/src/Form/GridActionForm.php
+++ b/src/Form/GridActionForm.php
@@ -167,7 +167,7 @@ class GridActionForm extends FormBase {
         }
         else {
           $form['container'][$row_name][$col_name][$content['content']['file']->fid] = [
-            '#markup' => render($content['content']['grid']),
+            '#markup' => \Drupal::service('renderer')->render($content['content']['grid']),
           ];
         }
       }
diff --git a/src/Form/RenameForm.php b/src/Form/RenameForm.php
index 98acbb6..9d14413 100644
--- a/src/Form/RenameForm.php
+++ b/src/Form/RenameForm.php
@@ -269,7 +269,7 @@ class RenameForm extends ConfirmFormBase {
     $file->uri = $uri;
     $file->filename = \Drupal::service('file_system')->basename($uri);
     $file->name = pathinfo($file->filename, PATHINFO_FILENAME);
-    $file->url = file_create_url($file->uri);
+    $file->url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->uri);
   }
 
 }
diff --git a/src/Presentation.php b/src/Presentation.php
index 020e394..645c864 100644
--- a/src/Presentation.php
+++ b/src/Presentation.php
@@ -332,12 +332,12 @@ class Presentation extends ControllerBase{
         // ##### ICON COLUMN #####
         $visible_columns[Common::ICON] = true;
         $icon = $this->common->iconGenerate($file->fileData->type, $file->fileData->mimetype, 24, 24);
-        $unsorted_rows[$file_name][Common::ICON] = render($icon);
+        $unsorted_rows[$file_name][Common::ICON] = \Drupal::service('renderer')->render($icon);
       }
 
       // ##### NAME COLUMN - we will always set the name column
       // fixme: delete not needed
-      $unsorted_rows[$file_name][Common::NAME] = render($file->link);
+      $unsorted_rows[$file_name][Common::NAME] = \Drupal::service('renderer')->render($file->link);
       $visible_columns[Common::NAME] = true;
 
       // ##### SET OTHER METADATA
@@ -364,7 +364,7 @@ class Presentation extends ControllerBase{
             $render = [];
             $render['#theme'] = $theme;
             $render['#data'] = $content;
-            $unsorted_rows[$file_name][$name] = render($render);
+            $unsorted_rows[$file_name][$name] = \Drupal::service('renderer')->render($render);
           }
         }
       }
diff --git a/src/ServerFileList.php b/src/ServerFileList.php
index 6a086c7..131c3bc 100644
--- a/src/ServerFileList.php
+++ b/src/ServerFileList.php
@@ -73,7 +73,7 @@ class ServerFileList {
 
     foreach ($files as $key => $file) {
 
-      $file->url = file_create_url($file->uri);
+      $file->url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->uri);
       // Complete the required file data
 
       $file->mimetype = $guessor->guess($file->filename);
