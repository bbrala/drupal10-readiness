diff --git a/src/EventSubscriber/AlienAliasSubscriber.php b/src/EventSubscriber/AlienAliasSubscriber.php
index ee51990..81d9862 100644
--- a/src/EventSubscriber/AlienAliasSubscriber.php
+++ b/src/EventSubscriber/AlienAliasSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\alien_alias\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\alien_alias\AlienAliasAccesses;
 use Drupal\alien_alias\Exogen\ExogenInterface;
 use Drupal\Core\Database\Database;
@@ -11,7 +12,6 @@ use Drupal\Core\Site\Settings;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\Routing\Route;
 
@@ -63,9 +63,9 @@ class AlienAliasSubscriber implements EventSubscriberInterface {
    * Check whether the requested path is an alien alias, if it is
    * we redirect straight to it. This avoids unnecessary boot-up.
    *
-   * @param GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     // Check to see whether we want to prevent processing alien aliases here.
     if (!Settings::get('alien_alias_fast_response', TRUE)) {
       // Yes, we don't want to do it at all, just leave.
diff --git a/tests/src/Functional/AlienAliasTest.php b/tests/src/Functional/AlienAliasTest.php
index 668a673..630cb19 100644
--- a/tests/src/Functional/AlienAliasTest.php
+++ b/tests/src/Functional/AlienAliasTest.php
@@ -58,7 +58,7 @@ class AlienAliasTest extends BrowserTestBase {
   /**
    * The things to be setup, like a default user and a test AlienAlias.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->user = $this->drupalCreateUser(['access content']);
diff --git a/tests/src/Kernel/AlienAliasTest.php b/tests/src/Kernel/AlienAliasTest.php
index ac9ad1b..d499605 100644
--- a/tests/src/Kernel/AlienAliasTest.php
+++ b/tests/src/Kernel/AlienAliasTest.php
@@ -68,7 +68,7 @@ class AlienAliasTest extends EntityKernelTestBase {
   /**
    * The things to be setup, like a default user and a test AlienAlias.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('alien_alias');
diff --git a/tests/src/Kernel/AlienStatsTest.php b/tests/src/Kernel/AlienStatsTest.php
index d904841..38add23 100644
--- a/tests/src/Kernel/AlienStatsTest.php
+++ b/tests/src/Kernel/AlienStatsTest.php
@@ -87,7 +87,7 @@ class AlienStatsTest extends EntityKernelTestBase {
   /**
    * Before a test method is run, setUp() is invoked.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->user = $this->createUser();
@@ -217,7 +217,7 @@ class AlienStatsTest extends EntityKernelTestBase {
   /**
    * Once test method has finished running, succeeded or failed, invoke this.
    */
-  public function tearDown() {
+  public function tearDown(): void {
     parent::tearDown();
   }
 
diff --git a/tests/src/Unit/ExogenTest.php b/tests/src/Unit/ExogenTest.php
index dca8a19..09169b7 100644
--- a/tests/src/Unit/ExogenTest.php
+++ b/tests/src/Unit/ExogenTest.php
@@ -50,7 +50,7 @@ class ExogenTest extends UnitTestCase {
    *
    * Create new Exogen object to be tested.
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->exogen = new Exogen(static::$id, static::$url, TRUE, static::$statName, TRUE);
   }
 
@@ -103,7 +103,7 @@ class ExogenTest extends UnitTestCase {
    *
    * Unset the $exogen object.
    */
-  public function tearDown() {
+  public function tearDown(): void {
     unset($this->exogen);
   }
 
