modules/contrib/typed_entity/modules/typed_entity_example/src/Render/Summary.php
modules/contrib/typed_entity/src/WrappedEntities/WrappedEntityInterface.php
modules/contrib/typed_entity/tests/src/Kernel/KernelTestBase.php
modules/contrib/typed_entity/modules/typed_entity_example/src/TypedRepositories/ArticleRepository.php
modules/contrib/typed_entity/src/WrappedEntityVariants/AndVariantCondition.php
modules/contrib/typed_entity/src/WrappedEntityVariants/ContextAwareInterface.php
modules/contrib/typed_entity/src/WrappedEntityVariants/ContextAwareTrait.php
modules/contrib/typed_entity/src/WrappedEntityVariants/EmptyFieldVariantCondition.php
modules/contrib/typed_entity/modules/typed_entity_example/src/WrappedEntities/Article.php
modules/contrib/typed_entity/src/WrappedEntityVariants/FieldValueVariantCondition.php
modules/contrib/typed_entity/src/WrappedEntityVariants/OrVariantCondition.php
modules/contrib/typed_entity/modules/typed_entity_example/src/WrappedEntities/BakingArticle.php
modules/contrib/typed_entity/src/WrappedEntityVariants/VariantConditionBase.php
modules/contrib/typed_entity/src/WrappedEntityVariants/VariantConditionInterface.php
modules/contrib/typed_entity/modules/typed_entity_example/src/WrappedEntities/User.php
modules/contrib/typed_entity/tests/modules/typed_entity_test/src/Render/Article/ConditionalRenderer.php
modules/contrib/typed_entity/tests/modules/typed_entity_test/src/Render/Article/Teaser.php
modules/contrib/typed_entity/modules/typed_entity_example/typed_entity_example.module
modules/contrib/typed_entity/tests/modules/typed_entity_test/src/Render/Page/Base.php
modules/contrib/typed_entity/tests/modules/typed_entity_test/src/TypedRepositories/ArticleRepository.php
modules/contrib/typed_entity/tests/src/Kernel/RepositoryManagerTest.php
modules/contrib/typed_entity/tests/modules/typed_entity_test/src/WrappedEntities/Article.php
modules/contrib/typed_entity/tests/modules/typed_entity_test/src/WrappedEntities/NewsArticle.php
modules/contrib/typed_entity/tests/modules/typed_entity_test/src/WrappedEntities/Page.php
modules/contrib/typed_entity/tests/src/Kernel/EmptyFieldVariantConditionTest.php
modules/contrib/typed_entity/src/EntityWrapperInterface.php
modules/contrib/typed_entity/src/InvalidValueException.php
modules/contrib/typed_entity/src/Render/TypedEntityRenderContext.php
modules/contrib/typed_entity/src/Render/TypedEntityRendererBase.php
modules/contrib/typed_entity/src/Render/TypedEntityRendererInterface.php
modules/contrib/typed_entity/src/RepositoryCollector.php
modules/contrib/typed_entity/src/RepositoryManager.php
modules/contrib/typed_entity/tests/src/Kernel/TypedEntityRendererTest.php
modules/contrib/typed_entity/src/TypedRepositories/TypedEntityRepositoryBase.php
modules/contrib/typed_entity/tests/src/Kernel/FieldValueVariantConditionTest.php
modules/contrib/typed_entity/tests/src/Kernel/TypedEntityRepositoryTest.php
modules/contrib/typed_entity/src/TypedRepositories/TypedEntityRepositoryInterface.php
modules/contrib/typed_entity/src/WrappedEntities/WrappedEntityBase.php
modules/contrib/typed_entity/tests/src/Kernel/WrappedEntityBaseTest.php
modules/contrib/typed_entity/typed_entity.module

5 files with changes
====================

1) modules/contrib/typed_entity/modules/typed_entity_example/src/WrappedEntities/Article.php:33

    ---------- begin diff ----------
@@ @@
    * @param \Drupal\Core\Messenger\MessengerInterface $messenger
    *   The messenger service.
    */
-  public function __construct(EntityInterface $entity, RepositoryManager $repository_manager, EntityViewBuilderInterface $entity_view_builder, MessengerInterface $messenger) {
+  public function __construct(EntityInterface $entity, RepositoryManager $repository_manager, EntityViewBuilderInterface $entity_view_builder, MessengerInterface $messenger, private RepositoryManager $repositoryManager) {
     parent::__construct($entity, $repository_manager, $entity_view_builder);
     $this->messenger = $messenger;
+    parent::__construct($entity);
   }

   /**
@@ @@
   public static function create(ContainerInterface $container, EntityInterface $entity) {
     $entity_view_builder = $container->get('entity_type.manager')
       ->getViewBuilder($entity->getEntityTypeId());
-    $repository_manager = $container->get(RepositoryManager::class);
+    $repository_manager = $this->repositoryManager;
     return new static(
       $entity,
       $repository_manager,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ContainerGetToConstructorInjectionRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/typed_entity/tests/src/Kernel/WrappedEntityBaseTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->createEntityReferenceField('node', 'article', 'field_related_pages', 'Related Pages', 'node');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/typed_entity/tests/src/Kernel/TypedEntityRendererTest.php:51

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $article = NodeType::load('article');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/typed_entity/tests/src/Kernel/RepositoryManagerTest.php:26

    ---------- begin diff ----------
@@ @@
     assert($manager instanceof RepositoryManager);

     $repository = $manager->repository('node', 'article');
-    $this->assert($repository instanceof ArticleRepository);
+    $this->assertTrue($repository instanceof ArticleRepository);

     $repository = $manager->repository('node', 'page');
-    $this->assert($repository instanceof TypedEntityRepositoryBase);
+    $this->assertTrue($repository instanceof TypedEntityRepositoryBase);

     static::assertNull($manager->repository('foo', 'bar'));
   }
@@ @@
     assert($manager instanceof RepositoryManager);

     $repository = $manager->repositoryFromEntity($node);
-    $this->assert($repository instanceof ArticleRepository);
+    $this->assertTrue($repository instanceof ArticleRepository);
   }

   /**
@@ @@
     assert($manager instanceof RepositoryManager);

     $article_wrapper = $manager->wrap($node);
-    $this->assert($article_wrapper instanceof Article);
+    $this->assertTrue($article_wrapper instanceof Article);
   }

   /**
@@ @@

     $article_wrappers = $manager->wrapMultiple($this->createArticles());
     foreach ($article_wrappers as $article_wrapper) {
-      $this->assert($article_wrapper instanceof Article);
+      $this->assertTrue($article_wrapper instanceof Article);
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/typed_entity/tests/src/Kernel/KernelTestBase.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

