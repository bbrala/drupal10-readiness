modules/contrib/warden/src/Commands/WardenCommands.php
modules/contrib/warden/src/Controller/DefaultController.php
modules/contrib/warden/src/Service/WardenManager.php
modules/contrib/warden/tests/src/Unit/Service/WardenManagerTest.php
modules/contrib/warden/warden.drush.inc
modules/contrib/warden/warden.install
modules/contrib/warden/warden.module

2 files with changes
====================

1) modules/contrib/warden/tests/src/Unit/Service/WardenManagerTest.php:22

    ---------- begin diff ----------
@@ @@
   protected $token;

   /**
-   * @var \Drupal\Core\Extension\InfoParser|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Extension\InfoParser|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $infoParser;

   /**
-   * @var \Drupal\Core\Config\ConfigFactory|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Config\ConfigFactory|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $configFactory;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->token = hash('sha256', 42);
@@ @@
   /**
    * @param string $name
    * @param string $type
-   * @return Extension|\PHPUnit_Framework_MockObject_MockObject
+   * @return Extension|\PHPUnit\Framework\MockObject\MockObject
    */
   protected function getMockExtension($name, $type = 'contrib') {
-    /** @var Extension|\PHPUnit_Framework_MockObject_MockObject $module_b */
+    /** @var Extension|\PHPUnit\Framework\MockObject\MockObject $module_b */
     $extension = $this->createMock('Drupal\Core\Extension\Extension', array(), array(), '', FALSE);
     $extension->expects($this->once())
       ->method('getPathname')
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/warden/src/Service/WardenManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\warden\Service;

+use Drupal\Core\File\FileSystemInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Extension\ExtensionDiscovery;
@@ @@
       $libraryDir = \Drupal::root() . '/libraries';
       if (file_exists($libraryDir)) {
         // Scan for package.json files for libraries that have this.
-        $listing = \Drupal\Core\File\FileSystemInterface::scanDirectory($libraryDir, '/^package.json/');
+        $listing = FileSystemInterface::scanDirectory($libraryDir, '/^package.json/');
         $this->setLibraries($listing);
       }
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

