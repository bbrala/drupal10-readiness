diff --git a/domain_content/domain_content.install b/domain_content/domain_content.install
index 23f06719..77d110b4 100644
--- a/domain_content/domain_content.install
+++ b/domain_content/domain_content.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\domain_access\DomainAccessManagerInterface;
 /**
  * @file
  * Install, update and uninstall hooks for this module.
@@ -23,13 +24,13 @@ function domain_content_requirements($phase) {
     // Check for required fields.
     foreach ($list as $bundle => $entity_type) {
       // phpcs:ignore
-      $id = $entity_type . '.' . $bundle . '.' . \Drupal\domain_access\DomainAccessManagerInterface::DOMAIN_ACCESS_FIELD;
+      $id = $entity_type . '.' . $bundle . '.' . DomainAccessManagerInterface::DOMAIN_ACCESS_FIELD;
       if (!$field = \Drupal::entityTypeManager()->getStorage('field_config')->load($id)) {
         $allow = FALSE;
         break;
       }
       // phpcs:ignore
-      $id = $entity_type . '.' . $bundle . '.' . \Drupal\domain_access\DomainAccessManagerInterface::DOMAIN_ACCESS_ALL_FIELD;
+      $id = $entity_type . '.' . $bundle . '.' . DomainAccessManagerInterface::DOMAIN_ACCESS_ALL_FIELD;
       if (!$field = \Drupal::entityTypeManager()->getStorage('field_config')->load($id)) {
         $allow = FALSE;
         break;
diff --git a/domain_source/src/EventSubscriber/DomainSourceRedirectResponseSubscriberD8.php b/domain_source/src/EventSubscriber/DomainSourceRedirectResponseSubscriberD8.php
index 54a7d8e4..523fe468 100644
--- a/domain_source/src/EventSubscriber/DomainSourceRedirectResponseSubscriberD8.php
+++ b/domain_source/src/EventSubscriber/DomainSourceRedirectResponseSubscriberD8.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\domain_source\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\HttpFoundation\SecuredRedirectResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\Response;
 use Drupal\Core\EventSubscriber\RedirectResponseSubscriber;
@@ -28,12 +28,12 @@ class DomainSourceRedirectResponseSubscriberD8 extends RedirectResponseSubscribe
   /**
    * Allows manipulation of the response object when performing a redirect.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The Event to process.
    *
    * @phpstan-ignore-next-line
    */
-  public function checkRedirectUrl(FilterResponseEvent $event) {
+  public function checkRedirectUrl(ResponseEvent $event) {
     $response = $event->getResponse();
     if ($response instanceof RedirectResponse) {
       $request = $event->getRequest();
