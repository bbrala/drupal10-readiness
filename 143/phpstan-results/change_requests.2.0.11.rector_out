modules/contrib/change_requests/change_requests.install
modules/contrib/change_requests/src/DiffService.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchList.php
modules/contrib/change_requests/change_requests.module
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchReference.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchText.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchTextSummary.php
modules/contrib/change_requests/src/Plugin/FieldPatchPluginBase.php
modules/contrib/change_requests/src/Entity/Patch.php
modules/contrib/change_requests/patch.page.inc
modules/contrib/change_requests/src/Access/PatchApplyAccessCheck.php
modules/contrib/change_requests/src/AccessService.php
modules/contrib/change_requests/src/Annotation/FieldPatchPlugin.php
modules/contrib/change_requests/src/AttachService.php
modules/contrib/change_requests/src/Controller/PatchAjaxController.php
modules/contrib/change_requests/src/Controller/PatchApplyController.php
modules/contrib/change_requests/src/Controller/PatchesOverview.php
modules/contrib/change_requests/src/Plugin/FieldPatchPluginInterface.php
modules/contrib/change_requests/src/Plugin/FieldPatchPluginManager.php
modules/contrib/change_requests/src/Entity/PatchViewsData.php
modules/contrib/change_requests/src/Events/ChangeRequests.php
modules/contrib/change_requests/src/Form/ChangeRequestsConfig.php
modules/contrib/change_requests/tests/src/Functional/LoadTest.php
modules/contrib/change_requests/tests/src/Unit/DiffServiceTest.php
modules/contrib/change_requests/src/Form/PatchApplyForm.php
modules/contrib/change_requests/src/Form/PatchDeleteForm.php
modules/contrib/change_requests/src/Form/PatchForm.php
modules/contrib/change_requests/src/NodeObserver.php
modules/contrib/change_requests/src/PatchAccessControlHandler.php
modules/contrib/change_requests/src/PatchBreadcrumbBuilder.php
modules/contrib/change_requests/src/PatchHtmlRouteProvider.php
modules/contrib/change_requests/src/PatchViewBuilder.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchBoolean.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchData.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchDateTime.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchDaterange.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchFile.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchImage.php
modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchLink.php

5 files with changes
====================

1) modules/contrib/change_requests/tests/src/Unit/DiffServiceTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->diffService = new DiffService();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/change_requests/tests/src/Functional/LoadTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     # $this->user = $this->drupalCreateUser(['administer site configuration']);
     # $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchImage.php:164

    ---------- begin diff ----------
@@ @@

     $uri = $entity->getFileUri();
     $name = $entity->getFileName();
-    $url = Url::fromUri(file_create_url($entity->getFileUri()));
+    $url = \Drupal::service('file_url_generator')->generate($entity->getFileUri());
     $link = Link::fromTextAndUrl($name, $url)->toRenderable();
     if ($uri) {
       $style = $this->getModuleConfig('image_style', 'thumbnail');
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/change_requests/src/Plugin/FieldPatchPlugin/FieldPatchFile.php:125

    ---------- begin diff ----------
@@ @@
       return $this->t('ID: @id was not found.', ['@id' => $entity_id]);
     }
     $name = $entity->getFileName();
-    $url = Url::fromUri(file_create_url($entity->getFileUri()));
+    $url = \Drupal::service('file_url_generator')->generate($entity->getFileUri());
     $link = Link::fromTextAndUrl($name, $url)->toString();
     return $link;
   }
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/change_requests/src/NodeObserver.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\change_requests;

+use Drupal\core\Entity\EntityInterface;
 use Drupal\changed_fields\EntitySubject;
 use Drupal\changed_fields\ObserverInterface;
 use Drupal\Core\Config\ImmutableConfig;
@@ @@
    * @return \Drupal\core\Entity\EntityInterface
    *   Patch entity prepared with node and version IDs.
    */
-  protected function getPatch($nid, $type, $bundle = ''): \Drupal\core\Entity\EntityInterface
+  protected function getPatch($nid, $type, $bundle = ''): EntityInterface
   {
     $storage = $this->entityTypeManager->getStorage('patch');
     $params = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 5 files have been changed by Rector                                       

