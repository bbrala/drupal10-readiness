diff --git a/simpletest.module b/simpletest.module
index 11d2eb5..025390e 100644
--- a/simpletest.module
+++ b/simpletest.module
@@ -62,7 +62,7 @@ function simpletest_theme() {
 function simpletest_js_alter(&$javascript, AttachedAssetsInterface $assets) {
   // Since SimpleTest is a special use case for the table select, stick the
   // SimpleTest JavaScript above the table select.
-  $simpletest = drupal_get_path('module', 'simpletest') . '/simpletest.js';
+  $simpletest = \Drupal::service('extension.list.module')->getPath('simpletest') . '/simpletest.js';
   if (array_key_exists($simpletest, $javascript) && array_key_exists('core/misc/tableselect.js', $javascript)) {
     $javascript[$simpletest]['weight'] = $javascript['core/misc/tableselect.js']['weight'] - 1;
   }
diff --git a/src/InstallerTestBase.php b/src/InstallerTestBase.php
index 7030976..1f9379f 100644
--- a/src/InstallerTestBase.php
+++ b/src/InstallerTestBase.php
@@ -189,7 +189,7 @@ abstract class InstallerTestBase extends WebTestBase {
     $edit = [
       'langcode' => $this->langcode,
     ];
-    $this->drupalPostForm(NULL, $edit, $this->translations['Save and continue']);
+    $this->submitForm($edit, $this->translations['Save and continue']);
   }
 
   /**
@@ -199,7 +199,7 @@ abstract class InstallerTestBase extends WebTestBase {
     $edit = [
       'profile' => $this->profile,
     ];
-    $this->drupalPostForm(NULL, $edit, $this->translations['Save and continue']);
+    $this->submitForm($edit, $this->translations['Save and continue']);
   }
 
   /**
@@ -207,7 +207,7 @@ abstract class InstallerTestBase extends WebTestBase {
    */
   protected function setUpSettings() {
     $edit = $this->translatePostValues($this->parameters['forms']['install_settings_form']);
-    $this->drupalPostForm(NULL, $edit, $this->translations['Save and continue']);
+    $this->submitForm($edit, $this->translations['Save and continue']);
   }
 
   /**
@@ -227,7 +227,7 @@ abstract class InstallerTestBase extends WebTestBase {
    */
   protected function setUpSite() {
     $edit = $this->translatePostValues($this->parameters['forms']['install_configure_form']);
-    $this->drupalPostForm(NULL, $edit, $this->translations['Save and continue']);
+    $this->submitForm($edit, $this->translations['Save and continue']);
     // If we've got to this point the site is installed using the regular
     // installation workflow.
     $this->isInstalled = TRUE;
diff --git a/src/TestBase.php b/src/TestBase.php
index 1699370..1d891c7 100644
--- a/src/TestBase.php
+++ b/src/TestBase.php
@@ -913,7 +913,7 @@ abstract class TestBase {
       // Initialize verbose debugging.
       $this->verbose = TRUE;
       $this->verboseDirectory = PublicStream::basePath() . '/simpletest/verbose';
-      $this->verboseDirectoryUrl = file_create_url($this->verboseDirectory);
+      $this->verboseDirectoryUrl = \Drupal::service('file_url_generator')->generateAbsoluteString($this->verboseDirectory);
       if (\Drupal::service('file_system')->prepareDirectory($this->verboseDirectory, FileSystemInterface::CREATE_DIRECTORY) && !file_exists($this->verboseDirectory . '/.htaccess')) {
         file_put_contents($this->verboseDirectory . '/.htaccess', "<IfModule mod_expires.c>\nExpiresActive Off\n</IfModule>\n");
       }
@@ -1211,7 +1211,7 @@ abstract class TestBase {
     if (PHP_SAPI !== 'cli' && session_status() === PHP_SESSION_ACTIVE) {
       session_destroy();
       $params = session_get_cookie_params();
-      setcookie(session_name(), '', REQUEST_TIME - 3600, $params['path'], $params['domain'], $params['secure'], $params['httponly']);
+      setcookie(session_name(), '', \Drupal::time()->getRequestTime() - 3600, $params['path'], $params['domain'], $params['secure'], $params['httponly']);
     }
     session_name($this->originalSessionName);
 
diff --git a/src/Tests/BrokenSetUpTest.php b/src/Tests/BrokenSetUpTest.php
index fab44d0..554393c 100644
--- a/src/Tests/BrokenSetUpTest.php
+++ b/src/Tests/BrokenSetUpTest.php
@@ -80,7 +80,8 @@ class BrokenSetUpTest extends WebTestBase {
       // Verify that a broken setUp() method is caught.
       file_put_contents($this->sharedTriggerFile, 'setup');
       $edit['tests[Drupal\simpletest\Tests\BrokenSetUpTest]'] = TRUE;
-      $this->drupalPostForm('admin/config/development/testing', $edit, t('Run tests'));
+      $this->drupalGet('admin/config/development/testing');
+      $this->submitForm($edit, t('Run tests'));
       $this->assertRaw('Broken setup');
       $this->assertNoRaw('The setUp() method has run.');
       $this->assertNoRaw('Broken test');
@@ -91,7 +92,8 @@ class BrokenSetUpTest extends WebTestBase {
       // Verify that a broken tearDown() method is caught.
       file_put_contents($this->sharedTriggerFile, 'teardown');
       $edit['tests[Drupal\simpletest\Tests\BrokenSetUpTest]'] = TRUE;
-      $this->drupalPostForm('admin/config/development/testing', $edit, t('Run tests'));
+      $this->drupalGet('admin/config/development/testing');
+      $this->submitForm($edit, t('Run tests'));
       $this->assertNoRaw('Broken setup');
       $this->assertRaw('The setUp() method has run.');
       $this->assertNoRaw('Broken test');
@@ -102,7 +104,8 @@ class BrokenSetUpTest extends WebTestBase {
       // Verify that a broken test method is caught.
       file_put_contents($this->sharedTriggerFile, 'test');
       $edit['tests[Drupal\simpletest\Tests\BrokenSetUpTest]'] = TRUE;
-      $this->drupalPostForm('admin/config/development/testing', $edit, t('Run tests'));
+      $this->drupalGet('admin/config/development/testing');
+      $this->submitForm($edit, t('Run tests'));
       $this->assertNoRaw('Broken setup');
       $this->assertRaw('The setUp() method has run.');
       $this->assertRaw('Broken test');
diff --git a/src/Tests/BrowserTest.php b/src/Tests/BrowserTest.php
index a1059dd..d5eb819 100644
--- a/src/Tests/BrowserTest.php
+++ b/src/Tests/BrowserTest.php
@@ -47,7 +47,7 @@ class BrowserTest extends WebTestBase {
     $this->assertEqual($absolute, $this->url, 'Passed and requested URL are equal.');
     $this->assertEqual($this->url, $this->getAbsoluteUrl($this->url), 'Requested and returned absolute URL are equal.');
 
-    $this->drupalPostForm(NULL, [], t('Log in'));
+    $this->submitForm([], t('Log in'));
     $this->assertEqual($absolute, $this->url, 'Passed and requested URL are equal.');
     $this->assertEqual($this->url, $this->getAbsoluteUrl($this->url), 'Requested and returned absolute URL are equal.');
 
@@ -94,7 +94,8 @@ EOF;
     // Check that the $this->cookies property is populated when a user logs in.
     $user = $this->drupalCreateUser();
     $edit = ['name' => $user->getAccountName(), 'pass' => $user->pass_raw];
-    $this->drupalPostForm('<front>', $edit, t('Log in'));
+    $this->drupalGet('<front>');
+    $this->submitForm($edit, t('Log in'));
     $this->assertEqual(count($this->cookies), 1, 'A cookie is set when the user logs in.');
 
     // Check that the name and value of the cookie match the request data.
diff --git a/src/Tests/MissingCheckedRequirementsTest.php b/src/Tests/MissingCheckedRequirementsTest.php
index 4bf7c7b..7c490f9 100644
--- a/src/Tests/MissingCheckedRequirementsTest.php
+++ b/src/Tests/MissingCheckedRequirementsTest.php
@@ -47,7 +47,8 @@ class MissingCheckedRequirementsTest extends WebTestBase {
     if (!$this->isInChildSite()) {
       // Run this test from web interface.
       $edit['tests[Drupal\simpletest\Tests\MissingCheckedRequirementsTest]'] = TRUE;
-      $this->drupalPostForm('admin/config/development/testing', $edit, t('Run tests'));
+      $this->drupalGet('admin/config/development/testing');
+      $this->submitForm($edit, t('Run tests'));
       $this->assertRaw('Test is not allowed to run.', 'Test check for requirements came up.');
       $this->assertNoText('Test ran when it failed requirements check.', 'Test requirements stopped test from running.');
     }
diff --git a/src/Tests/SimpleTestBrowserTest.php b/src/Tests/SimpleTestBrowserTest.php
index 0aeceaf..c57f2a0 100644
--- a/src/Tests/SimpleTestBrowserTest.php
+++ b/src/Tests/SimpleTestBrowserTest.php
@@ -61,9 +61,10 @@ class SimpleTestBrowserTest extends WebTestBase {
       'name' => $user->getAccountName(),
       'pass' => $user->pass_raw,
     ];
-    $this->drupalPostForm('user/login', $edit, t('Log in'), [
+    $this->drupalGet('user/login', [
       'query' => ['destination' => 'user/logout'],
     ]);
+    $this->submitForm($edit, t('Log in'));
     $headers = $this->drupalGetHeaders(TRUE);
     $this->assertEqual(count($headers), 2, 'Simpletest stopped following redirects after the first one.');
 
@@ -86,7 +87,7 @@ class SimpleTestBrowserTest extends WebTestBase {
     // Logout the user which was logged in during test-setup.
     $this->drupalLogout();
 
-    $system_path = $base_url . '/' . drupal_get_path('module', 'system');
+    $system_path = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('system');
     $http_path = $system_path . '/tests/http.php/user/login';
     $https_path = $system_path . '/tests/https.php/user/login';
     // Generate a valid simpletest User-Agent to pass validation.
diff --git a/src/Tests/SimpleTestTest.php b/src/Tests/SimpleTestTest.php
index ea10bce..98e8571 100644
--- a/src/Tests/SimpleTestTest.php
+++ b/src/Tests/SimpleTestTest.php
@@ -132,7 +132,7 @@ EOD;
 
         $edit = [];
         $edit['tests[Drupal\simpletest\Tests\SimpleTestTest]'] = TRUE;
-        $this->drupalPostForm(NULL, $edit, t('Run tests'));
+        $this->submitForm($edit, t('Run tests'));
 
         // Parse results and confirm that they are correct.
         $this->getTestResults();
@@ -338,7 +338,7 @@ EOD;
           $assertion['file'] = $this->asText($row->td[2]);
           $assertion['line'] = $this->asText($row->td[3]);
           $assertion['function'] = $this->asText($row->td[4]);
-          $ok_url = file_url_transform_relative(file_create_url('core/misc/icons/73b355/check.svg'));
+          $ok_url = \Drupal::service('file_url_generator')->generateString('core/misc/icons/73b355/check.svg');
           $assertion['status'] = ($row->td[5]->img['src'] == $ok_url) ? 'Pass' : 'Fail';
           $results['assertions'][] = $assertion;
         }
diff --git a/tests/src/Functional/OtherInstallationProfileTestsTest.php b/tests/src/Functional/OtherInstallationProfileTestsTest.php
index 8a9ba18..108d1e4 100644
--- a/tests/src/Functional/OtherInstallationProfileTestsTest.php
+++ b/tests/src/Functional/OtherInstallationProfileTestsTest.php
@@ -45,7 +45,7 @@ class OtherInstallationProfileTestsTest extends BrowserTestBase {
    */
   protected $adminUser;
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer unit tests']);
@@ -61,11 +61,11 @@ class OtherInstallationProfileTestsTest extends BrowserTestBase {
     // Assert the existence of a test in a different installation profile than
     // the current.
     $this->drupalGet(Url::fromRoute('simpletest.test_form'));
-    $this->assertText('Tests Standard installation profile expectations.');
+    $this->assertSession()->pageTextContains('Tests Standard installation profile expectations.');
 
     // Assert the existence of a test for a module in a different installation
     // profile than the current.
-    $this->assertText('Drupal\Tests\drupal_system_listing_compatible_test\Kernel\SystemListingCrossProfileCompatibleTest');
+    $this->assertSession()->pageTextContains('Drupal\Tests\drupal_system_listing_compatible_test\Kernel\SystemListingCrossProfileCompatibleTest');
   }
 
 }
diff --git a/tests/src/Functional/SimpletestUiTest.php b/tests/src/Functional/SimpletestUiTest.php
index 9103cb8..4941117 100644
--- a/tests/src/Functional/SimpletestUiTest.php
+++ b/tests/src/Functional/SimpletestUiTest.php
@@ -24,7 +24,7 @@ class SimpletestUiTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->createUser(['administer unit tests']));
   }
@@ -58,7 +58,8 @@ class SimpletestUiTest extends BrowserTestBase {
       $edit = [
         "tests[$test]" => TRUE,
       ];
-      $this->drupalPostForm($url, $edit, t('Run tests'));
+      $this->drupalGet($url);
+      $this->submitForm($edit, t('Run tests'));
       $assertion->pageTextContains('0 fails, 0 exceptions');
     }
   }
diff --git a/tests/src/Functional/ThroughUITest.php b/tests/src/Functional/ThroughUITest.php
index 1e325e4..0762401 100644
--- a/tests/src/Functional/ThroughUITest.php
+++ b/tests/src/Functional/ThroughUITest.php
@@ -17,8 +17,8 @@ class ThroughUITest extends BrowserTestBase {
   /**
    * This test method must always pass.
    */
-  public function testThroughUi() {
-    $this->pass('Success!');
+  public function testThroughUi()
+  {
   }
 
 }
diff --git a/tests/src/Kernel/Cache/Context/TestDiscoveryCacheContextTest.php b/tests/src/Kernel/Cache/Context/TestDiscoveryCacheContextTest.php
index 00d8358..a525ee7 100644
--- a/tests/src/Kernel/Cache/Context/TestDiscoveryCacheContextTest.php
+++ b/tests/src/Kernel/Cache/Context/TestDiscoveryCacheContextTest.php
@@ -24,10 +24,7 @@ class TestDiscoveryCacheContextTest extends KernelTestBase {
    */
   public function testContext() {
     // Mock test discovery.
-    $discovery = $this->getMockBuilder(TestDiscovery::class)
-      ->setMethods(['getTestClasses'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $discovery = $this->createMock(TestDiscovery::class);
     // Set getTestClasses() to return different results on subsequent calls.
     // This emulates changed tests in the filesystem.
     $discovery->expects($this->any())
diff --git a/tests/src/Kernel/Migrate/d6/MigrateSimpletestConfigsTest.php b/tests/src/Kernel/Migrate/d6/MigrateSimpletestConfigsTest.php
index f8f9ffb..bb5f8ee 100644
--- a/tests/src/Kernel/Migrate/d6/MigrateSimpletestConfigsTest.php
+++ b/tests/src/Kernel/Migrate/d6/MigrateSimpletestConfigsTest.php
@@ -22,7 +22,7 @@ class MigrateSimpletestConfigsTest extends MigrateDrupal6TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['simpletest']);
     $this->executeMigration('d6_simpletest_settings');
@@ -33,13 +33,13 @@ class MigrateSimpletestConfigsTest extends MigrateDrupal6TestBase {
    */
   public function testSimpletestSettings() {
     $config = $this->config('simpletest.settings');
-    $this->assertIdentical(TRUE, $config->get('clear_results'));
-    $this->assertIdentical(CURLAUTH_BASIC, $config->get('httpauth.method'));
+    $this->assertSame(TRUE, $config->get('clear_results'));
+    $this->assertSame(CURLAUTH_BASIC, $config->get('httpauth.method'));
     // NULL in the dump means defaults which is empty string. Same as omitting
     // them.
-    $this->assertIdentical('', $config->get('httpauth.password'));
-    $this->assertIdentical('', $config->get('httpauth.username'));
-    $this->assertIdentical(TRUE, $config->get('verbose'));
+    $this->assertSame('', $config->get('httpauth.password'));
+    $this->assertSame('', $config->get('httpauth.username'));
+    $this->assertSame(TRUE, $config->get('verbose'));
     $this->assertConfigSchema(\Drupal::service('config.typed'), 'simpletest.settings', $config->get());
   }
 
diff --git a/tests/src/Kernel/Migrate/d7/MigrateSimpletestSettingsTest.php b/tests/src/Kernel/Migrate/d7/MigrateSimpletestSettingsTest.php
index 6eba633..fd3930b 100644
--- a/tests/src/Kernel/Migrate/d7/MigrateSimpletestSettingsTest.php
+++ b/tests/src/Kernel/Migrate/d7/MigrateSimpletestSettingsTest.php
@@ -16,7 +16,7 @@ class MigrateSimpletestSettingsTest extends MigrateDrupal7TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(static::$modules);
     $this->executeMigration('d7_simpletest_settings');
@@ -28,9 +28,9 @@ class MigrateSimpletestSettingsTest extends MigrateDrupal7TestBase {
   public function testMigration() {
     $config = \Drupal::config('simpletest.settings')->get();
     $this->assertTrue($config['clear_results']);
-    $this->assertIdentical(CURLAUTH_BASIC, $config['httpauth']['method']);
-    $this->assertIdentical('testbot', $config['httpauth']['username']);
-    $this->assertIdentical('foobaz', $config['httpauth']['password']);
+    $this->assertSame(CURLAUTH_BASIC, $config['httpauth']['method']);
+    $this->assertSame('testbot', $config['httpauth']['username']);
+    $this->assertSame('foobaz', $config['httpauth']['password']);
     $this->assertTrue($config['verbose']);
   }
 
diff --git a/tests/src/Kernel/SimpletestDeprecationTest.php b/tests/src/Kernel/SimpletestDeprecationTest.php
index 4ef09a9..d68c37e 100644
--- a/tests/src/Kernel/SimpletestDeprecationTest.php
+++ b/tests/src/Kernel/SimpletestDeprecationTest.php
@@ -49,7 +49,7 @@ class SimpletestDeprecationTest extends KernelTestBase {
     // - simpletest_phpunit_xml_to_rows().
     $this->assertStringEndsWith('/phpunit-23.xml', simpletest_phpunit_xml_filepath(23));
 
-    $this->assertInternalType('string', simpletest_phpunit_command());
+    $this->assertIsString(simpletest_phpunit_command());
 
     $this->assertEquals([], simpletest_phpunit_find_testcases(new \SimpleXMLElement('<not_testcase></not_testcase>')));
 
diff --git a/tests/src/Kernel/TestDeprecatedTestHooks.php b/tests/src/Kernel/TestDeprecatedTestHooks.php
index c578de6..022ad9d 100644
--- a/tests/src/Kernel/TestDeprecatedTestHooks.php
+++ b/tests/src/Kernel/TestDeprecatedTestHooks.php
@@ -38,10 +38,7 @@ class TestDeprecatedTestHooks extends KernelTestBase {
    */
   public function testHookTestGroupStarted() {
     // Mock a database connection enough for simpletest_run_tests().
-    $insert = $this->getMockBuilder(Insert::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['execute', 'useDefaults'])
-      ->getMock();
+    $insert = $this->createMock(Insert::class);
     $insert->expects($this->any())
       ->method('useDefaults')
       ->willReturn($insert);
@@ -59,11 +56,7 @@ class TestDeprecatedTestHooks extends KernelTestBase {
       ->willReturn($insert);
 
     // Mock public stream wrapper enough for simpletest_run_tests().
-    $public = $this->getMockBuilder(PublicStream::class)
-      ->disableOriginalConstructor()
-      // Mock all methods to do nothing and return NULL.
-      ->setMethods([])
-      ->getMock();
+    $public = $this->createMock(PublicStream::class);
 
     // Set up the container.
     $this->container->set('database', $connection);
@@ -79,19 +72,13 @@ class TestDeprecatedTestHooks extends KernelTestBase {
    */
   public function testHookTestFinished() {
     // Mock test_discovery.
-    $discovery = $this->getMockBuilder(TestDiscovery::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['registerTestNamespaces'])
-      ->getMock();
+    $discovery = $this->createMock(TestDiscovery::class);
     $discovery->expects($this->once())
       ->method('registerTestNamespaces')
       ->willReturn([]);
 
     // Mock renderer.
-    $renderer = $this->getMockBuilder(Renderer::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['render'])
-      ->getMock();
+    $renderer = $this->createMock(Renderer::class);
     // We don't care what the rendered batch elements look like.
     $renderer->expects($this->any())
       ->method('render')
diff --git a/tests/src/Unit/SimpletestPhpunitRunCommandTest.php b/tests/src/Unit/SimpletestPhpunitRunCommandTest.php
index 4f90438..3a9290d 100644
--- a/tests/src/Unit/SimpletestPhpunitRunCommandTest.php
+++ b/tests/src/Unit/SimpletestPhpunitRunCommandTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\simpletest\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Database\Database;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\File\FileSystemInterface;
@@ -30,6 +31,7 @@ use PHPUnit\Framework\TestCase;
  */
 class SimpletestPhpunitRunCommandTest extends TestCase {
 
+  use ProphecyTrait;
   /**
    * Path to the app root.
    *
@@ -47,7 +49,7 @@ class SimpletestPhpunitRunCommandTest extends TestCase {
   /**
    * {@inheritdoc}
    */
-  public static function setUpBeforeClass() {
+  public static function setUpBeforeClass(): void {
     parent::setUpBeforeClass();
     // Figure out our app root.
     self::$root = dirname(dirname(dirname(dirname(dirname(dirname(__DIR__))))));
@@ -63,7 +65,7 @@ class SimpletestPhpunitRunCommandTest extends TestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Organize our mock container.
     $container = new ContainerBuilder();
@@ -142,7 +144,7 @@ class SimpletestPhpunitRunCommandTest extends TestCase {
   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     // We unset the $base_url global, since the test code sets it as a
     // side-effect.
     unset($GLOBALS['base_url']);
diff --git a/tests/src/Unit/TestBaseTest.php b/tests/src/Unit/TestBaseTest.php
index 12deceb..bcbb5da 100644
--- a/tests/src/Unit/TestBaseTest.php
+++ b/tests/src/Unit/TestBaseTest.php
@@ -115,8 +115,8 @@ class TestBaseTest extends UnitTestCase {
     // randomString() should always include an ampersand ('&')  and a
     // greater than ('>') if $length is greater than 3.
     if ($length > 4) {
-      $this->assertContains('&', $string);
-      $this->assertContains('>', $string);
+      $this->assertStringContainsString('&', $string);
+      $this->assertStringContainsString('>', $string);
     }
   }
 
@@ -135,8 +135,7 @@ class TestBaseTest extends UnitTestCase {
    */
   public function testCheckRequirements() {
     $test_base = $this->getTestBaseForAssertionTests('test_id');
-    $this->assertInternalType(
-        'array',
+    $this->assertIsArray(
         $this->invokeProtectedMethod($test_base, 'checkRequirements', [])
     );
   }
diff --git a/tests/src/Unit/TestDiscoveryTest.php b/tests/src/Unit/TestDiscoveryTest.php
index eb02789..323b626 100644
--- a/tests/src/Unit/TestDiscoveryTest.php
+++ b/tests/src/Unit/TestDiscoveryTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\simpletest\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Composer\Autoload\ClassLoader;
 use Drupal\Core\DependencyInjection\Container;
 use Drupal\Core\DrupalKernel;
@@ -19,6 +20,7 @@ use org\bovigo\vfs\vfsStream;
  */
 class TestDiscoveryTest extends UnitTestCase {
 
+  use ProphecyTrait;
   protected function setupVfsWithTestClasses() {
     vfsStream::setup('drupal');
 
diff --git a/tests/src/Unit/WebTestBaseTest.php b/tests/src/Unit/WebTestBaseTest.php
index c55c3e2..817f89c 100644
--- a/tests/src/Unit/WebTestBaseTest.php
+++ b/tests/src/Unit/WebTestBaseTest.php
@@ -49,10 +49,7 @@ class WebTestBaseTest extends UnitTestCase {
   public function testAssertFieldByName($filename, $name, $value, $expected) {
     $content = file_get_contents(__DIR__ . '/../../fixtures/' . $filename . '.html');
 
-    $web_test = $this->getMockBuilder('Drupal\simpletest\WebTestBase')
-      ->disableOriginalConstructor()
-      ->setMethods(['getRawContent', 'assertTrue', 'pass'])
-      ->getMock();
+    $web_test = $this->createMock('Drupal\simpletest\WebTestBase');
 
     $web_test->expects($this->any())
       ->method('getRawContent')
@@ -133,17 +130,7 @@ class WebTestBaseTest extends UnitTestCase {
    */
   public function testClickLink($expected, $label, $index, $xpath_data) {
     // Mock a WebTestBase object and some of its methods.
-    $web_test = $this->getMockBuilder('Drupal\simpletest\WebTestBase')
-      ->disableOriginalConstructor()
-      ->setMethods([
-        'pass',
-        'fail',
-        'getUrl',
-        'xpath',
-        'drupalGet',
-        'getAbsoluteUrl',
-      ])
-      ->getMock();
+    $web_test = $this->createMock('Drupal\simpletest\WebTestBase');
 
     // Mocked getUrl() is only used for reporting so we just return a string.
     $web_test->expects($this->any())
@@ -199,10 +186,7 @@ class WebTestBaseTest extends UnitTestCase {
    * @dataProvider providerTestGetAbsoluteUrl
    */
   public function testGetAbsoluteUrl($href, $expected_absolute_path) {
-    $web_test = $this->getMockBuilder('Drupal\simpletest\WebTestBase')
-      ->disableOriginalConstructor()
-      ->setMethods(['getUrl'])
-      ->getMock();
+    $web_test = $this->createMock('Drupal\simpletest\WebTestBase');
 
     $web_test->expects($this->any())
       ->method('getUrl')
