diff --git a/src/ForwardLinkBuilder.php b/src/ForwardLinkBuilder.php
index 334329c..e9d27ee 100644
--- a/src/ForwardLinkBuilder.php
+++ b/src/ForwardLinkBuilder.php
@@ -73,7 +73,7 @@ class ForwardLinkBuilder implements ForwardLinkBuilderInterface {
 
     $html = FALSE;
     // Output the correct style of link.
-    $default_icon = drupal_get_path('module', 'forward') . '/images/forward.gif';
+    $default_icon = \Drupal::service('extension.list.module')->getPath('forward') . '/images/forward.gif';
     $custom_icon = $settings['forward_link_icon'];
     $link_style = $settings['forward_link_style'];
     switch ($link_style) {
diff --git a/src/Tests/AccessCheckerTest.php b/src/Tests/AccessCheckerTest.php
index f20ff42..ab08237 100644
--- a/src/Tests/AccessCheckerTest.php
+++ b/src/Tests/AccessCheckerTest.php
@@ -20,16 +20,16 @@ class AccessCheckerTest extends ForwardTestBase {
       'forward_node_types[article]' => 'article',
       'forward_view_modes[full]' => 'full',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $article = $this->drupalCreateNode(['type' => 'article']);
     $this->drupalLogin($this->forwardUser);
     $this->drupalGet('node/' . $article->id());
-    $this->assertText(t('Email this article'), 'The article has a Forward link.');
+    $this->assertSession()->pageTextContains(t('Email this article'));
 
     // Users without "access forward" permission should not see the Forward link.
     $this->drupalLogin($this->webUser);
     $this->drupalGet('node/' . $article->id());
-    $this->assertNoText(t('Email this article'), 'The article does not have a Forward link for a user without access forward permission.');
+    $this->assertSession()->pageTextNotContains(t('Email this article'));
 
     // Users should not see the Forward link on full nodes when Forward is configured to display on Teasers only.
     $this->drupalLogin($this->adminUser);
@@ -37,22 +37,22 @@ class AccessCheckerTest extends ForwardTestBase {
     $edit = [
       'forward_view_modes[full]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $article = $this->drupalCreateNode(['type' => 'article']);
     $this->drupalLogin($this->forwardUser);
     $this->drupalGet('node/' . $article->id());
-    $this->assertNoText(t('Email this article'), 'The article does not have a Forward link on a full article node when configured for teasers only.');
+    $this->assertSession()->pageTextNotContains(t('Email this article'));
 
     // Basic pages should not have the Forward link.
     $page = $this->drupalCreateNode(['type' => 'page']);
     $this->drupalGet('node/' . $page->id());
-    $this->assertNoText(t('Email this basic page'), 'The basic page does not have a Forward link.');
+    $this->assertSession()->pageTextNotContains(t('Email this basic page'));
 
     // Users should not have the Forward link.
     $this->drupalLogin($this->adminUser);
     $user = $this->drupalCreateUser(['access content']);
     $this->drupalGet('user/' . $user->id());
-    $this->assertNoText(t('Email this user'), 'The user does not have a Forward link.');
+    $this->assertSession()->pageTextNotContains(t('Email this user'));
 
     // Add the Forward link to users.
     $this->drupalGet('admin/config/user-interface/forward');
@@ -60,27 +60,27 @@ class AccessCheckerTest extends ForwardTestBase {
       'forward_view_modes[full]' => 'full',
       'forward_entity_types[user]' => 'user',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $user = $this->drupalCreateUser(['access content']);
     $this->drupalGet('user/' . $user->id());
-    $this->assertText(t('Email this user'), 'The user has a Forward link after changing Forward settings.');
+    $this->assertSession()->pageTextContains(t('Email this user'));
 
     // Remove the Forward link from articles.
     $article = $this->drupalCreateNode(['type' => 'article']);
     $this->drupalLogin($this->forwardUser);
     $this->drupalGet('node/' . $article->id());
-    $this->assertText(t('Email this article'), 'The article has a Forward link.');
+    $this->assertSession()->pageTextContains(t('Email this article'));
 
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('admin/config/user-interface/forward');
     $edit = [
       'forward_node_types[article]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $this->drupalLogin($this->forwardUser);
     $article = $this->drupalCreateNode(['type' => 'article']);
     $this->drupalGet('node/' . $article->id());
-    $this->assertNoText(t('Email this article'), 'The article does not have a Forward link after configured for Users only.');
+    $this->assertSession()->pageTextNotContains(t('Email this article'));
   }
 
 }
diff --git a/src/Tests/ForwardFormTest.php b/src/Tests/ForwardFormTest.php
index 2be2b03..1edf067 100644
--- a/src/Tests/ForwardFormTest.php
+++ b/src/Tests/ForwardFormTest.php
@@ -21,15 +21,15 @@ class ForwardFormTest extends ForwardTestBase {
       'forward_view_modes[full]' => 'full',
       'forward_personal_message' => 2,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
 
     // Navigate to the Forward Form.
     $article = $this->drupalCreateNode(['type' => 'article']);
     $this->drupalLogin($this->forwardUser);
     $this->drupalGet('node/' . $article->id());
-    $this->assertText(t('Email this article'), t('The article has a Forward link.'));
+    $this->assertSession()->pageTextContains(t('Email this article'));
     $this->drupalGet('/forward/node/' . $article->id());
-    $this->assertText(t('Forward this article to a friend'), 'The Forward form displays for an article.');
+    $this->assertSession()->pageTextContains(t('Forward this article to a friend'));
 
     // Submit the Forward form.
     $edit = [
@@ -37,8 +37,8 @@ class ForwardFormTest extends ForwardTestBase {
       'recipient' => 'test@test.com',
       'message' => 'This is a test personal message.',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Send Message'));
-    $this->assertText(t('Thank you for spreading the word about Drupal.'), 'The Forward form displays a thank you message after submit.');
+    $this->submitForm($edit, t('Send Message'));
+    $this->assertSession()->pageTextContains(t('Thank you for spreading the word about Drupal.'));
 
     // Submit the Forward form without a recipient.
     $this->drupalGet('/forward/node/' . $article->id());
@@ -46,8 +46,8 @@ class ForwardFormTest extends ForwardTestBase {
       'name' => 'Test Forwarder',
       'message' => 'This is a test personal message.',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Send Message'));
-    $this->assertText(t('Send to field is required.'), 'The Forward form displays an error message when the recipient is blank.');
+    $this->submitForm($edit, t('Send Message'));
+    $this->assertSession()->pageTextContains(t('Send to field is required.'));
 
     // Submit the Forward form without a personal message when required.
     $this->drupalLogin($this->adminUser);
@@ -55,15 +55,15 @@ class ForwardFormTest extends ForwardTestBase {
     $edit = [
       'forward_personal_message' => 2,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');
     $this->drupalLogin($this->forwardUser);
     $this->drupalGet('/forward/node/' . $article->id());
     $edit = [
       'name' => 'Test Forwarder',
       'recipient' => 'test@test.com',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Send Message'));
-    $this->assertText(t('Your personal message field is required.'), 'The Forward form displays an error message when the message is blank and one is required.');
+    $this->submitForm($edit, t('Send Message'));
+    $this->assertSession()->pageTextContains(t('Your personal message field is required.'));
 
     // Submit the Forward form without a personal message when optional.
     $this->drupalLogin($this->adminUser);
@@ -71,15 +71,15 @@ class ForwardFormTest extends ForwardTestBase {
     $edit = [
       'forward_personal_message' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $this->drupalLogin($this->forwardUser);
     $this->drupalGet('/forward/node/' . $article->id());
     $edit = [
       'name' => 'Test Forwarder',
       'recipient' => 'test@test.com',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Send Message'));
-    $this->assertNoText(t('Your personal message field is required.'), 'The Forward form does not display an error message when the message is blank and optional.');
+    $this->submitForm($edit, t('Send Message'));
+    $this->assertSession()->pageTextNotContains(t('Your personal message field is required.'));
   }
 
 }
diff --git a/src/Tests/ForwardTestBase.php b/src/Tests/ForwardTestBase.php
index bd8e4a0..2bf11d3 100644
--- a/src/Tests/ForwardTestBase.php
+++ b/src/Tests/ForwardTestBase.php
@@ -48,7 +48,7 @@ abstract class ForwardTestBase extends BrowserTestBase {
   /**
    * Perform any initial set up tasks that run before every test method.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create Basic page and Article node types.
diff --git a/src/Tests/PermissionsTest.php b/src/Tests/PermissionsTest.php
index 5eb6102..13d1338 100644
--- a/src/Tests/PermissionsTest.php
+++ b/src/Tests/PermissionsTest.php
@@ -16,30 +16,30 @@ class PermissionsTest extends ForwardTestBase {
     // Users with access content permission cannot change settings.
     $this->drupalLogin($this->webUser);
     $this->drupalGet('admin/config/user-interface/forward');
-    $this->assertResponse(403, 'Users with access content permission cannot change settings.');
+    $this->assertSession()->statusCodeEquals(403, 'Users with access content permission cannot change settings.');
 
     // Users with access forward permission cannot change settings.
     $this->drupalLogin($this->forwardUser);
     $this->drupalGet('admin/config/user-interface/forward');
-    $this->assertResponse(403, 'Users with access forward permission cannot change settings.');
+    $this->assertSession()->statusCodeEquals(403, 'Users with access forward permission cannot change settings.');
 
     // Users with administer forward permission can change settings.
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('admin/config/user-interface/forward');
-    $this->assertResponse(200, 'Users with administer forward permission can change settings.');
+    $this->assertSession()->statusCodeEquals(200, 'Users with administer forward permission can change settings.');
 
     // Users without override email address permission cannot change their email address on the Forward form.
     $article = $this->drupalCreateNode(['type' => 'article']);
     $this->drupalLogin($this->forwardUser);
     $this->drupalGet('/forward/node/' . $article->id());
-    $this->assertNoText(t('Your email address'), 'Users without override email address permission cannot change their email address on the Forward form.');
+    $this->assertSession()->pageTextNotContains(t('Your email address'));
 
     // Users with override email address permission can change their email address on the Forward form.
     $overrideUser = $this->drupalCreateUser(['access content', 'access forward', 'override email address', 'override flood control']);
     $article = $this->drupalCreateNode(['type' => 'article']);
     $this->drupalLogin($overrideUser);
     $this->drupalGet('/forward/node/' . $article->id());
-    $this->assertText(t('Your email address'), 'Users with override email address permission can change their email address on the Forward form.');
+    $this->assertSession()->pageTextContains(t('Your email address'));
 
     // Set flood control limit to 1.
     $this->drupalLogin($this->adminUser);
@@ -47,7 +47,7 @@ class PermissionsTest extends ForwardTestBase {
     $edit = [
       'forward_flood_control_limit' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
 
     // Users without override flood control permission cannot do more than 1 forward in an hour.
     $this->drupalLogin($this->forwardUser);
@@ -57,15 +57,15 @@ class PermissionsTest extends ForwardTestBase {
       'recipient' => 'test@test.com',
       'message' => 'This is a test personal message.',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Send Message'));
+    $this->submitForm($edit, t('Send Message'));
     $this->drupalGet('/forward/node/' . $article->id());
     $edit = [
       'name' => 'Test Forwarder',
       'recipient' => 'test@test.com',
       'message' => 'This is a test personal message.',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Send Message'));
-    $this->assertNoText(t('Thank you for spreading the word about Drupal.'), 'Users without override flood control permission cannot do more than 1 forward in an hour.');
+    $this->submitForm($edit, t('Send Message'));
+    $this->assertSession()->pageTextNotContains(t('Thank you for spreading the word about Drupal.'));
 
     // Users with override flood control permission can do more than 1 forward in an hour.
     $this->drupalLogin($overrideUser);
@@ -75,15 +75,15 @@ class PermissionsTest extends ForwardTestBase {
       'recipient' => 'test@test.com',
       'message' => 'This is a test personal message.',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Send Message'));
+    $this->submitForm($edit, t('Send Message'));
     $this->drupalGet('/forward/node/' . $article->id());
     $edit = [
       'name' => 'Test Forwarder',
       'recipient' => 'test@test.com',
       'message' => 'This is a test personal message.',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Send Message'));
-    $this->assertText(t('Thank you for spreading the word about Drupal.'), 'Users with override flood control permission can do more than 1 forward in an hour.');
+    $this->submitForm($edit, t('Send Message'));
+    $this->assertSession()->pageTextContains(t('Thank you for spreading the word about Drupal.'));
   }
 
 }
