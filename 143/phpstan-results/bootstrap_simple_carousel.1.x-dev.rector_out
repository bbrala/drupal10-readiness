modules/contrib/bootstrap_simple_carousel/bootstrap_simple_carousel.install
modules/contrib/bootstrap_simple_carousel/src/Service/CarouselService.php
modules/contrib/bootstrap_simple_carousel/bootstrap_simple_carousel.module
modules/contrib/bootstrap_simple_carousel/src/CarouselItemInterface.php
modules/contrib/bootstrap_simple_carousel/src/CarouselItemStorage.php
modules/contrib/bootstrap_simple_carousel/tests/src/Unit/Service/CarouselServiceTest.php
modules/contrib/bootstrap_simple_carousel/src/Entity/CarouselItem.php
modules/contrib/bootstrap_simple_carousel/src/Form/DeleteForm.php
modules/contrib/bootstrap_simple_carousel/src/Form/EditForm.php
modules/contrib/bootstrap_simple_carousel/src/Form/ItemsForm.php
modules/contrib/bootstrap_simple_carousel/src/Form/SettingsForm.php
modules/contrib/bootstrap_simple_carousel/src/Plugin/Block/CarouselBlock.php

3 files with changes
====================

1) modules/contrib/bootstrap_simple_carousel/tests/src/Unit/Service/CarouselServiceTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The mocked renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Render\RendererInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $renderer;

@@ @@
   /**
    * The mocked entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Entity\EntityTypeManagerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $entityTypeManager;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->renderer = $this->createMock('\Drupal\Core\Render\RendererInterface');
     $this->entityTypeManager = $this->createMock('\Drupal\Core\Entity\EntityTypeManagerInterface');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bootstrap_simple_carousel/src/Service/CarouselService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\bootstrap_simple_carousel\Service;

+use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\DependencyInjection\ServiceProviderBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Render\RendererInterface;
@@ @@
  * @package Drupal\bootstrap_simple_carousel\Service
  */
 class CarouselService extends ServiceProviderBase {
-  use \Drupal\Core\StringTranslation\StringTranslationTrait;
+  use StringTranslationTrait;

   /**
    * This will hold Renderer object.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/bootstrap_simple_carousel/src/Plugin/Block/CarouselBlock.php:126

    ---------- begin diff ----------
@@ @@
         $file = $this->entityTypeManager->getStorage('file')->load($item->image_id);
         $image_style = $this->moduleSettings->get('image_style');
         if (empty($image_style) || $image_style == SettingsForm::ORIGINAL_IMAGE_STYLE_ID) {
-          $item->image_url = file_url_transform_relative(file_create_url($file->getFileUri()));
+          $item->image_url = \Drupal::service('file_url_generator')->generateString($file->getFileUri());
         }
         else {
-          $item->image_url = file_url_transform_relative($this->imageStyleService->load($image_style)
+          $item->image_url = \Drupal::service('file_url_generator')->transformRelative($this->imageStyleService->load($image_style)
             ->buildUrl($file->getFileUri()));
         }
         if (!empty($item->image_link)) {
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

