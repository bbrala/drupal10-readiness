modules/contrib/moderation_state_permissions/moderation_state_permissions.module
modules/contrib/moderation_state_permissions/src/PermissionsGenerator.php
modules/contrib/moderation_state_permissions/tests/src/Functional/LoadTest.php
modules/contrib/moderation_state_permissions/tests/src/Kernel/ModerationStatePermissionsKernelTest.php

2 files with changes
====================

1) modules/contrib/moderation_state_permissions/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/moderation_state_permissions/moderation_state_permissions.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Session\AccountInterface;
 /**
  * @file
  * Contains moderation_state_permissions.module.
@@ @@
 /**
  * Implements hook_entity_access().
  */
-function moderation_state_permissions_entity_access(\Drupal\Core\Entity\EntityInterface $entity, $operation, \Drupal\Core\Session\AccountInterface $account) {
+function moderation_state_permissions_entity_access(EntityInterface $entity, $operation, AccountInterface $account) {
   /** @var \Drupal\content_moderation\ModerationInformationInterface $moderationInformation */
   $moderationInformation = \Drupal::service('content_moderation.moderation_information');
   if ($moderationInformation->isModeratedEntity($entity) && in_array($operation, PermissionsGenerator::$OPERATIONS)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

