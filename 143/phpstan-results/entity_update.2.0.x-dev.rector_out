modules/contrib/entity_update/drush/entity_update.drush8.inc
modules/contrib/entity_update/src/Form/EntityList.php
modules/contrib/entity_update/tests/src/Functional/EntityUpdateUIFunctionsTest.php
modules/contrib/entity_update/entity_update.install
modules/contrib/entity_update/entity_update.module
modules/contrib/entity_update/src/Form/EntityUpdateExec.php
modules/contrib/entity_update/src/Commands/EntityUpdatesCommands.php
modules/contrib/entity_update/src/Controller/EntityUpdateStatus.php
modules/contrib/entity_update/src/CustomEntityDefinitionUpdateManager.php
modules/contrib/entity_update/src/Form/Settings.php
modules/contrib/entity_update/tests/src/Functional/InstallUninstallTest.php
modules/contrib/entity_update/tests/modules/entity_update_tests/entity_update_tests.install
modules/contrib/entity_update/tests/modules/entity_update_tests/entity_update_tests.module
modules/contrib/entity_update/tests/modules/entity_update_tests/src/Entity/EntityUpdateTestsConfigEntity.php
modules/contrib/entity_update/src/EntityCheck.php
modules/contrib/entity_update/tests/modules/entity_update_tests/src/Entity/EntityUpdateTestsContentEntity.php
modules/contrib/entity_update/tests/modules/entity_update_tests/src/Entity/EntityUpdateTestsContentEntity02.php
modules/contrib/entity_update/src/EntityUpdate.php
modules/contrib/entity_update/tests/modules/entity_update_tests/src/EntityUpdateTestHelper.php
modules/contrib/entity_update/tests/modules/entity_update_tests/src/Form/EntityUpdateTestSettings.php
modules/contrib/entity_update/tests/src/Functional/EntityUpdateFunctionsTest.php
modules/contrib/entity_update/src/EntityUpdateHelper.php
modules/contrib/entity_update/src/EntityUpdatePrint.php
modules/contrib/entity_update/tests/src/Functional/EntityUpdateProgUpTest.php
modules/contrib/entity_update/tests/src/Functional/EntityUpdateUIAccessTest.php

5 files with changes
====================

1) modules/contrib/entity_update/tests/src/Functional/InstallUninstallTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
@@ @@
     // Uninstall the module field_gallery.
     $edit = [];
     $edit['uninstall[entity_update]'] = TRUE;
-    $this->drupalPostForm('admin/modules/uninstall', $edit, 'Uninstall');
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm($edit, 'Uninstall');
     $assert->pageTextContains('Entity Update');
-    $this->drupalPostForm(NULL, NULL, 'Uninstall');
+    $this->submitForm(NULL, 'Uninstall');
     $assert->pageTextContains('The selected modules have been uninstalled.');

     // Re test if site opens with no errors.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_update/tests/src/Functional/EntityUpdateUIFunctionsTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = ['administer software updates'];
@@ @@
     $edit = [];
     $path = 'admin/config/development/entity-update/exec/basic';
     $this->drupalGet($path);
-    $this->drupalPostForm($path, $edit, 'Run Basic Update');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Basic Update');
     $assert->pageTextContainsOnce('Nothing to update. All entities are up to date.');

     // One field to install.
@@ @@
     $edit = [];
     $edit['confirm'] = FALSE;
     $this->drupalGet($path);
-    $this->drupalPostForm($path, $edit, 'Run Basic Update');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Basic Update');
     $assert->pageTextContainsOnce('If you want to execute, please check the checkbox.');

     $edit = [];
     $edit['confirm'] = TRUE;
     $this->drupalGet($path);
-    $this->drupalPostForm($path, $edit, 'Run Basic Update');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Basic Update');
     $assert->pageTextContainsOnce('Entity update SUCCESS');

     // One field to install, one field to uninstall.
@@ @@
     $edit = [];
     $edit['confirm'] = TRUE;
     $this->drupalGet($path);
-    $this->drupalPostForm($path, $edit, 'Run Basic Update');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Basic Update');
     $assert->pageTextContainsOnce('Entity update SUCCESS');

     $this->drupalGet('admin/config/development/entity-update/status');
@@ @@
     $edit['entity_type_id'] = 'entity_update_tests_cnt';
     $this->drupalGet($path);
     $assert->elementTextContains('css', '#edit-entity-type-id option[value=entity_update_tests_cnt]', 'entity_update_tests_cnt');
-    $this->drupalPostForm($path, $edit, 'Run Type Update');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Type Update');
     $assert->pageTextContainsOnce('If you want to execute, please check the checkbox.');

     $edit['confirm'] = TRUE;
     $this->drupalGet($path);
-    $this->drupalPostForm($path, $edit, 'Run Type Update');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Type Update');
     $assert->pageTextContainsOnce('Entity update SUCCESS');

     // One field to install, one field to uninstall (Check error message).
@@ @@
     $assert->pageTextContainsOnce('The Name field needs to be uninstalled.');

     $this->drupalGet($path);
-    $this->drupalPostForm($path, $edit, 'Run Type Update');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Type Update');
     $assert->pageTextContainsOnce('Multiple actions detected, cant update if contains data. Use basic method.');
   }

@@ @@
     $edit = [];
     $edit['confirm'] = FALSE;
     $this->drupalGet($path);
-    $this->drupalPostForm($path, $edit, 'Cleanup');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Cleanup');
     $assert->pageTextContainsOnce('If you want to execute, please check the checkbox.');

     $edit['confirm'] = TRUE;
-    $this->drupalPostForm($path, $edit, 'Cleanup');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Cleanup');
     $assert->pageTextContainsOnce('Backups cleanup SUCCESS');
   }

@@ @@
     $edit = [];
     $edit['confirm'] = FALSE;
     $this->drupalGet($path);
-    $this->drupalPostForm($path, $edit, 'Run Entity Rescue');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Entity Rescue');
     $assert->pageTextContainsOnce('If you want to execute, please check the checkbox.');

     $edit['confirm'] = TRUE;
-    $this->drupalPostForm($path, $edit, 'Run Entity Rescue');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Entity Rescue');
     // Nothing to rescue.
     $assert->pageTextContainsOnce('Entity rescue FAIL');

@@ @@
     $res = EntityUpdate::basicUpdate(TRUE);
     $this->assertTrue($res, 'Entity schema is updated (Uninstall + data).');
     $edit['confirm'] = TRUE;
-    $this->drupalPostForm($path, $edit, 'Run Entity Rescue');
+    $this->drupalGet($path);
+    $this->submitForm($edit, 'Run Entity Rescue');
     // @TODO : Create a correct test.
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_update/tests/src/Functional/EntityUpdateUIAccessTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_update/tests/src/Functional/EntityUpdateProgUpTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Initialisation process.
     parent::setUp();

@@ @@
     else {
       // Your codes if update false.
     }
-    $this->assert($res, 'Entity schema has been updated successfully.');
+    $this->assertTrue($res, 'Entity schema has been updated successfully.');

     // Entity checking process : Compare with new list entities list.
     $ids_new = \Drupal::entityQuery('entity_update_tests_cnt')->execute();
@@ @@
     else {
       // Your codes if update false.
     }
-    $this->assert($res, 'Entity schema has been updated successfully.');
+    $this->assertTrue($res, 'Entity schema has been updated successfully.');
   }

   /**
@@ @@
     else {
       // Your codes if update false.
     }
-    $this->assert($res, 'Entity schema has been updated successfully.');
+    $this->assertTrue($res, 'Entity schema has been updated successfully.');

     // Entity checking process : Compare with new list entities list.
     $ids_new = \Drupal::entityQuery('entity_update_tests_cnt')->execute();
@@ @@
     else {
       // Your codes if update false.
     }
-    $this->assert($res, 'Entity schema has been updated successfully.');
+    $this->assertTrue($res, 'Entity schema has been updated successfully.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_update/tests/src/Functional/EntityUpdateFunctionsTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Detele the entity created by install.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

