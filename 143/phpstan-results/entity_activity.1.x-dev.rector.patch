diff --git a/modules/entity_activity_mail/tests/src/Functional/EntityActivityMailBrowserTest.php b/modules/entity_activity_mail/tests/src/Functional/EntityActivityMailBrowserTest.php
index 337b656..28530f1 100644
--- a/modules/entity_activity_mail/tests/src/Functional/EntityActivityMailBrowserTest.php
+++ b/modules/entity_activity_mail/tests/src/Functional/EntityActivityMailBrowserTest.php
@@ -68,7 +68,7 @@ class EntityActivityMailBrowserTest extends EntityActivityBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->reportService = $this->container->get('entity_activity_mail.report');
     // User 1 has a subscription on User 2 and on Term 1.
@@ -99,7 +99,7 @@ class EntityActivityMailBrowserTest extends EntityActivityBrowserTestBase {
     $new_article->save();
 
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(1, count($logs));
+    $this->assertEquals(1, count($logs));
     $emails = $this->getMails();
     $this->assertCount(1, $emails);
     $email = end($emails);
@@ -123,7 +123,7 @@ class EntityActivityMailBrowserTest extends EntityActivityBrowserTestBase {
     $new_article->save();
 
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(2, count($logs));
+    $this->assertEquals(2, count($logs));
     $emails = $this->getMails();
     // No new email has been sent yet.
     $this->assertCount(1, $emails);
@@ -169,12 +169,12 @@ class EntityActivityMailBrowserTest extends EntityActivityBrowserTestBase {
     $this->drupalLogout();
 
     $logs1 = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(2, count($logs1));
+    $this->assertEquals(2, count($logs1));
     $logs1_unsent = $this->reportService->getUnsentLogsPerUserId($this->user1->id());
     $this->assertCount(2, $logs1_unsent);
 
     $logs2 = $this->logStorage->loadMultipleByOwner($this->user2);
-    $this->assertEqual(2, count($logs2));
+    $this->assertEquals(2, count($logs2));
     $logs2_unsent = $this->reportService->getUnsentLogsPerUserId($this->user2->id());
     $this->assertCount(2, $logs2_unsent);
 
@@ -285,12 +285,12 @@ class EntityActivityMailBrowserTest extends EntityActivityBrowserTestBase {
     $this->drupalLogout();
 
     $logs1 = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(2, count($logs1));
+    $this->assertEquals(2, count($logs1));
     $logs1_unsent = $this->reportService->getUnsentLogsPerUserId($this->user1->id());
     $this->assertCount(2, $logs1_unsent);
 
     $logs2 = $this->logStorage->loadMultipleByOwner($this->user2);
-    $this->assertEqual(2, count($logs2));
+    $this->assertEquals(2, count($logs2));
     $logs2_unsent = $this->reportService->getUnsentLogsPerUserId($this->user2->id());
     $this->assertCount(2, $logs2_unsent);
 
@@ -412,12 +412,12 @@ class EntityActivityMailBrowserTest extends EntityActivityBrowserTestBase {
     $logs1 = $this->logStorage->loadMultipleByOwner($this->user1);
     $this->assertCount(2, $logs1);
     $logs1_unread = $this->logStorage->totalUnreadByOwner($this->user1);
-    $this->assertEqual(2, $logs1_unread);
+    $this->assertEquals(2, $logs1_unread);
 
     $logs2 = $this->logStorage->loadMultipleByOwner($this->user2);
     $this->assertCount(2, $logs2);
     $logs2_unread = $this->logStorage->totalUnreadByOwner($this->user2);
-    $this->assertEqual(2, $logs2_unread);
+    $this->assertEquals(2, $logs2_unread);
 
     $emails = $this->getMails();
     $this->assertCount(0, $emails);
@@ -453,10 +453,10 @@ class EntityActivityMailBrowserTest extends EntityActivityBrowserTestBase {
     $this->assertCount(2, $emails);
 
     $logs1_unread = $this->logStorage->totalUnreadByOwner($this->user1);
-    $this->assertEqual(0, $logs1_unread);
+    $this->assertEquals(0, $logs1_unread);
 
     $logs2_unread = $this->logStorage->totalUnreadByOwner($this->user2);
-    $this->assertEqual(0, $logs2_unread);
+    $this->assertEquals(0, $logs2_unread);
 
   }
 
diff --git a/src/EntityActivityContentEntityStorage.php b/src/EntityActivityContentEntityStorage.php
index efb1978..53d8429 100644
--- a/src/EntityActivityContentEntityStorage.php
+++ b/src/EntityActivityContentEntityStorage.php
@@ -81,7 +81,7 @@ class EntityActivityContentEntityStorage extends SqlContentEntityStorage {
 
     $event_class = $this->entityType->getHandlerClass('event');
     if ($event_class) {
-      $this->eventDispatcher->dispatch($this->getEventName($hook), new $event_class($entity));
+      $this->eventDispatcher->dispatch(new $event_class($entity), $this->getEventName($hook));
     }
   }
 
diff --git a/src/EntityActivityManager.php b/src/EntityActivityManager.php
index c8d15a4..0d5e205 100644
--- a/src/EntityActivityManager.php
+++ b/src/EntityActivityManager.php
@@ -206,7 +206,7 @@ class EntityActivityManager implements EntityActivityManagerInterface {
         // subscriptions to these entities which can not have a "subscribe on"
         // button.
         $support_entity_type = new EntityActivitySupportEntityTypeEvent($entity_type_id);
-        $this->eventDispatcher->dispatch(EntityActivityEvents::ENTITY_ACTIVITY_SUPPORT_ENTITY_TYPE, $support_entity_type);
+        $this->eventDispatcher->dispatch($support_entity_type, EntityActivityEvents::ENTITY_ACTIVITY_SUPPORT_ENTITY_TYPE);
         if ($support_entity_type->isSupported()) {
           continue;
         }
@@ -251,7 +251,7 @@ class EntityActivityManager implements EntityActivityManagerInterface {
     $is_enabled = in_array($entity->getEntityTypeId(), $entity_type_enabled);
     if ($is_enabled) {
       $event = new EntityActivityEvent($entity);
-      $this->eventDispatcher->dispatch($event_name, $event);
+      $this->eventDispatcher->dispatch($event, $event_name);
     }
   }
 
diff --git a/src/Event/EntityActivityEvent.php b/src/Event/EntityActivityEvent.php
index 77e3253..1239cdf 100644
--- a/src/Event/EntityActivityEvent.php
+++ b/src/Event/EntityActivityEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_activity\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Entity\ContentEntityInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the log event.
diff --git a/src/Event/EntityActivitySupportEntityTypeEvent.php b/src/Event/EntityActivitySupportEntityTypeEvent.php
index 9822d0f..913836c 100644
--- a/src/Event/EntityActivitySupportEntityTypeEvent.php
+++ b/src/Event/EntityActivitySupportEntityTypeEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\entity_activity\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Defines the log event.
diff --git a/src/Event/LogEvent.php b/src/Event/LogEvent.php
index 77f8e24..e6b84db 100644
--- a/src/Event/LogEvent.php
+++ b/src/Event/LogEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_activity\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\entity_activity\Entity\LogInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the log event.
diff --git a/src/Event/SubscriptionEvent.php b/src/Event/SubscriptionEvent.php
index ff5a5f6..e0134bf 100644
--- a/src/Event/SubscriptionEvent.php
+++ b/src/Event/SubscriptionEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_activity\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\entity_activity\Entity\SubscriptionInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the log event.
diff --git a/src/GeneratorListBuilder.php b/src/GeneratorListBuilder.php
index 5865925..94ec3e3 100644
--- a/src/GeneratorListBuilder.php
+++ b/src/GeneratorListBuilder.php
@@ -46,7 +46,7 @@ class GeneratorListBuilder extends ConfigEntityListBuilder {
       '#items' => empty($data['generators']) ? [$this->t('None')] : $data['generators'],
     ];
 
-    $row['generators'] = render($data['generators']);
+    $row['generators'] = \Drupal::service('renderer')->render($data['generators']);
     $row['status'] = $entity->status() ? $this->t('Enabled') : $this->t('Disabled');
 
     return $row + parent::buildRow($entity);
diff --git a/tests/src/Functional/EntityActivityBrowserTest.php b/tests/src/Functional/EntityActivityBrowserTest.php
index 52f58d7..47a59f7 100644
--- a/tests/src/Functional/EntityActivityBrowserTest.php
+++ b/tests/src/Functional/EntityActivityBrowserTest.php
@@ -43,7 +43,7 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->subscription1 = $this->createSubscription($this->user1, $this->term1);
     $this->subscription2 = $this->createSubscription($this->user1, $this->user2);
@@ -62,7 +62,7 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
     $this->drupalGet($this->article1->toUrl());
     $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->buttonExists('Subscribe');
-    $this->assertText('Subscribe');
+    $this->assertSession()->pageTextContains('Subscribe');
 
     $this->drupalGet('user/' . $this->user1->id() . '/subscriptions');
     $this->assertSession()->statusCodeEquals(200);
@@ -104,19 +104,19 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
     $this->drupalLogin($this->advancedUser);
     $this->drupalGet('taxonomy/term/' . $this->term1->id() . '/list-subscribers');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText($this->user1->getDisplayName());
+    $this->assertSession()->pageTextContains($this->user1->getDisplayName());
 
     $this->drupalLogout();
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('taxonomy/term/' . $this->term1->id() . '/list-subscribers');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText($this->user1->getDisplayName());
+    $this->assertSession()->pageTextContains($this->user1->getDisplayName());
 
     $this->drupalLogout();
     $this->drupalLogin($this->user1);
     $this->drupalGet($this->term1->toUrl());
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertNoText('Subscribers');
+    $this->assertSession()->pageTextNotContains('Subscribers');
     $this->drupalGet('taxonomy/term/' . $this->term1->id() . '/list-subscribers');
     $this->assertSession()->statusCodeEquals(403);
   }
@@ -129,9 +129,9 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
   public function testGenerationLogsByReference() {
     // User 1 has a subscription on User 2 and on Term 1.
     $subscriptions = $this->subscriptionStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(2, count($subscriptions));
+    $this->assertEquals(2, count($subscriptions));
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(0, count($logs));
+    $this->assertEquals(0, count($logs));
 
     $this->drupalLogin($this->user2);
     $new_article = Node::create([
@@ -145,12 +145,12 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
     $new_article->save();
 
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(1, count($logs));
+    $this->assertEquals(1, count($logs));
 
     $this->drupalLogout();
     $this->drupalLogin($this->user1);
     $this->drupalGet('user/' . $this->user1->id() . '/logs');
-    $this->assertText('The content New Article has been created by ' . $this->user2->getDisplayName() . '. Log with the generator test_insert.');
+    $this->assertSession()->pageTextContains('The content New Article has been created by ' . $this->user2->getDisplayName() . '. Log with the generator test_insert.');
 
     $this->drupalLogout();
     $this->drupalLogin($this->user2);
@@ -158,24 +158,24 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
 
     // $this->logStorage->resetCache();
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(2, count($logs));
+    $this->assertEquals(2, count($logs));
 
     $this->drupalLogout();
     $this->drupalLogin($this->user1);
     $this->drupalGet('user/' . $this->user1->id() . '/logs');
-    $this->assertText('The content Article 1 has been updated by ' . $this->user2->getDisplayName() . '. Log with the generator test_update_term.');
+    $this->assertSession()->pageTextContains('The content Article 1 has been updated by ' . $this->user2->getDisplayName() . '. Log with the generator test_update_term.');
 
     $this->drupalLogout();
     $this->drupalLogin($this->user2);
     $new_article->delete();
 
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(3, count($logs));
+    $this->assertEquals(3, count($logs));
 
     $this->drupalLogout();
     $this->drupalLogin($this->user1);
     $this->drupalGet('user/' . $this->user1->id() . '/logs');
-    $this->assertText('The content New Article has been deleted by ' . $this->user2->getDisplayName() . '. Log with the generator test_delete.');
+    $this->assertSession()->pageTextContains('The content New Article has been deleted by ' . $this->user2->getDisplayName() . '. Log with the generator test_delete.');
 
     $config = \Drupal::configFactory()->getEditable('entity_activity.generator.test_insert');
     $config->set('generators.node.use_cron', TRUE);
@@ -194,18 +194,18 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
     $another_article->save();
 
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(3, count($logs));
+    $this->assertEquals(3, count($logs));
     $this->assertEquals(1, \Drupal::queue('entity_activity_log_generator_worker')->numberOfItems());
     $this->container->get('cron')->run();
 
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(4, count($logs));
+    $this->assertEquals(4, count($logs));
     $this->assertEquals(0, \Drupal::queue('entity_activity_log_generator_worker')->numberOfItems());
 
     $this->drupalLogout();
     $this->drupalLogin($this->user1);
     $this->drupalGet('user/' . $this->user1->id() . '/logs');
-    $this->assertText('The content Another Article has been created by ' . $this->user2->getDisplayName() . '. Log with the generator test_insert.');
+    $this->assertSession()->pageTextContains('The content Another Article has been created by ' . $this->user2->getDisplayName() . '. Log with the generator test_insert.');
     $this->drupalLogout();
 
     // Delete user 1.
@@ -222,8 +222,9 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
     $edit = [];
     $edit[$title_key] = 'Another Article';
     $edit[$body_key] = 'The body of the another article';
-    $this->drupalPostForm('node/add/article', $edit, $this->t('Save'));
-    $this->assertText('Another Article');
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, $this->t('Save'));
+    $this->assertSession()->pageTextContains('Another Article');
     $this->assertSession()->statusCodeEquals(200);
 
     // Check that the node exists in the database.
@@ -261,14 +262,14 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
     }
 
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(5, count($logs));
+    $this->assertEquals(5, count($logs));
     $time = $this->container->get('datetime.time');
     $tree_day_ago = $time->getRequestTime() - (86400 * 3);
     $log = reset($logs);
     $log->set('created', $tree_day_ago)->save();
     $this->container->get('cron')->run();
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(4, count($logs));
+    $this->assertEquals(4, count($logs));
 
     $purge = [
       'method' => 'time',
@@ -284,11 +285,11 @@ class EntityActivityBrowserTest extends EntityActivityBrowserTestBase {
     $log->set('created', $tree_day_ago)->save();
     $this->container->get('cron')->run();
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(4, count($logs));
+    $this->assertEquals(4, count($logs));
     $log->set('read', TRUE)->save();
     $this->container->get('cron')->run();
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(3, count($logs));
+    $this->assertEquals(3, count($logs));
   }
 
 }
diff --git a/tests/src/Functional/EntityActivityBrowserTestBase.php b/tests/src/Functional/EntityActivityBrowserTestBase.php
index 411c5d0..1a43a59 100644
--- a/tests/src/Functional/EntityActivityBrowserTestBase.php
+++ b/tests/src/Functional/EntityActivityBrowserTestBase.php
@@ -154,7 +154,7 @@ abstract class EntityActivityBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->entityTypeManager = $this->container->get('entity_type.manager');
     $this->subscriptionStorage = $this->entityTypeManager->getStorage('entity_activity_subscription');
diff --git a/tests/src/FunctionalJavascript/EntityActivityWebDriverTest.php b/tests/src/FunctionalJavascript/EntityActivityWebDriverTest.php
index 962ec4d..ec24db5 100644
--- a/tests/src/FunctionalJavascript/EntityActivityWebDriverTest.php
+++ b/tests/src/FunctionalJavascript/EntityActivityWebDriverTest.php
@@ -17,7 +17,7 @@ class EntityActivityWebDriverTest extends EntityActivityWebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->advancedUser);
   }
@@ -53,7 +53,7 @@ class EntityActivityWebDriverTest extends EntityActivityWebDriverTestBase {
     $this->article1->set('body', 'This is the value of Article 1 body')->save();
 
     $logs = $this->logStorage->loadMultipleUnreadByOwner($this->advancedUser);
-    $this->assertEqual(1, count($logs));
+    $this->assertEquals(1, count($logs));
 
     $this->drupalGet('user/' . $this->advancedUser->id() . '/logs');
     $this->waitForAjaxToFinish();
@@ -68,10 +68,10 @@ class EntityActivityWebDriverTest extends EntityActivityWebDriverTestBase {
     $this->waitForAjaxToFinish();
 
     $logs = $this->logStorage->loadMultipleUnreadByOwner($this->advancedUser);
-    $this->assertEqual(0, count($logs));
+    $this->assertEquals(0, count($logs));
 
     $logs = $this->logStorage->loadMultipleByOwner($this->advancedUser);
-    $this->assertEqual(1, count($logs));
+    $this->assertEquals(1, count($logs));
 
     $page->pressButton('Remove');
     $this->waitForAjaxToFinish();
@@ -79,7 +79,7 @@ class EntityActivityWebDriverTest extends EntityActivityWebDriverTestBase {
     $page = $this->getSession()->getPage();
     $this->assertNotTrue($page->hasContent('The content Article 1 has been updated'));
     $logs = $this->logStorage->loadMultipleByOwner($this->advancedUser);
-    $this->assertEqual(0, count($logs));
+    $this->assertEquals(0, count($logs));
 
     // Check subscriptions page and Remove button.
     $this->drupalGet('user/' . $this->advancedUser->id() . '/subscriptions');
@@ -127,7 +127,7 @@ class EntityActivityWebDriverTest extends EntityActivityWebDriverTestBase {
     $this->article1->set('body', 'This is the value of Article 1 body')->save();
 
     $logs = $this->logStorage->loadMultipleUnreadByOwner($this->user1);
-    $this->assertEqual(1, count($logs));
+    $this->assertEquals(1, count($logs));
 
     $this->drupalGet('user/' . $this->user1->id() . '/logs');
     $this->waitForAjaxToFinish();
@@ -142,10 +142,10 @@ class EntityActivityWebDriverTest extends EntityActivityWebDriverTestBase {
     $this->waitForAjaxToFinish();
 
     $logs = $this->logStorage->loadMultipleUnreadByOwner($this->user1);
-    $this->assertEqual(0, count($logs));
+    $this->assertEquals(0, count($logs));
 
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(1, count($logs));
+    $this->assertEquals(1, count($logs));
 
     $page->pressButton('Remove');
     $this->waitForAjaxToFinish();
@@ -153,7 +153,7 @@ class EntityActivityWebDriverTest extends EntityActivityWebDriverTestBase {
     $page = $this->getSession()->getPage();
     $this->assertNotTrue($page->hasContent('The content Article 1 has been updated'));
     $logs = $this->logStorage->loadMultipleByOwner($this->user1);
-    $this->assertEqual(0, count($logs));
+    $this->assertEquals(0, count($logs));
 
     // Check subscriptions page and Remove button.
     $this->drupalGet('user/' . $this->user1->id() . '/subscriptions');
diff --git a/tests/src/FunctionalJavascript/EntityActivityWebDriverTestBase.php b/tests/src/FunctionalJavascript/EntityActivityWebDriverTestBase.php
index 9f564ac..5306408 100644
--- a/tests/src/FunctionalJavascript/EntityActivityWebDriverTestBase.php
+++ b/tests/src/FunctionalJavascript/EntityActivityWebDriverTestBase.php
@@ -140,7 +140,7 @@ abstract class EntityActivityWebDriverTestBase extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->entityTypeManager = $this->container->get('entity_type.manager');
     $this->subscriptionStorage = $this->entityTypeManager->getStorage('entity_activity_subscription');
