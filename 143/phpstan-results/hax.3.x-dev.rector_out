modules/contrib/hax/hax.install
modules/contrib/hax/hax.module
modules/contrib/hax/src/Controller/HaxController.php
modules/contrib/hax/src/Form/HaxSettings.php
modules/contrib/hax/src/HaxService.php

2 files with changes
====================

1) modules/contrib/hax/src/Controller/HaxController.php:190

    ---------- begin diff ----------
@@ @@
           $file_wrapper = 'public';
         }
         // See if Drupal can load from this data source.
-        if ($file = file_save_data($data, $file_wrapper . '://' . $upload['name'])) {
+        if ($file = \Drupal::service('file.repository')->writeData($data, $file_wrapper . '://' . $upload['name'])) {
           $uri = str_replace($GLOBALS['base_url'] . '/', $GLOBALS['base_path'],file_create_url($file->getFileUri()));
           $return = array(
             'file' => array(
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/hax/hax.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Form\FormStateInterface;
 /**
  * @file
  * Headless Authoring eXperience, accept calls and make things haxable.
@@ @@
 /**
  * Alter the form so that we can easily integrate our singular element form w/ Drupal
  */
-function hax_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function hax_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   if (isset($form['#attributes']['class'][0]) && $form['#attributes']['class'][0] == 'hax-settings') {
     $form['#attached']['library'][] = 'hax/hax-form-helper';
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

