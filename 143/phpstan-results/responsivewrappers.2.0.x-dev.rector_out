modules/contrib/responsivewrappers/responsivewrappers.module
modules/contrib/responsivewrappers/src/Form/ResponsiveWrappersSettings.php
modules/contrib/responsivewrappers/src/Plugin/Filter/FilterResponsiveWrappers.php
modules/contrib/responsivewrappers/tests/src/Functional/ResponsiveWrappersTest.php

1 file with changes
===================

1) modules/contrib/responsivewrappers/tests/src/Functional/ResponsiveWrappersTest.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->user = $this->drupalCreateUser([
@@ @@
       'filters[filter_bootstrap_responsive_wrapper][settings][responsive_table]' => TRUE,
       'filters[filter_bootstrap_responsive_wrapper][settings][responsive_image]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');

     // Tests the node output with responsive wrappers filter enabled. Bootstrap
     // 4 output by default.
@@ @@

     // Set Bootstrap 3 output.
     $this->drupalGet('admin/config/content/responsivewrappers');
-    $this->drupalPostForm(NULL, ['version' => 3], 'Save configuration');
+    $this->submitForm(['version' => 3], 'Save configuration');
     // Update node to apply new filter settings.
     $this->node->setTitle('Responsive filter test B3');
     $this->node->save();
@@ @@

     // Set Bootstrap 5 output.
     $this->drupalGet('admin/config/content/responsivewrappers');
-    $this->drupalPostForm(NULL, ['version' => 5], 'Save configuration');
+    $this->submitForm(['version' => 5], 'Save configuration');
     // Update node to apply new filter settings.
     $this->node->setTitle('Responsive filter test B5');
     $this->node->save();
@@ @@

     // Set Custom image class.
     $this->drupalGet('admin/config/content/responsivewrappers');
-    $this->drupalPostForm(NULL, ['version' => 0, 'image_class' => 'holi'], 'Save configuration');
+    $this->submitForm(['version' => 0, 'image_class' => 'holi'], 'Save configuration');
     // Update node to apply new filter settings.
     $this->node->setTitle('Responsive filter test Custom');
     $this->node->save();
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

