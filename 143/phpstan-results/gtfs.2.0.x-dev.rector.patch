diff --git a/gtfs.module b/gtfs.module
index 27ed090..a244c67 100755
--- a/gtfs.module
+++ b/gtfs.module
@@ -1,4 +1,6 @@
-<?php /** @noinspection PhpUnused */
+<?php use Drupal\gtfs\Entity\Stop;
+use Drupal\gtfs\Entity\FeedInterface;
+/** @noinspection PhpUnused */
 
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -58,7 +60,7 @@ function gtfs_gtfs_yasumi_provider_alter(&$provider) {
  */
 function gtfs_gtfs_import_entities_alter(&$map) {
   // Get and parse the .yml file.
-  $file_entity_yaml = file_get_contents(drupal_get_path('module', 'gtfs') . '/file_entity_map.yml');
+  $file_entity_yaml = file_get_contents(\Drupal::service('extension.list.module')->getPath('gtfs') . '/file_entity_map.yml');
   $file_entity_map = Yaml::parse($file_entity_yaml);
   // Merge with the map being altered
   $map = array_merge($map, $file_entity_map);
@@ -334,8 +336,8 @@ function gtfs_gtfs_post_import_batch_stop_alter(&$operations, $feed_id) {
 
 function gtfs_add_parent_station_to_stop($stop_id, $parent_station_id, $feed_id) {
   try {
-    $station_entity = \Drupal\gtfs\Entity\Stop::getById($stop_id, $feed_id);
-    $parent_station = \Drupal\gtfs\Entity\Stop::getById($parent_station_id, $feed_id);
+    $station_entity = Stop::getById($stop_id, $feed_id);
+    $parent_station = Stop::getById($parent_station_id, $feed_id);
   } catch (\Throwable $e) {
     \Drupal::logger('Invalid import')->notice($e->getMessage());
   }
@@ -382,9 +384,9 @@ function gtfs_repair_source_table_routes($feed_id) {
     ->execute();
 }
 
-function gtfs_gtfs_prepare_post_source_table_alter(&$batch, \Drupal\gtfs\Entity\FeedInterface $feed) {
+function gtfs_gtfs_prepare_post_source_table_alter(&$batch, FeedInterface $feed) {
   $batch['operations'] = [
     'gtfs_repair_source_table_routes',
     [$feed->id()]
   ];
-}
\ No newline at end of file
+}
diff --git a/src/Commands/ImportCommands.php b/src/Commands/ImportCommands.php
index 17111b1..84693d7 100644
--- a/src/Commands/ImportCommands.php
+++ b/src/Commands/ImportCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gtfs\Commands;
 
+use Drupal\gtfs\Entity\Feed\Downloader;
 use Drupal\Core\Database\Database;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\EntityTypeRepositoryInterface;
@@ -69,7 +70,7 @@ class ImportCommands extends DrushCommands {
   public function importFeed($feedId, $options = ['entities' => 'all']) {
     $this->logger()->notice("Beginning to import feed {$feedId}");
     $feed = Feed::load($feedId);
-    $downloader = new Feed\Downloader($feed);
+    $downloader = new Downloader($feed);
     $this->logger()->notice("Downloading feed");
     $batch = $downloader->batch();
     $batch['sets'] = [];
diff --git a/src/Entity/GTFSEntityBase.php b/src/Entity/GTFSEntityBase.php
index 5205488..64f0eb3 100755
--- a/src/Entity/GTFSEntityBase.php
+++ b/src/Entity/GTFSEntityBase.php
@@ -107,7 +107,7 @@ abstract class GTFSEntityBase extends RevisionableContentEntityBase implements G
         case 'file':
         case 'image':
           $obj = $this->get($name)->get(0);
-          $value = $obj ? file_create_url(File::load($obj->target_id)->getFileUri()) : '';
+          $value = $obj ? \Drupal::service('file_url_generator')->generateAbsoluteString(File::load($obj->target_id)->getFileUri()) : '';
           break;
         default:
           $value = $this->get($name)->value;
diff --git a/src/Entity/Route.php b/src/Entity/Route.php
index 6395426..88e9c7c 100755
--- a/src/Entity/Route.php
+++ b/src/Entity/Route.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gtfs\Entity;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -150,7 +151,7 @@ class Route extends GTFSEntityBase implements GeodataInterface {
    * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
    * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
    */
-  public function agency(): \Drupal\Core\Entity\EntityInterface {
+  public function agency(): EntityInterface {
     return Drupal::entityTypeManager()->getStorage('gtfs_agency')->load($this->get('agency_id')->target_id);
   }
 
diff --git a/src/Form/AgencyRevisionRevertForm.php b/src/Form/AgencyRevisionRevertForm.php
index 18bfe10..c2de9c0 100755
--- a/src/Form/AgencyRevisionRevertForm.php
+++ b/src/Form/AgencyRevisionRevertForm.php
@@ -147,7 +147,7 @@ class AgencyRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/AgencyRevisionRevertTranslationForm.php b/src/Form/AgencyRevisionRevertTranslationForm.php
index 957f0d3..5461fe2 100755
--- a/src/Form/AgencyRevisionRevertTranslationForm.php
+++ b/src/Form/AgencyRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class AgencyRevisionRevertTranslationForm extends AgencyRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/CalendarDateRevisionRevertForm.php b/src/Form/CalendarDateRevisionRevertForm.php
index 02a1030..e3d88d9 100755
--- a/src/Form/CalendarDateRevisionRevertForm.php
+++ b/src/Form/CalendarDateRevisionRevertForm.php
@@ -151,7 +151,7 @@ class CalendarDateRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/CalendarDateRevisionRevertTranslationForm.php b/src/Form/CalendarDateRevisionRevertTranslationForm.php
index 9193e72..7b5682f 100755
--- a/src/Form/CalendarDateRevisionRevertTranslationForm.php
+++ b/src/Form/CalendarDateRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class CalendarDateRevisionRevertTranslationForm extends CalendarDateRevisionReve
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/DirectionRevisionDeleteForm.php b/src/Form/DirectionRevisionDeleteForm.php
index b4d6a8f..9491652 100755
--- a/src/Form/DirectionRevisionDeleteForm.php
+++ b/src/Form/DirectionRevisionDeleteForm.php
@@ -73,7 +73,7 @@ class DirectionRevisionDeleteForm extends ConfirmFormBase {
    * {@inheritdoc}
    */
   public function getQuestion() {
-    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => format_date($this->revision->getRevisionCreationTime())]);
+    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime())]);
   }
 
   /**
@@ -107,7 +107,7 @@ class DirectionRevisionDeleteForm extends ConfirmFormBase {
     $this->DirectionStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Direction: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Direction %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Direction %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.gtfs_direction.canonical',
        ['gtfs_direction' => $this->revision->id()]
diff --git a/src/Form/DirectionRevisionRevertForm.php b/src/Form/DirectionRevisionRevertForm.php
index 44355b8..8b2825a 100755
--- a/src/Form/DirectionRevisionRevertForm.php
+++ b/src/Form/DirectionRevisionRevertForm.php
@@ -141,7 +141,7 @@ class DirectionRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/DirectionRevisionRevertTranslationForm.php b/src/Form/DirectionRevisionRevertTranslationForm.php
index 4763221..799992b 100755
--- a/src/Form/DirectionRevisionRevertTranslationForm.php
+++ b/src/Form/DirectionRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class DirectionRevisionRevertTranslationForm extends DirectionRevisionRevertForm
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/FareAttributeRevisionRevertForm.php b/src/Form/FareAttributeRevisionRevertForm.php
index 015d7ca..838c733 100755
--- a/src/Form/FareAttributeRevisionRevertForm.php
+++ b/src/Form/FareAttributeRevisionRevertForm.php
@@ -148,7 +148,7 @@ class FareAttributeRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/FareAttributeRevisionRevertTranslationForm.php b/src/Form/FareAttributeRevisionRevertTranslationForm.php
index be679cd..3c30fa0 100755
--- a/src/Form/FareAttributeRevisionRevertTranslationForm.php
+++ b/src/Form/FareAttributeRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class FareAttributeRevisionRevertTranslationForm extends FareAttributeRevisionRe
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/FeedForm.php b/src/Form/FeedForm.php
index c29ec1c..7906f34 100755
--- a/src/Form/FeedForm.php
+++ b/src/Form/FeedForm.php
@@ -43,7 +43,7 @@ class FeedForm extends ContentEntityForm {
       $entity->setNewRevision();
 
       // If a new revision is created, save the current user as revision author.
-      $entity->setRevisionCreationTime(REQUEST_TIME);
+      $entity->setRevisionCreationTime(\Drupal::time()->getRequestTime());
       $entity->setRevisionUserId(Drupal::currentUser()->id());
     }
     else {
diff --git a/src/Form/FeedRevisionRevertForm.php b/src/Form/FeedRevisionRevertForm.php
index d746bed..a123094 100755
--- a/src/Form/FeedRevisionRevertForm.php
+++ b/src/Form/FeedRevisionRevertForm.php
@@ -147,7 +147,7 @@ class FeedRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(FeedInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/FeedRevisionRevertTranslationForm.php b/src/Form/FeedRevisionRevertTranslationForm.php
index adee9ea..324881f 100755
--- a/src/Form/FeedRevisionRevertTranslationForm.php
+++ b/src/Form/FeedRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class FeedRevisionRevertTranslationForm extends FeedRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/FrequencyRevisionDeleteForm.php b/src/Form/FrequencyRevisionDeleteForm.php
index e7d3420..4346fc1 100755
--- a/src/Form/FrequencyRevisionDeleteForm.php
+++ b/src/Form/FrequencyRevisionDeleteForm.php
@@ -73,7 +73,7 @@ class FrequencyRevisionDeleteForm extends ConfirmFormBase {
    * {@inheritdoc}
    */
   public function getQuestion() {
-    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => format_date($this->revision->getRevisionCreationTime())]);
+    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime())]);
   }
 
   /**
@@ -107,7 +107,7 @@ class FrequencyRevisionDeleteForm extends ConfirmFormBase {
     $this->FrequencyStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Frequency: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Frequency %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Frequency %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.gtfs_frequency.canonical',
        ['gtfs_frequency' => $this->revision->id()]
diff --git a/src/Form/FrequencyRevisionRevertForm.php b/src/Form/FrequencyRevisionRevertForm.php
index 1a96522..b951001 100755
--- a/src/Form/FrequencyRevisionRevertForm.php
+++ b/src/Form/FrequencyRevisionRevertForm.php
@@ -147,7 +147,7 @@ class FrequencyRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/FrequencyRevisionRevertTranslationForm.php b/src/Form/FrequencyRevisionRevertTranslationForm.php
index 677b232..7b99656 100755
--- a/src/Form/FrequencyRevisionRevertTranslationForm.php
+++ b/src/Form/FrequencyRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class FrequencyRevisionRevertTranslationForm extends FrequencyRevisionRevertForm
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/GTFSObjectForm.php b/src/Form/GTFSObjectForm.php
index 54ea785..7c4941e 100755
--- a/src/Form/GTFSObjectForm.php
+++ b/src/Form/GTFSObjectForm.php
@@ -44,7 +44,7 @@ class GTFSObjectForm extends ContentEntityForm {
       $entity->setNewRevision();
 
       // If a new revision is created, save the current user as revision author.
-      $entity->setRevisionCreationTime(REQUEST_TIME);
+      $entity->setRevisionCreationTime(\Drupal::time()->getRequestTime());
       $entity->setRevisionUserId(Drupal::currentUser()->id());
     }
     else {
diff --git a/src/Form/RouteRevisionDeleteForm.php b/src/Form/RouteRevisionDeleteForm.php
index 5ada749..faa6472 100755
--- a/src/Form/RouteRevisionDeleteForm.php
+++ b/src/Form/RouteRevisionDeleteForm.php
@@ -73,7 +73,7 @@ class RouteRevisionDeleteForm extends ConfirmFormBase {
    * {@inheritdoc}
    */
   public function getQuestion() {
-    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => format_date($this->revision->getRevisionCreationTime())]);
+    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime())]);
   }
 
   /**
@@ -107,7 +107,7 @@ class RouteRevisionDeleteForm extends ConfirmFormBase {
     $this->RouteStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Route: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Route %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Route %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.gtfs_route.canonical',
        ['gtfs_route' => $this->revision->id()]
diff --git a/src/Form/RouteRevisionRevertForm.php b/src/Form/RouteRevisionRevertForm.php
index c42fc04..57308ad 100755
--- a/src/Form/RouteRevisionRevertForm.php
+++ b/src/Form/RouteRevisionRevertForm.php
@@ -141,7 +141,7 @@ class RouteRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/RouteRevisionRevertTranslationForm.php b/src/Form/RouteRevisionRevertTranslationForm.php
index e8c3dd2..df8acc6 100755
--- a/src/Form/RouteRevisionRevertTranslationForm.php
+++ b/src/Form/RouteRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class RouteRevisionRevertTranslationForm extends RouteRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/ServiceRevisionDeleteForm.php b/src/Form/ServiceRevisionDeleteForm.php
index cfab77c..6bf8f3d 100755
--- a/src/Form/ServiceRevisionDeleteForm.php
+++ b/src/Form/ServiceRevisionDeleteForm.php
@@ -73,7 +73,7 @@ class ServiceRevisionDeleteForm extends ConfirmFormBase {
    * {@inheritdoc}
    */
   public function getQuestion() {
-    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => format_date($this->revision->getRevisionCreationTime())]);
+    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime())]);
   }
 
   /**
@@ -107,7 +107,7 @@ class ServiceRevisionDeleteForm extends ConfirmFormBase {
     $this->ServiceStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Service: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Service %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Service %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.gtfs_service.canonical',
        ['gtfs_service' => $this->revision->id()]
diff --git a/src/Form/ServiceRevisionRevertForm.php b/src/Form/ServiceRevisionRevertForm.php
index 0d18d65..e0bc8e4 100755
--- a/src/Form/ServiceRevisionRevertForm.php
+++ b/src/Form/ServiceRevisionRevertForm.php
@@ -141,7 +141,7 @@ class ServiceRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/ServiceRevisionRevertTranslationForm.php b/src/Form/ServiceRevisionRevertTranslationForm.php
index 1aa535d..9ca1602 100755
--- a/src/Form/ServiceRevisionRevertTranslationForm.php
+++ b/src/Form/ServiceRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class ServiceRevisionRevertTranslationForm extends ServiceRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/ShapeRevisionDeleteForm.php b/src/Form/ShapeRevisionDeleteForm.php
index 69f2033..e18c6fa 100755
--- a/src/Form/ShapeRevisionDeleteForm.php
+++ b/src/Form/ShapeRevisionDeleteForm.php
@@ -73,7 +73,7 @@ class ShapeRevisionDeleteForm extends ConfirmFormBase {
    * {@inheritdoc}
    */
   public function getQuestion() {
-    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => format_date($this->revision->getRevisionCreationTime())]);
+    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime())]);
   }
 
   /**
@@ -107,7 +107,7 @@ class ShapeRevisionDeleteForm extends ConfirmFormBase {
     $this->ShapeStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Shape: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Shape %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Shape %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.gtfs_shape.canonical',
        ['gtfs_shape' => $this->revision->id()]
diff --git a/src/Form/ShapeRevisionRevertForm.php b/src/Form/ShapeRevisionRevertForm.php
index 71f8f50..23f4e4c 100755
--- a/src/Form/ShapeRevisionRevertForm.php
+++ b/src/Form/ShapeRevisionRevertForm.php
@@ -141,7 +141,7 @@ class ShapeRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/ShapeRevisionRevertTranslationForm.php b/src/Form/ShapeRevisionRevertTranslationForm.php
index 8884734..468f121 100755
--- a/src/Form/ShapeRevisionRevertTranslationForm.php
+++ b/src/Form/ShapeRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class ShapeRevisionRevertTranslationForm extends ShapeRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/StopRevisionDeleteForm.php b/src/Form/StopRevisionDeleteForm.php
index 25a5ae1..37d44f7 100755
--- a/src/Form/StopRevisionDeleteForm.php
+++ b/src/Form/StopRevisionDeleteForm.php
@@ -73,7 +73,7 @@ class StopRevisionDeleteForm extends ConfirmFormBase {
    * {@inheritdoc}
    */
   public function getQuestion() {
-    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => format_date($this->revision->getRevisionCreationTime())]);
+    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime())]);
   }
 
   /**
@@ -107,7 +107,7 @@ class StopRevisionDeleteForm extends ConfirmFormBase {
     $this->StopStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Stop: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Stop %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Stop %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.gtfs_stop.canonical',
        ['gtfs_stop' => $this->revision->id()]
diff --git a/src/Form/StopRevisionRevertForm.php b/src/Form/StopRevisionRevertForm.php
index 17dbfeb..083cd5d 100755
--- a/src/Form/StopRevisionRevertForm.php
+++ b/src/Form/StopRevisionRevertForm.php
@@ -141,7 +141,7 @@ class StopRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/StopRevisionRevertTranslationForm.php b/src/Form/StopRevisionRevertTranslationForm.php
index 83f017f..89b566e 100755
--- a/src/Form/StopRevisionRevertTranslationForm.php
+++ b/src/Form/StopRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class StopRevisionRevertTranslationForm extends StopRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/StopTimeRevisionDeleteForm.php b/src/Form/StopTimeRevisionDeleteForm.php
index 3b29c4c..a4e3ef5 100755
--- a/src/Form/StopTimeRevisionDeleteForm.php
+++ b/src/Form/StopTimeRevisionDeleteForm.php
@@ -73,7 +73,7 @@ class StopTimeRevisionDeleteForm extends ConfirmFormBase {
    * {@inheritdoc}
    */
   public function getQuestion() {
-    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => format_date($this->revision->getRevisionCreationTime())]);
+    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime())]);
   }
 
   /**
@@ -107,7 +107,7 @@ class StopTimeRevisionDeleteForm extends ConfirmFormBase {
     $this->StopTimeStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Stop Time: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Stop Time %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Stop Time %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.gtfs_stop_time.canonical',
        ['gtfs_stop_time' => $this->revision->id()]
diff --git a/src/Form/StopTimeRevisionRevertForm.php b/src/Form/StopTimeRevisionRevertForm.php
index d45978f..302d2cd 100755
--- a/src/Form/StopTimeRevisionRevertForm.php
+++ b/src/Form/StopTimeRevisionRevertForm.php
@@ -141,7 +141,7 @@ class StopTimeRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/StopTimeRevisionRevertTranslationForm.php b/src/Form/StopTimeRevisionRevertTranslationForm.php
index 5de30d2..c587684 100755
--- a/src/Form/StopTimeRevisionRevertTranslationForm.php
+++ b/src/Form/StopTimeRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class StopTimeRevisionRevertTranslationForm extends StopTimeRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/TripRevisionDeleteForm.php b/src/Form/TripRevisionDeleteForm.php
index 932614d..1059543 100755
--- a/src/Form/TripRevisionDeleteForm.php
+++ b/src/Form/TripRevisionDeleteForm.php
@@ -73,7 +73,7 @@ class TripRevisionDeleteForm extends ConfirmFormBase {
    * {@inheritdoc}
    */
   public function getQuestion() {
-    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => format_date($this->revision->getRevisionCreationTime())]);
+    return t('Are you sure you want to delete the revision from %revision-date?', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime())]);
   }
 
   /**
@@ -107,7 +107,7 @@ class TripRevisionDeleteForm extends ConfirmFormBase {
     $this->TripStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('Trip: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Trip %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    \Drupal::messenger()->addMessage(t('Revision from %revision-date of Trip %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.gtfs_trip.canonical',
        ['gtfs_trip' => $this->revision->id()]
diff --git a/src/Form/TripRevisionRevertForm.php b/src/Form/TripRevisionRevertForm.php
index 1e22935..00424b8 100755
--- a/src/Form/TripRevisionRevertForm.php
+++ b/src/Form/TripRevisionRevertForm.php
@@ -141,7 +141,7 @@ class TripRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GTFSObjectInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/TripRevisionRevertTranslationForm.php b/src/Form/TripRevisionRevertTranslationForm.php
index 85d7dce..3da2c56 100755
--- a/src/Form/TripRevisionRevertTranslationForm.php
+++ b/src/Form/TripRevisionRevertTranslationForm.php
@@ -107,7 +107,7 @@ class TripRevisionRevertTranslationForm extends TripRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Plugin/rest/resource/StopDirectionResource.php b/src/Plugin/rest/resource/StopDirectionResource.php
index 1d56bc2..d6b8d26 100755
--- a/src/Plugin/rest/resource/StopDirectionResource.php
+++ b/src/Plugin/rest/resource/StopDirectionResource.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gtfs\Plugin\rest\resource;
 
+use Drupal\gtfs\Entity\Service;
 use Drupal;
 use Drupal\gtfs\Entity\Stop;
 use PDO;
@@ -163,7 +164,7 @@ class StopDirectionResource extends GTFSResourceBase {
       }
       if (!$direction) continue;
       $data[$key] = $direction->toGTFSObject();
-      $data[$key]['service'] = Drupal\gtfs\Entity\Service::load($trip['service_id'])->toGTFSObject();
+      $data[$key]['service'] = Service::load($trip['service_id'])->toGTFSObject();
       $data[$key]['route'] = $direction->route()->toGTFSObject();
     }
 
