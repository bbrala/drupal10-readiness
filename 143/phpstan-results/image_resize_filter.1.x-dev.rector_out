modules/contrib/image_resize_filter/image_resize_filter.install
modules/contrib/image_resize_filter/image_resize_filter.module
modules/contrib/image_resize_filter/src/Plugin/Filter/FilterImageLinkToSource.php
modules/contrib/image_resize_filter/src/Plugin/Filter/FilterImageResize.php
modules/contrib/image_resize_filter/tests/src/Functional/ResizeImageTest.php

3 files with changes
====================

1) modules/contrib/image_resize_filter/tests/src/Functional/ResizeImageTest.php:37

    ---------- begin diff ----------
@@ @@
   protected $webUser;


-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Setup Filtered HTML text format.
@@ @@
       'uuid' => 'thisisauuid',
     ]);
     $file->save();
-    $relative_path = file_url_transform_relative(file_create_url($uri));
+    $relative_path = \Drupal::service('file_url_generator')->generateString($uri);
     $images['inline-image'] = '<img alt="This is a description" data-entity-type="file" data-entity-uuid="' . $file->uuid() . '" height="50" src="' . $relative_path . '" width="44">';
     $comment = [];
     foreach ($images as $key => $img) {
@@ @@
     $edit = array(
       'comment_body[0][value]' => implode("\n", $comment),
     );
-    $this->drupalPostForm('node/' . $this->node->id(), $edit, t('Save'));
+    $this->drupalGet('node/' . $this->node->id());
+    $this->submitForm($edit, t('Save'));
     $expected = 'public://resize/' . $image->name . '-44x50.png';
-    $expected_relative_path = file_url_transform_relative(file_create_url($expected));
-    $this->assertNoRaw($relative_path, 'The original image is gone.');
-    $this->assertRaw($expected_relative_path, 'The resize version was found.');
+    $expected_relative_path = \Drupal::service('file_url_generator')->generateString($expected);
+    $this->assertSession()->responseNotContains($relative_path);
+    $this->assertSession()->responseContains($expected_relative_path);
     $this->assertTrue(file_exists($expected), 'The resize file exists.');
   }
    ----------- end diff -----------

Applied rules:
 * AssertNoRawRector
 * AssertRawRector
 * FileUrlTransformRelativeRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/image_resize_filter/src/Plugin/Filter/FilterImageResize.php:140

    ---------- begin diff ----------
@@ @@
           $image['destination'] = $this->systemFileConfig->get('default_scheme') . '://' . $local_file_path;
         }
         else {
-          $image['destination'] = file_default_scheme() . '://' . $local_file_path;
+          $image['destination'] = \Drupal::config('system.file')->get('default_scheme') . '://' . $local_file_path;
         }
       }
       // Destination and local path are the same if we're just adding attributes.
@@ @@
           $local_file_dir = $this->streamWrapperManager->getTarget($path_info['dirname']);
         }
         else {
-          $local_file_dir = file_uri_target($path_info['dirname']);
+          $local_file_dir = \Drupal::service('stream_wrapper_manager')->getTarget($path_info['dirname']);
         }
         $local_file_path = 'resize/' . ($local_file_dir ? $local_file_dir . '/' : '') . $path_info['filename'] . '-' . $image['expected_size']['width'] . 'x' . $image['expected_size']['height'] . '.' . $path_info['extension'];
         $image['destination'] = $path_info['scheme'] . '://' . $local_file_path;
    ----------- end diff -----------

Applied rules:
 * FileDefaultSchemeRector
 * FileUriTargetRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/image_resize_filter/image_resize_filter.module:319

    ---------- begin diff ----------
@@ @@
  *   Settings for the input filter.
  */
 function image_resize_filter_image_tag($image = NULL, $settings = NULL) {
-  $src = file_create_url($image['destination']);
+  $src = \Drupal::service('file_url_generator')->generateAbsoluteString($image['destination']);

   // Strip the http:// from the path if the original did not include it.
   if (!preg_match('/^http[s]?:\/\/' . preg_quote($_SERVER['HTTP_HOST']) . '/', $image['original'])) {
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

