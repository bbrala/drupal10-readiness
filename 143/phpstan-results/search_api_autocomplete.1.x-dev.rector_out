modules/contrib/search_api_autocomplete/search_api_autocomplete.api.php
modules/contrib/search_api_autocomplete/src/Entity/SearchStorage.php
modules/contrib/search_api_autocomplete/src/Suggester/SuggesterManager.php
modules/contrib/search_api_autocomplete/tests/search_api_autocomplete_test_hooks/search_api_autocomplete_test_hooks.search_api_autocomplete.inc
modules/contrib/search_api_autocomplete/tests/src/Functional/CacheInvalidationTest.php
modules/contrib/search_api_autocomplete/search_api_autocomplete.install
modules/contrib/search_api_autocomplete/src/Form/IndexOverviewForm.php
modules/contrib/search_api_autocomplete/src/Suggester/SuggesterPluginBase.php
modules/contrib/search_api_autocomplete/src/Suggestion/Suggestion.php
modules/contrib/search_api_autocomplete/search_api_autocomplete.module
modules/contrib/search_api_autocomplete/src/Suggestion/SuggestionFactory.php
modules/contrib/search_api_autocomplete/src/Suggestion/SuggestionInterface.php
modules/contrib/search_api_autocomplete/src/Tests/TestsHelper.php
modules/contrib/search_api_autocomplete/src/Annotation/SearchApiAutocompleteSearch.php
modules/contrib/search_api_autocomplete/src/Annotation/SearchApiAutocompleteSuggester.php
modules/contrib/search_api_autocomplete/src/Utility/AutocompleteHelper.php
modules/contrib/search_api_autocomplete/src/AutocompleteBackendInterface.php
modules/contrib/search_api_autocomplete/src/Controller/AutocompleteController.php
modules/contrib/search_api_autocomplete/tests/src/FunctionalJavascript/IntegrationTest.php
modules/contrib/search_api_autocomplete/src/Utility/AutocompleteHelperInterface.php
modules/contrib/search_api_autocomplete/src/Utility/PluginHelper.php
modules/contrib/search_api_autocomplete/src/Form/SearchEditForm.php
modules/contrib/search_api_autocomplete/src/Utility/PluginHelperInterface.php
modules/contrib/search_api_autocomplete/tests/search_api_autocomplete_test/core/custom_autocomplete_script.php
modules/contrib/search_api_autocomplete/tests/search_api_autocomplete_test/src/Plugin/search_api_autocomplete/search/TestSearch.php
modules/contrib/search_api_autocomplete/src/Element/SearchApiAutocomplete.php
modules/contrib/search_api_autocomplete/tests/search_api_autocomplete_test/src/Plugin/search_api_autocomplete/suggester/TestSuggester.php
modules/contrib/search_api_autocomplete/src/Entity/Search.php
modules/contrib/search_api_autocomplete/src/Permissions.php
modules/contrib/search_api_autocomplete/src/Plugin/PluginBase.php
modules/contrib/search_api_autocomplete/src/Plugin/PluginInterface.php
modules/contrib/search_api_autocomplete/src/Plugin/search_api_autocomplete/search/Page.php
modules/contrib/search_api_autocomplete/src/Plugin/search_api_autocomplete/search/PageDeriver.php
modules/contrib/search_api_autocomplete/src/Plugin/search_api_autocomplete/search/Views.php
modules/contrib/search_api_autocomplete/src/Plugin/search_api_autocomplete/search/ViewsDeriver.php
modules/contrib/search_api_autocomplete/src/Plugin/search_api_autocomplete/suggester/CustomScript.php
modules/contrib/search_api_autocomplete/src/Plugin/search_api_autocomplete/suggester/LiveResults.php
modules/contrib/search_api_autocomplete/tests/src/FunctionalJavascript/IntegrationTestBase.php
modules/contrib/search_api_autocomplete/tests/src/FunctionalJavascript/PagesIntegrationTest.php
modules/contrib/search_api_autocomplete/tests/src/Kernel/DependencyRemovalTest.php
modules/contrib/search_api_autocomplete/src/Plugin/search_api_autocomplete/suggester/Server.php
modules/contrib/search_api_autocomplete/tests/src/Kernel/SearchCrudTest.php
modules/contrib/search_api_autocomplete/src/Search/SearchPluginBase.php
modules/contrib/search_api_autocomplete/src/Search/SearchPluginDeriverBase.php
modules/contrib/search_api_autocomplete/src/Search/SearchPluginInterface.php
modules/contrib/search_api_autocomplete/src/Search/SearchPluginManager.php
modules/contrib/search_api_autocomplete/src/SearchApiAutocompleteException.php
modules/contrib/search_api_autocomplete/src/SearchInterface.php
modules/contrib/search_api_autocomplete/src/Suggester/SuggesterInterface.php
modules/contrib/search_api_autocomplete/tests/src/Kernel/ViewsTest.php
modules/contrib/search_api_autocomplete/tests/src/Unit/AccessTest.php
modules/contrib/search_api_autocomplete/tests/src/Unit/AutocompleteHelperTest.php
modules/contrib/search_api_autocomplete/tests/src/Unit/SuggestionFactoryTest.php

9 files with changes
====================

1) modules/contrib/search_api_autocomplete/search_api_autocomplete.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\search_api_autocomplete\Suggestion\Suggestion;
+use Drupal\search_api_autocomplete\SearchInterface;
+use Drupal\views\ViewExecutable;
 /**
  * @file
  * Hooks provided by the Search API autocomplete module.
@@ @@
   if (count($suggestions) >= $search->getOption('limit')) {
     array_pop($suggestions);
   }
-  $suggestions[] = new \Drupal\search_api_autocomplete\Suggestion\Suggestion('mandelbrot');
+  $suggestions[] = new Suggestion('mandelbrot');
 }

 /**
@@ @@
  * @param \Drupal\views\ViewExecutable $view
  *   The view for which to get the fulltext fields.
  */
-function hook_search_api_autocomplete_views_fulltext_fields_alter(array &$fields, \Drupal\search_api_autocomplete\SearchInterface $search, \Drupal\views\ViewExecutable $view) {
+function hook_search_api_autocomplete_views_fulltext_fields_alter(array &$fields, SearchInterface $search, ViewExecutable $view) {
   if ($view->id() === 'my_view' || $search->getIndexId() === 'my_index') {
     $fields[] = 'my_field';
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/search_api_autocomplete/tests/src/Unit/SuggestionFactoryTest.php:92

    ---------- begin diff ----------
@@ @@
   public function testCreateUrlSuggestion() {
     $factory = new SuggestionFactory('foo');
     /** @var \Drupal\Core\Url $url */
-    $url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock(Url::class);

     $suggestion = $factory->createUrlSuggestion($url, 'Foobar');
     $this->assertSame($url, $suggestion->getUrl());
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/search_api_autocomplete/tests/src/Unit/AccessTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * The search entity used in this test.
    *
-   * @var \Drupal\search_api_autocomplete\SearchInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\search_api_autocomplete\SearchInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $search;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $element_info = $this->createMock(ElementInfoManagerInterface::class);
@@ @@
       $this->search->method('getIndex')->willReturn($index);
     }

-    /** @var \Drupal\Core\Session\AccountInterface|\PHPUnit_Framework_MockObject_MockObject $account */
+    /** @var \Drupal\Core\Session\AccountInterface|\PHPUnit\Framework\MockObject\MockObject $account */
     $account = $this->createMock(AccountInterface::class);
     $permission = 'use search_api_autocomplete for ' . $this->search->id();
     $account->method('hasPermission')->willReturnMap([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/search_api_autocomplete/tests/src/Kernel/ViewsTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('entity_test_mulrev_changed');
@@ @@
       $this->assertStringContainsString('foobar', (string) $query);
     }
     else {
-      $this->assertContains('foobar', (string) $query);
+      $this->assertStringContainsString('foobar', (string) $query);
     }
     $conditions = $query->getConditionGroup()->getConditions();
     $conditions = $this->collectConditions($conditions);
    ----------- end diff -----------

Applied rules:
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/search_api_autocomplete/tests/src/Kernel/SearchCrudTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('search_api_task');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/search_api_autocomplete/tests/src/Kernel/DependencyRemovalTest.php:49

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Do not use a batch for tracking the initial items after creating an
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/search_api_autocomplete/tests/src/FunctionalJavascript/PagesIntegrationTest.php:52

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
@@ @@
     $edit = [
       'suggesters[settings][server][fields][body]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     $this->drupalGet('test-search');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/search_api_autocomplete/tests/src/FunctionalJavascript/IntegrationTest.php:56

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
@@ @@
     $keys = urlencode($keys);
     // @todo Replace with $assert_session->addressMatches() (and prepend "^")
     //   once we depend on Drupal 9.1+.
-    $this->assertRegExp("#/search-api-autocomplete-test\\?(?:.*&)?keys=$keys#", $this->getUrl());
+    $this->assertMatchesRegularExpression("#/search-api-autocomplete-test\\?(?:.*&)?keys=$keys#", $this->getUrl());

     // Check that autocomplete in the "Name" filter works, too, and that it sets
     // the correct fields on the query.
@@ @@
         $this->assertStringContainsString($this->searchId, $element->getAttribute('data-search-api-autocomplete-search'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
       }
       else {
-        $this->assertContains($this->searchId, $element->getAttribute('data-search-api-autocomplete-search'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
+        $this->assertStringContainsString($this->searchId, $element->getAttribute('data-search-api-autocomplete-search'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
       }
       $this->assertTrue($element->hasClass('form-autocomplete'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
    ----------- end diff -----------

Applied rules:
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameMethodRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/search_api_autocomplete/tests/src/Functional/CacheInvalidationTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Change the view to use an exposed form block.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 9 files have been changed by Rector                                       

