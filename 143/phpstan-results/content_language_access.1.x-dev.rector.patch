diff --git a/content_language_access.info.yml b/content_language_access.info.yml
index a5c96a2..3144c08 100644
--- a/content_language_access.info.yml
+++ b/content_language_access.info.yml
@@ -1,7 +1,6 @@
 name: Content Language Access
 description: Provides access checking of the current language of the site against the language of the content.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Access control
 dependencies:
   - drupal:language
diff --git a/src/Tests/ContentLanguageAccessContentDetectionEnabledTest.php b/src/Tests/ContentLanguageAccessContentDetectionEnabledTest.php
index e700ac1..3f19bd7 100644
--- a/src/Tests/ContentLanguageAccessContentDetectionEnabledTest.php
+++ b/src/Tests/ContentLanguageAccessContentDetectionEnabledTest.php
@@ -19,7 +19,7 @@ class ContentLanguageAccessContentDetectionEnabledTest extends ContentLanguageAc
   /**
    * Implements setUp().
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 	
 	// Enable content language detection.
@@ -31,7 +31,8 @@ class ContentLanguageAccessContentDetectionEnabledTest extends ContentLanguageAc
       'language_content[enabled][language-url]' => TRUE,
       'language_content[enabled][language-interface]' => FALSE,
     ];
-    $this->drupalPostForm('admin/config/regional/language/detection', $edit, t('Save settings'));
+ $this->drupalGet('admin/config/regional/language/detection');
+    $this->submitForm($edit, t('Save settings'));
   }
 
   /**
diff --git a/src/Tests/ContentLanguageAccessTestBase.php b/src/Tests/ContentLanguageAccessTestBase.php
index c8a7ca9..a07effc 100644
--- a/src/Tests/ContentLanguageAccessTestBase.php
+++ b/src/Tests/ContentLanguageAccessTestBase.php
@@ -59,7 +59,7 @@ abstract class ContentLanguageAccessTestBase extends BrowserTestBase {
   /**
    * Implements setUp().
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
@@ -99,12 +99,13 @@ abstract class ContentLanguageAccessTestBase extends BrowserTestBase {
     $this->contentType = $this->drupalCreateContentType();
     // Set the content type to use multilingual support.
     $this->drupalGet("admin/structure/types/manage/{$this->contentType->id()}");
-    $this->assertText(t('Language settings'), 'Multilingual support widget present on content type configuration form.');
+    $this->assertSession()->pageTextContains(t('Language settings'));
     $edit = [
       'language_configuration[language_alterable]' => TRUE,
     ];
-    $this->drupalPostForm("admin/structure/types/manage/{$this->contentType->id()}", $edit, t('Save content type'));
-    $this->assertRaw(t('The content type %type has been updated.', ['%type' => $this->contentType->label()]));
+    $this->drupalGet("admin/structure/types/manage/{$this->contentType->id()}");
+    $this->submitForm($edit, t('Save content type'));
+    $this->assertSession()->responseContains(t('The content type %type has been updated.', ['%type' => $this->contentType->label()]));
   }
 
   /**
@@ -167,7 +168,8 @@ abstract class ContentLanguageAccessTestBase extends BrowserTestBase {
         'label' => $language_code,
         'direction' => LanguageInterface::DIRECTION_LTR,
       ];
-      $this->drupalPostForm('admin/config/regional/language/add', $edit, t('Add custom language'));
+      $this->drupalGet('admin/config/regional/language/add');
+      $this->submitForm($edit, t('Add custom language'));
     }
   }
 
@@ -200,10 +202,10 @@ abstract class ContentLanguageAccessTestBase extends BrowserTestBase {
           $node_language == Language::LANGCODE_NOT_APPLICABLE ||
           $node_language == $language->getId()
         ) {
-          $this->assertResponse(200);
+          $this->assertSession()->statusCodeEquals(200);
         }
         else {
-          $this->assertResponse(403);
+          $this->assertSession()->statusCodeEquals(403);
         }
       }
     }
