modules/contrib/entity_pager/entity_pager.install
modules/contrib/entity_pager/tests/src/Functional/EntityPagerTest.php
modules/contrib/entity_pager/entity_pager.module
modules/contrib/entity_pager/src/EntityPager.php
modules/contrib/entity_pager/src/EntityPagerAnalyzer.php
modules/contrib/entity_pager/src/EntityPagerAnalyzerInterface.php
modules/contrib/entity_pager/src/EntityPagerFactory.php
modules/contrib/entity_pager/src/EntityPagerInterface.php
modules/contrib/entity_pager/src/EntityPagerLink.php
modules/contrib/entity_pager/src/EntityPagerLinkInterface.php
modules/contrib/entity_pager/src/Event/EntityPagerAnalyzeEvent.php
modules/contrib/entity_pager/src/Event/EntityPagerEvents.php
modules/contrib/entity_pager/src/EventSubscriber/EntityAnalyzerSubscriber.php
modules/contrib/entity_pager/src/EventSubscriber/ViewsPerformanceAnalyzerSubscriber.php
modules/contrib/entity_pager/src/Plugin/views/style/EntityPager.php
modules/contrib/entity_pager/tests/src/Kernel/EntityPagerLinkTest.php
modules/contrib/entity_pager/tests/src/Unit/EntityAnalyzerSubscriberTest.php
modules/contrib/entity_pager/tests/src/Unit/EntityPagerAnalyzeEventTest.php
modules/contrib/entity_pager/tests/src/Unit/EntityPagerAnalyzerTest.php

5 files with changes
====================

1) modules/contrib/entity_pager/src/Event/EntityPagerAnalyzeEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_pager\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\entity_pager\EntityPagerInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Analyze event object.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_pager/src/EntityPagerAnalyzer.php:32

    ---------- begin diff ----------
@@ @@
    */
   public function analyze(EntityPagerInterface $entity_pager) {
     $event = new EntityPagerAnalyzeEvent($entity_pager);
-    $this->eventDispatcher->dispatch(EntityPagerEvents::ENTITY_PAGER_ANALYZE, $event);
+    $this->eventDispatcher->dispatch($event, EntityPagerEvents::ENTITY_PAGER_ANALYZE);
     $logs = $event->getLogs();

     foreach ($logs as $message) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


3) modules/contrib/entity_pager/tests/src/Unit/EntityPagerAnalyzerTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->entityPager = $this->createMock(EntityPagerInterface::class);

     for ($i = 0; $i < random_int(3, 6); $i++) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_pager/tests/src/Kernel/EntityPagerLinkTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->renderer = $this->container->get('renderer');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_pager/tests/src/Functional/EntityPagerTest.php:48

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp($import_test_views);

     $view = View::load('entity_pager_example');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

