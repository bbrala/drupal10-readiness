modules/contrib/views_kanban/src/Controller/KanbanController.php
modules/contrib/views_kanban/src/Event/KanbanNodeInsertEvent.php
modules/contrib/views_kanban/src/EventSubscriber/KanbanNodeInsertSubscriber.php
modules/contrib/views_kanban/src/Plugin/views/style/Kanban.php
modules/contrib/views_kanban/views_kanban.module
modules/contrib/views_kanban/views_kanban.theme.inc

2 files with changes
====================

1) modules/contrib/views_kanban/views_kanban.theme.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\workflow\Entity\WorkflowState;
 /**
  * @file
  * Theme for Kanban views.
@@ @@
     $field_type = $status_field->getFieldDefinition()->getType();
     if ($field_type == 'workflow' && !empty($field_status_settings['workflow_type'])) {
       $workflow_type = $field_status_settings['workflow_type'];
-      $states = \Drupal\workflow\Entity\WorkflowState::loadMultiple([], $workflow_type);
+      $states = WorkflowState::loadMultiple([], $workflow_type);
       $status_values = [];
       foreach ($states as $state) {
         if ($state->isActive() && strpos($state->id(), 'creation') === FALSE) {
@@ @@
             ->generateAbsoluteString($thumbnailAvatar);
         }
         else {
-          $assign['avatar'] = file_create_url($thumbnailAvatar);
+          $assign['avatar'] = \Drupal::service('file_url_generator')->generateAbsoluteString($thumbnailAvatar);
         }
       }
       $variables['rows'][$id]['assign'][] = $assign;
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


2) modules/contrib/views_kanban/views_kanban.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Kanban Views module help and theme functions.
@@ @@
  * @param \Drupal\Core\Entity\EntityInterface $entity
  *   Entity.
  */
-function event_subscriber_kanban_node_insert(Drupal\Core\Entity\EntityInterface $entity) {
+function event_subscriber_kanban_node_insert(EntityInterface $entity) {
   // Dispatch the node insert kanban event so that subscribers can act accordingly.
   \Drupal::service('event_dispatcher')
     ->dispatch(KanbanNodeInsertEvent::KANBAN_NODE_INSERT, new KanbanNodeInsertEvent($entity));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

