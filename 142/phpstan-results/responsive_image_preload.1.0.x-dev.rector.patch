diff --git a/src/PreloadGenerator.php b/src/PreloadGenerator.php
index cca917f..fd85fe3 100644
--- a/src/PreloadGenerator.php
+++ b/src/PreloadGenerator.php
@@ -131,7 +131,7 @@ class PreloadGenerator implements PreloadGeneratorInterface {
 
                 /** @var \Drupal\image\ImageStyleInterface $image_style */
                 $image_style = $image_style_storage->load($image_style_name);
-                $image_url = file_url_transform_relative(file_create_url($image_style->buildUrl($file->getFileUri())));
+                $image_url = \Drupal::service('file_url_generator')->generateString($image_style->buildUrl($file->getFileUri()));
 
                 if ($this->moduleHandler->moduleExists('webp')) {
                   $image_url = preg_replace('/\.(png|jpg|jpeg)(\\?.*?)?(,| |$)/i', '.webp\\2\\3', $image_url);
@@ -145,7 +145,7 @@ class PreloadGenerator implements PreloadGeneratorInterface {
               $image_style_name = $image_style_mapping['image_mapping'];
               /** @var \Drupal\image\ImageStyleInterface $image_style */
               $image_style = $image_style_storage->load($image_style_name);
-              $image_url = file_url_transform_relative(file_create_url($image_style->buildUrl($file->getFileUri())));
+              $image_url = \Drupal::service('file_url_generator')->generateString($image_style->buildUrl($file->getFileUri()));
 
               if ($this->moduleHandler->moduleExists('webp')) {
                 $image_url = preg_replace('/\.(png|jpg|jpeg)(\\?.*?)?(,| |$)/i', '.webp\\2\\3', $image_url);
diff --git a/tests/src/Functional/ResponsiveImagePreloadBrowserTestBase.php b/tests/src/Functional/ResponsiveImagePreloadBrowserTestBase.php
index e603483..b9c880b 100644
--- a/tests/src/Functional/ResponsiveImagePreloadBrowserTestBase.php
+++ b/tests/src/Functional/ResponsiveImagePreloadBrowserTestBase.php
@@ -66,7 +66,7 @@ abstract class ResponsiveImagePreloadBrowserTestBase extends BrowserTestBase {
    *
    * @noinspection PhpHierarchyChecksInspection
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->fieldStorage = FieldStorageConfig::create([
@@ -105,14 +105,11 @@ abstract class ResponsiveImagePreloadBrowserTestBase extends BrowserTestBase {
     $this->entityViewDisplay->save();
 
     $fixture_path = implode(DIRECTORY_SEPARATOR, [
-      drupal_get_path('module', 'responsive_image_preload_test'),
+      \Drupal::service('extension.list.module')->getPath('responsive_image_preload_test'),
       'fixtures',
       'test.jpg',
     ]);
-    $file = file_save_data(
-      file_get_contents($fixture_path),
-      'public://test.jpg'
-    );
+    $file = \Drupal::service('file.repository')->writeData(file_get_contents($fixture_path), 'public://test.jpg');
 
     $this->entity = EntityTest::create([
       'image' => [
diff --git a/tests/src/Unit/FieldPreprocessorTest.php b/tests/src/Unit/FieldPreprocessorTest.php
index b4b6682..0f83eda 100644
--- a/tests/src/Unit/FieldPreprocessorTest.php
+++ b/tests/src/Unit/FieldPreprocessorTest.php
@@ -41,12 +41,10 @@ class FieldPreprocessorTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
-    $preload_generator = $this->getMockBuilder(PreloadGeneratorInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $preload_generator = $this->createMock(PreloadGeneratorInterface::class);
 
     $preload_generator
       ->method('generatePreloads')
@@ -54,13 +52,9 @@ class FieldPreprocessorTest extends UnitTestCase {
         'test-preload-key' => ['test-preload-data'],
       ]);
 
-    $this->display = $this->getMockBuilder(EntityViewDisplayInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->display = $this->createMock(EntityViewDisplayInterface::class);
 
-    $this->storage = $this->getMockBuilder(EntityStorageInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->storage = $this->createMock(EntityStorageInterface::class);
 
     $this->storage->method('loadByProperties')
       ->willReturnCallback(function ($properties) {
@@ -76,9 +70,7 @@ class FieldPreprocessorTest extends UnitTestCase {
         return $name === 'entity_test.test.test' ? NULL : $this->display;
       });
 
-    $entity_type_manager = $this->getMockBuilder(EntityTypeManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity_type_manager = $this->createMock(EntityTypeManagerInterface::class);
 
     $entity_type_manager->method('getStorage')
       ->willReturn($this->storage);
@@ -115,9 +107,7 @@ class FieldPreprocessorTest extends UnitTestCase {
    *   A mocked entity instance.
    */
   protected function getMockEntity($bundle = 'test') {
-    $entity = $this->getMockBuilder(FieldableEntityInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity = $this->createMock(FieldableEntityInterface::class);
 
     $entity->method('getEntityTypeId')
       ->willReturn('test');
diff --git a/tests/src/Unit/ThirdPartySettingsTest.php b/tests/src/Unit/ThirdPartySettingsTest.php
index 09f3f18..730cffc 100644
--- a/tests/src/Unit/ThirdPartySettingsTest.php
+++ b/tests/src/Unit/ThirdPartySettingsTest.php
@@ -23,7 +23,7 @@ class ThirdPartySettingsTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->instance = new ThirdPartySettings();
     $this->instance->setStringTranslation($this->getStringTranslationStub());
@@ -41,9 +41,7 @@ class ThirdPartySettingsTest extends UnitTestCase {
    *   A mocked plugin instance.
    */
   protected function getMockPlugin($id, $generate_preloads = FALSE) {
-    $plugin = $this->getMockBuilder(FormatterInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $plugin = $this->createMock(FormatterInterface::class);
 
     $plugin
       ->method('getPluginId')
