diff --git a/hidden_language.info.yml b/hidden_language.info.yml
index cca60c7..e70e974 100644
--- a/hidden_language.info.yml
+++ b/hidden_language.info.yml
@@ -1,9 +1,8 @@
 name: Hidden Language
 description: Hide specific languages on a site.
 package: Multilingual
-core: 8.x
 configure: entity.configurable_language.collection
 type: module
-core_version_requirement: '^8 || ^9'
+core_version_requirement: ^8 || ^9 || ^10
 dependencies:
   - drupal:language
diff --git a/src/EventSubscriber/HiddenLanguageSubscriber.php b/src/EventSubscriber/HiddenLanguageSubscriber.php
index 02af5a8..e4dab84 100644
--- a/src/EventSubscriber/HiddenLanguageSubscriber.php
+++ b/src/EventSubscriber/HiddenLanguageSubscriber.php
@@ -2,11 +2,11 @@
 
 namespace Drupal\hidden_language\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Routing\RouteMatch;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\language\Entity\ConfigurableLanguage;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Symfony\Component\HttpKernel\HttpKernelInterface;
@@ -34,9 +34,9 @@ class HiddenLanguageSubscriber implements EventSubscriberInterface {
   /**
    * Disallow access to hidden language.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    */
-  public function onKernelRequestCheckLanguageAccess(GetResponseEvent $event) {
+  public function onKernelRequestCheckLanguageAccess(RequestEvent $event) {
     if ($event->getRequestType() === HttpKernelInterface::MASTER_REQUEST) {
       $route_name = RouteMatch::createFromRequest($event->getRequest())->getRouteName();
       $path = $event->getRequest()->getPathInfo();
