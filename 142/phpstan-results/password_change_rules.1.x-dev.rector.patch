diff --git a/password_change_rules.info.yml b/password_change_rules.info.yml
index 5d2c518..f1cc534 100644
--- a/password_change_rules.info.yml
+++ b/password_change_rules.info.yml
@@ -1,8 +1,7 @@
 name: Password Change Rules
 type: module
 description: Allows administrators to force users to change their password
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Other
 
 dependencies:
diff --git a/src/EventSubscriber/EnforcePasswordChange.php b/src/EventSubscriber/EnforcePasswordChange.php
index 895d712..138a872 100644
--- a/src/EventSubscriber/EnforcePasswordChange.php
+++ b/src/EventSubscriber/EnforcePasswordChange.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\password_change_rules\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Render\HtmlResponse;
 use Drupal\Core\Routing\LocalRedirectResponse;
@@ -9,7 +10,6 @@ use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -47,7 +47,7 @@ class EnforcePasswordChange implements EventSubscriberInterface {
   /**
    * Force the user to change their password.
    */
-  public function enforcePasswordChange(FilterResponseEvent $event) {
+  public function enforcePasswordChange(ResponseEvent $event) {
     $request = $event->getRequest();
 
     // If they're not logged in or already or the correct page do nothing.
diff --git a/tests/src/Functional/PasswordChangeAdminUi.php b/tests/src/Functional/PasswordChangeAdminUi.php
index de58143..10448c3 100644
--- a/tests/src/Functional/PasswordChangeAdminUi.php
+++ b/tests/src/Functional/PasswordChangeAdminUi.php
@@ -27,7 +27,7 @@ class PasswordChangeAdminUi extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->admin = $this->createUser([
       'administer password change rules',
@@ -50,7 +50,7 @@ class PasswordChangeAdminUi extends BrowserTestBase {
     $session->checkboxNotChecked('admin_change_password');
 
     // Change settings and ensure they're saved.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'change_password_message' => 'Test message',
       'admin_registered_account' => '1',
       'admin_change_password' => '1',
diff --git a/tests/src/Functional/PasswordChangeTest.php b/tests/src/Functional/PasswordChangeTest.php
index 6335033..1f44f21 100644
--- a/tests/src/Functional/PasswordChangeTest.php
+++ b/tests/src/Functional/PasswordChangeTest.php
@@ -34,7 +34,7 @@ class PasswordChangeTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->admin = $this->createUser([
       'administer users',
@@ -56,8 +56,9 @@ class PasswordChangeTest extends BrowserTestBase {
 
     $username = $this->randomMachineName();
     $mail = $username . '@example.com';
-    $pass = user_password();
-    $this->drupalPostForm('/user/register', [
+    $pass = \Drupal::service('password_generator')->generate();
+    $this->drupalGet('/user/register');
+    $this->submitForm([
       'name' => $username,
       'mail' => $mail,
       'pass[pass1]' => $pass,
@@ -102,7 +103,8 @@ class PasswordChangeTest extends BrowserTestBase {
     $this->drupalLogin($this->admin);
     $mail = $this->randomMachineName() . '@example.com';
     $original_password = 'admin-set-password';
-    $this->drupalPostForm(Url::fromRoute('user.admin_create'), [
+    $this->drupalGet(Url::fromRoute('user.admin_create'));
+    $this->submitForm([
       'mail' => $mail,
       'name' => $mail,
       'pass[pass1]' => $original_password,
@@ -111,7 +113,8 @@ class PasswordChangeTest extends BrowserTestBase {
     ], 'Create new account');
 
     $this->drupalLogout();
-    $this->drupalPostForm(Url::fromRoute('user.login'), ['name' => $mail, 'pass' => $original_password], 'Log in');
+    $this->drupalGet(Url::fromRoute('user.login'));
+    $this->submitForm(['name' => $mail, 'pass' => $original_password], 'Log in');
     // @TODO, remove this...
     $this->drupalGet($this->getUrl() . '/edit');
 
@@ -119,14 +122,14 @@ class PasswordChangeTest extends BrowserTestBase {
     $this->assertSession()->pageTextContains($this->getPasswordChangeMessage());
 
     // Attempt to change it to the same password.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'current_pass' => $original_password,
       'pass[pass1]' => $original_password,
       'pass[pass2]' => $original_password,
     ], 'Save');
     $this->assertSession()->pageTextContains('You must change your password to something new');
 
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'current_pass' => $original_password,
       'pass[pass1]' => 'new-password',
       'pass[pass2]' => 'new-password',
@@ -144,7 +147,8 @@ class PasswordChangeTest extends BrowserTestBase {
     // Reset the password as an admin and then force the user to change their
     // password.
     $url = Url::fromRoute('entity.user.edit_form', ['user' => $this->user->id()]);
-    $this->drupalPostForm($url, [
+    $this->drupalGet($url);
+    $this->submitForm([
       'pass[pass1]' => $original_password,
       'pass[pass2]' => $original_password,
       'password_change_rules[value]' => TRUE,
@@ -152,11 +156,12 @@ class PasswordChangeTest extends BrowserTestBase {
 
     // Login as the user and ensure we're required to reset our password.
     $this->drupalLogout();
-    $this->drupalPostForm(Url::fromRoute('user.login'), ['name' => $this->user->getAccountName(), 'pass' => $original_password], 'Log in');
+    $this->drupalGet(Url::fromRoute('user.login'));
+    $this->submitForm(['name' => $this->user->getAccountName(), 'pass' => $original_password], 'Log in');
     $this->assertSession()->pageTextContains($this->getPasswordChangeMessage());
 
     // Update our account and the password notification will disappear.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'current_pass' => $original_password,
       'pass[pass1]' => 'new-password',
       'pass[pass2]' => 'new-password',
@@ -179,7 +184,8 @@ class PasswordChangeTest extends BrowserTestBase {
     $this->assertSession()->fieldNotExists('password_change_rules[value]');
 
     $mail = $this->randomMachineName() . '@example.com';
-    $this->drupalPostForm(Url::fromRoute('user.admin_create'), [
+    $this->drupalGet(Url::fromRoute('user.admin_create'));
+    $this->submitForm([
       'mail' => $mail,
       'name' => $mail,
       'pass[pass1]' => $original_password,
@@ -187,7 +193,8 @@ class PasswordChangeTest extends BrowserTestBase {
     ], 'Create new account');
 
     $this->drupalLogout();
-    $this->drupalPostForm(Url::fromRoute('user.login'), [
+    $this->drupalGet(Url::fromRoute('user.login'));
+    $this->submitForm([
       'name' => $mail,
       'pass' => $original_password,
     ], 'Log in');
@@ -202,14 +209,16 @@ class PasswordChangeTest extends BrowserTestBase {
       // Login as the admin and change the users password.
       $this->drupalLogin($this->admin);
       $url = Url::fromRoute('entity.user.edit_form', ['user' => $this->user->id()]);
-      $this->drupalPostForm($url, [
+      $this->drupalGet($url);
+      $this->submitForm([
         'pass[pass1]' => 'new-password',
         'pass[pass2]' => 'new-password',
       ], 'Save');
 
       // Login as the user.
       $this->drupalLogout();
-      $this->drupalPostForm(Url::fromRoute('user.login'), [
+      $this->drupalGet(Url::fromRoute('user.login'));
+      $this->submitForm([
         'name' => $this->user->getAccountName(),
         'pass' => 'new-password',
       ], 'Log in');
@@ -232,7 +241,7 @@ class PasswordChangeTest extends BrowserTestBase {
     $this->user->save();
     $url = user_pass_reset_url($this->user);
     $this->drupalGet($url);
-    $this->drupalPostForm(NULL, [], 'Log in');
+    $this->submitForm([], 'Log in');
 
     // We should not be required to enter our current password.
     $this->assertSession()->pageTextNotContains('Current password');
