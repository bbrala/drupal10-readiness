modules/contrib/guidelines/guideline.page.inc
modules/contrib/guidelines/src/Entity/GuidelineType.php
modules/contrib/guidelines/src/GuidelineTranslationHandler.php
modules/contrib/guidelines/guidelines.api.php
modules/contrib/guidelines/src/GuidelineTypeHtmlRouteProvider.php
modules/contrib/guidelines/src/GuidelineTypeListBuilder.php
modules/contrib/guidelines/guidelines.module
modules/contrib/guidelines/src/Entity/GuidelineTypeInterface.php
modules/contrib/guidelines/src/Entity/GuidelineViewsData.php
modules/contrib/guidelines/src/ParamConverter/GuidelinePreviewConverter.php
modules/contrib/guidelines/src/Plugin/Field/FieldFormatter/GuidelineFieldTargetFormatter.php
modules/contrib/guidelines/src/Plugin/Field/FieldType/GuidelineFieldTargetType.php
modules/contrib/guidelines/src/Form/GuidelineDeleteForm.php
modules/contrib/guidelines/src/Form/GuidelineForm.php
modules/contrib/guidelines/src/Plugin/Field/FieldWidget/GuidelineFieldTargetWidget.php
modules/contrib/guidelines/src/Access/GuidelinePreviewAccessCheck.php
modules/contrib/guidelines/src/ContextProvider/GuidelineRouteContext.php
modules/contrib/guidelines/src/Controller/GuidelineController.php
modules/contrib/guidelines/src/ProxyClass/ParamConverter/GuidelinePreviewConverter.php
modules/contrib/guidelines/src/Controller/GuidelineJsonController.php
modules/contrib/guidelines/src/Controller/GuidelinePreviewController.php
modules/contrib/guidelines/src/Entity/Guideline.php
modules/contrib/guidelines/src/Form/GuidelineGlobalSettingsForm.php
modules/contrib/guidelines/src/Form/GuidelinePreviewForm.php
modules/contrib/guidelines/src/Form/GuidelineRevisionDeleteForm.php
modules/contrib/guidelines/src/Form/GuidelineRevisionRevertForm.php
modules/contrib/guidelines/src/Entity/GuidelineInterface.php
modules/contrib/guidelines/src/Form/GuidelineRevisionRevertTranslationForm.php
modules/contrib/guidelines/src/Form/GuidelineSettingsForm.php
modules/contrib/guidelines/src/Form/GuidelineSortForm.php
modules/contrib/guidelines/src/Form/GuidelineTypeDeleteForm.php
modules/contrib/guidelines/src/Form/GuidelineTypeForm.php
modules/contrib/guidelines/src/GuidelineAccessControlHandler.php
modules/contrib/guidelines/src/GuidelineHtmlRouteProvider.php
modules/contrib/guidelines/src/GuidelineListBuilder.php
modules/contrib/guidelines/src/GuidelinePermissions.php
modules/contrib/guidelines/src/GuidelineStorage.php
modules/contrib/guidelines/src/GuidelineStorageInterface.php

3 files with changes
====================

1) modules/contrib/guidelines/src/ProxyClass/ParamConverter/GuidelinePreviewConverter.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\guidelines\ProxyClass\ParamConverter {

+    use Drupal\Core\ParamConverter\ParamConverterInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Symfony\Component\Routing\Route;
     /**
      * Provides a proxy class for \Drupal\guidelines\ParamConverter\GuidelinePreviewConverter.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class GuidelinePreviewConverter implements \Drupal\Core\ParamConverter\ParamConverterInterface
+    class GuidelinePreviewConverter implements ParamConverterInterface
     {

-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;

         /**
          * The id of the original proxied service.
@@ @@
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ @@
         /**
          * {@inheritdoc}
          */
-        public function applies($definition, $name, \Symfony\Component\Routing\Route $route)
+        public function applies($definition, $name, Route $route)
         {
             return $this->lazyLoadItself()->applies($definition, $name, $route);
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/guidelines/src/Controller/GuidelineJsonController.php:63

    ---------- begin diff ----------
@@ @@
         if (!empty($bundle) && $bundle === $b) {
           $view_builder = $this->entityTypeManager()->getViewBuilder('guideline');
           $pre_render = $view_builder->view($guideline, 'default');
-          $render_output = render($pre_render);
+          $render_output = \Drupal::service('renderer')->render($pre_render);

           $description = [
             'label' => $f,
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/guidelines/guidelines.module:141

    ---------- begin diff ----------
@@ @@
   if (isset($descriptions[$entity_type][$key])) {
     $view_builder = \Drupal::entityTypeManager()->getViewBuilder('guideline');
     $pre_render = $view_builder->view($descriptions[$entity_type][$key], 'default');
-    $render_output = render($pre_render);
+    $render_output = \Drupal::service('renderer')->render($pre_render);

     if (isset($element['#description'])) {
       $element['#description'] = $render_output;
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

