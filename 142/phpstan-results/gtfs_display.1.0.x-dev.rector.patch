diff --git a/gtfs_display.info.yml b/gtfs_display.info.yml
index 2d589af..c1fb0b0 100644
--- a/gtfs_display.info.yml
+++ b/gtfs_display.info.yml
@@ -1,7 +1,7 @@
 name: 'GTFS Display'
 type: module
 description: "Provides endpoints to display information about GTFS data"
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: 'GTFS'
 dependencies:
   - gtfs
diff --git a/src/Controller/GTFSDisplayIcon.php b/src/Controller/GTFSDisplayIcon.php
index 81855a9..67e4a82 100644
--- a/src/Controller/GTFSDisplayIcon.php
+++ b/src/Controller/GTFSDisplayIcon.php
@@ -17,7 +17,7 @@ class GTFSDisplayIcon extends ControllerBase {
    */
   public function content($icon) {
 
-    $file = drupal_get_path('module', 'gtfs_display') . '/img/' . $icon . '-11.svg';
+    $file = \Drupal::service('extension.list.module')->getPath('gtfs_display') . '/img/' . $icon . '-11.svg';
 
     if(!file_exists($file)) {
       throw new NotFoundHttpException('Icon not found');
diff --git a/src/EventSubscriber/RemoveXFrameOptionsSubscriber.php b/src/EventSubscriber/RemoveXFrameOptionsSubscriber.php
index 178867a..205d7cb 100644
--- a/src/EventSubscriber/RemoveXFrameOptionsSubscriber.php
+++ b/src/EventSubscriber/RemoveXFrameOptionsSubscriber.php
@@ -2,13 +2,13 @@
 
 namespace Drupal\gtfs_display\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 class RemoveXFrameOptionsSubscriber implements EventSubscriberInterface {
 
-  public function RemoveXFrameOptions(FilterResponseEvent $event) {
+  public function RemoveXFrameOptions(ResponseEvent $event) {
     // TODO check only display routes
     $response = $event->getResponse();
     $response->headers->remove('X-Frame-Options');
diff --git a/src/plugin/GTFSDisplayRenderers/Agency.php b/src/plugin/GTFSDisplayRenderers/Agency.php
index 3ce3b03..86114d4 100644
--- a/src/plugin/GTFSDisplayRenderers/Agency.php
+++ b/src/plugin/GTFSDisplayRenderers/Agency.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gtfs_display\Plugin\GTFSDisplayRenderers;
 
+use Drupal\gtfs\Entity\Route;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\gtfs\Entity\GTFSEntityBase;
@@ -19,7 +20,7 @@ class Agency extends Base {
       'table' => [
         '#type' => 'table',
         '#header' => ['Route ID', 'Route Name'],
-        '#rows' => array_values(array_map(function (\Drupal\gtfs\Entity\Route $route) {
+        '#rows' => array_values(array_map(function (Route $route) {
           return [
             $route->get('route_id')->value,
             Link::fromTextAndUrl($route->get('route_long_name')->value, Url::fromUri($route->links()['display']))
diff --git a/src/plugin/GTFSDisplayRenderers/Route.php b/src/plugin/GTFSDisplayRenderers/Route.php
index 38f7362..45a2bcc 100644
--- a/src/plugin/GTFSDisplayRenderers/Route.php
+++ b/src/plugin/GTFSDisplayRenderers/Route.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gtfs_display\Plugin\GTFSDisplayRenderers;
 
+use Drupal\gtfs\Entity\Stop;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\gtfs\Entity\GTFSEntityBase;
@@ -23,7 +24,7 @@ class Route extends Base {
           'stop_name' => 'Stop Name',
           'route' => 'Routes at Stop'
         ],
-        '#rows' => array_values(array_map(function (\Drupal\gtfs\Entity\Stop $stop) {
+        '#rows' => array_values(array_map(function (Stop $stop) {
           return [
             'stop_id' => [ 'data' => $stop->get('stop_id')->value ],
             'stop_name' => [ 'data' => Link::fromTextAndUrl($stop->label(), Url::fromUri($stop->links()['display'])) ],
diff --git a/src/plugin/GTFSDisplayRenderers/Stop.php b/src/plugin/GTFSDisplayRenderers/Stop.php
index e91eadf..e9fc853 100644
--- a/src/plugin/GTFSDisplayRenderers/Stop.php
+++ b/src/plugin/GTFSDisplayRenderers/Stop.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gtfs_display\Plugin\GTFSDisplayRenderers;
 
+use Drupal\gtfs\Entity\Route;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\gtfs\Entity\GTFSEntityBase;
@@ -19,7 +20,7 @@ class Stop extends Base {
       '#theme' => 'item_list',
       '#list_type' => 'ul',
       '#title' => 'Routes',
-      '#items' => array_values(array_map(function (\Drupal\gtfs\Entity\Route $route) {
+      '#items' => array_values(array_map(function (Route $route) {
         return Link::fromTextAndUrl($route->label(), Url::fromUri($route->links()['display']));
       }, $stop->routes()))
     ];
