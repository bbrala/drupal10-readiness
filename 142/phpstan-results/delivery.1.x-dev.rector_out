modules/contrib/delivery/delivery.install
modules/contrib/delivery/modules/delivery_update/delivery_update.module
modules/contrib/delivery/src/Controller/DeliveryItemStatusController.php
modules/contrib/delivery/src/Form/DeliveryForm.php
modules/contrib/delivery/src/Plugin/views/filter/InheritedContentFilter.php
modules/contrib/delivery/delivery.module
modules/contrib/delivery/modules/delivery_update/src/Plugin/Field/FieldType/RevisionTreeItem.php
modules/contrib/delivery/src/Form/DeliveryForwardForm.php
modules/contrib/delivery/src/Controller/DeliveryListUsageController.php
modules/contrib/delivery/modules/workspaces_allowed_languages/src/RedirectListener.php
modules/contrib/delivery/src/Form/DeliveryFromWorkspaceForm.php
modules/contrib/delivery/src/Plugin/views/filter/RelevantDeliveryItems.php
modules/contrib/delivery/src/Plugin/views/filter/WorkspacesList.php
modules/contrib/delivery/modules/workspaces_allowed_languages/workspaces_allowed_languages.module
modules/contrib/delivery/src/Controller/DeliveryStatusController.php
modules/contrib/delivery/src/Plugin/views/relationship/WorkspaceRevision.php
modules/contrib/delivery/src/Controller/NodeController.php
modules/contrib/delivery/modules/workspaces_negotiator_path/src/EventSubscriber/WorkspaceRedirectSubscriber.php
modules/contrib/delivery/src/Plugin/views/traits/CurrentWorkspaceViewsFilterTrait.php
modules/contrib/delivery/src/DeliveryDefaultMenuLinkTreeManipulators.php
modules/contrib/delivery/modules/workspaces_negotiator_path/src/PathPrefixWorkspaceNegotiator.php
modules/contrib/delivery/delivery.post_update.php
modules/contrib/delivery/src/Plugin/views/traits/EntityDeliveryStatusTrait.php
modules/contrib/delivery/delivery.views.inc
modules/contrib/delivery/src/DeliveryDefaultMenuLinkTreeManipulatorsInterface.php
modules/contrib/delivery/src/DeliveryEntityOperations.php
modules/contrib/delivery/delivery.views_execution.inc
modules/contrib/delivery/modules/delivery_update/delivery_update.install
modules/contrib/delivery/modules/workspaces_negotiator_path/src/PathProcessor.php
modules/contrib/delivery/src/DeliveryEntityUsage.php
modules/contrib/delivery/src/Form/DeliveryItemPushForm.php
modules/contrib/delivery/modules/workspaces_negotiator_path/src/Plugin/LanguageNegotiation/LanguageNegotiationWorkspaceAndUrl.php
modules/contrib/delivery/src/Routing/DeliveryContentTranslationRouteSubscriber.php
modules/contrib/delivery/src/Form/DeliveryItemResolveForm.php
modules/contrib/delivery/src/DeliveryInterface.php
modules/contrib/delivery/src/DeliveryItemInterface.php
modules/contrib/delivery/src/DeliveryItemViewsData.php
modules/contrib/delivery/modules/workspaces_negotiator_path/src/Utils/PathPrefixHelper.php
modules/contrib/delivery/src/Routing/RouteSubscriber.php
modules/contrib/delivery/modules/workspaces_negotiator_path/tests/src/Unit/PathPrefixHelperTest.php
modules/contrib/delivery/src/DeliveryService.php
modules/contrib/delivery/src/WorkspaceAssigment.php
modules/contrib/delivery/modules/workspaces_negotiator_path/workspaces_negotiator_path.module
modules/contrib/delivery/src/Access/DeliveryContentTranslationOverviewAccess.php
modules/contrib/delivery/src/WorkspaceListBuilder.php
modules/contrib/delivery/src/ConflictResolution/MergeBlacklistedFields.php
modules/contrib/delivery/src/ConflictResolution/MergeInvisibleProperties.php
modules/contrib/delivery/tests/src/Kernel/MergeBlacklistedFieldsTest.php
modules/contrib/delivery/src/Controller/DeliveryContentTranslationController.php
modules/contrib/delivery/tests/src/Unit/MissingMethodTest.php
modules/contrib/delivery/src/DeliveryServiceProvider.php
modules/contrib/delivery/src/DeliveryViewsData.php
modules/contrib/delivery/src/DeliveryWorkspaceManager.php
modules/contrib/delivery/src/Entity/Delivery.php
modules/contrib/delivery/src/Form/DeliveryPullForm.php
modules/contrib/delivery/src/Form/DeliveryPushForm.php
modules/contrib/delivery/src/Entity/DeliveryItem.php
modules/contrib/delivery/src/Form/DeliverySettingsForm.php
modules/contrib/delivery/src/Form/MenuPushForm.php
modules/contrib/delivery/src/MenuLinkContentStorage.php
modules/contrib/delivery/src/Entity/MenuLinkContent.php
modules/contrib/delivery/src/Field/DeliveryItemStatus.php
modules/contrib/delivery/src/FilteredLanguageManager.php
modules/contrib/delivery/src/MenuLinkManager.php
modules/contrib/delivery/src/MenuTreeStorage.php
modules/contrib/delivery/src/ParamConverter/DeliveryEntityConverter.php
modules/contrib/delivery/src/Plugin/views/field/DeliveryAjaxDeliveryStatusField.php
modules/contrib/delivery/src/Plugin/views/field/DeliveryItemLabel.php
modules/contrib/delivery/src/Plugin/views/field/DeliveryItemStatus.php
modules/contrib/delivery/src/Plugin/views/field/DeliveryItemUrl.php
modules/contrib/delivery/src/Plugin/views/field/InheritedContentField.php
modules/contrib/delivery/src/Plugin/views/filter/CurrentWorkspaceFilter.php
modules/contrib/delivery/src/Plugin/views/filter/DeliveryWorkspaceFilter.php

4 files with changes
====================

1) modules/contrib/delivery/tests/src/Unit/MissingMethodTest.php:14

    ---------- begin diff ----------
@@ @@
   protected $form;

   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $entityTypeManager;

   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $messenger;

   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $entityRepository;

   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $deliveryService;

@@ @@
   /**
    * Set up the form class.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->entityTypeManager = $this->createMock('Drupal\Core\Entity\EntityTypeManagerInterface');
     $this->messenger = $this->createMock('Drupal\Core\Messenger\MessengerInterface');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/delivery/tests/src/Kernel/MergeBlacklistedFieldsTest.php:60

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('system', ['key_value_expire', 'sequences']);
@@ @@
     $d->save();

     $conflicts = $conflictManager->resolveConflicts($c, $d, $a);
-    $this->assertEqual($conflicts, ['field_test' => 'conflict_local_remote']);
+    $this->assertEquals($conflicts, ['field_test' => 'conflict_local_remote']);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/delivery/modules/workspaces_negotiator_path/src/EventSubscriber/WorkspaceRedirectSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\workspaces_negotiator_path\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\workspaces_negotiator_path\PathPrefixWorkspaceNegotiator;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;

 /**
  * Class EventSubscriber.
@@ @@
   /**
    * This method is called whenever the kernel.response event is dispatched.
    *
-   * @param FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event object.
    */
-  public function checkRedirection(FilterResponseEvent $event) {
+  public function checkRedirection(ResponseEvent $event) {
     $response = $event->getResponse();
     if (($prefix = $this->pathPrefixWorkspaceNegotiator->getRedirectPrefix())
       && $response instanceOf RedirectResponse
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


4) modules/contrib/delivery/modules/workspaces_allowed_languages/src/RedirectListener.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\workspaces_allowed_languages;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Routing\TrustedRedirectResponse;
@@ @@
 use Drupal\workspaces\WorkspaceManagerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\Routing\Exception\ResourceNotFoundException;
@@ @@
    * Performs a redirect in case the workspace and the language of the site do
    * not match.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     // Skip any checks for subrequests
     if (!$event->isMasterRequest()) {
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 4 files have been changed by Rector                                       

