diff --git a/src/Form/OecdPublishingRecallsList.php b/src/Form/OecdPublishingRecallsList.php
index 709928b..eb53f9f 100644
--- a/src/Form/OecdPublishingRecallsList.php
+++ b/src/Form/OecdPublishingRecallsList.php
@@ -120,7 +120,7 @@ class OecdPublishingRecallsList extends FormBase {
           '@total' => $status['total'],
           '@passed' => $status['passed'],
           '@failed' => $status['failed'],
-          '@logs' => render($logs_link),
+          '@logs' => \Drupal::service('renderer')->render($logs_link),
         ]
       ));
     }
diff --git a/tests/src/Kernel/PsaOecdPublishingKernelTest.php b/tests/src/Kernel/PsaOecdPublishingKernelTest.php
index 276b338..e778d9c 100644
--- a/tests/src/Kernel/PsaOecdPublishingKernelTest.php
+++ b/tests/src/Kernel/PsaOecdPublishingKernelTest.php
@@ -35,16 +35,12 @@ class PsaOecdPublishingKernelTest extends KernelTestBase {
     $randomString = $this->randomString() . '<test> &amp;';
 
     // Create mock DateFormatter.
-    $mock_date_formatter = $this->getMockBuilder(DateFormatter::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $mock_date_formatter = $this->createMock(DateFormatter::class);
     $mock_date_formatter->expects($this->any())
       ->method('format')
       ->willReturn('0000-00-00');
     // Create mock field.
-    $mock_field_item_list = $this->getMockBuilder(FieldItemList::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $mock_field_item_list = $this->createMock(FieldItemList::class);
     $mock_field_item_list->expects($this->any())
       ->method('getValue')
       ->willReturn([$randomString, 'second-value']);
@@ -53,9 +49,7 @@ class PsaOecdPublishingKernelTest extends KernelTestBase {
       ->with('date')
       ->willReturn($mock_date_formatter);
     // Create mock node containing mock field.
-    $mock_node = $this->getMockBuilder(Node::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $mock_node = $this->createMock(Node::class);
     $mock_node->expects($this->any())
       ->method('get')
       ->willReturn($mock_field_item_list);
