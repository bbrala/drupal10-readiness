modules/contrib/mailchimp_ecommerce/mailchimp_ecommerce.api.php
modules/contrib/mailchimp_ecommerce/mailchimp_ecommerce.drush.inc
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/Form/MailchimpEcommerceCommerceSync.php
modules/contrib/mailchimp_ecommerce/mailchimp_ecommerce.install
modules/contrib/mailchimp_ecommerce/tests/src/Unit/CartHandlerTest.php
modules/contrib/mailchimp_ecommerce/mailchimp_ecommerce.module
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/BatchSyncOrders.php
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/Form/MailchimpEcommerceCommerceSyncOrders.php
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/Plugin/Commerce/CheckoutPane/ContactSubscription.php
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/BatchSyncProducts.php
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/EventSubscriber/CartEventSubscriber.php
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/Routing/RouteSubscriber.php
modules/contrib/mailchimp_ecommerce/src/CartHandler.php
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/EventSubscriber/OrderEventSubscriber.php
modules/contrib/mailchimp_ecommerce/src/CartHandlerInterface.php
modules/contrib/mailchimp_ecommerce/src/CustomerHandler.php
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/EventSubscriber/ProductEventSubscriber.php
modules/contrib/mailchimp_ecommerce/modules/mailchimp_ecommerce_commerce/src/Form/MailchimpEcommerceCommerceAdminSettings.php
modules/contrib/mailchimp_ecommerce/src/CustomerHandlerInterface.php
modules/contrib/mailchimp_ecommerce/src/Form/MailchimpEcommerceAdminSettings.php
modules/contrib/mailchimp_ecommerce/src/Form/MailchimpEcommerceSync.php
modules/contrib/mailchimp_ecommerce/src/Form/MailchimpEcommerceSyncOrders.php
modules/contrib/mailchimp_ecommerce/src/MailchimpEcommerceHelper.php
modules/contrib/mailchimp_ecommerce/src/OrderHandler.php
modules/contrib/mailchimp_ecommerce/src/OrderHandlerInterface.php
modules/contrib/mailchimp_ecommerce/src/ProductHandler.php
modules/contrib/mailchimp_ecommerce/src/ProductHandlerInterface.php
modules/contrib/mailchimp_ecommerce/src/StoreHandler.php
modules/contrib/mailchimp_ecommerce/src/StoreHandlerInterface.php
modules/contrib/mailchimp_ecommerce/tests/require.php
modules/contrib/mailchimp_ecommerce/tests/src/Functional/MailchimpEcommerceTest.php

2 files with changes
====================

1) modules/contrib/mailchimp_ecommerce/tests/src/Unit/CartHandlerTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * A mock of the messenger service.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $messenger;

@@ @@
   /**
    * A mock of the \Drupal\mailchimp_ecommerce\MailchimpEcommerceHelper class.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $helper;

@@ @@
   /**
    * A mock of the \Mailchimp\MailchimpEcommerce class.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $mcEcommerce;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->mcEcommerce = $this->createMock(MailchimpEcommerce::class);
     $this->helper = $this->createMock(MailchimpEcommerceHelper::class);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/mailchimp_ecommerce/tests/src/Functional/MailchimpEcommerceTest.php:42

    ---------- begin diff ----------
@@ @@
       'mailchimp_ecommerce_list_id' => '57afe96172',
       'mailchimp_ecommerce_currency' => 'USD',
     ], 'Save configuration');
-    $this->assertText('The configuration options have been saved');
+    $this->assertSession()->pageTextContains('The configuration options have been saved');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

