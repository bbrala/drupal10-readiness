modules/contrib/mosaicformatter/mosaicformatter.module
modules/contrib/mosaicformatter/src/Plugin/Field/FieldFormatter/MosaicFormatter.php

1 file with changes
===================

1) modules/contrib/mosaicformatter/src/Plugin/Field/FieldFormatter/MosaicFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mosaicformatter\Plugin\Field\FieldFormatter;

+use Drupal\Core\Session\AccountInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\image\Plugin\Field\FieldFormatter\ImageFormatterBase;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
@@ @@
    * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
    *   The image style storage.
    */
-  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, \Drupal\Core\Session\AccountInterface $current_user, \Drupal\Core\Entity\EntityStorageInterface $image_style_storage, EntityTypeManagerInterface $entity_type_manager) {
+  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, EntityStorageInterface $image_style_storage, EntityTypeManagerInterface $entity_type_manager) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $label, $view_mode, $third_party_settings);
     $this->currentUser = $current_user;
     $this->imageStyleStorage = $image_style_storage;
@@ @@
         $img=$item->getValue();
         $file=$this->entityTypeManager->getStorage('file')->load($img["target_id"]);
         $cache_tags = Cache::mergeTags($cache_tags, $file->getCacheTags());
-        $url = Url::fromUri(file_create_url($file->getFileUri()))->toUriString();
+        $url = \Drupal::service('file_url_generator')->generate($file->getFileUri())->toUriString();
         if ($style!==NULL) {
              $styleddestination = $style->buildUri($url);
              if (!file_exists($styleddestination)) {
@@ @@
             	$img["height"]=$imgdims[1];
             }
         }
-        $url=file_url_transform_relative($url);
+        $url=\Drupal::service('file_url_generator')->transformRelative($url);

        $elements['#items'][$delta] = [
         'uri'=> $url,
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * FromUriRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

