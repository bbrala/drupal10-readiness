modules/contrib/simple_facebook_pixel/simple_facebook_pixel.api.php
modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php
modules/contrib/simple_facebook_pixel/simple_facebook_pixel.module
modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php
modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php
modules/contrib/simple_facebook_pixel/src/Form/SimpleFacebookPixelSettingsForm.php
modules/contrib/simple_facebook_pixel/src/PageContextService.php
modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php
modules/contrib/simple_facebook_pixel/src/PageContextServiceInterface.php
modules/contrib/simple_facebook_pixel/src/PixelBuilderService.php
modules/contrib/simple_facebook_pixel/src/PixelBuilderServiceInterface.php
modules/contrib/simple_facebook_pixel/tests/modules/simple_facebook_pixel_test_hooks/simple_facebook_pixel_test_hooks.module
modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php
modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php

7 files with changes
====================

1) modules/contrib/simple_facebook_pixel/tests/src/Functional/AlterHooksTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $account = $this->drupalCreateUser([
@@ @@
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '567123';
     $edit['view_content_entities[node:page]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/simple_facebook_pixel/src/PageContextService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simple_facebook_pixel;

+use Drupal\commerce_product\Entity\ProductInterface;
 use Drupal\commerce\Context;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@

     $commerce_product = $this->request->attributes->get('commerce_product');

-    if ($commerce_product instanceof \Drupal\commerce_product\Entity\ProductInterface) {
+    if ($commerce_product instanceof ProductInterface) {
       $view_content_entities = array_values($this->configFactory->get('view_content_entities'));

       if (
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


3) modules/contrib/simple_facebook_pixel/src/EventSubscriber/PixelSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simple_facebook_pixel\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
+use Symfony\Contracts\EventDispatcher\Event;
+use Drupal\commerce_product\Entity\ProductInterface;
 use Drupal\commerce\Context;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Config\ConfigFactory;
@@ @@
 use Drupal\Core\Session\AccountInterface;
 use Drupal\simple_facebook_pixel\PixelBuilderService;
 use Drupal\state_machine\Event\WorkflowTransitionEvent;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Invalidates page cache tags if needed.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();

     if (strpos($response->getContent(), 'CompleteRegistration') !== FALSE) {
@@ @@
   /**
    * Adds AddToCart event.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The add to cart event.
    */
   public function addToCartEvent(Event $event) {
@@ @@
   /**
    * Adds AddToWishlist event. Using Commerce Wishlist module.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The add to wishlist event.
    */
   public function addToWishlist(Event $event) {
@@ @@
   /**
    * Adds AddToWishlist event. Using Flag module.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The add to wishlist event.
    */
   public function addToWishlistFlag(Event $event) {
@@ @@
       if (in_array($event->getFlagging()->getFlagId(), $enabled_flags)) {
         $entity = $event->getFlagging()->getFlaggable();

-        if ($entity instanceof \Drupal\commerce_product\Entity\ProductInterface) {
+        if ($entity instanceof ProductInterface) {
           $this->addItem($entity->getDefaultVariation(), 1, 'AddToWishlist');
         }
       }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


4) modules/contrib/simple_facebook_pixel/tests/src/Functional/ViewContentEventTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->user = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/simple_facebook_pixel/tests/src/Functional/SettingsFormTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalCreateContentType([
@@ @@
     $edit['excluded_roles[anonymous]'] = TRUE;
     $edit['excluded_roles[authenticated]'] = FALSE;
     $edit['complete_registration_enabled'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->assertEquals(FALSE, $this->config('simple_facebook_pixel.settings')->get('pixel_enabled'));
@@ @@
     $edit['excluded_roles[anonymous]'] = FALSE;
     $edit['excluded_roles[authenticated]'] = TRUE;
     $edit['complete_registration_enabled'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->assertEquals(TRUE, $this->config('simple_facebook_pixel.settings')->get('pixel_enabled'));
@@ @@
     $edit['view_content_entities[node:article]'] = TRUE;
     $edit['view_content_entities[node:page]'] = FALSE;
     $edit['view_content_entities[taxonomy_term:tags]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->assertEquals(TRUE, $this->config('simple_facebook_pixel.settings')->get('pixel_enabled'));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/simple_facebook_pixel/tests/src/Functional/PageViewTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->user = $this->drupalCreateUser([
@@ @@
   public function testFacebookPixelDisabled() {
     $edit['pixel_enabled'] = FALSE;
     $edit['pixel_id'] = '789012';
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '789012';
     $edit['exclude_admin_pages'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '789012';
     $edit['exclude_admin_pages'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
     $this->assertSession()->responseNotContains($pixel_builder->getPixelScriptCode());
   }
@@ @@
   public function testFacebookPixelEnabledForAllUsers() {
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '567123';
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
   public function testMultiFacebookPixelsEnabledForAllUsers() {
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '567123, 985473';
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = TRUE;
     $edit['excluded_roles[authenticated]'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
@@ @@
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = FALSE;
     $edit['excluded_roles[authenticated]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->drupalGet('<front>');
@@ @@
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = TRUE;
     $edit['excluded_roles[authenticated]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->drupalGet('<front>');
@@ @@
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = FALSE;
     $edit['excluded_roles[authenticated]'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->drupalGet('<front>');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/simple_facebook_pixel/tests/src/Functional/CompleteRegistrationTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->configFactory = \Drupal::configFactory();
@@ @@

     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, 'Create new account');
-    $this->assertText('A welcome message with further instructions has been sent to your email address.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, 'Create new account');
+    $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
@@ @@

     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, 'Create new account');
-    $this->assertText('A welcome message with further instructions has been sent to your email address.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, 'Create new account');
+    $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');

     /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

