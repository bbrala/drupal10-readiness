modules/contrib/recurring_donation/recurring_donation.install
modules/contrib/recurring_donation/src/Form/IPNSettingsForm.php
modules/contrib/recurring_donation/recurring_donation.module
modules/contrib/recurring_donation/src/Controller/IPNController.php
modules/contrib/recurring_donation/src/Form/SettingsForm.php
modules/contrib/recurring_donation/src/DonationType.php
modules/contrib/recurring_donation/src/Event/IPNMessageEvents.php
modules/contrib/recurring_donation/src/Event/IPNMessageReceivedEvent.php
modules/contrib/recurring_donation/src/EventSubscriber/IPNRouteSubscriber.php
modules/contrib/recurring_donation/src/Form/DonationForm.php
modules/contrib/recurring_donation/src/Form/DonationTypeSelectionForm.php
modules/contrib/recurring_donation/src/InvalidDonationTypeException.php
modules/contrib/recurring_donation/src/Plugin/Block/DonationBlock.php

2 files with changes
====================

1) modules/contrib/recurring_donation/src/Event/IPNMessageReceivedEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\recurring_donation\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use PayPal\IPN\PPIPNMessage;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Class IPNMessageReceivedEvent.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/recurring_donation/src/Controller/IPNController.php:74

    ---------- begin diff ----------
@@ @@
     if ($ipnMessage->validate()) {
       $responseMessage = 'Got valid IPN data';
       $this->getLogger('recurring_donation')->notice($responseMessage);
-      $this->eventDispatcher->dispatch(IPNMessageEvents::VALID, $event);
+      $this->eventDispatcher->dispatch($event, IPNMessageEvents::VALID);
     }
     else {
       $responseMessage = 'Got invalid IPN data';
       $this->getLogger('recurring_donation')->error($responseMessage);
-      $this->eventDispatcher->dispatch(IPNMessageEvents::INVALID, $event);
+      $this->eventDispatcher->dispatch($event, IPNMessageEvents::INVALID);
     }

     return new Response($responseMessage, 200);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

