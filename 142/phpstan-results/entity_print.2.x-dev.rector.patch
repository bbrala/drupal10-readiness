diff --git a/src/Asset/AssetCollector.php b/src/Asset/AssetCollector.php
index a4e862b..a85fbbf 100644
--- a/src/Asset/AssetCollector.php
+++ b/src/Asset/AssetCollector.php
@@ -75,7 +75,7 @@ class AssetCollector implements AssetCollectorInterface {
       }
     }
 
-    $this->dispatcher->dispatch(PrintEvents::CSS_ALTER, new PrintCssAlterEvent($libraries, $entities));
+    $this->dispatcher->dispatch(new PrintCssAlterEvent($libraries, $entities), PrintEvents::CSS_ALTER);
 
     return $libraries;
   }
diff --git a/src/Event/PrintCssAlterEvent.php b/src/Event/PrintCssAlterEvent.php
index 9d638b8..f73ff0e 100644
--- a/src/Event/PrintCssAlterEvent.php
+++ b/src/Event/PrintCssAlterEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\entity_print\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * This event allows the CSS libraries to be altered.
diff --git a/src/Event/PrintEventBase.php b/src/Event/PrintEventBase.php
index ca00d0f..96f1655 100644
--- a/src/Event/PrintEventBase.php
+++ b/src/Event/PrintEventBase.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_print\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\entity_print\Plugin\PrintEngineInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Event base class.
diff --git a/src/Event/PrintHtmlAlterEvent.php b/src/Event/PrintHtmlAlterEvent.php
index 3d4b1e0..9328446 100644
--- a/src/Event/PrintHtmlAlterEvent.php
+++ b/src/Event/PrintHtmlAlterEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\entity_print\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * An event to alter the HTML string.
diff --git a/src/EventSubscriber/PrintEngineExceptionSubscriber.php b/src/EventSubscriber/PrintEngineExceptionSubscriber.php
index 4794185..ab241c0 100644
--- a/src/EventSubscriber/PrintEngineExceptionSubscriber.php
+++ b/src/EventSubscriber/PrintEngineExceptionSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_print\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ -9,7 +10,6 @@ use Drupal\Core\Url;
 use Drupal\entity_print\PrintEngineException;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -47,11 +47,11 @@ class PrintEngineExceptionSubscriber implements EventSubscriberInterface {
   /**
    * Handles print exceptions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The exception event.
    */
-  public function handleException(GetResponseForExceptionEvent $event) {
-    $exception = $event->getException();
+  public function handleException(ExceptionEvent $event) {
+    $exception = $event->getThrowable();
     if ($exception instanceof PrintEngineException) {
       \Drupal::messenger()->addError(new FormattableMarkup($exception->getPrettyMessage(), []));
 
diff --git a/src/Plugin/EntityPrintPluginManager.php b/src/Plugin/EntityPrintPluginManager.php
index b7e83f7..bfcd3f6 100644
--- a/src/Plugin/EntityPrintPluginManager.php
+++ b/src/Plugin/EntityPrintPluginManager.php
@@ -159,7 +159,7 @@ class EntityPrintPluginManager extends DefaultPluginManager implements EntityPri
     }
     $configuration = $entity->getSettings();
     $event = new GenericEvent(PrintEvents::CONFIGURATION_ALTER, ['configuration' => $configuration, 'config' => $entity]);
-    $this->dispatcher->dispatch(PrintEvents::CONFIGURATION_ALTER, $event);
+    $this->dispatcher->dispatch($event, PrintEvents::CONFIGURATION_ALTER);
     $configuration = $event->getArgument('configuration');
 
     return $configuration;
diff --git a/src/PrintBuilder.php b/src/PrintBuilder.php
index 972af13..6e0b172 100644
--- a/src/PrintBuilder.php
+++ b/src/PrintBuilder.php
@@ -56,7 +56,7 @@ class PrintBuilder implements PrintBuilderInterface {
     $renderer = $this->prepareRenderer($entities, $print_engine, $use_default_css);
 
     // Allow other modules to alter the generated Print object.
-    $this->dispatcher->dispatch(PrintEvents::PRE_SEND, new PreSendPrintEvent($print_engine, $entities));
+    $this->dispatcher->dispatch(new PreSendPrintEvent($print_engine, $entities), PrintEvents::PRE_SEND);
 
     // Calculate the filename.
     $filename = $renderer->getFilename($entities) . '.' . $print_engine->getExportType()->getFileExtension();
@@ -87,7 +87,7 @@ class PrintBuilder implements PrintBuilderInterface {
     $renderer = $this->prepareRenderer($entities, $print_engine, $use_default_css);
 
     // Allow other modules to alter the generated Print object.
-    $this->dispatcher->dispatch(PrintEvents::PRE_SEND, new PreSendPrintEvent($print_engine, $entities));
+    $this->dispatcher->dispatch(new PreSendPrintEvent($print_engine, $entities), PrintEvents::PRE_SEND);
 
     // If we didn't have a URI passed in the generate one.
     if (!$filename) {
diff --git a/src/Renderer/RendererBase.php b/src/Renderer/RendererBase.php
index 2eb19c1..568786a 100644
--- a/src/Renderer/RendererBase.php
+++ b/src/Renderer/RendererBase.php
@@ -91,7 +91,7 @@ abstract class RendererBase implements RendererInterface, EntityHandlerInterface
     });
 
     // Allow other modules to alter the generated HTML.
-    $this->dispatcher->dispatch(PrintEvents::POST_RENDER, new PrintHtmlAlterEvent($html, $entities));
+    $this->dispatcher->dispatch(new PrintHtmlAlterEvent($html, $entities), PrintEvents::POST_RENDER);
 
     return $html;
   }
diff --git a/tests/modules/entity_print_test/entity_print_test.module b/tests/modules/entity_print_test/entity_print_test.module
index ff93452..5fd851e 100644
--- a/tests/modules/entity_print_test/entity_print_test.module
+++ b/tests/modules/entity_print_test/entity_print_test.module
@@ -11,7 +11,7 @@ use Drupal\Core\Extension\Extension;
  * Implements hook_system_theme_info().
  */
 function entity_print_test_system_theme_info() {
-  $themes['entity_print_test_theme'] = drupal_get_path('module', 'entity_print_test') . '/themes/entity_print_test_theme/entity_print_test_theme.info';
+  $themes['entity_print_test_theme'] = \Drupal::service('extension.list.module')->getPath('entity_print_test') . '/themes/entity_print_test_theme/entity_print_test_theme.info';
   return $themes;
 }
 
diff --git a/tests/src/Functional/EntityPrintActionTest.php b/tests/src/Functional/EntityPrintActionTest.php
index 5f58538..0d1977a 100644
--- a/tests/src/Functional/EntityPrintActionTest.php
+++ b/tests/src/Functional/EntityPrintActionTest.php
@@ -54,7 +54,7 @@ class EntityPrintActionTest extends BrowserTestBase {
    */
   public function testDownloadPdfAction() {
     $this->drupalGet('/admin/content');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'action' => 'entity_print_pdf_download_action',
       'node_bulk_form[0]' => 1,
     ], 'Apply to selected items');
diff --git a/tests/src/Functional/EntityPrintAdminTest.php b/tests/src/Functional/EntityPrintAdminTest.php
index cb020b7..4cae92f 100644
--- a/tests/src/Functional/EntityPrintAdminTest.php
+++ b/tests/src/Functional/EntityPrintAdminTest.php
@@ -75,7 +75,8 @@ class EntityPrintAdminTest extends BrowserTestBase {
 
     $full_view_mode = 'Full view mode';
     $pdf_view_mode = 'PDF view mode';
-    $this->drupalPostForm('admin/structure/types/manage/page/display', [
+    $this->drupalGet('admin/structure/types/manage/page/display');
+    $this->submitForm([
       'fields[entity_print_view_pdf][empty_cell]' => $full_view_mode,
       'fields[entity_print_view_pdf][region]' => 'content',
     ], 'Save');
@@ -89,12 +90,14 @@ class EntityPrintAdminTest extends BrowserTestBase {
     $this->drupalGet('/print/pdf/node/1/debug');
     $assert->pageTextContains($full_view_mode);
     $assert->pageTextNotContains($pdf_view_mode);
+    $this->drupalGet('admin/structure/types/manage/page/display');
 
     // Configure the PDF view mode.
-    $this->drupalPostForm('admin/structure/types/manage/page/display', [
+    $this->submitForm([
       'display_modes_custom[pdf]' => 1,
     ], 'Save');
-    $this->drupalPostForm('admin/structure/types/manage/page/display/pdf', [
+    $this->drupalGet('admin/structure/types/manage/page/display/pdf');
+    $this->submitForm([
       'fields[entity_print_view_pdf][empty_cell]' => $pdf_view_mode,
       'fields[entity_print_view_pdf][region]' => 'content',
     ], 'Save');
diff --git a/tests/src/Functional/InstallationTest.php b/tests/src/Functional/InstallationTest.php
index 03f4e45..1d5ca57 100644
--- a/tests/src/Functional/InstallationTest.php
+++ b/tests/src/Functional/InstallationTest.php
@@ -54,11 +54,13 @@ class InstallationTest extends BrowserTestBase {
    * Uninstall the module using the UI.
    */
   protected function uninstallModules() {
-    $this->drupalPostForm('admin/modules/uninstall', [
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm([
       'uninstall[entity_print_views]' => TRUE,
     ], 'Uninstall');
     $this->getSession()->getPage()->pressButton('Uninstall');
-    $this->drupalPostForm('admin/modules/uninstall', [
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm([
       'uninstall[entity_print]' => TRUE,
     ], 'Uninstall');
     $this->getSession()->getPage()->pressButton('Uninstall');
@@ -68,7 +70,8 @@ class InstallationTest extends BrowserTestBase {
    * Install the modules using the UI.
    */
   protected function installModules() {
-    $this->drupalPostForm('admin/modules', [
+    $this->drupalGet('admin/modules');
+    $this->submitForm([
       'modules[entity_print][enable]' => TRUE,
       'modules[entity_print_views][enable]' => TRUE,
     ], 'Install');
diff --git a/tests/src/FunctionalJavascript/EntityPrintAdminTest.php b/tests/src/FunctionalJavascript/EntityPrintAdminTest.php
index 0202783..786bdb1 100644
--- a/tests/src/FunctionalJavascript/EntityPrintAdminTest.php
+++ b/tests/src/FunctionalJavascript/EntityPrintAdminTest.php
@@ -69,7 +69,7 @@ class EntityPrintAdminTest extends WebDriverTestBase {
     $assert->pageTextContains('Dompdf is not available because it is not configured. Please install with:');
 
     // Ensure saving the form without any PDF engine selected doesn't blow up.
-    $this->drupalPostForm(NULL, [], 'Save configuration');
+    $this->submitForm([], 'Save configuration');
 
     // Assert the intial config values.
     $this->getSession()->getPage()->fillField('pdf', 'testprintengine');
@@ -81,14 +81,14 @@ class EntityPrintAdminTest extends WebDriverTestBase {
     $assert->fieldValueEquals('test_word_print_engine[test_word_setting]', 'my-default');
 
     // Ensure the plugin gets the chance to validate the form.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'pdf' => 'testprintengine',
       'word_docx' => 'test_word_print_engine',
       'testprintengine[test_engine_setting]' => 'rejected',
     ], 'Save configuration');
     $assert->pageTextContains('Setting has an invalid value');
 
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'default_css' => 0,
       'force_download' => 0,
       'pdf' => 'testprintengine',
diff --git a/tests/src/Kernel/PrintBuilderTest.php b/tests/src/Kernel/PrintBuilderTest.php
index 805664c..fd16397 100644
--- a/tests/src/Kernel/PrintBuilderTest.php
+++ b/tests/src/Kernel/PrintBuilderTest.php
@@ -118,7 +118,7 @@ class PrintBuilderTest extends KernelTestBase {
 
     // Print builder generates a filename for us.
     $uri = $builder->savePrintable([$node], $print_engine);
-    $this->assertRegExp('#public://(.*)\.pdf#', $uri);
+    $this->assertMatchesRegularExpression('#public://(.*)\.pdf#', $uri);
 
     $filename = $this->randomMachineName() . 'pdf';
     $uri = $builder->savePrintable([$node], $print_engine, 'public', $filename);
diff --git a/tests/src/Unit/AssetCollectorTest.php b/tests/src/Unit/AssetCollectorTest.php
index c9e9b0e..a3b5d84 100644
--- a/tests/src/Unit/AssetCollectorTest.php
+++ b/tests/src/Unit/AssetCollectorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\entity_print\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Extension\Extension;
 use Drupal\Core\Extension\InfoParserInterface;
 use Drupal\Core\Extension\ThemeExtensionList;
@@ -18,6 +19,7 @@ use Symfony\Component\EventDispatcher\EventDispatcherInterface;
  */
 class AssetCollectorTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * CSS Alter event should always fire, even when no entries in the theme file.
    */
