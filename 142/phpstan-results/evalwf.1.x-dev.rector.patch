diff --git a/evalwf.install b/evalwf.install
index d40bcc7..cd2ea15 100644
--- a/evalwf.install
+++ b/evalwf.install
@@ -43,7 +43,7 @@ function evalwf_update_8102(&$sandbox) {
   $query = \Drupal::entityQuery('evalwf');
   $entities = $query->execute();
   foreach ($entities as $eid) {
-    $entity = entity_load('evalwf',$eid);
+    $entity = \Drupal::service('entity_type.manager')->getStorage('evalwf')->load($eid);
     $conditions = unserialize($entity->conditions_data);
     foreach ($conditions['table'] as &$row) {
       $url = ( isset($row['url']) ? $row['url'] : ( isset($row['elseurl']) ? $row['elseurl'] : null) );
diff --git a/evalwf.module b/evalwf.module
index f04e196..e1eb26b 100644
--- a/evalwf.module
+++ b/evalwf.module
@@ -1,4 +1,8 @@
 <?php
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Url;
+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\Core\Form\FormStateInterface;
 /**
 *    This file is part of EvalWF Module - Automatic evaluation of forms was made by webform module.
 *    Copyright (C) 2020  University of Szeged
@@ -29,7 +33,7 @@
 *   @param entity    - the current EntityInterface
 *   @return array    - operations of different type of entities
 */
-function evalwf_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
+function evalwf_entity_operation(EntityInterface $entity) {
   $operations = array();
   $entity_typeid = $entity->getEntityTypeId();
 
@@ -37,38 +41,38 @@ function evalwf_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
     case 'evalwf':
       $operations['edit'] = array(
         'title' => t('Edit Settings'),
-        'url' => \Drupal\Core\Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' => $entity->webform_id] ),
+        'url' => Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' => $entity->webform_id] ),
         'weight' => 40,
       );
       $operations['add'] = array(
         'title' => t('Add Evaluation'),
-        'url' => \Drupal\Core\Url::fromRoute('entity.evalwf.add_form'),
+        'url' => Url::fromRoute('entity.evalwf.add_form'),
         'weight' => 50,
       );
       $operations['export'] = array(
         'title' => t('Export Settings'),
-        'url' => \Drupal\Core\Url::fromRoute('config.export_single', ['config_type' => 'evalwf', 'config_name' => $entity->id ] ),
+        'url' => Url::fromRoute('config.export_single', ['config_type' => 'evalwf', 'config_name' => $entity->id ] ),
         'weight' => 50,
       );
       break;
     case 'evalwf_evaluation':
       $operations['view'] = array(
         'title' => t('View'),
-        'url' => \Drupal\Core\Url::fromRoute('entity.evalwf_evaluation.view_form', ['evalwf_evaluation' => $entity->id] ),
+        'url' => Url::fromRoute('entity.evalwf_evaluation.view_form', ['evalwf_evaluation' => $entity->id] ),
         'weight' => 40,
       );
       break;
     case 'webform':
       $operations['evaluation'] = array(
         'title' => t('Set Evaluation'),
-        'url' => \Drupal\Core\Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' => $entity->id()] ),
+        'url' => Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' => $entity->id()] ),
         'weight' => 50,
       );
       break;
     case 'webform_submission':
       $operations['evaluate'] = array(
         'title' => t('Evaluate'),
-        'url' => \Drupal\Core\Url::fromRoute('evalwf.withpath.content', ['webform' => $entity->bundle(), 'webform_submission' => $entity->id()] ),
+        'url' => Url::fromRoute('evalwf.withpath.content', ['webform' => $entity->bundle(), 'webform_submission' => $entity->id()] ),
         'weight' => 50,
       );
       break;
@@ -84,10 +88,10 @@ function evalwf_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
 *    @param route_name
 *    @param route_match
 */
-function evalwf_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
+function evalwf_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     case 'help.page.evalwf':
-      $modulepath = base_path() . drupal_get_path('module', 'evalwf');
+      $modulepath = base_path() . \Drupal::service('extension.list.module')->getPath('evalwf');
       $help  = '<p>'.  t('This module can make automatic form evaulation which was made by webform module.');
       $help .= '<BR>'. t('Just create your evaluation for that form. When user fills the form, this modul evaluate it with your eval options.') .'</p>';
       $help .= '<details><summary>'. t('Creating a from with Webform') .'</summary>';
@@ -147,7 +151,7 @@ function evalwf_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $rout
 *    @param form       - the current Form object
 *    @param form_state - the current FormStateInterface object
 */
-function evalwf_form_evalwf_conditions_settings_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function evalwf_form_evalwf_conditions_settings_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $elements = $form_state->getUserInput();
   $myentity = $form_state->getFormObject()->getEntity();
 
@@ -181,7 +185,7 @@ function evalwf_form_evalwf_conditions_settings_form_alter(&$form, \Drupal\Core\
 *    @param form       - the current Form object
 *    @param form_state - the current FormStateInterface object
 */
-function evalwf_form_evalwf_evaluation_list_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function evalwf_form_evalwf_evaluation_list_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $form['filter_table'][0]['filter']['#value'] = (
     isset($form_state->getUserInput()['filter_table'][0]['filter']) ? $form_state->getUserInput()['filter_table'][0]['filter'] : null
   );
diff --git a/src/Controller/EvalWFController.php b/src/Controller/EvalWFController.php
index 1bcb777..9bc55fe 100644
--- a/src/Controller/EvalWFController.php
+++ b/src/Controller/EvalWFController.php
@@ -31,6 +31,7 @@
 
 namespace Drupal\evalwf\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\evalwf\Entity\EvalWF;
 use Drupal\evalwf\Entity\EvalWFEvaluation;
 use Drupal\webform\Entity\Webform;
@@ -416,7 +417,7 @@ class EvalWFController {
         $conditions = $this->getConditionsData( array_merge( array('AllTotal' => $result['points']), $result['elements_points']));
         if ($conditions) {
           $conditions[0]['title'] = t('Continue').' >>>';
-          $conditions[0]['url'] = \Drupal\Core\Url::fromUri($conditions[0]['url'])->setAbsolute(TRUE)->toString();
+          $conditions[0]['url'] = Url::fromUri($conditions[0]['url'])->setAbsolute(TRUE)->toString();
         }
 
         $elements = $this->buildelementstree(
@@ -551,7 +552,7 @@ class EvalWFController {
             $button = array(
               '#type' => 'link',
               '#title' => t('Edit element settings'),
-              '#url' => \Drupal\Core\Url::fromRoute('entity.evalwf.settings_form.elements', ['webform' => $this->wfid,] ),
+              '#url' => Url::fromRoute('entity.evalwf.settings_form.elements', ['webform' => $this->wfid,] ),
             );
             \Drupal::messenger()->addMessage(
               t('Evaluation settings of this webform haven\'t completed yet. Please fill and save Elements settings page...'),
@@ -570,17 +571,17 @@ class EvalWFController {
 
       if ($this->entity->directjump && (!$isadmin)) {
         $conditions = unserialize($evaluation->conditions_data);
-        $responseurl = \Drupal\Core\Url::fromUri($conditions[0]['url'])->setAbsolute(TRUE)->toString();
+        $responseurl = Url::fromUri($conditions[0]['url'])->setAbsolute(TRUE)->toString();
         if ( \Drupal::VERSION >= "9" ) {
           $response = new TrustedRedirectResponse( $responseurl, '302');
         }
         else {
           // Drupal 8 has an error with TrustedRedirectResponse
           // this way external urls not supported for directjump
-          if (\Drupal\Core\Url::fromUri($conditions[0]['url'])->setAbsolute(TRUE)->isExternal()) {
+          if (Url::fromUri($conditions[0]['url'])->setAbsolute(TRUE)->isExternal()) {
             return $conditions_form;
           }
-          $response = new \Symfony\Component\HttpFoundation\RedirectResponse( $responseurl, '302');
+          $response = new RedirectResponse( $responseurl, '302');
         }
         return $response;
       }
@@ -599,7 +600,7 @@ class EvalWFController {
         $button = array(
           '#type' => 'link',
           '#title' => t('Add evaluation settings'),
-          '#url' => \Drupal\Core\Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' =>  $this->wfid,] ),
+          '#url' => Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' =>  $this->wfid,] ),
         );
         \Drupal::messenger()->addMessage(
           t('No Evaluation was set to this webform... Please add evaluation settings first...'),
@@ -630,7 +631,7 @@ class EvalWFController {
         $css = file_get_contents( $cssfile );
       }
       else {
-        $cssfile = $_SERVER['DOCUMENT_ROOT'] . base_path() . drupal_get_path('module', 'evalwf') . '/css/evalwf-resultpage-theme.css';
+        $cssfile = $_SERVER['DOCUMENT_ROOT'] . base_path() . \Drupal::service('extension.list.module')->getPath('evalwf') . '/css/evalwf-resultpage-theme.css';
         if (file_exists($cssfile)) {
           $css = file_get_contents( $cssfile );
         }
diff --git a/src/Controller/EvalWFEvaluationListBuilder.php b/src/Controller/EvalWFEvaluationListBuilder.php
index 47c2da5..abecb81 100644
--- a/src/Controller/EvalWFEvaluationListBuilder.php
+++ b/src/Controller/EvalWFEvaluationListBuilder.php
@@ -24,6 +24,7 @@
 
 namespace Drupal\evalwf\Controller;
 
+use Drupal\user\Entity\User;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\wevform\WebformSubmissionListBuilder;
@@ -62,7 +63,7 @@ class EvalWFEvaluationListBuilder extends ConfigEntityListBuilder {
       $row['sent'] = $entity->sent;
       $row['sentt'] = $entity->sentto;
       $row['timestamp'] = $entity->timestamp;
-      $row['uid'] = \Drupal\user\Entity\User::load($entity->uid)->getAccountName();
+      $row['uid'] = User::load($entity->uid)->getAccountName();
       return $row + parent::buildRow($entity);
     }
     else {
diff --git a/src/Controller/EvalWFListBuilder.php b/src/Controller/EvalWFListBuilder.php
index 78b9a83..a0c6a6b 100644
--- a/src/Controller/EvalWFListBuilder.php
+++ b/src/Controller/EvalWFListBuilder.php
@@ -24,6 +24,7 @@
 
 namespace Drupal\evalwf\Controller;
 
+use Drupal\Core\Url;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 
@@ -68,7 +69,7 @@ class EvalWFListBuilder extends ConfigEntityListBuilder {
         'data' => array(
           '#type' => 'link',
           '#title' => count($res),
-          '#url' => \Drupal\Core\Url::fromRoute('entity.evalwf_evaluation.collection'),
+          '#url' => Url::fromRoute('entity.evalwf_evaluation.collection'),
         )
       )
       : '');
diff --git a/src/Entity/EvalWF.php b/src/Entity/EvalWF.php
index bc2df37..2cd7017 100644
--- a/src/Entity/EvalWF.php
+++ b/src/Entity/EvalWF.php
@@ -24,6 +24,7 @@
 
 namespace Drupal\evalwf\Entity;
 
+use Drupal\webform\Entity\Webform;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -224,7 +225,7 @@ use Drupal\Core\Form\FormStateInterface;
    *    @returns array - the (modified) conditions settings table
    */
   public function CreateConditionsTable( FormStateInterface $form_state, $op ) {
-    $webform = \Drupal\webform\Entity\Webform::load($this->webform_id);
+    $webform = Webform::load($this->webform_id);
     $webform_elements = $webform->getElementsDecoded();
     $e = $this->getelementslist($webform_elements);
     $e = array_merge( array( '' => '' , 'AllTotal' => 'Total points' ), $e );
diff --git a/src/Form/EvalWFEvaluationForm.php b/src/Form/EvalWFEvaluationForm.php
index b9cad60..e4bf7b6 100644
--- a/src/Form/EvalWFEvaluationForm.php
+++ b/src/Form/EvalWFEvaluationForm.php
@@ -27,6 +27,9 @@
 
 namespace Drupal\evalwf\Form;
 
+use Drupal\evalwf\Entity\EvalWF;
+use Drupal\Core\Url;
+use Drupal\webform\entity\WebformSubmission;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -163,14 +166,14 @@ class EvalWFEvaluationForm extends EntityForm {
       // TODO: run evaluation without emailing / maybe show results
       $resultform = $mycontroller->content( $wf, $wfs, true );
 
-      $evaluation = \Drupal\evalwf\Entity\EvalWF::LoadEntityByWebformID( $wf->id() );
+      $evaluation = EvalWF::LoadEntityByWebformID( $wf->id() );
 
       if ($evaluation) {
         if ($resultform && !empty($evaluation->elements_data)) {
           $button = array(
             '#type' => 'link',
             '#title' => t('View'),
-            '#url' => \Drupal\Core\Url::fromRoute('entity.evalwf_evaluation.view_form', [ 'evalwf_evaluation' => $target[2] ] ),
+            '#url' => Url::fromRoute('entity.evalwf_evaluation.view_form', [ 'evalwf_evaluation' => $target[2] ] ),
           );
           \Drupal::messenger()->addMessage( t('The selected submission has evaluated...') );
           \Drupal::messenger()->addMessage( $button );
@@ -180,7 +183,7 @@ class EvalWFEvaluationForm extends EntityForm {
         $button = array(
           '#type' => 'link',
           '#title' => t('Add evaluation settings'),
-          '#url' => \Drupal\Core\Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' => $wf->id(),] ),
+          '#url' => Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' => $wf->id(),] ),
         );
         \Drupal::messenger()->addMessage(
           t('No Evaluation was set to this webform... Please add evaluation settings first...'),
@@ -226,7 +229,7 @@ class EvalWFEvaluationForm extends EntityForm {
 
     foreach ( $submissions as $key => $value) {
       if (!in_array($key,$evaluations)) {
-        $webform_submission = \Drupal\webform\entity\WebformSubmission::load($key);
+        $webform_submission = WebformSubmission::load($key);
         $form['submissions'][$key] = [
           'id' => [ '#type' => 'markup', '#markup' => $value, ],
           'webform' => [ '#type' => 'markup', '#markup' => $webform_submission->bundle(), ],
diff --git a/src/Form/EvalWFForm.php b/src/Form/EvalWFForm.php
index a7a591a..a129a82 100644
--- a/src/Form/EvalWFForm.php
+++ b/src/Form/EvalWFForm.php
@@ -27,6 +27,8 @@
 
 namespace Drupal\evalwf\Form;
 
+use Drupal\webform\Entity\Webform;
+use Drupal\Core\Url;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -86,7 +88,7 @@ class EvalWFForm extends EntityForm {
           '#markup' => t('Please select webform for evaluation settings:').'<br>',
         ];
         foreach($wfids as $key => $value ) {
-          $wf = \Drupal\webform\Entity\Webform::load($key);
+          $wf = Webform::load($key);
           $query = \Drupal::entityQuery('evalwf')->condition('webform_id', $key);
           $entitys = $query->execute();
           $row[$key]= array(
@@ -97,8 +99,8 @@ class EvalWFForm extends EntityForm {
             'webform_id' => array(
               '#type' => 'link',
               '#title' => $value,
-              '#url' => ( in_array($key, $this->error_elements_list) ) ? \Drupal\Core\Url::fromRoute('entity.webform.collection') :
-                \Drupal\Core\Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' => $key,] ),
+              '#url' => ( in_array($key, $this->error_elements_list) ) ? Url::fromRoute('entity.webform.collection') :
+                Url::fromRoute('entity.evalwf.withpath.settings_form', ['webform' => $key,] ),
             ),
             'description' => array(
               '#type' => 'markup',
@@ -177,7 +179,7 @@ class EvalWFForm extends EntityForm {
           $form['webform']['chsettings'] = [
             '#type' => 'link',
             '#title' => 'Change this settings',
-            '#url' => \Drupal\Core\Url::fromRoute( 'entity.webform.settings_confirmation', ['webform' => $myentity->webform_id] ),
+            '#url' => Url::fromRoute( 'entity.webform.settings_confirmation', ['webform' => $myentity->webform_id] ),
             '#attributes' => ['target' => '_blank'],
           ];
 
@@ -201,7 +203,7 @@ class EvalWFForm extends EntityForm {
            $form['webform']['chhandler'] = [
              '#type' => 'link',
              '#title' => 'Change handler settings',
-             '#url' => \Drupal\Core\Url::fromRoute( 'entity.webform.handlers', ['webform' => $myentity->webform_id] ),
+             '#url' => Url::fromRoute( 'entity.webform.handlers', ['webform' => $myentity->webform_id] ),
              '#attributes' => ['target' => '_blank'],
            ];
            // if not handlerkey and confirmation_url not eq 'evalwf/[webform:id]/[webform_submission:sid]' may warn user?!
@@ -786,7 +788,7 @@ class EvalWFForm extends EntityForm {
 
     $this->error_elements_list = [];
     foreach($wfids as $key => $value ) {
-      $webform = \Drupal\webform\Entity\Webform::load($key);
+      $webform = Webform::load($key);
       $webform_elements = $webform->getElementsDecoded();
 
       $this->elements_list = [];
diff --git a/src/Plugin/WebformHandler/EvalWFWebformHandler.php b/src/Plugin/WebformHandler/EvalWFWebformHandler.php
index 1ec46f2..cfd6e74 100644
--- a/src/Plugin/WebformHandler/EvalWFWebformHandler.php
+++ b/src/Plugin/WebformHandler/EvalWFWebformHandler.php
@@ -26,6 +26,8 @@
 
 namespace Drupal\evalwf\Plugin\WebformHandler;
 
+use Drupal\Core\Url;
+use Drupal\Core\Link;
 use Drupal\webform\Plugin\WebformHandlerBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\webform\WebformSubmissionInterface;
@@ -81,7 +83,7 @@ class EvalWFWebformHandler extends WebformHandlerBase {
     $form['evalwf']['setup'] = [
       '#type' => 'link',
       '#title' => $this->t('Add/Manage EvalWF settings'),
-      '#url' => \Drupal\Core\Url::fromRoute( 'entity.evalwf.withpath.settings_form', ['webform' => $wfid] ),
+      '#url' => Url::fromRoute( 'entity.evalwf.withpath.settings_form', ['webform' => $wfid] ),
       '#attributes' => ['target' => '_blank'],
     ];
 
@@ -109,7 +111,7 @@ class EvalWFWebformHandler extends WebformHandlerBase {
     $form['evalwf']['chsettings'] = [
       '#type' => 'link',
       '#title' => 'Change this settings',
-      '#url' => \Drupal\Core\Url::fromRoute( 'entity.webform.settings_confirmation', ['webform' => $wfid] ),
+      '#url' => Url::fromRoute( 'entity.webform.settings_confirmation', ['webform' => $wfid] ),
       '#attributes' => ['target' => '_blank'],
     ];
 
@@ -149,15 +151,15 @@ class EvalWFWebformHandler extends WebformHandlerBase {
       if (!in_array( explode('://', trim($curl) )[0],['http','https']) && !in_array( explode(':/', trim($curl) )[0],['internal'])) {
         $curl = 'internal:/' . $curl;
       }
-      $url = \Drupal\Core\Url::fromUri( $curl )->setAbsolute(TRUE)->setOption( 'attributes', array( 'target' => '_blank' ));
+      $url = Url::fromUri( $curl )->setAbsolute(TRUE)->setOption( 'attributes', array( 'target' => '_blank' ));
 
       \Drupal::messenger()->addMessage(
-        \Drupal\Core\Link::fromTextAndUrl('Open confirmation url', $url )
+        Link::fromTextAndUrl('Open confirmation url', $url )
       );
     }
 
     // evalwf/[webform:id]/[webform_submission:sid]
-    $target = \Drupal\Core\Url::fromRoute('evalwf.withpath.content', [
+    $target = Url::fromRoute('evalwf.withpath.content', [
         'webform' => $wfid, 'webform_submission' => $sid
       ])->setAbsolute(TRUE)->toString();
 
