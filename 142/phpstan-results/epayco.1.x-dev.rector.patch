diff --git a/modules/commerce_epayco/src/Plugin/Commerce/PaymentGateway/OnePageCheckout.php b/modules/commerce_epayco/src/Plugin/Commerce/PaymentGateway/OnePageCheckout.php
index c7fddd8..377a751 100755
--- a/modules/commerce_epayco/src/Plugin/Commerce/PaymentGateway/OnePageCheckout.php
+++ b/modules/commerce_epayco/src/Plugin/Commerce/PaymentGateway/OnePageCheckout.php
@@ -70,7 +70,7 @@ class OnePageCheckout extends OffsiteCheckoutBase {
           'test' => $this->getMode() == 'test',
           'remote_id' => $data['remote_id'],
           'remote_state' => $data['remote_state'],
-          'authorized' => REQUEST_TIME,
+          'authorized' => \Drupal::time()->getRequestTime(),
         ])->save();
         $this->messenger()->addMessage($this->t('Transaction @status by ePayco.', ['@status' => $data['remote_state']]));
         break;
diff --git a/modules/commerce_epayco/src/Plugin/Commerce/PaymentGateway/StandardCheckout.php b/modules/commerce_epayco/src/Plugin/Commerce/PaymentGateway/StandardCheckout.php
index 4253287..9de4d49 100755
--- a/modules/commerce_epayco/src/Plugin/Commerce/PaymentGateway/StandardCheckout.php
+++ b/modules/commerce_epayco/src/Plugin/Commerce/PaymentGateway/StandardCheckout.php
@@ -45,7 +45,7 @@ class StandardCheckout extends OffsiteCheckoutBase {
           'test' => $this->getMode() == 'test',
           'remote_id' => $data['remote_id'],
           'remote_state' => $data['remote_state'],
-          'authorized' => REQUEST_TIME,
+          'authorized' => \Drupal::time()->getRequestTime(),
         ])->save();
         $this->messenger()->addMessage($this->t('Transaction @status by ePayco.', ['@status' => $data['remote_state']]));
         break;
diff --git a/src/Controller/FactoryListBuilder.php b/src/Controller/FactoryListBuilder.php
index 26d18ed..094a6f3 100644
--- a/src/Controller/FactoryListBuilder.php
+++ b/src/Controller/FactoryListBuilder.php
@@ -47,7 +47,7 @@ class FactoryListBuilder extends ConfigEntityListBuilder {
     foreach ($this->getVars($entity) as $key => $value) {
       array_push($row['info']['#items'], $key . ': ' . $value);
     }
-    $row['info'] = render($row['info']);
+    $row['info'] = \Drupal::service('renderer')->render($row['info']);
 
     return $row + parent::buildRow($entity);
   }
diff --git a/src/Controller/TransactionResponse.php b/src/Controller/TransactionResponse.php
index 69b0bfe..937d2c0 100644
--- a/src/Controller/TransactionResponse.php
+++ b/src/Controller/TransactionResponse.php
@@ -90,7 +90,7 @@ class TransactionResponse implements ContainerInjectionInterface {
         if ($data['success']) {
           /** @var \Drupal\epayco\Event\GatewayTransactionEvent $event */
           $event = new GatewayTransactionEvent($data);
-          $this->eventDispatcher->dispatch(GatewayTransactionEvents::EPAYCO_TRANSACTION_RESPONSE, $event);
+          $this->eventDispatcher->dispatch($event, GatewayTransactionEvents::EPAYCO_TRANSACTION_RESPONSE);
         }
       }
     }
diff --git a/src/Event/GatewayTransactionEvent.php b/src/Event/GatewayTransactionEvent.php
index 9caecd3..f7362bb 100644
--- a/src/Event/GatewayTransactionEvent.php
+++ b/src/Event/GatewayTransactionEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\epayco\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class GatewayTransactionEvent.
