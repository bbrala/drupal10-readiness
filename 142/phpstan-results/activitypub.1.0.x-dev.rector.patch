diff --git a/src/ProxyClass/ParamConverter/ActivityPubActorConverter.php b/src/ProxyClass/ParamConverter/ActivityPubActorConverter.php
index fe8d06e..ab102d4 100644
--- a/src/ProxyClass/ParamConverter/ActivityPubActorConverter.php
+++ b/src/ProxyClass/ParamConverter/ActivityPubActorConverter.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\activitypub\ProxyClass\ParamConverter {
 
+    use Drupal\Core\ParamConverter\ParamConverterInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Symfony\Component\Routing\Route;
     /**
      * Provides a proxy class for \Drupal\activitypub\ParamConverter\ActivityPubActorConverter.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class ActivityPubActorConverter implements \Drupal\Core\ParamConverter\ParamConverterInterface
+    class ActivityPubActorConverter implements ParamConverterInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -46,7 +50,7 @@ namespace Drupal\activitypub\ProxyClass\ParamConverter {
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\activitypub\ProxyClass\ParamConverter {
         /**
          * {@inheritdoc}
          */
-        public function applies($definition, $name, \Symfony\Component\Routing\Route $route)
+        public function applies($definition, $name, Route $route)
         {
             return $this->lazyLoadItself()->applies($definition, $name, $route);
         }
diff --git a/src/Services/ActivityPubMediaCache.php b/src/Services/ActivityPubMediaCache.php
index e2b444a..1b77e3b 100644
--- a/src/Services/ActivityPubMediaCache.php
+++ b/src/Services/ActivityPubMediaCache.php
@@ -72,11 +72,11 @@ class ActivityPubMediaCache implements ActivityPubMediaCacheInterface {
           $filename = $style->buildUrl($filename);
         }
         else {
-          $filename = file_create_url($filename);
+          $filename = \Drupal::service('file_url_generator')->generateAbsoluteString($filename);
         }
       }
       else {
-        $filename = file_create_url($filename);
+        $filename = \Drupal::service('file_url_generator')->generateAbsoluteString($filename);
       }
     }
 
diff --git a/src/Services/ActivityPubUtility.php b/src/Services/ActivityPubUtility.php
index b5c049f..83a978e 100644
--- a/src/Services/ActivityPubUtility.php
+++ b/src/Services/ActivityPubUtility.php
@@ -122,9 +122,9 @@ class ActivityPubUtility implements ActivityPubUtilityInterface {
     else {
       $avatar_path = activitypub_default_avatar_path();
       if ($avatar_path == 'assets/avatar.png') {
-        $avatar_path = drupal_get_path('module', 'activitypub') . '/' . $avatar_path;
+        $avatar_path = \Drupal::service('extension.list.module')->getPath('activitypub') . '/' . $avatar_path;
       }
-      $image_url = file_create_url($avatar_path);
+      $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($avatar_path);
     }
 
     return $image_url;
diff --git a/src/Services/Type/TypePluginBase.php b/src/Services/Type/TypePluginBase.php
index 093550b..5264c1f 100644
--- a/src/Services/Type/TypePluginBase.php
+++ b/src/Services/Type/TypePluginBase.php
@@ -245,7 +245,7 @@ abstract class TypePluginBase extends PluginBase implements TypePluginInterface,
       return $image_style->buildUrl($file->getFileUri());
     }
     else {
-      return file_create_url($file->getFileUri());
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     }
   }
 
diff --git a/tests/src/Functional/ActivityPubTestBase.php b/tests/src/Functional/ActivityPubTestBase.php
index 8af47e5..b6f713d 100644
--- a/tests/src/Functional/ActivityPubTestBase.php
+++ b/tests/src/Functional/ActivityPubTestBase.php
@@ -99,7 +99,7 @@ abstract class ActivityPubTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\user\RoleInterface $role */
@@ -135,14 +135,16 @@ abstract class ActivityPubTestBase extends BrowserTestBase {
 
     $this->drupalGet('user/' . $this->authenticatedUserOne->id() . '/activitypub');
     $assert_session->responseContains('ActivityPub is not enabled for your account.');
+    $this->drupalGet('user/' . $this->authenticatedUserOne->id() . '/activitypub/settings');
 
-    $this->drupalPostForm('user/' . $this->authenticatedUserOne->id() . '/activitypub/settings', $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $assert_session->responseContains('Please enter your ActivityPub username.');
     $edit = [
       'activitypub_enable' => TRUE,
       'activitypub_name' => $this->accountNameOne,
     ];
-    $this->drupalPostForm('user/' . $this->authenticatedUserOne->id() . '/activitypub/settings', $edit, 'Save');
+    $this->drupalGet('user/' . $this->authenticatedUserOne->id() . '/activitypub/settings');
+    $this->submitForm($edit, 'Save');
 
     if ($enable_second_account) {
       $this->drupalLogin($this->authenticatedUserTwo);
@@ -150,7 +152,8 @@ abstract class ActivityPubTestBase extends BrowserTestBase {
         'activitypub_enable' => TRUE,
         'activitypub_name' => $this->accountNameTwo,
       ];
-      $this->drupalPostForm('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings', $edit, 'Save');
+      $this->drupalGet('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings');
+      $this->submitForm($edit, 'Save');
     }
   }
 
@@ -362,7 +365,8 @@ abstract class ActivityPubTestBase extends BrowserTestBase {
       'collection' => 'outbox',
       'status' => 0,
     ];
-    $this->drupalPostForm('activitypub/add', $edit, 'Save');
+    $this->drupalGet('activitypub/add');
+    $this->submitForm($edit, 'Save');
     $this->drupalLogout();
 
     if ($run_queue) {
@@ -394,7 +398,8 @@ abstract class ActivityPubTestBase extends BrowserTestBase {
     $edit = [
       'process_outbox_handler' => 'drush',
     ];
-    $this->drupalPostForm('admin/config/services/activitypub', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/services/activitypub');
+    $this->submitForm($edit, 'Save configuration');
     $this->drupalLogout();;
   }
 
diff --git a/tests/src/Functional/ActorTest.php b/tests/src/Functional/ActorTest.php
index dbb2b03..1c53187 100644
--- a/tests/src/Functional/ActorTest.php
+++ b/tests/src/Functional/ActorTest.php
@@ -31,18 +31,22 @@ class ActorTest extends ActivityPubTestBase {
       'activitypub_name' => 'fediverse accountname',
     ];
     $this->drupalLogin($this->authenticatedUserTwo);
-    $this->drupalPostForm('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings', $edit, 'Save');
+    $this->drupalGet('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings');
+    $this->submitForm($edit, 'Save');
     $assert_session->responseContains('The username can only contain letters and numbers.');
 
     $edit['activitypub_name'] = 'fediverseaccountname_';
-    $this->drupalPostForm('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings', $edit, 'Save');
+    $this->drupalGet('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings');
+    $this->submitForm($edit, 'Save');
     $assert_session->responseContains('The username can only contain letters and numbers.');
 
     $edit['activitypub_name'] = $this->accountNameOne;
-    $this->drupalPostForm('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings', $edit, 'Save');
+    $this->drupalGet('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings');
+    $this->submitForm($edit, 'Save');
     $assert_session->responseContains('This username is already taken.');
     $edit['activitypub_name'] = $this->accountNameTwo;
-    $this->drupalPostForm('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings', $edit, 'Save');
+    $this->drupalGet('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings');
+    $this->submitForm($edit, 'Save');
     $this->drupalLogout();
 
     $this->drupalGet(Url::fromRoute('activitypub.inbox', ['user' => $this->authenticatedUserOne->id(), 'activitypub_actor' => $this->accountNameOne])->toString());
@@ -60,7 +64,8 @@ class ActorTest extends ActivityPubTestBase {
     $assert_session->statusCodeEquals(404);
     $this->drupalGet('user/' . $this->authenticatedUserOne->id() . '/activitypub/delete/' . $this->accountNameTwo);
     $assert_session->statusCodeEquals(403);
-    $this->drupalPostForm('user/' . $this->authenticatedUserOne->id() . '/activitypub/delete/' . $this->accountNameOne, array(), 'Confirm');
+    $this->drupalGet('user/' . $this->authenticatedUserOne->id() . '/activitypub/delete/' . $this->accountNameOne);
+    $this->submitForm(array(), 'Confirm');
     self::assertTrue(!file_exists('private://activitypub/keys/' . $this->accountNameOne . '/public.pem'));
     $this->drupalGet('user/' . $this->authenticatedUserOne->id() . '/activitypub');
     $assert_session->responseNotContains('ActivityPub is enabled.');
@@ -88,7 +93,8 @@ class ActorTest extends ActivityPubTestBase {
     $edit = [
       'activitypub_summary' => 'Hi, I am just testing the Drupal integration',
     ];
-    $this->drupalPostForm('user/' . $this->authenticatedUserOne->id() . '/activitypub/settings', $edit, 'Save');
+    $this->drupalGet('user/' . $this->authenticatedUserOne->id() . '/activitypub/settings');
+    $this->submitForm($edit, 'Save');
     $this->drupalLogout();
     $this->drupalGet(Url::fromRoute('activitypub.user.self', ['user' => $this->authenticatedUserOne->id(), 'activitypub_actor' => $this->accountNameOne])->toString());
     $assert_session->statusCodeEquals(200);
diff --git a/tests/src/Functional/CommentTest.php b/tests/src/Functional/CommentTest.php
index 413819a..ecd2b6e 100644
--- a/tests/src/Functional/CommentTest.php
+++ b/tests/src/Functional/CommentTest.php
@@ -46,7 +46,7 @@ class CommentTest extends ActivityPubTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp(){
+  protected function setUp(): void{
     parent::setUp();
 
     /** @var \Drupal\user\RoleInterface $role */
@@ -72,10 +72,13 @@ class CommentTest extends ActivityPubTestBase {
       'process_inbox_handler' => 'drush',
       'comment_create_enable' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/services/activitypub', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/services/activitypub');
+    $this->submitForm($edit, 'Save configuration');
     $edit = ['existing_storage_name' => 'activitypub_activity', 'existing_storage_label' => 'Activity reference'];
-    $this->drupalPostForm('admin/structure/comment/manage/comment/fields/add-field', $edit, 'Save and continue');
-    $this->drupalPostForm('admin/structure/comment/manage/comment/display', ['fields[activitypub_activity][region]' => 'hidden'], 'Save');
+    $this->drupalGet('admin/structure/comment/manage/comment/fields/add-field');
+    $this->submitForm($edit, 'Save and continue');
+    $this->drupalGet('admin/structure/comment/manage/comment/display');
+    $this->submitForm(['fields[activitypub_activity][region]' => 'hidden'], 'Save');
 
     $node_content = 'But who will read it?';
     $node_values = [
diff --git a/tests/src/Functional/FollowTest.php b/tests/src/Functional/FollowTest.php
index 1561fa3..23921a8 100644
--- a/tests/src/Functional/FollowTest.php
+++ b/tests/src/Functional/FollowTest.php
@@ -89,7 +89,8 @@ class FollowTest extends ActivityPubTestBase {
     $edit = [
       'activitypub_blocked_domains' => 'http://blocked.domain*',
     ];
-    $this->drupalPostForm('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings', $edit, 'Save');
+    $this->drupalGet('user/' . $this->authenticatedUserTwo->id() . '/activitypub/settings');
+    $this->submitForm($edit, 'Save');
     $assert_session->responseContains('http://blocked.domain*');
     $this->drupalLogout();
 
diff --git a/tests/src/Functional/OutboxTest.php b/tests/src/Functional/OutboxTest.php
index af6b2bb..2e1b88f 100644
--- a/tests/src/Functional/OutboxTest.php
+++ b/tests/src/Functional/OutboxTest.php
@@ -48,7 +48,7 @@ class OutboxTest extends ActivityPubTestBase {
       'body[0][value]' => 'Hello world!',
       'activitypub_type' => 'map',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $assert_session->addressEquals('node/1');
     $this->drupalGet('node/1/edit');
     $assert_session->pageTextContains('This post has been sent to the outbox.');
@@ -75,7 +75,7 @@ class OutboxTest extends ActivityPubTestBase {
       'body[0][value]' => 'Hello world!',
       'activitypub_type' => 'map',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $assert_session->addressEquals('node/2');
     $this->drupalGet('node/2/edit');
     $assert_session->pageTextContains('This post has been sent to the outbox.');
@@ -130,7 +130,7 @@ class OutboxTest extends ActivityPubTestBase {
       'activitypub_to' => $object_href,
       'status[value]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $count = \Drupal::queue(ACTIVITYPUB_OUTBOX_QUEUE)->numberOfItems();
     self::assertEquals(0, $count);
 
@@ -142,7 +142,7 @@ class OutboxTest extends ActivityPubTestBase {
       'activitypub_type' => 'map',
       'activitypub_to' => $object_href,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->drupalLogout();
 
     /** @var \Drupal\node\NodeInterface $node */
@@ -220,7 +220,7 @@ class OutboxTest extends ActivityPubTestBase {
       'body[0][value]' => 'Hello world!',
       'activitypub_type' => 'map',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->drupalLogout();
 
     /** @var \Drupal\node\NodeInterface $node */
@@ -251,7 +251,8 @@ class OutboxTest extends ActivityPubTestBase {
     self::assertEquals($node->get('body')->value, $json['object']['content']);
 
     $this->drupalLogin($this->authenticatedUserOne);
-    $this->drupalPostForm('node/' . $node->id() . '/delete', [], 'Delete');
+    $this->drupalGet('node/' . $node->id() . '/delete');
+    $this->submitForm([], 'Delete');
     $count = \Drupal::queue(ACTIVITYPUB_OUTBOX_QUEUE)->numberOfItems();
     self::assertEquals(1, $count);
 
