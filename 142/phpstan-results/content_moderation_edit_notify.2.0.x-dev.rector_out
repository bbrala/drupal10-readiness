modules/contrib/content_moderation_edit_notify/content_moderation_edit_notify.module
modules/contrib/content_moderation_edit_notify/content_moderation_edit_notify.tokens.inc
modules/contrib/content_moderation_edit_notify/src/Controller/ContentModerationNotifyController.php
modules/contrib/content_moderation_edit_notify/src/Form/ContentModerationNotifySettingsForm.php
modules/contrib/content_moderation_edit_notify/src/Hook/NodeFormAlter.php
modules/contrib/content_moderation_edit_notify/tests/src/Functional/ContentModerationNotifyConfigTest.php
modules/contrib/content_moderation_edit_notify/tests/src/Functional/ContentModerationNotifyTest.php
modules/contrib/content_moderation_edit_notify/tests/src/FunctionalJavascript/ContentModerationNotifyJsTest.php
modules/contrib/content_moderation_edit_notify/tests/src/FunctionalJavascript/ContentModerationNotifyLocaleJsTest.php
modules/contrib/content_moderation_edit_notify/tests/src/FunctionalJavascript/ContentModerationNotifyTestBase.php
modules/contrib/content_moderation_edit_notify/tests/src/Kernel/ContentModerationNotifyControllerKernelTest.php

1 file with changes
===================

1) modules/contrib/content_moderation_edit_notify/tests/src/Kernel/ContentModerationNotifyControllerKernelTest.php:95

    ---------- begin diff ----------
@@ @@
     $result = $this->contentModerationNotifyController->check($node, $node);

     $this->assertTrue($node->isDefaultRevision());
-    $this->assertEqual($result, new AjaxResponse(), 'Same revision expect empty response');
+    $this->assertEquals($result, new AjaxResponse(), 'Same revision expect empty response');

     $nodePreviousRevision = $this->nodeStorage->loadRevision($node->getRevisionId());

@@ @@
     $french_node->save();

     $result = $this->contentModerationNotifyController->check($french_node, $nodePreviousRevision);
-    $this->assertEqual($result, new AjaxResponse(), 'Same revision expect empty response');
+    $this->assertEquals($result, new AjaxResponse(), 'Same revision expect empty response');
   }

   /**
@@ @@
   private function assertResultCommandMatch($result, $node, $messageConfigName, $messageType) {
     $result = $result->getCommands()[0];

-    $this->assertEqual($result['command'], 'message', 'Result message contain our message');
-    $this->assertEqual($result['messageOptions']['type'], $messageType, 'Result message is of proper type');
+    $this->assertEquals($result['command'], 'message', 'Result message contain our message');
+    $this->assertEquals($result['messageOptions']['type'], $messageType, 'Result message is of proper type');

     $message = $this->token->replace($this->config->get($messageConfigName), ['node' => $node]);
-    $this->assertEqual($result['message'], $message, 'Result message is what expected for published');
+    $this->assertEquals($result['message'], $message, 'Result message is what expected for published');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

