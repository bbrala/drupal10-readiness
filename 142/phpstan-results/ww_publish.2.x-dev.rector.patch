diff --git a/src/Events/ArticleFieldsEvent.php b/src/Events/ArticleFieldsEvent.php
index d3e99a6..749ea23 100644
--- a/src/Events/ArticleFieldsEvent.php
+++ b/src/Events/ArticleFieldsEvent.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\ww_publish\Events;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\node\NodeInterface;
 use Drupal\ww_publish\Message;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Allows to alter the created node.
diff --git a/src/Events/ParagraphFieldEvent.php b/src/Events/ParagraphFieldEvent.php
index 49e51bf..ed304fd 100644
--- a/src/Events/ParagraphFieldEvent.php
+++ b/src/Events/ParagraphFieldEvent.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\ww_publish\Events;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\paragraphs\ParagraphInterface;
 use Drupal\ww_publish\Message;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Allows to alter the paragraph that is created for a given content component.
diff --git a/src/Events/PreImportEvent.php b/src/Events/PreImportEvent.php
index d68199a..4750c41 100644
--- a/src/Events/PreImportEvent.php
+++ b/src/Events/PreImportEvent.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\ww_publish\Events;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\node\NodeInterface;
 use Drupal\ww_publish\Message;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Allows to alter which node is updated or skip the import.
diff --git a/src/Image.php b/src/Image.php
index 892ec08..6413a5c 100644
--- a/src/Image.php
+++ b/src/Image.php
@@ -129,7 +129,7 @@ class Image {
     if ($this->config->get('debug_mode'))
       $this->logger->debug('File destination: <pre><code>@destination</code></pre>', ['@destination' => print_r($destination, TRUE)]);
 
-    $file = file_save_data($file_data, $destination);
+    $file = \Drupal::service('file.repository')->writeData($file_data, $destination);
 
     if (!empty($image->focuspoint->x) && !empty($image->focuspoint->y) && \Drupal::moduleHandler()->moduleExists('focal_point')) {
       $image_file = \Drupal::service('image.factory')->get($file->getFileUri());
diff --git a/tests/src/Functional/WwPublishMessageFormTest.php b/tests/src/Functional/WwPublishMessageFormTest.php
index 4efbe3a..ae83f63 100644
--- a/tests/src/Functional/WwPublishMessageFormTest.php
+++ b/tests/src/Functional/WwPublishMessageFormTest.php
@@ -48,7 +48,7 @@ class WwPublishMessageFormTest extends BrowserTestBase {
    *
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->adminUser = $this->drupalCreateUser(['administer site configuration']);
     $node_type = NodeType::create([
@@ -108,17 +108,17 @@ class WwPublishMessageFormTest extends BrowserTestBase {
     $message->save();
     $message = SnsMessageEntity::load($message->id());
     $this->drupalGet('admin/config/services/ww-publish/sns-messages/' . $message->id());
-    $this->assertNoText("Article's links:");
-    $this->assertNoLink('Edit the article in Drupal');
-    $this->assertNoLink('Display the article');
+    $this->assertSession()->pageTextNotContains("Article's links:");
+    $this->assertSession()->linkNotExists('Edit the article in Drupal');
+    $this->assertSession()->linkNotExists('Display the article');
 
     // Delete an SNS Message.
     $this->drupalGet('admin/config/services/ww-publish/sns-messages/');
     $this->clickLink('Delete');
     $this->submitForm([], 'Delete');
-    $this->assertResponse(200);
-    $this->assertText('The sns message not_configured_test has been deleted.');
-    $this->assertText('There are no sns message entities yet.');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->pageTextContains('The sns message not_configured_test has been deleted.');
+    $this->assertSession()->pageTextContains('There are no sns message entities yet.');
 
     // Create a SNS Message with matching Article ID.
     $node_type = NodeType::load('article');
@@ -137,9 +137,9 @@ class WwPublishMessageFormTest extends BrowserTestBase {
     $message->save();
     $message = SnsMessageEntity::load($message->id());
     $this->drupalGet('admin/config/services/ww-publish/sns-messages/' . $message->id());
-    $this->assertText("Article's links:");
-    $this->assertLink('Edit the article in Drupal');
-    $this->assertLink('Display the article');
+    $this->assertSession()->pageTextContains("Article's links:");
+    $this->assertSession()->linkExists('Edit the article in Drupal');
+    $this->assertSession()->linkExists('Display the article');
 
     // Create a SNS Message with matching Story ID.
     $node_type = NodeType::load('article');
@@ -164,9 +164,9 @@ class WwPublishMessageFormTest extends BrowserTestBase {
     $message->save();
     $message = SnsMessageEntity::load($message->id());
     $this->drupalGet('admin/config/services/ww-publish/sns-messages/' . $message->id());
-    $this->assertText("Article's links:");
-    $this->assertLink('Edit the article in Drupal');
-    $this->assertLink('Display the article');
+    $this->assertSession()->pageTextContains("Article's links:");
+    $this->assertSession()->linkExists('Edit the article in Drupal');
+    $this->assertSession()->linkExists('Display the article');
   }
 
   /**
diff --git a/tests/src/Functional/WwPublishSettingsFormTest.php b/tests/src/Functional/WwPublishSettingsFormTest.php
index b3d744b..e3d2dca 100644
--- a/tests/src/Functional/WwPublishSettingsFormTest.php
+++ b/tests/src/Functional/WwPublishSettingsFormTest.php
@@ -50,7 +50,7 @@ class WwPublishSettingsFormTest extends BrowserTestBase {
    *
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create users.
     $this->adminUser = $this->drupalCreateUser(['administer site configuration']);
@@ -71,7 +71,7 @@ class WwPublishSettingsFormTest extends BrowserTestBase {
 
     // Test the empty form.
     $this->drupalGet('/admin/config/services/ww-publish');
-    $this->assertResponse('200');
+    $this->assertSession()->statusCodeEquals('200');
 
     $page = $this->getSession()->getPage();
     $page->hasContent('WoodWing Studio');
@@ -108,7 +108,7 @@ class WwPublishSettingsFormTest extends BrowserTestBase {
     $this->drupalLogin($this->guestUser);
 
     $this->drupalGet('/admin/config/services/ww-publish');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
 }
diff --git a/tests/src/Kernel/WwPublishImportTest.php b/tests/src/Kernel/WwPublishImportTest.php
index dafafc3..d15bf42 100644
--- a/tests/src/Kernel/WwPublishImportTest.php
+++ b/tests/src/Kernel/WwPublishImportTest.php
@@ -51,7 +51,7 @@ class WwPublishImportTest extends WwPublishTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('crop');
diff --git a/tests/src/Kernel/WwPublishTestBase.php b/tests/src/Kernel/WwPublishTestBase.php
index 792aa5d..cdaf268 100644
--- a/tests/src/Kernel/WwPublishTestBase.php
+++ b/tests/src/Kernel/WwPublishTestBase.php
@@ -45,7 +45,7 @@ abstract class WwPublishTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('file');
     $this->installEntitySchema('user');
