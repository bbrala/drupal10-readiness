modules/contrib/virtual_events/src/Annotation/VirtualEventFormatterPlugin.php
modules/contrib/virtual_events/src/Form/VirtualEventsEventEntityDeleteForm.php
modules/contrib/virtual_events/src/VirtualEventsConfigEntityListBuilder.php
modules/contrib/virtual_events/src/Annotation/VirtualEventPostHandlePlugin.php
modules/contrib/virtual_events/src/Annotation/VirtualEventPreHandlePlugin.php
modules/contrib/virtual_events/src/Annotation/VirtualEventSourcePlugin.php
modules/contrib/virtual_events/src/Controller/VirtualEventsEventEndedController.php
modules/contrib/virtual_events/src/VirtualEventsEventEntityHtmlRouteProvider.php
modules/contrib/virtual_events/src/Form/VirtualEventsEventEntityForm.php
modules/contrib/virtual_events/src/Entity/VirtualEventsConfigEntity.php
modules/contrib/virtual_events/src/VirtualEventsEventEntityListBuilder.php
modules/contrib/virtual_events/src/VirtualEventsFormatterEntityHtmlRouteProvider.php
modules/contrib/virtual_events/src/VirtualEventsFormatterEntityListBuilder.php
modules/contrib/virtual_events/src/VirtualEventsUninstallValidator.php
modules/contrib/virtual_events/src/Form/VirtualEventsFormatterEntityDeleteForm.php
modules/contrib/virtual_events/src/Entity/VirtualEventsConfigEntityInterface.php
modules/contrib/virtual_events/src/Entity/VirtualEventsEventEntity.php
modules/contrib/virtual_events/src/Form/VirtualEventsFormatterEntityForm.php
modules/contrib/virtual_events/virtual_events.install
modules/contrib/virtual_events/src/Entity/VirtualEventsEventEntityInterface.php
modules/contrib/virtual_events/src/Entity/VirtualEventsFormatterEntity.php
modules/contrib/virtual_events/src/Entity/VirtualEventsFormatterEntityInterface.php
modules/contrib/virtual_events/src/Form/VirtualEventsConfigEntityDeleteForm.php
modules/contrib/virtual_events/src/Form/VirtualEventsConfigEntityForm.php
modules/contrib/virtual_events/virtual_events.module
modules/contrib/virtual_events/src/Plugin/Derivative/FormatterBundleTypeLocalTask.php
modules/contrib/virtual_events/src/Plugin/VirtualEventFormatterPluginBase.php
modules/contrib/virtual_events/src/Plugin/VirtualEventFormatterPluginInterface.php
modules/contrib/virtual_events/src/Plugin/VirtualEventFormatterPluginManager.php
modules/contrib/virtual_events/src/Plugin/VirtualEventPostHandlePluginBase.php
modules/contrib/virtual_events/src/Plugin/VirtualEventPostHandlePluginInterface.php
modules/contrib/virtual_events/src/Plugin/VirtualEventPostHandlePluginManager.php
modules/contrib/virtual_events/src/Plugin/VirtualEventPreHandlePluginBase.php
modules/contrib/virtual_events/src/Plugin/VirtualEventPreHandlePluginInterface.php
modules/contrib/virtual_events/src/Plugin/VirtualEventPreHandlePluginManager.php
modules/contrib/virtual_events/src/Plugin/VirtualEventSourcePluginBase.php
modules/contrib/virtual_events/src/Plugin/VirtualEventSourcePluginInterface.php
modules/contrib/virtual_events/src/Plugin/VirtualEventSourcePluginManager.php
modules/contrib/virtual_events/src/ProxyClass/VirtualEventsUninstallValidator.php
modules/contrib/virtual_events/src/Services/VirtualEventsCommonService.php
modules/contrib/virtual_events/src/VirtualEventsConfigEntityHtmlRouteProvider.php

2 files with changes
====================

1) modules/contrib/virtual_events/src/ProxyClass/VirtualEventsUninstallValidator.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\virtual_events\ProxyClass {

+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\book\BookUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class VirtualEventsUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class VirtualEventsUninstallValidator implements ModuleUninstallValidatorInterface
     {

-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;

         /**
          * The id of the original proxied service.
@@ @@
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ @@
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/virtual_events/virtual_events.install:57

    ---------- begin diff ----------
@@ @@
  * Install new views and missing config.
  */
 function virtual_events_update_8001() {
-  $config_path = drupal_get_path('module', 'virtual_events') . '/config/install/';
+  $config_path = \Drupal::service('extension.list.module')->getPath('virtual_events') . '/config/install/';
   _virtual_events_update_or_install_config($config_path);
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

