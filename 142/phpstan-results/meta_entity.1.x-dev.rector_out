modules/contrib/meta_entity/meta_entity.install
modules/contrib/meta_entity/src/MetaEntityPermissionProvider.php
modules/contrib/meta_entity/tests/src/Kernel/MappedTargetEntityConstraintTest.php
modules/contrib/meta_entity/meta_entity.module
modules/contrib/meta_entity/src/MetaEntityRepository.php
modules/contrib/meta_entity/src/Entity/MetaEntity.php
modules/contrib/meta_entity/tests/src/Kernel/MetaEntityAccessTest.php
modules/contrib/meta_entity/src/Entity/MetaEntityInterface.php
modules/contrib/meta_entity/src/Entity/MetaEntityType.php
modules/contrib/meta_entity/src/MetaEntityRepositoryInterface.php
modules/contrib/meta_entity/src/MetaEntityReverseReferenceItemList.php
modules/contrib/meta_entity/src/Entity/MetaEntityTypeInterface.php
modules/contrib/meta_entity/tests/src/Kernel/MetaEntityRepositoryTest.php
modules/contrib/meta_entity/src/Form/MetaEntityForm.php
modules/contrib/meta_entity/tests/src/Kernel/MetaEntityTypeDependencyTest.php
modules/contrib/meta_entity/src/MetaEntityServiceProvider.php
modules/contrib/meta_entity/src/Form/MetaEntityTypeForm.php
modules/contrib/meta_entity/src/MetaEntityTypeListBuilder.php
modules/contrib/meta_entity/tests/src/Kernel/TargetEntityComputedFieldTest.php
modules/contrib/meta_entity/src/Plugin/Validation/Constraint/MappedTargetEntity.php
modules/contrib/meta_entity/src/Plugin/Validation/Constraint/MappedTargetEntityValidator.php
modules/contrib/meta_entity/src/Plugin/Validation/Constraint/MetaEntityConstraintTrait.php
modules/contrib/meta_entity/src/Plugin/Validation/Constraint/UniquePerMetaTypeAndTarget.php
modules/contrib/meta_entity/src/Plugin/Validation/Constraint/UniquePerMetaTypeAndTargetValidator.php
modules/contrib/meta_entity/tests/modules/meta_entity_test/meta_entity_test.module
modules/contrib/meta_entity/tests/src/Functional/MetaEntityCacheTagsTest.php
modules/contrib/meta_entity/tests/src/Kernel/TargetEntityDependencyTest.php
modules/contrib/meta_entity/tests/src/Kernel/UniquePerMetaTypeAndTargetConstraintTest.php
modules/contrib/meta_entity/tests/src/Kernel/AutoCreationTest.php
modules/contrib/meta_entity/src/MetaEntityAccessControlHandler.php
modules/contrib/meta_entity/src/MetaEntityListBuilder.php

1 file with changes
===================

1) modules/contrib/meta_entity/src/Form/MetaEntityForm.php:21

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->getEntity()->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result === SAVED_NEW) {
       $this->logger('meta_entity')->notice('Created meta new entity %label', $logger_arguments);
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

