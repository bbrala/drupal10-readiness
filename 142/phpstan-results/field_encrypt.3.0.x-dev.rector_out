modules/contrib/field_encrypt/field_encrypt.api.php
modules/contrib/field_encrypt/src/Form/SettingsForm.php
modules/contrib/field_encrypt/tests/src/Functional/FieldEncryptUpdatePathTest.php
modules/contrib/field_encrypt/field_encrypt.install
modules/contrib/field_encrypt/field_encrypt.module
modules/contrib/field_encrypt/tests/src/Functional/KeyChangeTest.php
modules/contrib/field_encrypt/src/Form/UpdateEncryptionProfileForm.php
modules/contrib/field_encrypt/src/Controller/FieldOverviewController.php
modules/contrib/field_encrypt/src/Plugin/Field/FieldType/EncryptedFieldStorageItem.php
modules/contrib/field_encrypt/src/EncryptedFieldComputedProperty.php
modules/contrib/field_encrypt/src/Plugin/QueueWorker/FieldEncryptQueueWorkerInterface.php
modules/contrib/field_encrypt/src/Plugin/QueueWorker/UpdateEntityEncryption.php
modules/contrib/field_encrypt/src/Entity/FieldEncryptEntityType.php
modules/contrib/field_encrypt/src/ProcessEntities.php
modules/contrib/field_encrypt/src/EventSubscriber/ConfigSubscriber.php
modules/contrib/field_encrypt/tests/src/Functional/PerformanceScriptTest.php
modules/contrib/field_encrypt/src/Form/DecryptFieldForm.php
modules/contrib/field_encrypt/src/StateManager.php
modules/contrib/field_encrypt/src/Form/EntityTypeForm.php
modules/contrib/field_encrypt/tests/src/FunctionalJavascript/BaseFieldSettingsFormTest.php
modules/contrib/field_encrypt/tests/modules/field_encrypt_test/field_encrypt_test.install
modules/contrib/field_encrypt/tests/modules/field_encrypt_test/field_encrypt_test.module
modules/contrib/field_encrypt/tests/src/Kernel/DynamicEntityHooksTest.php
modules/contrib/field_encrypt/tests/scripts/performance_test.php
modules/contrib/field_encrypt/src/Form/ProcessQueueForm.php
modules/contrib/field_encrypt/tests/src/Unit/ProcessEntitiesTest.php
modules/contrib/field_encrypt/tests/src/Functional/BaseFieldTest.php
modules/contrib/field_encrypt/tests/src/Functional/CacheTest.php
modules/contrib/field_encrypt/tests/src/Functional/CommerceTest.php
modules/contrib/field_encrypt/tests/src/Functional/ConfigurableFieldTest.php
modules/contrib/field_encrypt/tests/src/Functional/EncryptUserTest.php
modules/contrib/field_encrypt/tests/src/Functional/EncryptingExistingDataTest.php
modules/contrib/field_encrypt/tests/src/Functional/EntityHooksTest.php
modules/contrib/field_encrypt/tests/src/Functional/FieldEncryptApiHooksTest.php
modules/contrib/field_encrypt/tests/src/Functional/FieldEncryptTestBase.php

10 files with changes
=====================

1) modules/contrib/field_encrypt/field_encrypt.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\ContentEntityInterface;
 /**
  * @file
  * Hooks for Field Encrypt module.
@@ @@
  * @return bool
  *   Return FALSE if entity should not be encrypted.
  */
-function hook_field_encrypt_allow_encryption(\Drupal\Core\Entity\ContentEntityInterface $entity) {
+function hook_field_encrypt_allow_encryption(ContentEntityInterface $entity) {
   // Only encrypt fields on unpublished nodes.
   if ($entity instanceof Node) {
     if ($entity->isPublished()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/field_encrypt/tests/src/Unit/ProcessEntitiesTest.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     if (version_compare(Version::id(), '8.0', '<')) {
@@ @@
     }

     // Set up a mock entity.
-    $this->entity = $this->getMockBuilder('\Drupal\Core\Entity\ContentEntityInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity = $this->createMock('\Drupal\Core\Entity\ContentEntityInterface');

     // Set up language object.
-    $language = $this->getMockBuilder('\Drupal\Core\Language\LanguageInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $language = $this->createMock('\Drupal\Core\Language\LanguageInterface');

     // Set up expectations for language.
     $language->expects($this->any())
@@ @@
       ->will($this->returnSelf());

     // Set up a mock field.
-    $this->field = $this->getMockBuilder('\Drupal\Core\Field\FieldItemListInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->field = $this->createMock('\Drupal\Core\Field\FieldItemListInterface');

     // Set up a mock storage field.
-    $storage_item = $this->getMockBuilder(EncryptedFieldStorageItem::class)
-      ->disableOriginalConstructor()
-      ->getMock();
-    $this->storageField = $this->getMockBuilder('\Drupal\Core\Field\FieldItemListInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $storage_item = $this->createMock(EncryptedFieldStorageItem::class);
+    $this->storageField = $this->createMock('\Drupal\Core\Field\FieldItemListInterface');
     $this->storageField->expects($this->any())
       ->method('offsetGet')
       ->with(0)
@@ @@
    */
   public function testEncryptDecryptEntity($field_type, $property_definitions, $properties, $field_value, $expected_placeholder, $encrypted) {
     // Set up field definition.
-    $definition = $this->getMockBuilder(FieldConfig::class)
-      ->onlyMethods(['getName', 'getFieldStorageDefinition', 'getType'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $definition = $this->createMock(FieldConfig::class);

     // Set up field storage.
-    $storage = $this->getMockBuilder(FieldStorageConfig::class)
-      ->onlyMethods(['getThirdPartySetting', 'getPropertyDefinitions', 'isBaseField'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $storage = $this->createMock(FieldStorageConfig::class);

     // Set up expectations for storage.
     $storage_map = [
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/field_encrypt/tests/src/FunctionalJavascript/BaseFieldSettingsFormTest.php:57

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/field_encrypt/tests/src/Functional/PerformanceScriptTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // This test relies on
     // \Drupal\Tests\encrypt\Functional\EncryptTestBase::setUp()
     // creating an encryption profile called 'encryption_profile_1' to avoid
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/field_encrypt/tests/src/Functional/KeyChangeTest.php:36

    ---------- begin diff ----------
@@ @@
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create an admin user.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/field_encrypt/tests/src/Functional/FieldEncryptTestBase.php:56

    ---------- begin diff ----------
@@ @@
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create an admin user.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/field_encrypt/tests/src/Functional/EntityHooksTest.php:34

    ---------- begin diff ----------
@@ @@
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Disable eval().
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/field_encrypt/tests/src/Functional/EncryptUserTest.php:34

    ---------- begin diff ----------
@@ @@
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create an admin user.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/field_encrypt/tests/src/Functional/CacheTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->entityTypeManager = $this->container->get('entity_type.manager');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/field_encrypt/tests/src/Functional/BaseFieldTest.php:41

    ---------- begin diff ----------
@@ @@
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create an admin user.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 10 files have been changed by Rector                                      

