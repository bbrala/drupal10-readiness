modules/contrib/price/price.install
modules/contrib/price/src/CurrencyListBuilder.php
modules/contrib/price/price.module
modules/contrib/price/src/LegacyNumberFormatter.php
modules/contrib/price/price.views.inc
modules/contrib/price/src/Repository/NumberFormatRepository.php
modules/contrib/price/src/Cache/Context/CountryCacheContext.php
modules/contrib/price/src/CurrencyRouteProvider.php
modules/contrib/price/src/CurrentCountry.php
modules/contrib/price/src/CurrentCountryInterface.php
modules/contrib/price/src/CurrentLocale.php
modules/contrib/price/src/Calculator.php
modules/contrib/price/src/Locale.php
modules/contrib/price/src/Resolver/ChainCountryResolver.php
modules/contrib/price/src/CurrentLocaleInterface.php
modules/contrib/price/src/NumberFormatter.php
modules/contrib/price/src/Element/Number.php
modules/contrib/price/src/Resolver/ChainCountryResolverInterface.php
modules/contrib/price/src/Resolver/ChainLocaleResolver.php
modules/contrib/price/src/Resolver/ChainLocaleResolverInterface.php
modules/contrib/price/src/Resolver/CountryResolverInterface.php
modules/contrib/price/src/Resolver/DefaultCountryResolver.php
modules/contrib/price/src/NumberFormatterFactory.php
modules/contrib/price/src/NumberFormatterFactoryInterface.php
modules/contrib/price/src/Resolver/DefaultLocaleResolver.php
modules/contrib/price/src/Plugin/Field/FieldFormatter/PriceDefaultFormatter.php
modules/contrib/price/src/Resolver/LocaleResolverInterface.php
modules/contrib/price/src/Rounder.php
modules/contrib/price/src/Plugin/Field/FieldFormatter/PriceModifiedDefaultFormatter.php
modules/contrib/price/src/RounderInterface.php
modules/contrib/price/src/TwigExtension/PriceTwigExtension.php
modules/contrib/price/src/Country.php
modules/contrib/price/src/CurrencyFormatter.php
modules/contrib/price/src/CurrencyImporter.php
modules/contrib/price/src/Element/Price.php
modules/contrib/price/src/Plugin/Field/FieldFormatter/PricePlainFormatter.php
modules/contrib/price/src/Plugin/Field/FieldType/PriceItem.php
modules/contrib/price/src/Element/PriceModified.php
modules/contrib/price/src/Plugin/Field/FieldType/PriceModifiedItem.php
modules/contrib/price/src/CurrencyImporterInterface.php
modules/contrib/price/src/Entity/Currency.php
modules/contrib/price/src/Entity/CurrencyInterface.php
modules/contrib/price/src/Entity/PriceModifier.php
modules/contrib/price/src/Plugin/Field/FieldWidget/PriceDefaultWidget.php
modules/contrib/price/src/Entity/PriceModifierInterface.php
modules/contrib/price/src/Event/NumberFormatDefinitionEvent.php
modules/contrib/price/src/Event/NumberFormatEvent.php
modules/contrib/price/src/Event/PriceEvents.php
modules/contrib/price/src/Exception/CurrencyMismatchException.php
modules/contrib/price/src/Form/CurrencyForm.php
modules/contrib/price/src/Plugin/Field/FieldWidget/PriceModifiedDefaultWidget.php
modules/contrib/price/src/Plugin/Validation/Constraint/CurrencyConstraint.php
modules/contrib/price/src/Plugin/Validation/Constraint/CurrencyConstraintValidator.php
modules/contrib/price/src/Plugin/Validation/Constraint/PriceModifierConstraint.php
modules/contrib/price/src/Plugin/Validation/Constraint/PriceModifierConstraintValidator.php
modules/contrib/price/src/Price.php
modules/contrib/price/src/Form/CurrencyImportForm.php
modules/contrib/price/src/PriceModified.php
modules/contrib/price/src/Form/PriceModifierForm.php
modules/contrib/price/src/PriceModifierListBuilder.php
modules/contrib/price/src/Repository/CurrencyRepository.php

4 files with changes
====================

1) modules/contrib/price/src/Repository/NumberFormatRepository.php:41

    ---------- begin diff ----------
@@ @@
     $definition = parent::processDefinition($locale, $definition);
     // Let the definition be altered.
     $event = new NumberFormatDefinitionEvent($definition);
-    $this->eventDispatcher->dispatch(PriceEvents::NUMBER_FORMAT, $event);
+    $this->eventDispatcher->dispatch($event, PriceEvents::NUMBER_FORMAT);
     $definition = $event->getDefinition();

     return $definition;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/price/src/Form/PriceModifierForm.php:84

    ---------- begin diff ----------
@@ @@
     $status = $entity->save();

     if ($status == SAVED_UPDATED) {
-      drupal_set_message($this->t($entity_label . ' %label has been updated.', ['%label' => $entity->label()]));
+      $this->messenger()->addStatus($this->t($entity_label . ' %label has been updated.', ['%label' => $entity->label()]));
     }
     else {
-      drupal_set_message($this->t($entity_label . ' %label has been created.', ['%label' => $entity->label()]));
+      $this->messenger()->addStatus($this->t($entity_label . ' %label has been created.', ['%label' => $entity->label()]));
     }

     $form_state->setRedirect('entity.' . $entity_type->id() . '.collection');
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/price/src/Event/NumberFormatEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\price\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Defines the number format event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/price/src/Event/NumberFormatDefinitionEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\price\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Defines the number format definition event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

