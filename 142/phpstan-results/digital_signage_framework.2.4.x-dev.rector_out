modules/contrib/digital_signage_framework/digital_signage_framework.install
modules/contrib/digital_signage_framework/digital_signage_framework.module
modules/contrib/digital_signage_framework/modules/computed_content/src/ComputedContentAccessControlHandler.php
modules/contrib/digital_signage_framework/modules/custom_platform/src/Form/Settings.php
modules/contrib/digital_signage_framework/src/DefaultDuration.php
modules/contrib/digital_signage_framework/src/EventSubscriber/Blocks.php
modules/contrib/digital_signage_framework/src/Plugin/DigitalSignageScheduleGenerator/Base.php
modules/contrib/digital_signage_framework/modules/computed_content/src/ComputedContentInterface.php
modules/contrib/digital_signage_framework/src/DefaultWeight.php
modules/contrib/digital_signage_framework/modules/computed_content/src/ComputedContentListBuilder.php
modules/contrib/digital_signage_framework/src/DeviceAccessControlHandler.php
modules/contrib/digital_signage_framework/modules/custom_platform/src/Plugin/DigitalSignagePlatform/Custom.php
modules/contrib/digital_signage_framework/src/DeviceInterface.php
modules/contrib/digital_signage_framework/src/DeviceListBuilder.php
modules/contrib/digital_signage_framework/modules/computed_content/src/ComputedContentTypeListBuilder.php
modules/contrib/digital_signage_framework/src/Form/ActionBase.php
modules/contrib/digital_signage_framework/modules/computed_content/digital_signage_computed_content.module
modules/contrib/digital_signage_framework/modules/computed_content/src/Entity/ComputedContent.php
modules/contrib/digital_signage_framework/src/DeviceTypeListBuilder.php
modules/contrib/digital_signage_framework/src/DigitalSignageFrameworkEvents.php
modules/contrib/digital_signage_framework/src/DurationInterface.php
modules/contrib/digital_signage_framework/modules/example/src/Form/Settings.php
modules/contrib/digital_signage_framework/src/Emergency.php
modules/contrib/digital_signage_framework/modules/example/src/Plugin/DigitalSignagePlatform/Example.php
modules/contrib/digital_signage_framework/src/Plugin/Field/FieldFormatter/Preview.php
modules/contrib/digital_signage_framework/src/Entity/ContentSetting.php
modules/contrib/digital_signage_framework/src/Annotation/DigitalSignagePlatform.php
modules/contrib/digital_signage_framework/src/Annotation/DigitalSignageScheduleGenerator.php
modules/contrib/digital_signage_framework/src/Commands/DeviceCommands.php
modules/contrib/digital_signage_framework/src/Form/ContentSettingSettingsForm.php
modules/contrib/digital_signage_framework/src/Form/Device.php
modules/contrib/digital_signage_framework/src/Query.php
modules/contrib/digital_signage_framework/modules/computed_content/src/Entity/ComputedContentType.php
modules/contrib/digital_signage_framework/modules/computed_content/src/Form/ComputedContentForm.php
modules/contrib/digital_signage_framework/src/Renderer.php
modules/contrib/digital_signage_framework/src/Form/DeviceType.php
modules/contrib/digital_signage_framework/src/ScheduleGeneratorInterface.php
modules/contrib/digital_signage_framework/src/ScheduleGeneratorPluginBase.php
modules/contrib/digital_signage_framework/src/Form/EmergencyMode.php
modules/contrib/digital_signage_framework/modules/computed_content/src/Form/ComputedContentType.php
modules/contrib/digital_signage_framework/src/ScheduleGeneratorPluginManager.php
modules/contrib/digital_signage_framework/src/ScheduleInterface.php
modules/contrib/digital_signage_framework/src/ScheduleListBuilder.php
modules/contrib/digital_signage_framework/src/Commands/FrameworkCommands.php
modules/contrib/digital_signage_framework/modules/computed_content/src/Plugin/views/display/DigitalSignage.php
modules/contrib/digital_signage_framework/src/ScheduleManager.php
modules/contrib/digital_signage_framework/src/Form/Font.php
modules/contrib/digital_signage_framework/src/Commands/ScheduleCommands.php
modules/contrib/digital_signage_framework/src/ContentEvent.php
modules/contrib/digital_signage_framework/src/Form/Fonts.php
modules/contrib/digital_signage_framework/modules/computed_content/src/RenderInterface.php
modules/contrib/digital_signage_framework/modules/computed_content/src/RenderView.php
modules/contrib/digital_signage_framework/src/Form/FrameworkSettings.php
modules/contrib/digital_signage_framework/src/Entity/Device.php
modules/contrib/digital_signage_framework/src/SequenceItem.php
modules/contrib/digital_signage_framework/src/Form/ScheduleConfig.php
modules/contrib/digital_signage_framework/src/ContentSettingInterface.php
modules/contrib/digital_signage_framework/src/Controller/Api.php
modules/contrib/digital_signage_framework/src/Form/SchedulePush.php
modules/contrib/digital_signage_framework/src/Form/ScheduleSettings.php
modules/contrib/digital_signage_framework/src/WeightInterface.php
modules/contrib/digital_signage_framework/src/Form/SyncDevices.php
modules/contrib/digital_signage_framework/src/PlatformInterface.php
modules/contrib/digital_signage_framework/src/PlatformPluginBase.php
modules/contrib/digital_signage_framework/src/PlatformPluginManager.php
modules/contrib/digital_signage_framework/src/Plugin/Action/Base.php
modules/contrib/digital_signage_framework/src/Plugin/Action/EmergencyMode.php
modules/contrib/digital_signage_framework/src/Plugin/Action/ScheduleConfig.php
modules/contrib/digital_signage_framework/src/Plugin/Action/SchedulePush.php
modules/contrib/digital_signage_framework/src/Entity/DeviceType.php
modules/contrib/digital_signage_framework/src/Entity/Schedule.php
modules/contrib/digital_signage_framework/src/EntityFieldUpdate.php
modules/contrib/digital_signage_framework/src/EntityTypes.php
modules/contrib/digital_signage_framework/src/EntityUpdate.php
modules/contrib/digital_signage_framework/src/Event/Libraries.php
modules/contrib/digital_signage_framework/src/Event/Overlays.php
modules/contrib/digital_signage_framework/src/Event/Rendered.php
modules/contrib/digital_signage_framework/src/Event/Underlays.php
modules/contrib/digital_signage_framework/src/Controller/BlockApi.php

9 files with changes
====================

1) modules/contrib/digital_signage_framework/digital_signage_framework.install:101

    ---------- begin diff ----------
@@ @@
       ->execute();
   }

-  $config_path = drupal_get_path('module', 'digital_signage_framework') . '/config/optional';
+  $config_path = \Drupal::service('extension.list.module')->getPath('digital_signage_framework') . '/config/optional';
   $source = new FileStorage($config_path);
   $config_storage = Drupal::service('config.storage');
   $config_storage->write('views.view.emergency_entities', $source->read('views.view.emergency_entities'));
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


2) modules/contrib/digital_signage_framework/modules/computed_content/src/Form/ComputedContentForm.php:19

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result === SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New computed content %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/digital_signage_framework/src/Form/Device.php:19

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New device %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/digital_signage_framework/src/Event/Underlays.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\digital_signage_framework\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\digital_signage_framework\DeviceInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Class Underlays
@@ @@
  *
  * @package Drupal\digital_signage_framework\Event
  */
-class Underlays extends \Symfony\Contracts\EventDispatcher\Event {
+class Underlays extends Event {

   /**
    * @var array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/digital_signage_framework/src/Event/Rendered.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\digital_signage_framework\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\digital_signage_framework\DeviceInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\HttpFoundation\Response;

 /**
@@ @@
  *
  * @package Drupal\digital_signage_framework\Event
  */
-class Rendered extends \Symfony\Contracts\EventDispatcher\Event {
+class Rendered extends Event {

   /**
    * @var \Symfony\Component\HttpFoundation\Response
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/digital_signage_framework/src/Event/Overlays.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\digital_signage_framework\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\digital_signage_framework\DeviceInterface;

@@ @@
  *
  * @package Drupal\digital_signage_framework\Event
  */
-class Overlays extends \Symfony\Contracts\EventDispatcher\Event {
+class Overlays extends Event {

   /**
    * @var array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/digital_signage_framework/src/Event/Libraries.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\digital_signage_framework\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\digital_signage_framework\DeviceInterface;

 /**
@@ @@
  *
  * @package Drupal\digital_signage_framework\Event
  */
-class Libraries extends \Symfony\Contracts\EventDispatcher\Event {
+class Libraries extends Event {

   /**
    * @var array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/digital_signage_framework/src/Entity/Device.php:147

    ---------- begin diff ----------
@@ @@
         if ($js_asset['type'] === 'file' && $name !== 'core/misc/drupalSettingsLoader.js') {
           $scriptIndex++;
           $scripts[] = [
-            'uri' => file_create_url($js_asset['data']),
+            'uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($js_asset['data']),
             'uid' => 'ajs-' . $scriptIndex . '.js',
           ];
         }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/digital_signage_framework/src/Controller/Api.php:645

    ---------- begin diff ----------
@@ @@
         }
       }
     }
-    $cssFiles[] = drupal_get_path('module', 'digital_signage_framework') . '/css/digital-signage.css';
-    $cssFiles[] = drupal_get_path('module', 'digital_signage_framework') . '/css/overlays.css';
+    $cssFiles[] = \Drupal::service('extension.list.module')->getPath('digital_signage_framework') . '/css/digital-signage.css';
+    $cssFiles[] = \Drupal::service('extension.list.module')->getPath('digital_signage_framework') . '/css/overlays.css';
     foreach (explode(PHP_EOL, str_replace("\r", '', $this->config->get('css'))) as $file) {
       $cssFiles[] = $file;
     }
@@ @@
    * @return \Drupal\Core\Ajax\AjaxResponse
    */
   private function previewBinary(): AjaxResponse {
-    $file_uri = file_create_url($this->getFileUri());
+    $file_uri = \Drupal::service('file_url_generator')->generateAbsoluteString($this->getFileUri());
     switch ($this->request->query->get('type')) {
       case 'image':
         $output = '<img src="' . $file_uri . '" alt="" />';
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 9 files have been changed by Rector                                       

