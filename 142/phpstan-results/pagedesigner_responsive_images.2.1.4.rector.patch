diff --git a/modules/pagedesigner_focal_point/pagedesigner_focal_point.install b/modules/pagedesigner_focal_point/pagedesigner_focal_point.install
index 14ffe80..79e7ac3 100644
--- a/modules/pagedesigner_focal_point/pagedesigner_focal_point.install
+++ b/modules/pagedesigner_focal_point/pagedesigner_focal_point.install
@@ -11,7 +11,7 @@ use Drupal\Core\Config\FileStorage;
  * Install config for focus point widget.
  */
 function pagedesigner_focal_point_install() {
-  $config_path = drupal_get_path('module', 'pagedesigner_focal_point') . '/config/optional';
+  $config_path = \Drupal::service('extension.list.module')->getPath('pagedesigner_focal_point') . '/config/optional';
   $source = new FileStorage($config_path);
   $config_storage = \Drupal::service('config.storage');
   if ($source->read('core.entity_form_display.media.image.default')) {
diff --git a/pagedesigner_responsive_images.install b/pagedesigner_responsive_images.install
index b197abc..76a8f70 100644
--- a/pagedesigner_responsive_images.install
+++ b/pagedesigner_responsive_images.install
@@ -11,7 +11,7 @@ use Drupal\Core\Config\FileStorage;
  * Install Image optimization config.
  */
 function pagedesigner_responsive_images_update_8001(&$sandbox) {
-  $config_path = drupal_get_path('module', 'pagedesigner_responsive_images') . '/config/optional';
+  $config_path = \Drupal::service('extension.list.module')->getPath('pagedesigner_responsive_images') . '/config/optional';
   $source = new FileStorage($config_path);
   $config_storage = \Drupal::service('config.storage');
   $config_storage->write('imageapi_optimize.pipeline.pagedesigner_base_optimization', $source->read('imageapi_optimize.pipeline.pagedesigner_base_optimization'));
diff --git a/src/ResponsiveImageStylesTwigExtension.php b/src/ResponsiveImageStylesTwigExtension.php
index 9585fd6..eba4359 100644
--- a/src/ResponsiveImageStylesTwigExtension.php
+++ b/src/ResponsiveImageStylesTwigExtension.php
@@ -76,7 +76,7 @@ class ResponsiveImageStylesTwigExtension extends \Twig_Extension {
    */
   public function getStyledImageUrl(string $uri, string $styleName = '') {
     if (empty($styleName)) {
-      return file_create_url($uri);
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
     }
     $style = ImageStyle::load($styleName);
     return $style->buildUrl($uri);
