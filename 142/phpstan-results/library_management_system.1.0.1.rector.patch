diff --git a/library_management_system.module b/library_management_system.module
index 3c35f28..46a9c62 100644
--- a/library_management_system.module
+++ b/library_management_system.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\taxonomy\Entity\Vocabulary;
+use Drupal\Core\Entity\EntityFormInterface;
 /**
  * @file
  * Contains library_management_system.module.
@@ -38,9 +40,9 @@ function library_management_system_install()
     )
   );
   foreach ($vocabularies_array as $key => $vocabulary_array) {
-    $vocabularies = \Drupal\taxonomy\Entity\Vocabulary::loadMultiple();
+    $vocabularies = Vocabulary::loadMultiple();
     if (!isset($vocabularies[$vocabulary_array['vid']])) {
-      $vocabulary = \Drupal\taxonomy\Entity\Vocabulary::create(array(
+      $vocabulary = Vocabulary::create(array(
         'vid' => $vocabulary_array['vid'],
         'description' => '',
         'name' => $vocabulary_array['name'],
@@ -139,7 +141,7 @@ function library_management_system_theme($existing, $type, $theme, $path) {
 /**
  * Implements hook_entity_presave().
  */
-function library_management_system_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
+function library_management_system_entity_presave(EntityInterface $entity) {
 
   switch ($entity->bundle()) {
     // Here you modify only your day content type
@@ -232,7 +234,7 @@ function issuedlmsbook_validate($form, FormStateInterface $form_state) {
     $returned_date_value = $returned_date[0]['value']??null;
 
     if($returned_date_value) {
-     if ($form_state->getFormObject() instanceof \Drupal\Core\Entity\EntityFormInterface) {
+     if ($form_state->getFormObject() instanceof EntityFormInterface) {
       $entity = $form_state->getFormObject()->getEntity();
       $entity_type = $entity->bundle();
 
@@ -252,7 +254,7 @@ function issuedlmsbook_validate($form, FormStateInterface $form_state) {
 /**
  * Implements hook_form_views_exposed_form_alter()
  */
-function library_management_system_form_views_exposed_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
+function library_management_system_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id)
 {
   $view = $form_state->get('view');
 
@@ -697,4 +699,4 @@ function clear_text_lms($text)
   $text = trim($text);
   $text = preg_replace('!\s+!', '', $text);
   return $text;
-}
\ No newline at end of file
+}
diff --git a/src/Entity/IssuedLmsBook.php b/src/Entity/IssuedLmsBook.php
index bd7e533..4c1a9a8 100644
--- a/src/Entity/IssuedLmsBook.php
+++ b/src/Entity/IssuedLmsBook.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\library_management_system\Entity;
 
+use Drupal\image\Entity\ImageStyle;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -148,7 +149,7 @@ class IssuedLmsBook extends ContentEntityBase implements IssuedLmsBookInterface
     $path = '';
     if($this->get('image')) {
       $uri = $this->get('image')->entity->getFileUri();
-      $path = \Drupal\image\Entity\ImageStyle::load('medium')->buildUrl($uri);
+      $path = ImageStyle::load('medium')->buildUrl($uri);
     }
     return $path;
   }
diff --git a/src/Entity/LmsBook.php b/src/Entity/LmsBook.php
index 2d6721f..ef82536 100644
--- a/src/Entity/LmsBook.php
+++ b/src/Entity/LmsBook.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\library_management_system\Entity;
 
+use Drupal\image\Entity\ImageStyle;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -131,7 +132,7 @@ class LmsBook extends ContentEntityBase implements LmsBookInterface {
     $path = '';
     if($this->get('image')) {
       $uri = $this->get('image')->entity->getFileUri();
-      $path = \Drupal\image\Entity\ImageStyle::load('medium')->buildUrl($uri);
+      $path = ImageStyle::load('medium')->buildUrl($uri);
     }
     return $path;
   }
@@ -219,7 +220,7 @@ class LmsBook extends ContentEntityBase implements LmsBookInterface {
    */
   public function getRequestedLmsBook() {
 
-    return file_create_url($this->get('requestedlmsbook')->entity->image->entity->getFileUri());
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($this->get('requestedlmsbook')->entity->image->entity->getFileUri());
   }
 
     /**
diff --git a/src/Entity/LmsBookAuthor.php b/src/Entity/LmsBookAuthor.php
index 03ff1e8..4e0154f 100644
--- a/src/Entity/LmsBookAuthor.php
+++ b/src/Entity/LmsBookAuthor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\library_management_system\Entity;
 
+use Drupal\image\Entity\ImageStyle;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -134,7 +135,7 @@ class LmsBookAuthor extends ContentEntityBase implements LmsBookAuthorInterface
     $path = '';
     if($this->get('image')) {
       $uri = $this->get('image')->entity->getFileUri();
-      $path = \Drupal\image\Entity\ImageStyle::load('medium')->buildUrl($uri);
+      $path = ImageStyle::load('medium')->buildUrl($uri);
     }
     return $path;
   }
@@ -216,7 +217,7 @@ class LmsBookAuthor extends ContentEntityBase implements LmsBookAuthorInterface
    */
   public function getRequestedLmsBookAuthor() {
 
-    return file_create_url($this->get('requestedlmsbookauthor')->entity->image->entity->getFileUri());
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($this->get('requestedlmsbookauthor')->entity->image->entity->getFileUri());
   }
 
       /**
diff --git a/src/Entity/LmsPublication.php b/src/Entity/LmsPublication.php
index a66391b..0dcce02 100644
--- a/src/Entity/LmsPublication.php
+++ b/src/Entity/LmsPublication.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\library_management_system\Entity;
 
+use Drupal\image\Entity\ImageStyle;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -119,7 +120,7 @@ class LmsPublication extends ContentEntityBase implements LmsPublicationInterfac
     $path = '';
     if($this->get('image')) {
       $uri = $this->get('image')->entity->getFileUri();
-      $path = \Drupal\image\Entity\ImageStyle::load('medium')->buildUrl($uri);
+      $path = ImageStyle::load('medium')->buildUrl($uri);
     }
     return $path;
   }
diff --git a/src/Form/ImportDataForm.php b/src/Form/ImportDataForm.php
index d53e249..7e45d07 100755
--- a/src/Form/ImportDataForm.php
+++ b/src/Form/ImportDataForm.php
@@ -101,7 +101,7 @@ class ImportDataForm extends FormBase {
     global $base_root, $base_path;
     $valid_formats = array('xlsx', 'json', 'csv');
     foreach ($valid_formats as $valid_format) {
-      $file_path = $base_root . $base_path .drupal_get_path('module', 'library_management_system') . "/assets/sample-files/".$import_data_to.'.'.$valid_format;
+      $file_path = $base_root . $base_path .\Drupal::service('extension.list.module')->getPath('library_management_system') . "/assets/sample-files/".$import_data_to.'.'.$valid_format;
 
       $markup = "Download sample {$import_data_to} <em>{$valid_format}</em> file from <a href='".$file_path."' download>here </a><br/>";
       $form['wrapper']['download_samples']['download'.$valid_format] = [
@@ -158,11 +158,11 @@ class ImportDataForm extends FormBase {
         $file_data = array();
 
         if(!file_exists($full_path) || !is_readable($full_path)) {
-          drupal_set_message($this->t('File could not be uploaded.'), 'error');
+          $this->messenger()->addError($this->t('File could not be uploaded.'));
         } else {
           $file_data = call_user_func(array($this, 'get_'.$file_extension.'_import_data'), $full_path);
           if(isset($file_data['error'])) {
-            drupal_set_message($this->t('Error Response: '.$file_data['message']), 'error');
+            $this->messenger()->addError($this->t('Error Response: '.$file_data['message']));
           }
         }
 
diff --git a/src/Plugin/Action/BulkExportExcel.php b/src/Plugin/Action/BulkExportExcel.php
index ab6e04a..3b48027 100644
--- a/src/Plugin/Action/BulkExportExcel.php
+++ b/src/Plugin/Action/BulkExportExcel.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\library_management_system\Plugin\Action;
 
+use Drupal\Core\Render\Markup;
 use Drupal\views_bulk_operations\Action\ViewsBulkOperationsActionBase;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -113,10 +114,10 @@ class BulkExportExcel extends ViewsBulkOperationsActionBase {
 
     $file->save();
 
-    $url = file_create_url($file->getFileUri());
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
 
     $message = 'click here to download the excel file <a href='.$url.'>Download</a>';
-    $rendered_message = \Drupal\Core\Render\Markup::create($message);
+    $rendered_message = Markup::create($message);
     \Drupal::messenger()->addMessage($rendered_message);
 
   }
diff --git a/src/Plugin/views/field/RequestedBookIssuedDate.php b/src/Plugin/views/field/RequestedBookIssuedDate.php
index 0dcc437..4316ce5 100644
--- a/src/Plugin/views/field/RequestedBookIssuedDate.php
+++ b/src/Plugin/views/field/RequestedBookIssuedDate.php
@@ -112,7 +112,7 @@ class RequestedBookIssuedDate extends FieldPluginBase
 
     $date_formats = [];
     foreach ($this->dateFormatStorage->loadMultiple() as $machine_name => $value) {
-      $date_formats[$machine_name] = $this->t('@name format: @date', ['@name' => $value->label(), '@date' => $this->dateFormatter->format(REQUEST_TIME, $machine_name)]);
+      $date_formats[$machine_name] = $this->t('@name format: @date', ['@name' => $value->label(), '@date' => $this->dateFormatter->format(\Drupal::time()->getRequestTime(), $machine_name)]);
     }
 
     $form['date_format'] = [
@@ -185,7 +185,7 @@ class RequestedBookIssuedDate extends FieldPluginBase
           $timezone = !empty($this->options['timezone']) ? $this->options['timezone'] : NULL;
       // Will be positive for a datetime in the past (ago), and negative for a
       // datetime in the future (hence).
-          $time_diff = REQUEST_TIME - $issued_timestamp;
+          $time_diff = \Drupal::time()->getRequestTime() - $issued_timestamp;
           switch ($format) {
             case 'raw time ago':
             return $this->dateFormatter->formatTimeDiffSince($issued_timestamp, ['granularity' => is_numeric($custom_format) ? $custom_format : 2]);
diff --git a/src/Plugin/views/field/RequestedBookReturnedDate.php b/src/Plugin/views/field/RequestedBookReturnedDate.php
index c1e5760..5b26f92 100644
--- a/src/Plugin/views/field/RequestedBookReturnedDate.php
+++ b/src/Plugin/views/field/RequestedBookReturnedDate.php
@@ -112,7 +112,7 @@ class RequestedBookReturnedDate extends FieldPluginBase
 
     $date_formats = [];
     foreach ($this->dateFormatStorage->loadMultiple() as $machine_name => $value) {
-      $date_formats[$machine_name] = $this->t('@name format: @date', ['@name' => $value->label(), '@date' => $this->dateFormatter->format(REQUEST_TIME, $machine_name)]);
+      $date_formats[$machine_name] = $this->t('@name format: @date', ['@name' => $value->label(), '@date' => $this->dateFormatter->format(\Drupal::time()->getRequestTime(), $machine_name)]);
     }
 
     $form['date_format'] = [
@@ -190,7 +190,7 @@ class RequestedBookReturnedDate extends FieldPluginBase
             $timezone = !empty($this->options['timezone']) ? $this->options['timezone'] : NULL;
       // Will be positive for a datetime in the past (ago), and negative for a
       // datetime in the future (hence).
-            $time_diff = REQUEST_TIME - $returned_timestamp;
+            $time_diff = \Drupal::time()->getRequestTime() - $returned_timestamp;
             switch ($format) {
               case 'raw time ago':
               return $this->dateFormatter->formatTimeDiffSince($returned_timestamp, ['granularity' => is_numeric($custom_format) ? $custom_format : 2]);
