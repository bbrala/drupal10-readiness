modules/contrib/sitemap/src/Plugin/Block/SitemapSyndicateBlock.php
modules/contrib/sitemap/sitemap.install
modules/contrib/sitemap/src/Tests/SitemapTaxonomyTest.php
modules/contrib/sitemap/sitemap.module
modules/contrib/sitemap/src/Plugin/Derivative/BookSitemapDeriver.php
modules/contrib/sitemap/src/Plugin/Derivative/MenuSitemapDeriver.php
modules/contrib/sitemap/sitemap.theme.inc
modules/contrib/sitemap/src/Annotation/Sitemap.php
modules/contrib/sitemap/src/Plugin/Derivative/VocabularySitemapDeriver.php
modules/contrib/sitemap/src/Controller/SitemapController.php
modules/contrib/sitemap/src/Plugin/Sitemap/Book.php
modules/contrib/sitemap/src/Plugin/Sitemap/Frontpage.php
modules/contrib/sitemap/src/Plugin/Sitemap/Menu.php
modules/contrib/sitemap/src/Tests/SitemapTaxonomyTestBase.php
modules/contrib/sitemap/src/Form/SitemapSettingsForm.php
modules/contrib/sitemap/src/Plugin/Sitemap/Vocabulary.php
modules/contrib/sitemap/src/Tests/SitemapTest.php
modules/contrib/sitemap/src/Tests/SitemapTestBase.php
modules/contrib/sitemap/src/Tests/SitemapTestTrait.php
modules/contrib/sitemap/tests/src/Functional/Update/SitemapVersionUpdateTest.php
modules/contrib/sitemap/src/Menu/SitemapMenuLinkTree.php
modules/contrib/sitemap/src/SitemapBase.php
modules/contrib/sitemap/src/Plugin/Block/SitemapBlock.php
modules/contrib/sitemap/src/SitemapInterface.php
modules/contrib/sitemap/src/SitemapManager.php
modules/contrib/sitemap/src/Tests/SitemapBookTest.php
modules/contrib/sitemap/src/Tests/SitemapBrowserTestBase.php
modules/contrib/sitemap/src/Tests/SitemapContentTest.php
modules/contrib/sitemap/src/Tests/SitemapCssTest.php
modules/contrib/sitemap/src/Tests/SitemapFrontpageTest.php
modules/contrib/sitemap/src/Tests/SitemapMenuTest.php
modules/contrib/sitemap/src/Tests/SitemapMenuTestBase.php
modules/contrib/sitemap/src/Tests/SitemapTaxonomyTermsRssTest.php
modules/contrib/sitemap/src/Tests/SitemapTaxonomyTermsTest.php

12 files with changes
=====================

1) modules/contrib/sitemap/src/Tests/SitemapTestBase.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create user with admin permissions.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/sitemap/src/Tests/SitemapTest.php:16

    ---------- begin diff ----------
@@ @@
     // Find the Sitemap page at /sitemap.
     $this->drupalLogin($this->userView);
     $this->drupalGet('/sitemap');
-    $this->assertResponse('200');
+    $this->assertSession()->statusCodeEquals('200');

     // Unauthorized users cannot view the sitemap.
     $this->drupalLogin($this->userNoAccess);
     $this->drupalGet('/sitemap');
-    $this->assertResponse('403');
+    $this->assertSession()->statusCodeEquals('403');

   }

@@ @@
     // Find the Sitemap settings page.
     $this->drupalLogin($this->userAdmin);
     $this->drupalGet('/admin/config/search/sitemap');
-    $this->assertResponse('200');
+    $this->assertSession()->statusCodeEquals('200');

     // Unauthorized users cannot view the sitemap.
     $this->drupalLogin($this->userView);
     $this->drupalGet('/admin/config/search/sitemap');
-    $this->assertResponse('403');
+    $this->assertSession()->statusCodeEquals('403');

   }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/sitemap/src/Tests/SitemapTaxonomyTestBase.php:60

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Ensure the Article node type.
@@ @@
       'title[0][value]' => $title,
       $this->fieldTagsName . '[target_id]' => implode(',', $values),
     ];
-    $this->drupalPostForm('node/add/article', $edit, $this->t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, $this->t('Save'));
   }

   /**
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/sitemap/src/Tests/SitemapTaxonomyTest.php:125

    ---------- begin diff ----------
@@ @@
     // Ensure that the sitemap gets loaded correctly.
     $this->drupalGet('/sitemap');
     $elements = $this->cssSelect(".sitemap-plugin--vocabulary");
-    $this->assertEqual(count($elements), 1, 'Vocabulary found.');
+    $this->assertEquals(count($elements), 1, 'Vocabulary found.');

     // Now disable the taxonomy view.
     $this->container->get('entity_type.manager')
@@ @@
     // And visit the sitemap again.
     $this->drupalGet('/sitemap');
     $elements = $this->cssSelect(".sitemap-plugin--vocabulary");
-    $this->assertEqual(count($elements), 1, 'Vocabulary found.');
+    $this->assertEquals(count($elements), 1, 'Vocabulary found.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/sitemap/src/Tests/SitemapTaxonomyTermsRssTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $vocab = $this->vocabulary;
     $vid = $vocab->id();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/sitemap/src/Tests/SitemapMenuTestBase.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create an Article node type.
@@ @@
       'menu[title]' => $this->randomString(),
       'menu[menu_parent]' => $menu_id . ':',
     ];
-    $this->drupalPostForm('node/add/article', $edit, $this->t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, $this->t('Save'));
   }

 }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/sitemap/src/Tests/SitemapMenuTest.php:53

    ---------- begin diff ----------
@@ @@
       // one child menu item of that menu.
       'menu[menu_parent]' => 'main:',
     ];
-    $this->drupalPostForm('node/add/article', $edit, $this->t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, $this->t('Save'));

     // Create a node for a disabled menu item.
     $node_2_title = $this->randomString();
@@ @@
       'menu[title]' => $node_2_title,
       'menu[menu_parent]' => 'main:',
     ];
-    $this->drupalPostForm('node/add/article', $edit, $this->t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, $this->t('Save'));

     // Disable menu item.
     $menu_links = \Drupal::entityTypeManager()->getStorage('menu_link_content')->loadByProperties(['title' => $node_2_title]);
     $menu_link = reset($menu_links);
     $mlid = $menu_link->id();
-    $this->drupalPostForm("admin/structure/menu/item/$mlid/edit", ['enabled[value]' => FALSE], $this->t('Save'));
+    $this->drupalGet("admin/structure/menu/item/$mlid/edit");
+    $this->submitForm(['enabled[value]' => FALSE], $this->t('Save'));

     // Add admin link that an anonymous user doesn't have access to.
     $admin_link_title = $this->randomString();
@@ @@
       'link[0][uri]' => '/admin/config/search/sitemap',
       'menu_parent' => 'main:',
     ];
-    $this->drupalPostForm("admin/structure/menu/manage/main/add", $edit, $this->t('Save'));
+    $this->drupalGet("admin/structure/menu/manage/main/add");
+    $this->submitForm($edit, $this->t('Save'));

     // Assert that main menu is included in the sitemap.
     $this->drupalGet('/sitemap');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/sitemap/src/Tests/SitemapFrontpageTest.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create user, then login.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/sitemap/src/Tests/SitemapCssTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalLogin($this->userAdmin);
@@ @@
   public function testIncludeCssFile() {
     // Assert that css file is included by default.
     $this->drupalGet('/sitemap');
-    $this->assertRaw('sitemap.theme.css');
+    $this->assertSession()->responseContains('sitemap.theme.css');

     // Change module not to include css file.
     $this->saveSitemapForm(['include_css' => FALSE]);
@@ @@

     // Assert that css file is not included.
     $this->drupalGet('/sitemap');
-    $this->assertNoRaw('sitemap.theme.css');
+    $this->assertSession()->responseNotContains('sitemap.theme.css');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertNoRawRector
 * AssertRawRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/sitemap/src/Tests/SitemapContentTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Place page title block.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/sitemap/src/Tests/SitemapBrowserTestBase.php:24

    ---------- begin diff ----------
@@ @@
    *   The array with the form fields.
    */
   protected function saveSitemapForm(array $edit = []) {
-    $this->drupalPostForm('admin/config/search/sitemap', $edit, $this->t('Save configuration'));
+    $this->drupalGet('admin/config/search/sitemap');
+    $this->submitForm($edit, $this->t('Save configuration'));
   }

 }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/sitemap/src/Tests/SitemapBookTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create user then login.
@@ @@
     ];

     if ($parent !== NULL) {
-      $this->drupalPostForm('node/add/book', $edit, $this->t('Change book (update list of parents)'));
+      $this->drupalGet('node/add/book');
+      $this->submitForm($edit, $this->t('Change book (update list of parents)'));

       $edit['book[pid]'] = $parent;
-      $this->drupalPostForm(NULL, $edit, $this->t('Save'));
+      $this->submitForm($edit, $this->t('Save'));
     }
     else {
-      $this->drupalPostForm('node/add/book', $edit, $this->t('Save'));
+      $this->drupalGet('node/add/book');
+      $this->submitForm($edit, $this->t('Save'));
     }

     return $this->drupalGetNodeByTitle($edit['title[0][value]']);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 12 files have been changed by Rector                                      

