diff --git a/jupyterlite.info.yml b/jupyterlite.info.yml
index be36a8c..e1aaa86 100644
--- a/jupyterlite.info.yml
+++ b/jupyterlite.info.yml
@@ -1,7 +1,7 @@
 name: JupyterLite
 description: Adds a JupyterLite environment to Drupal.
 type: module
-core_version_requirement: ^9
+core_version_requirement: ^9 || ^10
 
 # Information added by Drupal.org packaging script on 2022-02-12
 version: '1.0.1'
diff --git a/src/Controller/JupyterLiteController.php b/src/Controller/JupyterLiteController.php
index 9beb25b..ca49615 100644
--- a/src/Controller/JupyterLiteController.php
+++ b/src/Controller/JupyterLiteController.php
@@ -116,7 +116,7 @@ class JupyterLiteController extends ControllerBase {
     $response = new Response();
     $response->setStatusCode(200);
 
-    $cookie = new Cookie('jupyterliteDrupalBasePath', $base_path, $expire = 0, $path = '/', $domain = null, $secure = false, $httpOnly = false, $raw = true, $sameSite = null);
+    $cookie = Cookie::create('jupyterliteDrupalBasePath', $base_path, $expire = 0, $path = '/', $domain = null, $secure = false, $httpOnly = false, $raw = true, $sameSite = null);
     $response->headers->setCookie($cookie);
 
     $response->headers->set('Content-Type', $content_type);
diff --git a/src/EventSubscriber/RequestSubscriber.php b/src/EventSubscriber/RequestSubscriber.php
index 5826eed..bf5fea6 100644
--- a/src/EventSubscriber/RequestSubscriber.php
+++ b/src/EventSubscriber/RequestSubscriber.php
@@ -3,12 +3,12 @@
 
 namespace Drupal\jupyterlite\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Controller\ControllerResolverInterface;
 use Drupal\Core\Routing\RouteProviderInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -53,10 +53,10 @@ class RequestSubscriber implements EventSubscriberInterface  {
   /**
    * The request event handler.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event.
    */
-  public function checkAppRequest(GetResponseEvent $event) {
+  public function checkAppRequest(RequestEvent $event) {
     $request = $event->getRequest();
     $path = $request->getPathInfo();
 
