diff --git a/concurrent_queue/queue-worker.php b/concurrent_queue/queue-worker.php
index df9eb79..bb4cd64 100644
--- a/concurrent_queue/queue-worker.php
+++ b/concurrent_queue/queue-worker.php
@@ -1,10 +1,13 @@
 <?php
+use React\EventLoop\Factory;
+use React\Socket\TcpConnector;
+use React\Socket\ConnectionInterface;
 $memory_limit = 512 * 1024 * 1024 * 0.95;
 
-$loop = React\EventLoop\Factory::create();
-$tcpConnector = new React\Socket\TcpConnector($loop);
+$loop = Factory::create();
+$tcpConnector = new TcpConnector($loop);
 $workerManager = \Drupal::service('plugin.manager.queue_worker');
-$tcpConnector->connect('127.0.0.1:30001')->then(function (React\Socket\ConnectionInterface $connection) use ($loop, $workerManager, $memory_limit) {
+$tcpConnector->connect('127.0.0.1:30001')->then(function (ConnectionInterface $connection) use ($loop, $workerManager, $memory_limit) {
   $connection->write('r');
   $connection->on('data', function ($data) use ($connection, $loop, $memory_limit, $workerManager) {
     $info = unserialize($data);
diff --git a/concurrent_queue/src/Commands/ConcurrentQueueCommands.php b/concurrent_queue/src/Commands/ConcurrentQueueCommands.php
index b9411fe..528ad3b 100644
--- a/concurrent_queue/src/Commands/ConcurrentQueueCommands.php
+++ b/concurrent_queue/src/Commands/ConcurrentQueueCommands.php
@@ -204,7 +204,7 @@ class ConcurrentQueueCommands extends DrushCommands {
    */
   public function spawnWorker() {
     $moduleDir = \Drupal::service('file_system')->realpath(
-      drupal_get_path('module', 'concurrent_queue')
+      \Drupal::service('extension.list.module')->getPath('concurrent_queue')
     );
     $projectDir = dirname(DRUPAL_ROOT);
     $bin = 'php -d memory_limit=2G ';
diff --git a/concurrent_queue/src/EventSubscriber/ConcurrentQueueSubscriber.php b/concurrent_queue/src/EventSubscriber/ConcurrentQueueSubscriber.php
index c41a518..ca5038b 100644
--- a/concurrent_queue/src/EventSubscriber/ConcurrentQueueSubscriber.php
+++ b/concurrent_queue/src/EventSubscriber/ConcurrentQueueSubscriber.php
@@ -2,10 +2,10 @@
 
 namespace Drupal\concurrent_queue\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Messenger\MessengerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -33,19 +33,19 @@ class ConcurrentQueueSubscriber implements EventSubscriberInterface {
   /**
    * Kernel request event handler.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   Response event.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
   }
 
   /**
    * Kernel response event handler.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   Response event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
   }
 
   /**
