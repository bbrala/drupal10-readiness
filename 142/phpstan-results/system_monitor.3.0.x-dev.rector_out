modules/contrib/system_monitor/modules/sm_status_page/sm_status_page.install
modules/contrib/system_monitor/modules/sm_status_page/src/Routing/StatusPageRoutes.php
modules/contrib/system_monitor/src/Form/SystemMonitorSettingsForm.php
modules/contrib/system_monitor/system_monitor.module
modules/contrib/system_monitor/modules/sm_status_page/sm_status_page.module
modules/contrib/system_monitor/modules/sm_status_page/src/Access/StatusPageAccessCheck.php
modules/contrib/system_monitor/tests/src/Functional/OverviewPageTest.php
modules/contrib/system_monitor/modules/sm_status_page/src/StatusPageAccessControlHandler.php
modules/contrib/system_monitor/modules/sm_status_page/src/Entity/StatusPage.php
modules/contrib/system_monitor/src/Logger/SystemMonitorDbLogger.php
modules/contrib/system_monitor/modules/sm_status_page/src/StatusPageHtmlRouteProvider.php
modules/contrib/system_monitor/modules/sm_status_page/src/StatusPageInterface.php
modules/contrib/system_monitor/modules/sm_status_page/src/StatusPageListBuilder.php
modules/contrib/system_monitor/modules/sm_status_page/src/EventSubscriber/StatusPageEventSubscriber.php
modules/contrib/system_monitor/modules/sm_status_page/src/StatusPageUtility.php
modules/contrib/system_monitor/tests/src/Functional/SystemMonitorBrowserTestBase.php
modules/contrib/system_monitor/modules/sm_status_page/src/Form/StatusPageDeleteForm.php
modules/contrib/system_monitor/src/Logger/SystemMonitorLogger.php
modules/contrib/system_monitor/tests/src/Unit/Logger/SystemMonitorDbLoggerTest.php
modules/contrib/system_monitor/modules/sm_status_page/src/Form/StatusPageForm.php
modules/contrib/system_monitor/src/Logger/SystemMonitorLoggerInterface.php
modules/contrib/system_monitor/src/Logger/SystemMonitorLoggerTrait.php
modules/contrib/system_monitor/src/ParamConverter/SystemMonitorConverter.php
modules/contrib/system_monitor/src/Plugin/SystemMonitorTask/SystemMonitorTaskBase.php
modules/contrib/system_monitor/src/SystemMonitorHtmlRouteProvider.php
modules/contrib/system_monitor/src/SystemMonitorInterface.php
modules/contrib/system_monitor/src/SystemMonitorListBuilder.php
modules/contrib/system_monitor/src/SystemMonitorLogLevel.php
modules/contrib/system_monitor/src/SystemMonitorServiceProvider.php
modules/contrib/system_monitor/src/SystemMonitorTaskInterface.php
modules/contrib/system_monitor/src/SystemMonitorTaskManager.php
modules/contrib/system_monitor/src/SystemMonitorUtility.php
modules/contrib/system_monitor/system_monitor.drush.inc
modules/contrib/system_monitor/modules/sm_status_page/src/StatusPageViewBuilder.php
modules/contrib/system_monitor/system_monitor.install
modules/contrib/system_monitor/src/Annotation/SystemMonitorTask.php
modules/contrib/system_monitor/src/Commands/SystemMonitorCommands.php
modules/contrib/system_monitor/src/Compiler/SystemMonitorExtensionPass.php
modules/contrib/system_monitor/src/Controller/SystemMonitorController.php
modules/contrib/system_monitor/src/Entity/SystemMonitor.php
modules/contrib/system_monitor/src/Event/MonitorEvent.php
modules/contrib/system_monitor/src/Event/SystemMonitorEvents.php
modules/contrib/system_monitor/src/EventSubscriber/SystemMonitorLogEventSubscriber.php
modules/contrib/system_monitor/src/Form/SystemMonitorConfigureTasksForm.php
modules/contrib/system_monitor/src/Form/SystemMonitorDeleteForm.php
modules/contrib/system_monitor/src/Form/SystemMonitorForm.php

6 files with changes
====================

1) modules/contrib/system_monitor/modules/sm_status_page/src/EventSubscriber/StatusPageEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sm_status_page\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\PageCache\ResponsePolicy\KillSwitch;
@@ @@
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\TranslationInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Returns a system monitor status page.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function onKernelRequestStatusPage(GetResponseEvent $event) {
+  public function onKernelRequestStatusPage(RequestEvent $event) {
     $request = $event->getRequest();
     $route_match = RouteMatch::createFromRequest($request);
     if (strpos($route_match->getRouteName(), 'sm_status_page') === 0) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/system_monitor/tests/src/Unit/Logger/SystemMonitorDbLoggerTest.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $container = new ContainerBuilder();
@@ @@
    * Setup the System Monitor DB log to allow varying the query result.
    */
   public function setupMockSystemMonitorDbLogger($query_return_type) {
-    $query = $this->getMockBuilder(Insert::class)
-      ->setMethods([
-        'fields',
-        'execute',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $query = $this->createMock(Insert::class);
     $query->expects($this->any())
       ->method('fields')
       ->willReturnSelf();
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/system_monitor/tests/src/Functional/SystemMonitorBrowserTestBase.php:73

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Get the entity type manager class.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/system_monitor/tests/src/Functional/OverviewPageTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create the users used for the tests.
@@ @@
     $system_monitor = $this->getTestMonitor();

     $this->drupalGet($this->overviewPageUrl);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $url_params = [
       'system_monitor' => $system_monitor->id(),
     ];
@@ @@
     $this->assertSession()->pageTextContains('System Monitor');

     $this->drupalGet($this->overviewPageUrl);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     $this->drupalLogin($this->unauthorizedUser);
     $this->drupalGet($this->overviewPageUrl);
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/system_monitor/src/SystemMonitorUtility.php:230

    ---------- begin diff ----------
@@ @@
    *   The full server path to the icon file.
    */
   public function getFullIconPath($partial_path) {
-    $module_path = drupal_get_path('module', 'system_monitor');
+    $module_path = \Drupal::service('extension.list.module')->getPath('system_monitor');
     return '/' . $module_path . '/assets/images/icons/' . $partial_path;
   }

@@ @@
    * Loads the names and strucure of the system monitor icons for status pages.
    */
   public function loadIconData() {
-    $module_path = drupal_get_path('module', 'system_monitor');
+    $module_path = \Drupal::service('extension.list.module')->getPath('system_monitor');
     $icon_files = [];
     $this->findFilePaths($module_path . '/assets/images/icons', $icon_files);
     $icon_files = array_filter($icon_files, function ($a) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


6) modules/contrib/system_monitor/src/Event/MonitorEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\system_monitor\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Wraps a system monitor report event for event subscribers.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

