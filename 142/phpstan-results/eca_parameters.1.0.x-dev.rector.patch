diff --git a/src/Plugin/Action/ParameterGet.php b/src/Plugin/Action/ParameterGet.php
index 27db13b..e9c5536 100644
--- a/src/Plugin/Action/ParameterGet.php
+++ b/src/Plugin/Action/ParameterGet.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\eca_parameters\Plugin\Action;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\eca\Token\TokenInterface;
+use Drupal\Core\Session\AccountProxyInterface;
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\eca\EcaState;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\eca\Plugin\Action\ActionBase;
 use Drupal\eca\Plugin\Action\ConfigurableActionBase;
@@ -27,6 +32,11 @@ class ParameterGet extends ConfigurableActionBase {
    * @var \Drupal\parameters\ParameterRepository
    */
   protected ParameterRepository $parameterRepository;
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, TokenInterface $token_services, AccountProxyInterface $current_user, TimeInterface $time, EcaState $state, ParameterRepository $parameterRepository)
+  {
+      $this->parameterRepository = $parameterRepository;
+      parent::__construct($configuration, $plugin_id, $plugin_definition, $entity_type_manager, $token_services, $current_user, $time, $state);
+  }
 
   /**
    * {@inheritdoc}
@@ -34,7 +44,7 @@ class ParameterGet extends ConfigurableActionBase {
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition): ActionBase {
     /** @var \Drupal\eca_parameters\Plugin\Action\ParameterGet $instance */
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
-    $instance->setParameterRepository($container->get(ParameterRepository::SERVICE_NAME));
+    $instance->setParameterRepository($this->parameterRepository);
     return $instance;
   }
 
diff --git a/src/Plugin/ECA/Condition/ParameterExists.php b/src/Plugin/ECA/Condition/ParameterExists.php
index 67210e0..fd09f9d 100644
--- a/src/Plugin/ECA/Condition/ParameterExists.php
+++ b/src/Plugin/ECA/Condition/ParameterExists.php
@@ -2,6 +2,13 @@
 
 namespace Drupal\eca_parameters\Plugin\ECA\Condition;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Drupal\eca\Token\TokenInterface;
+use Drupal\Core\Session\AccountProxyInterface;
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\eca\EcaState;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\eca\Plugin\ECA\Condition\ConditionBase;
 use Drupal\parameters\Exception\ParameterNotFoundException;
@@ -27,6 +34,11 @@ class ParameterExists extends ConditionBase {
    * @var \Drupal\parameters\ParameterRepository
    */
   protected ParameterRepository $parameterRepository;
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, RequestStack $request_stack, TokenInterface $token_services, AccountProxyInterface $current_user, TimeInterface $time, EcaState $state, ParameterRepository $parameterRepository)
+  {
+      $this->parameterRepository = $parameterRepository;
+      parent::__construct($configuration, $plugin_id, $plugin_definition, $entity_type_manager, $entity_type_bundle_info, $request_stack, $token_services, $current_user, $time, $state);
+  }
 
   /**
    * {@inheritdoc}
@@ -34,7 +46,7 @@ class ParameterExists extends ConditionBase {
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition): ConditionBase {
     /** @var \Drupal\eca_parameters\Plugin\ECA\Condition\ParameterExists $instance */
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
-    $instance->setParameterRepository($container->get(ParameterRepository::SERVICE_NAME));
+    $instance->setParameterRepository($this->parameterRepository);
     return $instance;
   }
 
diff --git a/src/Plugin/ECA/Condition/ParameterValue.php b/src/Plugin/ECA/Condition/ParameterValue.php
index 480d4ab..5ca6807 100644
--- a/src/Plugin/ECA/Condition/ParameterValue.php
+++ b/src/Plugin/ECA/Condition/ParameterValue.php
@@ -2,6 +2,13 @@
 
 namespace Drupal\eca_parameters\Plugin\ECA\Condition;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Drupal\eca\Token\TokenInterface;
+use Drupal\Core\Session\AccountProxyInterface;
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\eca\EcaState;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\eca\Plugin\ECA\Condition\ConditionBase;
 use Drupal\eca\Plugin\ECA\Condition\StringComparisonBase;
@@ -33,6 +40,11 @@ class ParameterValue extends StringComparisonBase {
    * @var \Drupal\parameters\ParameterRepository
    */
   protected ParameterRepository $parameterRepository;
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, RequestStack $request_stack, TokenInterface $token_services, AccountProxyInterface $current_user, TimeInterface $time, EcaState $state, ParameterRepository $parameterRepository)
+  {
+      $this->parameterRepository = $parameterRepository;
+      parent::__construct($configuration, $plugin_id, $plugin_definition, $entity_type_manager, $entity_type_bundle_info, $request_stack, $token_services, $current_user, $time, $state);
+  }
 
   /**
    * {@inheritdoc}
@@ -40,7 +52,7 @@ class ParameterValue extends StringComparisonBase {
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition): ConditionBase {
     /** @var \Drupal\eca_parameters\Plugin\ECA\Condition\ParameterValue $instance */
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
-    $instance->setParameterRepository($container->get(ParameterRepository::SERVICE_NAME));
+    $instance->setParameterRepository($this->parameterRepository);
     return $instance;
   }
 
