modules/contrib/search_api_page/search_api_page.api.php
modules/contrib/search_api_page/src/Plugin/search_api/display/SearchApiPageDeriver.php
modules/contrib/search_api_page/search_api_page.module
modules/contrib/search_api_page/src/Config/ViewMode.php
modules/contrib/search_api_page/src/Routing/SearchApiPageRoutes.php
modules/contrib/search_api_page/src/Config/ViewModeConfigInterface.php
modules/contrib/search_api_page/src/Controller/SearchApiPageController.php
modules/contrib/search_api_page/src/SearchApiPageInterface.php
modules/contrib/search_api_page/src/SearchApiPageListBuilder.php
modules/contrib/search_api_page/tests/src/Functional/BlockTest.php
modules/contrib/search_api_page/src/Entity/SearchApiPage.php
modules/contrib/search_api_page/src/Form/SearchApiPageBlockForm.php
modules/contrib/search_api_page/tests/src/Functional/FacetsIntegrationTest.php
modules/contrib/search_api_page/src/Form/SearchApiPageDeleteForm.php
modules/contrib/search_api_page/tests/src/Functional/FunctionalTestBase.php
modules/contrib/search_api_page/src/Form/SearchApiPageForm.php
modules/contrib/search_api_page/tests/src/Functional/IntegrationTest.php
modules/contrib/search_api_page/src/PathProcessor/PathProcessorSearchApiPage.php
modules/contrib/search_api_page/tests/src/Functional/LanguageIntegrationTest.php
modules/contrib/search_api_page/src/Plugin/Block/SearchApiPageBlock.php
modules/contrib/search_api_page/src/Plugin/search_api/display/SearchApiPage.php
modules/contrib/search_api_page/tests/src/Functional/ParseModeTest.php
modules/contrib/search_api_page/tests/src/Functional/ViewModeTest.php
modules/contrib/search_api_page/tests/src/Unit/ViewModeTest.php

8 files with changes
====================

1) modules/contrib/search_api_page/search_api_page.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\file\Entity\File;
 /**
  * @file
  * Search API pages file.
@@ @@

   $variables['snippet'] = ['#markup' => $item->getExcerpt()];
   $variables['title'] = $entity->label();
-  if ($entity instanceof \Drupal\file\Entity\File) {
+  if ($entity instanceof File) {
     $variables['url'] = $entity->createFileUrl();
   }
   else {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/search_api_page/tests/src/Functional/ViewModeTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create blog content type and create one node of this type.
@@ @@
     $edit = [
       'fields[body][region]' => 'hidden',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     // Create a Search API Page and verify that it exists.
     $step1 = [
@@ @@
       'id' => 'search_page_test',
       'index' => $this->index->id(),
     ];
-    $this->drupalPostForm('admin/config/search/search-api-pages/add', $step1, 'Next');
+    $this->drupalGet('admin/config/search/search-api-pages/add');
+    $this->submitForm($step1, 'Next');
     $step2 = [
       'path' => 'search-page-test',
     ];
-    $this->drupalPostForm(NULL, $step2, 'Save');
+    $this->submitForm($step2, 'Save');
     $this->drupalGet('admin/config/search/search-api-pages');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('Search Page Test');
@@ @@
       'view_mode_configuration[entity:node][default]' => 'default',
       'view_mode_configuration[entity:node][overrides][document]' => 'teaser',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     // Perform a few searches and check whether the outcome is as expected.
     $this->drupalGet('search-page-test');
     $assert_session->statusCodeEquals(200);
-    $this->drupalPostForm(NULL, ['keys' => 'blog number 1'], 'Search');
+    $this->submitForm(['keys' => 'blog number 1'], 'Search');
     $assert_session->pageTextContains('Title blog number 1');
     $assert_session->pageTextContains('This is the body text for blog number 1.');
-    $this->drupalPostForm(NULL, ['keys' => 'document number 1'], 'Search');
+    $this->submitForm(['keys' => 'document number 1'], 'Search');
     $assert_session->pageTextContains('Title document number 1');
     $assert_session->pageTextNotContains('This is the body text for document number 1.');
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/search_api_page/tests/src/Functional/ParseModeTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->drupalLogin($this->adminUser);
@@ @@
       'id' => 'search_page_test',
       'index' => $this->index->id(),
     ];
-    $this->drupalPostForm('admin/config/search/search-api-pages/add', $step1, 'Next');
+    $this->drupalGet('admin/config/search/search-api-pages/add');
+    $this->submitForm($step1, 'Next');
     $step2 = [
       'path' => 'search-page-test',
     ];
-    $this->drupalPostForm(NULL, $step2, 'Save');
+    $this->submitForm($step2, 'Save');
     $this->drupalGet('admin/config/search/search-api-pages');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('Search Page Test');
@@ @@
     $edit = [
       'parse_mode' => 'terms',
     ];
-    $this->drupalPostForm('admin/config/search/search-api-pages/search_page_test', $edit, 'Save');
+    $this->drupalGet('admin/config/search/search-api-pages/search_page_test');
+    $this->submitForm($edit, 'Save');
     $this->drupalGet('admin/config/search/search-api-pages/search_page_test');
     $assert_session->statusCodeEquals(200);
     $assert_session->responseContains('terms');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/search_api_page/tests/src/Functional/LanguageIntegrationTest.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->drupalLogin($this->adminUser);
@@ @@
       'id' => 'search',
       'index' => $this->index->id(),
     ];
-    $this->drupalPostForm('admin/config/search/search-api-pages/add', $step1, 'Next');
+    $this->drupalGet('admin/config/search/search-api-pages/add');
+    $this->submitForm($step1, 'Next');

     $step2 = [
       'path' => 'search',
     ];
-    $this->drupalPostForm(NULL, $step2, 'Save');
+    $this->submitForm($step2, 'Save');
   }

   /**
@@ @@
     $assert_session = $this->assertSession();

     $this->drupalGet('/search');
-    $this->drupalPostForm(NULL, ['keys' => 'bird'], 'Search');
+    $this->submitForm(['keys' => 'bird'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('1 result found');
     $assert_session->pageTextContains('Hawk');
@@ @@
     $assert_session->pageTextNotContains('Your search yielded no results.');

     $this->drupalGet('/nl/search');
-    $this->drupalPostForm(NULL, ['keys' => 'bird'], 'Search');
+    $this->submitForm(['keys' => 'bird'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('1 result found');
     $assert_session->pageTextContains('Havik');
@@ @@

     // Test that keys are properly preserved when switching languages.
     $this->drupalGet('/search');
-    $this->drupalPostForm(NULL, ['keys' => 'bird'], 'Search');
+    $this->submitForm(['keys' => 'bird'], 'Search');
     $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->pageTextContains('1 result found');
     $this->assertSession()->pageTextContains('Hawk');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/search_api_page/tests/src/Functional/IntegrationTest.php:29

    ---------- begin diff ----------
@@ @@
       'id' => 'search',
       'index' => $this->index->id(),
     ];
-    $this->drupalPostForm('admin/config/search/search-api-pages/add', $step1, 'Next');
+    $this->drupalGet('admin/config/search/search-api-pages/add');
+    $this->submitForm($step1, 'Next');

     // Test whether a leading slash leads to a form error.
     $step2 = [
       'path' => '/search',
     ];
-    $this->drupalPostForm(NULL, $step2, 'Save');
+    $this->submitForm($step2, 'Save');
     $assert_session->responseContains('The path should not contain leading or trailing slashes.');

     // Test whether a trailing slash leads to a form error.
@@ @@
     $step2 = [
       'path' => 'search/',
     ];
-    $this->drupalPostForm(NULL, $step2, 'Save');
+    $this->submitForm($step2, 'Save');
     $assert_session->responseContains('The path should not contain leading or trailing slashes.');

     // Test whether both a leading slash and a trailing slash leads to a form error.
@@ @@
     $step2 = [
       'path' => '/search/',
     ];
-    $this->drupalPostForm(NULL, $step2, 'Save');
+    $this->submitForm($step2, 'Save');
     $assert_session->responseContains('The path should not contain leading or trailing slashes.');

     $step2 = [
       'path' => 'search',
     ];
-    $this->drupalPostForm(NULL, $step2, 'Save');
+    $this->submitForm($step2, 'Save');

     $assert_session->responseNotContains('The path should not contain leading or trailing slashes.');

@@ @@
     $assert_session->pageTextContains('Your search yielded no results.');
     $this->drupalGet('search');
     $assert_session->pageTextNotContains('Your search yielded no results.');
+    $this->drupalGet('admin/config/search/search-api-pages/search');

-    $this->drupalPostForm('admin/config/search/search-api-pages/search', ['show_all_when_no_keys' => TRUE, 'show_search_form' => FALSE], 'Save');
+    $this->submitForm(['show_all_when_no_keys' => TRUE, 'show_search_form' => FALSE], 'Save');
     $this->drupalGet('search');
     $assert_session->pageTextNotContains('Your search yielded no results.');
     $assert_session->responseNotContains('Enter the terms you wish to search for.');
@@ @@

     $this->drupalGet('search/number10');
     $assert_session->pageTextContains('1 result found');
+    $this->drupalGet('admin/config/search/search-api-pages/search');

-    $this->drupalPostForm('admin/config/search/search-api-pages/search', ['show_search_form' => TRUE], 'Save');
+    $this->submitForm(['show_search_form' => TRUE], 'Save');

     $this->drupalGet('search/number11');
     $assert_session->pageTextContains('1 result found');
@@ @@
     $this->drupalGet('/search');
     $this->assertSession()->statusCodeEquals(200);

-    $this->drupalPostForm(NULL, ['keys' => 'Owls'], 'Search');
+    $this->submitForm(['keys' => 'Owls'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('9 results found');
     $assert_session->pageTextNotContains('49 results found');
-    $this->drupalPostForm(NULL, ['keys' => 'birds'], 'Search');
+    $this->submitForm(['keys' => 'birds'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('9 results found');
     $assert_session->pageTextNotContains('49 results found');
-    $this->drupalPostForm(NULL, ['keys' => 'Strigiformes'], 'Search');
+    $this->submitForm(['keys' => 'Strigiformes'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('9 results found');
     $assert_session->pageTextNotContains('49 results found');
@@ @@
     $node->save();
     $this->indexItems($this->index->id());

-    $this->drupalPostForm(NULL, ['keys' => 'Owls'], 'Search');
+    $this->submitForm(['keys' => 'Owls'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('10 results found');
   }
@@ @@
     $this->drupalGet('/search');
     $assert_session->statusCodeEquals(200);

-    $this->drupalPostForm(NULL, ['keys' => 'Owls'], 'Search');
+    $this->submitForm(['keys' => 'Owls'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('9 results found');

-    $this->drupalPostForm(NULL, ['keys' => 'birds of prey'], 'Search');
+    $this->submitForm(['keys' => 'birds of prey'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('9 results found');

-    $this->drupalPostForm(NULL, ['keys' => 'prey birds'], 'Search');
+    $this->submitForm(['keys' => 'prey birds'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('9 results found');
   }
@@ @@
     $this->drupalGet('/search');
     $assert_session->statusCodeEquals(200);

-    $this->drupalPostForm(NULL, ['keys' => 'Owls '], 'Search');
+    $this->submitForm(['keys' => 'Owls '], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('9 results found');

-    $this->drupalPostForm(NULL, ['keys' => ' Owls'], 'Search');
+    $this->submitForm(['keys' => ' Owls'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('9 results found');
   }
@@ @@
     $this->drupalGet('/search');
     $assert_session->statusCodeEquals(200);

-    $this->drupalPostForm(NULL, ['keys' => 'foo/bar'], 'Search');
+    $this->submitForm(['keys' => 'foo/bar'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('1 result found');
   }
@@ @@
     $this->drupalGet('/search');
     $assert_session->statusCodeEquals(200);

-    $this->drupalPostForm(NULL, ['keys' => 'Undefined'], 'Search');
+    $this->submitForm(['keys' => 'Undefined'], 'Search');
     $assert_session->statusCodeEquals(200);
     $assert_session->pageTextContains('1 result found');
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/search_api_page/tests/src/Functional/FunctionalTestBase.php:73

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create the users used for the tests.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/search_api_page/tests/src/Functional/FacetsIntegrationTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/search_api_page/tests/src/Functional/BlockTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->drupalLogin($this->adminUser);
@@ @@
       'id' => $id,
       'index' => $indexId,
     ];
-    $this->drupalPostForm('admin/config/search/search-api-pages/add', $step1, 'Next');
+    $this->drupalGet('admin/config/search/search-api-pages/add');
+    $this->submitForm($step1, 'Next');

     $step2 = [
       'path' => $path,
     ];
-    $this->drupalPostForm(NULL, $step2, 'Save');
+    $this->submitForm($step2, 'Save');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

