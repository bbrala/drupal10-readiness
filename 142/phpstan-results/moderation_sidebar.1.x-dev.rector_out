modules/contrib/moderation_sidebar/moderation_sidebar.api.php
modules/contrib/moderation_sidebar/tests/src/FunctionalJavascript/ModerationSidebarTaxonomyTermTest.php
modules/contrib/moderation_sidebar/moderation_sidebar.module
modules/contrib/moderation_sidebar/src/Controller/ModerationSidebarController.php
modules/contrib/moderation_sidebar/tests/src/FunctionalJavascript/ModerationSidebarTest.php
modules/contrib/moderation_sidebar/src/Form/ModerationSidebarSettingsForm.php
modules/contrib/moderation_sidebar/src/Form/QuickTransitionForm.php
modules/contrib/moderation_sidebar/tests/src/Functional/AdminToolbarStateTaxonomyTermTest.php
modules/contrib/moderation_sidebar/tests/src/Functional/AdminToolbarStateTest.php
modules/contrib/moderation_sidebar/tests/src/Functional/ModerationSidebarTest.php

6 files with changes
====================

1) modules/contrib/moderation_sidebar/tests/src/FunctionalJavascript/ModerationSidebarTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a Content Type with moderation enabled.
@@ @@

     // Enable admin theme for content forms.
     $edit = ['use_admin_theme' => TRUE];
-    $this->drupalPostForm('admin/appearance', $edit, 'Save configuration');
+    $this->drupalGet('admin/appearance');
+    $this->submitForm($edit, 'Save configuration');
     // Add German language.
     $edit = ['predefined_langcode' => 'de'];
-    $this->drupalPostForm('admin/config/regional/language/add', $edit, t('Add language'));
+    $this->drupalGet('admin/config/regional/language/add');
+    $this->submitForm($edit, t('Add language'));
     // Enable translations for nodes.
     $edit = ['entity_types[node]' => 'node', 'settings[node][article][translatable]' => TRUE];
-    $this->drupalPostForm('admin/config/regional/content-language', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/regional/content-language');
+    $this->submitForm($edit, 'Save configuration');

     drupal_flush_all_caches();
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/moderation_sidebar/tests/src/FunctionalJavascript/ModerationSidebarTaxonomyTermTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a Content Type with moderation enabled.
@@ @@

     // Enable admin theme for content forms.
     $edit = ['use_admin_theme' => TRUE];
-    $this->drupalPostForm('admin/appearance', $edit, 'Save configuration');
+    $this->drupalGet('admin/appearance');
+    $this->submitForm($edit, 'Save configuration');

     drupal_flush_all_caches();
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/moderation_sidebar/tests/src/Functional/ModerationSidebarTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $workflow = $this->createEditorialWorkflow();
     $this->addEntityTypeAndBundleToWorkflow($workflow, 'entity_test_mulrevpub', 'entity_test_mulrevpub');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/moderation_sidebar/tests/src/Functional/AdminToolbarStateTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $node_type = $this->drupalCreateContentType(['type' => 'article', 'name' => 'Article']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/moderation_sidebar/tests/src/Functional/AdminToolbarStateTaxonomyTermTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->vocabulary = $this->createVocabulary();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/moderation_sidebar/moderation_sidebar.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Hooks related to moderation sidebar module.
  */
-
 /**
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Alter the build rendered in the moderation sidebar.
  *
@@ @@
  *
  * @see \Drupal\moderation_sidebar\Controller\ModerationSidebarController::sideBar()
  */
-function hook_moderation_sidebar_alter(array &$build, \Drupal\Core\Entity\EntityInterface $entity) {
+function hook_moderation_sidebar_alter(array &$build, EntityInterface $entity) {
   if ($entity->getEntityTypeId() === 'my_great_type') {
     $build['fun'] = [
       '#markup' => '<a href="#" class="button">This does nothing, suckers!</a>',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

