modules/contrib/smart_title/modules/smart_title_ui/src/Form/SmartTitleConfigForm.php
modules/contrib/smart_title/tests/src/Functional/SmartTitleXssTest.php
modules/contrib/smart_title/tests/src/FunctionalJavascript/SmartTitleLayoutBuilderTest.php
modules/contrib/smart_title/modules/smart_title_ui/tests/src/Functional/SmartTitleUITest.php
modules/contrib/smart_title/modules/smart_title_ui/tests/src/FunctionalJavascript/SmartTitleUiLayoutBuilderTest.php
modules/contrib/smart_title/smart_title.install
modules/contrib/smart_title/smart_title.module
modules/contrib/smart_title/src/EntityViewDisplayAlterer.php
modules/contrib/smart_title/src/SmartTitleBuilder.php
modules/contrib/smart_title/tests/src/Functional/SmartTitleBasicTest.php
modules/contrib/smart_title/tests/src/Functional/SmartTitleBrowserTestBase.php
modules/contrib/smart_title/tests/src/Functional/SmartTitleConfigTest.php
modules/contrib/smart_title/tests/src/Functional/SmartTitleFieldLayoutTest.php
modules/contrib/smart_title/tests/src/Functional/SmartTitleUninstallTest.php

6 files with changes
====================

1) modules/contrib/smart_title/tests/src/Functional/SmartTitleXssTest.php:16

    ---------- begin diff ----------
@@ @@
   public function testConfigXss() {
     // Enable Smart Title for the test_page content type.
     $this->drupalLogin($this->adminUser);
-    $this->drupalPostForm('admin/structure/types/manage/test_page/display', [
+    $this->drupalGet('admin/structure/types/manage/test_page/display');
+    $this->submitForm([
       'smart_title__enabled' => TRUE,
     ], 'Save');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'fields[smart_title][weight]' => '-5',
       'fields[smart_title][region]' => 'content',
     ], 'Save');
     $this->click('[name="smart_title_settings_edit"]');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'fields[smart_title][settings_edit_form][settings][smart_title__classes]' => '<script>alert("XSS classes")</script>',
     ], 'Save');

     try {
-      $this->drupalPostForm(NULL, [
+      $this->submitForm([
         'fields[smart_title][settings_edit_form][settings][smart_title__tag]' => '<script>alert("XSS tag")</script>',
       ], 'Save');
       $this->fail('Expected exception has not been thrown.');
     }
     catch (\Exception $e) {
-      $this->pass('Expected exception has been thrown.');
     }

     try {
-      $this->drupalPostForm(NULL, [
+      $this->submitForm([
         'fields[smart_title][settings_edit_form][settings][smart_title__link]' => '<script>alert("XSS link")</script>',
       ], 'Save');
       $this->fail('Expected exception has not been thrown.');
     }
     catch (\Exception $e) {
-      $this->pass('Expected exception has been thrown.');
     }

     // Summary is protected.
    ----------- end diff -----------

Applied rules:
 * PassRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/smart_title/tests/src/Functional/SmartTitleFieldLayoutTest.php:20

    ---------- begin diff ----------
@@ @@
    */
   public function testSmartTitlePlacement() {
     $this->drupalLogin($this->adminUser);
+    $this->drupalGet('admin/structure/types/manage/test_page/display/teaser');

     // Enable Smart Title for test_page teaser display mode and make it visible.
-    $this->drupalPostForm('admin/structure/types/manage/test_page/display/teaser', [
+    $this->submitForm([
       'smart_title__enabled' => TRUE,
     ], 'Save');

@@ @@
     $form_edit = [
       'field_layout' => 'layout_twocol',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/test_page/display/teaser', $form_edit, 'Change layout');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->drupalGet('admin/structure/types/manage/test_page/display/teaser');
+    $this->submitForm($form_edit, 'Change layout');
+    $this->submitForm([], 'Save');

     // Make Smart Title visible for teaser view mode with custom configuration.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'fields[smart_title][region]' => 'second',
     ], 'Save');
     $this->click('[name="smart_title_settings_edit"]');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'fields[smart_title][settings_edit_form][settings][smart_title__tag]' => 'h3',
       'fields[smart_title][settings_edit_form][settings][smart_title__classes]' => 'smart-title--test',
     ], 'Save');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/smart_title/tests/src/Functional/SmartTitleConfigTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalLogin($this->adminUser);
@@ @@

     // Enable Smart Title for the test_page content type's teaser.
     $this->drupalLogin($this->adminUser);
-    $this->drupalPostForm('admin/structure/types/manage/test_page/display/teaser', [
+    $this->drupalGet('admin/structure/types/manage/test_page/display/teaser');
+    $this->submitForm([
       'smart_title__enabled' => TRUE,
     ], 'Save');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'fields[smart_title][weight]' => '-5',
       'fields[smart_title][region]' => 'content',
     ], 'Save');
@@ @@
     if (!empty($invalid_values)) {
       // Test that exception is thrown.
       try {
-        $this->drupalPostForm(NULL, [
+        $this->submitForm([
           "fields[smart_title][settings_edit_form][settings][smart_title__tag]" => $input['smart_title__tag'],
           "fields[smart_title][settings_edit_form][settings][smart_title__classes]" => $input['smart_title__classes'],
           "fields[smart_title][settings_edit_form][settings][smart_title__link]" => $input['smart_title__link'],
@@ @@
         $this->fail('Expected exception has not been thrown.');
       }
       catch (\Exception $e) {
-        $this->pass('Expected exception has been thrown.');
       }

       // Let's save the other values.
@@ @@
         $edit["fields[smart_title][settings_edit_form][settings][$key]"] = $value;
       }

-      $this->drupalPostForm(NULL, $edit, 'Save');
+      $this->submitForm($edit, 'Save');
     }
     else {
-      $this->drupalPostForm(NULL, [
+      $this->submitForm([
         "fields[smart_title][settings_edit_form][settings][smart_title__tag]" => $input['smart_title__tag'],
         "fields[smart_title][settings_edit_form][settings][smart_title__classes]" => $input['smart_title__classes'],
         "fields[smart_title][settings_edit_form][settings][smart_title__link]" => $input['smart_title__link'],
@@ @@

     // Re-save form again.
     $this->drupalGet('admin/structure/types/manage/test_page/display/teaser');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');

     // Verify saved settings again.
     $this->assertSmartTitleExpectedConfigs($expectation);
    ----------- end diff -----------

Applied rules:
 * PassRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/smart_title/tests/src/Functional/SmartTitleBrowserTestBase.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalPlaceBlock('local_tasks_block');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/smart_title/tests/src/Functional/SmartTitleBasicTest.php:40

    ---------- begin diff ----------
@@ @@

     // Enable Smart Title for the test_page content type.
     $this->drupalLogin($this->adminUser);
-    $this->drupalPostForm('admin/structure/types/manage/test_page/display', [
+    $this->drupalGet('admin/structure/types/manage/test_page/display');
+    $this->submitForm([
       'smart_title__enabled' => TRUE,
     ], 'Save');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'fields[smart_title][weight]' => '-5',
       'fields[smart_title][region]' => 'content',
     ], 'Save');
@@ @@
     $page->selectFieldOption('fields[smart_title][settings_edit_form][settings][smart_title__tag]', 'span');
     $page->fillField('fields[smart_title][settings_edit_form][settings][smart_title__classes]', 'test classes');
     $page->uncheckField('fields[smart_title][settings_edit_form][settings][smart_title__link]');
-    $this->drupalPostForm(NULL, [], 'Cancel');
+    $this->submitForm([], 'Cancel');

     $display = $this->container->get('entity_type.manager')
       ->getStorage('entity_view_display')
@@ @@
     $this->drupalGet($this->testPageNode->toUrl());
     $web_assert = $this->assertSession();
     // Check page title.
-    $this->assertTitle(strtr('@title | Drupal', ['@title' => $this->testPageNode->getTitle()]));
+    $this->assertSession()->titleEquals(strtr('@title | Drupal', ['@title' => $this->testPageNode->getTitle()]));
     // Check that title element exists.
     $web_assert->elementExists('css', 'article > div > h2.node__title');
     // Verify that smart title's link wraps the title field's output, so that
    ----------- end diff -----------

Applied rules:
 * AssertTitleRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/smart_title/modules/smart_title_ui/tests/src/Functional/SmartTitleUITest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a node type.
@@ @@
     $page->hasUncheckedField('test_page');

     // Set up Smart Title for test node.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'node_bundles[node:test_page]' => 1,
     ], 'Save configuration');

@@ @@
     $this->assertTrue(['node:test_page'] === $smart_title_bundles);

     // Uncheck test_page.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'node_bundles[node:test_page]' => 0,
     ], 'Save configuration');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

