modules/contrib/opigno_mobile_app/modules/opigno_onesignal/opigno_onesignal.install
modules/contrib/opigno_mobile_app/modules/opigno_onesignal/opigno_onesignal.module
modules/contrib/opigno_mobile_app/modules/opigno_onesignal/src/Config/ConfigManager.php
modules/contrib/opigno_mobile_app/src/Controller/StatisticsController.php
modules/contrib/opigno_mobile_app/modules/opigno_onesignal/src/Config/ConfigManagerInterface.php
modules/contrib/opigno_mobile_app/modules/opigno_onesignal/src/Controller/OneSignalController.php
modules/contrib/opigno_mobile_app/modules/opigno_onesignal/src/Form/OneSignalConfigForm.php
modules/contrib/opigno_mobile_app/modules/opigno_onesignal/src/OneSignalManager.php
modules/contrib/opigno_mobile_app/modules/opigno_onesignal/src/OneSignalManagerInterface.php
modules/contrib/opigno_mobile_app/opigno_mobile_app.install
modules/contrib/opigno_mobile_app/opigno_mobile_app.module
modules/contrib/opigno_mobile_app/src/Access/PMTAccessHandler.php
modules/contrib/opigno_mobile_app/src/Authentication/Provider/JsonAuth.php
modules/contrib/opigno_mobile_app/src/Controller/Users/UsersController.php
modules/contrib/opigno_mobile_app/src/Controller/Groups/LearningPathController.php
modules/contrib/opigno_mobile_app/src/Controller/Messaging/MessagingController.php
modules/contrib/opigno_mobile_app/src/GroupOMATrait.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/AchievementsRestResource.php
modules/contrib/opigno_mobile_app/src/Controller/OpignoMobileController.php
modules/contrib/opigno_mobile_app/src/Controller/OpignoMoxtraController.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/ColorRestResource.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/Group/TrainingsCatalogueRestResource.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/Messaging/PMTLastAccessTimeUpdateRestResource.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/Messaging/PrivateMessageLastForThreadsRestResource.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/Messaging/PrivateMessageRestResource.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/Messaging/PrivateMessageThreadsRestResource.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/Messaging/PrivateMessagesRestResource.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/OpignoCalendarEventsRestResource.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/OpignoNotificationRestResource.php
modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/TokenRestResource.php
modules/contrib/opigno_mobile_app/src/PrivateMessagesHandler.php
modules/contrib/opigno_mobile_app/src/Routing/RouteSubscriber.php

4 files with changes
====================

1) modules/contrib/opigno_mobile_app/modules/opigno_onesignal/opigno_onesignal.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Contains opigno_onesignal.module.
@@ @@
 /**
  * Implements hook_ENTITY_TYPE_insert().
  */
-function opigno_onesignal_opigno_notification_insert(Drupal\Core\Entity\EntityInterface $notification) {
+function opigno_onesignal_opigno_notification_insert(EntityInterface $notification) {
   /* @var \Drupal\opigno_notification\Entity\OpignoNotification $notification */
   $params = [];
   $params['title'] = 'New notification:';
@@ @@
 /**
  * Implements hook_ENTITY_TYPE_presave().
  */
-function opigno_onesignal_private_message_thread_presave(Drupal\Core\Entity\EntityInterface $private_message_thread) {
+function opigno_onesignal_private_message_thread_presave(EntityInterface $private_message_thread) {
   // Skip threads that are created/updated from the command line.
   if (PHP_SAPI === 'cli') {
     return;
@@ @@
 /**
  * Implements hook_ENTITY_TYPE_insert().
  */
-function opigno_onesignal_opigno_calendar_event_insert(Drupal\Core\Entity\EntityInterface $event) {
+function opigno_onesignal_opigno_calendar_event_insert(EntityInterface $event) {
   /* @var \Drupal\opigno_calendar_event\Entity\CalendarEvent $event */
   $params = [];
   $params['title'] = 'New event';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/opigno_mobile_app/opigno_mobile_app.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\user\UserInterface;
 /**
  * @file
  * Contains opigno_mobile_app.module.
@@ @@
  * @return string
  *   Return url with user's picture.
  */
-function opigno_mobile_app_get_user_picture(\Drupal\user\UserInterface $user) {
+function opigno_mobile_app_get_user_picture(UserInterface $user) {
   $user_picture = $user->get('user_picture')->target_id;
   if ($user_picture) {
     $file = File::load($user_picture);
     $uri = $file->getFileUri();
-    $url = file_create_url($uri);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
   }

   return isset($url) ? $url : '';
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


3) modules/contrib/opigno_mobile_app/modules/opigno_onesignal/src/OneSignalManager.php:102

    ---------- begin diff ----------
@@ @@
     }

     // Get logo.
-    $logo_path = $base_url . '/' . drupal_get_path("theme", "aristotle") . "/logo.png";
+    $logo_path = $base_url . '/' . \Drupal::service('extension.list.theme')->getPath("aristotle") . "/logo.png";
     // Build title for notification.
     $title = [
       $langcode => isset($params['title']) ? $params['title'] : '',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


4) modules/contrib/opigno_mobile_app/src/Plugin/rest/resource/TokenRestResource.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\opigno_mobile_app\Plugin\rest\resource;

+use Firebase\JWT\JWT;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\jwt\Transcoder\JwtTranscoderInterface;
 use Drupal\jwt\Transcoder\JwtTranscoder;
@@ @@
     parent::__construct($configuration, $plugin_id, $plugin_definition, $serializer_formats, $logger);

     $this->eventDispatcher = \Drupal::service('event_dispatcher');
-    $this->transcoder = new JwtTranscoder(new \Firebase\JWT\JWT(), \Drupal::configFactory(), \Drupal::service('key.repository'));
+    $this->transcoder = new JwtTranscoder(new JWT(), \Drupal::configFactory(), \Drupal::service('key.repository'));
   }

   /**
@@ @@
    */
   public function generateToken() {
     $event = new JwtAuthGenerateEvent(new JsonWebToken());
-    $this->eventDispatcher->dispatch(JwtAuthEvents::GENERATE, $event);
+    $this->eventDispatcher->dispatch($event, JwtAuthEvents::GENERATE);
     $jwt = $event->getToken();
     return $this->transcoder->encode($jwt);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

