modules/contrib/taxonomy_max_depth/src/Form/FormAltererBase.php
modules/contrib/taxonomy_max_depth/tests/src/Functional/Form/FormTestBase.php
modules/contrib/taxonomy_max_depth/src/Form/FormAltererInterface.php
modules/contrib/taxonomy_max_depth/src/Form/TermFormAlterer.php
modules/contrib/taxonomy_max_depth/tests/src/Functional/Form/TermFormTest.php
modules/contrib/taxonomy_max_depth/src/Form/TermOverviewFormAlterer.php
modules/contrib/taxonomy_max_depth/src/Form/VocabularyFormAlterer.php
modules/contrib/taxonomy_max_depth/src/Taxonomy/TermTreeDepthHelper.php
modules/contrib/taxonomy_max_depth/src/Taxonomy/TermTreeDepthHelperInterface.php
modules/contrib/taxonomy_max_depth/src/Taxonomy/VocabularySettingsReader.php
modules/contrib/taxonomy_max_depth/src/Taxonomy/VocabularySettingsReaderInterface.php
modules/contrib/taxonomy_max_depth/src/Taxonomy/VocabularySettingsWriter.php
modules/contrib/taxonomy_max_depth/src/Taxonomy/VocabularySettingsWriterInterface.php
modules/contrib/taxonomy_max_depth/taxonomy_max_depth.module
modules/contrib/taxonomy_max_depth/tests/src/Functional/Form/TermOverviewFormTest.php
modules/contrib/taxonomy_max_depth/tests/src/Functional/Form/VocabularyFormTest.php
modules/contrib/taxonomy_max_depth/tests/src/FunctionalJavascript/TermMediaAjaxTest.php
modules/contrib/taxonomy_max_depth/tests/src/FunctionalJavascript/TermOverviewJavascriptTest.php
modules/contrib/taxonomy_max_depth/tests/src/Traits/AssertHelperTrait.php
modules/contrib/taxonomy_max_depth/tests/src/Traits/TaxonomyTestTrait.php

6 files with changes
====================

1) modules/contrib/taxonomy_max_depth/tests/src/FunctionalJavascript/TermOverviewJavascriptTest.php:19

    ---------- begin diff ----------
@@ @@

   protected $settingsWriter;

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->vocabulary = $this->createVocabulary();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/taxonomy_max_depth/tests/src/FunctionalJavascript/TermMediaAjaxTest.php:21

    ---------- begin diff ----------
@@ @@

   protected $settingsWriter;

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->vocabulary = $this->container->get('entity_type.manager')
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/taxonomy_max_depth/tests/src/Functional/Form/VocabularyFormTest.php:32

    ---------- begin diff ----------
@@ @@
     $form_path = '/admin/structure/taxonomy/manage/' . $vocabulary->id();
     $settings_reader = $this->container
       ->get('taxonomy_max_depth.vocabulary_settings_reader');
+    $this->drupalGet($form_path);

-    $this->drupalPostForm($form_path, ['taxonomy_max_depth' => 2], 'Save');
+    $this->submitForm(['taxonomy_max_depth' => 2], 'Save');
     $vocabulary = $this->reloadVocabulary($vocabulary);
     $this->assertEquals(2, $settings_reader->getMaxAncestorDepth($vocabulary));
+    $this->drupalGet($form_path);

     // Zero means no hierarchy, so it should be saved as-is.
-    $this->drupalPostForm($form_path, ['taxonomy_max_depth' => 0], 'Save');
+    $this->submitForm(['taxonomy_max_depth' => 0], 'Save');
     $vocabulary = $this->reloadVocabulary($vocabulary);
     $this->assertSame(0, $settings_reader->getMaxAncestorDepth($vocabulary));
+    $this->drupalGet($form_path);

     // Empty string means no limit, so it is saved as NULL.
-    $this->drupalPostForm($form_path, ['taxonomy_max_depth' => ''], 'Save');
+    $this->submitForm(['taxonomy_max_depth' => ''], 'Save');
     $vocabulary = $this->reloadVocabulary($vocabulary);
     $this->assertNull($settings_reader->getMaxAncestorDepth($vocabulary));
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/taxonomy_max_depth/tests/src/Functional/Form/TermOverviewFormTest.php:27

    ---------- begin diff ----------
@@ @@
    */
   protected $termStorage;

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->settingsWriter = $this->container
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/taxonomy_max_depth/tests/src/Functional/Form/TermFormTest.php:26

    ---------- begin diff ----------
@@ @@
    */
   protected $settingsWriter;

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->vocabulary = $this->createVocabulary();
@@ @@

   protected function submitTermEditForm(TermInterface $term, array $parents) {
     $path = 'taxonomy/term/' . $term->id() . '/edit';
-    $this->drupalPostForm($path, ['parent[]' => $parents], 'Save');
+    $this->drupalGet($path);
+    $this->submitForm(['parent[]' => $parents], 'Save');
   }

   protected function submitTermCreationForm(
@@ @@
       'name[0][value]' => $this->randomString(),
       'parent[]' => $parents
     ];
-    $this->drupalPostForm($path, $values, 'Save');
+    $this->drupalGet($path);
+    $this->submitForm($values, 'Save');
   }

   protected function setMaxAncestorDepth(int $max_depth = NULL) {
@@ @@

     $children_of_term_2 = $this->termStorage->loadTree($this->vocabulary->id(), $top_term_2->id());
     $this->assertCount(1, $children_of_term_2);
-    $this->assertEqual(reset($children_of_term_2)->tid, $child_term->id());
+    $this->assertEquals(reset($children_of_term_2)->tid, $child_term->id());
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/taxonomy_max_depth/tests/src/Functional/Form/FormTestBase.php:12

    ---------- begin diff ----------
@@ @@

   protected $defaultTheme = 'classy';

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $user = $this->createUser(['administer taxonomy']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

