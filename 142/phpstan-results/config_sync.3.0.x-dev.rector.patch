diff --git a/config_sync.install b/config_sync.install
index 1d60d19..1be76c0 100644
--- a/config_sync.install
+++ b/config_sync.install
@@ -63,7 +63,7 @@ function config_sync_update_8001() {
         // provides.
         foreach (array_keys($installed_type) as $name) {
 
-          $pathname = drupal_get_filename($type, $name);
+          $pathname = \Drupal::service('extension.path.resolver')->getPathname($type, $name);
           $extension = new Extension(\Drupal::root(), $type, $pathname);
           $extensions = [
             $name => $extension,
diff --git a/src/ConfigSyncSnapshotter.php b/src/ConfigSyncSnapshotter.php
index bca7c1b..e481929 100644
--- a/src/ConfigSyncSnapshotter.php
+++ b/src/ConfigSyncSnapshotter.php
@@ -219,7 +219,7 @@ class ConfigSyncSnapshotter implements ConfigSyncSnapshotterInterface {
    *   found.
    */
   protected function drupalGetFilename($type, $name) {
-    return drupal_get_filename($type, $name);
+    return \Drupal::service('extension.path.resolver')->getPathname($type, $name);
   }
 
 }
diff --git a/src/EventSubscriber/ConfigSyncSnapshotSubscriber.php b/src/EventSubscriber/ConfigSyncSnapshotSubscriber.php
index 8fa5c3f..f3e2d4c 100644
--- a/src/EventSubscriber/ConfigSyncSnapshotSubscriber.php
+++ b/src/EventSubscriber/ConfigSyncSnapshotSubscriber.php
@@ -2,11 +2,11 @@
 
 namespace Drupal\config_sync\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\config_distro\Event\ConfigDistroEvents;
 use Drupal\config_filter\ConfigFilterManagerInterface;
 use Drupal\config_sync\ConfigSyncSnapshotterInterface;
 use Drupal\Core\State\StateInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 /**
@@ -54,7 +54,7 @@ class ConfigSyncSnapshotSubscriber implements EventSubscriberInterface {
   /**
    * Refreshes the snapshot for extensions whose updates were imported.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The Event to process.
    */
   public function onConfigDistroImport(Event $event) {
diff --git a/src/Plugin/ConfigFilter/SyncFilter.php b/src/Plugin/ConfigFilter/SyncFilter.php
index 29d77bb..1f0d435 100644
--- a/src/Plugin/ConfigFilter/SyncFilter.php
+++ b/src/Plugin/ConfigFilter/SyncFilter.php
@@ -121,7 +121,7 @@ class SyncFilter extends ConfigFilterBase implements ContainerFactoryPluginInter
     // storage.
     if ($update_mode === ConfigSyncListerInterface::UPDATE_MODE_FULL_RESET) {
       // Create a storage with configuration installable from this extension.
-      $pathname = drupal_get_filename($configuration['extension_type'], $configuration['extension_name']);
+      $pathname = \Drupal::service('extension.path.resolver')->getPathname($configuration['extension_type'], $configuration['extension_name']);
       $extension = new Extension($root, $configuration['extension_type'], $pathname);
       $extensions = [
         $configuration['extension_name'] => $extension,
@@ -173,7 +173,7 @@ class SyncFilter extends ConfigFilterBase implements ContainerFactoryPluginInter
                 $updated = $config_merger->mergeConfigItemStates($previous, $current, $active);
                 $logs = $config_merger->getLogs();
                 $event = new ConfigMergeEvent($item_name, $logs, $configuration['extension_type'], $configuration['extension_name']);
-                $event_dispatcher->dispatch(ConfigMergeEvents::POST_MERGE, $event);
+                $event_dispatcher->dispatch($event, ConfigMergeEvents::POST_MERGE);
                 break;
 
               // Reset to the currently provided value.
diff --git a/tests/src/Functional/ImportTest.php b/tests/src/Functional/ImportTest.php
index 5af005a..141b603 100644
--- a/tests/src/Functional/ImportTest.php
+++ b/tests/src/Functional/ImportTest.php
@@ -70,19 +70,20 @@ class ImportTest extends BrowserTestBase {
     $this->assertSession()->pageTextContains('View differences');
     $this->assertSession()->responseContains('Import');
     $this->assertSession()->pageTextNotContains('The staged configuration is identical to the active configuration.');
+    $this->drupalGet('/admin/config/development/distro');
 
     // Import the configuration.
-    $this->drupalPostForm('/admin/config/development/distro', [], $this->t('Import'));
+    $this->submitForm([], $this->t('Import'));
 
     // Check that there are no errors.
-    $this->assertIdentical($this->configImporter()->getErrors(), []);
+    $this->assertSame($this->configImporter()->getErrors(), []);
 
     // Ensure that we have no configuration changes to import.
     $storage_comparer = new StorageComparer(
       $this->container->get('config_distro.storage.distro'),
       $this->container->get('config.storage')
     );
-    $this->assertIdentical($storage_comparer->createChangelist()->getChangelist(), $storage_comparer->getEmptyChangelist());
+    $this->assertSame($storage_comparer->createChangelist()->getChangelist(), $storage_comparer->getEmptyChangelist());
 
     // We should not see changes for import.
     $this->drupalGet('/admin/config/development/distro');
@@ -91,12 +92,12 @@ class ImportTest extends BrowserTestBase {
 
     // Check that the node type name was updated.
     $node_type = NodeType::load('config_sync_test_1');
-    $this->assertIdentical($node_type->get('name'), $provided_name);
+    $this->assertSame($node_type->get('name'), $provided_name);
 
     // Check that the snapshot was updated.
     $test_module_config = ConfigSnapshot::load(ConfigSyncSnapshotterInterface::CONFIG_SNAPSHOT_SET . '.module.config_sync_test');
     $items = $test_module_config->getItems();
-    $this->assertIdentical($items[0]['data']['name'], $provided_name);
+    $this->assertSame($items[0]['data']['name'], $provided_name);
   }
 
 }
