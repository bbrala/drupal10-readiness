modules/contrib/gumlet_sf/gumlet_sf.field.inc
modules/contrib/gumlet_sf/gumlet_sf.install
modules/contrib/gumlet_sf/gumlet_sf.module
modules/contrib/gumlet_sf/src/Controller/GumletSfController.php
modules/contrib/gumlet_sf/src/Form/GumletSFEditForm.php
modules/contrib/gumlet_sf/src/Form/GumletSFForm.php
modules/contrib/gumlet_sf/src/Plugin/Field/FieldFormatter/GumletSFImageFormatter.php
modules/contrib/gumlet_sf/src/Plugin/Field/FieldFormatter/GumletSFImageFormatterBase.php
modules/contrib/gumlet_sf/src/Plugin/Field/FieldFormatter/GumletSFImageUrlFormatter.php

3 files with changes
====================

1) modules/contrib/gumlet_sf/src/Plugin/Field/FieldFormatter/GumletSFImageUrlFormatter.php:69

    ---------- begin diff ----------
@@ @@

         foreach ($images as $delta => $image) {
             $image_uri = $image->getFileUri();
-            $url = file_create_url($image_uri);
-            $url = file_url_transform_relative($url);
+            $url = \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
+            $url = \Drupal::service('file_url_generator')->transformRelative($url);
             if (isset($sf_data) && !empty($sf_data)) {
                 $url .= gumlet_sf_formatter($sf_data);
             }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/gumlet_sf/src/Plugin/Field/FieldFormatter/GumletSFImageFormatter.php:192

    ---------- begin diff ----------
@@ @@
                 // context to ensure different file URLs are generated for different
                 // sites in a multisite setup, including HTTP and HTTPS versions of the
                 // same site. Fix in https://www.drupal.org/node/2646744.
-                $url = Url::fromUri(file_create_url($image_uri));
+                $url = \Drupal::service('file_url_generator')->generate($image_uri);
                 $cache_contexts[] = 'url.site';
             }
             $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/gumlet_sf/gumlet_sf.field.inc:63

    ---------- begin diff ----------
@@ @@
     if (($entity = $item->entity) && empty($item->uri)) {
         $image_uri = $entity->getFileUri();
         $url = $entity->createFileUrl(false);
-        $urlImage = file_url_transform_relative($url);
+        $urlImage = \Drupal::service('file_url_generator')->transformRelative($url);
     } else {
         $image_uri = $item->uri;
         $url = $entity->createFileUrl(false);
-        $urlImage = file_url_transform_relative($url);
+        $urlImage = \Drupal::service('file_url_generator')->transformRelative($url);
     }
     if (isset($image_style_data) && !empty($image_style_data)) {
         $urlImage .= gumlet_sf_formatter($image_style_data);
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

