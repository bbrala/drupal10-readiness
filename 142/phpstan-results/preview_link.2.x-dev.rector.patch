diff --git a/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php b/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php
index ced48f5..0886ab5 100644
--- a/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php
+++ b/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\preview_link\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Routing\RedirectDestinationInterface;
 use Drupal\Core\Routing\TrustedRedirectResponse;
@@ -14,7 +15,6 @@ use Drupal\Core\Url;
 use Drupal\preview_link\Exception\PreviewLinkRerouteException;
 use Psr\Log\LoggerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -81,11 +81,11 @@ class PreviewLinkRouteEventSubscriber implements EventSubscriberInterface {
    * ExceptionEvent::getThrowable() since these are in Symfony 4.4, and
    * Drupal 8.9 supports Symfony 3.4.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The exception event.
    */
-  public function onException(GetResponseForExceptionEvent $event): void {
-    $exception = $event->getException();
+  public function onException(ExceptionEvent $event): void {
+    $exception = $event->getThrowable();
     if ($exception instanceof PreviewLinkRerouteException) {
       $entity = $exception->getEntity();
 
diff --git a/tests/src/Functional/PreviewLinkForwardRevisionTest.php b/tests/src/Functional/PreviewLinkForwardRevisionTest.php
index 4a30322..5f1490e 100644
--- a/tests/src/Functional/PreviewLinkForwardRevisionTest.php
+++ b/tests/src/Functional/PreviewLinkForwardRevisionTest.php
@@ -43,7 +43,7 @@ class PreviewLinkForwardRevisionTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->createEditorialWorkflow();
     $this->createContentType(['type' => 'page']);
diff --git a/tests/src/Functional/PreviewLinkNodeTest.php b/tests/src/Functional/PreviewLinkNodeTest.php
index 246adb3..0bdd798 100644
--- a/tests/src/Functional/PreviewLinkNodeTest.php
+++ b/tests/src/Functional/PreviewLinkNodeTest.php
@@ -56,7 +56,7 @@ class PreviewLinkNodeTest extends BrowserTestBase {
     $edit = [
       'entities[1][target_id]' => 'node2 (' . $node2->id() . ')',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     // This would fail if unpublished wasnt referencable:
     $this->assertSession()->pageTextContains('Preview Link saved.');
   }
diff --git a/tests/src/Functional/PreviewLinkSessionTokenTest.php b/tests/src/Functional/PreviewLinkSessionTokenTest.php
index e456a22..cf41faf 100644
--- a/tests/src/Functional/PreviewLinkSessionTokenTest.php
+++ b/tests/src/Functional/PreviewLinkSessionTokenTest.php
@@ -43,7 +43,7 @@ class PreviewLinkSessionTokenTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $timeMachine = \Drupal::service('datetime.time');
     assert($timeMachine instanceof TimeMachine);
diff --git a/tests/src/Functional/PreviewLinkTest.php b/tests/src/Functional/PreviewLinkTest.php
index 44bdec4..d432a21 100644
--- a/tests/src/Functional/PreviewLinkTest.php
+++ b/tests/src/Functional/PreviewLinkTest.php
@@ -50,7 +50,7 @@ class PreviewLinkTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->createContentType(['type' => 'page']);
     $this->admin = $this->createUser([
@@ -98,9 +98,10 @@ class PreviewLinkTest extends BrowserTestBase {
     $this->drupalGet($link);
     $assert->statusCodeEquals(200);
     $assert->responseContains($this->node->getTitle());
+    $this->drupalGet($url);
 
     // Submitting form re-generates the link.
-    $this->drupalPostForm($url, [], 'Save and regenerate preview link');
+    $this->submitForm([], 'Save and regenerate preview link');
     $new_link = $this->cssSelect('.preview-link__link')[0]->getText();
     $this->assertNotEquals($link, $new_link);
 
@@ -145,7 +146,7 @@ class PreviewLinkTest extends BrowserTestBase {
     $this->assertSession()->pageTextContains('Generate a preview link for the entity.');
     $currentTime = new \DateTime('14 May 2014 20:00:00');
     $timeMachine->setTime($currentTime);
-    $this->drupalPostForm(NULL, [], 'Reset lifetime');
+    $this->submitForm([], 'Reset lifetime');
     $this->assertSession()->pageTextContains('Preview link will now expire at Wed, 05/21/2014 - 20:00.');
 
     // Reload preview link.
@@ -182,7 +183,7 @@ class PreviewLinkTest extends BrowserTestBase {
     $edit = [
       'entities[1][target_id]' => 'foo2 (2)',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
 
     $this->assertSession()->pageTextContains('Preview Link saved.');
     $this->assertSession()->fieldValueEquals('entities[0][target_id]', 'foo1 (1)');
@@ -221,7 +222,7 @@ class PreviewLinkTest extends BrowserTestBase {
       'entities[0][target_id]' => 'foo1 (1)',
       'entities[1][target_id]' => 'foo1 (1)',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('test entity - revisions and publishing status is already referenced by item #1.');
   }
 
diff --git a/tests/src/Functional/Update/PreviewLinkSessionTokenUpdateTest.php b/tests/src/Functional/Update/PreviewLinkSessionTokenUpdateTest.php
index 6d565b3..21bac85 100644
--- a/tests/src/Functional/Update/PreviewLinkSessionTokenUpdateTest.php
+++ b/tests/src/Functional/Update/PreviewLinkSessionTokenUpdateTest.php
@@ -28,7 +28,7 @@ class PreviewLinkSessionTokenUpdateTest extends UpdatePathTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installModulesFromClassProperty($this->container);
   }
diff --git a/tests/src/Kernel/PreviewLinkAccessTest.php b/tests/src/Kernel/PreviewLinkAccessTest.php
index b2cfd5a..05db8e7 100644
--- a/tests/src/Kernel/PreviewLinkAccessTest.php
+++ b/tests/src/Kernel/PreviewLinkAccessTest.php
@@ -47,7 +47,7 @@ class PreviewLinkAccessTest extends PreviewLinkBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['node', 'filter']);
     $this->createContentType(['type' => 'page']);
diff --git a/tests/src/Kernel/PreviewLinkBase.php b/tests/src/Kernel/PreviewLinkBase.php
index 2617a8d..787fcec 100644
--- a/tests/src/Kernel/PreviewLinkBase.php
+++ b/tests/src/Kernel/PreviewLinkBase.php
@@ -22,7 +22,7 @@ abstract class PreviewLinkBase extends EntityKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('preview_link');
   }
diff --git a/tests/src/Kernel/PreviewLinkExpiryTest.php b/tests/src/Kernel/PreviewLinkExpiryTest.php
index 48ed91a..6c18012 100644
--- a/tests/src/Kernel/PreviewLinkExpiryTest.php
+++ b/tests/src/Kernel/PreviewLinkExpiryTest.php
@@ -40,7 +40,7 @@ class PreviewLinkExpiryTest extends PreviewLinkBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['node', 'filter']);
     $this->createContentType(['type' => 'page']);
diff --git a/tests/src/Kernel/PreviewLinkStorageTest.php b/tests/src/Kernel/PreviewLinkStorageTest.php
index 0abe187..6bc7f65 100644
--- a/tests/src/Kernel/PreviewLinkStorageTest.php
+++ b/tests/src/Kernel/PreviewLinkStorageTest.php
@@ -41,7 +41,7 @@ class PreviewLinkStorageTest extends PreviewLinkBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['node', 'filter']);
     $this->createContentType(['type' => 'page']);
