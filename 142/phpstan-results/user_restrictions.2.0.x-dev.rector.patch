diff --git a/composer.json b/composer.json
index c66df87..9bd5088 100644
--- a/composer.json
+++ b/composer.json
@@ -4,6 +4,6 @@
   "type": "drupal-module",
   "license": "GPL-2.0-or-later",
   "require": {
-      "drupal/core": "^8.8 || ^9"
+    "drupal/core": "^9.1 || ^10"
   }
 }
diff --git a/tests/src/Functional/UserRestrictionsBasicTest.php b/tests/src/Functional/UserRestrictionsBasicTest.php
index 3933c70..fe43221 100644
--- a/tests/src/Functional/UserRestrictionsBasicTest.php
+++ b/tests/src/Functional/UserRestrictionsBasicTest.php
@@ -41,8 +41,8 @@ class UserRestrictionsBasicTest extends UserRestrictionsTestBase {
   public function testUserRestrictionsRecordExists() {
     $restriction = $this->storage->load($this->id);
     $this->assertTrue($restriction, 'User restriction exists in the database');
-    $this->assertEqual($restriction->label(), $this->label, 'User restriction name matches');
-    $this->assertEqual($restriction->getRuleType(), $this->type, 'User restriction type matches');
+    $this->assertEquals($restriction->label(), $this->label, 'User restriction name matches');
+    $this->assertEquals($restriction->getRuleType(), $this->type, 'User restriction type matches');
   }
 
 }
diff --git a/tests/src/Functional/UserRestrictionsExpireTest.php b/tests/src/Functional/UserRestrictionsExpireTest.php
index debdb49..beb9b14 100644
--- a/tests/src/Functional/UserRestrictionsExpireTest.php
+++ b/tests/src/Functional/UserRestrictionsExpireTest.php
@@ -24,7 +24,7 @@ class UserRestrictionsExpireTest extends UserRestrictionsTestBase {
   public function testUserRestrictionsRecordExists() {
     $restriction = $this->storage->load($this->id);
     $this->assertNotNull($restriction, 'User Restriction exists in the database');
-    $this->assertEqual($restriction->label(), $this->name, 'User restriction exists');
+    $this->assertEquals($restriction->label(), $this->name, 'User restriction exists');
   }
 
   /**
diff --git a/tests/src/Functional/UserRestrictionsLoginTest.php b/tests/src/Functional/UserRestrictionsLoginTest.php
index e3ee5c0..a29735f 100644
--- a/tests/src/Functional/UserRestrictionsLoginTest.php
+++ b/tests/src/Functional/UserRestrictionsLoginTest.php
@@ -26,9 +26,10 @@ class UserRestrictionsLoginTest extends UserRestrictionsTestBase {
     $edit = [];
     $edit['name'] = $name;
     $edit['mail'] = $this->randomMachineName() . '@example.com';
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
     $text = (string) new FormattableMarkup('The name <em class="placeholder">@name</em> is reserved, and cannot be used.', ['@name' => $name]);
-    $this->assertRaw((string) $text, 'User "name" restricted.');
+    $this->assertSession()->responseContains((string) $text);
   }
 
   /**
@@ -40,8 +41,9 @@ class UserRestrictionsLoginTest extends UserRestrictionsTestBase {
     $edit = [];
     $edit['name'] = 'lolcats';
     $edit['mail'] = $this->randomMachineName() . '@example.com';
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message with further instructions has been sent to your email address.'), 'User registered successfully.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
+    $this->assertSession()->pageTextContains(t('A welcome message with further instructions has been sent to your email address.'));
   }
 
   /**
@@ -54,9 +56,10 @@ class UserRestrictionsLoginTest extends UserRestrictionsTestBase {
     $edit = [];
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $mail;
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
     $text = (string) new FormattableMarkup('The email <em class="placeholder">@mail</em> is reserved, and cannot be used.', ['@mail' => $mail]);
-    $this->assertRaw((string) $text, 'User "email" restricted.');
+    $this->assertSession()->responseContains((string) $text);
   }
 
   /**
@@ -68,8 +71,9 @@ class UserRestrictionsLoginTest extends UserRestrictionsTestBase {
     $edit = [];
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = 'typhonius@mail.ru';
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message with further instructions has been sent to your email address.'), 'User registered successfully.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
+    $this->assertSession()->pageTextContains(t('A welcome message with further instructions has been sent to your email address.'));
   }
 
   /**
@@ -82,8 +86,9 @@ class UserRestrictionsLoginTest extends UserRestrictionsTestBase {
     $edit = [];
     $edit['name'] = 'ilikecoffee';
     $edit['mail'] = $mail;
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
-    $this->assertText(t('A welcome message with further instructions has been sent to your email address.'), 'User registered successfully.');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
+    $this->assertSession()->pageTextContains(t('A welcome message with further instructions has been sent to your email address.'));
   }
 
   /**
@@ -96,9 +101,10 @@ class UserRestrictionsLoginTest extends UserRestrictionsTestBase {
     $edit = [];
     $edit['name'] = $name;
     $edit['mail'] = $this->randomMachineName() . '@' . $this->randomMachineName() . '.com';
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
     $text = (string) new FormattableMarkup('The name <em class="placeholder">@name</em> is reserved, and cannot be used.', ['@name' => $name]);
-    $this->assertRaw((string) $text, 'User "name" restricted.');
+    $this->assertSession()->responseContains((string) $text);
   }
 
 }
diff --git a/tests/src/Functional/UserRestrictionsTestBase.php b/tests/src/Functional/UserRestrictionsTestBase.php
index 33eeba5..2cf55c1 100644
--- a/tests/src/Functional/UserRestrictionsTestBase.php
+++ b/tests/src/Functional/UserRestrictionsTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\user_restrictions\Functional;
 
+use Drupal\Tests\user_restrictions\Functional\Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 abstract class UserRestrictionsTestBase extends BrowserTestBase {
@@ -28,14 +29,14 @@ abstract class UserRestrictionsTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->storage = \Drupal::service('entity_type.manager')
       ->getStorage('user_restrictions');
 
     // Allow registration by site visitors without administrator approval.
-    \Drupal::configFactory()->getEditable('user.settings')->set('register', Drupal\user\UserInterface::REGISTER_VISITORS)->save();
+    \Drupal::configFactory()->getEditable('user.settings')->set('register', UserInterface::REGISTER_VISITORS)->save();
   }
 
 }
