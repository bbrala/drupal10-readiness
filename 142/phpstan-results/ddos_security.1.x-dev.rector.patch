diff --git a/ddos_security.module b/ddos_security.module
index 7bcf3e2..03d2b2a 100644
--- a/ddos_security.module
+++ b/ddos_security.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Link;
 /**
  * @file
  * This module provides a managed DDoS protection service for the website.
@@ -57,7 +58,7 @@ function ddos_security_cron() {
     if (!empty($config->get('enable_mail_log') && $config->get('enable_mail_log') == 1)) {
       $mailManager = \Drupal::service('plugin.manager.mail');
       $route_url = Url::fromRoute('ddos_security.csv_export', [], ['absolute' => TRUE]);
-      $report_link = \Drupal::l(t('Click here to download'), $route_url);
+      $report_link = Link::fromTextAndUrl(t('Click here to download'), $route_url);
       $module = 'ddos_security';
       $key = 'ddos_security';
       $mailId = \Drupal::config('system.site')->get('mail');
diff --git a/src/EventSubscriber/AttackProtection.php b/src/EventSubscriber/AttackProtection.php
index bfa0140..753fad6 100644
--- a/src/EventSubscriber/AttackProtection.php
+++ b/src/EventSubscriber/AttackProtection.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\ddos_security\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Drupal\Core\Database\Driver\mysql\Connection;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Session\SessionManagerInterface;
@@ -102,7 +102,7 @@ class AttackProtection implements EventSubscriberInterface {
   /**
    * Call this method whenever the KernelEvents::TERMINATE event is dispatched.
    */
-  public function ddosSecurity(GetResponseEvent $event) {
+  public function ddosSecurity(RequestEvent $event) {
     $ddosConfig = $this->config->get('ddos_security.settings');
     $current_path = $this->currentPath->getPath();
 
