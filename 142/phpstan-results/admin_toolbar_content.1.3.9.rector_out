modules/contrib/admin_toolbar_content/admin_toolbar_content.api.php
modules/contrib/admin_toolbar_content/admin_toolbar_content.install
modules/contrib/admin_toolbar_content/admin_toolbar_content.module
modules/contrib/admin_toolbar_content/src/AdminToolbarContentHelper.php
modules/contrib/admin_toolbar_content/src/AlternativeContentView.php
modules/contrib/admin_toolbar_content/src/Form/AdminToolbarContentSettingsForm.php
modules/contrib/admin_toolbar_content/src/Plugin/Derivative/CategoriesMenuLinkDerivative.php
modules/contrib/admin_toolbar_content/src/Plugin/Derivative/ContentMenuLinkDerivative.php
modules/contrib/admin_toolbar_content/src/Plugin/Derivative/DrupalMenuLinkDerivative.php
modules/contrib/admin_toolbar_content/src/Plugin/Derivative/MediaMenuLinkDerivative.php
modules/contrib/admin_toolbar_content/src/Plugin/Derivative/WebformsMenuLinkDerivative.php

2 files with changes
====================

1) modules/contrib/admin_toolbar_content/src/Plugin/Derivative/ContentMenuLinkDerivative.php:0

    ---------- begin diff ----------
@@ @@
 <?php
 namespace Drupal\admin_toolbar_content\Plugin\Derivative;

+use Drupal\node\NodeTypeInterface;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
@@ @@
    * @param array $links
    * @param array $base_plugin_definition
    */
-  protected function addContentTypeLink(\Drupal\node\NodeTypeInterface $content_type, $collection, &$links, $base_plugin_definition) {
+  protected function addContentTypeLink(NodeTypeInterface $content_type, $collection, &$links, $base_plugin_definition) {

     $link_name = $collection . '.' . $content_type->id();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/admin_toolbar_content/admin_toolbar_content.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Url;
 use Symfony\Component\Routing\Exception\RouteNotFoundException;
@@ @@
         $variables['link']['#url'] = $url;
       }
       else {
-        $variables['element']['#access'] = \Drupal\Core\Access\AccessResult::forbidden();
-        $variables['link']['#access'] = \Drupal\Core\Access\AccessResult::forbidden();
+        $variables['element']['#access'] = AccessResult::forbidden();
+        $variables['link']['#access'] = AccessResult::forbidden();
       }
     }
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

