modules/contrib/imagefield_tokens/imagefield_tokens.module
modules/contrib/imagefield_tokens/src/Plugin/Field/FieldFormatter/ImageFieldTokensFormatter.php
modules/contrib/imagefield_tokens/src/Plugin/Field/FieldWidget/ImageFieldTokensCropWidget.php
modules/contrib/imagefield_tokens/src/Plugin/Field/FieldWidget/ImageFieldTokensWigdet.php
modules/contrib/imagefield_tokens/tests/src/Functional/ImageFieldTokensFormatterTest.php
modules/contrib/imagefield_tokens/tests/src/Functional/ImageFieldTokensTestingTrait.php
modules/contrib/imagefield_tokens/tests/src/Functional/ImageFieldTokensWidgetTest.php

3 files with changes
====================

1) modules/contrib/imagefield_tokens/tests/src/Functional/ImageFieldTokensWidgetTest.php:68

    ---------- begin diff ----------
@@ @@

     $this->createImageFieldTokensField($field_name, 'article', ['uri_scheme' => 'public'], $field_settings);
     $this->drupalGet('node/add/article');
-    $this->assertNotEqual(0, count($this->xpath('//div[contains(@class, "field--widget-imagefield-tokens")]')), 'Image field widget found on add/node page', 'Browser');
-    $this->assertNotEqual(0, count($this->xpath('//input[contains(@accept, "image/*")]')), 'Image field widget limits accepted files.', 'Browser');
+    $this->assertEqualsWithDelta(0, count($this->xpath('//div[contains(@class, "field--widget-imagefield-tokens")]')), 'Browser', 'Image field widget found on add/node page');
+    $this->assertEqualsWithDelta(0, count($this->xpath('//input[contains(@accept, "image/*")]')), 'Browser', 'Image field widget limits accepted files.');
     $this->assertSession()->pageTextNotContains('Image test on [site:name]');

     // Check for allowed image file extensions - default.
    ----------- end diff -----------

Applied rules:
 * AssertNotEqualRector
 * AssertEqualsParameterToSpecificMethodsTypeRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-8.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/imagefield_tokens/tests/src/Functional/ImageFieldTokensFormatterTest.php:62

    ---------- begin diff ----------
@@ @@
     $this->drupalGet('admin/structure/types/manage/article/display');

     // Test for existence of link to image styles configuration.
-    $this->drupalPostForm(NULL, [], "{$field_name}_settings_edit");
+    $this->submitForm([], "{$field_name}_settings_edit");
     $this->assertSession()->linkByHrefExists(Url::fromRoute('entity.image_style.collection')->toString(), 0, 'Link to image styles configuration is found');

     // Remove 'administer image styles' permission from testing admin user.
@@ @@
     $this->drupalGet('admin/structure/types/manage/article/display');

     // Test for absence of link to image styles configuration.
-    $this->drupalPostForm(NULL, [], "{$field_name}_settings_edit");
+    $this->submitForm([], "{$field_name}_settings_edit");
     $this->assertSession()->linkByHrefNotExists(Url::fromRoute('entity.image_style.collection')->toString(), 'Link to image styles configuration is absent when permissions are insufficient');

     // Restore 'administer image styles' permission to testing admin user.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/imagefield_tokens/src/Plugin/Field/FieldFormatter/ImageFieldTokensFormatter.php:154

    ---------- begin diff ----------
@@ @@
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

