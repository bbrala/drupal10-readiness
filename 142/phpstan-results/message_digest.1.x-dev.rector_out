modules/contrib/message_digest/message_digest.api.php
modules/contrib/message_digest/message_digest_ui/message_digest_ui.install
modules/contrib/message_digest/src/DigestFormatter.php
modules/contrib/message_digest/tests/fixtures/update/message-digest-update-8101.php
modules/contrib/message_digest/message_digest.behat.inc
modules/contrib/message_digest/message_digest_ui/message_digest_ui.module
modules/contrib/message_digest/message_digest.install
modules/contrib/message_digest/tests/fixtures/update/message-digest-update-common.php
modules/contrib/message_digest/src/DigestFormatterInterface.php
modules/contrib/message_digest/src/DigestManager.php
modules/contrib/message_digest/message_digest_ui/message_digest_ui.post_update.php
modules/contrib/message_digest/message_digest.module
modules/contrib/message_digest/message_digest_ui/src/Plugin/Action/DigestInterval.php
modules/contrib/message_digest/message_digest.post_update.php
modules/contrib/message_digest/tests/modules/message_digest_test/message_digest_test.module
modules/contrib/message_digest/tests/src/Behat/MessageDigestContext.php
modules/contrib/message_digest/message_digest_ui/src/Plugin/Derivative/DigestIntervalActionDeriver.php
modules/contrib/message_digest/tests/src/Functional/Form/MessageDigestIntervalFormTest.php
modules/contrib/message_digest/message_digest_ui/tests/src/Kernel/DigestActionsTest.php
modules/contrib/message_digest/src/DigestManagerInterface.php
modules/contrib/message_digest/src/Entity/MessageDigestInterval.php
modules/contrib/message_digest/src/Entity/MessageDigestIntervalInterface.php
modules/contrib/message_digest/src/Exception/InvalidDigestGroupingException.php
modules/contrib/message_digest/src/Form/MessageDigestIntervalDeleteForm.php
modules/contrib/message_digest/message_digest_ui/tests/src/Kernel/MessageDigestUiTest.php
modules/contrib/message_digest/src/Form/MessageDigestIntervalForm.php
modules/contrib/message_digest/src/MessageDigestIntervalListBuilder.php
modules/contrib/message_digest/tests/src/Functional/Update/ConfigEntityUpdateTest.php
modules/contrib/message_digest/src/Plugin/Deriver/DigestDeriver.php
modules/contrib/message_digest/src/Plugin/Notifier/Digest.php
modules/contrib/message_digest/src/Plugin/Notifier/DigestBase.php
modules/contrib/message_digest/tests/src/Functional/Update/DeleteOrphanedMessagesUpdateTest.php
modules/contrib/message_digest/tests/src/Kernel/DigestManagerTest.php
modules/contrib/message_digest/tests/src/Kernel/DigestTestBase.php
modules/contrib/message_digest/tests/src/Kernel/MessageDigestTest.php
modules/contrib/message_digest/src/Plugin/Notifier/DigestInterface.php
modules/contrib/message_digest/src/Plugin/QueueWorker/MessageDigest.php
modules/contrib/message_digest/src/Traits/MessageDigestContextTrait.php
modules/contrib/message_digest/src/Traits/MessageDigestTrait.php
modules/contrib/message_digest/tests/fixtures/update/message-digest-post-update-delete-orphaned-messages.php
modules/contrib/message_digest/tests/src/Kernel/TokenTest.php
modules/contrib/message_digest/tests/src/Unit/Plugin/Notifier/DigestTest.php

5 files with changes
====================

1) modules/contrib/message_digest/message_digest_ui/tests/src/Kernel/MessageDigestUiTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->installConfig([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/message_digest/message_digest_ui/tests/src/Kernel/DigestActionsTest.php:48

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('taxonomy_term');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/message_digest/tests/src/Unit/Plugin/Notifier/DigestTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\message_digest\Unit\Plugin\Notifier;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\Query\Insert;
@@ @@
  */
 class DigestTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Digest configuration.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->connection = $this->prophesize(Connection::class)->reveal();
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/message_digest/tests/src/Kernel/DigestTestBase.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->notifierManager = $this->container->get('plugin.message_notify.notifier.manager');
     $this->notifierSender = $this->container->get('message_notify.sender');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/message_digest/tests/src/Functional/Form/MessageDigestIntervalFormTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Skip UID 1.
@@ @@
       'interval' => '2 weeks',
       'description' => 'Send digests every 2 weeks',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     /** @var \Drupal\message_digest\Entity\MessageDigestIntervalInterface $config */
     $config = MessageDigestInterval::load('bi_weekly');
@@ @@
     $edit = [
       'label' => 'Every 14 days',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->addressEquals($config->toUrl('collection')->setAbsolute(TRUE)->toString());
     $this->assertSession()->responseContains(t('Interval %label has been updated.', ['%label' => 'Every 14 days']));

@@ @@
     $edit = [
       'interval' => '42 bananas',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains(t('The interval %interval is invalid', ['%interval' => $edit['interval']]));

     // Delete the interval.
     $this->drupalGet($config->toUrl('delete-form'));
     $this->assertSession()->responseContains(t('Delete %interval interval? This action cannot be undone.', ['%interval' => 'Every 14 days']));
-    $this->drupalPostForm(NULL, [], t('Delete interval'));
+    $this->submitForm([], t('Delete interval'));
     $this->assertSession()->responseContains(t('The %label message digest interval has been deleted.', ['%label' => 'Every 14 days']));
     $this->assertSession()->addressEquals($config->toUrl('collection')->setAbsolute(TRUE)->toString());
     \Drupal::entityTypeManager()->getStorage('message_digest_interval')->resetCache();
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

