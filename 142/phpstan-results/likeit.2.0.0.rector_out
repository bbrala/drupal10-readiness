modules/contrib/likeit/likeit.install
modules/contrib/likeit/likeit.module
modules/contrib/likeit/src/Plugin/views/relationship/LikeItViewsRelationship.php
modules/contrib/likeit/likeit.views.inc
modules/contrib/likeit/src/Access/LikeItCsrfTokenGenerator.php
modules/contrib/likeit/src/Controller/LikeItController.php
modules/contrib/likeit/src/Entity/LikeIt.php
modules/contrib/likeit/src/Entity/LikeItInterface.php
modules/contrib/likeit/src/Entity/LikeItViewsData.php
modules/contrib/likeit/src/Event/LikeItEvent.php
modules/contrib/likeit/src/Event/LikeItEvents.php
modules/contrib/likeit/src/Form/LikeItSettingsForm.php
modules/contrib/likeit/src/LikeItExtraRender.php
modules/contrib/likeit/src/Plugin/views/field/LikeItTargetEntityTitleViewsField.php
modules/contrib/likeit/src/Plugin/views/field/LikeItTargetEntityViewViewsField.php

4 files with changes
====================

1) modules/contrib/likeit/src/Plugin/views/field/LikeItTargetEntityViewViewsField.php:129

    ---------- begin diff ----------
@@ @@
       $view_mode = $this->options['view_mode'];
       $output = $view_builder->view($target_entity, $view_mode);

-      return render($output);
+      return \Drupal::service('renderer')->render($output);
     }

     return FALSE;
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/likeit/src/Plugin/views/field/LikeItTargetEntityTitleViewsField.php:90

    ---------- begin diff ----------
@@ @@
       ->getStorage($entity_target_type)->load($entity_target_id);
     $link = $target_entity->toLink();

-    return render($link->toRenderable());
+    return \Drupal::service('renderer')->render($link->toRenderable());
   }

 }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/likeit/src/Controller/LikeItController.php:96

    ---------- begin diff ----------
@@ @@
           $event = new LikeItEvent($object);

           // Use the event dispatcher service to notify any event subscribers.
-          $this->eventDispatcher->dispatch(LikeItEvents::LIKE, $event);
+          $this->eventDispatcher->dispatch($event, LikeItEvents::LIKE);
         }
       }
       catch (\LogicException $e) {
@@ @@
           $event = new LikeItEvent($object);

           // Use the event dispatcher service to notify any event subscribers.
-          $this->eventDispatcher->dispatch(LikeItEvents::UNLIKE, $event);
+          $this->eventDispatcher->dispatch($event, LikeItEvents::UNLIKE);
         }
       }
       catch (\LogicException $e) {
@@ @@
     }

     // Update like/unlike link.
-    $replace = new ReplaceCommand($link_id, render($content));
+    $replace = new ReplaceCommand($link_id, \Drupal::service('renderer')->render($content));
     $response->addCommand($replace);

     return $response;
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/likeit/likeit.module:275

    ---------- begin diff ----------
@@ @@
       $title . '</span><span class="likeit-count"> ' . $count . '</span>',
     ];

-    $link['#title'] = render($markup);
+    $link['#title'] = \Drupal::service('renderer')->render($markup);
   }

   return [
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

