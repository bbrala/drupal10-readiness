modules/contrib/automated_crop/automated_crop.module
modules/contrib/automated_crop/src/AbstractAutomatedCrop.php
modules/contrib/automated_crop/src/Annotation/AutomatedCrop.php
modules/contrib/automated_crop/src/AutomatedCropInterface.php
modules/contrib/automated_crop/src/AutomatedCropManager.php
modules/contrib/automated_crop/src/EventSubscriber/AutomatedCrop.php
modules/contrib/automated_crop/src/EventSubscriber/AutomatedCropProvider.php
modules/contrib/automated_crop/src/Plugin/AutomatedCrop/AutomatedCropDefault.php
modules/contrib/automated_crop/src/Plugin/ImageEffect/AutomatedCropEffect.php
modules/contrib/automated_crop/src/Tests/AutomatedCropFunctionalTest.php

1 file with changes
===================

1) modules/contrib/automated_crop/src/Plugin/ImageEffect/AutomatedCropEffect.php:222

    ---------- begin diff ----------
@@ @@
       /** @var \Drupal\crop\Entity\CropType $crop_type */
       $crop_type = $this->typeStorage->load($this->configuration['crop_type']);
       $automatic_crop_event = new AutomaticCrop($image, $crop_type, $this->configuration);
-      $this->eventDispatcher->dispatch(Events::AUTOMATIC_CROP, $automatic_crop_event);
+      $this->eventDispatcher->dispatch($automatic_crop_event, Events::AUTOMATIC_CROP);
       $this->crop = $automatic_crop_event->getCrop();
     }

@@ @@
    */
   public function getAutomaticCropProvidersList() {
     $event = new AutomaticCropProviders();
-    $this->eventDispatcher->dispatch(Events::AUTOMATIC_CROP_PROVIDERS, $event);
+    $this->eventDispatcher->dispatch($event, Events::AUTOMATIC_CROP_PROVIDERS);

     return $event->getProviders();
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

