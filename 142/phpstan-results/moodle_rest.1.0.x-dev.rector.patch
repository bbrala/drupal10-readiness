diff --git a/modules/moodle_rest_migrate/tests/src/Kernel/Plugin/migrate/process/MoodleFileTest.php b/modules/moodle_rest_migrate/tests/src/Kernel/Plugin/migrate/process/MoodleFileTest.php
index f1c7d31..088d32b 100644
--- a/modules/moodle_rest_migrate/tests/src/Kernel/Plugin/migrate/process/MoodleFileTest.php
+++ b/modules/moodle_rest_migrate/tests/src/Kernel/Plugin/migrate/process/MoodleFileTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\moodle_rest_migrate\Kernel\Plugin\migrate\process;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\StreamWrapper\StreamWrapperInterface;
 use Drupal\KernelTests\Core\File\FileTestBase;
 use Drupal\migrate\MigrateExecutableInterface;
@@ -17,6 +18,7 @@ use GuzzleHttp\Psr7\Response;
  */
 class MoodleFileTest extends FileTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/modules/moodle_rest_migrate/tests/src/Kernel/Plugin/migrate/source/MoodleBaseTest.php b/modules/moodle_rest_migrate/tests/src/Kernel/Plugin/migrate/source/MoodleBaseTest.php
index 474c11a..2c8cd89 100644
--- a/modules/moodle_rest_migrate/tests/src/Kernel/Plugin/migrate/source/MoodleBaseTest.php
+++ b/modules/moodle_rest_migrate/tests/src/Kernel/Plugin/migrate/source/MoodleBaseTest.php
@@ -43,9 +43,7 @@ class MoodleBaseTest extends MigrateTestBase {
     $this->installConfig(['node', 'moodle_rest_migrate_test']);
 
     // Mock results from Moodle Server.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->any())
       ->method('requestFunction')
       ->with('core_course_get_courses')
@@ -83,9 +81,7 @@ class MoodleBaseTest extends MigrateTestBase {
     $this->installConfig(['node', 'moodle_rest_migrate_test']);
 
     // Mock results from Moodle Server.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->any())
       ->method('requestFunction')
       ->with('core_course_get_courses_by_field')
diff --git a/modules/moodle_rest_user/src/Event/MoodleUserAssociate.php b/modules/moodle_rest_user/src/Event/MoodleUserAssociate.php
index c1ca62d..05b4414 100644
--- a/modules/moodle_rest_user/src/Event/MoodleUserAssociate.php
+++ b/modules/moodle_rest_user/src/Event/MoodleUserAssociate.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\moodle_rest_user\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * A matching Moodle acount is trying to be found for a user entity.
diff --git a/modules/moodle_rest_user/src/Event/MoodleUserMap.php b/modules/moodle_rest_user/src/Event/MoodleUserMap.php
index 9ba34fa..3970b30 100644
--- a/modules/moodle_rest_user/src/Event/MoodleUserMap.php
+++ b/modules/moodle_rest_user/src/Event/MoodleUserMap.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\moodle_rest_user\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\migrate\Row;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Map fields for push to, pull from, Moodle.
diff --git a/modules/moodle_rest_user/src/UserBatchHelper.php b/modules/moodle_rest_user/src/UserBatchHelper.php
index c419974..2ae5d4d 100644
--- a/modules/moodle_rest_user/src/UserBatchHelper.php
+++ b/modules/moodle_rest_user/src/UserBatchHelper.php
@@ -94,7 +94,7 @@ class UserBatchHelper implements ContainerInjectionInterface {
 
     try {
       $event = new MoodleUserAssociate($account);
-      $this->eventDispatcher->dispatch(MoodleUserAssociate::EVENT_NAME, $event);
+      $this->eventDispatcher->dispatch($event, MoodleUserAssociate::EVENT_NAME);
     }
     catch (ServicesMoodleRestException $e) {
       \watchdog_exception('issup_moodle', $e, '%type: @message "@body" in %function (line %line of %file).', ['@body' => $e->getBody()['exception']]);
diff --git a/modules/moodle_rest_user/src/UserEventHelper.php b/modules/moodle_rest_user/src/UserEventHelper.php
index 45383d3..366a6d4 100644
--- a/modules/moodle_rest_user/src/UserEventHelper.php
+++ b/modules/moodle_rest_user/src/UserEventHelper.php
@@ -251,7 +251,7 @@ class UserEventHelper implements ContainerInjectionInterface {
    */
   public function associateAccount(UserInterface $account): int {
     $event = new MoodleUserAssociate($account);
-    $this->eventDispatcher->dispatch(MoodleUserAssociate::EVENT_NAME, $event);
+    $this->eventDispatcher->dispatch($event, MoodleUserAssociate::EVENT_NAME);
     return $event->moodleId;
   }
 
@@ -267,7 +267,7 @@ class UserEventHelper implements ContainerInjectionInterface {
     $row = new Row($source, array_flip(array_column($mapping, 'drupal')));
     // @todo Map can throw an exception for missing fields?
     $event = new MoodleUserMap($row, $mapping);
-    $this->eventDispatcher->dispatch(MoodleUserMap::PUSH_EVENT, $event);
+    $this->eventDispatcher->dispatch($event, MoodleUserMap::PUSH_EVENT);
     try {
       $result = $this->moodle->createUsers([$event->row->getDestination()]);
       $result = reset($result);
@@ -302,7 +302,7 @@ class UserEventHelper implements ContainerInjectionInterface {
       $mapping = $this->settings->get('pull_fields');
       $row = new Row($moodle_user, array_flip(array_column($mapping, 'moodle')));
       $event = new MoodleUserMap($row, $mapping);
-      $this->eventDispatcher->dispatch(MoodleUserMap::PULL_EVENT, $event);
+      $this->eventDispatcher->dispatch($event, MoodleUserMap::PULL_EVENT);
       foreach ($row->getDestination() as $field_name => $values) {
         $field = $update_account->$field_name;
         if ($field instanceof TypedDataInterface) {
@@ -328,7 +328,7 @@ class UserEventHelper implements ContainerInjectionInterface {
     $row = new Row($source, array_flip(array_column($mapping, 'drupal')));
     // @todo Map can throw an exception for missing fields?
     $event = new MoodleUserMap($row, $mapping);
-    $this->eventDispatcher->dispatch(MoodleUserMap::PUSH_EVENT, $event);
+    $this->eventDispatcher->dispatch($event, MoodleUserMap::PUSH_EVENT);
     try {
       $mapped_fields = $event->row->getDestination();
       $mapped_fields['id'] = $moodle_id;
diff --git a/modules/moodle_rest_user/tests/src/Kernel/UserEventHelperTest.php b/modules/moodle_rest_user/tests/src/Kernel/UserEventHelperTest.php
index d9fd007..6384e6f 100644
--- a/modules/moodle_rest_user/tests/src/Kernel/UserEventHelperTest.php
+++ b/modules/moodle_rest_user/tests/src/Kernel/UserEventHelperTest.php
@@ -69,9 +69,7 @@ class UserEventHelperTest extends KernelTestBase {
     $this->assertEquals($pull, $settings->get('pull_fields'));
 
     // Create user. Default config. No ID found.
-    $event_dispatcher = $this->getMockBuilder(EventDispatcherInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $event_dispatcher = $this->createMock(EventDispatcherInterface::class);
     $event_dispatcher->expects($this->once())
       ->method('dispatch');
     $this->container->set('event_dispatcher', $event_dispatcher);
@@ -91,9 +89,7 @@ class UserEventHelperTest extends KernelTestBase {
     // Would be nice to run this via calling the
     // UserEventHelper::associateAccount method calling the event subscribers
     // however it serializes the required mock which breaks phpunit.
-    $moodle = $this->getMockBuilder(RestFunctions::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $moodle = $this->createMock(RestFunctions::class);
     $moodle->expects($this->once())
       ->method('getUsersByField')
       ->with('email', ['two@example.com'])
@@ -150,9 +146,7 @@ class UserEventHelperTest extends KernelTestBase {
     ]);
     $settings->save();
 
-    $moodle = $this->getMockBuilder(RestFunctions::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $moodle = $this->createMock(RestFunctions::class);
     $moodle->expects($this->once())
       ->method('createUsers')
       ->with([
@@ -197,9 +191,7 @@ class UserEventHelperTest extends KernelTestBase {
     $settings->save();
 
     // Use default REST client from container.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->once())
       ->method('requestFunction')
       ->with('core_user_get_users', [
@@ -221,17 +213,15 @@ class UserEventHelperTest extends KernelTestBase {
     \Drupal::entityTypeManager()->getStorage('user')->resetCache();
     $account = User::load($account->id());
 
-    $this->assertEqual($account->getAccountName(), 'student_one');
-    $this->assertEqual($account->getEmail(), 'one@example.com');
+    $this->assertEquals($account->getAccountName(), 'student_one');
+    $this->assertEquals($account->getEmail(), 'one@example.com');
   }
 
   /**
    * Test push users.
    */
   public function testPushUsers(): void {
-    $moodle = $this->getMockBuilder(RestFunctions::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $moodle = $this->createMock(RestFunctions::class);
     $moodle->expects($this->once())
       ->method('updateUsers')
       ->with([
diff --git a/tests/src/Kernel/FunctionsServiceTest.php b/tests/src/Kernel/FunctionsServiceTest.php
index 45a7621..ba66034 100644
--- a/tests/src/Kernel/FunctionsServiceTest.php
+++ b/tests/src/Kernel/FunctionsServiceTest.php
@@ -29,9 +29,7 @@ class FunctionsServiceTest extends KernelTestBase {
    */
   public function testSiteInfo(array $result): void {
     // Use default REST client from container.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->once())
       ->method('requestFunction')
       ->with('core_webservice_get_site_info')
@@ -49,9 +47,7 @@ class FunctionsServiceTest extends KernelTestBase {
    * Test handling exceptions in siteInfo field methods.
    */
   public function testSiteInfoExceptions(): void {
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->any())
       ->method('requestFunction')
       ->will($this->throwException(new MoodleRestException('', 500)));
@@ -64,9 +60,7 @@ class FunctionsServiceTest extends KernelTestBase {
     $this->assertEquals('', $rest_functions->getSiteInfoSitename());
     $this->assertEquals([], $rest_functions->getSiteInfoFunctions());
 
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->any())
       ->method('requestFunction')
       ->will($this->throwException(new MoodleRestException('', 403, NULL, ['errorcode' => 'accessexception'])));
@@ -84,9 +78,7 @@ class FunctionsServiceTest extends KernelTestBase {
    */
   public function testSwitchRestClient(): void {
     // Use default REST client from container.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->once())
       ->method('requestFunction')
       ->with('core_webservice_get_site_info')
@@ -96,9 +88,7 @@ class FunctionsServiceTest extends KernelTestBase {
     $rest_functions = $this->container->get('moodle_rest.rest_functions');
     $this->assertEquals(['original_result'], $rest_functions->getSiteInfo());
 
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->once())
       ->method('requestFunction')
       ->with('core_webservice_get_site_info')
@@ -116,9 +106,7 @@ class FunctionsServiceTest extends KernelTestBase {
    */
   public function testGetCourses(array $result): void {
     // Use default REST client from container.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->once())
       ->method('requestFunction')
       ->with('core_course_get_courses')
@@ -138,9 +126,7 @@ class FunctionsServiceTest extends KernelTestBase {
    */
   public function testGetCoursesByField(array $result): void {
     // Use default REST client from container.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->once())
       ->method('requestFunction')
       ->with('core_course_get_courses_by_field')
@@ -159,9 +145,7 @@ class FunctionsServiceTest extends KernelTestBase {
 
     // Request a single course id.
     // Then request courses and get an access denied on one.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->any())
       ->method('requestFunction')
       ->withConsecutive(
@@ -190,9 +174,7 @@ class FunctionsServiceTest extends KernelTestBase {
         ],
       );
     $this->container->set('moodle_rest.rest_ws', $rest);
-    $logger = $this->getMockBuilder(LoggerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $logger = $this->createMock(LoggerInterface::class);
     $logger->expects($this->once())
       ->method('warning');
     $this->container->set('logger.channel.moodle_rest', $logger);
@@ -201,9 +183,7 @@ class FunctionsServiceTest extends KernelTestBase {
     $this->assertEquals([['id' => 1]], $rest_functions->getCoursesByField('ids', '1,2'));
 
     // Send incorrect parameters get an exception.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->once())
       ->method('requestFunction')
       ->will(
@@ -250,9 +230,7 @@ class FunctionsServiceTest extends KernelTestBase {
     ];
     $delete_users = [3, 6];
 
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->any())
       ->method('requestFunction')
       ->withConsecutive(
@@ -290,9 +268,7 @@ class FunctionsServiceTest extends KernelTestBase {
    */
   public function testGetUsers(array $result): void {
     // Use default REST client from container.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->once())
       ->method('requestFunction')
       ->with('core_user_get_users', [
@@ -316,9 +292,7 @@ class FunctionsServiceTest extends KernelTestBase {
    */
   public function testGetUsersByField(array $result): void {
     // Use default REST client from container.
-    $rest = $this->getMockBuilder(MoodleRest::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $rest = $this->createMock(MoodleRest::class);
     $rest->expects($this->once())
       ->method('requestFunction')
       ->with('core_user_get_users_by_field', [
diff --git a/tests/src/Kernel/RestServiceTest.php b/tests/src/Kernel/RestServiceTest.php
index 027e32a..3e7f802 100644
--- a/tests/src/Kernel/RestServiceTest.php
+++ b/tests/src/Kernel/RestServiceTest.php
@@ -36,9 +36,7 @@ class RestServiceTest extends KernelTestBase {
    * Check configuration handling in request.
    */
   public function testConfig(): void {
-    $http_client = $this->getMockBuilder(ClientInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $http_client = $this->createMock(ClientInterface::class);
     $http_client->expects($this->once())
       ->method('request')
       ->with(
@@ -66,9 +64,7 @@ class RestServiceTest extends KernelTestBase {
    * Test wsfunction call.
    */
   public function testRequestFunction(): void {
-    $http_client = $this->getMockBuilder(ClientInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $http_client = $this->createMock(ClientInterface::class);
     $http_client->expects($this->exactly(2))
       ->method('request')
       ->withConsecutive([
@@ -115,9 +111,7 @@ class RestServiceTest extends KernelTestBase {
    * Test guzzle exception.
    */
   public function testRequestException(): void {
-    $http_client = $this->getMockBuilder(ClientInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $http_client = $this->createMock(ClientInterface::class);
     $http_client->expects($this->any())
       ->method('request')
       ->will($this->throwException(new TransferException()));
@@ -134,9 +128,7 @@ class RestServiceTest extends KernelTestBase {
    * Test Moodle exceptions.
    */
   public function testMoodleException(): void {
-    $http_client = $this->getMockBuilder(ClientInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $http_client = $this->createMock(ClientInterface::class);
     $http_client->expects($this->exactly(2))
       ->method('request')
       ->willReturnOnConsecutiveCalls(
