modules/contrib/preview_link/preview_link.install
modules/contrib/preview_link/src/Form/PreviewLinkForm.php
modules/contrib/preview_link/tests/modules/preview_link_test/src/StateLogger.php
modules/contrib/preview_link/tests/modules/preview_link_test_time/src/TimeMachine.php
modules/contrib/preview_link/tests/src/Functional/PreviewLinkAccessTest.php
modules/contrib/preview_link/src/Plugin/Derivative/PreviewLinkTasks.php
modules/contrib/preview_link/src/Plugin/EntityReferenceSelection/PreviewLinkSelection.php
modules/contrib/preview_link/src/Plugin/Field/FieldWidget/PreviewLinkEntitiesWidget.php
modules/contrib/preview_link/preview_link.module
modules/contrib/preview_link/src/Plugin/Validation/Constraint/PreviewLinkEntitiesUniqueConstraint.php
modules/contrib/preview_link/src/Plugin/Validation/Constraint/PreviewLinkEntitiesUniqueConstraintValidator.php
modules/contrib/preview_link/src/Access/PreviewEnabledAccessCheck.php
modules/contrib/preview_link/tests/src/Functional/PreviewLinkForwardRevisionTest.php
modules/contrib/preview_link/src/PreviewLinkCacheContext.php
modules/contrib/preview_link/src/PreviewLinkExpiry.php
modules/contrib/preview_link/src/PreviewLinkHooks.php
modules/contrib/preview_link/src/Access/PreviewLinkAccessCheck.php
modules/contrib/preview_link/src/PreviewLinkHost.php
modules/contrib/preview_link/src/Access/PreviewLinkCanonicalRerouteAccessCheck.php
modules/contrib/preview_link/src/PreviewLinkHostInterface.php
modules/contrib/preview_link/src/PreviewLinkStorage.php
modules/contrib/preview_link/src/Access/PreviewLinkSessionExistsAccessCheck.php
modules/contrib/preview_link/src/Controller/PreviewLinkController.php
modules/contrib/preview_link/src/Controller/PreviewLinkSessionTokenController.php
modules/contrib/preview_link/src/PreviewLinkStorageInterface.php
modules/contrib/preview_link/src/PreviewLinkUtility.php
modules/contrib/preview_link/src/Routing/PreviewLinkRouteProvider.php
modules/contrib/preview_link/tests/src/Functional/PreviewLinkNodeTest.php
modules/contrib/preview_link/src/Entity/PreviewLink.php
modules/contrib/preview_link/src/Routing/PreviewLinkRoutes.php
modules/contrib/preview_link/tests/src/Functional/PreviewLinkSessionTokenTest.php
modules/contrib/preview_link/tests/fixtures/update/preview-link-multi-3155009.php
modules/contrib/preview_link/src/Entity/PreviewLinkInterface.php
modules/contrib/preview_link/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php
modules/contrib/preview_link/tests/modules/preview_link_test/preview_link_test.module
modules/contrib/preview_link/src/Exception/PreviewLinkRerouteException.php
modules/contrib/preview_link/tests/src/Functional/PreviewLinkTest.php
modules/contrib/preview_link/tests/src/Functional/Update/PreviewLinkSessionTokenUpdateTest.php
modules/contrib/preview_link/tests/src/Kernel/PreviewLinkAccessTest.php
modules/contrib/preview_link/tests/src/Kernel/PreviewLinkBase.php
modules/contrib/preview_link/tests/src/Kernel/PreviewLinkEntityTest.php
modules/contrib/preview_link/tests/src/Kernel/PreviewLinkExpiryTest.php
modules/contrib/preview_link/tests/src/Kernel/PreviewLinkStorageTest.php

10 files with changes
=====================

1) modules/contrib/preview_link/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\preview_link\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Routing\RedirectDestinationInterface;
 use Drupal\Core\Routing\TrustedRedirectResponse;
@@ @@
 use Drupal\preview_link\Exception\PreviewLinkRerouteException;
 use Psr\Log\LoggerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
    * ExceptionEvent::getThrowable() since these are in Symfony 4.4, and
    * Drupal 8.9 supports Symfony 3.4.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The exception event.
    */
-  public function onException(GetResponseForExceptionEvent $event): void {
-    $exception = $event->getException();
+  public function onException(ExceptionEvent $event): void {
+    $exception = $event->getThrowable();
     if ($exception instanceof PreviewLinkRerouteException) {
       $entity = $exception->getEntity();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameMethodRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/preview_link/tests/src/Kernel/PreviewLinkStorageTest.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['node', 'filter']);
     $this->createContentType(['type' => 'page']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/preview_link/tests/src/Kernel/PreviewLinkExpiryTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['node', 'filter']);
     $this->createContentType(['type' => 'page']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/preview_link/tests/src/Kernel/PreviewLinkBase.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('preview_link');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/preview_link/tests/src/Kernel/PreviewLinkAccessTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['node', 'filter']);
     $this->createContentType(['type' => 'page']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/preview_link/tests/src/Functional/Update/PreviewLinkSessionTokenUpdateTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installModulesFromClassProperty($this->container);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/preview_link/tests/src/Functional/PreviewLinkTest.php:49

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->createContentType(['type' => 'page']);
     $this->admin = $this->createUser([
@@ @@
     $this->drupalGet($link);
     $assert->statusCodeEquals(200);
     $assert->responseContains($this->node->getTitle());
+    $this->drupalGet($url);

     // Submitting form re-generates the link.
-    $this->drupalPostForm($url, [], 'Save and regenerate preview link');
+    $this->submitForm([], 'Save and regenerate preview link');
     $new_link = $this->cssSelect('.preview-link__link')[0]->getText();
     $this->assertNotEquals($link, $new_link);

@@ @@
     $this->assertSession()->pageTextContains('Generate a preview link for the entity.');
     $currentTime = new \DateTime('14 May 2014 20:00:00');
     $timeMachine->setTime($currentTime);
-    $this->drupalPostForm(NULL, [], 'Reset lifetime');
+    $this->submitForm([], 'Reset lifetime');
     $this->assertSession()->pageTextContains('Preview link will now expire at Wed, 05/21/2014 - 20:00.');

     // Reload preview link.
@@ @@
     $edit = [
       'entities[1][target_id]' => 'foo2 (2)',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     $this->assertSession()->pageTextContains('Preview Link saved.');
     $this->assertSession()->fieldValueEquals('entities[0][target_id]', 'foo1 (1)');
@@ @@
       'entities[0][target_id]' => 'foo1 (1)',
       'entities[1][target_id]' => 'foo1 (1)',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('test entity - revisions and publishing status is already referenced by item #1.');
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/preview_link/tests/src/Functional/PreviewLinkSessionTokenTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $timeMachine = \Drupal::service('datetime.time');
     assert($timeMachine instanceof TimeMachine);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/preview_link/tests/src/Functional/PreviewLinkNodeTest.php:55

    ---------- begin diff ----------
@@ @@
     $edit = [
       'entities[1][target_id]' => 'node2 (' . $node2->id() . ')',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     // This would fail if unpublished wasnt referencable:
     $this->assertSession()->pageTextContains('Preview Link saved.');
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/preview_link/tests/src/Functional/PreviewLinkForwardRevisionTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->createEditorialWorkflow();
     $this->createContentType(['type' => 'page']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 10 files have been changed by Rector                                      

