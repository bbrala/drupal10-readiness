modules/contrib/socrata/socrata_catalog_search/src/Plugin/views/sort/SocrataCatalogSort.php
modules/contrib/socrata/socrata.api.php
modules/contrib/socrata/socrata_views/src/Plugin/views/filter/SocrataDate.php
modules/contrib/socrata/socrata.module
modules/contrib/socrata/socrata_catalog_search/src/SocrataCatalogSearchSelectQuery.php
modules/contrib/socrata/socrata_filter/socrata_filter.module
modules/contrib/socrata/socrata_filter/src/Plugin/Filter/FilterSocrata.php
modules/contrib/socrata/socrata_catalog_search/socrata_catalog_search.module
modules/contrib/socrata/socrata_catalog_search/socrata_catalog_search.views.inc
modules/contrib/socrata/socrata_catalog_search/src/Plugin/views/argument/SocrataFullText.php
modules/contrib/socrata/socrata_views/src/Plugin/views/filter/SocrataStringFilter.php
modules/contrib/socrata/socrata_filter/tests/src/Kernel/FilterSocrataTest.php
modules/contrib/socrata/socrata_views/src/Plugin/views/query/Soql.php
modules/contrib/socrata/socrata_catalog_search/src/Plugin/views/field/SocrataList.php
modules/contrib/socrata/socrata_catalog_search/src/Plugin/views/filter/SocrataDomain.php
modules/contrib/socrata/socrata_catalog_search/src/Plugin/views/filter/SocrataFilter.php
modules/contrib/socrata/socrata_catalog_search/src/Plugin/views/filter/SocrataFullText.php
modules/contrib/socrata/socrata_catalog_search/src/Plugin/views/filter/SocrataType.php
modules/contrib/socrata/socrata_views/socrata_views.install
modules/contrib/socrata/socrata_catalog_search/src/Plugin/views/query/SocrataCatalogSearch.php
modules/contrib/socrata/socrata_views/socrata_views.module
modules/contrib/socrata/socrata_views/socrata_views.views.inc
modules/contrib/socrata/socrata_views/src/Plugin/views/argument/SocrataBooleanArgument.php
modules/contrib/socrata/socrata_views/src/Plugin/views/argument/SocrataStringArgument.php
modules/contrib/socrata/socrata_views/src/Plugin/views/display/Export.php
modules/contrib/socrata/socrata_views/src/Plugin/views/display_extender/SocrataDisplayExtender.php
modules/contrib/socrata/socrata_views/src/Plugin/views/field/CalendarDate.php
modules/contrib/socrata/socrata_views/src/Plugin/views/field/Location.php
modules/contrib/socrata/socrata_views/src/Plugin/views/field/SocrataPoint.php
modules/contrib/socrata/socrata_views/src/Plugin/views/field/SocrataUrl.php
modules/contrib/socrata/socrata_views/src/Plugin/views/filter/SocrataBooleanOperator.php
modules/contrib/socrata/socrata_views/src/Plugin/views/style/CSV.php
modules/contrib/socrata/socrata_views/src/Plugin/views/style/ExportStyleBase.php
modules/contrib/socrata/socrata_views/src/Plugin/views/style/JSON.php
modules/contrib/socrata/socrata_views/tests/src/Kernel/SocrataDisplayExtenderTest.php
modules/contrib/socrata/src/Controller/EndpointListBuilder.php
modules/contrib/socrata/src/EndpointInterface.php
modules/contrib/socrata/src/Entity/Endpoint.php
modules/contrib/socrata/src/Form/EndpointDeleteForm.php
modules/contrib/socrata/src/Form/EndpointForm.php
modules/contrib/socrata/src/SocrataSelectQuery.php
modules/contrib/socrata/tests/src/Functional/EndpointFormTest.php
modules/contrib/socrata/tests/src/Functional/SocrataSelectQueryExecutionTest.php
modules/contrib/socrata/tests/src/Kernel/SocrataSelectQueryTest.php
modules/contrib/socrata/tests/src/Unit/EndpointTest.php

7 files with changes
====================

1) modules/contrib/socrata/socrata_filter/tests/src/Kernel/FilterSocrataTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $data = Yaml::parse(file_get_contents(__DIR__ . '/../../../../tests/config/data.yml'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/socrata/socrata_filter/src/Plugin/Filter/FilterSocrata.php:60

    ---------- begin diff ----------
@@ @@
           $render_array['#width'] = $this->getWidth($vars);
           $render_array['#height'] = $this->getHeight($vars);;

-          $retval = render($render_array);
+          $retval = \Drupal::service('renderer')->render($render_array);
         }
         return $retval;
       },
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/socrata/tests/src/Unit/EndpointTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->data = Yaml::parse(file_get_contents(__DIR__ . '/../../config/data.yml'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/socrata/tests/src/Kernel/SocrataSelectQueryTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->data = Yaml::parse(file_get_contents(__DIR__ . '/../../config/data.yml'));
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/socrata/tests/src/Functional/SocrataSelectQueryExecutionTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->data = Yaml::parse(file_get_contents(__DIR__ . '/../../config/data.yml'));
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/socrata/tests/src/Functional/EndpointFormTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->data = Yaml::parse(file_get_contents(__DIR__ . '/../../config/data.yml'));
   }
@@ @@
     $this->drupalGet(Url::fromRoute('entity.endpoint.collection'));

     $edit = [];
-    $this->drupalPostForm(Url::fromRoute('entity.endpoint.add_form'), $edit, t('Save'));
+    $this->drupalGet(Url::fromRoute('entity.endpoint.add_form'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->pageTextContains('Machine-readable name field is required.');
     $this->assertSession()->pageTextContains('Name field is required');
@@ @@
     $edit['label'] = $this->data['endpoints']['valid']['label'];
     $edit['id'] = $this->data['endpoints']['valid']['id'];
     $edit['url'] = str_replace('resource/', '', $this->data['endpoints']['valid']['url']);
-    $this->drupalPostForm(Url::fromRoute('entity.endpoint.add_form'), $edit, t('Save'));
+    $this->drupalGet(Url::fromRoute('entity.endpoint.add_form'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->pageTextContains("does not point to a valid SODA2 resource");

     $edit['url'] = $this->data['endpoints']['valid']['url'];
-    $this->drupalPostForm(Url::fromRoute('entity.endpoint.add_form'), $edit, t('Save'));
+    $this->drupalGet(Url::fromRoute('entity.endpoint.add_form'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->pageTextNotContains('does not point to a valid SODA2 resource');
     $this->assertSession()->pageTextNotContains('did not return a valid response');
     $this->assertSession()->pageTextContains("Saved the {$edit['label']} endpoint");
     $endpoint = Endpoint::load($edit['id']);
     $this->assertNotNull($endpoint);
+    $this->drupalGet(Url::fromRoute('entity.endpoint.add_form'));

-    $this->drupalPostForm(Url::fromRoute('entity.endpoint.add_form'), $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->pageTextContains("The machine-readable name is already in use");

     $this->drupalGet(Url::fromRoute('entity.endpoint.edit_form', ['endpoint' => $edit['id']]));
     $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->elementAttributeContains('css', 'input#edit-id', 'disabled', 'disabled');
+    $this->drupalGet(Url::fromRoute('entity.endpoint.delete_form', ['endpoint' => $edit['id']]));

-    $this->drupalPostForm(Url::fromRoute('entity.endpoint.delete_form', ['endpoint' => $edit['id']]), [], t('Delete'));
+    $this->submitForm([], t('Delete'));
     $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->pageTextContains("{$edit['label']} has been deleted");
     $endpoint = Endpoint::load($edit['id']);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/socrata/socrata_views/tests/src/Kernel/SocrataDisplayExtenderTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['views']);
     $this->moduleHandler = $this->container->get('module_handler');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

