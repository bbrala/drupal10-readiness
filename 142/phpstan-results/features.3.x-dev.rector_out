modules/contrib/features/drush/features.drush8.inc
modules/contrib/features/modules/features_ui/src/Controller/FeaturesUIController.php
modules/contrib/features/src/Controller/FeaturesController.php
modules/contrib/features/src/FeaturesGeneratorInterface.php
modules/contrib/features/src/FeaturesInstallStorage.php
modules/contrib/features/tests/src/Kernel/Entity/FeaturesBundleIntegrationTest.php
modules/contrib/features/src/Entity/FeaturesBundle.php
modules/contrib/features/src/FeaturesManager.php
modules/contrib/features/modules/features_ui/src/Form/AssignmentAlterForm.php
modules/contrib/features/modules/features_ui/src/Form/AssignmentBaseForm.php
modules/contrib/features/src/Exception/DomainException.php
modules/contrib/features/src/Exception/InvalidArgumentException.php
modules/contrib/features/src/FeaturesAssigner.php
modules/contrib/features/modules/features_ui/src/Form/AssignmentConfigureForm.php
modules/contrib/features/tests/src/Kernel/FeaturesAssignTest.php
modules/contrib/features/src/FeaturesAssignerInterface.php
modules/contrib/features/src/FeaturesAssignmentMethodBase.php
modules/contrib/features/src/FeaturesAssignmentMethodInterface.php
modules/contrib/features/src/FeaturesAssignmentMethodManager.php
modules/contrib/features/features.install
modules/contrib/features/src/FeaturesBundleInterface.php
modules/contrib/features/features.module
modules/contrib/features/src/FeaturesConfigDependencyManager.php
modules/contrib/features/modules/features_ui/src/Form/AssignmentCoreForm.php
modules/contrib/features/modules/features_ui/src/Form/AssignmentExcludeForm.php
modules/contrib/features/features.post_update.php
modules/contrib/features/modules/features_ui/features_ui.admin.inc
modules/contrib/features/src/FeaturesConfigInstaller.php
modules/contrib/features/modules/features_ui/features_ui.module
modules/contrib/features/modules/features_ui/src/Form/AssignmentFormBase.php
modules/contrib/features/src/FeaturesExtensionStorages.php
modules/contrib/features/src/FeaturesExtensionStoragesByDirectory.php
modules/contrib/features/src/FeaturesExtensionStoragesByDirectoryInterface.php
modules/contrib/features/src/FeaturesExtensionStoragesInterface.php
modules/contrib/features/src/FeaturesGenerationMethodBase.php
modules/contrib/features/modules/features_ui/src/Form/AssignmentOptionalForm.php
modules/contrib/features/modules/features_ui/src/Form/AssignmentProfileForm.php
modules/contrib/features/src/FeaturesGenerationMethodInterface.php
modules/contrib/features/src/FeaturesGenerationMethodManager.php
modules/contrib/features/src/FeaturesGenerator.php
modules/contrib/features/modules/features_ui/src/Form/AssignmentSiteForm.php
modules/contrib/features/modules/features_ui/src/Form/FeaturesDiffForm.php
modules/contrib/features/tests/src/Kernel/FeaturesAssignerTest.php
modules/contrib/features/modules/features_ui/src/Form/FeaturesEditForm.php
modules/contrib/features/tests/src/Kernel/FeaturesGenerateTest.php
modules/contrib/features/tests/src/Kernel/FeaturesManagerKernelTest.php
modules/contrib/features/tests/src/Unit/ConfigurationItemTest.php
modules/contrib/features/tests/src/Unit/FeaturesBundleTest.php
modules/contrib/features/src/FeaturesManagerInterface.php
modules/contrib/features/tests/src/Unit/FeaturesManagerTest.php
modules/contrib/features/src/Package.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentAlter.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentBaseType.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentCoreType.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentDependency.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentExclude.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentExisting.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentForwardDependency.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentNamespace.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentOptionalType.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentPackages.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentProfile.php
modules/contrib/features/src/Plugin/FeaturesAssignment/FeaturesAssignmentSiteType.php
modules/contrib/features/src/Plugin/FeaturesGeneration/FeaturesGenerationArchive.php
modules/contrib/features/src/Plugin/FeaturesGeneration/FeaturesGenerationWrite.php
modules/contrib/features/modules/features_ui/src/Form/FeaturesExportForm.php
modules/contrib/features/modules/features_ui/tests/src/Functional/FeaturesBundleUiTest.php
modules/contrib/features/tests/src/Unit/PackageTest.php
modules/contrib/features/modules/features_ui/tests/src/Functional/FeaturesCreateUiTest.php
modules/contrib/features/modules/features_ui/tests/src/FunctionalJavascript/FeaturesUiAjaxTest.php
modules/contrib/features/src/Commands/FeaturesCommands.php
modules/contrib/features/src/ConfigurationItem.php

8 files with changes
====================

1) modules/contrib/features/tests/src/Unit/FeaturesManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\features\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Serialization\Yaml;
 use Drupal\config_update\ConfigDiffInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
    *   The name of the install profile.
    */
   const PROFILE_NAME = 'my_profile';
+  use ProphecyTrait;

   /**
    * The feature manager interface.
@@ @@
   /**
    * The entity type manager object.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Entity\EntityTypeManagerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The storage interface object.
    *
-   * @var \Drupal\Core\Config\StorageInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Config\StorageInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $configStorage;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $configFactory;

@@ @@
   /**
    * The config manager.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Config\ConfigManagerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $configManager;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $moduleHandler;

@@ @@
   /**
    * The extension.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $configReverter;

@@ @@
   /**
    * The module extension list mock.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $moduleExtensionList;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $container = new ContainerBuilder();
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/features/tests/src/Unit/FeaturesBundleTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\features\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\features\Entity\FeaturesBundle;
 use Drupal\Tests\UnitTestCase;

@@ @@
  */
 class FeaturesBundleTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Mock an assigner.
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/features/tests/src/Kernel/FeaturesManagerKernelTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig('features');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/features/tests/src/Kernel/FeaturesGenerateTest.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig('features');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/features/tests/src/Kernel/FeaturesAssignerTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // We need system.site in order to run $this->configImporter->import().
     $this->installConfig('system');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/features/tests/src/Kernel/FeaturesAssignTest.php:56

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig('features');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/features/modules/features_ui/tests/src/Functional/FeaturesCreateUiTest.php:44

    ---------- begin diff ----------
@@ @@
     $this->drupalPlaceBlock('local_actions_block');
     $this->drupalGet('admin/config/development/features');
     $this->clickLink('Create new feature');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     $edit = [
       'name' => 'Test feature',
@@ @@
       'system_simple[sources][selected][system.theme]' => TRUE,
       'system_simple[sources][selected][user.settings]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Download Archive');
+    $this->submitForm($edit, 'Download Archive');

-    $this->assertResponse(200);
-    $archive = $this->getRawContent();
+    $this->assertSession()->statusCodeEquals(200);
+    $archive = $this->getSession()->getPage()->getContent();
     $filename = tempnam($this->tempFilesDirectory, 'feature');
     file_put_contents($filename, $archive);

@@ @@
     // Ensure that the features listing renders the right content.
     $this->drupalGet('admin/config/development/features');
     $tds = $this->xpath('//table[contains(@class, "features-listing")]/tbody/tr[td[3] = "' . $feature_name . '"]/td');
-    $this->assertLink('Test feature');
+    $this->assertSession()->linkExists('Test feature');
     $this->assertEquals($feature_name, $tds[2]->getText());
     $description_column = $tds[3]->getText();
     $this->assertTrue(strpos($description_column, 'system.theme') !== FALSE);
     $this->assertTrue(strpos($description_column, 'user.settings') !== FALSE);
-    $this->assertRaw('Test description: <strong>giraffe</strong>');
+    $this->assertSession()->responseContains('Test description: <strong>giraffe</strong>');
     $this->assertEquals('Uninstalled', $tds[5]->getText());
     $this->assertEquals('', $tds[6]->getText());

@@ @@
       'system_simple[included][system.theme]' => FALSE,
       'user_role[sources][selected][authenticated]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Write');
+    $this->submitForm($edit, 'Write');
     $info_filename = $module_path . '/' . $feature_name . '.info.yml';

     $parsed_info = Yaml::decode(file_get_contents($info_filename));
@@ @@
     // Install new feature module.
     $edit = [];
     $edit['modules[' . $feature_name . '][enable]'] = TRUE;
-    $this->drupalPostForm('admin/modules', $edit, 'Install');
+    $this->drupalGet('admin/modules');
+    $this->submitForm($edit, 'Install');

     // Check that the feature is listed as installed.
     $this->drupalGet('admin/config/development/features');
@@ @@

     $tds = $this->xpath('//table[contains(@class, "features-listing")]/tbody/tr[td[3] = "' . $feature_name . '"]/td');
     $this->assertTrue(strpos($tds[6]->getText(), 'Changed') !== FALSE);
+    $this->drupalGet('admin/modules/uninstall');

     // Uninstall the module.
-    $this->drupalPostForm('admin/modules/uninstall', ['uninstall[' . $feature_name . ']' => $feature_name], 'Uninstall');
+    $this->submitForm(['uninstall[' . $feature_name . ']' => $feature_name], 'Uninstall');
     $this->submitForm([], 'Uninstall');

     $this->drupalGet('admin/config/development/features');
@@ @@

     $this->clickLink('Changed');
     $this->drupalGet('admin/config/development/features/diff/' . $feature_name);
-    $this->assertRaw('<td class="diff-context diff-deletedline">anonymous : <span class="diffchange">Giraffe</span></td>');
-    $this->assertRaw('<td class="diff-context diff-addedline">anonymous : <span class="diffchange">Anonymous</span></td>');
+    $this->assertSession()->responseContains('<td class="diff-context diff-deletedline">anonymous : <span class="diffchange">Giraffe</span></td>');
+    $this->assertSession()->responseContains('<td class="diff-context diff-addedline">anonymous : <span class="diffchange">Anonymous</span></td>');

     $edit = [];
     $edit['modules[' . $feature_name . '][enable]'] = TRUE;
-    $this->drupalPostForm('admin/modules', $edit, 'Install');
+    $this->drupalGet('admin/modules');
+    $this->submitForm($edit, 'Install');

     $this->drupalGet('admin/config/development/features');
     $tds = $this->xpath('//table[contains(@class, "features-listing")]/tbody/tr[td[3] = "' . $feature_name . '"]/td');
@@ @@
     $this->assertTrue(strpos($tds[6]->getText(), 'Changed') !== FALSE);

     $this->clickLink('Test feature');
-    $this->drupalPostForm(NULL, [], 'Write');
+    $this->submitForm([], 'Write');

     $this->drupalGet('admin/config/development/features');
     $tds = $this->xpath('//table[contains(@class, "features-listing")]/tbody/tr[td[3] = "' . $feature_name . '"]/td');
    ----------- end diff -----------

Applied rules:
 * AssertLinkRector
 * AssertRawRector
 * AssertResponseRector
 * GetRawContentRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/features/modules/features_ui/tests/src/Functional/FeaturesBundleUiTest.php:90

    ---------- begin diff ----------
@@ @@

     // Check initial form.
     $this->drupalGet('admin/config/development/features/bundle/_exclude/default');
-    $this->assertFieldChecked('edit-types-config-features-bundle', 'features_bundle is checked');
-    $this->assertNoFieldChecked('edit-types-config-system-simple', 'system_simple is not checked');
-    $this->assertNoFieldChecked('edit-types-config-user-role', 'user_role is not checked');
-    $this->assertFieldChecked('edit-curated', 'curated is checked');
-    $this->assertFieldChecked('edit-module-namespace', 'namespace is checked');
+    $this->assertSession()->checkboxChecked('edit-types-config-features-bundle', 'features_bundle is checked');
+    $this->assertSession()->checkboxNotChecked('edit-types-config-system-simple', 'system_simple is not checked');
+    $this->assertSession()->checkboxNotChecked('edit-types-config-user-role', 'user_role is not checked');
+    $this->assertSession()->checkboxChecked('edit-curated', 'curated is checked');
+    $this->assertSession()->checkboxChecked('edit-module-namespace', 'namespace is checked');

     // Configure the form.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'types[config][system_simple]' => TRUE,
       'types[config][user_role]' => FALSE,
       'curated' => TRUE,
@@ @@

     // Check form results.
     $this->drupalGet('admin/config/development/features/bundle/_exclude/default');
-    $this->assertFieldChecked('edit-types-config-features-bundle', 'Saved, features_bundle is checked');
-    $this->assertFieldChecked('edit-types-config-system-simple', 'Saved, system_simple is checked');
-    $this->assertNoFieldChecked('edit-types-config-user-role', 'Saved, user_role is not checked');
-    $this->assertFieldChecked('edit-curated', 'Saved, curated is checked');
-    $this->assertNoFieldChecked('edit-module-namespace', 'Saved, namespace is not checked');
+    $this->assertSession()->checkboxChecked('edit-types-config-features-bundle', 'Saved, features_bundle is checked');
+    $this->assertSession()->checkboxChecked('edit-types-config-system-simple', 'Saved, system_simple is checked');
+    $this->assertSession()->checkboxNotChecked('edit-types-config-user-role', 'Saved, user_role is not checked');
+    $this->assertSession()->checkboxChecked('edit-curated', 'Saved, curated is checked');
+    $this->assertSession()->checkboxNotChecked('edit-module-namespace', 'Saved, namespace is not checked');

     // Check final values.
     $settings = $this->defaultBundle()->getAssignmentSettings('exclude');
@@ @@

     // Can we visit the config page with no settings?
     $this->drupalGet('admin/config/development/features/bundle/_exclude/default');
-    $this->assertNoFieldChecked('edit-types-config-features-bundle', 'features_bundle is not checked');
-    $this->assertNoFieldChecked('edit-types-config-system-simple', 'system_simple is not checked');
-    $this->assertNoFieldChecked('edit-types-config-user-role', 'user_role is not checked');
-    $this->assertNoFieldChecked('edit-curated', 'curated is not checked');
-    $this->assertNoFieldChecked('edit-module-namespace', 'namespace is not checked');
+    $this->assertSession()->checkboxNotChecked('edit-types-config-features-bundle', 'features_bundle is not checked');
+    $this->assertSession()->checkboxNotChecked('edit-types-config-system-simple', 'system_simple is not checked');
+    $this->assertSession()->checkboxNotChecked('edit-types-config-user-role', 'user_role is not checked');
+    $this->assertSession()->checkboxNotChecked('edit-curated', 'curated is not checked');
+    $this->assertSession()->checkboxNotChecked('edit-module-namespace', 'namespace is not checked');

     // Can we enable the method?
     $this->drupalGet('admin/config/development/features/bundle');
-    $this->assertNoFieldChecked('edit-enabled-exclude', 'Exclude disabled');
-    $this->drupalPostForm(NULL, [
+    $this->assertSession()->checkboxNotChecked('edit-enabled-exclude', 'Exclude disabled');
+    $this->submitForm([
       'enabled[exclude]' => TRUE,
     ], 'Save settings');
-    $this->assertFieldChecked('edit-enabled-exclude', 'Exclude enabled');
+    $this->assertSession()->checkboxChecked('edit-enabled-exclude', 'Exclude enabled');

     // Check new settings.
     $settings = $this->defaultBundle()->getAssignmentSettings('exclude');
@@ @@

     // Can we run assignment with no settings?
     $this->drupalGet('admin/config/development/features');
+    $this->drupalGet('admin/config/development/features/bundle/_exclude/default');

     // Can we configure the method?
-    $this->drupalPostForm('admin/config/development/features/bundle/_exclude/default', [
+    $this->submitForm([
       'types[config][system_simple]' => TRUE,
       'types[config][user_role]' => FALSE,
       'curated' => TRUE,
@@ @@

     // Check form results.
     $this->drupalGet('admin/config/development/features/bundle/_exclude/default');
-    $this->assertNoFieldChecked('edit-types-config-features-bundle', 'Saved, features_bundle is not checked');
-    $this->assertFieldChecked('edit-types-config-system-simple', 'Saved, system_simple is checked');
-    $this->assertNoFieldChecked('edit-types-config-user-role', 'Saved, user_role is not checked');
-    $this->assertFieldChecked('edit-curated', 'Saved, curated is checked');
-    $this->assertNoFieldChecked('edit-module-namespace', 'Saved, namespace is not checked');
+    $this->assertSession()->checkboxNotChecked('edit-types-config-features-bundle', 'Saved, features_bundle is not checked');
+    $this->assertSession()->checkboxChecked('edit-types-config-system-simple', 'Saved, system_simple is checked');
+    $this->assertSession()->checkboxNotChecked('edit-types-config-user-role', 'Saved, user_role is not checked');
+    $this->assertSession()->checkboxChecked('edit-curated', 'Saved, curated is checked');
+    $this->assertSession()->checkboxNotChecked('edit-module-namespace', 'Saved, namespace is not checked');

     // Check final values.
     $settings = $this->defaultBundle()->getAssignmentSettings('exclude');
    ----------- end diff -----------

Applied rules:
 * AssertFieldCheckedRector
 * AssertNoFieldCheckedRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

