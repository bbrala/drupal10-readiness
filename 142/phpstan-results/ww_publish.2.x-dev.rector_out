modules/contrib/ww_publish/src/Article.php
modules/contrib/ww_publish/src/Job.php
modules/contrib/ww_publish/tests/src/Kernel/WwPublishImportTest.php
modules/contrib/ww_publish/src/MediaFieldTrait.php
modules/contrib/ww_publish/src/Message.php
modules/contrib/ww_publish/src/Metadata.php
modules/contrib/ww_publish/src/ParagraphField.php
modules/contrib/ww_publish/src/Entity/SnsMessageEntity.php
modules/contrib/ww_publish/src/Entity/SnsMessageEntityInterface.php
modules/contrib/ww_publish/src/Entity/TemplateEntity.php
modules/contrib/ww_publish/src/Entity/TemplateEntityInterface.php
modules/contrib/ww_publish/src/Event/SnsNotificationSubscriber.php
modules/contrib/ww_publish/src/Events/ArticleFieldsEvent.php
modules/contrib/ww_publish/src/Events/ParagraphFieldEvent.php
modules/contrib/ww_publish/src/Events/PreImportEvent.php
modules/contrib/ww_publish/src/SnsMessageListBuilder.php
modules/contrib/ww_publish/src/Field.php
modules/contrib/ww_publish/src/Template.php
modules/contrib/ww_publish/src/FieldTrait.php
modules/contrib/ww_publish/src/TemplateListBuilder.php
modules/contrib/ww_publish/src/Form/SnsMessageDeleteForm.php
modules/contrib/ww_publish/tests/src/Functional/WwPublishMessageFormTest.php
modules/contrib/ww_publish/src/Form/SnsMessageForm.php
modules/contrib/ww_publish/src/Form/TemplateDeleteForm.php
modules/contrib/ww_publish/src/Form/TemplateForm.php
modules/contrib/ww_publish/tests/src/Functional/WwPublishSettingsFormTest.php
modules/contrib/ww_publish/src/Form/WwPublishSettingsForm.php
modules/contrib/ww_publish/tests/src/Kernel/WwPublishTestBase.php
modules/contrib/ww_publish/tests/src/Kernel/WwPublishCronTest.php
modules/contrib/ww_publish/ww_publish.install
modules/contrib/ww_publish/src/Image.php
modules/contrib/ww_publish/tests/src/Kernel/WwPublishEventTest.php
modules/contrib/ww_publish/ww_publish.module

8 files with changes
====================

1) modules/contrib/ww_publish/src/Image.php:128

    ---------- begin diff ----------
@@ @@
     if ($this->config->get('debug_mode'))
       $this->logger->debug('File destination: <pre><code>@destination</code></pre>', ['@destination' => print_r($destination, TRUE)]);

-    $file = file_save_data($file_data, $destination);
+    $file = \Drupal::service('file.repository')->writeData($file_data, $destination);

     if (!empty($image->focuspoint->x) && !empty($image->focuspoint->y) && \Drupal::moduleHandler()->moduleExists('focal_point')) {
       $image_file = \Drupal::service('image.factory')->get($file->getFileUri());
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/ww_publish/src/Events/PreImportEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ww_publish\Events;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\node\NodeInterface;
 use Drupal\ww_publish\Message;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Allows to alter which node is updated or skip the import.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/ww_publish/src/Events/ParagraphFieldEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ww_publish\Events;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\paragraphs\ParagraphInterface;
 use Drupal\ww_publish\Message;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Allows to alter the paragraph that is created for a given content component.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/ww_publish/src/Events/ArticleFieldsEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ww_publish\Events;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\node\NodeInterface;
 use Drupal\ww_publish\Message;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Allows to alter the created node.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/ww_publish/tests/src/Functional/WwPublishSettingsFormTest.php:49

    ---------- begin diff ----------
@@ @@
    *
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create users.
     $this->adminUser = $this->drupalCreateUser(['administer site configuration']);
@@ @@

     // Test the empty form.
     $this->drupalGet('/admin/config/services/ww-publish');
-    $this->assertResponse('200');
+    $this->assertSession()->statusCodeEquals('200');

     $page = $this->getSession()->getPage();
     $page->hasContent('WoodWing Studio');
@@ @@
     $this->drupalLogin($this->guestUser);

     $this->drupalGet('/admin/config/services/ww-publish');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/ww_publish/tests/src/Functional/WwPublishMessageFormTest.php:47

    ---------- begin diff ----------
@@ @@
    *
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->adminUser = $this->drupalCreateUser(['administer site configuration']);
     $node_type = NodeType::create([
@@ @@
     $message->save();
     $message = SnsMessageEntity::load($message->id());
     $this->drupalGet('admin/config/services/ww-publish/sns-messages/' . $message->id());
-    $this->assertNoText("Article's links:");
-    $this->assertNoLink('Edit the article in Drupal');
-    $this->assertNoLink('Display the article');
+    $this->assertSession()->pageTextNotContains("Article's links:");
+    $this->assertSession()->linkNotExists('Edit the article in Drupal');
+    $this->assertSession()->linkNotExists('Display the article');

     // Delete an SNS Message.
     $this->drupalGet('admin/config/services/ww-publish/sns-messages/');
     $this->clickLink('Delete');
     $this->submitForm([], 'Delete');
-    $this->assertResponse(200);
-    $this->assertText('The sns message not_configured_test has been deleted.');
-    $this->assertText('There are no sns message entities yet.');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->pageTextContains('The sns message not_configured_test has been deleted.');
+    $this->assertSession()->pageTextContains('There are no sns message entities yet.');

     // Create a SNS Message with matching Article ID.
     $node_type = NodeType::load('article');
@@ @@
     $message->save();
     $message = SnsMessageEntity::load($message->id());
     $this->drupalGet('admin/config/services/ww-publish/sns-messages/' . $message->id());
-    $this->assertText("Article's links:");
-    $this->assertLink('Edit the article in Drupal');
-    $this->assertLink('Display the article');
+    $this->assertSession()->pageTextContains("Article's links:");
+    $this->assertSession()->linkExists('Edit the article in Drupal');
+    $this->assertSession()->linkExists('Display the article');

     // Create a SNS Message with matching Story ID.
     $node_type = NodeType::load('article');
@@ @@
     $message->save();
     $message = SnsMessageEntity::load($message->id());
     $this->drupalGet('admin/config/services/ww-publish/sns-messages/' . $message->id());
-    $this->assertText("Article's links:");
-    $this->assertLink('Edit the article in Drupal');
-    $this->assertLink('Display the article');
+    $this->assertSession()->pageTextContains("Article's links:");
+    $this->assertSession()->linkExists('Edit the article in Drupal');
+    $this->assertSession()->linkExists('Display the article');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertLinkRector
 * AssertNoLinkRector
 * AssertNoTextRector
 * AssertResponseRector
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/ww_publish/tests/src/Kernel/WwPublishTestBase.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('file');
     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/ww_publish/tests/src/Kernel/WwPublishImportTest.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('crop');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

