modules/contrib/oml/outgoing_mail_logger.install
modules/contrib/oml/src/OmlSwiftmailEventListener.php
modules/contrib/oml/outgoing_mail_logger.module
modules/contrib/oml/src/Breadcrumb/BreadcrumbBuilder.php
modules/contrib/oml/src/Commands/OutgoingMailLoggerCommands.php
modules/contrib/oml/src/OutgoingMailLogger.php
modules/contrib/oml/src/Controller/OutgoingMailLoggerController.php
modules/contrib/oml/src/Event/LogCreatedEvent.php
modules/contrib/oml/src/Event/LogUpdatedEvent.php
modules/contrib/oml/src/Event/MailSentEvent.php
modules/contrib/oml/src/Event/OutgoingMailLoggerEvents.php
modules/contrib/oml/src/EventSubscriber/OutgoingMailLoggerSubscriber.php
modules/contrib/oml/src/Form/FIlterForm.php
modules/contrib/oml/tests/src/Functional/OutgoingMailLoggerTest.php
modules/contrib/oml/src/Form/ResendForm.php
modules/contrib/oml/src/Form/SettingsForm.php
modules/contrib/oml/src/Model/OutgoingMailLog.php

7 files with changes
====================

1) modules/contrib/oml/tests/src/Functional/OutgoingMailLoggerTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 //    $config_map = [
 //      'outgoing_mail_logger.settings' => [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/oml/src/OutgoingMailLogger.php:324

    ---------- begin diff ----------
@@ @@
           ->fields($data)
           ->execute();
         $log->setId($result);
-        $this->event_dispatcher->dispatch(OutgoingMailLoggerEvents::OML_EVENT_LOG_CREATED, new LogCreatedEvent($log));
+        $this->event_dispatcher->dispatch(new LogCreatedEvent($log), OutgoingMailLoggerEvents::OML_EVENT_LOG_CREATED);
       }
       else {
         unset($data['id']);
@@ @@
           ->condition('id', $log->getId())
           ->fields($data)
           ->execute();
-        $this->event_dispatcher->dispatch(OutgoingMailLoggerEvents::OML_EVENT_LOG_UPDATED, new LogUpdatedEvent($log));
+        $this->event_dispatcher->dispatch(new LogUpdatedEvent($log), OutgoingMailLoggerEvents::OML_EVENT_LOG_UPDATED);
       }

     } catch (\Exception $e) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


3) modules/contrib/oml/src/Form/ResendForm.php:7

    ---------- begin diff ----------
@@ @@
 namespace Drupal\outgoing_mail_logger\Form;


+use Drupal\Core\Form\FormBase;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\CloseModalDialogCommand;
 use Drupal\Core\Ajax\MessageCommand;
@@ @@
 use Drupal\Core\Url;
 use Symfony\Component\DependencyInjection\ContainerInterface;

-class ResendForm extends \Drupal\Core\Form\FormBase {
+class ResendForm extends FormBase {

   /** @var OutgoingMailLogger */
   protected $outgoing_mail_logger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/oml/src/Event/MailSentEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\outgoing_mail_logger\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Class MailSentEvent
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/oml/src/Event/LogUpdatedEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\outgoing_mail_logger\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\outgoing_mail_logger\Model\OutgoingMailLog;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Class LogUpdatedEvent
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/oml/src/Event/LogCreatedEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\outgoing_mail_logger\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\outgoing_mail_logger\Model\OutgoingMailLog;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Class LogCreatedEvent
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/oml/outgoing_mail_logger.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\outgoing_mail_logger\OmlSwiftmailEventListener;
 /**
  * @file
  * Primary module hooks for outgoing_mail_logger module.
@@ @@
     drush_cache_set('oml-swiftmailer-tracking', $tracker, 'default', time() + 300);
   }

-  $swiftMailer->getTransport()->registerPlugin(new Drupal\outgoing_mail_logger\OmlSwiftmailEventListener);
+  $swiftMailer->getTransport()->registerPlugin(new OmlSwiftmailEventListener);

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

