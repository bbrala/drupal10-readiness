diff --git a/tests/src/Functional/ViewsDateFormatSqlUninstallTest.php b/tests/src/Functional/ViewsDateFormatSqlUninstallTest.php
index bdf6e92..9a71e3a 100644
--- a/tests/src/Functional/ViewsDateFormatSqlUninstallTest.php
+++ b/tests/src/Functional/ViewsDateFormatSqlUninstallTest.php
@@ -37,7 +37,7 @@ class ViewsDateFormatSqlUninstallTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $privilegedUser = $this->createUser([
diff --git a/tests/src/Kernel/ViewsDateFormatSqlDependenciesTest.php b/tests/src/Kernel/ViewsDateFormatSqlDependenciesTest.php
index 674a0c7..0b62b18 100644
--- a/tests/src/Kernel/ViewsDateFormatSqlDependenciesTest.php
+++ b/tests/src/Kernel/ViewsDateFormatSqlDependenciesTest.php
@@ -30,7 +30,7 @@ class ViewsDateFormatSqlDependenciesTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('user', ['users_data']);
diff --git a/views_date_format_sql.views.inc b/views_date_format_sql.views.inc
index bef7049..ffcee03 100644
--- a/views_date_format_sql.views.inc
+++ b/views_date_format_sql.views.inc
@@ -1,10 +1,10 @@
 <?php
 
+use Drupal\field\Entity\FieldStorageConfig;
 /**
  * @file
  * This file contains the hook to assign this handler as default to date fields.
  */
-
 /**
  * Implements hook_views_data_alter().
  */
@@ -20,13 +20,13 @@ function views_date_format_sql_views_data_alter(&$data) {
     foreach ($table as $id => &$field) {
       // check to see if the field being used here is a field_api timestamp
       if(!empty($field['field']['entity_type']) && !empty($field['field']['field_name'])){
-        $field_storage = \Drupal\field\Entity\FieldStorageConfig::loadByName($field['field']['entity_type'], $field['field']['field_name']);
+        $field_storage = FieldStorageConfig::loadByName($field['field']['entity_type'], $field['field']['field_name']);
         if($field_storage && $field_storage->getType() == 'timestamp') {
           $field['field']['id'] = 'views_date_format_sql_field';
         }
       }
       elseif(!empty($field['argument']['entity_type']) && !empty($field['argument']['field_name'])){
-        $field_storage = \Drupal\field\Entity\FieldStorageConfig::loadByName($field['argument']['entity_type'], $field['argument']['field_name']);
+        $field_storage = FieldStorageConfig::loadByName($field['argument']['entity_type'], $field['argument']['field_name']);
         if($field_storage && $field_storage->getType() == 'timestamp') {
           $field['argument']['id'] = 'views_date_format_sql_argument';
         }
