modules/contrib/entity_reference_uuid/entity_reference_uuid.module
modules/contrib/entity_reference_uuid/entity_reference_uuid.views.inc
modules/contrib/entity_reference_uuid/tests/modules/entity_reference_uuid_test/entity_reference_uuid_test.module
modules/contrib/entity_reference_uuid/tests/src/Kernel/EntityReferenceUuidItemTest.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/NodeReverseRef.php
modules/contrib/entity_reference_uuid/tests/modules/entity_reference_uuid_test/src/Entity/TestEntityOne.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/UuidViewsKernelTestBase.php
modules/contrib/entity_reference_uuid/src/EntityReferenceUuidEntityViewsTrait.php
modules/contrib/entity_reference_uuid/tests/modules/entity_reference_uuid_test/src/Entity/TestEntityTwo.php
modules/contrib/entity_reference_uuid/tests/modules/entity_reference_uuid_test/src/Entity/TestEntityTwoViewsData.php
modules/contrib/entity_reference_uuid/tests/modules/entity_reference_uuid_test/src/Form/TestEntityOneForm.php
modules/contrib/entity_reference_uuid/src/EntityReferenceUuidFieldItemList.php
modules/contrib/entity_reference_uuid/tests/modules/entity_reference_uuid_test/src/Form/TestEntityTwoForm.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/EntityReferenceUuidTestTrait.php
modules/contrib/entity_reference_uuid/tests/modules/entity_reference_uuid_test/src/TestEntityAccessControlHandler.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/EntityForwardDoubleRef.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/EntityForwardNodeRef.php
modules/contrib/entity_reference_uuid/src/EntityReferenceUuidFieldItemListInterface.php
modules/contrib/entity_reference_uuid/src/EntityReferenceUuidServiceProvider.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/EntityForwardRef.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/EntityReverseNodePlusForwardRef.php
modules/contrib/entity_reference_uuid/src/Plugin/Field/FieldFormatter/EntityReferenceUuidEntityFormatter.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/EntityReverseNodeRef.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/NodeChemicalContainerConstituents.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/NodeForwardEntityRef.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/NodeForwardRef.php
modules/contrib/entity_reference_uuid/src/Plugin/Field/FieldFormatter/EntityReferenceUuidFormatterBase.php
modules/contrib/entity_reference_uuid/src/Plugin/Field/FieldType/EntityReferenceUuidItem.php
modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/NodeReverseEntityRef.php
modules/contrib/entity_reference_uuid/src/Plugin/views/filter/TaxonomyIndexUuid.php
modules/contrib/entity_reference_uuid/src/Plugin/views/relationship/EntityReverseUuid.php
modules/contrib/entity_reference_uuid/src/Plugin/views/relationship/EntityStandardUuid.php
modules/contrib/entity_reference_uuid/src/Query/PgsqlQueryFactory.php
modules/contrib/entity_reference_uuid/src/Query/QueryFactory.php
modules/contrib/entity_reference_uuid/src/Query/Tables.php

5 files with changes
====================

1) modules/contrib/entity_reference_uuid/tests/modules/entity_reference_uuid_test/src/Form/TestEntityTwoForm.php:21

    ---------- begin diff ----------
@@ @@

     switch ($status) {
       case SAVED_NEW:
-        drupal_set_message($this->t('Created the %label Test entity two.', [
+        $this->messenger()->addStatus($this->t('Created the %label Test entity two.', [
           '%label' => $entity->label(),
         ]));
         break;

       default:
-        drupal_set_message($this->t('Saved the %label Test entity two.', [
+        $this->messenger()->addStatus($this->t('Saved the %label Test entity two.', [
           '%label' => $entity->label(),
         ]));
     }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_reference_uuid/tests/modules/entity_reference_uuid_test/src/Form/TestEntityOneForm.php:21

    ---------- begin diff ----------
@@ @@

     switch ($status) {
       case SAVED_NEW:
-        drupal_set_message($this->t('Created the %label Test entity one.', [
+        $this->messenger()->addStatus($this->t('Created the %label Test entity one.', [
           '%label' => $entity->label(),
         ]));
         break;

       default:
-        drupal_set_message($this->t('Saved the %label Test entity one.', [
+        $this->messenger()->addStatus($this->t('Saved the %label Test entity one.', [
           '%label' => $entity->label(),
         ]));
     }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_reference_uuid/tests/src/Kernel/Views/UuidViewsKernelTestBase.php:71

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('system', ['sequences', 'key_value_expire']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_reference_uuid/tests/src/Kernel/EntityReferenceUuidItemTest.php:68

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('entity_test_rev');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_reference_uuid/entity_reference_uuid.views.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Field\BaseFieldDefinition;
 /**
  * @file
  * Provide views data for entity_reference_uuid
@@ @@
  *
  * @return void
  */
-function entity_reference_uuid_views_data_helper(&$data, $entity_type, \Drupal\Core\Field\BaseFieldDefinition $base_field_definition) {
+function entity_reference_uuid_views_data_helper(&$data, $entity_type, BaseFieldDefinition $base_field_definition) {
   $entity_type_manager = \Drupal::entityTypeManager();
   // The ID of the entity type the field is attached to.
   $entity_type_id = $entity_type->id();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

