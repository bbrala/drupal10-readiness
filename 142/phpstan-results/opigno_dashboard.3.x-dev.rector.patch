diff --git a/src/EventSubscriber/RedirectOnAccessDeniedSubscriber.php b/src/EventSubscriber/RedirectOnAccessDeniedSubscriber.php
index d0eb753..30a1c81 100644
--- a/src/EventSubscriber/RedirectOnAccessDeniedSubscriber.php
+++ b/src/EventSubscriber/RedirectOnAccessDeniedSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\opigno_dashboard\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Access\AccessResultReasonInterface;
 use Drupal\Core\Cache\CacheableDependencyInterface;
@@ -10,8 +12,6 @@ use Drupal\Core\Session\AccountInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Symfony\Component\HttpKernel\KernelEvents;
 
@@ -49,7 +49,7 @@ class RedirectOnAccessDeniedSubscriber implements EventSubscriberInterface {
   /**
    * @return \Drupal\Core\Session\AccountInterface
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $is_anonymous = $this->user->isAnonymous();
     // Add the route name as an extra class to body.
     $route = (string) \Drupal::routeMatch()->getRouteName();
@@ -77,10 +77,10 @@ class RedirectOnAccessDeniedSubscriber implements EventSubscriberInterface {
   /**
    * Redirect if 403 and node an event.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The route building event.
    */
-  public function redirectOn403(FilterResponseEvent $event) {
+  public function redirectOn403(ResponseEvent $event) {
     $route_name = \Drupal::routeMatch()->getRouteName();
     $status_code = $event->getResponse()->getStatusCode();
     $is_anonymous = $this->user->isAnonymous();
diff --git a/src/Plugin/Block/AboutOpignoBlock.php b/src/Plugin/Block/AboutOpignoBlock.php
index e03755c..54f1b5e 100644
--- a/src/Plugin/Block/AboutOpignoBlock.php
+++ b/src/Plugin/Block/AboutOpignoBlock.php
@@ -81,7 +81,7 @@ class AboutOpignoBlock extends BlockBase implements ContainerFactoryPluginInterf
 
     $logo = theme_get_setting('logo_path_anonymous');
     if (!is_file($logo)) {
-      $logo = drupal_get_path('theme', 'aristotle') . '/assets/' . $logo;
+      $logo = \Drupal::service('extension.list.theme')->getPath('aristotle') . '/assets/' . $logo;
     }
 
     $options = [
@@ -91,7 +91,7 @@ class AboutOpignoBlock extends BlockBase implements ContainerFactoryPluginInterf
 
     return [
       '#theme' => 'opigno_about_block',
-      '#logo' => file_exists($logo) ? file_url_transform_relative(file_create_url($logo)) : '',
+      '#logo' => file_exists($logo) ? \Drupal::service('file_url_generator')->generateString($logo) : '',
       '#texts' => [
         $this->t('Opigno™ is a Trademark of Connect-i Sàrl, based in Préverenges, Switzerland.'),
         $this->t('For more information regarding Opigno™ please consult the website @link.', [
