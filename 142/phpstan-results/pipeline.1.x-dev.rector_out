modules/contrib/pipeline/pipeline.behat.inc
modules/contrib/pipeline/src/PipelineOrchestrator.php
modules/contrib/pipeline/src/Traits/PipelineContextTrait.php
modules/contrib/pipeline/pipeline.module
modules/contrib/pipeline/src/Annotation/PipelinePipeline.php
modules/contrib/pipeline/src/Annotation/PipelineStep.php
modules/contrib/pipeline/src/Controller/PipelineExecutionController.php
modules/contrib/pipeline/tests/src/Behat/PipelineContext.php
modules/contrib/pipeline/tests/src/Unit/PipelineOrchestratorTest.php
modules/contrib/pipeline/src/Event/PipelineErrorEvent.php
modules/contrib/pipeline/src/Event/PipelineSuccessEvent.php
modules/contrib/pipeline/src/Exception/PipelineStepExecutionLogicException.php
modules/contrib/pipeline/src/Exception/PipelineStepLogicExceptionBase.php
modules/contrib/pipeline/src/Exception/PipelineStepPrepareLogicException.php
modules/contrib/pipeline/src/Form/PipelineOrchestratorForm.php
modules/contrib/pipeline/src/Form/PipelineSelectForm.php
modules/contrib/pipeline/src/PipelineOrchestratorInterface.php
modules/contrib/pipeline/src/PipelinePermissions.php
modules/contrib/pipeline/src/PipelineState.php
modules/contrib/pipeline/src/PipelineStateInterface.php
modules/contrib/pipeline/src/PipelineStateManager.php
modules/contrib/pipeline/src/PipelineStateManagerInterface.php
modules/contrib/pipeline/src/Plugin/PipelinePipelineInterface.php
modules/contrib/pipeline/src/Plugin/PipelinePipelinePluginBase.php
modules/contrib/pipeline/src/Plugin/PipelinePipelinePluginManager.php
modules/contrib/pipeline/src/Plugin/PipelineStepInterface.php
modules/contrib/pipeline/src/Plugin/PipelineStepPluginBase.php
modules/contrib/pipeline/src/Plugin/PipelineStepPluginManager.php
modules/contrib/pipeline/src/Plugin/PipelineStepWithBatchInterface.php
modules/contrib/pipeline/src/Plugin/PipelineStepWithBatchTrait.php
modules/contrib/pipeline/src/Plugin/PipelineStepWithClientRedirectResponseTrait.php
modules/contrib/pipeline/src/Plugin/PipelineStepWithFormInterface.php
modules/contrib/pipeline/src/Plugin/PipelineStepWithFormTrait.php
modules/contrib/pipeline/src/Plugin/PipelineStepWithRedirectResponseTrait.php
modules/contrib/pipeline/src/Plugin/PipelineStepWithResponseInterface.php

4 files with changes
====================

1) modules/contrib/pipeline/src/Event/PipelineSuccessEvent.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\pipeline\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\pipeline\Plugin\PipelinePipelineInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * A successful pipeline completion event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/pipeline/src/Event/PipelineErrorEvent.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\pipeline\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\pipeline\Plugin\PipelinePipelineInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * A failed pipeline completion event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/pipeline/tests/src/Unit/PipelineOrchestratorTest.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\pipeline\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Form\FormBuilder;
 use Drupal\Core\Messenger\Messenger;
@@ @@
  */
 class PipelineOrchestratorTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The data pipeline plugin manager.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->pipelinePluginManager = $this->prophesize(PipelinePipelinePluginManager::class);
     $this->stepPluginManager = $this->prophesize(PipelineStepPluginManager::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/pipeline/src/Plugin/PipelinePipelinePluginBase.php:124

    ---------- begin diff ----------
@@ @@
     }

     $event = new PipelineSuccessEvent($this);
-    $this->eventDispatcher->dispatch(PipelineSuccessEvent::class, $event);
+    $this->eventDispatcher->dispatch($event);

     // Reset the state manager.
     $this->stateManager->reset($this->getPluginId());
@@ @@
     }

     $event = new PipelineErrorEvent($this);
-    $this->eventDispatcher->dispatch(PipelineErrorEvent::class, $event);
+    $this->eventDispatcher->dispatch($event);

     // Reset the state manager.
     $this->stateManager->reset($this->getPluginId());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

