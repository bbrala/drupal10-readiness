diff --git a/src/EventSubscriber/TypeViewerSubscriber.php b/src/EventSubscriber/TypeViewerSubscriber.php
index 5d51545..88d95f7 100644
--- a/src/EventSubscriber/TypeViewerSubscriber.php
+++ b/src/EventSubscriber/TypeViewerSubscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\permanent_entities\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Routing\CurrentRouteMatch;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\permanent_entities\Entity\PermanentEntityType;
@@ -40,7 +40,7 @@ class TypeViewerSubscriber implements EventSubscriberInterface {
   /**
    * This method is called when the KernelEvents::REQUEST is dispatched.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The dispatched event.
    */
   public function onRequest(Event $event) {
diff --git a/tests/src/Functional/CrudTest.php b/tests/src/Functional/CrudTest.php
index dc9ee61..3964d66 100644
--- a/tests/src/Functional/CrudTest.php
+++ b/tests/src/Functional/CrudTest.php
@@ -36,7 +36,7 @@ class CrudTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->admin = $this->drupalCreateUser([], 'superadmin', TRUE);
     $this->drupalLogin($this->admin);
@@ -48,7 +48,7 @@ class CrudTest extends BrowserTestBase {
   public function testNoAddOrDelete() {
     $this->drupalGet(Url::fromRoute('entity.permanent_entity.collection'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertRaw('Permanent Entities');
+    $this->assertSession()->responseContains('Permanent Entities');
     $assert_session = $this->assertSession();
     $assert_session->elementNotExists('css', '.button--primary');
     // Nothing for edit or delete yet.
@@ -64,11 +64,11 @@ class CrudTest extends BrowserTestBase {
     // Since full view mode is enabled, this should return code 200.
     $this->drupalGet('/permanent_entity/jupiter');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertRaw('Jupiter');
-    $this->assertRaw('permanent-entity');
-    $this->assertRaw('permanent-entity--view-mode-full');
-    $this->assertRaw('permanent-entity--type-planet');
-    $this->assertRaw('permanent-entity--id-jupiter');
+    $this->assertSession()->responseContains('Jupiter');
+    $this->assertSession()->responseContains('permanent-entity');
+    $this->assertSession()->responseContains('permanent-entity--view-mode-full');
+    $this->assertSession()->responseContains('permanent-entity--type-planet');
+    $this->assertSession()->responseContains('permanent-entity--id-jupiter');
 
     // Now disable the full view mode from the bundle settings.
     $entity_type = PermanentEntityType::load('planet');
@@ -86,7 +86,7 @@ class CrudTest extends BrowserTestBase {
 
     $this->drupalGet(Url::fromRoute('entity.permanent_entity.collection'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertRaw('Jupiter');
+    $this->assertSession()->responseContains('Jupiter');
     $assert_session = $this->assertSession();
     $assert_session->elementNotExists('css', '.button--primary');
     $assert_session->elementNotExists('css', '.dropbutton .delete');
@@ -99,10 +99,10 @@ class CrudTest extends BrowserTestBase {
     );
 
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertRaw('Jupiter');
+    $this->assertSession()->responseContains('Jupiter');
     $save_button = $this->xpath('//input[@value="Save"]');
     $this->assertCount(1, $save_button, 'The Save button exists.');
-    $this->assertNoRaw('delete');
+    $this->assertSession()->responseNotContains('delete');
   }
 
   /**
diff --git a/tests/src/Kernel/CrudTest.php b/tests/src/Kernel/CrudTest.php
index 7321e76..434af1d 100644
--- a/tests/src/Kernel/CrudTest.php
+++ b/tests/src/Kernel/CrudTest.php
@@ -24,7 +24,7 @@ class CrudTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
     $this->installEntitySchema('permanent_entity');
