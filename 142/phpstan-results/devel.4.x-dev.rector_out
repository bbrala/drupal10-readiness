modules/contrib/devel/devel.api.php
modules/contrib/devel/devel.install
modules/contrib/devel/devel_generate/src/Annotation/DevelGenerate.php
modules/contrib/devel/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php
modules/contrib/devel/src/DevelDumperManager.php
modules/contrib/devel/src/Plugin/Devel/Dumper/Kint.php
modules/contrib/devel/tests/src/Functional/DevelRequirementsTest.php
modules/contrib/devel/tests/modules/devel_entity_test/src/Entity/DevelEntityTestNoLinks.php
modules/contrib/devel/webprofiler/src/Access/AccessManagerWrapper.php
modules/contrib/devel/webprofiler/src/DataCollector/AssetsDataCollector.php
modules/contrib/devel/webprofiler/src/DataCollector/TimeDataCollector.php
modules/contrib/devel/webprofiler/src/Form/ConfigForm.php
modules/contrib/devel/webprofiler/src/State/StateWrapper.php
modules/contrib/devel/devel_generate/src/Commands/DevelGenerateCommands.php
modules/contrib/devel/devel.module
modules/contrib/devel/webprofiler/tests/src/Functional/DataCollectorTest.php
modules/contrib/devel/webprofiler/tests/src/Kernel/DecoratorTest.php
modules/contrib/devel/tests/modules/devel_entity_test/src/Plugin/Derivative/DevelEntityTestLocalTasks.php
modules/contrib/devel/src/Plugin/Devel/Dumper/VarDumper.php
modules/contrib/devel/webprofiler/src/Asset/CssCollectionRendererWrapper.php
modules/contrib/devel/webprofiler/src/Asset/JsCollectionRendererWrapper.php
modules/contrib/devel/webprofiler/src/Cache/CacheBackendWrapper.php
modules/contrib/devel/tests/modules/devel_test/devel_test.module
modules/contrib/devel/webprofiler/src/DataCollector/TranslationsDataCollector.php
modules/contrib/devel/devel_generate/src/DevelGenerateBase.php
modules/contrib/devel/src/Plugin/Mail/DevelMailLog.php
modules/contrib/devel/tests/modules/devel_test/src/Controller/DevelTestController.php
modules/contrib/devel/webprofiler/src/DataCollector/UserDataCollector.php
modules/contrib/devel/tests/modules/devel_test/src/Routing/TestRouteSubscriber.php
modules/contrib/devel/tests/src/Functional/DevelBrowserTestBase.php
modules/contrib/devel/webprofiler/src/Cache/CacheFactoryWrapper.php
modules/contrib/devel/webprofiler/src/Stopwatch.php
modules/contrib/devel/webprofiler/src/Form/FormBuilderWrapper.php
modules/contrib/devel/webprofiler/src/Command/BenchmarkCommand.php
modules/contrib/devel/src/DevelDumperManagerInterface.php
modules/contrib/devel/tests/src/Functional/DevelRouteInfoTest.php
modules/contrib/devel/webprofiler/src/DataCollector/BlocksDataCollector.php
modules/contrib/devel/src/DevelDumperPluginManager.php
modules/contrib/devel/webprofiler/src/Form/ProfilesFilterForm.php
modules/contrib/devel/src/Plugin/Menu/DestinationMenuLink.php
modules/contrib/devel/tests/src/Functional/DevelCommandsTest.php
modules/contrib/devel/src/DevelDumperPluginManagerInterface.php
modules/contrib/devel/src/Plugin/Menu/RouteDetailMenuLink.php
modules/contrib/devel/src/Element/ClientSideFilterTable.php
modules/contrib/devel/src/Render/FilteredMarkup.php
modules/contrib/devel/webprofiler/src/DataCollector/ViewsDataCollector.php
modules/contrib/devel/src/Routing/RouteSubscriber.php
modules/contrib/devel/webprofiler/src/Frontend/PerformanceTimingData.php
modules/contrib/devel/webprofiler/tests/src/Unit/DataCollector/AssetsDataCollectorTest.php
modules/contrib/devel/tests/src/Functional/DevelContainerInfoTest.php
modules/contrib/devel/devel_generate/devel_generate.batch.inc
modules/contrib/devel/devel_generate/devel_generate.module
modules/contrib/devel/webprofiler/src/Helper/ClassShortener.php
modules/contrib/devel/webprofiler/src/Helper/ClassShortenerInterface.php
modules/contrib/devel/webprofiler/src/Helper/IdeLinkGenerator.php
modules/contrib/devel/webprofiler/src/Helper/IdeLinkGeneratorInterface.php
modules/contrib/devel/webprofiler/src/Http/HttpClientMiddleware.php
modules/contrib/devel/devel_generate/src/DevelGenerateBaseInterface.php
modules/contrib/devel/devel_generate/src/DevelGenerateException.php
modules/contrib/devel/devel_generate/src/DevelGeneratePermissions.php
modules/contrib/devel/webprofiler/src/StringTranslation/TranslationManagerWrapper.php
modules/contrib/devel/devel_generate/src/DevelGeneratePluginManager.php
modules/contrib/devel/webprofiler/tests/src/FunctionalJavascript/ToolbarTest.phmomodules/contrib/devel/webprofiler/src/Theme/ThemeNegotiatorWrapper.pmodules/contrib/devel/webprofiler/src/Theme/Themmodules/contrib/devel/webprofiler/tests/src/Unit/DataCollector/CacheDataCollectorTest.php
modules/contrib/devel/modules/contrib/devel/devel_generate/devel_genmodules/contrib/devel/webprofiler/src/Twig/Dumper/HtmlDumper.php
modules/contrib/devel/webprofiler/src/DataCollector/CacheDataCollector.php
modules/contrib/devel/tests/src/Functional/DevelStateEditorTest.php
modules/contrib/devel/webprofiler/src/DataCollector/ConfigDataCollector.pmodules/contrib/devel/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php
modules/contrib/devel/webprofiler/src/Decorator.php
modules/contrib/devel/src/ToolbarHandler.php
modules/contrib/devel/webprofiler/src/Views/TraceableViewExecutable.php
modules/contrib/devel/webprofiler/tests/src/Unit/DataCollector/DataCollectorBaseTest.php
modules/contrib/devel/webprofiler/tests/src/FunctionalJavascript/WebprofilerTestBase.php
modules/contrib/devel/webprofiler/src/DependencyInjection/TraceableContainer.php
modules/contrib/devmodules/contrib/devel/webprofiler/webprofiler.install
modules/contrib/devel/tests/src/Functional/DevelControllerTest.phpmmodules/contrib/devel/webprofiler/src/DependencyInjection/TraceableContainer.php
modules/contrib/devel/webprofiler/src/Frontend/PerformanceTimingData.php
modules/contrib/devel/webprofiler/src/Helper/ClassShortener.php
modules/contrib/devel/webprofiler/src/Helper/ClassShortenerInterface.php
modules/contrib/devel/webprofiler/src/Helper/IdeLinkGenerator.php
modules/contrib/devel/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php
modules/contrib/devel/webprofiler/src/DrupalDataCollectorInterface.php
modules/contrib/devel/webprofiler/src/Entity/Decorators/Config/ConfigEntityStorageDecorator.php
modules/contrib/devel/webprofiler/src/Helper/IdeLinkGeneratorInterface.php
modules/contrib/devel/webprofiler/src/Http/HttpClientMiddlewamodules/contrib/devel/src/Form/ConfigDeleteForm.php
modules/contrib/devel/tests/modules/devel_dumper_test/src/Controller/DumperTestController.modules/contrib/devel/tests/modules/devel_dumper_test/src/Controller/DumperTestController.php
modules/contrib/devel/webprofiler/webprofiler.module
modules/contrib/devel/webprofiler/src/Views/ViewExecutableFactoryWrapper.php
modules/contrib/devel/webprofiler/src/Mail/MailManagerWrapper.php
modules/contrib/devel/src/Form/DevelReinstall.php
modules/contrib/devel/tests/modules/devel_dumper_test/src/Plugin/Devel/Dumper/AvailableTestDumper.php
modules/contrib/devel/webprofiler/src/WebprofilerServiceProvider.php
modules/contrib/devel/tests/modules/devel_dumper_test/src/Plugin/Devel/Dumper/NotAvailableTestDumper.php
modules/contrib/devel/webprofiler/src/Profiler/DatabaseProfilerStorage.php
modules/contrib/devel/tests/modules/devel_entity_test/devel_entity_test.module
modules/contrib/devel/webprofiler/src/Entity/Decorators/Config/DomainStorageDecorator.php
modules/contrib/devel/tests/modules/devel_entity_test/src/Entity/DevelEntityTestCanonical.php
modules/contrib/devel/webprofiler/src/Command/BenchmarkData.php
modules/contrib/devel/webprofiler/src/Entity/Decorators/Config/ImageStyleStorageDecorator.php
modules/contrib/devel/webprofiler/src/Command/ExportCommand.php
modules/contrib/devel/src/Form/RouterRebuildConfirmForm.php
modules/contrib/devel/webprofiler/src/Entity/Decorators/Config/RoleStorageDecorator.php
modules/contrib/devel/webprofiler/src/Entity/Decorators/Config/ShortcutSetStorageDecorator.php
modules/contrib/devel/webprofiler/src/DataCollector/DevelDataCollector.php
modules/contrib/devel/tests/modules/devel_entity_test/src/Entity/DevelEntityTestEdit.php
modules/contrib/devel/webprofiler/src/Entity/Decorators/Config/VocabularyStorageDecorator.php
modules/contrib/devel/webprofiler/src/Entity/EntityDecorator.php
modules/contrib/devel/webprofiler/src/Entity/EntityManagerWrmodules/comodules/contrib/devel/src/Form/Settinmodules/conmodules/contrib/devel/tests/src/Functional/DevelSwitchUserTest.php
modules/contrib/devel/tests/src/Functional/DevelDumperTest.php
modules/contrib/devel/webprofiler/src/DataCollector/DrupalDataCollector.php
modules/contrib/devel/webprofiler/src/Profiler/FileProfilerStorage.php
modules/contrib/devel/webprofiler/src/Entity/EntityViewBuilderDecorator.php
modules/contrib/devel/webprofiler/src/Command/ListCommand.php
modules/contrib/devel/webprofiler/src/Profiler/Profiler.php
modules/contrib/devel/devel_generate/tests/src/Traits/DevelGenerateSetupTrait.php
modules/contrib/devel/webprofiler/src/EventDispatcher/EventDispatcherTraceableInterface.php
modules/contrib/devel/webprofiler/src/Profiler/ProfilerStorageFactory.php
modules/contrib/devel/webprofiler/src/EventDispatcher/TraceableEventDispatcher.php
modules/contrib/devel/webprofiler/src/Profiler/ProfilerStorageManager.php
modules/contrib/devel/webprofiler/src/DataCollector/DrupalDataCollectorTrait.php
modules/contrib/devel/webprofiler/src/Compiler/DecoratorPass.php
modules/contrib/devel/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php
modules/contrib/devel/webprofiler/src/Profiler/TemplateManager.php
modules/contrib/devel/webprofiler/src/DataCollector/EventsDataCollector.php
modules/contrib/devel/src/Form/SwitchUserForm.php
modules/contrib/devel/webprofiler/src/Compiler/ProfilerPass.php
modules/contrib/devel/webprofiler/src/DataCollector/ExtensionDataCollector.php
modules/contrib/devel/webprofiler/src/ProxyClass/Command/ListCommand.php
modules/contrib/devel/webprofiler/src/Compiler/ServicePass.php
modules/contrib/devel/tests/src/Functional/DevelElementInfoTest.php
modules/contrib/devel/webprofiler/src/DataCollector/FormsDataCollector.php
modules/contrib/devel/src/Annotation/DevelDumper.php
modules/contrib/devel/src/Commands/DevelCommands.php
modules/contrib/devel/webprofiler/src/DataCollector/HttpDataCollector.php
modules/contrib/devel/webprofiler/src/Compiler/StoragePass.php
modules/contrib/devel/webprofiler/src/Config/ConfigFactoryWrapper.php
modules/contrib/devel/webprofiler/src/RequestMatcher/WebprofilerRequestMatcher.php
modules/contrib/devel/src/Form/SystemStateEdit.php
modules/contrib/devel/webprofiler/src/Controller/DashboardController.php
modules/contrib/devel/webprofiler/src/Routing/TokenConverter.php
modules/contrib/devel/webprofiler/src/EventSubscriber/ProfilerSubscriber.php
modules/contrib/devel/devel_generate/srmodules/contrib/devel/src/Form/ToolbarSettingsForm.php
modules/contrib/devel/webprofiler/src/Controller/ToolbarController.php
modules/contrib/devel/webprofiler/src/DataCollector/MailDataCollector.php
modules/contrib/devel/src/Form/ToolbarSettingsForm.php
modules/contrib/devel/webprofiler/src/DataCollector/PerformanceTimingDataCollectomodules/contrib/devel/tests/src/Functional/DevelToolbarTest.php
modules/contrib/devel/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php
modules/contrib/devel/webprofiler/src/DataCollector/MailDataCollector.php
modules/contrib/devel/webprofiler/src/DataCollector/PerformanceTimingDataCollector.php
modules/contrib/devel/src/Annotation/DevelDumper.php
modules/contrib/devel/webprofiler/src/DataCollector/PhpConfigDataCollector.php
modules/contrib/devel/tests/src/Functional/DevelEventInfoTest.php
modules/contrib/devel/src/Commands/DevelCommands.php
modules/contrib/develmodules/contrib/devel/webprofiler/src/Controller/ToolbarController.php
modules/contrib/devel/tests/src/Functional/DevelErrorHandlerTest.php
modules/contrib/devel/devel_generate/src/Plugin/DevelGenerate/Memodules/contrib/devemodules/contrib/devel/webprofiler/src/DataCollector/RoutingDataCollector.php
modules/contrib/devel/src/Controller/DevelComodules/contrmodules/contrib/devel/tests/src/Functional/DevelWebAssertHelper.php
modules/contrib/devel/tests/src/Kernel/DevelDumperTestTrait.php
modules/contrib/devel/webprofiler/src/DataCollector/StateDataCollector.php
modules/contrib/devel/webprofiler/src/DataCollector/ThemeDataCollector.php
modules/contrib/devel/tests/src/Functional/DevelWebAssertHelper.php
modules/contrib/devel/tests/src/Kernel/DevelDumperTestTrait.php
modules/contrib/devel/tests/src/Functional/DevelMenuLinksTest.php
modules/contrib/devel/tests/src/Kernel/DevelEnforcedDependenciesTest.php
modulesmodules/contrib/devel/tests/src/Kernel/DevelMailLogTest.php
modules/contrib/devel/src/Controller/ElementInfoController.php
modules/contrib/devel/src/Controller/EntityDebugController.php
modules/contrib/devel/tests/src/Functional/DevelEventInfoTest.php
modules/contrib/devel/tmodules/contrib/devel/src/Controller/DevelController.php
modules/contrib/devel/tests/src/Kernel/DevelQueryDebugTest.php
modules/contrib/devel/src/Controller/ElementInfoController.php
modules/contrib/devel/tests/src/Kernel/DevelTwigExtensionTest.php
modules/contrib/devel/devel_generate/src/Plugin/DevelGenerate/TermDevelGenerate.php
modules/contrib/devel/src/Controller/EntityDebugController.php
modules/contrib/devel/src/Controller/EntityTypeInfoController.php
modules/contrib/devel/src/Controller/EventInfoController.php
modules/contrib/devel/tests/src/Unit/DevelClientSideFilterTableTest.php
modules/contrib/devel/src/Controller/LayoutInfoController.php
modules/contrib/devel/src/Controller/RouteInfoController.php
modules/contrib/devel/src/Controller/SwitchUserController.php
modules/contrib/devel/src/DevelDumperBase.php
modules/contrib/devel/devel_generate/src/Plugin/DevelGenerate/UserDevelGenerate.php
modules/contrib/devel/src/DevelDumperInterface.php
modules/contrib/devel/devel_generate/src/Plugin/DevelGenerate/VocabularyDevelGenerate.php
modules/contrib/devel/devel_generate/src/Routing/DevelGenerateRoutes.php
modules/contrib/devel/devel_generate/tests/modules/devel_generate_example/src/Plugin/DevelGenerate/ExampleDevelGenerate.php

42 files with changes
=====================

1) modules/contrib/devel/webprofiler/tests/src/FunctionalJavascript/ToolbarTest.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     \Drupal::configFactory()->getEditable('system.site')->set('page.front', '/node')->save(TRUE);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/devel/webprofiler/tests/src/Functional/DataCollectorTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $entity_type_manager = $this->container->get('entity_type.manager');
     $this->blocksDataCollector = new BlocksDataCollector($entity_type_manager);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/devel/webprofiler/tests/src/Unit/DataCollector/DataCollectorBaseTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->request = $this->createMock('Symfony\Component\HttpFoundation\Request');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/devel/webprofiler/tests/src/Unit/DataCollector/CacheDataCollectorTest.php:17

    ---------- begin diff ----------
@@ @@
   private $cacheDataCollector;

   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   private $cacheBackendInterface;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->cacheDataCollector = new CacheDataCollector();
     $this->cacheBackendInterface = $this->createMock('Drupal\Core\Cache\CacheBackendInterface');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/devel/webprofiler/tests/src/Unit/DataCollector/AssetsDataCollectorTest.php:17

    ---------- begin diff ----------
@@ @@
   private $assetDataCollector;

   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   private $assetCollectionRendererInterface;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->assetDataCollector = new AssetsDataCollector(AssetsDataCollectorTest::ROOT);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/devel/webprofiler/src/ProxyClass/Command/ListCommand.php:8

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webprofiler\ProxyClass\Command {

+  use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+  use Symfony\Component\DependencyInjection\ContainerInterface;
+  use Symfony\Component\Console\Application;
+  use Symfony\Component\Console\Helper\HelperSet;
+  use Symfony\Component\Console\Input\InputInterface;
+  use Symfony\Component\Console\Output\OutputInterface;
   /**
    * Provides a proxy class for \Drupal\webprofiler\Command\ListCommand.
    *
@@ @@
    */
   class ListCommand {

-    use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use DependencySerializationTrait;

     /**
      * The id of the original proxied service.
@@ @@
      * @param string $drupal_proxy_original_service_id
      *   The service ID of the original service.
      */
-    public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id) {
+    public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id) {
       $this->container = $container;
       $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
     }
@@ @@
     /**
      * {@inheritdoc}
      */
-    public function setApplication(\Symfony\Component\Console\Application $application = NULL) {
+    public function setApplication(Application $application = NULL) {
       return $this->lazyLoadItself()->setApplication($application);
     }

@@ @@
     /**
      * {@inheritdoc}
      */
-    public function setHelperSet(\Symfony\Component\Console\Helper\HelperSet $helperSet) {
+    public function setHelperSet(HelperSet $helperSet) {
       return $this->lazyLoadItself()->setHelperSet($helperSet);
     }

@@ @@
     /**
      * {@inheritdoc}
      */
-    public function run(\Symfony\Component\Console\Input\InputInterface $input, \Symfony\Component\Console\Output\OutputInterface $output) {
+    public function run(InputInterface $input, OutputInterface $output) {
       return $this->lazyLoadItself()->run($input, $output);
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


7) modules/contrib/devel/webprofiler/src/Http/HttpClientMiddleware.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webprofiler\Http;

+use function GuzzleHttp\Promise\rejection_for;
 use GuzzleHttp\Exception\RequestException;
 use GuzzleHttp\TransferStats;
 use Psr\Http\Message\RequestInterface;
@@ @@
               'message' => $reason->getMessage(),
             ];

-            return \GuzzleHttp\Promise\rejection_for($reason);
+            return rejection_for($reason);
           }
         );
       };
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


8) modules/contrib/devel/webprofiler/src/Command/ListCommand.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $ip = $input->getOption('ip');
     $url = $input->getOption('url');
     $method = $input->getOption('method');
@@ @@
       ])
       ->setRows($rows);
     $table->render();
+    return 0;
   }

   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/devel/webprofiler/src/Command/ExportCommand.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $id = $input->getArgument('id');
     $directory = $input->getOption('directory');

@@ @@
     catch (\Exception $e) {
       $output->writeln('<error>' . $e->getMessage() . '</error>');
     }
+    return 0;
   }

   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/devel/webprofiler/src/Command/BenchmarkCommand.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $runs = $input->getOption('runs');
     $file = $input->getOption('file');
     $cache_rebuild = $input->getOption('cache-rebuild');
@@ @@
     else {
       $output->writeln($yaml);
     }
+    return 0;

   }

@@ @@
    */
   private function getGitHash() {
     try {
-      $process = new Process('git rev-parse HEAD');
+      $process = new Process(['git', 'rev-parse', 'HEAD']);
       $process->setTimeout(3600);
       $process->run();
       $git_hash = $process->getOutput();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ConsoleExecuteReturnIntRector
 * StringToArrayArgumentProcessRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/devel/webprofiler/src/EventSubscriber/WebprofilerEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webprofiler\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Routing\UrlGeneratorInterface;
 use Drupal\Core\Session\AccountInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   }

   /**
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     $request = $event->getRequest();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


12) modules/contrib/devel/webprofiler/src/EventSubscriber/ProfilerSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webprofiler\EventSubscriber;

-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\HttpKernel\Event\FinishRequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpKernel\Profiler\Profiler;
@@ @@
   /**
    * Handles the onKernelException event.
    */
-  public function onKernelException(GetResponseForExceptionEvent $event) {
+  public function onKernelException(ExceptionEvent $event) {
     if ($this->onlyMasterRequests && !$event->isMasterRequest()) {
       return;
     }

-    $this->exception = $event->getException();
+    $this->exception = $event->getThrowable();
   }

   /**
    * Handles the onKernelResponse event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $master = $event->isMasterRequest();
     if ($this->onlyMasterRequests && !$master) {
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameMethodRector
 * RenameClassRector
 * WrapReturnRector


13) modules/contrib/devel/webprofiler/src/EventDispatcher/TraceableEventDispatcher.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webprofiler\EventDispatcher;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher;
 use Drupal\webprofiler\Stopwatch;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
    *
    * @param string $eventName
    *   The event name.
-   * @param \Symfony\Component\EventDispatcher\Event|\Drupal\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event|\Drupal\Component\EventDispatcher\Event $event
    *   The event.
    */
   protected function preDispatch($eventName, $event) {
@@ @@
    *
    * @param string $eventName
    *   The event name.
-   * @param \Symfony\Component\EventDispatcher\Event|\Drupal\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event|\Drupal\Component\EventDispatcher\Event $event
    *   The event.
    */
   protected function postDispatch($eventName, $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/devel/src/EventSubscriber/ThemeInfoRebuildSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\devel\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
 use Drupal\Core\Messenger\MessengerTrait;
@@ @@
 use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Forces the system to rebuild the theme registry.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function rebuildThemeInfo(GetResponseEvent $event) {
+  public function rebuildThemeInfo(RequestEvent $event) {
     if ($this->config->get('rebuild_theme')) {
       // Update the theme registry.
       drupal_theme_rebuild();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


15) modules/contrib/devel/src/EventSubscriber/ErrorHandlerSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\devel\EventSubscriber;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Session\AccountProxyInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;

@@ @@
   /**
    * Register devel error handler.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The event to process.
    */
   public function registerErrorHandler(Event $event = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


16) modules/contrib/devel/webprofiler/src/DataCollector/DrupalDataCollector.php:49

    ---------- begin diff ----------
@@ @@
     $this->data['config_url'] = (new Url('webprofiler.settings', [], ['query' => $this->redirectDestination->getAsArray()]))->toString();

     try {
-      $process = new Process("git log -1 --pretty=format:'%H - %s (%ci)' --abbrev-commit");
+      $process = new Process(['git', 'log', '-1', '--pretty=format:%H - %s (%ci)', '--abbrev-commit']);
       $process->setTimeout(3600);
       $process->mustRun();
       $this->data['git_commit'] = $process->getOutput();

-      $process = new Process("git log -1 --pretty=format:'%h' --abbrev-commit");
+      $process = new Process(['git', 'log', '-1', '--pretty=format:%h', '--abbrev-commit']);
       $process->setTimeout(3600);
       $process->mustRun();
       $this->data['abbr_git_commit'] = $process->getOutput();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * StringToArrayArgumentProcessRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


17) modules/contrib/devel/tests/src/Functional/DevelModulesReinstallTest.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Set up test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->adminUser);
   }
@@ @@
     foreach ($modules as $module) {
       $edit["reinstall[$module]"] = TRUE;
     }
+    $this->drupalGet('devel/reinstall');

-    $this->drupalPostForm('devel/reinstall', $edit, 'Reinstall');
+    $this->submitForm($edit, 'Reinstall');
     $this->assertSession()->pageTextContains('Uninstalled and installed: ' . implode(', ', $modules) . '.');

   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/devel/tests/src/Functional/DevelMenuLinksTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Devel links currently appears only in the devel menu.
     // Place the devel menu block so we can ensure that these link works
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/devel/tests/src/Functional/DevelLayoutInfoTest.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('page_title_block');
     $this->drupalLogin($this->develUser);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/devel/tests/src/Functional/DevelEventInfoTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('page_title_block');
     $this->drupalLogin($this->develUser);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/devel/tests/src/Functional/DevelErrorHandlerTest.php:34

    ---------- begin diff ----------
@@ @@
     $edit = [
       'error_handlers[]' => DEVEL_ERROR_HANDLER_NONE,
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');

     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
@@ @@
     $edit = [
       'error_handlers[]' => DEVEL_ERROR_HANDLER_BACKTRACE_KINT,
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');

     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
@@ @@
     $edit = [
       'error_handlers[]' => DEVEL_ERROR_HANDLER_BACKTRACE_DPM,
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');

     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
@@ @@
         DEVEL_ERROR_HANDLER_BACKTRACE_DPM => DEVEL_ERROR_HANDLER_BACKTRACE_DPM,
       ],
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');

     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


22) modules/contrib/devel/tests/src/Functional/DevelEntityTypeInfoTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_menu_block:devel');
     $this->drupalPlaceBlock('page_title_block');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/devel/tests/src/Functional/DevelElementInfoTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_menu_block:devel');
     $this->drupalPlaceBlock('page_title_block');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/devel/tests/src/Functional/DevelDumperTest.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->adminUser);
   }
@@ @@
     $edit = [
       'dumper' => 'var_dumper',
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
     $this->assertSession()->checkboxChecked('Symfony var-dumper');

@@ @@
     $edit = [
       'dumper' => 'available_test_dumper',
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');

     $this->drupalGet('devel_dumper_test/dump');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/devel/tests/src/Functional/DevelControllerTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $entity_type_manager = $this->container->get('entity_type.manager');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/devel/tests/src/Functional/DevelContainerInfoTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_tasks_block');
     $this->drupalPlaceBlock('page_title_block');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/devel/tests/src/Functional/DevelBrowserTestBase.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/devel/tests/src/Kernel/DevelTwigExtensionTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


29) modules/contrib/devel/tests/src/Kernel/DevelQueryDebugTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('system', 'sequences');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


30) modules/contrib/devel/tests/src/Kernel/DevelMailLogTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(['system', 'devel']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


31) modules/contrib/devel/tests/src/Kernel/DevelEnforcedDependenciesTest.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


32) modules/contrib/devel/tests/src/Functional/DevelToolbarTest.php:47

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->drupalPlaceBlock('local_tasks_block');
@@ @@
       'toolbar_items[devel.event_info]' => 'devel.event_info',
       'toolbar_items[devel.theme_registry]' => 'devel.theme_registry',
     ];
-    $this->drupalPostForm('admin/config/development/devel/toolbar', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel/toolbar');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');

     $expected_items = array_merge($this->defaultToolbarItems, ['devel.event_info', 'devel.theme_registry']);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


33) modules/contrib/devel/tests/src/Functional/DevelSwitchUserTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * Set up test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->block = $this->drupalPlaceBlock('devel_switch_user', ['id' => 'switch-user', 'label' => 'Switch Hit']);
@@ @@

     // Use the search form to switch to another account.
     $edit = ['userid' => $this->switchUser->getDisplayName()];
-    $this->drupalPostForm(NULL, $edit, 'Switch');
+    $this->submitForm($edit, 'Switch');
     $this->assertSessionByUid($this->switchUser->id());
     $this->assertNoSessionByUid($this->develUser->id());
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


34) modules/contrib/devel/tests/src/Functional/DevelStateEditorTest.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->state = $this->container->get('state');
     $this->drupalPlaceBlock('page_title_block');
@@ @@
     $this->assertFalse($button->hasAttribute('disabled'));

     $edit = ['new_value' => 1];
-    $this->drupalPostForm('devel/state/edit/devel.simple', $edit, 'Save');
+    $this->drupalGet('devel/state/edit/devel.simple');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(strtr('Variable @name was successfully edited.', ['@name' => 'devel.simple']));
     $this->assertEquals(1, $this->state->get('devel.simple'));

@@ @@

     // Try to save an invalid yaml input.
     $edit = ['new_value' => 'devel: \'value updated'];
-    $this->drupalPostForm('devel/state/edit/devel.array', $edit, 'Save');
+    $this->drupalGet('devel/state/edit/devel.array');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('Invalid input:');

     $edit = ['new_value' => 'devel: \'value updated\''];
-    $this->drupalPostForm('devel/state/edit/devel.array', $edit, 'Save');
+    $this->drupalGet('devel/state/edit/devel.array');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(strtr('Variable @name was successfully edited.', ['@name' => 'devel.array']));
     $this->assertEquals(['devel' => 'value updated'], $this->state->get('devel.array'));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


35) modules/contrib/devel/tests/src/Functional/DevelRouterRebuildTest.php:25

    ---------- begin diff ----------
@@ @@
     $this->assertSession()->pageTextContains('Are you sure you want to rebuild the router?');
     $route_rebuild_state = \Drupal::state()->get('devel_test_route_rebuild');
     $this->assertEmpty($route_rebuild_state);
+    $this->drupalGet('devel/menu/reset');

-    $this->drupalPostForm('devel/menu/reset', [], 'Rebuild');
+    $this->submitForm([], 'Rebuild');
     $this->assertSession()->pageTextContains('The router has been rebuilt.');
     $route_rebuild_state = \Drupal::state()->get('devel_test_route_rebuild');
     $this->assertEquals('Router rebuild fired', $route_rebuild_state);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


36) modules/contrib/devel/tests/src/Functional/DevelRouteInfoTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_menu_block:devel');
     $this->drupalPlaceBlock('page_title_block');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


37) modules/contrib/devel/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The plugin discovery.
    *
-   * @var \Drupal\Component\Plugin\Discovery\DiscoveryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Component\Plugin\Discovery\DiscoveryInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $discovery;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Mock a Discovery object to replace AnnotationClassDiscovery.
     $this->discovery = $this->createMock('Drupal\Component\Plugin\Discovery\DiscoveryInterface');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


38) modules/contrib/devel/devel_generate/tests/src/Functional/DevelGenerateCommandsTest.php:52

    ---------- begin diff ----------
@@ @@
   /**
    * Prepares the testing environment.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->setUpData();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


39) modules/contrib/devel/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * Prepares the testing environment.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->setUpData();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


40) modules/contrib/devel/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php:21

    ---------- begin diff ----------
@@ @@
     $edit = [
       'num' => 4,
     ];
-    $this->drupalPostForm('admin/config/development/generate/user', $edit, 'Generate');
-    $this->assertText('4 users created.');
-    $this->assertText('Generate process complete.');
+    $this->drupalGet('admin/config/development/generate/user');
+    $this->submitForm($edit, 'Generate');
+    $this->assertSession()->pageTextContains('4 users created.');
+    $this->assertSession()->pageTextContains('Generate process complete.');

   }

@@ @@
       'num' => 4,
       'title_length' => 4,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
-    $this->assertText('Please select at least one content type');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
+    $this->assertSession()->pageTextContains('Please select at least one content type');

     // Create a node in order to test the Delete content checkbox.
     $this->drupalCreateNode(['type' => 'article']);
@@ @@
       'title_length' => 4,
       'add_alias' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 1 node');
     $this->assertSession()->pageTextContains('Created 4 nodes');
     $this->assertSession()->pageTextContains('Generate process complete.');
@@ @@

     // Tests that nodes have been created in the generation process.
     $nodes = Node::loadMultiple();
-    $this->assert(count($nodes) == 4, 'Nodes generated successfully.');
+    $this->assertTrue(count($nodes) == 4, 'Nodes generated successfully.');

     // Tests url alias for the generated nodes.
     foreach ($nodes as $node) {
@@ @@
       'translate_language[]' => ['de', 'ca'],
       'add_alias' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 4 nodes');
     $this->assertSession()->pageTextContains('Created 3 nodes');
     // Two translations for each node makes six.
@@ @@
       'add_language[]' => ['en'],
       'translate_language[]' => ['fr'],
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextNotContains('Deleted');
     $this->assertSession()->pageTextContains('Created 2 nodes');
     $this->assertSession()->pageTextNotContains('node translations');
@@ @@
       'node_types[article]' => TRUE,
       'add_type_label' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 5 nodes');
     $this->assertSession()->pageTextContains('Generate process complete');

@@ @@
       'authors[3]' => TRUE,
       'authors[4]' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');

     // Display the full content list for information and debug only.
     $this->drupalGet('admin/content');
@@ @@
       'num' => 5,
       'title_length' => 12,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 5 new terms');
     $this->assertSession()->pageTextContains('In vocabulary ' . $this->vocabulary->label());
     $this->assertSession()->pageTextNotContains('translations');
@@ @@
       'add_language[]' => ['en'],
       'translate_language[]' => ['ca'],
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextNotContains('Deleted');
     $this->assertSession()->pageTextContains('Created 3 new terms');
     $this->assertSession()->pageTextContains('Created 3 term translations');
@@ @@
       'vids[]' => $this->vocabulary2->id(),
       'num' => 4,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 4 new terms');
     $this->assertSession()->pageTextNotContains('In vocabulary ' . $this->vocabulary->label());
     $this->assertSession()->pageTextContains('In vocabulary ' . $this->vocabulary2->label());
@@ @@
       'num' => 6,
       'kill' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 4 existing terms');
     $this->assertSession()->pageTextContains('Created 6 new terms');
     // Check the term count in vocabulary 1 has not changed.
@@ @@
       'minimum_depth' => 2,
       'maximum_depth' => 6,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 9 new terms');
     // Check the total term count is 8 + 6 + 9 = 23.
     $terms1 = \Drupal::entityQuery('taxonomy_term')->condition('vid', $this->vocabulary->id())->execute();
@@ @@
       'title_length' => 12,
       'kill' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/vocabs', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/vocabs');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created the following new vocabularies: ');
     $this->assertSession()->pageTextContains('Generate process complete.');
   }
@@ @@
       'num_menus' => 5,
       'num_links' => 7,
     ];
-    $this->drupalPostForm('admin/config/development/generate/menu', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/menu');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created the following 5 new menus: ');
     $this->assertSession()->pageTextContains('Created 7 new menu links');
     $this->assertSession()->pageTextContains('Generate process complete.');
@@ @@
       'title_length' => 3,
       'kill' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/menu', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/menu');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 5 menu(s) and 0 other link(s).');
     $this->assertSession()->pageTextContains('Created the following 160 new menus: ');
     $this->assertSession()->pageTextContains('Created 380 new menu links');
@@ @@
       "media_types[{$media_type2->id()}]" => 1,
       'kill' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/media', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/media');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Finished creating 5 media items.');
     $this->assertSession()->pageTextContains('Generate process complete.');
     $this->assertCount(5, \Drupal::entityQuery('media')->execute());
@@ @@
       "media_types[{$media_type2->id()}]" => 1,
       'kill' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/media', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/media');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Finished 56 elements created successfully.');
     $this->assertSession()->pageTextContains('Generate process complete.');
     $this->assertCount(56, \Drupal::entityQuery('media')->execute());
@@ @@
       'node_types[article]' => TRUE,
       'node_types[page]' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Finished 55 elements created successfully.');
     $this->assertSession()->pageTextContains('Generate process complete.');

@@ @@
       'add_language[]' => ['en'],
       'translate_language[]' => ['de', 'ca'],
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertCount(52, \Drupal::entityQuery('node')->execute());
     // Only aticles will have translations so get that number.
     $articles = \Drupal::entityQuery('node')->condition('type', 'article')->execute();
@@ @@
       'node_types[article]' => TRUE,
       'node_types[page]' => FALSE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');

     // Tests that all the created nodes were of the node type selected.
     $nodeStorage = $this->container->get('entity_type.manager')->getStorage('node');
    ----------- end diff -----------

Applied rules:
 * AssertRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


41) modules/contrib/devel/devel_generate/src/Plugin/DevelGenerate/MediaDevelGenerate.php:323

    ---------- begin diff ----------
@@ @@
       'title' => $this->t('Generating media items'),
       'operations' => $operations,
       'finished' => 'devel_generate_batch_finished',
-      'file' => drupal_get_path('module', 'devel_generate') . '/devel_generate.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('devel_generate') . '/devel_generate.batch.inc',
     ];
     batch_set($batch);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


42) modules/contrib/devel/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php:463

    ---------- begin diff ----------
@@ @@
       'title' => $this->t('Generating Content'),
       'operations' => $operations,
       'finished' => 'devel_generate_batch_finished',
-      'file' => drupal_get_path('module', 'devel_generate') . '/devel_generate.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('devel_generate') . '/devel_generate.batch.inc',
     ];

     batch_set($batch);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 42 files have been changed by Rector                                      

