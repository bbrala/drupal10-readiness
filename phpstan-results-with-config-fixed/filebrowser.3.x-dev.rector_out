modules/contrib/filebrowser/filebrowser.install
modules/contrib/filebrowser/filebrowser.module
modules/contrib/filebrowser/filebrowser.theme.inc
modules/contrib/filebrowser/modules/src/EventSubscriber/MetadataEventSubscriber.php
modules/contrib/filebrowser/modules/src/EventSubscriber/MetadataInfoEventSubscriber.php
modules/contrib/filebrowser/src/Access/FilebrowserAccessCheck.php
modules/contrib/filebrowser/src/Breadcrumb/BreadcrumbBuilder.php
modules/contrib/filebrowser/src/Controller/DefaultController.php
modules/contrib/filebrowser/src/Element/FilebrowserManagedFile.php
modules/contrib/filebrowser/src/Entity/FilebrowserMetadataEntity.php
modules/contrib/filebrowser/src/Entity/FilebrowserMetadataEntityAccessControlHandler.php
modules/contrib/filebrowser/src/Entity/FilebrowserMetadataEntityInterface.php
modules/contrib/filebrowser/src/EventSubscriber/MetadataEventSubscriber.php
modules/contrib/filebrowser/src/EventSubscriber/MetadataInfoEventSubscriber.php
modules/contrib/filebrowser/src/EventSubscriber/UserActionsEventSubscriber.php
modules/contrib/filebrowser/src/Events/MetadataEvent.php
modules/contrib/filebrowser/src/Events/MetadataInfo.php
modules/contrib/filebrowser/src/Events/UserActionsEvent.php
modules/contrib/filebrowser/src/File/DisplayFile.php
modules/contrib/filebrowser/src/File/DisplayFileList.php
modules/contrib/filebrowser/src/Filebrowser.php
modules/contrib/filebrowser/src/FilebrowserManager.php
modules/contrib/filebrowser/src/FilebrowserPermissions.php
modules/contrib/filebrowser/src/FilebrowserUninstallValidator.php
modules/contrib/filebrowser/src/Form/ActionForm.php
modules/contrib/filebrowser/src/Form/DeleteForm.php
modules/contrib/filebrowser/src/Form/DescriptionForm.php
modules/contrib/filebrowser/src/Form/FilebrowserConfigForm.php
modules/contrib/filebrowser/src/Form/FolderForm.php
modules/contrib/filebrowser/src/Form/GridActionForm.php
modules/contrib/filebrowser/src/Form/InlineDescriptionForm.php
modules/contrib/filebrowser/src/Form/RenameForm.php
modules/contrib/filebrowser/src/Form/UploadForm.php
modules/contrib/filebrowser/src/Grid/Grid.php
modules/contrib/filebrowser/src/Presentation.php
modules/contrib/filebrowser/src/ServerFileList.php
modules/contrib/filebrowser/src/Services/Common.php
modules/contrib/filebrowser/src/Services/FilebrowserStorage.php
modules/contrib/filebrowser/src/Services/FilebrowserValidator.php
modules/contrib/filebrowser/src/Services/FormHelper.php
modules/contrib/filebrowser/src/Statistics.php

5 files with changes
====================

1) modules/contrib/filebrowser/src/ServerFileList.php:72

    ---------- begin diff ----------
@@ @@

     foreach ($files as $key => $file) {

-      $file->url = file_create_url($file->uri);
+      $file->url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->uri);
       // Complete the required file data

       $file->mimetype = $guessor->guess($file->filename);
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/filebrowser/src/Presentation.php:331

    ---------- begin diff ----------
@@ @@
         // ##### ICON COLUMN #####
         $visible_columns[Common::ICON] = true;
         $icon = $this->common->iconGenerate($file->fileData->type, $file->fileData->mimetype, 24, 24);
-        $unsorted_rows[$file_name][Common::ICON] = render($icon);
+        $unsorted_rows[$file_name][Common::ICON] = \Drupal::service('renderer')->render($icon);
       }

       // ##### NAME COLUMN - we will always set the name column
       // fixme: delete not needed
-      $unsorted_rows[$file_name][Common::NAME] = render($file->link);
+      $unsorted_rows[$file_name][Common::NAME] = \Drupal::service('renderer')->render($file->link);
       $visible_columns[Common::NAME] = true;

       // ##### SET OTHER METADATA
@@ @@
             $render = [];
             $render['#theme'] = $theme;
             $render['#data'] = $content;
-            $unsorted_rows[$file_name][$name] = render($render);
+            $unsorted_rows[$file_name][$name] = \Drupal::service('renderer')->render($render);
           }
         }
       }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/filebrowser/src/Form/RenameForm.php:268

    ---------- begin diff ----------
@@ @@
     $file->uri = $uri;
     $file->filename = \Drupal::service('file_system')->basename($uri);
     $file->name = pathinfo($file->filename, PATHINFO_FILENAME);
-    $file->url = file_create_url($file->uri);
+    $file->url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->uri);
   }

 }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/filebrowser/src/Form/GridActionForm.php:166

    ---------- begin diff ----------
@@ @@
         }
         else {
           $form['container'][$row_name][$col_name][$content['content']['file']->fid] = [
-            '#markup' => render($content['content']['grid']),
+            '#markup' => \Drupal::service('renderer')->render($content['content']['grid']),
           ];
         }
       }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/filebrowser/src/Controller/DefaultController.php:87

    ---------- begin diff ----------
@@ @@
     // todo:
     // RedirectResponse needs a relative path so we will convert the full url into a relative path
     // This is done here, but should be moved to a better place in Common
-    $file_path = file_url_transform_relative($file_data->url);
+    $file_path = \Drupal::service('file_url_generator')->transformRelative($file_data->url);
     if ($filebrowser->downloadManager == 'public' && StreamWrapperManager::getScheme($file_data->uri) == 'public') {
       $response = new RedirectResponse($file_path);
       return $response;
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

