diff --git a/entity_ui.info.yml b/entity_ui.info.yml
index 91dbb32..79d941f 100644
--- a/entity_ui.info.yml
+++ b/entity_ui.info.yml
@@ -1,6 +1,6 @@
 name: 'Entity UI Builder'
 type: module
 description: 'Allows creation of UIs for entities.'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 dependencies:
   - drupal:field_ui
diff --git a/tests/src/Functional/AdminUITest.php b/tests/src/Functional/AdminUITest.php
index 0149bf1..76ea44c 100644
--- a/tests/src/Functional/AdminUITest.php
+++ b/tests/src/Functional/AdminUITest.php
@@ -26,7 +26,7 @@ class AdminUITest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create an Article node type.
@@ -56,7 +56,7 @@ class AdminUITest extends BrowserTestBase {
 
     // Check the collection page has the expected elements.
     // Check the node type collection tab is shown.
-    $this->assertLinkByHref('admin/structure/types');
+    $this->assertSession()->linkByHrefExists('admin/structure/types');
 
     // Check the built-in tabs on nodes are shown.
     $this->assertSession()->pageTextContains(t('View'));
@@ -64,7 +64,7 @@ class AdminUITest extends BrowserTestBase {
     $this->assertSession()->pageTextContains(t('Delete'));
 
     $this->assertSession()->pageTextContains(t('Add entity tab'));
-    $this->assertLinkByHref('admin/structure/entity_ui/entity_tab/add/node');
+    $this->assertSession()->linkByHrefExists('admin/structure/entity_ui/entity_tab/add/node');
 
     // Create a new entity tab on nodes.
     $this->clickLink(t('Add entity tab'));
@@ -81,11 +81,11 @@ class AdminUITest extends BrowserTestBase {
       'content_plugin' => 'entity_view',
       'content_config[view_mode]' => 'default',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
 
     // Check the new tab is now shown in the collection listing.
     $this->assertSession()->pageTextContains($edit['label']);
-    $this->assertLinkByHref("admin/structure/entity_ui/entity_tab/node.{$edit['id']}/edit");
+    $this->assertSession()->linkByHrefExists("admin/structure/entity_ui/entity_tab/node.{$edit['id']}/edit");
 
 
     // todo:
@@ -109,14 +109,14 @@ class AdminUITest extends BrowserTestBase {
 
     // Check the collection page has the expected elements.
     // Check the user accounts setings tab is shown.
-    $this->assertLinkByHref('admin/config/people/accounts');
+    $this->assertSession()->linkByHrefExists('admin/config/people/accounts');
 
     // Check the built-in tabs on users are shown.
     $this->assertSession()->pageTextContains(t('View'));
     $this->assertSession()->pageTextContains(t('Edit'));
 
     $this->assertSession()->pageTextContains(t('Add entity tab'));
-    $this->assertLinkByHref('admin/structure/entity_ui/entity_tab/add/user');
+    $this->assertSession()->linkByHrefExists('admin/structure/entity_ui/entity_tab/add/user');
 
     // Create a new entity tab on users.
     $this->clickLink(t('Add entity tab'));
@@ -132,11 +132,11 @@ class AdminUITest extends BrowserTestBase {
       'content_plugin' => 'entity_view',
       'content_config[view_mode]' => 'default',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
 
     // Check the new tab is now shown in the collection listing.
     $this->assertSession()->pageTextContains($edit['label']);
-    $this->assertLinkByHref("admin/structure/entity_ui/entity_tab/user.{$edit['id']}/edit");
+    $this->assertSession()->linkByHrefExists("admin/structure/entity_ui/entity_tab/user.{$edit['id']}/edit");
 
 
     // todo:
diff --git a/tests/src/Functional/OwnerAssignTabTest.php b/tests/src/Functional/OwnerAssignTabTest.php
index 272e6a7..42dae12 100644
--- a/tests/src/Functional/OwnerAssignTabTest.php
+++ b/tests/src/Functional/OwnerAssignTabTest.php
@@ -26,7 +26,7 @@ class OwnerAssignTabTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->nodeStorage = $this->container->get('entity_type.manager')
@@ -94,7 +94,7 @@ class OwnerAssignTabTest extends BrowserTestBase {
     $edit = [
       'owner_uid' => $new_owner->getUsername() . ' (' . $new_owner->id() . ')',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Change owner');
+    $this->submitForm($edit, 'Change owner');
 
     // Reload the node.
     $node = $this->nodeStorage->load($node->id());
diff --git a/tests/src/Kernel/ActionDerivativesTest.php b/tests/src/Kernel/ActionDerivativesTest.php
index ee49b75..d315929 100644
--- a/tests/src/Kernel/ActionDerivativesTest.php
+++ b/tests/src/Kernel/ActionDerivativesTest.php
@@ -27,7 +27,7 @@ class ActionDerivativesTest extends KernelTestBase {
     'entity_ui',
   ];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['node']);
   }
diff --git a/tests/src/Kernel/AdminUIHandlerTest.php b/tests/src/Kernel/AdminUIHandlerTest.php
index 672addd..01f9e90 100644
--- a/tests/src/Kernel/AdminUIHandlerTest.php
+++ b/tests/src/Kernel/AdminUIHandlerTest.php
@@ -11,6 +11,7 @@ use Drupal\KernelTests\KernelTestBase;
  */
 class AdminUIHandlerTest extends KernelTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Modules to enable.
    *
@@ -28,7 +29,7 @@ class AdminUIHandlerTest extends KernelTestBase {
     'entity_ui',
   ];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installEntitySchema('user');
