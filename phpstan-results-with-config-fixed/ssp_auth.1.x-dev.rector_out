modules/contrib/ssp_auth/src/Authentication.php
modules/contrib/ssp_auth/src/AuthenticationInterface.php
modules/contrib/ssp_auth/src/Controller/AuthenticationController.php
modules/contrib/ssp_auth/src/Entity/IdentityProvider.php
modules/contrib/ssp_auth/src/Entity/IdentityProviderInterface.php
modules/contrib/ssp_auth/src/Event/LoginEvent.php
modules/contrib/ssp_auth/src/Form/IdentityProviderDeleteForm.php
modules/contrib/ssp_auth/src/Form/IdentityProviderForm.php
modules/contrib/ssp_auth/src/Form/ServiceProviderSettingsForm.php
modules/contrib/ssp_auth/src/IdentityProviderHtmlRouteProvider.php
modules/contrib/ssp_auth/src/IdentityProviderListBuilder.php
modules/contrib/ssp_auth/ssp_auth.install
modules/contrib/ssp_auth/ssp_auth.module
modules/contrib/ssp_auth/tests/src/Functional/ServiceProviderSettingsFormTest.php
modules/contrib/ssp_auth/tests/src/Kernel/IdentityProviderTest.php

4 files with changes
====================

1) modules/contrib/ssp_auth/tests/src/Kernel/IdentityProviderTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('identity_provider');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/ssp_auth/tests/src/Functional/ServiceProviderSettingsFormTest.php:27

    ---------- begin diff ----------
@@ @@
   public function testsServiceProviderSettingsForm() {
     $settingsFormUrl = Url::fromRoute('ssp_auth.service_provider_settings_form');
     $this->drupalGet($settingsFormUrl);
-    $this->assertText('Access denied');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Access denied');

     $this->drupalLogin($this->createUser(['administer service provider settings']));
     $this->drupalGet($settingsFormUrl);
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/ssp_auth/src/Event/LoginEvent.php:7

    ---------- begin diff ----------
@@ @@
 /**
  * Event that is fired after the user has been logged in.
  */
-class LoginEvent extends Event {
+class LoginEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Fires when the user has been logged in.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/ssp_auth/src/Controller/AuthenticationController.php:304

    ---------- begin diff ----------
@@ @@
     }

     $event = new LoginEvent($account);
-    $this->eventDispatcher->dispatch(LoginEvent::LOGIN_EVENT, $event);
+    $this->eventDispatcher->dispatch($event, LoginEvent::LOGIN_EVENT);

     return $account;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

