diff --git a/boxout.info.yml b/boxout.info.yml
index b3ae181..5a49c83 100644
--- a/boxout.info.yml
+++ b/boxout.info.yml
@@ -1,8 +1,7 @@
 name: Boxout
 type: module
 description: CKEditor Plugin to add a styled box to your content.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: CKEditor
 dependencies:
   - drupal:ckeditor
diff --git a/boxout.module b/boxout.module
index 6cfd9d0..0c31e50 100644
--- a/boxout.module
+++ b/boxout.module
@@ -11,7 +11,7 @@ use Drupal\editor\Entity\Editor;
  * Implements hook_preprocess_page().
  */
 function boxout_ckeditor_css_alter(array &$css, Editor $editor) {
-  $css[] = drupal_get_path('module', 'boxout') . '/css/boxout.css';
+  $css[] = \Drupal::service('extension.list.module')->getPath('boxout') . '/css/boxout.css';
 }
 
 /**
diff --git a/src/Plugin/CKEditorPlugin/Boxout.php b/src/Plugin/CKEditorPlugin/Boxout.php
index 163258c..2a85683 100644
--- a/src/Plugin/CKEditorPlugin/Boxout.php
+++ b/src/Plugin/CKEditorPlugin/Boxout.php
@@ -22,7 +22,7 @@ class Boxout extends CKEditorPluginBase {
    *   Full path to module.
    */
   private function path() {
-    return drupal_get_path('module', 'boxout');
+    return \Drupal::service('extension.list.module')->getPath('boxout');
   }
 
   /**
diff --git a/tests/src/Functional/BoxoutTest.php b/tests/src/Functional/BoxoutTest.php
index f42fb88..445deff 100644
--- a/tests/src/Functional/BoxoutTest.php
+++ b/tests/src/Functional/BoxoutTest.php
@@ -53,7 +53,7 @@ class BoxoutTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create admin user.
@@ -116,18 +116,18 @@ class BoxoutTest extends BrowserTestBase {
 
     // Test boxout form callback.
     $this->drupalGet('boxout/dialog');
-    $this->assertResponse(200, "Boxout Dialog works");
+    $this->assertSession()->statusCodeEquals(200, "Boxout Dialog works");
 
     $this->xpath('//select[@id=:id]/option', [':id' => 'boxout-style']);
-    $this->assertOption('boxout-style', 'default');
-    $this->assertOption('boxout-style', 'plain');
+    $this->assertSession()->optionExists('boxout-style', 'default');
+    $this->assertSession()->optionExists('boxout-style', 'plain');
 
     $this->xpath('//select[@name=:id]/option', [':id' => 'boxout-element-type']);
-    $this->assertOption('boxout-element-type', 'p');
-    $this->assertOption('boxout-element-type', 'h2');
-    $this->assertOption('boxout-element-type', 'h3');
-    $this->assertOption('boxout-element-type', 'h4');
-    $this->assertOption('boxout-element-type', 'h5');
+    $this->assertSession()->optionExists('boxout-element-type', 'p');
+    $this->assertSession()->optionExists('boxout-element-type', 'h2');
+    $this->assertSession()->optionExists('boxout-element-type', 'h3');
+    $this->assertSession()->optionExists('boxout-element-type', 'h4');
+    $this->assertSession()->optionExists('boxout-element-type', 'h5');
 
     $field_header = $this->xpath('//input[@name="attributes[header]"]');
     $this->assertTrue(count($field_header) === 1, 'Header field is present');
@@ -152,7 +152,7 @@ class BoxoutTest extends BrowserTestBase {
     ], $this->t('Save'));
 
     // Check markup.
-    $this->assertRaw($markup);
+    $this->assertSession()->responseContains($markup);
   }
 
 }
