modules/contrib/porterstemmer/porterstemmer.module
modules/contrib/porterstemmer/src/Porter2.php
modules/contrib/porterstemmer/tests/src/Functional/LangCodeTest.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Pecl1.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Pecl2.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Pecl3.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Pecl4.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Pecl5.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Pecl6.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Test1.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Test2.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Test3.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Test4.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Test5.php
modules/contrib/porterstemmer/tests/src/Unit/Porter2Test6.php
modules/contrib/porterstemmer/tests/src/Unit/PorterPeclBase.php
modules/contrib/porterstemmer/tests/src/Unit/TestItemsTrait.php

1 file with changes
===================

1) modules/contrib/porterstemmer/tests/src/Functional/LangCodeTest.php:145

    ---------- begin diff ----------
@@ @@
     // Run cron to ensure the content is indexed.
     $this->cronRun();
     $this->drupalGet('admin/reports/dblog');
-    $this->assertText(t('Cron run completed'), 'Log shows cron run completed');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('Cron run completed'));
   }

   /**
@@ @@
   public function testStemSearching() {

     foreach ($this->searches as $search) {
-      $this->drupalPostForm('search/node', ['keys' => $search], t('Search'));
+      $this->drupalGet('search/node');
+      $this->submitForm(['keys' => $search], t('Search'));

       // Verify that all English-language test node variants show up in results.
       foreach ($this->testData as $title => $body) {
-        $this->assertText($title . ' (EN)', new FormattableMarkup('Search for %search returns English-language node with body %body', ['%search' => $search, '%body' => $body]));
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+        // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+        $this->assertSession()->pageTextContains($title . ' (EN)');
       }

       // Check for results by language.
       switch ($search) {
         case 'walk':
-          $this->assertNoText('Second Page (FR)', new FormattableMarkup('Search for %search does not show stemmed non-English results.', ['%search' => $search]));
-          $this->assertNoText('Second Page (UND)', new FormattableMarkup('Search for %search does show stemmed language-unspecified results.', ['%search' => $search]));
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextNotContains('Second Page (FR)');
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextNotContains('Second Page (UND)');
           break;

         case 'walked':
-          $this->assertNoText('Second Page (FR)', new FormattableMarkup('Search for %search does not show stemmed non-English results.', ['%search' => $search]));
-          $this->assertNoText('Second Page (UND)', new FormattableMarkup('Search for %search does not show stemmed language-unspecified results.', ['%search' => $search]));
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextNotContains('Second Page (FR)');
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextNotContains('Second Page (UND)');
           break;

         case 'walking':
-          $this->assertText('First Page (FR)', new FormattableMarkup('Search for %search does show matching non-English results.', ['%search' => $search]));
-          $this->assertText('First Page (UND)', new FormattableMarkup('Search for %search does show matching language-unspecified results.', ['%search' => $search]));
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextContains('First Page (FR)');
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextContains('First Page (UND)');
           break;

       }
    ----------- end diff -----------

Applied rules:
 * AssertNoTextRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

