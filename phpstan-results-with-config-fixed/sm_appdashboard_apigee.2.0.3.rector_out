modules/contrib/sm_appdashboard_apigee/modules/sm_appdashboard_apigee_rules/sm_appdashboard_apigee_rules.module
modules/contrib/sm_appdashboard_apigee/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php
modules/contrib/sm_appdashboard_apigee/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php
modules/contrib/sm_appdashboard_apigee/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php
modules/contrib/sm_appdashboard_apigee/sm_appdashboard_apigee.install
modules/contrib/sm_appdashboard_apigee/sm_appdashboard_apigee.module
modules/contrib/sm_appdashboard_apigee/src/AppsDashboardStorageService.php
modules/contrib/sm_appdashboard_apigee/src/AppsDashboardStorageServiceInterface.php
modules/contrib/sm_appdashboard_apigee/src/Controller/AppsDashboardController.php
modules/contrib/sm_appdashboard_apigee/src/Form/AppDetailsEditForm.php
modules/contrib/sm_appdashboard_apigee/src/Form/AppDetailsSearchForm.php
modules/contrib/sm_appdashboard_apigee/tests/src/Unit/Controller/AppsDashboardControllerTest.php

5 files with changes
====================

1) modules/contrib/sm_appdashboard_apigee/tests/src/Unit/Controller/AppsDashboardControllerTest.php:16

    ---------- begin diff ----------
@@ @@
  */
 class AppsDashboardControllerTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The AppsDashboardController.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->appsDashboardStorage = $this->prophesize(AppsDashboardStorageService::class);
     $this->formBuilder = $this->prophesize(FormBuilder::class);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/sm_appdashboard_apigee/src/Form/AppDetailsEditForm.php:348

    ---------- begin diff ----------
@@ @@
         $app_entity_id = $form_state->getValue('app_id');
         $app_entity = $this->appsDashboardStorage->getAppDetailsById($app_entity_type, $app_entity_id);
         $status_event_change = new AppdashboardEvent($app_entity);
-        $this->eventDispatcher->dispatch(AppdashboardEvent::APP_STATUS_CHANGE, $status_event_change);
+        $this->eventDispatcher->dispatch($status_event_change, AppdashboardEvent::APP_STATUS_CHANGE);
         // Dispatch event if app status is changed from revoked to approved.
         if ($product_previous_status === 'revoked' && $product_status === 'approved') {
           $event_approved = new AppdashboardStatusApprovedEvent($app_entity);
-          $this->eventDispatcher->dispatch(AppdashboardStatusApprovedEvent::APP_STATUS_APPROVED, $event_approved);
+          $this->eventDispatcher->dispatch($event_approved, AppdashboardStatusApprovedEvent::APP_STATUS_APPROVED);
         }
         // Dispatch event if app status is changed from approved to revoked.
         if ($product_previous_status === 'approved' && $product_status === 'revoked') {
           $event_revoked = new AppdashboardStatusRevokedEvent($app_entity);
-          $this->eventDispatcher->dispatch(AppdashboardStatusRevokedEvent::APP_STATUS_REVOKED, $event_revoked);
+          $this->eventDispatcher->dispatch($event_revoked, AppdashboardStatusRevokedEvent::APP_STATUS_REVOKED);
         }
       }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/sm_appdashboard_apigee/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @package Drupal\sm_appdashboard_apigee_rules\Event
  */
-class AppdashboardStatusRevokedEvent extends Event {
+class AppdashboardStatusRevokedEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Event name.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/sm_appdashboard_apigee/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @package Drupal\sm_appdashboard_apigee_rules\Event
  */
-class AppdashboardStatusApprovedEvent extends Event {
+class AppdashboardStatusApprovedEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Event name.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/sm_appdashboard_apigee/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @package Drupal\sm_appdashboard_apigee_rules\Event
  */
-class AppdashboardEvent extends Event {
+class AppdashboardEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Event name.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

