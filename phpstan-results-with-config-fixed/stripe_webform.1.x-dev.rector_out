modules/contrib/stripe_webform/src/Event/StripeWebformEvents.php
modules/contrib/stripe_webform/src/Event/StripeWebformWebhookEvent.php
modules/contrib/stripe_webform/src/EventSubscriber/StripeWebformEventSubscriber.php
modules/contrib/stripe_webform/src/Plugin/WebformElement/StripeWebformElement.php
modules/contrib/stripe_webform/src/Plugin/WebformHandler/StripeWebformHandler.php
modules/contrib/stripe_webform/stripe_webform.module

3 files with changes
====================

1) modules/contrib/stripe_webform/src/Plugin/WebformHandler/StripeWebformHandler.php:285

    ---------- begin diff ----------
@@ @@
       }
     }
     catch (\Stripe\Error\Base $e) {
-      drupal_set_message($this->t('Stripe error: %error', ['%error' => $e->getMessage()]), 'error');
+      $this->messenger()->addError($this->t('Stripe error: %error', ['%error' => $e->getMessage()]));
     }
  }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/stripe_webform/src/EventSubscriber/StripeWebformEventSubscriber.php:84

    ---------- begin diff ----------
@@ @@
       if ($webform_submission) {
         $webhook_event = new StripeWebformWebhookEvent($stripe_event['type'], $webform_submission, $stripe_event);
         $this->event_dispatcher
-          ->dispatch(StripeWebformWebhookEvent::EVENT_NAME, $webhook_event);
+          ->dispatch($webhook_event, StripeWebformWebhookEvent::EVENT_NAME);
       }
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/stripe_webform/src/Event/StripeWebformWebhookEvent.php:7

    ---------- begin diff ----------
@@ @@
 /**
  * Event that is fired when a webhook related to a webform submission is received
  */
-class StripeWebformWebhookEvent extends Event {
+class StripeWebformWebhookEvent extends \Symfony\Contracts\EventDispatcher\Event {

   const EVENT_NAME = StripeWebformEvents::WEBHOOK;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

