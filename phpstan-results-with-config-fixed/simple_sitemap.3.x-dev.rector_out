modules/contrib/simple_sitemap/modules/simple_sitemap_engines/simple_sitemap_engines.install
modules/contrib/simple_sitemap/modules/simple_sitemap_engines/simple_sitemap_engines.module
modules/contrib/simple_sitemap/modules/simple_sitemap_engines/src/Controller/SearchEngineListBuilder.php
modules/contrib/simple_sitemap/modules/simple_sitemap_engines/src/Entity/SearchEngine.php
modules/contrib/simple_sitemap/modules/simple_sitemap_engines/src/Form/SimplesitemapEnginesForm.php
modules/contrib/simple_sitemap/modules/simple_sitemap_engines/src/Plugin/QueueWorker/SitemapSubmitter.php
modules/contrib/simple_sitemap/modules/simple_sitemap_views/simple_sitemap_views.install
modules/contrib/simple_sitemap/modules/simple_sitemap_views/simple_sitemap_views.module
modules/contrib/simple_sitemap/modules/simple_sitemap_views/src/Controller/SimpleSitemapViewsController.php
modules/contrib/simple_sitemap/modules/simple_sitemap_views/src/EventSubscriber/ArgumentCollector.php
modules/contrib/simple_sitemap/modules/simple_sitemap_views/src/Plugin/QueueWorker/GarbageCollector.php
modules/contrib/simple_sitemap/modules/simple_sitemap_views/src/Plugin/simple_sitemap/UrlGenerator/ViewsUrlGenerator.php
modules/contrib/simple_sitemap/modules/simple_sitemap_views/src/Plugin/views/display_extender/SimpleSitemapDisplayExtender.php
modules/contrib/simple_sitemap/modules/simple_sitemap_views/src/SimpleSitemapViews.php
modules/contrib/simple_sitemap/modules/simple_sitemap_views/tests/src/Functional/SimpleSitemapViewsTest.php
modules/contrib/simple_sitemap/modules/simple_sitemap_views/tests/src/Functional/SimpleSitemapViewsTestBase.php
modules/contrib/simple_sitemap/simple_sitemap.api.php
modules/contrib/simple_sitemap/simple_sitemap.drush.inc
modules/contrib/simple_sitemap/simple_sitemap.install
modules/contrib/simple_sitemap/simple_sitemap.module
modules/contrib/simple_sitemap/src/Annotation/SitemapGenerator.php
modules/contrib/simple_sitemap/src/Annotation/SitemapType.php
modules/contrib/simple_sitemap/src/Annotation/UrlGenerator.php
modules/contrib/simple_sitemap/src/Commands/SimplesitemapCommands.php
modules/contrib/simple_sitemap/src/Controller/SimplesitemapController.php
modules/contrib/simple_sitemap/src/EntityHelper.php
modules/contrib/simple_sitemap/src/Form/FormHelper.php
modules/contrib/simple_sitemap/src/Form/SimplesitemapCustomLinksForm.php
modules/contrib/simple_sitemap/src/Form/SimplesitemapEntitiesForm.php
modules/contrib/simple_sitemap/src/Form/SimplesitemapFormBase.php
modules/contrib/simple_sitemap/src/Form/SimplesitemapSettingsForm.php
modules/contrib/simple_sitemap/src/Form/SimplesitemapSitemapsForm.php
modules/contrib/simple_sitemap/src/Form/SimplesitemapVariantsForm.php
modules/contrib/simple_sitemap/src/Logger.php
modules/contrib/simple_sitemap/src/PathProcessor/PathProcessorSitemapVariantIn.php
modules/contrib/simple_sitemap/src/PathProcessor/PathProcessorSitemapVariantOut.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SimplesitemapPluginBase.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SitemapGenerator/DefaultSitemapGenerator.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SitemapGenerator/SitemapGeneratorBase.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SitemapGenerator/SitemapGeneratorInterface.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SitemapGenerator/SitemapGeneratorManager.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SitemapGenerator/SitemapWriter.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SitemapType/DefaultHreflangSitemapType.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SitemapType/SitemapTypeBase.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SitemapType/SitemapTypeInterface.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/SitemapType/SitemapTypeManager.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/UrlGenerator/ArbitraryUrlGenerator.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/UrlGenerator/CustomUrlGenerator.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/UrlGenerator/EntityMenuLinkContentUrlGenerator.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/UrlGenerator/EntityUrlGenerator.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/UrlGenerator/EntityUrlGeneratorBase.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/UrlGenerator/UrlGeneratorBase.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/UrlGenerator/UrlGeneratorInterface.php
modules/contrib/simple_sitemap/src/Plugin/simple_sitemap/UrlGenerator/UrlGeneratorManager.php
modules/contrib/simple_sitemap/src/Queue/BatchTrait.php
modules/contrib/simple_sitemap/src/Queue/QueueWorker.php
modules/contrib/simple_sitemap/src/Queue/SimplesitemapQueue.php
modules/contrib/simple_sitemap/src/Simplesitemap.php
modules/contrib/simple_sitemap/src/SimplesitemapManager.php
modules/contrib/simple_sitemap/src/SimplesitemapSettings.php
modules/contrib/simple_sitemap/tests/scripts/performance_test.php
modules/contrib/simple_sitemap/tests/src/Functional/SimplesitemapTest.php
modules/contrib/simple_sitemap/tests/src/Functional/SimplesitemapTestBase.php

6 files with changes
====================

1) modules/contrib/simple_sitemap/tests/src/Functional/SimplesitemapTestBase.php:77

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->generator = $this->container->get('simple_sitemap.generator');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/simple_sitemap/tests/src/Functional/SimplesitemapTest.php:467

    ---------- begin diff ----------
@@ @@

   /**
    * Tests that a page does not break if an entity has its id set.
+   * @doesNotPerformAssertions
    */
   public function testNewEntityWithIdSet() {
     $new_node = Node::create([
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/simple_sitemap/src/Form/SimplesitemapSitemapsForm.php:120

    ---------- begin diff ----------
@@ @@
         '#percent' => $percent,
         '#message' => $this->t('@indexed out of @total queue items have been processed.<br>Each sitemap variant is published after all of its items have been processed.', ['@indexed' => $indexed_count, '@total' => $total_count]),
       ];
-      $form['simple_sitemap_settings']['status']['progress']['bar']['#markup'] = render($index_progress);
+      $form['simple_sitemap_settings']['status']['progress']['bar']['#markup'] = \Drupal::service('renderer')->render($index_progress);
     }
     else {
       $form['simple_sitemap_settings']['status']['progress']['bar']['#markup'] = '<div class="description">' . $this->t('There are no items to be indexed.') . '</div>';
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/simple_sitemap/src/Controller/SimplesitemapController.php:74

    ---------- begin diff ----------
@@ @@
   public function getSitemapXsl() {

     // Read the XSL content from the file.
-    $module_path = drupal_get_path('module', 'simple_sitemap');
+    $module_path = \Drupal::service('extension.list.module')->getPath('simple_sitemap');
     $xsl_content = file_get_contents($module_path . '/xsl/simple_sitemap.xsl');

     // Replace custom tokens in the XSL content with appropriate values.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/simple_sitemap/modules/simple_sitemap_views/tests/src/Functional/SimpleSitemapViewsTestBase.php:56

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->sitemapViews = $this->container->get('simple_sitemap.views');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/simple_sitemap/modules/simple_sitemap_views/src/EventSubscriber/ArgumentCollector.php:61

    ---------- begin diff ----------
@@ @@
   /**
    * Collect information about views arguments.
    *
-   * @param \Symfony\Component\HttpKernel\Event\PostResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\TerminateEvent $event
    *   Object of event after a response was sent.
    */
-  public function onTerminate(PostResponseEvent $event) {
+  public function onTerminate(\Symfony\Component\HttpKernel\Event\TerminateEvent $event) {
     // Only successful requests are interesting.
     // Collect information about arguments only if views support is enabled.
     if (!$event->getResponse()->isSuccessful() || !$this->sitemapViews->isEnabled()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 6 files have been changed by Rector                                       

