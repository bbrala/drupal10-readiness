diff --git a/panels.module b/panels.module
index b73df34..9bf02d2 100644
--- a/panels.module
+++ b/panels.module
@@ -51,10 +51,10 @@ function panels_layout_alter(&$definitions) {
       continue;
     }
     if (in_array($layout_name, $core_layouts) && empty($definitions[$layout_name]->getIcon())) {
-      $definitions[$layout_name]->setIconPath(drupal_get_path('module', 'panels') . '/layouts/'.$layout_name.'/'.$layout_name.'.png');
+      $definitions[$layout_name]->setIconPath(\Drupal::service('extension.list.module')->getPath('panels') . '/layouts/'.$layout_name.'/'.$layout_name.'.png');
     }
     if (empty($definitions[$layout_name]->getIcon())) {
-      $definitions[$layout_name]->setIconPath(drupal_get_path('module', 'panels') . '/layouts/no-layout-preview.png');
+      $definitions[$layout_name]->setIconPath(\Drupal::service('extension.list.module')->getPath('panels') . '/layouts/no-layout-preview.png');
     }
   }
 }
diff --git a/panels_ipe/src/Controller/PanelsIPEPageController.php b/panels_ipe/src/Controller/PanelsIPEPageController.php
index 48788fc..f0c0e4c 100644
--- a/panels_ipe/src/Controller/PanelsIPEPageController.php
+++ b/panels_ipe/src/Controller/PanelsIPEPageController.php
@@ -172,7 +172,7 @@ class PanelsIPEPageController extends ControllerBase {
     $base_path = base_path();
     $data = [];
     foreach ($layouts as $id => $layout) {
-      $icon = $layout->getIconPath() ?: drupal_get_path('module', 'panels') . '/layouts/no-layout-preview.png';
+      $icon = $layout->getIconPath() ?: \Drupal::service('extension.list.module')->getPath('panels') . '/layouts/no-layout-preview.png';
       $data[] = [
         'id' => $id,
         'label' => $layout->getLabel(),
diff --git a/panels_ipe/tests/src/FunctionalJavascript/PageManagerIntegrationTest.php b/panels_ipe/tests/src/FunctionalJavascript/PageManagerIntegrationTest.php
index bddba88..599e7a7 100644
--- a/panels_ipe/tests/src/FunctionalJavascript/PageManagerIntegrationTest.php
+++ b/panels_ipe/tests/src/FunctionalJavascript/PageManagerIntegrationTest.php
@@ -38,7 +38,7 @@ class PageManagerIntegrationTest extends PanelsIPETestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a user with appropriate permissions to use Panels IPE.
diff --git a/panels_ipe/tests/src/FunctionalJavascript/PanelsIPETestBase.php b/panels_ipe/tests/src/FunctionalJavascript/PanelsIPETestBase.php
index d0ab4c5..fea2c83 100644
--- a/panels_ipe/tests/src/FunctionalJavascript/PanelsIPETestBase.php
+++ b/panels_ipe/tests/src/FunctionalJavascript/PanelsIPETestBase.php
@@ -32,6 +32,7 @@ abstract class PanelsIPETestBase extends WebDriverTestBase {
 
   /**
    * Tests that adding a block with default configuration works.
+   * @doesNotPerformAssertions
    */
   public function testIPEAddBlock() {
     $this->visitIPERoute();
@@ -41,6 +42,7 @@ abstract class PanelsIPETestBase extends WebDriverTestBase {
 
   /**
    * Tests that changing layout from one (default) to two columns works.
+   * @doesNotPerformAssertions
    */
   public function testIPEChangeLayout() {
     $this->visitIPERoute();
diff --git a/panels_ipe/tests/src/Unit/RemoveBlockRequestHandlerTest.php b/panels_ipe/tests/src/Unit/RemoveBlockRequestHandlerTest.php
index 8d8e966..71ccffe 100644
--- a/panels_ipe/tests/src/Unit/RemoveBlockRequestHandlerTest.php
+++ b/panels_ipe/tests/src/Unit/RemoveBlockRequestHandlerTest.php
@@ -12,7 +12,7 @@ use Symfony\Component\HttpFoundation\JsonResponse;
  */
 class RemoveBlockRequestHandlerTest extends RequestHandlerTestBase {
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->sut = new RemoveBlockRequestHandler($this->moduleHandler, $this->panelsStore, $this->tempStore);
   }
@@ -28,6 +28,7 @@ class RemoveBlockRequestHandlerTest extends RequestHandlerTestBase {
 
   /**
    * @test
+   * @doesNotPerformAssertions
    */
   public function panelsDisplayIsSavedAfterBlockRemoval() {
     $this->panelsStore->expects($this->once())->method('save');
@@ -36,6 +37,7 @@ class RemoveBlockRequestHandlerTest extends RequestHandlerTestBase {
 
   /**
    * @test
+   * @doesNotPerformAssertions
    */
   public function panelsDisplayIsSavedToTempstoreAfterBlockRemoval() {
     $this->tempStore->expects($this->once())->method('set');
diff --git a/panels_ipe/tests/src/Unit/RequestHandlerTestBase.php b/panels_ipe/tests/src/Unit/RequestHandlerTestBase.php
index 547eb3c..d749378 100644
--- a/panels_ipe/tests/src/Unit/RequestHandlerTestBase.php
+++ b/panels_ipe/tests/src/Unit/RequestHandlerTestBase.php
@@ -21,35 +21,31 @@ abstract class RequestHandlerTestBase extends TestCase {
   protected $sut;
 
   /**
-   * @var PHPUnit_Framework_MockObject_MockObject */
+   * @var \PHPUnit\Framework\MockObject\MockObject */
   protected $moduleHandler;
 
   /**
-   * @var PHPUnit_Framework_MockObject_MockObject */
+   * @var \PHPUnit\Framework\MockObject\MockObject */
   protected $panelsStore;
 
   /**
-   * @var PHPUnit_Framework_MockObject_MockObject */
+   * @var \PHPUnit\Framework\MockObject\MockObject */
   protected $tempStore;
 
   /**
-   * @var PHPUnit_Framework_MockObject_MockObject */
+   * @var \PHPUnit\Framework\MockObject\MockObject */
   protected $panelsDisplay;
 
   /**
    *
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->moduleHandler = $this->getMockForAbstractClass(ModuleHandlerInterface::class);
     $this->panelsStore = $this->getMockForAbstractClass(PanelsStorageManagerInterface::class);
-    $this->tempStore = $this->getMockBuilder(SharedTempStore::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->tempStore = $this->createMock(SharedTempStore::class);
 
-    $this->panelsDisplay = $this->getMockBuilder(PanelsDisplayVariant::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->panelsDisplay = $this->createMock(PanelsDisplayVariant::class);
   }
 
   protected function createRequest($content = NULL) {
diff --git a/panels_ipe/tests/src/Unit/UpdateLayoutRequestHandlerTest.php b/panels_ipe/tests/src/Unit/UpdateLayoutRequestHandlerTest.php
index 499a75d..0007a13 100644
--- a/panels_ipe/tests/src/Unit/UpdateLayoutRequestHandlerTest.php
+++ b/panels_ipe/tests/src/Unit/UpdateLayoutRequestHandlerTest.php
@@ -14,7 +14,7 @@ use Symfony\Component\HttpFoundation\JsonResponse;
  */
 class UpdateLayoutRequestHandlerTest extends RequestHandlerTestBase {
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->sut = new UpdateLayoutRequestHandler($this->moduleHandler, $this->panelsStore, $this->tempStore);
   }
@@ -34,9 +34,7 @@ class UpdateLayoutRequestHandlerTest extends RequestHandlerTestBase {
   }
 
   private function setPanelsDisplayExpectations() {
-    $block = $this->getMockBuilder(BlockBase::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $block = $this->createMock(BlockBase::class);
     $block->expects($this->exactly(4))->method('setConfigurationValue');
     $block->expects($this->exactly(2))
       ->method('getConfiguration')
diff --git a/src/PanelsVariantEvent.php b/src/PanelsVariantEvent.php
index 104f803..4cda70a 100644
--- a/src/PanelsVariantEvent.php
+++ b/src/PanelsVariantEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event object for events relating to Panels display variants.
  */
-class PanelsVariantEvent extends Event {
+class PanelsVariantEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The Panels display variant.
diff --git a/src/Storage/PanelsStorageManager.php b/src/Storage/PanelsStorageManager.php
index 8ddaa71..c307a34 100644
--- a/src/Storage/PanelsStorageManager.php
+++ b/src/Storage/PanelsStorageManager.php
@@ -98,10 +98,10 @@ class PanelsStorageManager extends DefaultPluginManager implements PanelsStorage
     // Allow event subscribers to react to the variant being saved.
     $event = new PanelsVariantEvent($panels_display);
 
-    $this->eventDispatcher->dispatch(PanelsEvents::VARIANT_PRE_SAVE, $event);
+    $this->eventDispatcher->dispatch($event, PanelsEvents::VARIANT_PRE_SAVE);
     $storage = $this->getStorage($panels_display->getStorageType());
     $storage->save($panels_display);
-    $this->eventDispatcher->dispatch(PanelsEvents::VARIANT_POST_SAVE, $event);
+    $this->eventDispatcher->dispatch($event, PanelsEvents::VARIANT_POST_SAVE);
   }
 
   /**
diff --git a/tests/src/Functional/PageManagerPanelsStorageIntegrationTest.php b/tests/src/Functional/PageManagerPanelsStorageIntegrationTest.php
index 08a6374..4e5dc9b 100644
--- a/tests/src/Functional/PageManagerPanelsStorageIntegrationTest.php
+++ b/tests/src/Functional/PageManagerPanelsStorageIntegrationTest.php
@@ -25,7 +25,7 @@ class PageManagerPanelsStorageIntegrationTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_tasks_block');
@@ -51,20 +51,20 @@ class PageManagerPanelsStorageIntegrationTest extends BrowserTestBase {
       'path' => 'testing',
       'variant_plugin_id' => 'panels_variant',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // Add a Panels variant which uses the IPE.
     $edit = [
       // This option won't be present at all if our integration isn't working!
       'variant_settings[builder]' => 'ipe',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // Choose a layout.
     $edit = [
       'layout' => 'layout_twocol',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // In Drupal 8.8 and later, the layout may have settings of its own. If
     // that's the case, submit the layout settings form without any changes.
@@ -74,7 +74,7 @@ class PageManagerPanelsStorageIntegrationTest extends BrowserTestBase {
     }
 
     // Finish without adding any blocks.
-    $this->drupalPostForm(NULL, [], 'Finish');
+    $this->submitForm([], 'Finish');
 
     /** @var \Drupal\page_manager\PageVariantInterface $page_variant */
     $page_variant = PageVariant::load('foo-panels_variant-0');
@@ -82,8 +82,8 @@ class PageManagerPanelsStorageIntegrationTest extends BrowserTestBase {
     $panels_display = $page_variant->getVariantPlugin();
 
     // Make sure the storage type and id were set to the right value.
-    $this->assertEqual($panels_display->getStorageType(), 'page_manager');
-    $this->assertEqual($panels_display->getStorageId(), 'foo-panels_variant-0');
+    $this->assertEquals($panels_display->getStorageType(), 'page_manager');
+    $this->assertEquals($panels_display->getStorageId(), 'foo-panels_variant-0');
   }
 
 }
diff --git a/tests/src/Functional/PanelsConfigSchemaTest.php b/tests/src/Functional/PanelsConfigSchemaTest.php
index 263dd03..48298af 100644
--- a/tests/src/Functional/PanelsConfigSchemaTest.php
+++ b/tests/src/Functional/PanelsConfigSchemaTest.php
@@ -29,7 +29,7 @@ class PanelsConfigSchemaTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->panelsManager = \Drupal::service('panels.display_manager');
@@ -55,7 +55,7 @@ class PanelsConfigSchemaTest extends BrowserTestBase {
     // This will throw an exception if it doesn't validate.
     $new_panels_display = $this->panelsManager->importDisplay($config, TRUE);
 
-    $this->assertEqual($panels_display->getConfiguration(), $new_panels_display->getConfiguration());
+    $this->assertEquals($panels_display->getConfiguration(), $new_panels_display->getConfiguration());
   }
 
 }
diff --git a/tests/src/Functional/PanelsTest.php b/tests/src/Functional/PanelsTest.php
index e43efb5..d6f9523 100644
--- a/tests/src/Functional/PanelsTest.php
+++ b/tests/src/Functional/PanelsTest.php
@@ -30,7 +30,7 @@ class PanelsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_tasks_block');
@@ -56,26 +56,26 @@ class PanelsTest extends BrowserTestBase {
       'path' => 'testing',
       'variant_plugin_id' => 'panels_variant',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // Add variant with a layout that has settings.
     $edit = [
       'page_variant_label' => 'Default',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // Choose a layout.
     $edit = [
       'layout' => 'layout_example_test',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // Update the layout's settings.
-    $this->assertFieldByName('layout_settings_wrapper[layout_settings][setting_1]', 'Default');
+    $this->assertSession()->fieldValueEquals('layout_settings_wrapper[layout_settings][setting_1]', 'Default');
     $edit = [
       'layout_settings_wrapper[layout_settings][setting_1]' => 'Abracadabra',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // Add a block.
     $this->clickLink('Add new block');
@@ -83,16 +83,25 @@ class PanelsTest extends BrowserTestBase {
     $edit = [
       'region' => 'top',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Add block');
+    $this->submitForm($edit, 'Add block');
 
     // Finish the page add wizard.
-    $this->drupalPostForm(NULL, [], 'Finish');
+    $this->submitForm([], 'Finish');
 
     // View the page and make sure the setting is present.
     $this->drupalGet('testing');
-    $this->assertText('Blah:');
-    $this->assertText('Abracadabra');
-    $this->assertText('Powered by Drupal');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Blah:');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Abracadabra');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Powered by Drupal');
   }
 
   /**
@@ -112,19 +121,19 @@ class PanelsTest extends BrowserTestBase {
       'path' => 'testing',
       'variant_plugin_id' => 'panels_variant',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // Use default variant settings.
     $edit = [
       'page_variant_label' => 'Default',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // Choose a simple layout.
     $edit = [
       'layout' => 'layout_onecol',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Next');
+    $this->submitForm($edit, 'Next');
 
     // In Drupal 8.8 and later, the layout may have settings of its own. If
     // that's the case, submit the layout settings form without any changes.
@@ -137,13 +146,13 @@ class PanelsTest extends BrowserTestBase {
     $edit = [
       'page_title' => '[user:name]',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Finish');
+    $this->submitForm($edit, 'Finish');
 
     // View the page and make sure the page title is valid.
     $this->drupalGet('testing');
     // We expect "'" to be escaped only once, which is why we're doing a raw
     // assertion here.
-    $this->assertRaw('<h1 class="page-title">My User&#039;s Name</h1>');
+    $this->assertSession()->responseContains('<h1 class="page-title">My User&#039;s Name</h1>');
   }
 
 }
diff --git a/tests/src/Unit/PanelsDisplayVariantTest.php b/tests/src/Unit/PanelsDisplayVariantTest.php
index d41ab27..8c7b67f 100644
--- a/tests/src/Unit/PanelsDisplayVariantTest.php
+++ b/tests/src/Unit/PanelsDisplayVariantTest.php
@@ -24,6 +24,7 @@ use Prophecy\Argument;
  */
 class PanelsDisplayVariantTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @var \Drupal\Core\Session\AccountInterface
    */
@@ -79,7 +80,7 @@ class PanelsDisplayVariantTest extends UnitTestCase {
    */
   protected $variant;
 
-  public function setUp() {
+  public function setUp(): void {
     $this->account = $this->prophesize(AccountInterface::class);
     $this->contextHandler = $this->prophesize(ContextHandlerInterface::class);
     $this->uuidGenerator = $this->prophesize(UuidInterface::class);
diff --git a/tests/src/Unit/PanelsStorageTest.php b/tests/src/Unit/PanelsStorageTest.php
index c84163d..b35ccea 100644
--- a/tests/src/Unit/PanelsStorageTest.php
+++ b/tests/src/Unit/PanelsStorageTest.php
@@ -22,6 +22,7 @@ use Prophecy\Argument;
  */
 class PanelsStorageTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @var \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant|\Prophecy\Prophecy\ProphecyInterface
    */
@@ -50,7 +51,7 @@ class PanelsStorageTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->panelsDisplay = $this->prophesize(PanelsDisplayVariant::class);
diff --git a/tests/src/Unit/StandardDisplayBuilderTest.php b/tests/src/Unit/StandardDisplayBuilderTest.php
index 4f703f1..3d63a6f 100644
--- a/tests/src/Unit/StandardDisplayBuilderTest.php
+++ b/tests/src/Unit/StandardDisplayBuilderTest.php
@@ -17,6 +17,7 @@ use Prophecy\Argument;
  */
 class StandardDisplayBuilderTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @var \Drupal\panels\Plugin\DisplayBuilder\StandardDisplayBuilder
    */
@@ -25,7 +26,7 @@ class StandardDisplayBuilderTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $context_handler = $this->prophesize(ContextHandlerInterface::class)
       ->reveal();
     $account = $this->prophesize(AccountInterface::class)
