modules/contrib/feature_toggle/feature_toggle.module
modules/contrib/feature_toggle/feature_toggle.theme.inc
modules/contrib/feature_toggle/src/Event/FeatureUpdateEvent.php
modules/contrib/feature_toggle/src/Event/FeatureUpdateEvents.php
modules/contrib/feature_toggle/src/Feature.php
modules/contrib/feature_toggle/src/FeatureInterface.php
modules/contrib/feature_toggle/src/FeatureManager.php
modules/contrib/feature_toggle/src/FeatureManagerInterface.php
modules/contrib/feature_toggle/src/FeatureStatus.php
modules/contrib/feature_toggle/src/FeatureStatusInterface.php
modules/contrib/feature_toggle/src/FeatureUtilsTrait.php
modules/contrib/feature_toggle/src/Form/FeatureAddForm.php
modules/contrib/feature_toggle/src/Form/FeatureDeleteForm.php
modules/contrib/feature_toggle/src/Form/FeatureToggleForm.php
modules/contrib/feature_toggle/src/Plugin/Condition/FeatureToggle.php
modules/contrib/feature_toggle/tests/src/Functional/FeatureToggleJavascriptTest.php
modules/contrib/feature_toggle/tests/src/Functional/FeatureToggleWorkflowTest.php
modules/contrib/feature_toggle/tests/src/Kernel/FeatureToggleConditionTest.php
modules/contrib/feature_toggle/tests/src/Kernel/FeatureToggleEventsTest.php

6 files with changes
====================

1) modules/contrib/feature_toggle/tests/src/Kernel/FeatureToggleEventsTest.php:59

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->state = \Drupal::state();
     $this->featureManager = $this->container->get('feature_toggle.feature_manager');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/feature_toggle/tests/src/Kernel/FeatureToggleConditionTest.php:56

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->conditionManager = $this->container->get('plugin.manager.condition');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/feature_toggle/tests/src/Functional/FeatureToggleWorkflowTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->assertSession = $this->assertSession();
@@ @@
       'edit-name' => $name,
       'edit-label' => $label,
     ];
-    $this->drupalPostForm('admin/config/system/feature_toggle/add', $form_data, t('Save'));
+    $this->drupalGet('admin/config/system/feature_toggle/add');
+    $this->submitForm($form_data, t('Save'));

     // New feature created should be shown.
     $this->assertSession->linkByHrefExists('admin/config/system/feature_toggle/' . $name . '/delete');
@@ @@
     $form_data = [
       $name => 1,
     ];
-    $this->drupalPostForm(NULL, $form_data, t('Save'));
+    $this->submitForm($form_data, t('Save'));

     // Check that checkbox is checked.
     $this->assertSession->checkboxChecked($name);
@@ @@
     $form_data = [
       $name => 0,
     ];
-    $this->drupalPostForm(NULL, $form_data, t('Save'));
+    $this->submitForm($form_data, t('Save'));

     // Check that checkbox is  not checked.
     $this->assertSession->checkboxNotChecked($name);
@@ @@
     $this->clickLink('Delete');
     $this->assertSession->addressEquals('admin/config/system/feature_toggle/' . $name . '/delete');
     $this->assertSession->pageTextContains('Are you sure you want to delete the feature ' . $label . '?');
-    $this->drupalPostForm(NULL, [], t('Delete'));
+    $this->submitForm([], t('Delete'));

     // Confirm that feature has been removed.
     $this->assertSession->linkByHrefNotExists('admin/config/system/feature_toggle/' . $name . '/delete');
@@ @@
     $form_data = [
       $name => 1,
     ];
-    $this->drupalPostForm(NULL, $form_data, t('Save'));
+    $this->submitForm($form_data, t('Save'));

     // Check that checkbox is checked.
     $this->assertSession->checkboxChecked($name);
@@ @@
     $form_data = [
       $name => 0,
     ];
-    $this->drupalPostForm(NULL, $form_data, t('Save'));
+    $this->submitForm($form_data, t('Save'));

     // Check that checkbox is  not checked.
     $this->assertSession->checkboxNotChecked($name);
@@ @@

   /**
    * Tests the custom access checker to delete page.
+   * @doesNotPerformAssertions
    */
   public function testDeleteAccess() {
     $this->drupalGet('admin/config/system/feature_toggle/' . $this->randomMachineName() . '/delete');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/feature_toggle/tests/src/Functional/FeatureToggleJavascriptTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->assertSession = $this->assertSession();
@@ @@
     $settings = $this->getDrupalSettings();
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
     foreach ($features as $feature) {
-      $this->assertSession->assert(in_array($feature->name(), $feature_toggle_data), 'Variable present');
+      $this->assertTrue(in_array($feature->name(), $feature_toggle_data), 'Variable present');
       // Set features to 0.
       $this->featureStatus->setStatus($feature, FALSE);
     }
@@ @@
     $settings = $this->getDrupalSettings();
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
     foreach ($features as $key => $feature) {
-      $this->assertSession->assert(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
+      $this->assertTrue(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
       // Enable only even features.
       if ($key % 2 == 0) {
         $this->featureStatus->setStatus($feature, TRUE);
@@ @@
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
     foreach ($features as $key => $feature) {
       if ($key % 2 == 0) {
-        $this->assertSession->assert(in_array($feature->name(), $feature_toggle_data), 'Variable present');
+        $this->assertTrue(in_array($feature->name(), $feature_toggle_data), 'Variable present');
       }
       else {
-        $this->assertSession->assert(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
+        $this->assertTrue(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
       }
     }

@@ @@
     $this->drupalGet('');
     $settings = $this->getDrupalSettings();
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
-    $this->assertSession->assert(empty($feature_toggle_data), 'Array is empty');
+    $this->assertTrue(empty($feature_toggle_data), 'Array is empty');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/feature_toggle/src/FeatureStatus.php:59

    ---------- begin diff ----------
@@ @@
    */
   protected function dispatch(FeatureInterface $feature, $status) {
     $event = new FeatureUpdateEvent($feature, $status);
-    $this->eventDispatcher->dispatch(FeatureUpdateEvents::UPDATE, $event);
-    $this->eventDispatcher->dispatch(FeatureUpdateEvents::UPDATE . '.' . $feature->name(), $event);
+    $this->eventDispatcher->dispatch($event, FeatureUpdateEvents::UPDATE);
+    $this->eventDispatcher->dispatch($event, FeatureUpdateEvents::UPDATE . '.' . $feature->name());
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/feature_toggle/src/Event/FeatureUpdateEvent.php:7

    ---------- begin diff ----------
@@ @@
 /**
  * Feature Update Event class.
  */
-class FeatureUpdateEvent extends Event {
+class FeatureUpdateEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The updated feature.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

