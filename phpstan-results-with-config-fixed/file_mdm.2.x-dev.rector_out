modules/contrib/file_mdm/file_mdm.install
modules/contrib/file_mdm/file_mdm.module
modules/contrib/file_mdm/file_mdm_exif/src/ExifTagMapper.php
modules/contrib/file_mdm/file_mdm_exif/src/ExifTagMapperInterface.php
modules/contrib/file_mdm/file_mdm_exif/src/Plugin/FileMetadata/Exif.php
modules/contrib/file_mdm/file_mdm_exif/tests/src/Kernel/FileMetadataExifTest.php
modules/contrib/file_mdm/file_mdm_font/src/Plugin/FileMetadata/Font.php
modules/contrib/file_mdm/file_mdm_font/tests/src/Kernel/FileMetadataFontTest.php
modules/contrib/file_mdm/src/Element/FileMetadataCaching.php
modules/contrib/file_mdm/src/FileMetadata.php
modules/contrib/file_mdm/src/FileMetadataException.php
modules/contrib/file_mdm/src/FileMetadataInterface.php
modules/contrib/file_mdm/src/FileMetadataManager.php
modules/contrib/file_mdm/src/FileMetadataManagerInterface.php
modules/contrib/file_mdm/src/Form/SettingsForm.php
modules/contrib/file_mdm/src/Plugin/Annotation/FileMetadata.php
modules/contrib/file_mdm/src/Plugin/FileMetadata/FileMetadataPluginBase.php
modules/contrib/file_mdm/src/Plugin/FileMetadata/GetImageSize.php
modules/contrib/file_mdm/src/Plugin/FileMetadataPluginInterface.php
modules/contrib/file_mdm/src/Plugin/FileMetadataPluginManager.php
modules/contrib/file_mdm/tests/src/Kernel/FileMetadataManagerTest.php
modules/contrib/file_mdm/tests/src/Kernel/FileMetadataManagerTestBase.php

3 files with changes
====================

1) modules/contrib/file_mdm/tests/src/Kernel/FileMetadataManagerTest.php:24

    ---------- begin diff ----------
@@ @@
   public function testFileMetadata() {
     // Prepare a copy of test files.
     $this->fileSystem->copy('core/tests/fixtures/files/image-test.png', 'public://', FileSystemInterface::EXISTS_REPLACE);
-    $this->fileSystem->copy(drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
     // The image files that will be tested.
     $image_files = [
       [
         // Pass a path instead of the URI.
-        'uri' => drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg',
+        'uri' => \Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg',
         'count_keys' => 7,
         'test_keys' => [
           [0, 100],
@@ @@
       ],
       [
         // JPEG Image with GPS data.
-        'uri' => drupal_get_path('module', 'file_mdm') . '/tests/files/1024-2006_1011_093752.jpg',
+        'uri' => \Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/1024-2006_1011_093752.jpg',
         'count_keys' => 7,
         'test_keys' => [
           [0, 1024],
@@ @@
       ],
       [
         // TIFF image.
-        'uri' => drupal_get_path('module', 'file_mdm') . '/tests/files/sample-1.tiff',
+        'uri' => \Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/sample-1.tiff',
         'count_keys' => 5,
         'test_keys' => [
           [0, 174],
@@ @@
    */
   public function testFileMetadataCaching() {
     // Prepare a copy of test files.
-    $this->fileSystem->copy(drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
     $this->fileSystem->copy('core/tests/fixtures/files/image-test.gif', 'public://', FileSystemInterface::EXISTS_REPLACE);
     $this->fileSystem->copy('core/tests/fixtures/files/image-test.png', 'public://', FileSystemInterface::EXISTS_REPLACE);

@@ @@
       ],
       [
         // Pass a path instead of the URI.
-        'uri' => drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg',
+        'uri' => \Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg',
         'cache' => FALSE,
         'delete' => FALSE,
         'count_keys' => 7,
@@ @@
     $fmdm = $this->container->get('file_metadata_manager');

     // Copy the test file to a temp location.
-    $this->fileSystem->copy(drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg', 'temporary://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg', 'temporary://', FileSystemInterface::EXISTS_REPLACE);

     // Test setting local temp path explicitly. The files should be parsed
     // even if not available on the URI.
@@ @@
     $file_system = $this->container->get('file_system');

     // Copy the test file to dummy-remote wrapper.
-    $this->fileSystem->copy(drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg', 'dummy-remote://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg', 'dummy-remote://', FileSystemInterface::EXISTS_REPLACE);

     foreach ($image_files as $image_file) {
       $file_metadata = $fmdm->uri($image_file['uri']);
@@ @@
     // Copy a test file to test directory.
     $test_directory = 'public://test-images/';
     $this->fileSystem->prepareDirectory($test_directory, FileSystemInterface::CREATE_DIRECTORY);
-    $this->fileSystem->copy(drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg', $test_directory, FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg', $test_directory, FileSystemInterface::EXISTS_REPLACE);

     // Get file metadata object.
     $file_metadata = $fmdm->uri('public://test-images/test-exif.jpeg');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/file_mdm/file_mdm_exif/tests/src/Kernel/FileMetadataExifTest.php:44

    ---------- begin diff ----------
@@ @@
     // Prepare a copy of test files.
     $this->fileSystem->copy('core/tests/fixtures/files/image-test.jpg', 'public://', FileSystemInterface::EXISTS_REPLACE);
     $this->fileSystem->copy('core/tests/fixtures/files/image-test.png', 'public://', FileSystemInterface::EXISTS_REPLACE);
-    $this->fileSystem->copy(drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
-    $this->fileSystem->copy(drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg', 'temporary://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg', 'public://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg', 'temporary://', FileSystemInterface::EXISTS_REPLACE);
     // The image files that will be tested.
     $image_files = [
       [
         // Pass a path instead of the URI.
-        'uri' => drupal_get_path('module', 'file_mdm') . '/tests/files/test-exif.jpeg',
+        'uri' => \Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/test-exif.jpeg',
         'count_keys' => 47,
         'test_keys' => [
           ['Orientation', 8],
@@ @@
       ],
       [
         // JPEG Image with GPS data.
-        'uri' => drupal_get_path('module', 'file_mdm') . '/tests/files/1024-2006_1011_093752.jpg',
+        'uri' => \Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/1024-2006_1011_093752.jpg',
         'count_keys' => 59,
         'test_keys' => [
           ['Orientation', 1],
@@ @@
       ],
       [
         // TIFF image.
-        'uri' => drupal_get_path('module', 'file_mdm') . '/tests/files/sample-1.tiff',
+        'uri' => \Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/sample-1.tiff',
         'count_keys' => 15,
         'test_keys' => [
           ['Orientation', 1],
@@ @@
     $fmdm = $this->container->get('file_metadata_manager');

     // Copy test file to public://.
-    $this->fileSystem->copy(drupal_get_path('module', 'image_effects') . '/tests/images/portrait-painting.jpg', 'public://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('image_effects') . '/tests/images/portrait-painting.jpg', 'public://', FileSystemInterface::EXISTS_REPLACE);
     $file_uri = 'public://portrait-painting.jpg';
     $file_metadata = $fmdm->uri($file_uri);

@@ @@
     $fmdm = $this->container->get('file_metadata_manager');

     // Copy test file to public://.
-    $this->fileSystem->copy(drupal_get_path('module', 'file_mdm') . '/tests/files/sample-1.tiff', 'public://', FileSystemInterface::EXISTS_REPLACE);
+    $this->fileSystem->copy(\Drupal::service('extension.list.module')->getPath('file_mdm') . '/tests/files/sample-1.tiff', 'public://', FileSystemInterface::EXISTS_REPLACE);
     $file_uri = 'public://sample-1.tiff';
     $file_metadata = $fmdm->uri($file_uri);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/file_mdm/file_mdm_exif/src/Plugin/FileMetadata/Exif.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The MIME type guessing service.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var \Symfony\Component\Mime\MimeTypesInterface
    */
   protected $mimeTypeGuesser;

@@ @@
    *   The cache service.
    * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mime_type_guesser
+   * @param \Symfony\Component\Mime\MimeTypesInterface $mime_type_guesser
    *   The MIME type mapping service.
    * @param \Drupal\file_mdm_exif\ExifTagMapperInterface $tag_mapper
    *   The EXIF tag mapping service.
@@ @@
    * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager service.
    */
-  public function __construct(array $configuration, $plugin_id, array $plugin_definition, CacheBackendInterface $cache_service, ConfigFactoryInterface $config_factory, MimeTypeGuesserInterface $mime_type_guesser, ExifTagMapperInterface $tag_mapper, StreamWrapperManagerInterface $stream_wrapper_manager) {
+  public function __construct(array $configuration, $plugin_id, array $plugin_definition, CacheBackendInterface $cache_service, ConfigFactoryInterface $config_factory, \Symfony\Component\Mime\MimeTypesInterface $mime_type_guesser, ExifTagMapperInterface $tag_mapper, StreamWrapperManagerInterface $stream_wrapper_manager) {
     parent::__construct($configuration, $plugin_id, $plugin_definition, $cache_service, $config_factory, $stream_wrapper_manager);
     $this->mimeTypeGuesser = $mime_type_guesser;
     $this->tagMapper = $tag_mapper;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

