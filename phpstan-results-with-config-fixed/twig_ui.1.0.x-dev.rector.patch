diff --git a/tests/src/Functional/TemplateFormTest.php b/tests/src/Functional/TemplateFormTest.php
index 090958d..7f48e58 100644
--- a/tests/src/Functional/TemplateFormTest.php
+++ b/tests/src/Functional/TemplateFormTest.php
@@ -308,11 +308,11 @@ class TemplateFormTest extends BrowserTestBase {
     $element = $page
       ->findField('label')
       ->getValue();
-    $this->assertEqual($element, 'Clone of Node');
+    $this->assertEquals($element, 'Clone of Node');
     $element = $page
       ->findField('id')
       ->getValue();
-    $this->assertEqual($element, 'clone_node');
+    $this->assertEquals($element, 'clone_node');
     $this->assertTrue($page->hasUncheckedField('themes[grant]'));
 
     // Change theme suggestion and select a theme so clone can be saved.
diff --git a/tests/src/Functional/TemplateLoadAjaxControllerTest.php b/tests/src/Functional/TemplateLoadAjaxControllerTest.php
index ae94f25..66875d9 100644
--- a/tests/src/Functional/TemplateLoadAjaxControllerTest.php
+++ b/tests/src/Functional/TemplateLoadAjaxControllerTest.php
@@ -114,7 +114,7 @@ class TemplateLoadAjaxControllerTest extends BrowserTestBase {
     $this->assertJson($controller_return);
     $controller_return = json_decode($controller_return);
 
-    $block_module_path = drupal_get_path('module', 'block');
+    $block_module_path = \Drupal::service('extension.list.module')->getPath('block');
     $template_path = $block_module_path . '/templates/block.html.twig';
     $abs_template_path = \Drupal::service('file_system')->realpath($template_path);
     $template_code = file_get_contents($abs_template_path);
diff --git a/tests/src/Functional/TemplateManagerTest.php b/tests/src/Functional/TemplateManagerTest.php
index 10b7e7d..8933704 100644
--- a/tests/src/Functional/TemplateManagerTest.php
+++ b/tests/src/Functional/TemplateManagerTest.php
@@ -126,9 +126,9 @@ class TemplateManagerTest extends BrowserTestBase {
   public function testGetTemplate() {
     $this->createTemplates();
     $template = $this->templateManager->getTemplate('node');
-    $this->assertEqual($template->label(), 'Node');
+    $this->assertEquals($template->label(), 'Node');
     $template = $this->templateManager->getTemplate('node_page');
-    $this->assertEqual($template->label(), 'Node - Page');
+    $this->assertEquals($template->label(), 'Node - Page');
     $template = $this->templateManager->getTemplate('invalid');
     $this->assertNull($template);
   }
@@ -140,10 +140,10 @@ class TemplateManagerTest extends BrowserTestBase {
    */
   public function testTemplateExists() {
     $this->createTemplates();
-    $this->assertEqual($this->templateManager->templateExists('node', 'stark'), 'node');
-    $this->assertEqual($this->templateManager->templateExists('node', 'grant'), 'node');
+    $this->assertEquals($this->templateManager->templateExists('node', 'stark'), 'node');
+    $this->assertEquals($this->templateManager->templateExists('node', 'grant'), 'node');
     $this->assertFalse($this->templateManager->templateExists('node', 'perkins'));
-    $this->assertEqual($this->templateManager->templateExists('node__page', 'grant'), 'node_page');
+    $this->assertEquals($this->templateManager->templateExists('node__page', 'grant'), 'node_page');
     $this->assertFalse($this->templateManager->templateExists('node__page', 'stark'));
     $this->assertFalse($this->templateManager->templateExists('node__page', 'perkins'));
     $this->assertFalse($this->templateManager->templateExists('node__event', 'grant'));
@@ -228,7 +228,7 @@ class TemplateManagerTest extends BrowserTestBase {
     $this->assertStringEqualsFile('public://twig_ui/grant/node--news.html.twig', '{{ content }}' . PHP_EOL . 'Test template 1');
     $this->assertFileExists('public://twig_ui/perkins/node--news.html.twig');
     $this->assertStringEqualsFile('public://twig_ui/perkins/node--news.html.twig', '{{ content }}' . PHP_EOL . 'Test template 1');
-    $this->assertFileNotExists('public://twig_ui/stark/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--news.html.twig');
 
     // Test contents of files written to file system.
     $template2 = TwigTemplate::create([
@@ -260,14 +260,14 @@ class TemplateManagerTest extends BrowserTestBase {
     $this->templateManager->syncTemplateFiles($template);
 
     $this->assertFileExists('public://twig_ui/stark/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/stark/node--news-page.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--news-page.html.twig');
     $this->assertFileExists('public://twig_ui/grant/node--news-page.html.twig');
     $this->assertFileExists('public://twig_ui/perkins/node--news-page.html.twig');
-    $this->assertFileNotExists('public://twig_ui/stark/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--event.html.twig');
 
     // Test change in selected themes.
     $template->set('original', clone $template);
@@ -275,14 +275,14 @@ class TemplateManagerTest extends BrowserTestBase {
     $this->templateManager->syncTemplateFiles($template);
 
     $this->assertFileExists('public://twig_ui/stark/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--news.html.twig');
-    $this->assertFileNotExists('public://twig_ui/stark/node--news-page.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--news.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--news-page.html.twig');
     $this->assertFileExists('public://twig_ui/grant/node--news-page.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--news-page.html.twig');
-    $this->assertFileNotExists('public://twig_ui/stark/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--news-page.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--event.html.twig');
 
     // Test change in template code.
     $template->set('original', clone $template);
@@ -300,9 +300,9 @@ class TemplateManagerTest extends BrowserTestBase {
     $this->template3->enable();
     $this->template3->save();
 
-    $this->assertFileNotExists('public://twig_ui/stark/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node--event.html.twig');
     $this->assertFileExists('public://twig_ui/grant/node--event.html.twig');
-    $this->assertFileNotExists('public://twig_ui/perkins/node--event.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/perkins/node--event.html.twig');
 
     $this->assertStringEqualsFile('public://twig_ui/grant/node--event.html.twig', '{{ content }}' . PHP_EOL . 'Test template 3 (originally disabled)');
   }
@@ -321,15 +321,15 @@ class TemplateManagerTest extends BrowserTestBase {
 
     $this->templateManager->deleteTemplateFiles($this->template);
 
-    $this->assertFileNotExists('public://twig_ui/stark/node.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node.html.twig');
     $this->assertFileExists('public://twig_ui/grant/node--page.html.twig');
 
     $this->templateManager->deleteTemplateFiles($this->template2);
 
-    $this->assertFileNotExists('public://twig_ui/stark/node.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node.html.twig');
-    $this->assertFileNotExists('public://twig_ui/grant/node--page.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/stark/node.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node.html.twig');
+    $this->assertFileDoesNotExist('public://twig_ui/grant/node--page.html.twig');
   }
 
   /**
@@ -339,10 +339,10 @@ class TemplateManagerTest extends BrowserTestBase {
    */
   public function testGetDirectoryPathByTheme() {
     $this->createTemplates();
-    $this->assertEqual($this->templateManager->getDirectoryPathByTheme('grant'), 'public://twig_ui/grant');
-    $this->assertEqual($this->templateManager->getDirectoryPathByTheme('grant', FALSE), PublicStream::basePath() . '/twig_ui/grant');
-    $this->assertEqual($this->templateManager->getDirectoryPathByTheme('perkins'), 'public://twig_ui/perkins');
-    $this->assertEqual($this->templateManager->getDirectoryPathByTheme('perkins', FALSE), PublicStream::basePath() . '/twig_ui/perkins');
+    $this->assertEquals($this->templateManager->getDirectoryPathByTheme('grant'), 'public://twig_ui/grant');
+    $this->assertEquals($this->templateManager->getDirectoryPathByTheme('grant', FALSE), PublicStream::basePath() . '/twig_ui/grant');
+    $this->assertEquals($this->templateManager->getDirectoryPathByTheme('perkins'), 'public://twig_ui/perkins');
+    $this->assertEquals($this->templateManager->getDirectoryPathByTheme('perkins', FALSE), PublicStream::basePath() . '/twig_ui/perkins');
   }
 
   /**
@@ -352,7 +352,7 @@ class TemplateManagerTest extends BrowserTestBase {
    */
   public function testGetTemplatePath() {
     $this->createTemplates();
-    $this->assertEqual($this->templateManager->getTemplatePath($this->template2, 'grant'), 'public://twig_ui/grant/node--page.html.twig');
+    $this->assertEquals($this->templateManager->getTemplatePath($this->template2, 'grant'), 'public://twig_ui/grant/node--page.html.twig');
   }
 
   /**
@@ -362,7 +362,7 @@ class TemplateManagerTest extends BrowserTestBase {
    */
   public function testGetTemplateFileName() {
     $this->createTemplates();
-    $this->assertEqual($this->templateManager->getTemplateFileName($this->template2), 'node--page.html.twig');
+    $this->assertEquals($this->templateManager->getTemplateFileName($this->template2), 'node--page.html.twig');
   }
 
   /**
@@ -377,16 +377,16 @@ class TemplateManagerTest extends BrowserTestBase {
 
     // Execute ::prepareTemplatesDirectory().
     $return = $this->templateManager->prepareTemplatesDirectory();
-    $this->assertEqual($return, TRUE);
+    $this->assertEquals($return, TRUE);
     $this->assertFileExists('public://twig_ui/.htaccess');
 
     // Attempt to create templates directory when public:// is unwritable.
     $this->deleteTemplatesDirectory();
     $this->makeUnwritable('public://');
-    $this->assertDirectoryNotIsWritable('public://');
+    $this->assertDirectoryIsNotWritable('public://');
 
     $return = $this->templateManager->prepareTemplatesDirectory();
-    $this->assertEqual($return, 'Unable to create templates directory');
+    $this->assertEquals($return, 'Unable to create templates directory');
   }
 
 }
diff --git a/tests/src/FunctionalJavascript/TemplateFormTest.php b/tests/src/FunctionalJavascript/TemplateFormTest.php
index 8bd7c54..6a3cf02 100644
--- a/tests/src/FunctionalJavascript/TemplateFormTest.php
+++ b/tests/src/FunctionalJavascript/TemplateFormTest.php
@@ -129,7 +129,7 @@ class TemplateFormTest extends WebDriverTestBase {
     $assert_session->assertWaitOnAjaxRequest();
 
     // Test loading of the block template file for the Grant theme.
-    $block_module_path = drupal_get_path('module', 'block');
+    $block_module_path = \Drupal::service('extension.list.module')->getPath('block');
     $template_path = $block_module_path . '/templates/block.html.twig';
 
     // Verify the file path.
@@ -200,7 +200,7 @@ class TemplateFormTest extends WebDriverTestBase {
     // Verify default configuration in data-codemirror attribute.
     $element = $page->find('xpath', '//textarea[@name="template_code"]');
     $data_codemirror = $element->getAttribute('data-codemirror');
-    $this->assertEqual($data_codemirror, '{"mode":"text\/x-twig","lineNumbers":true}');
+    $this->assertEquals($data_codemirror, '{"mode":"text\/x-twig","lineNumbers":true}');
 
     // Verify selected default behavior.
     $assert_session->elementExists('css', '.form-item-template-code .cme-toolbar');
diff --git a/tests/src/Kernel/InstallTest.php b/tests/src/Kernel/InstallTest.php
index 8ab1e1d..d281e60 100644
--- a/tests/src/Kernel/InstallTest.php
+++ b/tests/src/Kernel/InstallTest.php
@@ -52,7 +52,7 @@ class InstallTest extends KernelTestBase {
     $query->condition('w.message', 'Preparation of the Twig UI templates directory resulted in the following error: @message', '=');
     $results = $query->execute()->fetchAll();
 
-    $this->assertEqual($results[0]->message, 'Preparation of the Twig UI templates directory resulted in the following error: @message');
+    $this->assertEquals($results[0]->message, 'Preparation of the Twig UI templates directory resulted in the following error: @message');
   }
 
   /**
@@ -72,7 +72,7 @@ class InstallTest extends KernelTestBase {
         'twig_ui',
       ]);
 
-    $this->assertDirectoryNotExists($directory);
+    $this->assertDirectoryDoesNotExist($directory);
   }
 
   /**
diff --git a/tests/src/Kernel/RequirementsTest.php b/tests/src/Kernel/RequirementsTest.php
index 9f72439..3f09807 100644
--- a/tests/src/Kernel/RequirementsTest.php
+++ b/tests/src/Kernel/RequirementsTest.php
@@ -36,15 +36,15 @@ class RequirementsTest extends KernelTestBase {
 
     // Check requirements after install.
     $requirements = twig_ui_requirements('runtime');
-    $this->assertEqual($requirements['twig_ui_templates']['severity'], REQUIREMENT_OK);
-    $this->assertEqual($requirements['twig_ui_templates']['value'], 'Twig UI templates directory exists and is protected.');
+    $this->assertEquals($requirements['twig_ui_templates']['severity'], REQUIREMENT_OK);
+    $this->assertEquals($requirements['twig_ui_templates']['value'], 'Twig UI templates directory exists and is protected.');
 
     // Remove the templates directory and verify requirements error.
     $this->deleteTemplatesDirectory();
 
     $requirements = twig_ui_requirements('runtime');
-    $this->assertEqual($requirements['twig_ui_templates']['severity'], REQUIREMENT_ERROR);
-    $this->assertEqual($requirements['twig_ui_templates']['description'], 'The Twig UI templates directory does not exist: ' . $template_manager::DIRECTORY_PATH . '.');
+    $this->assertEquals($requirements['twig_ui_templates']['severity'], REQUIREMENT_ERROR);
+    $this->assertEquals($requirements['twig_ui_templates']['description'], 'The Twig UI templates directory does not exist: ' . $template_manager::DIRECTORY_PATH . '.');
 
     // Add back templates directory but remove .htaccess and verify
     // requirements error.
@@ -52,8 +52,8 @@ class RequirementsTest extends KernelTestBase {
     $this->deleteHtaccessFile();
 
     $requirements = twig_ui_requirements('runtime');
-    $this->assertEqual($requirements['twig_ui_templates']['severity'], REQUIREMENT_ERROR);
-    $this->assertEqual($requirements['twig_ui_templates']['description'], 'The Twig UI templates directory is unprotected: ' . $template_manager::DIRECTORY_PATH . '.');
+    $this->assertEquals($requirements['twig_ui_templates']['severity'], REQUIREMENT_ERROR);
+    $this->assertEquals($requirements['twig_ui_templates']['description'], 'The Twig UI templates directory is unprotected: ' . $template_manager::DIRECTORY_PATH . '.');
   }
 
 }
