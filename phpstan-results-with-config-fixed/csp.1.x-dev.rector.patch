diff --git a/csp_extras/csp_extras.module b/csp_extras/csp_extras.module
index 38d7fca..c5eb7b2 100644
--- a/csp_extras/csp_extras.module
+++ b/csp_extras/csp_extras.module
@@ -12,7 +12,7 @@ function csp_extras_library_info_alter(&$libraries, $extension) {
 
   // Add module ajax.js to core library.
   if ($extension == 'core' && isset($libraries['drupal.ajax'])) {
-    $path = '/' . drupal_get_path('module', 'csp_extras') . '/js/ajax.js';
+    $path = '/' . \Drupal::service('extension.list.module')->getPath('csp_extras') . '/js/ajax.js';
     $libraries['drupal.ajax']['js'][$path] = [
       'version' => '1.13',
     ];
diff --git a/csp_extras/src/Ajax/AjaxResponseAttachmentsProcessor.php b/csp_extras/src/Ajax/AjaxResponseAttachmentsProcessor.php
index 1050a2a..977718d 100644
--- a/csp_extras/src/Ajax/AjaxResponseAttachmentsProcessor.php
+++ b/csp_extras/src/Ajax/AjaxResponseAttachmentsProcessor.php
@@ -166,7 +166,7 @@ class AjaxResponseAttachmentsProcessor implements AttachmentsResponseProcessorIn
             'type' => 'stylesheet',
             'attributes' => [
               'media' => $css_asset['media'],
-              'href' => file_url_transform_relative(file_create_url($css_asset['data'])),
+              'href' => \Drupal::service('file_url_generator')->generateString($css_asset['data']),
             ],
           ];
 
@@ -190,7 +190,7 @@ class AjaxResponseAttachmentsProcessor implements AttachmentsResponseProcessorIn
           $asset = [
             'type' => 'script',
             'attributes' => [
-              'src' => file_url_transform_relative(file_create_url($js_asset['data'])),
+              'src' => \Drupal::service('file_url_generator')->generateString($js_asset['data']),
             ],
           ];
 
diff --git a/src/Event/PolicyAlterEvent.php b/src/Event/PolicyAlterEvent.php
index 7c298d4..df97aec 100644
--- a/src/Event/PolicyAlterEvent.php
+++ b/src/Event/PolicyAlterEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\HttpFoundation\Response;
 /**
  * Event for altering a response CSP Policy.
  */
-class PolicyAlterEvent extends Event {
+class PolicyAlterEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * A CSP policy.
diff --git a/src/EventSubscriber/ResponseCspSubscriber.php b/src/EventSubscriber/ResponseCspSubscriber.php
index 6807302..569cf97 100644
--- a/src/EventSubscriber/ResponseCspSubscriber.php
+++ b/src/EventSubscriber/ResponseCspSubscriber.php
@@ -83,10 +83,10 @@ class ResponseCspSubscriber implements EventSubscriberInterface {
   /**
    * Add Content-Security-Policy header to response.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The Response event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
@@ -174,8 +174,8 @@ class ResponseCspSubscriber implements EventSubscriberInterface {
       }
 
       $this->eventDispatcher->dispatch(
-        CspEvents::POLICY_ALTER,
-        new PolicyAlterEvent($policy, $response)
+        new PolicyAlterEvent($policy, $response),
+        CspEvents::POLICY_ALTER
       );
 
       if (($headerValue = $policy->getHeaderValue())) {
diff --git a/tests/src/Unit/Controller/ReportUriTest.php b/tests/src/Unit/Controller/ReportUriTest.php
index f7fc636..15d5b0c 100644
--- a/tests/src/Unit/Controller/ReportUriTest.php
+++ b/tests/src/Unit/Controller/ReportUriTest.php
@@ -17,6 +17,7 @@ use Symfony\Component\HttpFoundation\RequestStack;
  */
 class ReportUriTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Valid JSON should get sent to the logger.
    */
diff --git a/tests/src/Unit/EventSubscriber/CoreCspSubscriberTest.php b/tests/src/Unit/EventSubscriber/CoreCspSubscriberTest.php
index 5733e4b..8b62c3c 100644
--- a/tests/src/Unit/EventSubscriber/CoreCspSubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/CoreCspSubscriberTest.php
@@ -51,19 +51,13 @@ class CoreCspSubscriberTest extends UnitTestCase {
   public function setUp(): void {
     parent::setUp();
 
-    $this->libraryDependencyResolver = $this->getMockBuilder(LibraryDependencyResolverInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->libraryDependencyResolver = $this->createMock(LibraryDependencyResolverInterface::class);
     $this->libraryDependencyResolver->method('getLibrariesWithDependencies')
       ->willReturnArgument(0);
 
-    $this->moduleHandler = $this->getMockBuilder(ModuleHandlerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->moduleHandler = $this->createMock(ModuleHandlerInterface::class);
 
-    $this->response = $this->getMockBuilder(HtmlResponse::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->response = $this->createMock(HtmlResponse::class);
 
     $this->coreCspSubscriber = new CoreCspSubscriber($this->libraryDependencyResolver, $this->moduleHandler);
   }
diff --git a/tests/src/Unit/EventSubscriber/Ie9CspSubscriberTest.php b/tests/src/Unit/EventSubscriber/Ie9CspSubscriberTest.php
index f2b3dd1..c7d94dd 100644
--- a/tests/src/Unit/EventSubscriber/Ie9CspSubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/Ie9CspSubscriberTest.php
@@ -37,13 +37,9 @@ class Ie9CspSubscriberTest extends UnitTestCase {
   public function setUp(): void {
     parent::setUp();
 
-    $this->moduleHandler = $this->getMockBuilder(ModuleHandlerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->moduleHandler = $this->createMock(ModuleHandlerInterface::class);
 
-    $this->response = $this->getMockBuilder(HtmlResponse::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->response = $this->createMock(HtmlResponse::class);
   }
 
   /**
@@ -66,7 +62,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
         return $parameter === 'ie9';
       }));
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -95,7 +91,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
         return $parameter === 'ie9';
       }));
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -138,7 +134,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
         return $parameter === 'ie9';
       }));
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -180,7 +176,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
       ->with($this->equalTo('ie9'))
       ->willReturn(TRUE);
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -221,7 +217,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
         return $parameter === 'ie9';
       }));
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
diff --git a/tests/src/Unit/EventSubscriber/ResponseCspSubscriberTest.php b/tests/src/Unit/EventSubscriber/ResponseCspSubscriberTest.php
index edfb854..ce93cd5 100644
--- a/tests/src/Unit/EventSubscriber/ResponseCspSubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/ResponseCspSubscriberTest.php
@@ -24,28 +24,28 @@ class ResponseCspSubscriberTest extends UnitTestCase {
   /**
    * Mock HTTP Response.
    *
-   * @var \Drupal\Core\Render\HtmlResponse|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Render\HtmlResponse|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $response;
 
   /**
    * Mock Response Event.
    *
-   * @var \Symfony\Component\HttpKernel\Event\FilterResponseEvent|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Symfony\Component\HttpKernel\Event\ResponseEvent|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $event;
 
   /**
    * The Library Policy service.
    *
-   * @var \Drupal\csp\LibraryPolicyBuilder|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\csp\LibraryPolicyBuilder|\PHPUnit\Framework\MockObject\MockObject
    */
   private $libraryPolicy;
 
   /**
    * The Reporting Handler Plugin Manager service.
    *
-   * @var \Drupal\csp\ReportingHandlerPluginManager|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\csp\ReportingHandlerPluginManager|\PHPUnit\Framework\MockObject\MockObject
    */
   private $reportingHandlerPluginManager;
 
@@ -62,21 +62,14 @@ class ResponseCspSubscriberTest extends UnitTestCase {
   public function setUp(): void {
     parent::setUp();
 
-    $this->response = $this->getMockBuilder(HtmlResponse::class)
-      ->disableOriginalConstructor()
-      ->getMock();
-    $this->response->headers = $this->getMockBuilder(ResponseHeaderBag::class)
-      ->disableOriginalConstructor()
-      ->getMock();
-    $responseCacheableMetadata = $this->getMockBuilder(CacheableMetadata::class)
-      ->getMock();
+    $this->response = $this->createMock(HtmlResponse::class);
+    $this->response->headers = $this->createMock(ResponseHeaderBag::class);
+    $responseCacheableMetadata = $this->createMock(CacheableMetadata::class);
     $this->response->method('getCacheableMetadata')
       ->willReturn($responseCacheableMetadata);
 
-    /** @var \Symfony\Component\HttpKernel\Event\FilterResponseEvent|\PHPUnit_Framework_MockObject_MockObject $event */
-    $this->event = $this->getMockBuilder(FilterResponseEvent::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    /** @var \Symfony\Component\HttpKernel\Event\ResponseEvent|\PHPUnit\Framework\MockObject\MockObject $event */
+    $this->event = $this->createMock(\Symfony\Component\HttpKernel\Event\ResponseEvent::class);
     $this->event->expects($this->any())
       ->method('isMasterRequest')
       ->willReturn(TRUE);
@@ -84,17 +77,11 @@ class ResponseCspSubscriberTest extends UnitTestCase {
       ->method('getResponse')
       ->willReturn($this->response);
 
-    $this->libraryPolicy = $this->getMockBuilder(LibraryPolicyBuilder::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->libraryPolicy = $this->createMock(LibraryPolicyBuilder::class);
 
-    $this->reportingHandlerPluginManager = $this->getMockBuilder(ReportingHandlerPluginManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->reportingHandlerPluginManager = $this->createMock(ReportingHandlerPluginManager::class);
 
-    $this->eventDispatcher = $this->getMockBuilder(EventDispatcher::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->eventDispatcher = $this->createMock(EventDispatcher::class);
   }
 
   /**
@@ -113,7 +100,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testPolicyAlterEvent() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -176,7 +163,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    * @covers ::onKernelResponse
    */
   public function testEmptyDirective() {
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -210,7 +197,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    * @covers ::onKernelResponse
    */
   public function testUnoptimizedResponse() {
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -263,7 +250,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testOptimizedResponse() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -312,7 +299,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testEnforcedResponse() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -361,7 +348,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testBothPolicies() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -427,7 +414,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testWithLibraryDirective() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -482,7 +469,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testDisabledLibraryDirective() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
diff --git a/tests/src/Unit/LibraryPolicyBuilderTest.php b/tests/src/Unit/LibraryPolicyBuilderTest.php
index 438d4e1..5793944 100644
--- a/tests/src/Unit/LibraryPolicyBuilderTest.php
+++ b/tests/src/Unit/LibraryPolicyBuilderTest.php
@@ -25,28 +25,28 @@ class LibraryPolicyBuilderTest extends UnitTestCase {
   /**
    * Mock Module Handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $moduleHandler;
 
   /**
    * Mock Active Theme.
    *
-   * @var \Drupal\Core\Theme\ActiveTheme|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Theme\ActiveTheme|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $activeTheme;
 
   /**
    * Mock Theme Handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Extension\ThemeHandlerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $themeHandler;
 
   /**
    * Mock Library Discovery.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $libraryDiscovery;
 
@@ -58,17 +58,11 @@ class LibraryPolicyBuilderTest extends UnitTestCase {
 
     $this->cache = new MemoryBackend();
 
-    $this->moduleHandler = $this->getMockBuilder(ModuleHandler::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->moduleHandler = $this->createMock(ModuleHandler::class);
 
-    $this->themeHandler = $this->getMockBuilder(ThemeHandler::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->themeHandler = $this->createMock(ThemeHandler::class);
 
-    $this->libraryDiscovery = $this->getMockBuilder(LibraryDiscovery::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->libraryDiscovery = $this->createMock(LibraryDiscovery::class);
   }
 
   /**
