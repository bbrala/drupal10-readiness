modules/contrib/field_formatter/field_formatter.module
modules/contrib/field_formatter/src/Plugin/Field/FieldFormatter/FieldFormatterBase.php
modules/contrib/field_formatter/src/Plugin/Field/FieldFormatter/FieldFormatterFromViewDisplay.php
modules/contrib/field_formatter/src/Plugin/Field/FieldFormatter/FieldFormatterWithInlineSettings.php
modules/contrib/field_formatter/src/Plugin/Field/FieldFormatter/FieldLink.php
modules/contrib/field_formatter/src/Plugin/Field/FieldFormatter/FieldWrapperBase.php
modules/contrib/field_formatter/src/Tests/FieldFormatterFromViewDisplayUITest.php
modules/contrib/field_formatter/src/Tests/FieldFormatterWithInlineSettingsUITest.php
modules/contrib/field_formatter/tests/src/Functional/FieldFormatterFunctionalTest.php
modules/contrib/field_formatter/tests/src/Kernel/Plugin/Field/FieldFormatter/FieldFormatterFromViewDisplayTest.php
modules/contrib/field_formatter/tests/src/Kernel/Plugin/Field/FieldFormatter/FieldFormatterWithInlineSettingsTest.php
modules/contrib/field_formatter/tests/src/Kernel/Plugin/Field/FieldFormatter/FieldLinkTest.php

3 files with changes
====================

1) modules/contrib/field_formatter/tests/src/Kernel/Plugin/Field/FieldFormatter/FieldLinkTest.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('entity_test');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/field_formatter/src/Tests/FieldFormatterWithInlineSettingsUITest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser([
@@ @@
       'name[0][value]' => $term_name,
       'field_test_field[0][value]' => $field,
     ];
-    $this->drupalPostForm(NULL, $edit_term, $this->t('Save'));
-    $this->assertText("Created new term $term_name.", 'Created term.');
+    $this->submitForm($edit_term, $this->t('Save'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains("Created new term $term_name.");

     // Add content.
     $this->drupalGet('node/add/test_content_type');
@@ @@
       'title[0][value]' => $content_name,
       'field_field_test_ref_inline[0][target_id]' => $term_name,
     ];
-    $this->drupalPostForm(NULL, $edit_content, $this->t('Save'));
-    $this->assertRaw('<div class="field__label">test_field</div>', 'Field is correctly displayed on node page.');
-    $this->assertRaw('<div class="field__item">' . $field . '</div>', "Field's content was found.");
+    $this->submitForm($edit_content, $this->t('Save'));
+    $this->assertSession()->responseContains('<div class="field__label">test_field</div>');
+    $this->assertSession()->responseContains('<div class="field__item">' . $field . '</div>');

     // Check that on display management all fields of the destination entity
     // are available (all bundles).
     $this->drupalGet('admin/structure/types/manage/test_content_type/display');
     // Open the formatter settings.
-    $this->drupalPostForm(NULL, [], 'field_field_test_ref_inline_settings_edit');
-    $this->assertFieldByName('fields[field_field_test_ref_inline][settings_edit_form][settings][field_name]', NULL, 'Destination fields dropdown element found.');
+    $this->submitForm([], 'field_field_test_ref_inline_settings_edit');
+    $this->assertSession()->fieldExists('fields[field_field_test_ref_inline][settings_edit_form][settings][field_name]');
     $field_select_element = $this->xpath('//*[@name="fields[field_field_test_ref_inline][settings_edit_form][settings][field_name]"]');
     $field_select_id = $field_select_element[0]->getAttribute('id');
-    $this->assertOption($field_select_id, 'field_test_field', 'First target field is an available option.');
-    $this->assertOption($field_select_id, 'field_test_field2', 'Second target field is an available option.');
-    $this->assertFieldByName('fields[field_field_test_ref_inline][settings_edit_form][settings][label]', 'above', 'The "Label" dropdown element exists and is set to "Above".');
+    $this->assertSession()->optionExists($field_select_id, 'field_test_field', 'First target field is an available option.');
+    $this->assertSession()->optionExists($field_select_id, 'field_test_field2', 'Second target field is an available option.');
+    $this->assertSession()->fieldValueEquals('fields[field_field_test_ref_inline][settings_edit_form][settings][label]', 'above');

   }
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * AssertOptionRector
 * AssertRawRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/field_formatter/src/Tests/FieldFormatterFromViewDisplayUITest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser([
@@ @@
       'name[0][value]' => $term_name,
       'field_test_field[0][value]' => $field,
     ];
-    $this->drupalPostForm(NULL, $edit_term, $this->t('Save'));
-    $this->assertText("Created new term $term_name.", 'Created term.');
+    $this->submitForm($edit_term, $this->t('Save'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains("Created new term $term_name.");

     // Add content.
     $this->drupalGet('node/add/test_content_type');
@@ @@
       'title[0][value]' => $content_name,
       'field_field_test_ref[0][target_id]' => $term_name,
     ];
-    $this->drupalPostForm(NULL, $edit_content, $this->t('Save'));
-    $this->assertRaw('<div class="field__label">test_field</div>', 'Field is correctly displayed on node page.');
-    $this->assertRaw('<div class="field__item">' . $field . '</div>', "Field's content was found.");
+    $this->submitForm($edit_content, $this->t('Save'));
+    $this->assertSession()->responseContains('<div class="field__label">test_field</div>');
+    $this->assertSession()->responseContains('<div class="field__item">' . $field . '</div>');
   }

   /**
@@ @@
     $this->drupalLogin($account);

     $this->drupalGet('admin/structure/types/manage/test_content_type/display');
-    $this->drupalPostForm(NULL, [], 'field_field_test_ref_settings_edit');
-    $this->assertFieldByName('fields[field_field_test_ref][settings_edit_form][settings][view_mode]', NULL, 'Field to select the view mode is available.');
-    $this->assertRaw('<option value="default">Default</option>', 'Default view mode can be selected.');
-    $this->assertFieldByName('fields[field_field_test_ref][settings_edit_form][settings][field_name]', NULL, 'Field to select the field name is available.');
+    $this->submitForm([], 'field_field_test_ref_settings_edit');
+    $this->assertSession()->fieldExists('fields[field_field_test_ref][settings_edit_form][settings][view_mode]');
+    $this->assertSession()->responseContains('<option value="default">Default</option>');
+    $this->assertSession()->fieldExists('fields[field_field_test_ref][settings_edit_form][settings][field_name]');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * AssertRawRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

