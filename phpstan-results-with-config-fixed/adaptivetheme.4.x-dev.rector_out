themes/contrib/adaptivetheme/at_core/at_core.theme
themes/contrib/adaptivetheme/at_core/forms/color/color_submit.php
themes/contrib/adaptivetheme/at_core/forms/ext/breadcrumb_submit.php
themes/contrib/adaptivetheme/at_core/forms/ext/ckeditor.php
themes/contrib/adaptivetheme/at_core/forms/ext/custom_css.php
themes/contrib/adaptivetheme/at_core/forms/ext/custom_css_submit.php
themes/contrib/adaptivetheme/at_core/forms/ext/devel.php
themes/contrib/adaptivetheme/at_core/forms/ext/extension_clearcache.php
themes/contrib/adaptivetheme/at_core/forms/ext/extension_settings.php
themes/contrib/adaptivetheme/at_core/forms/ext/extension_settings_skin.php
themes/contrib/adaptivetheme/at_core/forms/ext/extension_settings_submit.php
themes/contrib/adaptivetheme/at_core/forms/ext/extension_settings_validate.php
themes/contrib/adaptivetheme/at_core/forms/ext/fonts.inc
themes/contrib/adaptivetheme/at_core/forms/ext/fonts.php
themes/contrib/adaptivetheme/at_core/forms/ext/fonts_submit.php
themes/contrib/adaptivetheme/at_core/forms/ext/fonts_validate.php
themes/contrib/adaptivetheme/at_core/forms/ext/images.php
themes/contrib/adaptivetheme/at_core/forms/ext/images_submit.php
themes/contrib/adaptivetheme/at_core/forms/ext/legacy_browsers.php
themes/contrib/adaptivetheme/at_core/forms/ext/markup_overrides.php
themes/contrib/adaptivetheme/at_core/forms/ext/mobile_blocks.php
themes/contrib/adaptivetheme/at_core/forms/ext/mobile_blocks_submit.php
themes/contrib/adaptivetheme/at_core/forms/ext/responsive_menus.php
themes/contrib/adaptivetheme/at_core/forms/ext/shortcodes.php
themes/contrib/adaptivetheme/at_core/forms/ext/slideshows.php
themes/contrib/adaptivetheme/at_core/forms/ext/titles.php
themes/contrib/adaptivetheme/at_core/forms/ext/titles_submit.php
themes/contrib/adaptivetheme/at_core/forms/ext/touch_icons.php
themes/contrib/adaptivetheme/at_core/forms/layout/layouts.php
themes/contrib/adaptivetheme/at_core/forms/layout/layouts_submit.php
themes/contrib/adaptivetheme/at_core/forms/layout/layouts_validate.php
themes/contrib/adaptivetheme/at_core/forms/theme_info.php
themes/contrib/adaptivetheme/at_core/includes/alters.inc
themes/contrib/adaptivetheme/at_core/includes/form_alters.inc
themes/contrib/adaptivetheme/at_core/includes/misc.inc
themes/contrib/adaptivetheme/at_core/includes/preprocess.inc
themes/contrib/adaptivetheme/at_core/includes/suggestions.inc
themes/contrib/adaptivetheme/at_core/includes/theme.inc
themes/contrib/adaptivetheme/at_core/src/Ext/ExtGet.php
themes/contrib/adaptivetheme/at_core/src/File/DirectoryOperations.php
themes/contrib/adaptivetheme/at_core/src/File/FileOperations.php
themes/contrib/adaptivetheme/at_core/src/Layout/Layout.php
themes/contrib/adaptivetheme/at_core/src/Layout/LayoutCompatible.php
themes/contrib/adaptivetheme/at_core/src/Layout/LayoutDiscoveryPlugin.php
themes/contrib/adaptivetheme/at_core/src/Layout/LayoutLoad.php
themes/contrib/adaptivetheme/at_core/src/Layout/LayoutSubmit.php
themes/contrib/adaptivetheme/at_core/src/Theme/ThemeConfig.php
themes/contrib/adaptivetheme/at_core/src/Theme/ThemeInfo.php
themes/contrib/adaptivetheme/at_core/src/Theme/ThemeSettingsConfig.php
themes/contrib/adaptivetheme/at_core/src/Theme/ThemeSettingsInfo.php
themes/contrib/adaptivetheme/at_core/theme-settings.php

13 files with changes
=====================

1) themes/contrib/adaptivetheme/at_core/theme-settings.php:41

    ---------- begin diff ----------
@@ @@
   $config = \Drupal::config($theme . '.settings')->get('settings');

   // Common paths.
-  $at_core_path = drupal_get_path('theme', 'at_core');
-  $subtheme_path = drupal_get_path('theme', $theme);
+  $at_core_path = \Drupal::service('extension.list.theme')->getPath('at_core');
+  $subtheme_path = \Drupal::service('extension.list.theme')->getPath($theme);
   $generated_files_path = NULL;

   // Path to save generated CSS files. We don't want this happening for at_core or the generator.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


2) themes/contrib/adaptivetheme/at_core/src/Theme/ThemeConfig.php:91

    ---------- begin diff ----------
@@ @@
         $theme['config_skin'] = $active_theme_config;
         $theme['provider'] = $theme['base'];
         $theme['provider_info'] = $this->getBaseThemeInfo();
-        $theme['path'] = drupal_get_path('theme', $theme['base']);
+        $theme['path'] = \Drupal::service('extension.list.theme')->getPath($theme['base']);
         $theme['path_skin'] = $theme_path;
       }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) themes/contrib/adaptivetheme/at_core/src/Layout/LayoutSubmit.php:34

    ---------- begin diff ----------
@@ @@
     $this->layout_config = $layout_compatible_data['layout_config'];
     $this->css_config = $layout_compatible_data['css_config'];
     $this->layout_name = $layout_compatible_data['layout_name'];
-    $this->layout_path = drupal_get_path('theme', $this->layout_config['layout_provider']) . '/layout/' . $this->layout_name;
+    $this->layout_path = \Drupal::service('extension.list.theme')->getPath($this->layout_config['layout_provider']) . '/layout/' . $this->layout_name;
     $this->form_values = $values;
   }

@@ @@
     $template_file = $this->layout_path . '/' . $this->layout_name . '.html.twig';

     // Path to target theme where the template will be saved.
-    $path = drupal_get_path('theme', $this->theme_name);
+    $path = \Drupal::service('extension.list.theme')->getPath($this->theme_name);

     // Remove if this exists, its now deprecated, this is a BC layer so to speak.
     $directoryOperations->directoryRemove($path . '/templates/page');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) themes/contrib/adaptivetheme/at_core/src/Layout/Layout.php:22

    ---------- begin diff ----------
@@ @@
   public function __construct($theme_name, $layout_name) {
     $this->theme_name = $theme_name;
     $this->layout_name = $layout_name;
-    $this->layout_path = drupal_get_path('theme', $this->theme_name) . '/layout/' . $this->layout_name;
+    $this->layout_path = \Drupal::service('extension.list.theme')->getPath($this->theme_name) . '/layout/' . $this->layout_name;
     $this->layout_cid = $this->theme_name . ':' . $this->layout_name;
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) themes/contrib/adaptivetheme/at_core/includes/theme.inc:7

    ---------- begin diff ----------
@@ @@
  * Implements hook_theme().
  */
 function at_core_theme() {
-  $path = drupal_get_path('theme', 'at_core');
+  $path = \Drupal::service('extension.list.theme')->getPath('at_core');
   return [
     // Define the row template/hook.
     'row' => [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


6) themes/contrib/adaptivetheme/at_core/includes/preprocess.inc:113

    ---------- begin diff ----------
@@ @@
         $icon_path_default = $variables['theme']['path'] . '/' . Html::escape($config['icon_path_default']);
         if (file_exists($icon_path_default) === TRUE) {
           $icons['touch_icon_iphone_1x'] = [
-            'href' => file_create_url($icon_path_default),
+            'href' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon_path_default),
             'size' => '60x60',
             'rel' => $touch_rel,
           ];
@@ @@
         $icon_path_ipad = $variables['theme']['path'] . '/' . Html::escape($config['apple_touch_icon_path_ipad']);
         if (file_exists($icon_path_ipad) === TRUE) {
           $icons['touch_icon_ipad_1x'] = [
-            'href' => file_create_url($icon_path_ipad),
+            'href' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon_path_ipad),
             'size' => '76x76',
             'rel' => $touch_rel,
           ];
@@ @@
         $icon_path_iphone_retina = $variables['theme']['path'] . '/' . Html::escape($config['apple_touch_icon_path_iphone_retina']);
         if (file_exists($icon_path_iphone_retina) === TRUE) {
           $icons['touch_icon_iphone_2x'] = [
-            'href' => file_create_url($icon_path_iphone_retina),
+            'href' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon_path_iphone_retina),
             'size' => '120x120',
             'rel' => $touch_rel,
           ];
@@ @@
         $icon_path_ipad_retina = $variables['theme']['path'] . '/' . Html::escape($config['apple_touch_icon_path_ipad_retina']);
         if (file_exists($icon_path_ipad_retina) === TRUE) {
           $icons['touch_icon_ipad_2x'] = [
-            'href' => file_create_url($icon_path_ipad_retina),
+            'href' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon_path_ipad_retina),
             'size' => '152x152',
             'rel' => $touch_rel,
           ];
@@ @@
         $icon_path_ipad_retina_3x = $variables['theme']['path'] . '/' . Html::escape($config['apple_touch_icon_path_ipad_retina_3x']);
         if (file_exists($icon_path_ipad_retina_3x) === TRUE) {
           $icons['touch_icon_iphone_3x'] = [
-            'href' => file_create_url($icon_path_ipad_retina_3x),
+            'href' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon_path_ipad_retina_3x),
             'size' => '180x180',
             'rel' => $touch_rel,
           ];
@@ @@
         $icon_path_chrome_android = $variables['theme']['path'] . '/' . Html::escape($config['apple_touch_icon_path_chrome_android']);
         if (file_exists($icon_path_chrome_android) === TRUE) {
           $icons['touch_icon_chrome_android'] = [
-            'href' => file_create_url($icon_path_chrome_android),
+            'href' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon_path_chrome_android),
             'size' => '192x192',
             'rel' => 'icon',
           ];
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


7) themes/contrib/adaptivetheme/at_core/includes/alters.inc:43

    ---------- begin diff ----------
@@ @@
   }

   // Generated files path.
-  $generated_files_path = drupal_get_path('theme', $theme['provider']) . '/styles/css/generated';
+  $generated_files_path = \Drupal::service('extension.list.theme')->getPath($theme['provider']) . '/styles/css/generated';

   // Attach at.settings, we need the ajaxPageState theme name.
   $page['#attached']['library'][] = 'at_core/at.settings';
@@ @@
             $mimic = TRUE;
             global $base_url;
             // AT Cores "Mimic" ckeditor skin.
-            $editor_skin = $base_url . '/' . drupal_get_path('theme', 'at_core') . '/ckeditor/skins/mimic/';
+            $editor_skin = $base_url . '/' . \Drupal::service('extension.list.theme')->getPath('at_core') . '/ckeditor/skins/mimic/';
             if (isset($settings['editor']['formats'])) {
               foreach (array_keys($settings['editor']['formats']) as $text_format_id) {
                 if ($settings['editor']['formats'][$text_format_id]['editor'] === 'ckeditor') {
@@ @@
       foreach ($settings['editor']['formats'] as $format_key => $format_values) {
         if ($mimic === TRUE) {
           // Alter ckeditor-iframe CSS.
-          $settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'][] = file_create_url($theme['path'] . '/styles/css/components/ckeditor-iframe.css');
+          $settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'][] = \Drupal::service('file_url_generator')->generateAbsoluteString($theme['path'] . '/styles/css/components/ckeditor-iframe.css');
           // Remove cores version, it just gets in the way.
           $settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'] = array_merge(
             array_diff($settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'], ['/core/modules/ckeditor/css/ckeditor-iframe.css'])
@@ @@
         // Add styles to settings.
         if (!empty($styles)) {
           foreach ($styles as $stylesheet) {
-            $settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'][] = file_create_url($stylesheet);
+            $settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'][] = \Drupal::service('file_url_generator')->generateAbsoluteString($stylesheet);
           }
         }
       }
@@ @@
               // Add the color module saved files.
               foreach ($color_paths as $color_key => $color_path) {
                 if (basename($color_path) === 'color.css') {
-                  $settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'][] = file_create_url($color_path);
+                  $settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'][] = \Drupal::service('file_url_generator')->generateAbsoluteString($color_path);
                 }
               }
             }
             // Else add the themes color component stylesheet.
             else {
-              $settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'][] = file_create_url($theme['path'] . '/styles/css/components/color.css');
+              $settings['editor']['formats'][$format_key]['editorSettings']['contentsCss'][] = \Drupal::service('file_url_generator')->generateAbsoluteString($theme['path'] . '/styles/css/components/color.css');
             }
           }
         }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector


8) themes/contrib/adaptivetheme/at_core/forms/layout/layouts_submit.php:49

    ---------- begin diff ----------
@@ @@
     }

     // Delete suggestion files.
-    $templates_directory = drupal_get_path('theme', $theme) . '/templates/generated';
+    $templates_directory = \Drupal::service('extension.list.theme')->getPath($theme) . '/templates/generated';
     $css_directory = $values['settings_generated_files_path'];
     foreach ($values as $values_key => $values_value) {
       if (substr($values_key, 0, 18) === 'delete_suggestion_') {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


9) themes/contrib/adaptivetheme/at_core/forms/layout/layouts.php:468

    ---------- begin diff ----------
@@ @@
 ];

 // Layout submit handlers.
-include_once drupal_get_path('theme', 'at_core') . '/forms/layout/layouts_validate.php';
-include_once drupal_get_path('theme', 'at_core') . '/forms/layout/layouts_submit.php';
+include_once \Drupal::service('extension.list.theme')->getPath('at_core') . '/forms/layout/layouts_validate.php';
+include_once \Drupal::service('extension.list.theme')->getPath('at_core') . '/forms/layout/layouts_submit.php';
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


10) themes/contrib/adaptivetheme/at_core/forms/ext/extension_settings_validate.php:19

    ---------- begin diff ----------
@@ @@
   $build_info = $form_state->getBuildInfo();
   $values = $form_state->getValues();
   $theme = $build_info['args'][0];
-  $at_core_path = drupal_get_path('theme', 'at_core');
+  $at_core_path = \Drupal::service('extension.list.theme')->getPath('at_core');

   if ($values['settings_enable_extensions'] === 1) {
     // Validation handler for Fonts.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


11) themes/contrib/adaptivetheme/at_core/forms/ext/extension_settings_submit.php:17

    ---------- begin diff ----------
@@ @@
   $build_info = $form_state->getBuildInfo();
   $values = $form_state->getValues();
   $theme = $build_info['args'][0];
-  $at_core_path = drupal_get_path('theme', 'at_core');
+  $at_core_path = \Drupal::service('extension.list.theme')->getPath('at_core');

   // Don't let this timeout easily.
   set_time_limit(60);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


12) themes/contrib/adaptivetheme/at_core/forms/ext/extension_settings.php:5

    ---------- begin diff ----------
@@ @@
  */

 // Submit handlers for the advanced settings.
-include_once drupal_get_path('theme', 'at_core') . '/forms/ext/extension_settings_validate.php';
-include_once drupal_get_path('theme', 'at_core') . '/forms/ext/extension_settings_submit.php';
+include_once \Drupal::service('extension.list.theme')->getPath('at_core') . '/forms/ext/extension_settings_validate.php';
+include_once \Drupal::service('extension.list.theme')->getPath('at_core') . '/forms/ext/extension_settings_submit.php';

 $settings_extensions_form_open = theme_get_setting('settings.extensions_form_open', $theme);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


13) themes/contrib/adaptivetheme/at_core/forms/color/color_submit.php:47

    ---------- begin diff ----------
@@ @@
   // Make sure enough memory is available.
   if (isset($info['base_image'])) {
     // Fetch source image dimensions.
-    $source = drupal_get_path('theme', $theme) . '/' . $info['base_image'];
+    $source = \Drupal::service('extension.list.theme')->getPath($theme) . '/' . $info['base_image'];
     list($width, $height) = getimagesize($source);

     // We need at least a copy of the source and a target buffer of the same
@@ @@
   }
   $paths['target'] = $paths['target'] . '/';
   $paths['id'] = $id;
-  $paths['source'] = drupal_get_path('theme', $theme) . '/';
+  $paths['source'] = \Drupal::service('extension.list.theme')->getPath($theme) . '/';
   $paths['files'] = $paths['map'] = [];

   // Save palette and logo location.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 13 files have been changed by Rector                                      

