diff --git a/modules/entity_form/src/Tests/InlineEntityIntegrationTest.php b/modules/entity_form/src/Tests/InlineEntityIntegrationTest.php
index 59e3687..4ad82c1 100644
--- a/modules/entity_form/src/Tests/InlineEntityIntegrationTest.php
+++ b/modules/entity_form/src/Tests/InlineEntityIntegrationTest.php
@@ -32,7 +32,7 @@ class InlineEntityIntegrationTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Delete unnecessary entity browser.
     $browser = $this->container->get('entity_type.manager')->getStorage('entity_browser')->load('entity_browser_test_entity_form');
diff --git a/modules/entity_form/tests/src/FunctionalJavascript/EntityFormWidgetTest.php b/modules/entity_form/tests/src/FunctionalJavascript/EntityFormWidgetTest.php
index 80269bb..db53f66 100644
--- a/modules/entity_form/tests/src/FunctionalJavascript/EntityFormWidgetTest.php
+++ b/modules/entity_form/tests/src/FunctionalJavascript/EntityFormWidgetTest.php
@@ -39,7 +39,7 @@ class EntityFormWidgetTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'foo', 'name' => 'Foo']);
diff --git a/modules/example/tests/src/FunctionalJavascript/EntityBrowserExampleTest.php b/modules/example/tests/src/FunctionalJavascript/EntityBrowserExampleTest.php
index b415c2d..5cb8f32 100644
--- a/modules/example/tests/src/FunctionalJavascript/EntityBrowserExampleTest.php
+++ b/modules/example/tests/src/FunctionalJavascript/EntityBrowserExampleTest.php
@@ -25,6 +25,7 @@ class EntityBrowserExampleTest extends BrowserTestBase {
 
   /**
    * Tests Entity Browser example module.
+   * @doesNotPerformAssertions
    */
   public function testExampleInstall() {
     // If we came this far example module installed successfully.
diff --git a/src/Events/EventBase.php b/src/Events/EventBase.php
index 9346731..4739266 100644
--- a/src/Events/EventBase.php
+++ b/src/Events/EventBase.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Base implementation of entity browser events.
  */
-class EventBase extends Event {
+class EventBase extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Entity browser id.
diff --git a/src/Plugin/EntityBrowser/Display/IFrame.php b/src/Plugin/EntityBrowser/Display/IFrame.php
index 3eda8aa..454a112 100644
--- a/src/Plugin/EntityBrowser/Display/IFrame.php
+++ b/src/Plugin/EntityBrowser/Display/IFrame.php
@@ -142,7 +142,7 @@ class IFrame extends DisplayBase implements DisplayRouterInterface {
     /** @var \Drupal\entity_browser\Events\RegisterJSCallbacks $event */
     $js_event_object = new RegisterJSCallbacks($this->configuration['entity_browser_id'], $this->getUuid());
     $js_event_object->registerCallback('Drupal.entityBrowser.selectionCompleted');
-    $callback_event = $this->eventDispatcher->dispatch(Events::REGISTER_JS_CALLBACKS, $js_event_object);
+    $callback_event = $this->eventDispatcher->dispatch($js_event_object, Events::REGISTER_JS_CALLBACKS);
     $original_path = $this->currentPath->getPath();
 
     $data = [
@@ -160,7 +160,7 @@ class IFrame extends DisplayBase implements DisplayRouterInterface {
       ],
     ];
     $event_object = new AlterEntityBrowserDisplayData($this->configuration['entity_browser_id'], $this->getUuid(), $this->getPluginDefinition(), $form_state, $data);
-    $event = $this->eventDispatcher->dispatch(Events::ALTER_BROWSER_DISPLAY_DATA, $event_object);
+    $event = $this->eventDispatcher->dispatch($event_object, Events::ALTER_BROWSER_DISPLAY_DATA);
     $data = $event->getData();
     return [
       '#theme_wrappers' => ['container'],
@@ -205,10 +205,10 @@ class IFrame extends DisplayBase implements DisplayRouterInterface {
    * Intercepts default response and injects response that will trigger JS to
    * propagate selected entities upstream.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   Response event.
    */
-  public function propagateSelection(FilterResponseEvent $event) {
+  public function propagateSelection(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $render = [
       '#attached' => [
         'library' => ['entity_browser/' . $this->pluginDefinition['id'] . '_selection'],
diff --git a/src/Plugin/EntityBrowser/Display/Modal.php b/src/Plugin/EntityBrowser/Display/Modal.php
index 01562b2..b7885a5 100644
--- a/src/Plugin/EntityBrowser/Display/Modal.php
+++ b/src/Plugin/EntityBrowser/Display/Modal.php
@@ -32,7 +32,7 @@ class Modal extends IFrame {
     DisplayBase::displayEntityBrowser($element, $form_state, $complete_form, $persistent_data);
     $js_event_object = new RegisterJSCallbacks($this->configuration['entity_browser_id'], $this->getUuid());
     $js_event_object->registerCallback('Drupal.entityBrowser.selectionCompleted');
-    $js_event = $this->eventDispatcher->dispatch(Events::REGISTER_JS_CALLBACKS, $js_event_object);
+    $js_event = $this->eventDispatcher->dispatch($js_event_object, Events::REGISTER_JS_CALLBACKS);
     $original_path = $this->currentPath->getPath();
 
     $data = [
@@ -47,7 +47,7 @@ class Modal extends IFrame {
       ],
     ];
     $event_object = new AlterEntityBrowserDisplayData($this->configuration['entity_browser_id'], $this->getUuid(), $this->getPluginDefinition(), $form_state, $data);
-    $event = $this->eventDispatcher->dispatch(Events::ALTER_BROWSER_DISPLAY_DATA, $event_object);
+    $event = $this->eventDispatcher->dispatch($event_object, Events::ALTER_BROWSER_DISPLAY_DATA);
     $data = $event->getData();
     return [
       '#theme_wrappers' => ['container'],
diff --git a/src/Plugin/Field/FieldWidget/FileBrowserWidget.php b/src/Plugin/Field/FieldWidget/FileBrowserWidget.php
index e298ab1..42787ad 100644
--- a/src/Plugin/Field/FieldWidget/FileBrowserWidget.php
+++ b/src/Plugin/Field/FieldWidget/FileBrowserWidget.php
@@ -67,7 +67,7 @@ class FileBrowserWidget extends EntityReferenceBrowserWidget {
   /**
    * The mime type guesser service.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var \Symfony\Component\Mime\MimeTypesInterface
    */
   protected $mimeTypeGuesser;
 
@@ -98,10 +98,10 @@ class FileBrowserWidget extends EntityReferenceBrowserWidget {
    *   The current user.
    * @param \Drupal\Core\Messenger\MessengerInterface $messenger
    *   The messenger.
-   * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mime_type_guesser
+   * @param \Symfony\Component\Mime\MimeTypesInterface $mime_type_guesser
    *   The mime type guesser service.
    */
-  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager, FieldWidgetDisplayManager $field_display_manager, ConfigFactoryInterface $config_factory, EntityDisplayRepositoryInterface $display_repository, ModuleHandlerInterface $module_handler, AccountInterface $current_user, MimeTypeGuesserInterface $mime_type_guesser, MessengerInterface $messenger) {
+  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager, FieldWidgetDisplayManager $field_display_manager, ConfigFactoryInterface $config_factory, EntityDisplayRepositoryInterface $display_repository, ModuleHandlerInterface $module_handler, AccountInterface $current_user, \Symfony\Component\Mime\MimeTypesInterface $mime_type_guesser, MessengerInterface $messenger) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $third_party_settings, $entity_type_manager, $field_display_manager, $module_handler, $current_user, $messenger);
     $this->entityTypeManager = $entity_type_manager;
     $this->fieldDisplayManager = $field_display_manager;
diff --git a/src/SelectionDisplayBase.php b/src/SelectionDisplayBase.php
index 7591acb..338060e 100644
--- a/src/SelectionDisplayBase.php
+++ b/src/SelectionDisplayBase.php
@@ -156,11 +156,11 @@ abstract class SelectionDisplayBase extends PluginBase implements SelectionDispl
   protected function selectionDone(FormStateInterface $form_state) {
     $form_state->set(['entity_browser', 'selection_completed'], TRUE);
     $this->eventDispatcher->dispatch(
-      Events::DONE,
       new SelectionDoneEvent(
         $this->configuration['entity_browser_id'],
         $form_state->get(['entity_browser', 'instance_uuid'])
-      ));
+      ),
+      Events::DONE);
   }
 
 }
diff --git a/src/WidgetBase.php b/src/WidgetBase.php
index f5d2ea7..e869db3 100644
--- a/src/WidgetBase.php
+++ b/src/WidgetBase.php
@@ -340,12 +340,12 @@ abstract class WidgetBase extends PluginBase implements WidgetInterface, Contain
     $selected_entities = array_merge($selected_entities, $entities);
 
     $this->eventDispatcher->dispatch(
-      Events::SELECTED,
       new EntitySelectionEvent(
         $this->configuration['entity_browser_id'],
         $form_state->get(['entity_browser', 'instance_uuid']),
         $entities
-      ));
+      ),
+      Events::SELECTED);
   }
 
   /**
diff --git a/tests/src/Functional/ConfigAccessTest.php b/tests/src/Functional/ConfigAccessTest.php
index cab0760..02c40a2 100644
--- a/tests/src/Functional/ConfigAccessTest.php
+++ b/tests/src/Functional/ConfigAccessTest.php
@@ -41,7 +41,7 @@ class ConfigAccessTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_tasks_block');
     $this->drupalPlaceBlock('local_actions_block');
@@ -83,7 +83,7 @@ class ConfigAccessTest extends BrowserTestBase {
     $this->drupalGet('/admin/config/content/entity_browser');
     $this->clickLink('Delete');
     $this->assertSession()->responseContains('This action cannot be undone.', 'Delete question found.');
-    $this->drupalPostForm(NULL, [], 'Delete Entity Browser');
+    $this->submitForm([], 'Delete Entity Browser');
 
     $this->assertSession()->responseContains('Entity browser <em class="placeholder">Test entity browser</em> was deleted.', 'Confirmation message found.');
     $this->assertSession()->responseContains('There are no entity browser entities yet.', 'Entity browsers table is empty.');
diff --git a/tests/src/Functional/EntityBrowserUpdateHookTest.php b/tests/src/Functional/EntityBrowserUpdateHookTest.php
index 8851bd6..029518f 100644
--- a/tests/src/Functional/EntityBrowserUpdateHookTest.php
+++ b/tests/src/Functional/EntityBrowserUpdateHookTest.php
@@ -29,7 +29,7 @@ class EntityBrowserUpdateHookTest extends UpdatePathTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $entity_browser_type = $this->container
       ->get('entity_type.manager')
diff --git a/tests/src/Functional/FormElementTest.php b/tests/src/Functional/FormElementTest.php
index ca840af..b0dadef 100644
--- a/tests/src/Functional/FormElementTest.php
+++ b/tests/src/Functional/FormElementTest.php
@@ -34,7 +34,7 @@ class FormElementTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->container
       ->get('entity_type.manager')
diff --git a/tests/src/FunctionalJavascript/CardinalityTest.php b/tests/src/FunctionalJavascript/CardinalityTest.php
index 59ef388..141abbd 100644
--- a/tests/src/FunctionalJavascript/CardinalityTest.php
+++ b/tests/src/FunctionalJavascript/CardinalityTest.php
@@ -32,7 +32,7 @@ class CardinalityTest extends EntityBrowserWebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\user\RoleInterface $role */
diff --git a/tests/src/FunctionalJavascript/ConfigurationTest.php b/tests/src/FunctionalJavascript/ConfigurationTest.php
index a18abaf..bc85971 100644
--- a/tests/src/FunctionalJavascript/ConfigurationTest.php
+++ b/tests/src/FunctionalJavascript/ConfigurationTest.php
@@ -45,7 +45,7 @@ class ConfigurationTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_tasks_block');
     $this->drupalPlaceBlock('local_actions_block');
@@ -81,7 +81,7 @@ class ConfigurationTest extends WebDriverTestBase {
     $this->assertSession()->fieldExists('display_configuration[link_text]')->setValue('Select some entities');
     $this->assertSession()->selectExists('widget_selector')->selectOption('tabs');
     $this->assertSession()->selectExists('selection_display')->selectOption('no_display');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->pageTextContains('The entity browser Test entity browser has been added. Now you may configure the widgets you would like to use.');
 
     $this->assertSession()->addressEquals('/admin/config/content/entity_browser/test_entity_browser/widgets');
@@ -112,7 +112,7 @@ class ConfigurationTest extends WebDriverTestBase {
     $this->assertSession()->fieldExists('display_configuration[width]')->setValue('100');
     $this->assertSession()->fieldExists('display_configuration[height]')->setValue('100');
     $this->assertSession()->fieldExists('display_configuration[link_text]')->setValue('All animals are created equal');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->addressEquals('/admin/config/content/entity_browser/test_entity_browser/edit');
     $this->assertSession()->pageTextContains('The entity browser Test entity browser has been updated.');
 
@@ -137,7 +137,7 @@ class ConfigurationTest extends WebDriverTestBase {
     $this->assertSession()->selectExists('display')->selectOption('standalone');
     $this->assertSession()->assertWaitOnAjaxRequest();
     $this->assertSession()->fieldExists('display_configuration[path]')->setValue('/all-animals');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->addressEquals('/admin/config/content/entity_browser/test_entity_browser/edit');
     $this->assertSession()->pageTextContains('The entity browser Test entity browser has been updated.');
     $this->clickLink('General Settings');
@@ -155,10 +155,10 @@ class ConfigurationTest extends WebDriverTestBase {
 
     // Test validation of leading forward slash.
     $this->assertSession()->fieldExists('display_configuration[path]')->setValue('no-forward-slash');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->responseContains('The Path field must begin with a forward slash.');
     $this->assertSession()->fieldExists('display_configuration[path]')->setValue('/all-animals');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->pageTextContains('The entity browser Test entity browser has been updated.');
     $this->getSession()->executeScript("jQuery('details').attr('open', 'open');");
 
@@ -229,7 +229,7 @@ class ConfigurationTest extends WebDriverTestBase {
     $this->getSession()->executeScript("jQuery('.visually-hidden').removeClass('visually-hidden');");
     $this->assertSession()->fieldExists('name')->setValue('test_entity_browser');
     // Use defaults and save to go to WidgetsConfig form.
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->addressEquals('/admin/config/content/entity_browser/test_entity_browser/widgets');
     $this->assertSession()->pageTextContains('The entity browser Test entity browser has been added. Now you may configure the widgets you would like to use.');
     $widgetSelect = $this->assertSession()->selectExists('widget');
@@ -251,7 +251,7 @@ class ConfigurationTest extends WebDriverTestBase {
     $this->assertSession()->assertWaitOnAjaxRequest();
     $this->assertSession()->selectExists("table[$uuid][form][bundle][select]")->selectOption('foo');
     $this->assertSession()->selectExists("table[$uuid][form][form_mode][form_select]");
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->addressEquals('/admin/config/content/entity_browser/test_entity_browser/widgets');
     $this->assertSession()->pageTextContains('The entity browser Test entity browser has been updated.');
 
@@ -282,7 +282,7 @@ class ConfigurationTest extends WebDriverTestBase {
     $this->assertSession()->fieldExists("table[$uuid][form][submit_text]");
     $this->assertSession()->fieldExists("table[$uuid][form][auto_select]")->check();
     $this->assertSession()->selectExists("table[$uuid][form][view]")->selectOption('nodes_entity_browser.entity_browser_1');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->addressEquals('/admin/config/content/entity_browser/test_entity_browser/widgets');
     $this->assertSession()->pageTextContains('The entity browser Test entity browser has been updated.');
 
@@ -315,7 +315,7 @@ class ConfigurationTest extends WebDriverTestBase {
     $this->assertSession()->fieldExists("table[$uuid][form][multiple]");
     $this->assertSession()->fieldExists("table[$uuid][form][upload_location]");
     $this->assertSession()->elementExists('css', 'a.token-dialog.use-ajax');
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->addressEquals('/admin/config/content/entity_browser/test_entity_browser/widgets');
     $this->assertSession()->pageTextContains('The entity browser Test entity browser has been updated.');
 
diff --git a/tests/src/FunctionalJavascript/EntityBrowserViewsWidgetTest.php b/tests/src/FunctionalJavascript/EntityBrowserViewsWidgetTest.php
index 23f2297..baa23e0 100644
--- a/tests/src/FunctionalJavascript/EntityBrowserViewsWidgetTest.php
+++ b/tests/src/FunctionalJavascript/EntityBrowserViewsWidgetTest.php
@@ -30,7 +30,7 @@ class EntityBrowserViewsWidgetTest extends EntityBrowserWebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $user = $this->drupalCreateUser([
diff --git a/tests/src/FunctionalJavascript/EntityBrowserWebDriverTestBase.php b/tests/src/FunctionalJavascript/EntityBrowserWebDriverTestBase.php
index bd40f3e..adf49c0 100644
--- a/tests/src/FunctionalJavascript/EntityBrowserWebDriverTestBase.php
+++ b/tests/src/FunctionalJavascript/EntityBrowserWebDriverTestBase.php
@@ -56,7 +56,7 @@ abstract class EntityBrowserWebDriverTestBase extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     FieldStorageConfig::create([
diff --git a/tests/src/FunctionalJavascript/EntityEmbedTest.php b/tests/src/FunctionalJavascript/EntityEmbedTest.php
index 5bdbb40..1cf5896 100644
--- a/tests/src/FunctionalJavascript/EntityEmbedTest.php
+++ b/tests/src/FunctionalJavascript/EntityEmbedTest.php
@@ -41,7 +41,7 @@ class EntityEmbedTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
diff --git a/tests/src/FunctionalJavascript/EntityQueueTest.php b/tests/src/FunctionalJavascript/EntityQueueTest.php
index 88bca00..3fde9f6 100644
--- a/tests/src/FunctionalJavascript/EntityQueueTest.php
+++ b/tests/src/FunctionalJavascript/EntityQueueTest.php
@@ -41,7 +41,7 @@ class EntityQueueTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
diff --git a/tests/src/FunctionalJavascript/EntityReferenceWidgetTest.php b/tests/src/FunctionalJavascript/EntityReferenceWidgetTest.php
index 9129e09..aad2138 100644
--- a/tests/src/FunctionalJavascript/EntityReferenceWidgetTest.php
+++ b/tests/src/FunctionalJavascript/EntityReferenceWidgetTest.php
@@ -19,7 +19,7 @@ class EntityReferenceWidgetTest extends EntityBrowserWebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\user\RoleInterface $role */
diff --git a/tests/src/FunctionalJavascript/FieldWidgetConfigTest.php b/tests/src/FunctionalJavascript/FieldWidgetConfigTest.php
index d1dd9d8..8c9457a 100644
--- a/tests/src/FunctionalJavascript/FieldWidgetConfigTest.php
+++ b/tests/src/FunctionalJavascript/FieldWidgetConfigTest.php
@@ -49,7 +49,7 @@ class FieldWidgetConfigTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_tasks_block');
     $this->drupalPlaceBlock('local_actions_block');
diff --git a/tests/src/FunctionalJavascript/ImageFieldTest.php b/tests/src/FunctionalJavascript/ImageFieldTest.php
index 03cd9e1..33b48dc 100644
--- a/tests/src/FunctionalJavascript/ImageFieldTest.php
+++ b/tests/src/FunctionalJavascript/ImageFieldTest.php
@@ -29,7 +29,7 @@ class ImageFieldTest extends EntityBrowserWebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     FieldStorageConfig::create([
@@ -251,7 +251,7 @@ class ImageFieldTest extends EntityBrowserWebDriverTestBase {
     /** @var \Drupal\file\Entity\File $file */
     $fid = explode(':', $entity_id)[1];
     $file = File::load($fid);
-    $this->assertContains('entity-browser-test', $file->getFileUri());
+    $this->assertStringContainsString('entity-browser-test', $file->getFileUri());
   }
 
 }
diff --git a/tests/src/FunctionalJavascript/InlineEntityFormTest.php b/tests/src/FunctionalJavascript/InlineEntityFormTest.php
index c2f3635..f644737 100644
--- a/tests/src/FunctionalJavascript/InlineEntityFormTest.php
+++ b/tests/src/FunctionalJavascript/InlineEntityFormTest.php
@@ -407,8 +407,8 @@ class InlineEntityFormTest extends EntityBrowserWebDriverTestBase {
 
     $ief_table = $this->assertSession()->elementExists('xpath', '//table[contains(@id, "ief-entity-table-edit-field-nodes-entities")]');
     $table_text = $ief_table->getText();
-    $this->assertContains('Boxer', $table_text);
-    $this->assertContains('Napoleon', $table_text);
+    $this->assertStringContainsString('Boxer', $table_text);
+    $this->assertStringContainsString('Napoleon', $table_text);
   }
 
 }
diff --git a/tests/src/FunctionalJavascript/PagerElementTest.php b/tests/src/FunctionalJavascript/PagerElementTest.php
index 2569846..bd371f3 100644
--- a/tests/src/FunctionalJavascript/PagerElementTest.php
+++ b/tests/src/FunctionalJavascript/PagerElementTest.php
@@ -29,7 +29,7 @@ class PagerElementTest extends EntityBrowserWebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'foo', 'name' => 'Foo']);
diff --git a/tests/src/FunctionalJavascript/UploadWidgetTest.php b/tests/src/FunctionalJavascript/UploadWidgetTest.php
index 6bf0585..38ef946 100644
--- a/tests/src/FunctionalJavascript/UploadWidgetTest.php
+++ b/tests/src/FunctionalJavascript/UploadWidgetTest.php
@@ -14,7 +14,7 @@ class UploadWidgetTest extends EntityBrowserWebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Grant permission to this user to use also the EB page we are testing.
@@ -37,7 +37,7 @@ class UploadWidgetTest extends EntityBrowserWebDriverTestBase {
     $page = $this->getSession()->getPage();
 
     // Make sure the test file is not present beforehand.
-    $this->assertFileNotExists('public://druplicon.png');
+    $this->assertFileDoesNotExist('public://druplicon.png');
 
     // Go to the widget standalone page and test the upload.
     $this->drupalGet($browser->getDisplay()->path());
diff --git a/tests/src/Kernel/Extension/EntityBrowserTest.php b/tests/src/Kernel/Extension/EntityBrowserTest.php
index fbc4d10..2d1233a 100644
--- a/tests/src/Kernel/Extension/EntityBrowserTest.php
+++ b/tests/src/Kernel/Extension/EntityBrowserTest.php
@@ -61,7 +61,7 @@ class EntityBrowserTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     FileCacheFactory::setPrefix($this->randomString(4));
     parent::setUp();
 
@@ -127,7 +127,7 @@ class EntityBrowserTest extends KernelTestBase {
         $this->fail('An entity browser without required ' . $plugin_type . ' created with no exception thrown.');
       }
       catch (PluginException $e) {
-        $this->assertContains('The "" plugin does not exist.', $e->getMessage(), 'An exception was thrown when an entity_browser was created without a ' . $plugin_type . ' plugin.');
+        $this->assertStringContainsString('The "" plugin does not exist.', $e->getMessage(), 'An exception was thrown when an entity_browser was created without a ' . $plugin_type . ' plugin.');
       }
     }
 
diff --git a/tests/src/Kernel/Plugin/FieldWidgetDisplayTest.php b/tests/src/Kernel/Plugin/FieldWidgetDisplayTest.php
index 604041a..020ebaf 100644
--- a/tests/src/Kernel/Plugin/FieldWidgetDisplayTest.php
+++ b/tests/src/Kernel/Plugin/FieldWidgetDisplayTest.php
@@ -30,7 +30,7 @@ class FieldWidgetDisplayTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->pluginManager = $this->container->get('plugin.manager.entity_browser.field_widget_display');
