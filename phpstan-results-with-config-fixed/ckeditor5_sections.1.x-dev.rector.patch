diff --git a/ckeditor5_sections.module b/ckeditor5_sections.module
index cdb1530..5fdd393 100644
--- a/ckeditor5_sections.module
+++ b/ckeditor5_sections.module
@@ -20,7 +20,7 @@ function ckeditor5_sections_library_info_alter(&$libraries, $extension) {
     $stylesheets = $collector->getStyleSheets();
     foreach ($stylesheets as $stylesheet) {
       $fileSystem = new Filesystem();
-      $relative = $fileSystem->makePathRelative(dirname($stylesheet), drupal_get_path('module', 'ckeditor5_sections')) . basename($stylesheet);
+      $relative = $fileSystem->makePathRelative(dirname($stylesheet), \Drupal::service('extension.list.module')->getPath('ckeditor5_sections')) . basename($stylesheet);
       $libraries['sections']['css']['base'][$relative] = [];
     }
     // Add CKEditor5 inspector if enabled in e.g. development.settings.yml.
diff --git a/src/DocumentConverter.php b/src/DocumentConverter.php
index 94a6d40..56fba2b 100644
--- a/src/DocumentConverter.php
+++ b/src/DocumentConverter.php
@@ -77,7 +77,7 @@ class DocumentConverter implements DocumentConverterInterface {
     $this->typedDataManager = $typedDataManager;
     $this->entityTypeManager = $entityTypeManager;
     $this->moduleHandler = $moduleHandler;
-    $this->templateDirectory = $templateDirectory ?: drupal_get_path('module', 'ckeditor5_sections') . '/sections';
+    $this->templateDirectory = $templateDirectory ?: \Drupal::service('extension.list.module')->getPath('ckeditor5_sections') . '/sections';
   }
 
   /**
diff --git a/src/SectionsCollector.php b/src/SectionsCollector.php
index ae33404..b5f9b4d 100644
--- a/src/SectionsCollector.php
+++ b/src/SectionsCollector.php
@@ -45,7 +45,7 @@ class SectionsCollector implements SectionsCollectorInterface, EventSubscriberIn
   ) {
     $this->entityTypeManager = $entityTypeManager;
     $this->twigProcessor = $twigProcessor;
-    $this->directory = $directory ?: drupal_get_path('module', 'ckeditor5_sections') . '/sections';
+    $this->directory = $directory ?: \Drupal::service('extension.list.module')->getPath('ckeditor5_sections') . '/sections';
   }
 
   /**
@@ -71,7 +71,7 @@ class SectionsCollector implements SectionsCollectorInterface, EventSubscriberIn
    */
   public function getStyleSheets($directory = NULL) {
     if (!$directory) {
-      $directory = drupal_get_path('module', 'ckeditor5_sections') . '/sections';
+      $directory = \Drupal::service('extension.list.module')->getPath('ckeditor5_sections') . '/sections';
     }
     $files = \Drupal::service('file_system')->scanDirectory($directory, '/.*.css/');
     $styleSheets = [];
@@ -105,7 +105,7 @@ class SectionsCollector implements SectionsCollectorInterface, EventSubscriberIn
    */
   protected function collectSectionsFromDirectory($directory) {
     if ($directory === '') {
-      $directory = drupal_get_path('module', 'ckeditor5_sections') . '/sections';
+      $directory = \Drupal::service('extension.list.module')->getPath('ckeditor5_sections') . '/sections';
     }
     $files = \Drupal::service('file_system')->scanDirectory($directory, '/.*.yml/');
     $sections = [];
diff --git a/tests/ckeditor5_sections_test/tests/Kernel/DocumentSectionTypedDataBasicValidationTest.php b/tests/ckeditor5_sections_test/tests/Kernel/DocumentSectionTypedDataBasicValidationTest.php
index 05a963d..617ff0f 100644
--- a/tests/ckeditor5_sections_test/tests/Kernel/DocumentSectionTypedDataBasicValidationTest.php
+++ b/tests/ckeditor5_sections_test/tests/Kernel/DocumentSectionTypedDataBasicValidationTest.php
@@ -72,8 +72,8 @@ class DocumentSectionTypedDataBasicValidationTest extends KernelTestBase {
     // Assert that if we manipulate the type that we get a validation error.
     $teaserSection->set('__type', 'invalid-type');
     $errors = $teaserSection->validate();
-    $this->assertEqual($errors->count(), 1);
-    $this->assertEqual($errors->get(0)->getCode(), SectionTypeConstraint::INVALID_SECTION_TYPE);
+    $this->assertEquals($errors->count(), 1);
+    $this->assertEquals($errors->get(0)->getCode(), SectionTypeConstraint::INVALID_SECTION_TYPE);
 
     // @todo: validate ck-contains?
   }
@@ -87,32 +87,32 @@ class DocumentSectionTypedDataBasicValidationTest extends KernelTestBase {
     $teaserSection = $this->typedDataManager->create($teaserSectionTypeDataDefinition, $teaserJson);
 
     $contraints = $teaserSectionTypeDataDefinition->getPropertyDefinitions()['headline']->getConstraints();
-    $this->assertEqual(3, count($contraints));
+    $this->assertEquals(3, count($contraints));
 
     // Note: using array_key_exists as constraint value can be NULL.
     $this->assertArrayHasKey('Length', $contraints);
-    $this->assertEqual($contraints['Length']['min'], 2);
-    $this->assertEqual($contraints['Length']['max'], 255);
+    $this->assertEquals($contraints['Length']['min'], 2);
+    $this->assertEquals($contraints['Length']['max'], 255);
     $this->assertArrayHasKey('NotBlank', $contraints);
     $this->assertArrayHasKey('PrimitiveType', $contraints);
 
     // ck-min: 2 - too short.
     $teaserSection->set('headline', 'A');
     $errors = $teaserSection->validate();
-    $this->assertEqual($errors->count(), 1);
-    $this->assertEqual($errors->get(0)->getCode(), LengthConstraint::TOO_SHORT_ERROR);
+    $this->assertEquals($errors->count(), 1);
+    $this->assertEquals($errors->get(0)->getCode(), LengthConstraint::TOO_SHORT_ERROR);
 
     // ck-max: 255.
     $teaserSection->set('headline', str_repeat('A', 256));
     $errors = $teaserSection->validate();
-    $this->assertEqual($errors->count(), 1);
-    $this->assertEqual($errors->get(0)->getCode(), LengthConstraint::TOO_LONG_ERROR);
+    $this->assertEquals($errors->count(), 1);
+    $this->assertEquals($errors->get(0)->getCode(), LengthConstraint::TOO_LONG_ERROR);
 
     // ck-min: 2 - blank!
     $teaserSection->set('headline', '');
     $errors = $teaserSection->validate();
-    $this->assertEqual($errors->count(), 1);
-    $this->assertEqual($errors->get(0)->getCode(), NotBlank::IS_BLANK_ERROR);
+    $this->assertEquals($errors->count(), 1);
+    $this->assertEquals($errors->get(0)->getCode(), NotBlank::IS_BLANK_ERROR);
   }
 
   /**
@@ -121,24 +121,24 @@ class DocumentSectionTypedDataBasicValidationTest extends KernelTestBase {
   public function testContainerRangeValidation() {
     $pageDefinition = $this->typedDataManager->createDataDefinition('section:test_page');
     $contraints = $pageDefinition->getPropertyDefinitions()['sections']->getConstraints();
-    $this->assertEqual(1, count($contraints));
+    $this->assertEquals(1, count($contraints));
     $this->assertTrue(isset($contraints['Count']));
-    $this->assertEqual($contraints['Count']['min'], 1);
-    $this->assertEqual($contraints['Count']['max'], 5);
+    $this->assertEquals($contraints['Count']['min'], 1);
+    $this->assertEquals($contraints['Count']['max'], 5);
 
     // ck-min: 1 - no sections, too few.
     $tooFew = json_decode(file_get_contents(__DIR__ . '/assets/validation/page_too_few.json'), TRUE);
     $section = $this->typedDataManager->create($pageDefinition, $tooFew);
     $errors = $section->validate();
-    $this->assertEqual($errors->count(), 1);
-    $this->assertEqual($errors->get(0)->getCode(), CountConstraint::TOO_FEW_ERROR);
+    $this->assertEquals($errors->count(), 1);
+    $this->assertEquals($errors->get(0)->getCode(), CountConstraint::TOO_FEW_ERROR);
 
     // ck-max: 5 - 6 sections, trigger too many error.
     $tooMany = json_decode(file_get_contents(__DIR__ . '/assets/validation/page_too_many.json'), TRUE);
     $section = $this->typedDataManager->create($pageDefinition, $tooMany);
     $errors = $section->validate();
-    $this->assertEqual($errors->count(), 1);
-    $this->assertEqual($errors->get(0)->getCode(), CountConstraint::TOO_MANY_ERROR);
+    $this->assertEquals($errors->count(), 1);
+    $this->assertEquals($errors->get(0)->getCode(), CountConstraint::TOO_MANY_ERROR);
   }
 
 }
diff --git a/tests/ckeditor5_sections_test/tests/Kernel/DocumentSectionTypedDataCustomValidationTest.php b/tests/ckeditor5_sections_test/tests/Kernel/DocumentSectionTypedDataCustomValidationTest.php
index 7efe947..3ac3279 100644
--- a/tests/ckeditor5_sections_test/tests/Kernel/DocumentSectionTypedDataCustomValidationTest.php
+++ b/tests/ckeditor5_sections_test/tests/Kernel/DocumentSectionTypedDataCustomValidationTest.php
@@ -54,7 +54,7 @@ class DocumentSectionTypedDataCustomValidationTest extends KernelTestBase {
   public function testNamedValidationConstraints() {
     $definition = $this->typedDataManager->createDataDefinition('section:test_teaser');
     $link = $definition->getPropertyDefinitions()['link'];
-    $this->assertEqual(2, count($link->getConstraints()));
+    $this->assertEquals(2, count($link->getConstraints()));
     $this->assertEquals($link->getConstraint('SectionType'), [
       'type' => 'button',
     ]);
@@ -78,8 +78,8 @@ class DocumentSectionTypedDataCustomValidationTest extends KernelTestBase {
     $linkInvalid = json_decode(file_get_contents(__DIR__ . '/assets/validation/teaser_link_invalid.json'), TRUE);
     $section = $this->typedDataManager->create($definition, $linkInvalid);
     $errors = $section->validate();
-    $this->assertEqual(1, $errors->count());
-    $this->assertEqual($errors->get(0)->getCode(), ExampleButtonValidation::MUST_FILL_OUT_BOTH_OR_NONE);
+    $this->assertEquals(1, $errors->count());
+    $this->assertEquals($errors->get(0)->getCode(), ExampleButtonValidation::MUST_FILL_OUT_BOTH_OR_NONE);
   }
 
   /**
@@ -90,7 +90,7 @@ class DocumentSectionTypedDataCustomValidationTest extends KernelTestBase {
     $linkValid = json_decode(file_get_contents(__DIR__ . '/assets/validation/teaser_link.json'), TRUE);
     $section = $this->typedDataManager->create($definition, $linkValid);
     $errors = $section->validate();
-    $this->assertEqual(0, $errors->count());
+    $this->assertEquals(0, $errors->count());
   }
 
 }
diff --git a/tests/src/Kernel/SectionsCollectorTest.php b/tests/src/Kernel/SectionsCollectorTest.php
index 8b23d6e..fdedc55 100644
--- a/tests/src/Kernel/SectionsCollectorTest.php
+++ b/tests/src/Kernel/SectionsCollectorTest.php
@@ -92,7 +92,7 @@ class SectionsCollectorTest extends KernelTestBase {
     \Drupal::getContainer()->set('string_translation', $string_translation);
 
     // Get the dummy templates and run them through the method.
-    $path = drupal_get_path('module', 'ckeditor5_sections_test') . '/templates';
+    $path = \Drupal::service('extension.list.module')->getPath('ckeditor5_sections_test') . '/templates';
     $sections = $this->sectionsCollector->getSections($path);
 
     // Check to ensure the expected strings are where we want them.
