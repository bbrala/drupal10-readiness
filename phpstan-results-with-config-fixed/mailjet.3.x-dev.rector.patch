diff --git a/mailjet.module b/mailjet.module
index 7cfa1d0..63b0038 100644
--- a/mailjet.module
+++ b/mailjet.module
@@ -4,7 +4,7 @@
  * code for Mailjet module
  */
 
-$path = drupal_get_path('module', 'mailjet');
+$path = \Drupal::service('extension.list.module')->getPath('mailjet');
 
 // Autoloading via composer
 require_once $path . '/vendor/autoload.php';
@@ -914,7 +914,7 @@ function accessProtected($obj, $prop) {
  */
 function mailjet_theme_registry_alter(&$theme_registry) {
 
-  $theme_registry['block__local_actions_block']['path'] = drupal_get_path('module', 'mailjet') . '/templates';
+  $theme_registry['block__local_actions_block']['path'] = \Drupal::service('extension.list.module')->getPath('mailjet') . '/templates';
 }
 
 function mailjet_theme($existing, $type, $theme, $path) {
diff --git a/modules/mailjet_campaign/tests/src/Functional/MailjetCampaignTest.php b/modules/mailjet_campaign/tests/src/Functional/MailjetCampaignTest.php
index a7d5e60..4904917 100644
--- a/modules/mailjet_campaign/tests/src/Functional/MailjetCampaignTest.php
+++ b/modules/mailjet_campaign/tests/src/Functional/MailjetCampaignTest.php
@@ -23,7 +23,7 @@ class MailjetCampaignTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
 
     parent::setUp();
 
diff --git a/modules/mailjet_event/tests/src/Functional/MailjetEventTest.php b/modules/mailjet_event/tests/src/Functional/MailjetEventTest.php
index 8331a40..59effe3 100644
--- a/modules/mailjet_event/tests/src/Functional/MailjetEventTest.php
+++ b/modules/mailjet_event/tests/src/Functional/MailjetEventTest.php
@@ -23,7 +23,7 @@ class MailjetEventTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
 
     parent::setUp();
 
diff --git a/src/Form/MailjetSettingsForm.php b/src/Form/MailjetSettingsForm.php
index c0112b3..a120293 100644
--- a/src/Form/MailjetSettingsForm.php
+++ b/src/Form/MailjetSettingsForm.php
@@ -230,7 +230,7 @@ public function buildForm(array $form, FormStateInterface $form_state) {
 
     // States only show up for US citizens
 
-    $path = drupal_get_path('module', 'mailjet');
+    $path = \Drupal::service('extension.list.module')->getPath('mailjet');
     include $path . '/lib/mailjet-api-php/src/UsStates.php';
     $form['infos']['address_state'] = [
       '#type' => 'select',
diff --git a/src/Plugin/Mail/MailjetMail.php b/src/Plugin/Mail/MailjetMail.php
index 9004fb1..3f9278a 100644
--- a/src/Plugin/Mail/MailjetMail.php
+++ b/src/Plugin/Mail/MailjetMail.php
@@ -491,7 +491,7 @@ public function mail(array $message) {
               }
 
               $attachment_new_filename = tempnam(realpath(\Drupal::service('file_system')->getTempDirectory()), 'smtp');
-              $file_path = file_save_data($attachment, $attachment_new_filename, FileSystemInterface::EXISTS_RENAME);
+              $file_path = \Drupal::service('file.repository')->writeData($attachment, $attachment_new_filename, FileSystemInterface::EXISTS_RENAME);
 
               if (!$mailer->AddAttachment($file_path, $file_name)) {
                 \Drupal::messenger()->addStatus(t('Attachment could not be found or accessed.'));
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 8ed8e52..5915a44 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -40,7 +40,7 @@ protected function setUp() {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 } 
diff --git a/tests/src/Functional/MailjetApiFormTest.php b/tests/src/Functional/MailjetApiFormTest.php
index 45f0c1e..134976b 100644
--- a/tests/src/Functional/MailjetApiFormTest.php
+++ b/tests/src/Functional/MailjetApiFormTest.php
@@ -27,7 +27,7 @@ class MailjetApiFormTest extends BrowserTestBase {
   /**
    * Perform any initial set up tasks that run before every test method
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['access content']);
   }
@@ -36,18 +36,21 @@ public function setUp() {
   public function testApiForm() {
     $this->drupalLogin($this->user);
     $this->drupalGet('admin/config/system/mailjet/api');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     $config = $this->config('mailjet.settings');
-    $this->assertFieldByName('mailjet_username', $config->get('mailjet.mailjet_username'), 'The field was found with the correct value.');
-    $this->assertFieldByName('mailjet_password', $config->get('mailjet.mailjet_password'), 'The field was found with the correct value.');
+    $this->assertSession()->fieldValueEquals('mailjet_username', $config->get('mailjet.mailjet_username'));
+    $this->assertSession()->fieldValueEquals('mailjet_password', $config->get('mailjet.mailjet_password'));
 
 
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'mailjet_username' => $config->get('mailjet_username'),
       'mailjet_username' => $config->get('mailjet_password'),
     ], t('Save configuration'));
-    $this->assertText('The configuration options have been saved.', 'The form was saved correctly.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
 
   }
diff --git a/tests/src/Functional/MailjetDomainFormTest.php b/tests/src/Functional/MailjetDomainFormTest.php
index bbb8773..9b41eab 100644
--- a/tests/src/Functional/MailjetDomainFormTest.php
+++ b/tests/src/Functional/MailjetDomainFormTest.php
@@ -27,7 +27,7 @@ class MailjetDomainFormTest extends BrowserTestBase {
   /**
    * Perform any initial set up tasks that run before every test method
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['access content']);
   }
@@ -36,15 +36,18 @@ public function setUp() {
   public function testApiForm() {
     $this->drupalLogin($this->user);
     $this->drupalGet('admin/config/system/mailjet/domains/add-domain');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
-    $this->assertFieldByName('domain', 'example.com', 'The field was found with the correct value.');
+    $this->assertSession()->fieldValueEquals('domain', 'example.com');
 
 
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'domain' => $config->get('example.com'),
     ], t('Save configuration'));
-    $this->assertText('The configuration options have been saved.', 'The form was saved correctly.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
 
   }
