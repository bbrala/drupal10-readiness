modules/contrib/tmgmt/modules/demo/tests/src/Functional/TMGMTDemoTest.php
modules/contrib/tmgmt/modules/demo/tmgmt_demo.install
modules/contrib/tmgmt/modules/demo/tmgmt_demo.module
modules/contrib/tmgmt/sources/content/src/Access/KeyAccessCheck.php
modules/contrib/tmgmt/sources/content/src/ContentEntitySourcePluginUi.php
modules/contrib/tmgmt/sources/content/src/Controller/ContentTranslationControllerOverride.php
modules/contrib/tmgmt/sources/content/src/Controller/ContentTranslationPreviewController.php
modules/contrib/tmgmt/sources/content/src/DefaultFieldProcessor.php
modules/contrib/tmgmt/sources/content/src/FieldProcessorInterface.php
modules/contrib/tmgmt/sources/content/src/Form/ContentTranslateForm.php
modules/contrib/tmgmt/sources/content/src/LinkFieldProcessor.php
modules/contrib/tmgmt/sources/content/src/MetatagsFieldProcessor.php
modules/contrib/tmgmt/sources/content/src/PathFieldProcessor.php
modules/contrib/tmgmt/sources/content/src/Plugin/tmgmt/Source/ContentEntitySource.php
modules/contrib/tmgmt/sources/content/src/Routing/TmgmtContentRouteSubscriber.php
modules/contrib/tmgmt/sources/content/tests/modules/tmgmt_composite_test/src/Entity/EntityTestComposite.php
modules/contrib/tmgmt/sources/content/tests/src/Functional/ContentEntitySourceContentModerationTest.php
modules/contrib/tmgmt/sources/content/tests/src/Functional/ContentEntitySourceTranslatableEntityTest.php
modules/contrib/tmgmt/sources/content/tests/src/Functional/ContentTmgmtEntitySourceListTest.php
modules/contrib/tmgmt/sources/content/tests/src/Functional/ContentTmgmtEntitySourceNoCanonicalLinkTest.php
modules/contrib/tmgmt/sources/content/tests/src/Functional/ContentTmgmtEntitySourceUiTest.php
modules/contrib/tmgmt/sources/content/tests/src/Kernel/ContentEntityLinkTest.php
modules/contrib/tmgmt/sources/content/tests/src/Kernel/ContentEntityMetatagTest.php
modules/contrib/tmgmt/sources/content/tests/src/Kernel/ContentEntityPathTest.php
modules/contrib/tmgmt/sources/content/tests/src/Kernel/ContentEntitySourceContentModerationTest.php
modules/contrib/tmgmt/sources/content/tests/src/Kernel/ContentEntitySourceUnitTest.php
modules/contrib/tmgmt/sources/content/tests/src/Kernel/ContentEntitySourceUntranslatableTargetsUnitTest.php
modules/contrib/tmgmt/sources/content/tests/src/Kernel/ContentEntitySuggestionsTest.php
modules/contrib/tmgmt/sources/content/tests/src/Kernel/ContentEntityTestBase.php
modules/contrib/tmgmt/sources/content/tests/src/Kernel/ContentEntityUpdateParagraphTest.php
modules/contrib/tmgmt/sources/content/tmgmt_content.api.php
modules/contrib/tmgmt/sources/content/tmgmt_content.module
modules/contrib/tmgmt/sources/locale/src/LocaleSourcePluginUi.php
modules/contrib/tmgmt/sources/locale/src/Plugin/tmgmt/Source/LocaleSource.php
modules/contrib/tmgmt/sources/locale/tests/src/Functional/LocaleSourceUiTest.php
modules/contrib/tmgmt/sources/locale/tests/src/Kernel/LocaleSourceTest.php
modules/contrib/tmgmt/sources/tmgmt_config/src/ConfigProcessorInterface.php
modules/contrib/tmgmt/sources/tmgmt_config/src/ConfigSourcePluginUi.php
modules/contrib/tmgmt/sources/tmgmt_config/src/Controller/ConfigTranslationControllerOverride.php
modules/contrib/tmgmt/sources/tmgmt_config/src/DefaultConfigProcessor.php
modules/contrib/tmgmt/sources/tmgmt_config/src/Form/ConfigTranslateForm.php
modules/contrib/tmgmt/sources/tmgmt_config/src/Plugin/tmgmt/Source/ConfigSource.php
modules/contrib/tmgmt/sources/tmgmt_config/src/Routing/TmgmtConfigRouteSubscriber.php
modules/contrib/tmgmt/sources/tmgmt_config/src/WebformConfigProcessor.php
modules/contrib/tmgmt/sources/tmgmt_config/tests/src/Functional/ConfigSourceListTest.php
modules/contrib/tmgmt/sources/tmgmt_config/tests/src/Functional/ConfigSourceUiTest.php
modules/contrib/tmgmt/sources/tmgmt_config/tests/src/Kernel/ConfigSourceUnitTest.php
modules/contrib/tmgmt/sources/tmgmt_config/tests/src/Kernel/ConfigSourceWebformTest.php
modules/contrib/tmgmt/sources/tmgmt_config/tmgmt_config.module
modules/contrib/tmgmt/src/Annotation/SourcePlugin.php
modules/contrib/tmgmt/src/Annotation/TranslatorPlugin.php
modules/contrib/tmgmt/src/ContinuousManager.php
modules/contrib/tmgmt/src/ContinuousSourceInterface.php
modules/contrib/tmgmt/src/ContinuousTranslatorInterface.php
modules/contrib/tmgmt/src/Controller/TMGMTController.php
modules/contrib/tmgmt/src/Controller/TranslatorController.php
modules/contrib/tmgmt/src/Data.php
modules/contrib/tmgmt/src/Entity/Controller/JobAccessControlHandler.php
modules/contrib/tmgmt/src/Entity/Controller/JobItemAccessControlHandler.php
modules/contrib/tmgmt/src/Entity/Controller/TranslatorAccessControlHandler.php
modules/contrib/tmgmt/src/Entity/Job.php
modules/contrib/tmgmt/src/Entity/JobItem.php
modules/contrib/tmgmt/src/Entity/ListBuilder/JobItemListBuilder.php
modules/contrib/tmgmt/src/Entity/ListBuilder/JobListBuilder.php
modules/contrib/tmgmt/src/Entity/ListBuilder/TranslatorListBuilder.php
modules/contrib/tmgmt/src/Entity/Message.php
modules/contrib/tmgmt/src/Entity/RemoteMapping.php
modules/contrib/tmgmt/src/Entity/Translator.php
modules/contrib/tmgmt/src/Entity/ViewsData/JobItemViewsData.php
modules/contrib/tmgmt/src/Entity/ViewsData/JobViewsData.php
modules/contrib/tmgmt/src/Entity/ViewsData/MessageViewsData.php
modules/contrib/tmgmt/src/Events/ContinuousEvents.php
modules/contrib/tmgmt/src/Events/ShouldCreateJobEvent.php
modules/contrib/tmgmt/src/Form/CartForm.php
modules/contrib/tmgmt/src/Form/ContinuousJobForm.php
modules/contrib/tmgmt/src/Form/JobAbortForm.php
modules/contrib/tmgmt/src/Form/JobForm.php
modules/contrib/tmgmt/src/Form/JobItemAbortForm.php
modules/contrib/tmgmt/src/Form/JobItemDeleteForm.php
modules/contrib/tmgmt/src/Form/JobItemForm.php
modules/contrib/tmgmt/src/Form/JobResubmitForm.php
modules/contrib/tmgmt/src/Form/SettingsForm.php
modules/contrib/tmgmt/src/Form/SourceOverviewForm.php
modules/contrib/tmgmt/src/Form/TmgmtFormBase.php
modules/contrib/tmgmt/src/Form/TranslatorForm.php
modules/contrib/tmgmt/src/JobCheckoutManager.php
modules/contrib/tmgmt/src/JobInterface.php
modules/contrib/tmgmt/src/JobItemCart.php
modules/contrib/tmgmt/src/JobItemInterface.php
modules/contrib/tmgmt/src/JobQueue.php
modules/contrib/tmgmt/src/LanguageMatcher.php
modules/contrib/tmgmt/src/Menu/JobItemBreadcrumbBuilder.php
modules/contrib/tmgmt/src/MessageInterface.php
modules/contrib/tmgmt/src/NullSegmenter.php
modules/contrib/tmgmt/src/Plugin/views/access/ViewJobAccess.php
modules/contrib/tmgmt/src/Plugin/views/area/JobItemLegend.php
modules/contrib/tmgmt/src/Plugin/views/area/JobLegend.php
modules/contrib/tmgmt/src/Plugin/views/field/EntityLabel.php
modules/contrib/tmgmt/src/Plugin/views/field/JobItemState.php
modules/contrib/tmgmt/src/Plugin/views/field/JobItemType.php
modules/contrib/tmgmt/src/Plugin/views/field/JobState.php
modules/contrib/tmgmt/src/Plugin/views/field/Message.php
modules/contrib/tmgmt/src/Plugin/views/field/Progress.php
modules/contrib/tmgmt/src/Plugin/views/field/StatisticsBase.php
modules/contrib/tmgmt/src/Plugin/views/field/TagsCount.php
modules/contrib/tmgmt/src/Plugin/views/field/Translator.php
modules/contrib/tmgmt/src/Plugin/views/field/WordCount.php
modules/contrib/tmgmt/src/Plugin/views/filter/JobItemState.php
modules/contrib/tmgmt/src/Plugin/views/filter/JobState.php
modules/contrib/tmgmt/src/Plugin/views/filter/JobType.php
modules/contrib/tmgmt/src/RemoteMappingInterface.php
modules/contrib/tmgmt/src/SegmenterInterface.php
modules/contrib/tmgmt/src/SourceManager.php
modules/contrib/tmgmt/src/SourcePluginBase.php
modules/contrib/tmgmt/src/SourcePluginInterface.php
modules/contrib/tmgmt/src/SourcePluginUiBase.php
modules/contrib/tmgmt/src/SourcePluginUiInterface.php
modules/contrib/tmgmt/src/SourcePreviewInterface.php
modules/contrib/tmgmt/src/TMGMTException.php
modules/contrib/tmgmt/src/Tests/EntityTestBase.php
modules/contrib/tmgmt/src/Tests/TMGMTTestBase.php
modules/contrib/tmgmt/src/Translator/AvailableResult.php
modules/contrib/tmgmt/src/Translator/TranslatableResult.php
modules/contrib/tmgmt/src/Translator/TranslatorResult.php
modules/contrib/tmgmt/src/TranslatorInterface.php
modules/contrib/tmgmt/src/TranslatorManager.php
modules/contrib/tmgmt/src/TranslatorPluginBase.php
modules/contrib/tmgmt/src/TranslatorPluginInterface.php
modules/contrib/tmgmt/src/TranslatorPluginUiBase.php
modules/contrib/tmgmt/src/TranslatorPluginUiInterface.php
modules/contrib/tmgmt/src/TranslatorRejectDataInterface.php
modules/contrib/tmgmt/tests/src/Functional/LocalTasksTests.php
modules/contrib/tmgmt/tests/src/Functional/TMGMTCartTest.php
modules/contrib/tmgmt/tests/src/Functional/TMGMTTestBase.php
modules/contrib/tmgmt/tests/src/Functional/TMGMTUiContinuousTest.php
modules/contrib/tmgmt/tests/src/Functional/TMGMTUiReviewTest.php
modules/contrib/tmgmt/tests/src/Functional/TMGMTUiTest.php
modules/contrib/tmgmt/tests/src/Functional/TmgmtEntityTestTrait.php
modules/contrib/tmgmt/tests/src/Functional/TmgmtTestTrait.php
modules/contrib/tmgmt/tests/src/Functional/TranslatorTest.php
modules/contrib/tmgmt/tests/src/Functional/TranslatorUITest.php
modules/contrib/tmgmt/tests/src/FunctionalJavascript/TMGMTUiJavascriptTest.php
modules/contrib/tmgmt/tests/src/FunctionalJavascript/TmgmtContinuousJavascriptTest.php
modules/contrib/tmgmt/tests/src/FunctionalJavascript/TranslatorJavascriptTest.php
modules/contrib/tmgmt/tests/src/Kernel/CrudTest.php
modules/contrib/tmgmt/tests/src/Kernel/HelperTest.php
modules/contrib/tmgmt/tests/src/Kernel/PluginsTest.php
modules/contrib/tmgmt/tests/src/Kernel/TMGMTKernelTestBase.php
modules/contrib/tmgmt/tmgmt.api.php
modules/contrib/tmgmt/tmgmt.install
modules/contrib/tmgmt/tmgmt.module
modules/contrib/tmgmt/tmgmt.post_update.php
modules/contrib/tmgmt/tmgmt_test/src/EventSubscriber/TestContinuousEventSubscriber.php
modules/contrib/tmgmt/tmgmt_test/src/Plugin/tmgmt/Source/TestHtmlSource.php
modules/contrib/tmgmt/tmgmt_test/src/Plugin/tmgmt/Source/TestSource.php
modules/contrib/tmgmt/tmgmt_test/src/Plugin/tmgmt/Translator/TestTranslator.php
modules/contrib/tmgmt/tmgmt_test/src/TestController.php
modules/contrib/tmgmt/tmgmt_test/src/TestTranslatorUi.php
modules/contrib/tmgmt/tmgmt_test/tmgmt_test.module
modules/contrib/tmgmt/translators/tmgmt_file/src/Annotation/FormatPlugin.php
modules/contrib/tmgmt/translators/tmgmt_file/src/Commands/TmgmtFileCommands.php
modules/contrib/tmgmt/translators/tmgmt_file/src/FileTranslatorUi.php
modules/contrib/tmgmt/translators/tmgmt_file/src/Format/FormatInterface.php
modules/contrib/tmgmt/translators/tmgmt_file/src/Format/FormatManager.php
modules/contrib/tmgmt/translators/tmgmt_file/src/Plugin/tmgmt/Translator/FileTranslator.php
modules/contrib/tmgmt/translators/tmgmt_file/src/Plugin/tmgmt_file/Format/Html.php
modules/contrib/tmgmt/translators/tmgmt_file/src/Plugin/tmgmt_file/Format/Xliff.php
modules/contrib/tmgmt/translators/tmgmt_file/src/RecursiveDOMIterator.php
modules/contrib/tmgmt/translators/tmgmt_file/tests/src/Functional/FileTranslatorTest.php
modules/contrib/tmgmt/translators/tmgmt_file/tmgmt_file.api.php
modules/contrib/tmgmt/translators/tmgmt_file/tmgmt_file.drush.inc
modules/contrib/tmgmt/translators/tmgmt_file/tmgmt_file.module
modules/contrib/tmgmt/translators/tmgmt_local/skills/src/Plugin/Field/FieldFormatter/LanguageCombinationDefaultFormatter.php
modules/contrib/tmgmt/translators/tmgmt_local/skills/src/Plugin/Field/FieldFormatter/LanguageCombinationTableFormatter.php
modules/contrib/tmgmt/translators/tmgmt_local/skills/src/Plugin/Field/FieldType/LanguageCombination.php
modules/contrib/tmgmt/translators/tmgmt_local/skills/src/Plugin/Field/FieldWidget/LanguageCombinationWidget.php
modules/contrib/tmgmt/translators/tmgmt_local/skills/src/Plugin/Validation/Constraint/LanguageCombinationConstraint.php
modules/contrib/tmgmt/translators/tmgmt_local/skills/src/Plugin/Validation/Constraint/LanguageCombinationConstraintValidator.php
modules/contrib/tmgmt/translators/tmgmt_local/skills/tmgmt_language_combination.module
modules/contrib/tmgmt/translators/tmgmt_local/src/Controller/LocalTaskController.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Entity/Controller/LocalTaskAccessControlHandler.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Entity/Controller/LocalTaskItemAccessController.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Entity/ListBuilder/LocalTaskItemListBuilder.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Entity/ListBuilder/LocalTaskListBuilder.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Entity/LocalTask.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Entity/LocalTaskItem.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Entity/ViewsData/LocalTaskItemViewsData.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Entity/ViewsData/LocalTaskViewsData.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Form/AssignMultiple.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Form/LocalTaskAssignForm.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Form/LocalTaskForm.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Form/LocalTaskItemForm.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Form/LocalTaskUnassignForm.php
modules/contrib/tmgmt/translators/tmgmt_local/src/LocalTaskInterface.php
modules/contrib/tmgmt/translators/tmgmt_local/src/LocalTaskItemInterface.php
modules/contrib/tmgmt/translators/tmgmt_local/src/LocalTranslatorUi.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Menu/TMGMTLocalBreadcrumbBuilder.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/Action/AssignTask.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/Action/AssignToMeTask.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/Action/UnassignTask.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/tmgmt/Translator/LocalTranslator.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/area/TaskLegend.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/field/ItemCount.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/field/LoopCount.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/field/Progress.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/field/TaskItemStatus.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/field/TaskStatus.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/field/WordCount.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/filter/TaskEligible.php
modules/contrib/tmgmt/translators/tmgmt_local/src/Routing/RouteSubscriber.php
modules/contrib/tmgmt/translators/tmgmt_local/tests/src/Functional/LocalTranslatorContinuousTest.php
modules/contrib/tmgmt/translators/tmgmt_local/tests/src/Functional/LocalTranslatorPreviewTest.php
modules/contrib/tmgmt/translators/tmgmt_local/tests/src/Functional/LocalTranslatorTest.php
modules/contrib/tmgmt/translators/tmgmt_local/tests/src/Functional/LocalTranslatorTestBase.php
modules/contrib/tmgmt/translators/tmgmt_local/tmgmt_local.api.php
modules/contrib/tmgmt/translators/tmgmt_local/tmgmt_local.install
modules/contrib/tmgmt/translators/tmgmt_local/tmgmt_local.module
modules/contrib/tmgmt/translators/tmgmt_local/tmgmt_local.post_update.php
modules/contrib/tmgmt/translators/tmgmt_local/tmgmt_local.rules.inc
modules/contrib/tmgmt/translators/tmgmt_local/tmgmt_local.rules_defaults.inc
modules/contrib/tmgmt/translators/tmgmt_local/tmgmt_local.theme.inc

23 files with changes
=====================

1) modules/contrib/tmgmt/translators/tmgmt_local/tmgmt_local.theme.inc:58

    ---------- begin diff ----------
@@ @@
       break;
     case TMGMT_DATA_ITEM_STATE_TRANSLATED:
       $title = t('Translated');
-      $icon = drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg';
+      $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg';
       break;
     case TMGMT_DATA_ITEM_STATE_UNTRANSLATED:
     default:
       $title = t('Untranslated');
-      $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+      $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
       break;
   }
   $variables['wrapper_attributes'] = new Attribute([
     'class' => $classes,
   ]);
-  $variables['icon_url'] = file_create_url($icon);
+  $variables['icon_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($icon);
   $variables['title'] = $title;
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector


2) modules/contrib/tmgmt/translators/tmgmt_local/tmgmt_local.module:703

    ---------- begin diff ----------
@@ @@
 function tmgmt_color_legend_local_task_item() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ready.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg'),
       'legend' => t('Untranslated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg'),
       'legend' => t('Translated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg'),
       'legend' => t('Rejected'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Completed'),
     ],
   ];
@@ @@
 function tmgmt_color_legend_local_task() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg'),
       'legend' => t('Unassigned'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ready.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg'),
       'legend' => t('Needs action'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg'),
       'legend' => t('In review'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ex-red.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ex-red.svg'),
       'legend' => t('Rejected'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Closed'),
     ],
   ];
@@ @@
 function tmgmt_color_local_review_legend() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ready.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg'),
       'legend' => t('Untranslated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg'),
       'legend' => t('Translated'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Accepted'),
     ],
   ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector


3) modules/contrib/tmgmt/translators/tmgmt_local/tests/src/Functional/LocalTranslatorTest.php:172

    ---------- begin diff ----------
@@ @@
     \Drupal::state()->set('tmgmt.test_source_data', [
       'dummy' => [
         'deep_nesting' => [
-          '#text' => file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'),
+          '#text' => file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'),
           '#label' => 'Label for job item with type test and id 2.',
           '#translate' => TRUE,
           '#format' => 'basic_html',
@@ @@
     \Drupal::state()->set('tmgmt.test_source_data', [
       'dummy' => [
         'deep_nesting' => [
-          '#text' => file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'),
+          '#text' => file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'),
           '#label' => 'Label for job item with type test and id 2.',
           '#translate' => TRUE,
           '#format' => 'basic_html',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/field/TaskStatus.php:20

    ---------- begin diff ----------
@@ @@
     switch ($value) {
       case LocalTaskInterface::STATUS_PENDING:
         $label = t('Needs action');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
         break;

       case LocalTaskInterface::STATUS_COMPLETED:
         $label = t('In review');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg';
         break;

       case LocalTaskInterface::STATUS_REJECTED:
         $label = t('Rejected');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ex-red.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ex-red.svg';
         break;

       case LocalTaskInterface::STATUS_CLOSED:
@@ @@

       default:
         $label = t('Unassigned');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg';
     }
     $element = [
       '#type' => 'inline_template',
       '#template' => '<img src="{{ icon }}" title="{{ label }}"><span></span></img>',
       '#context' => array(
-        'icon' => file_create_url($icon),
+        'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon),
         'label' => $label,
       ),
     ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/tmgmt/translators/tmgmt_local/src/Plugin/views/field/TaskItemStatus.php:20

    ---------- begin diff ----------
@@ @@
     switch ($value) {
       case LocalTaskItemInterface::STATUS_PENDING:
         $label = t('Untranslated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
         break;

       case LocalTaskItemInterface::STATUS_COMPLETED:
         $label = t('Translated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg';
         break;

       case LocalTaskItemInterface::STATUS_REJECTED:
         $label = t('Rejected');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg';
         break;

       case LocalTaskItemInterface::STATUS_CLOSED:
@@ @@

       default:
         $label = t('Untranslated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
     }
     $element = [
       '#type' => 'inline_template',
       '#template' => '<img src="{{ icon }}" title="{{ label }}"><span></span></img>',
       '#context' => array(
-        'icon' => file_create_url($icon),
+        'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon),
         'label' => $label,
       ),
     ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/tmgmt/translators/tmgmt_file/tmgmt_file.module:15

    ---------- begin diff ----------
@@ @@
 function tmgmt_file_theme() {
   return array(
     'tmgmt_file_html_template' => array(
-      'path' => drupal_get_path('module', 'tmgmt_file') . '/templates',
+      'path' => \Drupal::service('extension.list.module')->getPath('tmgmt_file') . '/templates',
       'template' => 'tmgmt_file_html_template',
       'variables' => array('tjid' => NULL, 'source_language' => NULL, 'target_language' => NULL, 'items' => NULL),
     ),
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


7) modules/contrib/tmgmt/translators/tmgmt_file/tests/src/Functional/FileTranslatorTest.php:48

    ---------- begin diff ----------
@@ @@
     ]);

     // Get the source text.
-    $source_text = trim(file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'));
+    $source_text = trim(file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'));

     // Create the reader instance, it will be used through the tests.
     $reader = new \XMLReader();
@@ @@
     ]);

     // Get the source text.
-    $source_text = trim(file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'));
+    $source_text = trim(file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'));

     // Create a new job.
     $job = $this->createJob();
@@ @@

     $dom = new \DOMDocument();
     $dom->loadXML($xliff);
-    $this->assertTrue($dom->schemaValidate(drupal_get_path('module', 'tmgmt_file') . '/xliff-core-1.2-strict.xsd'));
+    $this->assertTrue($dom->schemaValidate(\Drupal::service('extension.list.module')->getPath('tmgmt_file') . '/xliff-core-1.2-strict.xsd'));

     // "Translate" items.
     $xml = simplexml_import_dom($dom);
@@ @@
     \Drupal::state()->set('tmgmt.test_source_data', array(
       'dummy' => array(
         'deep_nesting' => array(
-          '#text' => file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html') . ' @id.',
+          '#text' => file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html') . ' @id.',
           '#label' => 'Label of deep nested item @id',
         ),
         '#label' => 'Dummy item',
@@ @@
     $xliff = file_get_contents($download_url);
     $dom = new \DOMDocument();
     $dom->loadXML($xliff);
-    $this->assertTrue($dom->schemaValidate(drupal_get_path('module', 'tmgmt_file') . '/xliff-core-1.2-strict.xsd'));
+    $this->assertTrue($dom->schemaValidate(\Drupal::service('extension.list.module')->getPath('tmgmt_file') . '/xliff-core-1.2-strict.xsd'));

     // Build a list of expected note labels.
     $expected_notes = [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/tmgmt/translators/tmgmt_file/src/Plugin/tmgmt/Translator/FileTranslator.php:38

    ---------- begin diff ----------
@@ @@
     $path = $job->getSetting('scheme') . '://tmgmt_file/' . $name . '.' .  $job->getSetting('export_format');
     $dirname = dirname($path);
     if (\Drupal::service('file_system')->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS)) {
-      $file = file_save_data($export->export($job), $path, FileSystemInterface::EXISTS_REPLACE);
+      $file = \Drupal::service('file.repository')->writeData($export->export($job), $path, FileSystemInterface::EXISTS_REPLACE);
       \Drupal::service('file.usage')->add($file, 'tmgmt_file', 'tmgmt_job', $job->id());
-      $job->submitted('Exported file can be downloaded <a href="@link" download>here</a>.', array('@link' => file_create_url($path)));
+      $job->submitted('Exported file can be downloaded <a href="@link" download>here</a>.', array('@link' => \Drupal::service('file_url_generator')->generateAbsoluteString($path)));
     }
     else {
       $job->rejected('Failed to create writable directory @dirname, check file system permissions.', ['@dirname' => $dirname]);
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/tmgmt/tmgmt_test/tmgmt_test.module:65

    ---------- begin diff ----------
@@ @@
   $definitions['tmgmt_test_generating'] = [
     'label' => t('Translation is requested from the elders of the Internet'),
     'type' => 'translator_state',
-    'icon' => drupal_get_path('module', 'tmgmt') . '/icons/earth.svg',
+    'icon' => \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/earth.svg',
     'show_job_filter' => TRUE,
   ];
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


10) modules/contrib/tmgmt/tmgmt_test/src/Plugin/tmgmt/Source/TestHtmlSource.php:21

    ---------- begin diff ----------
@@ @@
     return array(
       'dummy' => array(
         'deep_nesting' => array(
-          '#text' => file_get_contents(drupal_get_path('module', 'tmgmt') . '/tests/testing_html/sample.html'),
+          '#text' => file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/tests/testing_html/sample.html'),
           '#label' => 'Label for job item with type ' . $job_item->getItemType() . ' and id ' . $job_item->getItemId() . '.',
         ),
       ),
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/tmgmt/tmgmt.module:943

    ---------- begin diff ----------
@@ @@
 function tmgmt_color_legend() {
   $items = [
     [
-      'icon' => file_create_url('core/misc/icons/bebebe/house.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/bebebe/house.svg'),
       'legend' => t('Original language'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/bebebe/ex.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/bebebe/ex.svg'),
       'legend' => t('Not translated'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Translated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/outdated.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/outdated.svg'),
       'legend' => t('Translation Outdated'),
     ],
   ];
@@ @@
   foreach (JobItem::getStateDefinitions() as $state_definition) {
     if (!empty($state_definition['icon'])) {
       $items[] = [
-        'icon' => file_url_transform_relative(file_create_url($state_definition['icon'])),
+        'icon' => \Drupal::service('file_url_generator')->generateString($state_definition['icon']),
         'legend' => $state_definition['label'],
       ];
     }
@@ @@
   foreach (JobItem::getStateDefinitions() as $state_definition) {
     if (!empty($state_definition['icon'])) {
       $items[] = [
-        'icon' => file_url_transform_relative(file_create_url($state_definition['icon'])),
+        'icon' => \Drupal::service('file_url_generator')->generateString($state_definition['icon']),
         'legend' => $state_definition['label'],
       ];
     }
@@ @@
 function tmgmt_color_job_legend() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg'),
       'legend' => t('Unprocessed'),
     ],
   ];
@@ @@
   foreach (JobItem::getStateDefinitions() as $state_definition) {
     if (!empty($state_definition['icon'])) {
       $items[] = [
-        'icon' => file_url_transform_relative(file_create_url($state_definition['icon'])),
+        'icon' => \Drupal::service('file_url_generator')->generateString($state_definition['icon']),
         'legend' => $state_definition['label'],
       ];
     }
@@ @@

   if (\Drupal::service('tmgmt.continuous')->hasContinuousJobs()) {
     $items[] = [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/continuous.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/continuous.svg'),
       'legend' => t('Continuous'),
     ];
   };
@@ @@
 function tmgmt_color_review_legend() {
   $items = [
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg'),
       'legend' => t('Pending'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/ready.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg'),
       'legend' => t('Translated'),
     ],
     [
-      'icon' => file_create_url(drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg'),
       'legend' => t('Reviewed'),
     ],
     [
-      'icon' => file_create_url('core/misc/icons/73b355/check.svg'),
+      'icon' => \Drupal::service('file_url_generator')->generateAbsoluteString('core/misc/icons/73b355/check.svg'),
       'legend' => t('Accepted'),
     ],
   ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector


12) modules/contrib/tmgmt/tmgmt.install:71

    ---------- begin diff ----------
@@ @@
  * Add job items overview.
  */
 function tmgmt_update_8005() {
-  $overview = file_get_contents(drupal_get_path('module', 'tmgmt') . '/config/install/views.view.tmgmt_translation_all_job_items.yml');
+  $overview = file_get_contents(\Drupal::service('extension.list.module')->getPath('tmgmt') . '/config/install/views.view.tmgmt_translation_all_job_items.yml');
   $values = Yaml::decode($overview);
   $storage_controller = \Drupal::entityTypeManager()->getStorage('view');
   $storage_controller->create($values)->save();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


13) modules/contrib/tmgmt/src/SourcePluginUiBase.php:303

    ---------- begin diff ----------
@@ @@

       case 'outofdate':
         $label = t('Translation Outdated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/outdated.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/outdated.svg';
         break;

       default:
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/tmgmt/src/Plugin/views/field/JobState.php:21

    ---------- begin diff ----------
@@ @@
     switch ($job->getState()) {
       case JobInterface::STATE_UNPROCESSED:
         $label = t('Unprocessed');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg';
         break;

       case JobInterface::STATE_ACTIVE:
@@ @@
           return $highest_weight_icon;
         }
         $label = t('In progress');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg';
         break;

       case JobInterface::STATE_CONTINUOUS:
         $label = t('Continuous');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/continuous.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/continuous.svg';
         break;

       case JobInterface::STATE_CONTINUOUS_INACTIVE:
         $label = t('Continuous Inactive');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/continuous_inactive.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/continuous_inactive.svg';
         break;

       default:
@@ @@
     if ($icon && $label) {
       return [
         '#theme' => 'image',
-        '#uri' => file_create_url($icon),
+        '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon),
         '#title' => $label,
         '#alt' => $label,
         '#width' => 16,
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/tmgmt/src/Form/TranslatorForm.php:142

    ---------- begin diff ----------
@@ @@
       if (isset($definition['logo'])) {
         $form['plugin_wrapper']['logo'] = $logo_render_array = [
           '#theme' => 'image',
-          '#uri' => file_create_url(drupal_get_path('module', $definition['provider']) . '/' . $definition['logo']),
+          '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath($definition['provider']) . '/' . $definition['logo']),
           '#alt' => $definition['label'],
           '#title' => $definition['label'],
           '#attributes' => [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/tmgmt/src/Form/JobItemForm.php:533

    ---------- begin diff ----------
@@ @@
         break;
       case TMGMT_DATA_ITEM_STATE_REVIEWED:
         $title = t('Reviewed');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/gray-check.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/gray-check.svg';
         break;
       case TMGMT_DATA_ITEM_STATE_TRANSLATED:
         $title = t('Translated');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/ready.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg';
         break;
       case TMGMT_DATA_ITEM_STATE_PENDING:
       default:
         $title = t('Pending');
-        $icon = drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg';
+        $icon = \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg';
         break;
     }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/tmgmt/src/Form/JobForm.php:431

    ---------- begin diff ----------
@@ @@
       if (isset($definition['logo'])) {
         $form['translator_wrapper']['logo'] = $logo_render_array = [
           '#theme' => 'image',
-          '#uri' => file_create_url(drupal_get_path('module', $definition['provider']) . '/' . $definition['logo']),
+          '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath($definition['provider']) . '/' . $definition['logo']),
           '#alt' => $definition['label'],
           '#title' => $definition['label'],
           '#attributes' => [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/tmgmt/src/Events/ShouldCreateJobEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @see \Drupal\tmgmt\ContinuousSourceInterface::shouldCreateContinuousItem()
  */
-class ShouldCreateJobEvent extends Event {
+class ShouldCreateJobEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    *  Continuous job entity.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/tmgmt/src/Entity/ListBuilder/TranslatorListBuilder.php:108

    ---------- begin diff ----------
@@ @@
     if (isset($definition['logo'])) {
       $logo_render_array = [
         '#theme' => 'image',
-        '#uri' => file_create_url(drupal_get_path('module', $definition['provider']) . '/' . $definition['logo']),
+        '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath($definition['provider']) . '/' . $definition['logo']),
         '#alt' => $definition['label'],
         '#title' => $definition['label'],
         '#attributes' => [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/tmgmt/src/Entity/JobItem.php:1155

    ---------- begin diff ----------
@@ @@
       static::STATE_ACTIVE => [
         'label' => t('In progress'),
         'type' => 'state',
-        'icon' => drupal_get_path('module', 'tmgmt') . '/icons/hourglass.svg',
+        'icon' => \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/hourglass.svg',
         'weight' => 0,
         'show_job_filter' => TRUE,
       ],
@@ @@
       static::STATE_REVIEW => [
         'label' => t('Needs review'),
         'type' => 'state',
-        'icon' => drupal_get_path('module', 'tmgmt') . '/icons/ready.svg',
+        'icon' => \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/ready.svg',
         'weight' => 5,
         'show_job_filter' => TRUE,
       ],
@@ @@
       static::STATE_INACTIVE => [
         'label' => t('Inactive'),
         'type' => 'state',
-        'icon' => drupal_get_path('module', 'tmgmt') . '/icons/rejected.svg',
+        'icon' => \Drupal::service('extension.list.module')->getPath('tmgmt') . '/icons/rejected.svg',
         'weight' => 20,
       ],
     ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/tmgmt/src/ContinuousManager.php:136

    ---------- begin diff ----------
@@ @@

     // Some modules might want to filter out candidates for items.
     $event = new ShouldCreateJobEvent($job, $plugin, $item_type, $item_id, $should_create_item);
-    $this->eventDispatcher->dispatch(ContinuousEvents::SHOULD_CREATE_JOB, $event);
+    $this->eventDispatcher->dispatch($event, ContinuousEvents::SHOULD_CREATE_JOB);

     if ($event->shouldCreateItem()) {
       if ($most_recent_job_item) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


22) modules/contrib/tmgmt/sources/locale/tests/src/Kernel/LocaleSourceTest.php:30

    ---------- begin diff ----------
@@ @@
     \Drupal::service('router.builder')->rebuild();
     $this->installSchema('locale', array('locales_source', 'locales_target'));
     $file = new \stdClass();
-    $file->uri =  \Drupal::service('file_system')->realpath(drupal_get_path('module', 'tmgmt_locale') . '/tests/test.xx.po');
+    $file->uri =  \Drupal::service('file_system')->realpath(\Drupal::service('extension.list.module')->getPath('tmgmt_locale') . '/tests/test.xx.po');
     $file->langcode = $this->langcode;
     Gettext::fileToDatabase($file, array());
     $this->addLanguage('es');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/tmgmt/sources/locale/tests/src/Functional/LocaleSourceUiTest.php:28

    ---------- begin diff ----------
@@ @@
     $this->langcode = 'de';
     $this->context = 'default';
     $file = new \stdClass();
-    $file->uri =  \Drupal::service('file_system')->realpath(drupal_get_path('module', 'tmgmt_locale') . '/tests/test.xx.po');
+    $file->uri =  \Drupal::service('file_system')->realpath(\Drupal::service('extension.list.module')->getPath('tmgmt_locale') . '/tests/test.xx.po');
     $file->langcode = $this->langcode;
     Gettext::fileToDatabase($file, array());
     $this->addLanguage($this->langcode);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process "modules/contrib/tmgmt/src/Tests/TMGMTTestBase.php"  
         file, due to:                                                          
         "Analyze error: "Class Drupal\simpletest\WebTestBase not found.". Include
         your files in "$rectorConfig->autoloadPaths([...]);" or                
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process "modules/contrib/tmgmt/src/Tests/EntityTestBase.php" 
         file, due to:                                                          
         "Analyze error: "Class Drupal\simpletest\WebTestBase not found.". Include
         your files in "$rectorConfig->autoloadPaths([...]);" or                
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

