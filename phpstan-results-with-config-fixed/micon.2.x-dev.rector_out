modules/contrib/micon/micon.module
modules/contrib/micon/micon.theme.inc
modules/contrib/micon/micon_content_type/micon_content_type.module
modules/contrib/micon/micon_content_type/src/MiconContentTypeListBuilder.php
modules/contrib/micon/micon_link/micon_link.module
modules/contrib/micon/micon_link/src/Plugin/Field/FieldFormatter/MiconLinkFormatter.php
modules/contrib/micon/micon_link/src/Plugin/Field/FieldWidget/MiconLinkWidget.php
modules/contrib/micon/micon_link/src/Plugin/Field/FieldWidget/MiconLinkWidgetTrait.php
modules/contrib/micon/micon_linkit/micon_linkit.module
modules/contrib/micon/micon_linkit/src/Plugin/Field/FieldWidget/MiconLinkitWidget.php
modules/contrib/micon/micon_local_task/micon_local_task.module
modules/contrib/micon/micon_local_task/src/Form/MiconLocalTaskConfigForm.php
modules/contrib/micon/micon_menu/micon_menu.module
modules/contrib/micon/micon_menu/src/Form/MiconMenuConfigForm.php
modules/contrib/micon/micon_menu/src/MiconLoginLogoutMenuLink.php
modules/contrib/micon/micon_menu/src/MiconMenuLinkDefault.php
modules/contrib/micon/micon_menu/src/MiconMenuLinkManager.php
modules/contrib/micon/micon_menu/src/MiconMenuServiceProvider.php
modules/contrib/micon/micon_menu/src/MiconStaticMenuLinkOverrides.php
modules/contrib/micon/micon_menu/src/Plugin/Field/FieldWidget/MiconMenuWidget.php
modules/contrib/micon/micon_paragraphs/micon_paragraphs.module
modules/contrib/micon/micon_paragraphs/src/MiconParagraphsTypeListBuilder.php
modules/contrib/micon/micon_vocabulary/micon_vocabulary.module
modules/contrib/micon/src/Commands/MiconCommands.php
modules/contrib/micon/src/Element/Micon.php
modules/contrib/micon/src/Entity/Micon.php
modules/contrib/micon/src/Entity/MiconInterface.php
modules/contrib/micon/src/Form/MiconDeleteForm.php
modules/contrib/micon/src/Form/MiconForm.php
modules/contrib/micon/src/MiconDiscoveryManager.php
modules/contrib/micon/src/MiconHtmlRouteProvider.php
modules/contrib/micon/src/MiconIcon.php
modules/contrib/micon/src/MiconIconInterface.php
modules/contrib/micon/src/MiconIconManager.php
modules/contrib/micon/src/MiconIconize.php
modules/contrib/micon/src/MiconIconizeTrait.php
modules/contrib/micon/src/MiconListBuilder.php
modules/contrib/micon/src/MiconViewBuilder.php
modules/contrib/micon/src/Plugin/Field/FieldFormatter/EntityReferenceMiconFormatter.php
modules/contrib/micon/src/Plugin/Field/FieldFormatter/FileMiconFormatter.php
modules/contrib/micon/src/Plugin/Field/FieldFormatter/StringMiconFormatter.php
modules/contrib/micon/src/Plugin/Field/FieldType/StringMiconItem.php
modules/contrib/micon/src/Plugin/Field/FieldWidget/StringMiconWidget.php
modules/contrib/micon/src/Plugin/SocialMediaLinks/Iconset/Micon.php
modules/contrib/micon/src/TwigExtension/Micon.php
modules/contrib/micon/tests/src/Functional/MiconFunctionalTest.php

2 files with changes
====================

1) modules/contrib/micon/src/Plugin/Field/FieldFormatter/FileMiconFormatter.php:116

    ---------- begin diff ----------
@@ @@

     foreach ($this->getEntitiesToView($items, $langcode) as $delta => $file) {
       $item = $file->_referringItem;
-      $url = file_create_url($file->getFileUri());
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       $options = [];
       if ($this->getSetting('target')) {
         $options['attributes']['target'] = '_blank';
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/micon/src/Entity/Micon.php:164

    ---------- begin diff ----------
@@ @@

         $icon['tags'] = implode(",", $icon['icon']['tags']);
         $icon['prefix'] = $this->getPrefix();
-        $icon['directory'] = file_create_url($this->getDirectory());
+        $icon['directory'] = \Drupal::service('file_url_generator')->generateAbsoluteString($this->getDirectory());
         $icon['package_id'] = $this->id();
         $icon['package_label'] = $this->label();
         $micon_icon = new MiconIcon($this->type(), $icon);
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/micon/src/Plugin/SocialMediaLinks/Iconset/Micon.php"  
         file, due to:                                                          
         "Analyze error: "Class Drupal\social_media_links\IconsetBase not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/micon/micon_paragraphs/src/MiconParagraphsTypeListBuilde
         r.php" file, due to:                                                   
         "Analyze error: "Class                                                 
         Drupal\paragraphs\Controller\ParagraphsTypeListBuilder not found.".    
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/micon/micon_linkit/src/Plugin/Field/FieldWidget/MiconLin
         kitWidget.php" file, due to:                                           
         "Analyze error: "Class                                                 
         Drupal\linkit\Plugin\Field\FieldWidget\LinkitWidget not found.". Include
         your files in "$rectorConfig->autoloadPaths([...]);" or                
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

