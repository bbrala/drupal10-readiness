diff --git a/src/Controller/XmlSitemapController.php b/src/Controller/XmlSitemapController.php
index ccd7535..c72641b 100644
--- a/src/Controller/XmlSitemapController.php
+++ b/src/Controller/XmlSitemapController.php
@@ -159,7 +159,7 @@ class XmlSitemapController extends ControllerBase {
    */
   public function renderSitemapXsl() {
     // Read the XSL content from the file.
-    $module_path = drupal_get_path('module', 'xmlsitemap');
+    $module_path = \Drupal::service('extension.list.module')->getPath('xmlsitemap');
     $xsl_content = file_get_contents($module_path . '/xsl/xmlsitemap.xsl');
 
     // Make sure the strings in the XSL content are translated properly.
diff --git a/src/Form/XmlSitemapSettingsForm.php b/src/Form/XmlSitemapSettingsForm.php
index 8c4fb42..c02d5e2 100644
--- a/src/Form/XmlSitemapSettingsForm.php
+++ b/src/Form/XmlSitemapSettingsForm.php
@@ -197,7 +197,7 @@ class XmlSitemapSettingsForm extends ConfigFormBase {
       '#size' => 30,
       '#maxlength' => 255,
       '#description' => $this->t('Subdirectory where the sitemap data will be stored. This folder <strong>must not be shared</strong> with any other Drupal site or install using XML Sitemap.'),
-      '#field_prefix' => file_build_uri(''),
+      '#field_prefix' => \Drupal::service('stream_wrapper_manager')->normalizeUri(\Drupal::config('system.file')->get('default_scheme') . ('://' . '')),
       '#required' => TRUE,
     ];
     $base_url_override = Settings::get('xmlsitemap_base_url', FALSE);
diff --git a/src/XmlSitemapLinkStorage.php b/src/XmlSitemapLinkStorage.php
index 2a641c6..3614227 100644
--- a/src/XmlSitemapLinkStorage.php
+++ b/src/XmlSitemapLinkStorage.php
@@ -108,7 +108,7 @@ class XmlSitemapLinkStorage implements XmlSitemapLinkStorageInterface {
         }
         else {
           // Attempt to transform this to a relative URL.
-          $loc = file_url_transform_relative($url->toString());
+          $loc = \Drupal::service('file_url_generator')->transformRelative($url->toString());
           // If it could not be transformed into a relative path, disregard it
           // since we cannot store external URLs in the sitemap.
           if (UrlHelper::isExternal($loc)) {
diff --git a/tests/src/Functional/XmlSitemapEntityFunctionalTest.php b/tests/src/Functional/XmlSitemapEntityFunctionalTest.php
index 1b2815f..71481e8 100644
--- a/tests/src/Functional/XmlSitemapEntityFunctionalTest.php
+++ b/tests/src/Functional/XmlSitemapEntityFunctionalTest.php
@@ -21,7 +21,7 @@ class XmlSitemapEntityFunctionalTest extends XmlSitemapTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->admin_user = $this->drupalCreateUser(['administer entity_test content', 'administer xmlsitemap']);
@@ -45,7 +45,7 @@ class XmlSitemapEntityFunctionalTest extends XmlSitemapTestBase {
       'entity_types[entity_test_mul]' => 1,
       'settings[entity_test_mul][types][entity_test_mul]' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
     $entity = EntityTestMul::create();
     $entity->save();
@@ -77,7 +77,7 @@ class XmlSitemapEntityFunctionalTest extends XmlSitemapTestBase {
       'xmlsitemap[priority]' => 0.3,
       'xmlsitemap[changefreq]' => XMLSITEMAP_FREQUENCY_WEEKLY,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $entity = EntityTestMul::create();
     $entity->save();
     $this->assertSitemapLinkValues('entity_test_mul', $entity->id(), [
@@ -100,7 +100,8 @@ class XmlSitemapEntityFunctionalTest extends XmlSitemapTestBase {
       'xmlsitemap[priority]' => 0.6,
       'xmlsitemap[changefreq]' => XMLSITEMAP_FREQUENCY_YEARLY,
     ];
-    $this->drupalPostForm('admin/config/search/xmlsitemap/settings/entity_test_mul/entity_test_mul', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/search/xmlsitemap/settings/entity_test_mul/entity_test_mul');
+    $this->submitForm($edit, t('Save configuration'));
     $entity = EntityTestMul::create();
     $entity->save();
     $this->assertSitemapLinkValues('entity_test_mul', $entity->id(), [
diff --git a/tests/src/Functional/XmlSitemapFunctionalTest.php b/tests/src/Functional/XmlSitemapFunctionalTest.php
index 0ed827e..b7aa4b1 100644
--- a/tests/src/Functional/XmlSitemapFunctionalTest.php
+++ b/tests/src/Functional/XmlSitemapFunctionalTest.php
@@ -17,7 +17,7 @@ class XmlSitemapFunctionalTest extends XmlSitemapTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->admin_user = $this->drupalCreateUser([
@@ -54,18 +54,22 @@ class XmlSitemapFunctionalTest extends XmlSitemapTestBase {
     // @codingStandardsIgnoreEnd
     $this->drupalLogin($this->admin_user);
     $edit = ['xmlsitemap_base_url' => ''];
-    $this->drupalPostForm('admin/config/search/xmlsitemap/settings', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/search/xmlsitemap/settings');
+    $this->submitForm($edit, 'Save configuration');
 
     $edit = ['xmlsitemap_base_url' => 'invalid'];
-    $this->drupalPostForm('admin/config/search/xmlsitemap/settings', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/search/xmlsitemap/settings');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('Invalid base URL.');
 
     $edit = ['xmlsitemap_base_url' => 'http://example.com/ '];
-    $this->drupalPostForm('admin/config/search/xmlsitemap/settings', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/search/xmlsitemap/settings');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('Invalid base URL.');
 
     $edit = ['xmlsitemap_base_url' => 'http://example.com/'];
-    $this->drupalPostForm('admin/config/search/xmlsitemap/settings', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/search/xmlsitemap/settings');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $this->regenerateSitemap();
