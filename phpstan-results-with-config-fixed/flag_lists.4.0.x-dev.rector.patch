diff --git a/src/EventSubscriber/FlagForListSubscriber.php b/src/EventSubscriber/FlagForListSubscriber.php
index f7752ca..adfea3d 100644
--- a/src/EventSubscriber/FlagForListSubscriber.php
+++ b/src/EventSubscriber/FlagForListSubscriber.php
@@ -32,10 +32,10 @@ class FlagForListSubscriber implements EventSubscriberInterface {
   /**
    * This is called whenever the flag.entity_flagged event is dispatched.
    *
-   * @param Symfony\Component\EventDispatcher\Event $flag_event
+   * @param \Symfony\Contracts\EventDispatcher\Event $flag_event
    *   The response event.
    */
-  public function flagListsEntityFlagged(Event $flag_event) {
+  public function flagListsEntityFlagged(\Symfony\Contracts\EventDispatcher\Event $flag_event) {
 
     $flagId = $flag_event->getFlagging()->getFlagId();
 
@@ -51,10 +51,10 @@ class FlagForListSubscriber implements EventSubscriberInterface {
   /**
    * This is called whenever the flag.entity_unflagged event is dispatched.
    *
-   * @param Symfony\Component\EventDispatcher\Event $flag_events
+   * @param \Symfony\Contracts\EventDispatcher\Event $flag_events
    *   The response events.
    */
-  public function flagListsEntityUnflagged(Event $flag_events) {
+  public function flagListsEntityUnflagged(\Symfony\Contracts\EventDispatcher\Event $flag_events) {
     foreach ($flag_events->getFlaggings() as $flagging) {
 
       $flagId = $flagging->getFlagId();
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index bee938f..aa09058 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -34,7 +34,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -45,7 +45,7 @@ class LoadTest extends BrowserTestBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
