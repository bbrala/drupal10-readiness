modules/contrib/ckeditor_accessibility_auditor/src/Plugin/CKEditorPlugin/HTMLCodeSniffer.php
modules/contrib/ckeditor_accessibility_auditor/tests/src/FunctionalJavascript/HTMLCodeSnifferTest.php

2 files with changes
====================

1) modules/contrib/ckeditor_accessibility_auditor/tests/src/FunctionalJavascript/HTMLCodeSnifferTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a text format and associate CKEditor.
@@ @@
     $web_assert->assertWaitOnAjaxRequest();

     // Check that the icon is displayed.
-    $markup = file_url_transform_relative(file_create_url(drupal_get_path('module', 'ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/icons/html_codesniffer.png'));
-    $this->assertRaw($markup);
+    $markup = \Drupal::service('file_url_generator')->generateString(\Drupal::service('extension.list.module')->getPath('ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/icons/html_codesniffer.png');
+    $this->assertSession()->responseContains($markup);

     // Click the button.
     $this->getSession()->getPage()->find('css', '.cke_button__html_codesniffer_icon')->click();
@@ @@
   public function testSettings() {
     // Test as admin.
     $this->drupalGet('admin/config/content/formats/manage/filtered_html');
-    $this->assertRaw('Enter the URL to use as a base path for loading the HTML_CodeSniffer files.');
-    $this->assertRaw('Enter the default standard to be selected in the auditor');
-    $this->drupalPostForm(NULL, ['editor[settings][plugins][html_codesniffer][base_url]' => '\\//squizlabs.github.io/HTML_CodeSniffer/build/'], 'Save configuration');
-    $this->assertRaw('Please enter a valid Base URL for the Accessibility Auditor.');
+    $this->assertSession()->responseContains('Enter the URL to use as a base path for loading the HTML_CodeSniffer files.');
+    $this->assertSession()->responseContains('Enter the default standard to be selected in the auditor');
+    $this->submitForm(['editor[settings][plugins][html_codesniffer][base_url]' => '\\//squizlabs.github.io/HTML_CodeSniffer/build/'], 'Save configuration');
+    $this->assertSession()->responseContains('Please enter a valid Base URL for the Accessibility Auditor.');

     $not_an_admin = $this->drupalCreateUser([
       'administer nodes',
@@ @@
     $this->drupalLogin($not_an_admin);
     $this->drupalGet('admin/config/content/formats/manage/filtered_html');
     // Check that settings are disabled for non-admins.
-    $this->assertRaw('Only editable by Administrators!');
+    $this->assertSession()->responseContains('Only editable by Administrators!');
     $page = $this->getSession()->getPage();
     $this->assertTrue($page->findField('editor[settings][plugins][html_codesniffer][base_url]')->hasAttribute('disabled'));
   }
    ----------- end diff -----------

Applied rules:
 * AssertRawRector
 * DrupalGetPathRector
 * FileUrlTransformRelativeRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/ckeditor_accessibility_auditor/src/Plugin/CKEditorPlugin/HTMLCodeSniffer.php:46

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/plugin.js';
   }

   /**
@@ @@
     return [
       'HTML_CodeSniffer' => [
         'label' => $this->t('Accessibility Auditor (HTML_CodeSniffer)'),
-        'image' => drupal_get_path('module', 'ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/icons/html_codesniffer.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/icons/html_codesniffer.png',
       ],
     ];
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

