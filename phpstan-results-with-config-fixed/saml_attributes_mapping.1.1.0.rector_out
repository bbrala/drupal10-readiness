modules/contrib/saml_attributes_mapping/saml_attributes_mapping.module
modules/contrib/saml_attributes_mapping/src/Controller/SamlAttributesMappingController.php
modules/contrib/saml_attributes_mapping/src/Form/AttributesFieldsSettingsForm.php
modules/contrib/saml_attributes_mapping/src/Form/AttributesMappingForm.php

2 files with changes
====================

1) modules/contrib/saml_attributes_mapping/src/Form/AttributesMappingForm.php:88

    ---------- begin diff ----------
@@ @@
       if (count($attributes) === 1) {
         $add_item = Url::fromRoute('saml_attributes_mapping.settings_attributes');
         $message = $this->t('There are no SAML attributes configured yet.');
-        $form['mapping']['#empty'] = SafeMarkup::format($message . ' ' . $this->l($this->t('Add an item'), $add_item), []);
+        $form['mapping']['#empty'] = new \Drupal\Component\Render\FormattableMarkup($message . ' ' . $this->l($this->t('Add an item'), $add_item), []);
         unset($form['actions']);
       }
       else {
    ----------- end diff -----------

Applied rules:
 * SafeMarkupFormatRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/saml_attributes_mapping/saml_attributes_mapping.module:126

    ---------- begin diff ----------
@@ @@

             try {
               $data = (string) \Drupal::httpClient()->get($url)->getBody();
-              $user_image = file_save_data($data, $uri, FILE_EXISTS_REPLACE);
+              $user_image = \Drupal::service('file.repository')->writeData($data, $uri, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
               if ($user_image && $user_image->id()) {
                 $filed_values = [
                   'target_id' => $user_image->id(),
    ----------- end diff -----------

Applied rules:
 * FileExistsReplaceRector
 * FileSaveDataRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

