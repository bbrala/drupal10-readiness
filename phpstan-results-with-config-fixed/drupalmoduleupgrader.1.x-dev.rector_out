modules/contrib/drupalmoduleupgrader/drupalmoduleupgrader.drush.inc
modules/contrib/drupalmoduleupgrader/drupalmoduleupgrader.module
modules/contrib/drupalmoduleupgrader/src/AnalyzerBase.php
modules/contrib/drupalmoduleupgrader/src/AnalyzerInterface.php
modules/contrib/drupalmoduleupgrader/src/Annotation/Analyzer.php
modules/contrib/drupalmoduleupgrader/src/Annotation/Converter.php
modules/contrib/drupalmoduleupgrader/src/Annotation/Fixer.php
modules/contrib/drupalmoduleupgrader/src/Annotation/Indexer.php
modules/contrib/drupalmoduleupgrader/src/Annotation/Rewriter.php
modules/contrib/drupalmoduleupgrader/src/ArrayIndexer.php
modules/contrib/drupalmoduleupgrader/src/Commands/DrupalmoduleupgraderCommands.php
modules/contrib/drupalmoduleupgrader/src/ConverterBase.php
modules/contrib/drupalmoduleupgrader/src/ConverterInterface.php
modules/contrib/drupalmoduleupgrader/src/DependencyCollectorTrait.php
modules/contrib/drupalmoduleupgrader/src/DeriverBase.php
modules/contrib/drupalmoduleupgrader/src/FixerBase.php
modules/contrib/drupalmoduleupgrader/src/FixerInterface.php
modules/contrib/drupalmoduleupgrader/src/IOException.php
modules/contrib/drupalmoduleupgrader/src/IndexerBase.php
modules/contrib/drupalmoduleupgrader/src/IndexerExecutionInterface.php
modules/contrib/drupalmoduleupgrader/src/IndexerInterface.php
modules/contrib/drupalmoduleupgrader/src/IndexerUsageInterface.php
modules/contrib/drupalmoduleupgrader/src/Issue.php
modules/contrib/drupalmoduleupgrader/src/IssueInterface.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/DB.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/DBDeriver.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/FlagHook.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/FlagHookDeriver.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/FunctionCall.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/FunctionCallDeriver.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/Grep.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/HookFormAlter.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/HookPermission.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/HookUninstall.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/InfoFile.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/PSR4.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Analyzer/Tests.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Blocks.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/EntityHooks.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/CToolsGetPlugins.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/CToolsObjectCacheGet.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/CToolsObjectCacheSet.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/CacheGet.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/CacheSet.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/CommentLoad.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DB.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DBDeriver.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DbDelete.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DbInsert.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DbQuery.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DbQueryRange.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DbQueryTemporary.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DbSelect.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DbUpdate.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/Disable.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DisableDeriver.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DrupalGetTitle.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DrupalIsCLI.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DrupalMapAssoc.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DrupalMessageGet.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DrupalMessageSet.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/DrupalWriteRecord.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/EntityCreate.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/EntityGetInfo.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/EntityLoad.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/EntityOperation.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/EntityOperationDeriver.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FieldInfoFieldTypes.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FieldInfoFormatterTypes.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FieldInfoWidgetTypes.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FieldUpdateField.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FieldUpdateInstance.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FieldViewField.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FieldViewValue.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FormExecuteHandlers.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FormLoadInclude.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FormSetValue.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FormStateDefaults.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FormStateValuesClean.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/FunctionCallModifier.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/GetT.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/L.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/LoadMultiple.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/LoadMultipleDeriver.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/ModuleInvoke.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/ModuleInvokeAll.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/NodeLoad.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/St.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/ThemeGetRegistry.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/URL.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/UserAccess.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/UserLoad.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/UserSave.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/VariableAPI.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/VariableDel.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/VariableGet.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/VariableSet.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Functions/Watchdog.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Grep.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookBoot.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookEntityInfo.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookEntityTypeView.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookExit.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookFieldAttachCreateBundle.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookFieldAttachDeleteBundle.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookFieldAttachRenameBundle.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookFieldFormatterInfo.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookFieldWidgetInfo.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookFormAlter.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookInit.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookLibrary.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookMenuAlter.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookNodePrepare.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookPermission.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookURLOutboundAlter.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookUserLogin.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/HookWatchdog.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/InfoToYAML.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Links.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/PSR4.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Routing.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/Tests.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/UnitTests.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Converter/UserHooks.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/CreateClass.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/Define.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/Delete.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/Disable.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/FormCallbackToMethod.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/HookToYAML.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/Implement.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/ImplementHook.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/NodeCollectorTrait.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/Notify.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Fixer/PSR4.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Indexer/Classes.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Indexer/Constants.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Indexer/FunctionCalls.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Indexer/Functions.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Rewriter/FormState.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Rewriter/Generic.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Rewriter/GenericDeriver.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Routing/ContentRoute.php
modules/contrib/drupalmoduleupgrader/src/Plugin/DMU/Routing/FormRoute.php
modules/contrib/drupalmoduleupgrader/src/PluginBase.php
modules/contrib/drupalmoduleupgrader/src/Report.php
modules/contrib/drupalmoduleupgrader/src/ReportInterface.php
modules/contrib/drupalmoduleupgrader/src/RewriterInterface.php
modules/contrib/drupalmoduleupgrader/src/Routing/Drupal7/RouteWrapper.php
modules/contrib/drupalmoduleupgrader/src/Routing/Drupal7/Router.php
modules/contrib/drupalmoduleupgrader/src/Routing/Drupal8/RouteWrapper.php
modules/contrib/drupalmoduleupgrader/src/Routing/HookMenu.php
modules/contrib/drupalmoduleupgrader/src/Routing/LinkBinding/LinkBinding.php
modules/contrib/drupalmoduleupgrader/src/Routing/LinkBinding/LinkBindingFactory.php
modules/contrib/drupalmoduleupgrader/src/Routing/LinkBinding/LocalActionLinkBinding.php
modules/contrib/drupalmoduleupgrader/src/Routing/LinkBinding/LocalTaskLinkBinding.php
modules/contrib/drupalmoduleupgrader/src/Routing/LinkBinding/MenuLinkBinding.php
modules/contrib/drupalmoduleupgrader/src/Routing/LinkIndex.php
modules/contrib/drupalmoduleupgrader/src/Routing/ParameterBinding.php
modules/contrib/drupalmoduleupgrader/src/Routing/ParameterMap.php
modules/contrib/drupalmoduleupgrader/src/Routing/RouteConverterInterface.php
modules/contrib/drupalmoduleupgrader/src/Routing/RouteWrapperInterface.php
modules/contrib/drupalmoduleupgrader/src/Routing/RouterBase.php
modules/contrib/drupalmoduleupgrader/src/Routing/RouterBuiltEvent.php
modules/contrib/drupalmoduleupgrader/src/Routing/RouterInterface.php
modules/contrib/drupalmoduleupgrader/src/Target.php
modules/contrib/drupalmoduleupgrader/src/TargetInterface.php
modules/contrib/drupalmoduleupgrader/src/Utility/Filter/ContainsLogicFilter.php
modules/contrib/drupalmoduleupgrader/src/Utility/Filter/FieldValueFilter.php
modules/contrib/drupalmoduleupgrader/src/Utility/Filter/FunctionCallArgumentFilter.php
modules/contrib/drupalmoduleupgrader/src/Utility/Filter/NodeAssignmentFilter.php
modules/contrib/drupalmoduleupgrader/src/Utility/FormConverter.php
modules/contrib/drupalmoduleupgrader/src/Utility/FormConverterFactory.php
modules/contrib/drupalmoduleupgrader/src/Utility/Path/Drupal7/PathComponent.php
modules/contrib/drupalmoduleupgrader/src/Utility/Path/Drupal7/PathUtility.php
modules/contrib/drupalmoduleupgrader/src/Utility/Path/Drupal8/PathComponent.php
modules/contrib/drupalmoduleupgrader/src/Utility/Path/Drupal8/PathUtility.php
modules/contrib/drupalmoduleupgrader/src/Utility/Path/PathComponentBase.php
modules/contrib/drupalmoduleupgrader/src/Utility/Path/PathComponentInterface.php
modules/contrib/drupalmoduleupgrader/src/Utility/Path/PathUtilityBase.php
modules/contrib/drupalmoduleupgrader/src/Utility/Path/PathUtilityInterface.php
modules/contrib/drupalmoduleupgrader/src/Utility/StringTransformTrait.php
modules/contrib/drupalmoduleupgrader/tests/bootstrap.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/ContainerMockTrait.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/IssueTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/ModuleMockerTrait.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/AnalyzerTestBase.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/DBTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/FlagHookTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/FunctionCallTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/HookFormAlterTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/HookPermissionTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/HookUninstallTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/InfoFileTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/PSR4Test.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/TestsTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/CToolsGetPluginsTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/CToolsObjectCacheGetTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/CToolsObjectCacheSetTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/CacheGetTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/CacheSetTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/CommentLoadTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DBTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DbDeleteTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DbInsertTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DbQueryRangeTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DbQueryTemporaryTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DbQueryTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DbSelectTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DbUpdateTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DisableTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DrupalGetMessageTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DrupalGetTitleTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DrupalIsCLITest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DrupalMapAssocTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DrupalSetMessageTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DrupalWriteRecordTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/EntityCreateTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/EntityGetInfoTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FieldInfoFieldTypesTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FieldInfoFormatterTypesTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FieldInfoWidgetTypesTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FieldUpdateFieldTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FieldUpdateInstanceTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FieldViewFieldTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FieldViewValueTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FormExecuteHandlersTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FormLoadIncludeTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FormSetValueTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FormStateValuesCleanTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FunctionCallModifierTestBase.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/GetTTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/ModuleInvokeAllTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/ModuleInvokeTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/NodeLoadTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/StTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/ThemeGetRegistryTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/UserAccessTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/UserLoadTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/UserSaveTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/VariableDelTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/VariableGetTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/VariableSetTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/WatchdogTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/CreateClassTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/DefineTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/DeleteTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/DisableTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/FormCallbackToMethodTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/HookToYAMLTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/ImplementHookTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/ImplementTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/NotifyTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/PSR4Test.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Indexer/ClassesTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Indexer/FunctionsTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Indexer/IndexerTestBase.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Rewriter/FormStateTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Rewriter/GenericTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/ReportTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/Drupal7/RouteWrapperTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/Drupal7/RouterTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/Drupal8/RouteWrapperTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/LinkBinding/LinkBindingTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/ParameterBindingTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/RouterBaseTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/SQLiteDatabaseTrait.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/TargetTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/TestBase.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Filter/ContainsLogicFilterTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Filter/FieldValueFilterTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Filter/FunctionCallArgumentFilterTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Filter/NodeAssignmentFilterTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Path/Drupal7/PathComponentTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Path/Drupal7/PathUtilityTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Path/Drupal8/PathComponentTest.php
modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Path/Drupal8/PathUtilityTest.php

37 files with changes
=====================

1) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Path/Drupal8/PathUtilityTest.php:10

    ---------- begin diff ----------
@@ @@
  */
 class PathUtilityTest extends UnitTestCase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->path = new PathUtility('node/{node}/foo/{bar}');
   }
@@ @@
     $this->assertEquals('wambooli', $path->last()->__toString());
   }

-  /**
-   * @expectedException \InvalidArgumentException
-   */
   public function testAddArray() {
+    $this->expectException(\InvalidArgumentException::class);
     $this->path->add([]);
   }

-  /**
-   * @expectedException \InvalidArgumentException
-   */
   public function testAddObject() {
+    $this->expectException(\InvalidArgumentException::class);
     $this->path->add(new \StdClass());
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Path/Drupal7/PathUtilityTest.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->path = new PathUtility('node/%node/foo/%');
   }
@@ @@
     $this->assertEquals('wambooli', $path->last()->__toString());
   }

-  /**
-   * @expectedException \InvalidArgumentException
-   */
   public function testAddArray() {
+    $this->expectException(\InvalidArgumentException::class);
     $this->path->add([]);
   }

-  /**
-   * @expectedException \InvalidArgumentException
-   */
   public function testAddObject() {
+    $this->expectException(\InvalidArgumentException::class);
     $this->path->add(new \StdClass());
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Filter/NodeAssignmentFilterTest.php:15

    ---------- begin diff ----------
@@ @@
    */
   protected $filter;

-  public function setUp() {
+  public function setUp(): void {
     $this->filter = new NodeAssignmentFilter();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Filter/FunctionCallArgumentFilterTest.php:15

    ---------- begin diff ----------
@@ @@
    */
   protected $filter;

-  public function setUp() {
+  public function setUp(): void {
     $this->filter = new FunctionCallArgumentFilter('foo');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Filter/FieldValueFilterTest.php:15

    ---------- begin diff ----------
@@ @@
    */
   protected $filter;

-  public function setUp() {
+  public function setUp(): void {
     $this->filter = new FieldValueFilter('foo');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Utility/Filter/ContainsLogicFilterTest.php:15

    ---------- begin diff ----------
@@ @@
    */
   protected $filter;

-  public function setUp() {
+  public function setUp(): void {
     $this->filter = new ContainsLogicFilter();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/drupalmoduleupgrader/tests/src/Unit/TestBase.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * Mocks an entire module, called foo, in a virtual file system.
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->info = $this->getAnnotations();

     $this->dir = $this->mockModule('foo');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/drupalmoduleupgrader/tests/src/Unit/TargetTest.php:13

    ---------- begin diff ----------
@@ @@
    */
   protected $indexer;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

-    $this->indexer = $this->getMockBuilder('\Drupal\drupalmoduleupgrader\Plugin\DMU\Indexer\Functions')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->indexer = $this->createMock('\Drupal\drupalmoduleupgrader\Plugin\DMU\Indexer\Functions');

     $this->container
       ->get('plugin.manager.drupalmoduleupgrader.indexer')
@@ @@
       ->willReturn($this->indexer);
   }

-  /**
-   * @expectedException \RuntimeException
-   */
   public function testInvalidBasePath() {
+    $this->expectException(\RuntimeException::class);
     // Trying to create a target with an invalid path should instantly
     // throw an exception.
     new Target('foobar', $this->container);
@@ @@
     $this->assertFalse($this->target->implementsHook('menu_alter'));
   }

-  /**
-   * @expectedException \InvalidArgumentException
-   */
   public function testExecuteUnimplementedHook() {
+    $this->expectException(\InvalidArgumentException::class);
     $this->indexer->method('has')->with('hook_menu')->willReturn(FALSE);
     $this->target->executeHook('menu');
   }
@@ @@
     $this->indexer->method('execute')->with('hook_menu')->willReturn($expected);

     $actual = $this->target->executeHook('menu');
-    $this->assertInternalType('array', $actual);
+    $this->assertIsArray($actual);
     $this->assertSame($expected, $actual);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * GetMockBuilderGetMockToCreateMockRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/RouterBaseTest.php:14

    ---------- begin diff ----------
@@ @@

   private $userEdit, $userView, $userRoot, $routeProvider;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->userEdit = new Route('/user/{user}/edit');
     $this->userView = new Route('/user/{user}');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/ParameterBindingTest.php:17

    ---------- begin diff ----------
@@ @@
    */
   private $parameter;

-  public function setUp() {
+  public function setUp(): void {
     // ParameterNode supports variadic parameters, which use the T_ELLIPSIS
     // token. Which will be undefined on any PHP older than 5.6. So this kludges
     // around that.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/LinkBinding/LinkBindingTest.php:15

    ---------- begin diff ----------
@@ @@

   private $source, $destination;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $item = [
       'title' => 'Diff',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/Drupal8/RouteWrapperTest.php:12

    ---------- begin diff ----------
@@ @@

   private $route, $wrapper;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->route = new Route('user/{user}/edit');
     $this->wrapper = new RouteWrapper('user.edit', $this->route, $this->createMock('\Drupal\Core\Routing\RouteProviderInterface'));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Routing/Drupal7/RouterTest.php:12

    ---------- begin diff ----------
@@ @@

   private $router;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->router = new Router();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/drupalmoduleupgrader/tests/src/Unit/ReportTest.php:14

    ---------- begin diff ----------
@@ @@
    */
   private $report;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->report = new Report();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Rewriter/GenericTest.php:16

    ---------- begin diff ----------
@@ @@
    */
   protected $plugin;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $definition = [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Rewriter/FormStateTest.php:15

    ---------- begin diff ----------
@@ @@
    */
   protected $plugin;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $definition = [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Indexer/FunctionsTest.php:12

    ---------- begin diff ----------
@@ @@
  */
 class FunctionsTest extends IndexerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Indexer/ClassesTest.php:12

    ---------- begin diff ----------
@@ @@
  */
 class ClassesTest extends IndexerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Fixer/HookToYAMLTest.php:17

    ---------- begin diff ----------
@@ @@
       ],
     ];

-    $indexer = $this->getMockBuilder('\Drupal\drupalmoduleupgrader\Plugin\DMU\Indexer\Functions')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $indexer = $this->createMock('\Drupal\drupalmoduleupgrader\Plugin\DMU\Indexer\Functions');
     $indexer->method('has')->with('hook_permission')->willReturn(TRUE);
     $indexer->method('hasExecutable')->with('hook_permission')->willReturn(TRUE);
     $indexer->method('execute')->with('hook_permission')->willReturn($permissions);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


20) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/FunctionCallModifierTestBase.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->plugin = $this->getPlugin();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DrupalGetTitleTest.php:9

    ---------- begin diff ----------
@@ @@
  */
 class DrupalGetTitleTest extends FunctionCallModifierTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->plugin = $this->getPlugin();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DisableTest.php:12

    ---------- begin diff ----------
@@ @@
  */
 class DisableTest extends FunctionCallModifierTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->plugin = $this->getPlugin([], ['function' => 'field_create_field']);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/DBTest.php:12

    ---------- begin diff ----------
@@ @@
  */
 class DBTest extends FunctionCallModifierTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->plugin = $this->getPlugin([], ['function' => 'db_select']);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Converter/Functions/CToolsGetPluginsTest.php:10

    ---------- begin diff ----------
@@ @@
  */
 class CToolsGetPluginsTest extends FunctionCallModifierTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->plugin = CToolsGetPlugins::create($this->container, [], 'ctools_get_plugins', []);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/TestsTest.php:9

    ---------- begin diff ----------
@@ @@
  */
 class TestsTest extends AnalyzerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
@@ @@

   public function test() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertNotEmpty($issues);
     $this->assertIssueDefaults($issues[0]);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/PSR4Test.php:9

    ---------- begin diff ----------
@@ @@
  */
 class PSR4Test extends AnalyzerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
@@ @@

   public function test() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertNotEmpty($issues);
     $this->assertIssueDefaults($issues[0]);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/InfoFileTest.php:7

    ---------- begin diff ----------
@@ @@
  */
 class InfoFileTest extends AnalyzerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $info = <<<'END'
@@ @@

   public function test() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertArrayHasKey('core', $issues);
     $this->assertArrayHasKey('type', $issues);
     $this->assertArrayNotHasKey('dependencies', $issues);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/HookUninstallTest.php:9

    ---------- begin diff ----------
@@ @@
  */
 class HookUninstalltest extends AnalyzerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
@@ @@

   public function test() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertNotEmpty($issues);
     $this->assertIssueDefaults($issues[0]);
     $this->assertCount(1, $issues[0]->getViolations());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


29) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/HookPermissionTest.php:13

    ---------- begin diff ----------
@@ @@
  */
 class HookPermissionTest extends AnalyzerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
@@ @@

   public function test() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertNotEmpty($issues);
     $this->assertIssueDefaults($issues[0]);
     $this->assertCount(1, $issues[0]->getViolations());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


30) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/HookFormAlterTest.php:9

    ---------- begin diff ----------
@@ @@
  */
 class HookFormAlterTest extends AnalyzerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
@@ @@

   public function testHookFormAlter() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertNotEmpty($issues);
     $this->assertIssueDefaults($issues[0]);
     $this->assertCount(2, $issues[0]->getViolations());
@@ @@

   public function testDerivedFormAlter() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertNotEmpty($issues);
     $this->assertIssueDefaults($issues[0]);
     $this->assertCount(2, $issues[0]->getViolations());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


31) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/FunctionCallTest.php:9

    ---------- begin diff ----------
@@ @@
  */
 class FunctionCallTest extends AnalyzerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
@@ @@

   public function test() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertNotEmpty($issues);
     $this->assertIssueDefaults($issues[0]);
     $this->assertCount(1, $issues[0]->getViolations());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


32) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/FlagHookTest.php:9

    ---------- begin diff ----------
@@ @@
  */
 class FlagHookTest extends AnalyzerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
@@ @@

   public function test() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertNotEmpty($issues);
     $this->assertIssueDefaults($issues[0]);
     $this->assertCount(1, $issues[0]->getViolations());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


33) modules/contrib/drupalmoduleupgrader/tests/src/Unit/Plugin/DMU/Analyzer/DBTest.php:9

    ---------- begin diff ----------
@@ @@
  */
 class DBTest extends AnalyzerTestBase {

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $code = <<<'END'
@@ @@

   public function test() {
     $issues = $this->analyzer->analyze($this->target);
-    $this->assertInternalType('array', $issues);
+    $this->assertIsArray($issues);
     $this->assertNotEmpty($issues);
     $this->assertIssueDefaults($issues[0]);
     $this->assertCount(1, $issues[0]->getViolations());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


34) modules/contrib/drupalmoduleupgrader/tests/src/Unit/IssueTest.php:14

    ---------- begin diff ----------
@@ @@
    */
   private $issue;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->issue = new Issue($this->target, 'Foobaz');
   }
@@ @@
   public function testDocumentation() {
     $this->issue->addDocumentation('http://www.google.com', 'Just Google it, baby!');
     $documentation = $this->issue->getDocumentation();
-    $this->assertInternalType('array', $documentation);
+    $this->assertIsArray($documentation);
     $this->assertCount(1, $documentation);
     $this->assertArrayHasKey('url', $documentation[0]);
     $this->assertArrayHasKey('title', $documentation[0]);
@@ @@
   }

   public function testViolationsAndDetectors() {
-    $analyzer = $this->getMockBuilder('\Drupal\drupalmoduleupgrader\AnalyzerBase')->disableOriginalConstructor()->getMock();
+    $analyzer = $this->createMock('\Drupal\drupalmoduleupgrader\AnalyzerBase');
     $analyzer->method('getPluginId')->willReturn('blarg');
     $this->issue->addAffectedFile($this->dir->getChild('foo.info')->url(), $analyzer);

@@ @@
     $this->issue->addViolation($node, $analyzer);

     $violations = $this->issue->getViolations();
-    $this->assertInternalType('array', $violations);
+    $this->assertIsArray($violations);
     $this->assertCount(2, $violations);
     $this->assertArrayHasKey('file', $violations[0]);
     $this->assertArrayNotHasKey('line_number', $violations[0]);
@@ @@
     $this->assertEquals($this->dir->getChild('foo.module')->url(), $violations[1]['file']);

     $detectors = $this->issue->getDetectors();
-    $this->assertInternalType('array', $detectors);
+    $this->assertIsArray($detectors);
     $this->assertCount(1, $detectors);
     $this->assertEquals($analyzer->getPluginId(), $detectors[0]);
   }
@@ @@
     $this->issue->addFix('baz', ['bar' => 'wambooli']);

     $fixes = $this->issue->getFixes();
-    $this->assertInternalType('array', $fixes);
+    $this->assertIsArray($fixes);
     $this->assertCount(2, $fixes);
     $this->assertEquals(['_plugin_id' => 'foo'], $fixes[0]);
     $this->assertEquals(['_plugin_id' => 'baz', 'bar' => 'wambooli'], $fixes[1]);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


35) modules/contrib/drupalmoduleupgrader/templates/EventSubscriber.html.twig:5

    ---------- begin diff ----------
@@ @@
 namespace Drupal\{{ module }}\EventSubscriber;

 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+use Symfony\Contracts\EventDispatcher\EventSubscriberInterface;

 class {{ class }} implements EventSubscriberInterface {
    ----------- end diff -----------

36) modules/contrib/drupalmoduleupgrader/src/Routing/RouterBuiltEvent.php:7

    ---------- begin diff ----------
@@ @@
  * Event object fired when all routes have been added to a RouterInterface
  * implementation.
  */
-class RouterBuiltEvent extends Event {
+class RouterBuiltEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * @var \Drupal\drupalmoduleupgrader\Converter\Routing\RouterInterface
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


37) modules/contrib/drupalmoduleupgrader/src/Routing/RouterBase.php:34

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function finalize() {
-    $this->dispatcher->dispatch('router.built', new RouterBuiltEvent($this));
+    $this->dispatcher->dispatch(new RouterBuiltEvent($this), 'router.built');
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 37 files have been changed by Rector                                      

