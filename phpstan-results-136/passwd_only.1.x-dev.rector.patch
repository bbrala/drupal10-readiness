diff --git a/passwd_only_logintoboggan/passwd_only_logintoboggan.module b/passwd_only_logintoboggan/passwd_only_logintoboggan.module
index da8c79e..05fe956 100755
--- a/passwd_only_logintoboggan/passwd_only_logintoboggan.module
+++ b/passwd_only_logintoboggan/passwd_only_logintoboggan.module
@@ -33,7 +33,7 @@ function passwd_only_logintoboggan_menu() {
 function passwd_only_logintoboggan_js_alter(&$javascript) {
   $path = 'sites/all/modules/logintoboggan/logintoboggan.unifiedlogin.js';
   if (!empty($javascript[$path])) {
-    $javascript[$path]['data'] = drupal_get_path('module', 'passwd_only_logintoboggan') . '/logintoboggan.unifiedlogin.js';
+    $javascript[$path]['data'] = \Drupal::service('extension.list.module')->getPath('passwd_only_logintoboggan') . '/logintoboggan.unifiedlogin.js';
   }
 
 }
diff --git a/tests/src/Functional/ConfigurationTest.php b/tests/src/Functional/ConfigurationTest.php
index 0b77ac1..82818d8 100755
--- a/tests/src/Functional/ConfigurationTest.php
+++ b/tests/src/Functional/ConfigurationTest.php
@@ -18,44 +18,77 @@ class ConfigurationTest extends PasswdOnlyWebTestBase {
     $this->drupalLogin($this->userAdminPasswdOnly);
 
     $this->drupalGet('admin/config/system');
-    $this->assertResponse(200);
-    $this->assertText('Password Only Login');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Password Only Login');
 
     // Main configuration form.
     $this->drupalGet('admin/config/system/passwd-only');
-    $this->assertResponse(200);
-    $this->assertText('Password Only Login');
-    $this->assertText('Select a password only login user');
-    $this->assertText('Select a user to login in the password only login forms.');
-    $this->assertText('Description');
-    $this->assertText('This description text is shown on the password only login form.');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Password Only Login');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Select a password only login user');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Select a user to login in the password only login forms.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Description');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('This description text is shown on the password only login form.');
 
     // Accessed denied for anonymous users.
     $this->drupalLogout();
     $this->drupalGet('admin/config/system/passwd-only');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Access the login page, which is not set up.
     $this->drupalGet('user/passwd-only-login');
-    $this->assertResponse(200);
-    $this->assertText('First create or set an user account');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('First create or set an user account');
 
     // Configure the module.
     $this->drupalLogin($this->userAdminPasswdOnly);
     $this->drupalGet('admin/config/system/passwd-only');
     // Link to user profile to update the password not showing.
-    $this->assertNoText('Change password');
-    $this->assertNoText('Go to the password only login user.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('Change password');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('Go to the password only login user.');
     $edit = [
       'user' => $this->userPasswdOnly->getUsername(),
       'description' => 'Some description text.',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
 
     // Link to user profile to update the password.
     $this->drupalGet('admin/config/system/passwd-only');
-    $this->assertText('Change password');
-    $this->assertText('Go to the password only login user.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Change password');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Go to the password only login user.');
 
     // Try to configure the module with the root user.
     $user_admin = User::load(1);
@@ -63,11 +96,15 @@ class ConfigurationTest extends PasswdOnlyWebTestBase {
     $edit = [
       'user' => $user_admin->getUsername(),
     ];
-    $this->drupalPostForm('admin/config/system/passwd-only', $edit, t('Save'));
-    $this->assertResponse(200);
-    $this->assertText('is the root user account (User-ID 1). It is not secure to use this account with Password Only Login. Please select another user account.');
+    $this->drupalGet('admin/config/system/passwd-only');
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('is the root user account (User-ID 1). It is not secure to use this account with Password Only Login. Please select another user account.');
     // The input tag gets this classes: class="form-text required error".
-    $this->assertRaw('error');
+    $this->assertSession()->responseContains('error');
   }
 
   /**
@@ -83,16 +120,28 @@ class ConfigurationTest extends PasswdOnlyWebTestBase {
 
     $this->drupalLogin($user);
     $this->drupalGet('admin/reports/status');
-    $this->assertText('Password Only Login');
-    $this->assertText('You have to select one user account.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Password Only Login');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('You have to select one user account.');
     $this->clickLink('Select an user account');
-    $this->assertText('Select a user to login in the password only login forms.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Select a user to login in the password only login forms.');
 
     $this->configureModule();
 
     $this->drupalLogin($user);
     $this->drupalGet('admin/reports/status');
-    $this->assertNoText('You have to select one user account.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('You have to select one user account.');
   }
 
 }
diff --git a/tests/src/Functional/HelpTest.php b/tests/src/Functional/HelpTest.php
index d555c0f..fac7506 100755
--- a/tests/src/Functional/HelpTest.php
+++ b/tests/src/Functional/HelpTest.php
@@ -32,22 +32,28 @@ class HelpTest extends PasswdOnlyWebTestBase {
   public function testHelp() {
     // Help overview page.
     $this->drupalGet('admin/help');
-    $this->assertResponse(200);
-    $this->assertText('Password Only Login');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Password Only Login');
 
     // Help page.
     $this->drupalGet('admin/help/passwd_only');
-    $this->assertResponse(200);
-    $this->assertText('First of all you have to select a Drupal user account');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('First of all you have to select a Drupal user account');
 
     // Link 1.
     $this->clickLink('Password Only Login page');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Link 2.
     $this->drupalGet('admin/help/passwd_only');
     $this->clickLink('blocks administration page');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
