diff --git a/tests/src/Functional/Effect/AspectSwitcherTest.php b/tests/src/Functional/Effect/AspectSwitcherTest.php
index 05eb017..d553bf1 100644
--- a/tests/src/Functional/Effect/AspectSwitcherTest.php
+++ b/tests/src/Functional/Effect/AspectSwitcherTest.php
@@ -118,7 +118,7 @@ class AspectSwitcherTest extends ImageEffectsTestBase {
     // landscape.
     // Check that ::transformDimensions returns expected dimensions.
     $original_landscape_image = $image_factory->get($original_landscape_uri);
-    $derivative_landscape_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_landscape_uri));
+    $derivative_landscape_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_landscape_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => $this->testImageStyleName,
@@ -138,7 +138,7 @@ class AspectSwitcherTest extends ImageEffectsTestBase {
     // portrait.
     // Check that ::transformDimensions returns expected dimensions.
     $original_portrait_image = $image_factory->get($original_portrait_uri);
-    $derivative_portrait_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_portrait_uri));
+    $derivative_portrait_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_portrait_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => $this->testImageStyleName,
@@ -190,7 +190,7 @@ class AspectSwitcherTest extends ImageEffectsTestBase {
     // Check that no changes are made when source image is portrait.
     // Check that ::transformDimensions returns expected dimensions.
     $original_portrait_image = $image_factory->get($original_portrait_uri);
-    $derivative_portrait_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_portrait_uri));
+    $derivative_portrait_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_portrait_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => $this->testImageStyleName,
diff --git a/tests/src/Functional/Effect/AutoOrientTest.php b/tests/src/Functional/Effect/AutoOrientTest.php
index b6fb809..f15e519 100644
--- a/tests/src/Functional/Effect/AutoOrientTest.php
+++ b/tests/src/Functional/Effect/AutoOrientTest.php
@@ -90,7 +90,7 @@ class AutoOrientTest extends ImageEffectsTestBase {
       $this->assertEquals($data['original_height'], $image->getHeight());
 
       // Get expected derivative URL.
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
 
       // Check that ::transformDimensions returns expected dimensions.
       $variables = [
@@ -137,7 +137,7 @@ class AutoOrientTest extends ImageEffectsTestBase {
 
     $test_data = [];
     for ($i = 1; $i < 9; $i++) {
-      $test_data[$i]['test_file'] = drupal_get_path('module', 'image_effects') . "/tests/images/image-test-exif-orientation-$i.jpeg";
+      $test_data[$i]['test_file'] = \Drupal::service('extension.list.module')->getPath('image_effects') . "/tests/images/image-test-exif-orientation-$i.jpeg";
     }
 
     foreach ($test_data as $data) {
diff --git a/tests/src/Functional/Effect/BackgroundTest.php b/tests/src/Functional/Effect/BackgroundTest.php
index cd00ff5..3112ac5 100644
--- a/tests/src/Functional/Effect/BackgroundTest.php
+++ b/tests/src/Functional/Effect/BackgroundTest.php
@@ -55,7 +55,7 @@ class BackgroundTest extends ImageEffectsTestBase {
     $image = $this->imageFactory->get($original_uri);
     $this->assertEquals(40, $image->getWidth());
     $this->assertEquals(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/ImagemagickArgumentsTest.php b/tests/src/Functional/Effect/ImagemagickArgumentsTest.php
index d21523b..0fc4247 100644
--- a/tests/src/Functional/Effect/ImagemagickArgumentsTest.php
+++ b/tests/src/Functional/Effect/ImagemagickArgumentsTest.php
@@ -55,7 +55,7 @@ class ImagemagickArgumentsTest extends ImageEffectsTestBase {
 
     // Check that ::transformDimensions returns expected dimensions.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ -91,7 +91,7 @@ class ImagemagickArgumentsTest extends ImageEffectsTestBase {
     // Check that ::transformDimensions does not provide dimension
     // attributes.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ -129,7 +129,7 @@ class ImagemagickArgumentsTest extends ImageEffectsTestBase {
 
     // Check that ::transformDimensions returns expected dimensions.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ -158,7 +158,7 @@ class ImagemagickArgumentsTest extends ImageEffectsTestBase {
 
     // Check that ::transformDimensions returns expected dimensions.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/RelativeCropTest.php b/tests/src/Functional/Effect/RelativeCropTest.php
index c4b0a17..db1fe94 100644
--- a/tests/src/Functional/Effect/RelativeCropTest.php
+++ b/tests/src/Functional/Effect/RelativeCropTest.php
@@ -50,7 +50,7 @@ class RelativeCropTest extends ImageEffectsTestBase {
     $this->assertEquals(14, $image_gd->getHeight());
 
     $derivative_uri = $this->testImageStyle->buildUri($test_file_uris['border']);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($test_file_uris['border']));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($test_file_uris['border']));
 
     // Test that no cropping will be done if the ratio matches the original.
     $test_data['Matching ratio'] = [
diff --git a/tests/src/Functional/Effect/ResizePercentageTest.php b/tests/src/Functional/Effect/ResizePercentageTest.php
index 8bf5bde..f774cd4 100644
--- a/tests/src/Functional/Effect/ResizePercentageTest.php
+++ b/tests/src/Functional/Effect/ResizePercentageTest.php
@@ -148,7 +148,7 @@ class ResizePercentageTest extends ImageEffectsTestBase {
       $image = $this->imageFactory->get($original_uri);
       $this->assertEquals(40, $image->getWidth());
       $this->assertEquals(20, $image->getHeight());
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
       $variables = [
         '#theme' => 'image_style',
         '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/RotateTest.php b/tests/src/Functional/Effect/RotateTest.php
index 3c88d6f..78ad9d7 100644
--- a/tests/src/Functional/Effect/RotateTest.php
+++ b/tests/src/Functional/Effect/RotateTest.php
@@ -137,7 +137,7 @@ class RotateTest extends ImageEffectsTestBase {
         }
         $this->assertSame(40, $image->getWidth(), $test_message);
         $this->assertSame(20, $image->getHeight(), $test_message);
-        $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+        $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
         $variables = [
           '#theme' => 'image_style',
           '#style_name' => 'image_effects_test',
@@ -315,7 +315,7 @@ class RotateTest extends ImageEffectsTestBase {
     $image = $this->imageFactory->get($original_uri);
     $this->assertSame(40, $image->getWidth());
     $this->assertSame(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/ScaleAndSmartCropTest.php b/tests/src/Functional/Effect/ScaleAndSmartCropTest.php
index 33fc99e..f3c1f03 100644
--- a/tests/src/Functional/Effect/ScaleAndSmartCropTest.php
+++ b/tests/src/Functional/Effect/ScaleAndSmartCropTest.php
@@ -57,7 +57,7 @@ class ScaleAndSmartCropTest extends ImageEffectsTestBase {
 
         // Check that ::transformDimensions returns expected dimensions.
         $image = $this->imageFactory->get($original_uri);
-        $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+        $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
         $variables = [
           '#theme' => 'image_style',
           '#style_name' => 'image_effects_test',
@@ -126,7 +126,7 @@ class ScaleAndSmartCropTest extends ImageEffectsTestBase {
 
         // Check that ::transformDimensions returns expected dimensions.
         $image = $this->imageFactory->get($original_uri);
-        $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+        $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
         $variables = [
           '#theme' => 'image_style',
           '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/SetCanvasTest.php b/tests/src/Functional/Effect/SetCanvasTest.php
index 73f047e..c7a4e4e 100644
--- a/tests/src/Functional/Effect/SetCanvasTest.php
+++ b/tests/src/Functional/Effect/SetCanvasTest.php
@@ -59,7 +59,7 @@ class SetCanvasTest extends ImageEffectsTestBase {
     $image = $this->imageFactory->get($original_uri);
     $this->assertEquals(40, $image->getWidth());
     $this->assertEquals(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ -102,7 +102,7 @@ class SetCanvasTest extends ImageEffectsTestBase {
     $image = $this->imageFactory->get($original_uri);
     $this->assertEquals(40, $image->getWidth());
     $this->assertEquals(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/SmartCropTest.php b/tests/src/Functional/Effect/SmartCropTest.php
index 4126f58..af9030c 100644
--- a/tests/src/Functional/Effect/SmartCropTest.php
+++ b/tests/src/Functional/Effect/SmartCropTest.php
@@ -67,7 +67,7 @@ class SmartCropTest extends ImageEffectsTestBase {
       $image = $this->imageFactory->get($original_uri);
       $this->assertEquals(40, $image->getWidth());
       $this->assertEquals(40, $image->getHeight());
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
       $variables = [
         '#theme' => 'image_style',
         '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/TextOverlayTest.php b/tests/src/Functional/Effect/TextOverlayTest.php
index 269bf03..cd4cd04 100644
--- a/tests/src/Functional/Effect/TextOverlayTest.php
+++ b/tests/src/Functional/Effect/TextOverlayTest.php
@@ -116,7 +116,7 @@ class TextOverlayTest extends ImageEffectsTestBase {
       $image = $this->imageFactory->get($original_uri);
 
       // Load Image Style and get expected derivative URL.
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
 
       // Check that ::applyEffect generates image with expected dimensions
       // and colors at corners.
diff --git a/tests/src/Functional/ImageEffectsTestBase.php b/tests/src/Functional/ImageEffectsTestBase.php
index bd7ea47..20572cb 100644
--- a/tests/src/Functional/ImageEffectsTestBase.php
+++ b/tests/src/Functional/ImageEffectsTestBase.php
@@ -260,7 +260,9 @@ abstract class ImageEffectsTestBase extends BrowserTestBase {
   protected function getTestImageCopyUri($path, $name = NULL, $type = 'module') {
     $test_directory = 'public://test-images/';
     $this->fileSystem->prepareDirectory($test_directory, FileSystemInterface::CREATE_DIRECTORY);
-    $source_uri = $name ? drupal_get_path($type, $name) : '';
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    $source_uri = $name ? \Drupal::service('extension.path.resolver')->getPath($type, $name) : '';
     $source_uri .= $path;
     $target_uri = $test_directory . \Drupal::service('file_system')->basename($source_uri);
     return $this->fileSystem->copy($source_uri, $target_uri, FileSystemInterface::EXISTS_REPLACE);
diff --git a/tests/src/Functional/SelectorPluginTest.php b/tests/src/Functional/SelectorPluginTest.php
index 1ecc70c..ae701a2 100644
--- a/tests/src/Functional/SelectorPluginTest.php
+++ b/tests/src/Functional/SelectorPluginTest.php
@@ -26,7 +26,7 @@ class SelectorPluginTest extends ImageEffectsTestBase {
    * Image selector test.
    */
   public function testImageSelector() {
-    $image_path = drupal_get_path('module', 'image_effects') . '/tests/images';
+    $image_path = \Drupal::service('extension.list.module')->getPath('image_effects') . '/tests/images';
     $image_file = 'portrait-painting.jpe';
 
     // Test the Basic plugin.
