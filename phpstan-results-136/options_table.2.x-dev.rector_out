modules/contrib/options_table/src/Plugin/Field/FieldWidget/OptionsTableWidget.php
modules/contrib/options_table/src/Tests/OptionsTableWidgetsTest.php

1 file with changes
===================

1) modules/contrib/options_table/src/Tests/OptionsTableWidgetsTest.php:46

    ---------- begin diff ----------
@@ @@
    */
   protected $assertSession;

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->assertSession = $this->assertSession();
@@ @@

     // Select first option.
     $edit = ['card_1[table][enabled]' => 0];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertFieldValues($entity_init, 'card_1', [0]);

     // Check that the selected button is checked.
@@ @@

     // Unselect option.
     $edit = ['card_1[table][enabled]' => '_none'];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertFieldValues($entity_init, 'card_1', []);

     // Check that required radios with one option is auto-selected.
@@ @@
       'card_2[table][1][enabled]' => FALSE,
       'card_2[table][2][enabled]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertFieldValues($entity_init, 'card_2', [0, 2]);

     // Display form: check that the right options are selected.
@@ @@
       'card_2[table][1][enabled]' => FALSE,
       'card_2[table][2][enabled]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertFieldValues($entity_init, 'card_2', [0]);

     // Display form: check that the right options are selected.
@@ @@
       'card_2[table][1][enabled]' => TRUE,
       'card_2[table][2][enabled]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession->pageTextContains('this field cannot hold more than 2 values');

     // Submit form: uncheck all options.
@@ @@
       'card_2[table][1][enabled]' => FALSE,
       'card_2[table][2][enabled]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     // Check that the value was saved.
     $this->assertFieldValues($entity_init, 'card_2', []);

@@ @@
       'card_2[table][1][enabled]' => FALSE,
       'card_2[table][2][enabled]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertFieldValues($entity_init, 'card_2', [0, 2]);

     // Display form: check that the right options are selected.
@@ @@
     $this->assertSession->checkboxChecked('edit-card-2-table-0-enabled');
     $this->assertSession->checkboxNotChecked('edit-card-2-table-1-enabled');
     $this->assertSession->checkboxChecked('edit-card-2-table-2-enabled');
-    $this->assertOptionSelected('edit-card-2-table-0-weight', 0);
-    $this->assertOptionSelected('edit-card-2-table-2-weight', 1);
-    $this->assertOptionSelected('edit-card-2-table-1-weight', 2);
+    $this->assertTrue($this->assertSession()->optionExists('edit-card-2-table-0-weight', 0)->hasAttribute('selected'));
+    $this->assertTrue($this->assertSession()->optionExists('edit-card-2-table-2-weight', 1)->hasAttribute('selected'));
+    $this->assertTrue($this->assertSession()->optionExists('edit-card-2-table-1-weight', 2)->hasAttribute('selected'));

     // Change delta sorting.
     $edit = [
       "card_2[table][2][weight]" => -1,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertFieldValues($entity_init, 'card_2', [2, 0]);

     $this->drupalGet('entity_test/manage/' . $entity->id() . '/edit');
@@ @@
     $this->assertSession->checkboxChecked("edit-card-2-table-0-enabled");
     $this->assertSession->checkboxNotChecked("edit-card-2-table-1-enabled");
     $this->assertSession->checkboxChecked("edit-card-2-table-2-enabled");
-    $this->assertOptionSelected('edit-card-2-table-2-weight', 0);
-    $this->assertOptionSelected('edit-card-2-table-0-weight', 1);
-    $this->assertOptionSelected('edit-card-2-table-1-weight', 2);
+    $this->assertTrue($this->assertSession()->optionExists('edit-card-2-table-2-weight', 0)->hasAttribute('selected'));
+    $this->assertTrue($this->assertSession()->optionExists('edit-card-2-table-0-weight', 1)->hasAttribute('selected'));
+    $this->assertTrue($this->assertSession()->optionExists('edit-card-2-table-1-weight', 2)->hasAttribute('selected'));

     // Changes options and sorting at the same time.
     $edit = [
@@ @@
       "card_2[table][2][weight]" => -3,
       "card_2[table][1][weight]" => -2,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertFieldValues($entity_init, 'card_2', [1, 0]);

     $this->drupalGet('entity_test/manage/' . $entity->id() . '/edit');
@@ @@
     $this->assertSession->checkboxChecked("edit-card-2-table-0-enabled");
     $this->assertSession->checkboxChecked("edit-card-2-table-1-enabled");
     $this->assertSession->checkboxNotChecked("edit-card-2-table-2-enabled");
-    $this->assertOptionSelected('edit-card-2-table-1-weight', 0);
-    $this->assertOptionSelected('edit-card-2-table-0-weight', 1);
-    $this->assertOptionSelected('edit-card-2-table-2-weight', 2);
+    $this->assertTrue($this->assertSession()->optionExists('edit-card-2-table-1-weight', 0)->hasAttribute('selected'));
+    $this->assertTrue($this->assertSession()->optionExists('edit-card-2-table-0-weight', 1)->hasAttribute('selected'));
+    $this->assertTrue($this->assertSession()->optionExists('edit-card-2-table-2-weight', 2)->hasAttribute('selected'));
   }

   /**
    * Tests the 'options_table' widget table caption.
+   * @doesNotPerformAssertions
    */
   public function testCaption() {
     $field = FieldConfig::create([
    ----------- end diff -----------

Applied rules:
 * AssertOptionSelectedRector
 * UiHelperTraitDrupalPostFormRector
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

