modules/contrib/lionbridge_translation_provider/src/Plugin/tmgmt/Translator/LionbridgeTranslator.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Annotation/FormatPlugin.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/ContentApiTranslatorUI.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Format/FormatInterface.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Format/FormatManager.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Plugin/tmgmt/Translator/ContentApiTranslator.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Plugin/tmgmt_contentapi/Format/Xliff.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Plugin/views/field/JobLioxidField.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Plugin/views/field/JobProvideridField.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Plugin/views/field/JobStatusField.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Plugin/views/filter/LioxJobIdFilter.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Plugin/views/filter/LioxJobstatusFilter.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/RecursiveDOMIterator.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/FileApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/JobApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/ProviderApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/RequestApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/SourceFileApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/StatusUpdateApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/SupportAssetApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/TokenApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/TranslationContentApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/TranslationMemoryApi.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/ApiException.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Configuration.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/HeaderSelector.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/ArrayOfRequestIds.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/ArrayOfRequestIdsNote.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/Capabilities.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/CreateJob.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/CreateListener.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/CreateRequestFile.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/CreateRequestFileCtt.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/CreateRequestKeyValue.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/CreateRequestUpdateTM.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/CreateSupportAsset.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/CreateToken.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/Error.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/Job.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/JobCtt.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/JobStats.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/KeyValuePair.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/LanguagePairs.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/Listener.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/ListenerAuthEnum.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/ListenerRequest.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/ListenerTypeEnum.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/ModelInterface.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/Provider.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/ProviderId.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/Request.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/RequestCtt.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/SourceFile.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/SourceFileCtt.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/StatusCode.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/StatusCodeEnum.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdate.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdateCtt.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/SupportAsset.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/Token.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/TranslationContent.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/UpdateJob.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/UpdateRequestsFile.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Model/UpdateRequestsKeyValue.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/ObjectSerializer.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Util/ConentApiHelper.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Util/GeneralHelper.php
modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/tmgmt_contentapi.module

3 files with changes
====================

1) modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/tmgmt_contentapi.module:134

    ---------- begin diff ----------
@@ @@
           $labelname = $joblabel;
           $name = $labelname . "_" . $job->id() . "_all_"  . $job->getRemoteSourceLanguage() . '_' . $job->getRemoteTargetLanguage() . '.xlf';
           $jobpath = $allfilespath . "/" . $name;
-          $file = file_save_data($exporter->export($job), $jobpath, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+          $file = \Drupal::service('file.repository')->writeData($exporter->export($job), $jobpath, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
           $filearraytodelte[] = $file;
           $filearrayexportedfiles['all'] = $file;
         }
@@ @@
             $labelname = GeneralHelper::getStringNoSpeChars($item->label());
             $name = $labelname . "_" . $job->id() . "_" . $item->id() . "_" . $job->getRemoteSourceLanguage() . '_' . $job->getRemoteTargetLanguage() . '.xlf';
             $itempath = $allfilespath . "/" . $name;
-            $file = file_save_data($exporter->exportItem($item), $itempath, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+            $file = \Drupal::service('file.repository')->writeData($exporter->exportItem($item), $itempath, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
             $filearraytodelte[] = $file;
             $filearrayexportedfiles[$item->id()] = $file;
           }
@@ @@
         foreach ($filearraytodelte as $tempfile) {
           \Drupal::service('file_system')->delete($tempfile->getFileUri());
         }
-        $messageTopass .= '<a href="' . file_create_url($zipPath) . '">' . Xss::filter(GeneralHelper::getJobLabelNoSpeChars($job)) . '</a>';
+        $messageTopass .= '<a href="' . \Drupal::service('file_url_generator')->generateAbsoluteString($zipPath) . '">' . Xss::filter(GeneralHelper::getJobLabelNoSpeChars($job)) . '</a>';
         \Drupal::messenger()->addMessage(\Drupal\Core\Render\Markup::create($messageTopass));
       }
       else {
@@ @@
     $dirname = dirname($path);
     //\Drupal::service('file_system')->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY);
     if (\Drupal::service('file_system')->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY)) {
-      $file = file_save_data($filedatastring, $path, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+      $file = \Drupal::service('file.repository')->writeData($filedatastring, $path, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
       $mimetype = $file->getMimeType();//\Drupal::service('file.mime_type.guesser')->guess($path);
       $filearray = null;
       if ($mimetype == 'application/zip') {
@@ @@
           if ($ziparchive->extractTo(\Drupal::service('file_system')->realpath($pathtoextract))) {
             $ziparchive->close();
             $file->delete();
-            $filearray = CpcreateFileObjectFromStdClass(file_scan_directory($pathtoextract, '/.*\.xlf$/'));
+            $filearray = CpcreateFileObjectFromStdClass(\Drupal::service('file_system')->scanDirectory($pathtoextract, '/.*\.xlf$/'));
           }

         }
@@ @@
       global $base_url;
       // Using Id here, as job label returns @title@title and @more more.
       $joblable = GeneralHelper::getJobLabel($job);
-      $pass_link = \Drupal::l(t($joblable), \Drupal\Core\Url::fromUri($base_url . '/admin/tmgmt/jobs/' . $jobid['value']));
+      $pass_link = \Drupal\Core\Link::fromTextAndUrl(t($joblable), \Drupal\Core\Url::fromUri($base_url . '/admin/tmgmt/jobs/' . $jobid['value']));
       $currentlink = $pass_link->getGeneratedLink();

       $deliveryhtml .= '<li>'.$currentlink .'</li>';
@@ @@
             $msg = substr($msg,0,200);
       }
       \Drupal::messenger()->addMessage($msg);
-		
+
       //\Drupal::messenger()->addMessage($e->getMessage());
     }
   }
    ----------- end diff -----------

Applied rules:
 * DrupalLRector
 * FileSaveDataRector
 * FileScanDirectoryRector
 * FileCreateUrlRector
 * ArgumentRemoverRector


2) modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Swagger/Client/Api/ProviderApi.php:199

    ---------- begin diff ----------
@@ @@
           $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
         );
       }
-      
+
       $statusCode = $response->getStatusCode();

       if ($statusCode < 200 || $statusCode > 299) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Plugin/views/field/JobProvideridField.php:175

    ---------- begin diff ----------
@@ @@
       $capisettings = $translator->getSetting('capi-settings');
       $capi = new TokenApi();
       $token = $capi->getToken($capisettings['capi_username_ctt'],$capisettings['capi_password_ctt']);
-      
-  
+
+
         if(isset($token) && $token != '') {
             $providersarray = array();
             try {
               $providerapi = new ProviderApi();
               $providers = $providerapi->providersGet($token);
-              
+
               foreach ($providers as $provider) {
                 $prid = $provider->getProviderId();
                 $prname = $provider->getProviderName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Plu
         gin/tmgmt/Translator/ContentApiTranslator.php" file, due to:           
         "Analyze error: "Class Drupal\tmgmt\TranslatorPluginBase not found.".  
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/lionbridge_translation_provider/tmgmt_contentapi/src/Con
         tentApiTranslatorUI.php" file, due to:                                 
         "Analyze error: "Class Drupal\tmgmt\TranslatorPluginUiBase not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

