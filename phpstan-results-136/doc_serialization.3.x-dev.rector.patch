diff --git a/src/EventSubscriber/Subscriber.php b/src/EventSubscriber/Subscriber.php
index 77bdfae..cf8cc89 100644
--- a/src/EventSubscriber/Subscriber.php
+++ b/src/EventSubscriber/Subscriber.php
@@ -22,10 +22,10 @@ class Subscriber implements EventSubscriberInterface {
   /**
    * Register content formats on the request object.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to get the request object to register on.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $event->getRequest()->setFormat('docx', ['application/vnd.openxmlformats-officedocument.wordprocessingml.document']);
   }
 
diff --git a/tests/src/Unit/EventSubscriber/SubscriberTest.php b/tests/src/Unit/EventSubscriber/SubscriberTest.php
index d2cbd8a..dcce9cf 100644
--- a/tests/src/Unit/EventSubscriber/SubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/SubscriberTest.php
@@ -16,6 +16,7 @@ use Symfony\Component\HttpKernel\Event\GetResponseEvent;
  */
 class SubscriberTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @covers ::onKernelRequest
    */
@@ -24,7 +25,7 @@ class SubscriberTest extends UnitTestCase {
     /** @var \Symfony\Component\HttpFoundation\Request $request */
     $request = $this->prophesize(Request::class);
     $request->setFormat('docx', ['application/vnd.openxmlformats-officedocument.wordprocessingml.document'])->shouldBeCalled();
-    $event = $this->prophesize(GetResponseEvent::class);
+    $event = $this->prophesize(\Symfony\Component\HttpKernel\Event\RequestEvent::class);
     $event->getRequest()->willReturn($request->reveal());
     $subscriber = new Subscriber();
     $subscriber->onKernelRequest($event->reveal());
diff --git a/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php b/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php
index 2bc4a32..91ce915 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php
@@ -5,7 +5,7 @@ namespace Common\Tests\Adapter\Zip;
 use PhpOffice\Common\Adapter\Zip\PclZipAdapter;
 use PhpOffice\Common\Tests\TestHelperZip;
 
-class PclZipAdapterTest extends \PHPUnit_Framework_TestCase
+class PclZipAdapterTest extends \PHPUnit\Framework\TestCase
 {
     protected $zipTest;
 
diff --git a/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php b/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php
index 2799b33..fe5ab4f 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php
@@ -5,7 +5,7 @@ namespace Common\Tests\Adapter\Zip;
 use PhpOffice\Common\Adapter\Zip\ZipArchiveAdapter;
 use PhpOffice\Common\Tests\TestHelperZip;
 
-class ZipArchiveAdapterTest extends \PHPUnit_Framework_TestCase
+class ZipArchiveAdapterTest extends \PHPUnit\Framework\TestCase
 {
     protected $zipTest;
 
diff --git a/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php b/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php
index 7ee8566..ff4c792 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php
@@ -21,7 +21,7 @@ use PhpOffice\Common\Autoloader;
 /**
  * Test class for Autoloader
  */
-class AutoloaderTest extends \PHPUnit_Framework_TestCase
+class AutoloaderTest extends \PHPUnit\Framework\TestCase
 {
     /**
      * Register
diff --git a/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php b/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php
index 6b0b9b9..bbcf4e3 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\Drawing;
  *
  * @coversDefaultClass PhpOffice\Common\IOFactory
  */
-class DrawingTest extends \PHPUnit_Framework_TestCase
+class DrawingTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/common/tests/Common/Tests/FileTest.php b/vendor/phpoffice/common/tests/Common/Tests/FileTest.php
index e19f796..439cc7b 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/FileTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/FileTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\File;
  *
  * @coversDefaultClass PhpOffice\Common\File
  */
-class FileTest extends \PHPUnit_Framework_TestCase
+class FileTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/common/tests/Common/Tests/FontTest.php b/vendor/phpoffice/common/tests/Common/Tests/FontTest.php
index 6d16f20..c661502 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/FontTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/FontTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\Font;
  *
  * @coversDefaultClass PhpOffice\Common\Font
  */
-class FontTest extends \PHPUnit_Framework_TestCase
+class FontTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/common/tests/Common/Tests/TextTest.php b/vendor/phpoffice/common/tests/Common/Tests/TextTest.php
index 0ee2c32..2a216c6 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/TextTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/TextTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\Text;
  *
  * @coversDefaultClass PhpOffice\Common\Text
  */
-class TextTest extends \PHPUnit_Framework_TestCase
+class TextTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php b/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php
index 9b3dee5..30222e5 100644
--- a/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php
+++ b/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php
@@ -23,7 +23,7 @@ use PhpOffice\Common\XMLWriter;
  *
  * @coversDefaultClass PhpOffice\Common\XMLWriter
  */
-class XMLWriterTest extends \PHPUnit_Framework_TestCase
+class XMLWriterTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php b/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php
index b8df9bb..9d4ec8b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php
@@ -46,33 +46,30 @@ class FootnotePropertiesTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test throws exception if wrong position given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongPos()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $footnoteProp = new FootnoteProperties();
         $footnoteProp->setPos(NumberFormat::LOWER_ROMAN);
     }
 
     /**
      * Test throws exception if wrong number format given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongNumFmt()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $footnoteProp = new FootnoteProperties();
         $footnoteProp->setNumFmt(FootnoteProperties::POSITION_DOC_END);
     }
 
     /**
      * Test throws exception if wrong number restart given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongNumRestart()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $footnoteProp = new FootnoteProperties();
         $footnoteProp->setNumRestart(NumberFormat::LOWER_ROMAN);
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php b/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php
index baf2009..379dac6 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php
@@ -39,22 +39,20 @@ class ProofStateTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test throws exception if wrong grammar proof state value given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongGrammar()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $pState = new ProofState();
         $pState->setGrammar('Wrong');
     }
 
     /**
      * Test throws exception if wrong spelling proof state value given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongSpelling()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $pState = new ProofState();
         $pState->setSpelling('Wrong');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php
index 4e8daa0..c875e45 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php
@@ -186,11 +186,10 @@ class CellTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test add object exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidObjectException
      */
     public function testAddObjectException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidObjectException::class);
         $src = __DIR__ . '/../_files/xsl/passthrough.xsl';
         $oCell = new Cell();
         $oCell->addObject($src);
@@ -225,11 +224,10 @@ class CellTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Add preserve text exception
-     *
-     * @expectedException \BadMethodCallException
      */
     public function testAddPreserveTextException()
     {
+        $this->expectException(\BadMethodCallException::class);
         $oCell = new Cell();
         $oCell->setDocPart('Section', 1);
         $oCell->addPreserveText('text');
@@ -266,6 +264,6 @@ class CellTest extends \PHPUnit\Framework\TestCase
     {
         $oCell = new Cell();
 
-        $this->assertInternalType('array', $oCell->getElements());
+        $this->assertIsArray($oCell->getElements());
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php
index d33a54f..d93303f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php
@@ -66,7 +66,7 @@ class CommentTest extends \PHPUnit\Framework\TestCase
     {
         $oComment = new Comment('Test User', new \DateTime(), 'my_initials');
 
-        $this->assertInternalType('array', $oComment->getElements());
+        $this->assertIsArray($oComment->getElements());
     }
 
     /**
@@ -81,21 +81,17 @@ class CommentTest extends \PHPUnit\Framework\TestCase
         $this->assertEquals($iVal, $oComment->getRelationId());
     }
 
-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testExceptionOnCommentStartOnComment()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $dummyComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment->setCommentRangeStart($dummyComment);
     }
 
-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testExceptionOnCommentEndOnComment()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $dummyComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment->setCommentRangeEnd($dummyComment);
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php
index 8baa68e..6377333 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php
@@ -113,48 +113,44 @@ class FieldTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setType exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid type
      */
     public function testSetTypeException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid type');
         $object = new Field();
         $object->setType('foo');
     }
 
     /**
      * Test setProperties exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid property
      */
     public function testSetPropertiesException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid property');
         $object = new Field('PAGE');
         $object->setProperties(array('foo' => 'bar'));
     }
 
     /**
      * Test setOptions exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid option
      */
     public function testSetOptionsException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid option');
         $object = new Field('PAGE');
         $object->setOptions(array('foo' => 'bar'));
     }
 
     /**
      * Test setText exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid text
      */
     public function testSetTextException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid text');
         $object = new Field('XE');
         $object->setText(array());
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php
index b68e80c..34a8782 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php
@@ -154,7 +154,7 @@ class FooterTest extends \PHPUnit\Framework\TestCase
     {
         $oFooter = new Footer(1);
 
-        $this->assertInternalType('array', $oFooter->getElements());
+        $this->assertIsArray($oFooter->getElements());
     }
 
     /**
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php
index fd4c8d0..3682c8d 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php
@@ -112,6 +112,6 @@ class FootnoteTest extends \PHPUnit\Framework\TestCase
     public function testGetElements()
     {
         $oFootnote = new Footnote();
-        $this->assertInternalType('array', $oFootnote->getElements());
+        $this->assertIsArray($oFootnote->getElements());
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php
index 29b2fef..4d856f0 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php
@@ -176,7 +176,7 @@ class HeaderTest extends \PHPUnit\Framework\TestCase
     {
         $oHeader = new Header(1);
 
-        $this->assertInternalType('array', $oHeader->getElements());
+        $this->assertIsArray($oHeader->getElements());
     }
 
     /**
@@ -227,11 +227,10 @@ class HeaderTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Add footnote exception
-     *
-     * @expectedException \BadMethodCallException
      */
     public function testAddFootnoteException()
     {
+        $this->expectException(\BadMethodCallException::class);
         $header = new Header(1);
         $header->addFootnote();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php
index 0966ea4..e947990 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php
@@ -105,32 +105,29 @@ class ImageTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test invalid local image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testInvalidImageLocal()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidImageException::class);
         new Image(__DIR__ . '/../_files/images/thisisnotarealimage');
     }
 
     /**
      * Test invalid PHP Image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testInvalidImagePhp()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidImageException::class);
         $object = new Image('test.php');
         $object->getSource();
     }
 
     /**
      * Test unsupported image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
      */
     public function testUnsupportedImage()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\UnsupportedImageTypeException::class);
         //disable ssl verification, never do this in real application, you should pass the certiciate instead!!!
         $arrContextOptions = array(
             'ssl' => array(
@@ -212,11 +209,10 @@ class ImageTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test invalid string image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testInvalidImageString()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidImageException::class);
         $object = new Image('this_is-a_non_valid_image');
         $object->getSource();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php
index 71f1297..e5c8b72 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php
@@ -53,11 +53,10 @@ class ObjectTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Create new instance with non-supported files
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidObjectException
      */
     public function testConstructWithNotSupportedFiles()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidObjectException::class);
         $src = __DIR__ . '/../_files/xsl/passthrough.xsl';
         $oObject = new Object($src);
         $oObject->getSource();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php
index 9abf377..f242a80 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php
@@ -34,7 +34,7 @@ class RowTest extends \PHPUnit\Framework\TestCase
 
         $this->assertInstanceOf('PhpOffice\\PhpWord\\Element\\Row', $oRow);
         $this->assertNull($oRow->getHeight());
-        $this->assertInternalType('array', $oRow->getCells());
+        $this->assertIsArray($oRow->getCells());
         $this->assertCount(0, $oRow->getCells());
         $this->assertInstanceOf('PhpOffice\\PhpWord\\Style\\Row', $oRow->getStyle());
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php
index 41eae21..8399618 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php
@@ -50,12 +50,11 @@ class SDTTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test set type exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid style value
      */
     public function testSetTypeException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid style value');
         $object = new SDT('comboBox');
         $object->setType('foo');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php
index 8b6c9a4..ab4199e 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php
@@ -87,10 +87,10 @@ class SectionTest extends \PHPUnit\Framework\TestCase
 
     /**
      * @coversNothing
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidObjectException
      */
     public function testAddObjectException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidObjectException::class);
         $source = __DIR__ . '/_files/xsl/passthrough.xsl';
         $section = new Section(0);
         $section->addObject($source);
@@ -154,11 +154,11 @@ class SectionTest extends \PHPUnit\Framework\TestCase
 
     /**
      * @covers ::addHeader
-     * @expectedException \Exception
-     * @expectedExceptionMessage Invalid header/footer type.
      */
     public function testAddHeaderException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Invalid header/footer type.');
         $object = new Section(1);
         $object->addHeader('ODD');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php
index fa9949e..7cad5d8 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php
@@ -27,11 +27,11 @@ class CopyFileExceptionTest extends \PHPUnit\Framework\TestCase
      * CopyFileException can be thrown.
      *
      * @covers            ::__construct()
-     * @expectedException \PhpOffice\PhpWord\Exception\CopyFileException
      * @test
      */
     public function testCopyFileExceptionCanBeThrown()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\CopyFileException::class);
         throw new CopyFileException('C:\source\dummy.txt', 'C:\destination\dummy.txt');
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php
index 6b4d14b..3ee604f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php
@@ -27,11 +27,11 @@ class CreateTemporaryFileExceptionTest extends \PHPUnit\Framework\TestCase
      * CreateTemporaryFileException can be thrown.
      *
      * @covers            ::__construct()
-     * @expectedException \PhpOffice\PhpWord\Exception\CreateTemporaryFileException
      * @test
      */
     public function testCreateTemporaryFileExceptionCanBeThrown()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\CreateTemporaryFileException::class);
         throw new CreateTemporaryFileException();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php
index 255477f..daa3ba2 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php
@@ -28,11 +28,11 @@ class ExceptionTest extends \PHPUnit\Framework\TestCase
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      * @covers            \PhpOffice\PhpWord\Exception\Exception
      */
     public function testThrowException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         throw new Exception();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php
index c0285dc..e20189b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php
@@ -28,11 +28,11 @@ class InvalidImageExceptionTest extends \PHPUnit\Framework\TestCase
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      * @covers            \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testThrowException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidImageException::class);
         throw new InvalidImageException();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php
index d516019..b370334 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php
@@ -28,11 +28,11 @@ class InvalidStyleExceptionTest extends \PHPUnit\Framework\TestCase
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidStyleException
      * @covers            \PhpOffice\PhpWord\Exception\InvalidStyleException
      */
     public function testThrowException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidStyleException::class);
         throw new InvalidStyleException();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php
index 559d634..37879e2 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php
@@ -28,11 +28,11 @@ class UnsupportedImageTypeExceptionTest extends \PHPUnit\Framework\TestCase
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
      * @covers            \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
      */
     public function testThrowException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\UnsupportedImageTypeException::class);
         throw new UnsupportedImageTypeException();
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php b/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php
index 581b7d4..2a7308b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php
@@ -37,11 +37,10 @@ class IOFactoryTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Create non-existing writer
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testNonexistentWriterCanNotBeCreated()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         IOFactory::createWriter(new PhpWord(), 'Word2006');
     }
 
@@ -58,11 +57,10 @@ class IOFactoryTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Create non-existing reader
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testNonexistentReaderCanNotBeCreated()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         IOFactory::createReader('Word2006');
     }
 
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php b/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php
index ed56376..318d218 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php
@@ -105,12 +105,11 @@ class MediaTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Add image element exception
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage Image object not assigned.
      */
     public function testAddElementImageException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Image object not assigned.');
         Media::addElement('section', 'image', __DIR__ . '/_files/images/mars.jpg');
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php
index 5086356..7423d2d 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php
@@ -71,10 +71,10 @@ class SettingsTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setting an invalid salt
-     * @expectedException \InvalidArgumentException
      */
     public function testInvalidSalt()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $protection = new Protection();
         $protection->setSalt('123');
     }
@@ -125,20 +125,16 @@ class SettingsTest extends \PHPUnit\Framework\TestCase
         $this->assertEquals(ProofState::DIRTY, $oSettings->getProofState()->getSpelling());
     }
 
-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testWrongProofStateGrammar()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $proofState = new ProofState();
         $proofState->setGrammar('wrong');
     }
 
-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testWrongProofStateSpelling()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $proofState = new ProofState();
         $proofState->setSpelling('wrong');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php b/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php
index f8a2245..c603c09 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php
@@ -133,11 +133,10 @@ class PhpWordTest extends \PHPUnit\Framework\TestCase
      * Test load template exception
      *
      * @deprecated 0.12.0
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testLoadTemplateException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         $templateFqfn = implode(
             DIRECTORY_SEPARATOR,
             array(PHPWORD_TESTS_BASE_DIR, 'PhpWord', 'Tests', '_files', 'templates', 'blanks.docx')
@@ -162,12 +161,11 @@ class PhpWordTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test calling undefined method
-     *
-     * @expectedException \BadMethodCallException
-     * @expectedExceptionMessage is not defined
      */
     public function testCallUndefinedMethod()
     {
+        $this->expectException(\BadMethodCallException::class);
+        $this->expectExceptionMessage('is not defined');
         $phpWord = new PhpWord();
         $phpWord->undefinedMethod();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php
index c56fc1f..fb03914 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php
@@ -39,12 +39,11 @@ class HTMLTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test load exception
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage Cannot read
      */
     public function testLoadException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Cannot read');
         $filename = __DIR__ . '/../_files/documents/foo.html';
         IOFactory::load($filename, 'HTML');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php
index e407547..21138d1 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php
@@ -59,20 +59,20 @@ class MsDocTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test exception on not existing file
-     * @expectedException \Exception
      */
     public function testFailIfFileNotReadable()
     {
+        $this->expectException(\Exception::class);
         $filename = __DIR__ . '/../_files/documents/not_existing_reader.doc';
         IOFactory::load($filename, 'MsDoc');
     }
 
     /**
      * Test exception on non OLE document
-     * @expectedException \Exception
      */
     public function testFailIfFileNotOle()
     {
+        $this->expectException(\Exception::class);
         $filename = __DIR__ . '/../_files/documents/reader.odt';
         IOFactory::load($filename, 'MsDoc');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php
index ca1f6ed..fa2f778 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php
@@ -39,12 +39,11 @@ class RTFTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test load exception
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage Cannot read
      */
     public function testLoadException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Cannot read');
         $filename = __DIR__ . '/../_files/documents/foo.rtf';
         IOFactory::load($filename, 'RTF');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php
index 752b9a8..1f14d87 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php
@@ -89,7 +89,8 @@ class ConverterTest extends \PHPUnit\Framework\TestCase
             $this->assertEquals(round($value / 9525), $result);
 
             $result = Converter::picaToPoint($value);
-            $this->assertEquals($value / 6 * 72, $result, '', 0.00001);
+            $this->assertEquals($value / 6 * 72, $result, '');
+            $this->assertEqualsWithDelta($value / 6 * 72, $result, 0.00001, '');
 
             $result = Converter::degreeToAngle($value);
             $this->assertEquals((int) round($value * 60000), $result);
@@ -127,7 +128,9 @@ class ConverterTest extends \PHPUnit\Framework\TestCase
         $this->assertEquals(7.5, Converter::cssToPoint('10px'));
         $this->assertEquals(720, Converter::cssToPoint('10in'));
         $this->assertEquals(120, Converter::cssToPoint('10pc'));
-        $this->assertEquals(28.346457, Converter::cssToPoint('10mm'), '', 0.000001);
-        $this->assertEquals(283.464567, Converter::cssToPoint('10cm'), '', 0.000001);
+        $this->assertEquals(28.346457, Converter::cssToPoint('10mm'), '');
+        $this->assertEqualsWithDelta(28.346457, Converter::cssToPoint('10mm'), 0.000001, '');
+        $this->assertEquals(283.464567, Converter::cssToPoint('10cm'), '');
+        $this->assertEqualsWithDelta(283.464567, Converter::cssToPoint('10cm'), 0.000001, '');
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php
index c0263b1..9f62ea2 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php
@@ -64,11 +64,10 @@ class AbstractStyleTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setEnumVal exception
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testSetValEnumException()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $stub = $this->getMockForAbstractClass('\PhpOffice\PhpWord\Style\AbstractStyle');
 
         $this->assertEquals('b', self::callProtectedMethod($stub, 'setEnumVal', array('z', array('a', 'b'), 'b')));
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php
index 91bba97..bed0b67 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php
@@ -31,7 +31,7 @@ class FontTest extends \PHPUnit\Framework\TestCase
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -45,7 +45,7 @@ class FontTest extends \PHPUnit\Framework\TestCase
 
         $this->assertEquals('text', $object->getStyleType());
         $this->assertInstanceOf('PhpOffice\\PhpWord\\Style\\Paragraph', $object->getParagraphStyle());
-        $this->assertInternalType('array', $object->getStyleValues());
+        $this->assertIsArray($object->getStyleValues());
     }
 
     /**
@@ -168,11 +168,10 @@ class FontTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test line height exception by using nonnumeric value
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidStyleException
      */
     public function testLineHeightException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidStyleException::class);
         $object = new Font();
         $object->setLineHeight('a');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php
index 5d9e556..18b257e 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php
@@ -78,11 +78,10 @@ class ImageTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setWrappingStyle exception
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testSetWrappingStyleException()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $object = new Image();
         $object->setWrappingStyle('foo');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php
index 74b2067..e15592b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php
@@ -51,11 +51,10 @@ class LanguageTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test throws exception if wrong locale is given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongLanguage()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $language = new Language();
         $language->setLatin('fr');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php
index 687e23c..8bbaf01 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php
@@ -30,7 +30,7 @@ class PaperTest extends \PHPUnit\Framework\TestCase
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -53,8 +53,10 @@ class PaperTest extends \PHPUnit\Framework\TestCase
         $object = new Paper('B5');
 
         $this->assertEquals('B5', $object->getSize());
-        $this->assertEquals(9977.9527559055, $object->getWidth(), '', 0.000000001);
-        $this->assertEquals(14173.228346457, $object->getHeight(), '', 0.000000001);
+        $this->assertEquals(9977.9527559055, $object->getWidth(), '');
+        $this->assertEqualsWithDelta(9977.9527559055, $object->getWidth(), 0.000000001, '');
+        $this->assertEquals(14173.228346457, $object->getHeight(), '');
+        $this->assertEqualsWithDelta(14173.228346457, $object->getHeight(), 0.000000001, '');
     }
 
     /**
@@ -66,7 +68,9 @@ class PaperTest extends \PHPUnit\Framework\TestCase
         $object->setSize('Folio');
 
         $this->assertEquals('Folio', $object->getSize());
-        $this->assertEquals(12240, $object->getWidth(), '', 0.1);
-        $this->assertEquals(18720, $object->getHeight(), '', 0.1);
+        $this->assertEquals(12240, $object->getWidth(), '');
+        $this->assertEqualsWithDelta(12240, $object->getWidth(), 0.1, '');
+        $this->assertEquals(18720, $object->getHeight(), '');
+        $this->assertEqualsWithDelta(18720, $object->getHeight(), 0.1, '');
     }
 }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php
index e961f36..dc6a5fb 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php
@@ -31,7 +31,7 @@ class ParagraphTest extends \PHPUnit\Framework\TestCase
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -178,11 +178,10 @@ class ParagraphTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test line height exception by using nonnumeric value
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidStyleException
      */
     public function testLineHeightException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidStyleException::class);
         $object = new Paragraph();
         $object->setLineHeight('a');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php
index c9b7003..337c99e 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php
@@ -33,14 +33,18 @@ class SectionTest extends \PHPUnit\Framework\TestCase
         $oSettings = new Section();
 
         $this->assertEquals('portrait', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), 0.000000001, '');
         $this->assertEquals('A4', $oSettings->getPaperSize());
 
         $oSettings->setSettingValue('orientation', 'landscape');
         $this->assertEquals('landscape', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), 0.000000001, '');
 
         $iVal = rand(1, 1000);
         $oSettings->setSettingValue('borderSize', $iVal);
@@ -110,7 +114,8 @@ class SectionTest extends \PHPUnit\Framework\TestCase
         // Section Settings
         $oSettings = new Section();
 
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), 0.000000001, '');
         $iVal = rand(1, 1000);
         $oSettings->setSettingValue('pageSizeW', $iVal);
         $this->assertEquals($iVal, $oSettings->getPageSizeW());
@@ -124,7 +129,8 @@ class SectionTest extends \PHPUnit\Framework\TestCase
         // Section Settings
         $oSettings = new Section();
 
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), 0.000000001, '');
         $iVal = rand(1, 1000);
         $oSettings->setSettingValue('pageSizeH', $iVal);
         $this->assertEquals($iVal, $oSettings->getPageSizeH());
@@ -140,8 +146,10 @@ class SectionTest extends \PHPUnit\Framework\TestCase
 
         $oSettings->setLandscape();
         $this->assertEquals('landscape', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), 0.000000001, '');
     }
 
     /**
@@ -154,8 +162,10 @@ class SectionTest extends \PHPUnit\Framework\TestCase
 
         $oSettings->setPortrait();
         $this->assertEquals('portrait', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), 0.000000001, '');
     }
 
     /**
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php
index 5a6bc76..686c3c3 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php
@@ -96,11 +96,10 @@ class TextBoxTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test setWrappingStyle exception
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testSetWrappingStyleException()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $object = new TextBox();
         $object->setWrappingStyle('foo');
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php b/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php
index 7b064ef..93b0c26 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php
@@ -113,12 +113,12 @@ final class TemplateProcessorTest extends \PHPUnit\Framework\TestCase
      * XSL stylesheet cannot be applied on failure in setting parameter value.
      *
      * @covers                   ::applyXslStyleSheet
-     * @expectedException        \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage Could not set values for the given XSL style sheet parameters.
      * @test
      */
     final public function testXslStyleSheetCanNotBeAppliedOnFailureOfSettingParameterValue()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('Could not set values for the given XSL style sheet parameters.');
         $templateProcessor = new TemplateProcessor(__DIR__ . '/_files/templates/blank.docx');
 
         $xslDomDocument = new \DOMDocument();
@@ -135,12 +135,12 @@ final class TemplateProcessorTest extends \PHPUnit\Framework\TestCase
      * XSL stylesheet can be applied on failure of loading XML from template.
      *
      * @covers                   ::applyXslStyleSheet
-     * @expectedException        \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage Could not load the given XML document.
      * @test
      */
     final public function testXslStyleSheetCanNotBeAppliedOnFailureOfLoadingXmlFromTemplate()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('Could not load the given XML document.');
         $templateProcessor = new TemplateProcessor(__DIR__ . '/_files/templates/corrupted_main_document_part.docx');
 
         $xslDomDocument = new \DOMDocument();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php
index 3d56f98..c23a585 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php
@@ -26,11 +26,10 @@ class PartTest extends \PHPUnit\Framework\TestCase
 {
     /**
      * Test get parent writer exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testGetParentWriterException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         $object = new Body();
         $object->getParentWriter();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php
index bdfc44e..eb84abd 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php
@@ -40,12 +40,11 @@ class HTMLTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Construct with null
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage No PhpWord assigned.
      */
     public function testConstructWithNull()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('No PhpWord assigned.');
         $object = new HTML();
         $object->getPhpWord();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php
index f91e6dd..779243e 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php
@@ -40,12 +40,11 @@ class AbstractPartTest extends \PHPUnit\Framework\TestCase
 
     /**
      * covers   ::getParentWriter
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage No parent WriterInterface assigned.
      */
     public function testSetGetParentWriterNull()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('No parent WriterInterface assigned.');
         $object = $this->getMockForAbstractClass('PhpOffice\\PhpWord\\Writer\\ODText\\Part\\AbstractPart');
         $object->getParentWriter();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php
index d568114..783c284 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php
@@ -32,7 +32,7 @@ class ContentTest extends \PHPUnit\Framework\TestCase
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php
index 1984de0..eb3271b 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php
@@ -51,12 +51,11 @@ class ODTextTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Construct with null
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage No PhpWord assigned.
      */
     public function testConstructWithNull()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('No PhpWord assigned.');
         $object = new ODText();
         $object->getPhpWord();
     }
@@ -135,11 +134,10 @@ class ODTextTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Use disk caching exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testSetUseDiskCachingException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         $dir = implode(DIRECTORY_SEPARATOR, array(PHPWORD_TESTS_BASE_DIR, 'foo'));
 
         $object = new ODText();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php
index a7ca9f6..24524f2 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php
@@ -48,12 +48,11 @@ class PDFTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Test construct exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage PDF rendering library or library path has not been defined.
      */
     public function testConstructException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('PDF rendering library or library path has not been defined.');
         $writer = new PDF(new PhpWord());
         $writer->save();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php
index 803087e..00f8e26 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php
@@ -39,12 +39,11 @@ class RTFTest extends \PHPUnit\Framework\TestCase
 
     /**
      * Construct with null
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage No PhpWord assigned.
      */
     public function testConstructWithNull()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('No PhpWord assigned.');
         $object = new RTF();
         $object->getPhpWord();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php
index 12f810c..c4879fa 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php
@@ -32,7 +32,7 @@ class ElementTest extends \PHPUnit\Framework\TestCase
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php
index 7796c02..df9d26f 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php
@@ -40,12 +40,11 @@ class AbstractPartTest extends \PHPUnit\Framework\TestCase
 
     /**
      * covers   ::getParentWriter
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage No parent WriterInterface assigned.
      */
     public function testSetGetParentWriterNull()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('No parent WriterInterface assigned.');
         $object = $this->getMockForAbstractClass('PhpOffice\\PhpWord\\Writer\\Word2007\\Part\\AbstractPart');
         $object->getParentWriter();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php
index 83af284..083da3e 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php
@@ -30,7 +30,7 @@ class CommentsTest extends \PHPUnit\Framework\TestCase
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php
index 6998e71..2317a3c 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php
@@ -37,7 +37,7 @@ class DocumentTest extends \PHPUnit\Framework\TestCase
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -408,7 +408,7 @@ class DocumentTest extends \PHPUnit\Framework\TestCase
         // behind
         $element = $doc->getElement('/w:document/w:body/w:p[2]/w:r/w:pict/v:shape');
         $style = $element->getAttribute('style');
-        $this->assertRegExp('/z\-index:\-[0-9]*/', $style);
+        $this->assertMatchesRegularExpression('/z\-index:\-[0-9]*/', $style);
 
         // square
         $element = $doc->getElement('/w:document/w:body/w:p[4]/w:r/w:pict/v:shape/w10:wrap');
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php
index 3d11174..c65a5e2 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php
@@ -27,7 +27,7 @@ use PhpOffice\PhpWord\TestHelperDOCX;
  */
 class FootnotesTest extends \PHPUnit\Framework\TestCase
 {
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php
index 62127e2..2f1a9d0 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php
@@ -34,7 +34,7 @@ class NumberingTest extends \PHPUnit\Framework\TestCase
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php
index 50b444b..cc856b9 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php
@@ -36,7 +36,7 @@ class SettingsTest extends \PHPUnit\Framework\TestCase
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php
index 0cdb444..235bdf8 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php
@@ -34,7 +34,7 @@ class StylesTest extends \PHPUnit\Framework\TestCase
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php
index 160bf55..9b9c3d5 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php
@@ -30,11 +30,11 @@ class PartTest extends \PHPUnit\Framework\TestCase
      * Test exception when no type or target assigned to a relation
      *
      * @covers \PhpOffice\PhpWord\Writer\Word2007\Part\Rels::writeRel
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage Invalid parameters passed.
      */
     public function testRelsWriteRelException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('Invalid parameters passed.');
         $object = new RelsPart();
         $object->setMedia(array(array('type' => '', 'target' => '')));
         $object->write();
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php
index d36a303..acd30ac 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php
@@ -30,7 +30,7 @@ class FontTest extends \PHPUnit\Framework\TestCase
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php
index 9bc2756..4db41fd 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php
@@ -30,7 +30,7 @@ class ParagraphTest extends \PHPUnit\Framework\TestCase
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
diff --git a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php
index 3e1edb3..253e914 100644
--- a/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php
+++ b/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php
@@ -31,7 +31,7 @@ class Word2007Test extends \PHPUnit\Framework\TestCase
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ -181,11 +181,10 @@ class Word2007Test extends \PHPUnit\Framework\TestCase
 
     /**
      * Use disk caching exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testSetUseDiskCachingException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         $dir = implode(DIRECTORY_SEPARATOR, array(PHPWORD_TESTS_BASE_DIR, 'foo'));
 
         $object = new Word2007();
