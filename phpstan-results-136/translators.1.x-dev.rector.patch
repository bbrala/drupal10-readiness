diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentAccessClassTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentAccessClassTest.php
index 4b495c7..d1d2e71 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentAccessClassTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentAccessClassTest.php
@@ -32,7 +32,7 @@ class TranslatorsContentAccessClassTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->accessManager = $this->container
       ->get('content_translation.manage_access');
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentConfigTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentConfigTest.php
index 362bfa0..5c95c87 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentConfigTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentConfigTest.php
@@ -94,13 +94,10 @@ class TranslatorsContentConfigTest extends BrowserTestBase {
       else {
         $this->assertTrue($option_value);
       }
+      $this->drupalGet('/admin/config/regional/translators');
 
       // Update value.
-      $this->drupalPostForm(
-        '/admin/config/regional/translators',
-        [$config_name => TRUE],
-        'Save configuration'
-      );
+      $this->submitForm([$config_name => TRUE], 'Save configuration');
 
       $this->assertSession()->statusCodeEquals(200);
       $this->assertTextHelper('The configuration options have been saved.', FALSE);
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionBlockContentTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionBlockContentTest.php
index b046edb..2126405 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionBlockContentTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionBlockContentTest.php
@@ -68,9 +68,9 @@ class TranslatorsContentPermissionBlockContentTest extends TranslatorsContentPer
     $source = !empty($source) ? $source : $entity->getUntranslated()->language()->getId();
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertResponse(200);
-    $this->drupalPostForm(NULL, [], t('Save'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
+    $this->submitForm([], t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
     $this->rebuildContainer();
   }
 
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionCommentTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionCommentTest.php
index d3e6008..587bf4e 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionCommentTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionCommentTest.php
@@ -41,7 +41,7 @@ class TranslatorsContentPermissionCommentTest extends TranslatorsContentPermissi
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $node = Node::create([
       'type' => 'article',
@@ -98,9 +98,9 @@ class TranslatorsContentPermissionCommentTest extends TranslatorsContentPermissi
     $source = !empty($source) ? $source : $entity->getUntranslated()->language()->getId();
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertResponse(200);
-    $this->drupalPostForm(NULL, [], t('Save'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
+    $this->submitForm([], t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
     $this->rebuildContainer();
   }
 
@@ -109,13 +109,13 @@ class TranslatorsContentPermissionCommentTest extends TranslatorsContentPermissi
    */
   public function runTestLocalTaskTabsExistence($entity, $label, $url, $langcode = NULL) {
     $this->drupalGetEntity($entity, $langcode);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $id = $entity->id();
     $operation = $label == 'Translate' ? 'translations' : strtolower($label);
     $link = $this->assertSession()->elementExists('xpath', "//article[@id='comment-$id']//a[text()=\"$label\"]");
     $link->click();
-    $this->assertResponse(200);
-    $this->assertUrl($url->toString());
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals($url->toString());
   }
 
   /**
@@ -123,7 +123,7 @@ class TranslatorsContentPermissionCommentTest extends TranslatorsContentPermissi
    */
   public function runTestNoLocalTaskTabsExistence($entity, $label, $langcode = NULL) {
     $this->drupalGetEntity($entity, $langcode);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $id = $entity->id();
     $operation = $label == 'Translate' ? 'translations' : strtolower($label);
     $this->assertSession()->elementNotExists('xpath', "//article[@id='comment-$id']//a[text()=\"$label\"]");
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionMediaTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionMediaTest.php
index 69f05be..74305fb 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionMediaTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionMediaTest.php
@@ -38,14 +38,11 @@ class TranslatorsContentPermissionMediaTest extends TranslatorsContentPermission
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);
-    $this->drupalPostForm(
-      '/admin/config/media/media-settings',
-      ['standalone_url' => TRUE],
-      'Save configuration'
-    );
+    $this->drupalGet('/admin/config/media/media-settings');
+    $this->submitForm(['standalone_url' => TRUE], 'Save configuration');
     $this->drupalLogout();
     file_put_contents('public://image-test.jpg', file_get_contents(__DIR__ . '/image-test.jpg'));
     $file = File::create([
@@ -234,8 +231,8 @@ class TranslatorsContentPermissionMediaTest extends TranslatorsContentPermission
     $source = !empty($source) ? $source : $entity->getUntranslated()->language()->getId();
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertResponse(200);
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->submitForm([], t('Save'));
     $this->rebuildContainer();
   }
 
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticEntityTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticEntityTest.php
index 1e1f45c..643fd9c 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticEntityTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticEntityTest.php
@@ -27,7 +27,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);
     $this->createLanguages(['fr', 'de', 'sq']);
@@ -47,7 +47,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
 
     // Test access languages in translation skills.
     $this->drupalGet('node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 6);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -57,7 +57,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->assertOptionAvailable('langcode[0][value]', Language::LANGCODE_NOT_APPLICABLE);
 
     $this->drupalGet('fr/node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 6);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -68,7 +68,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
 
     // Test access other languages.
     $this->drupalGet('de/node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 6);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -78,7 +78,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->assertOptionAvailable('langcode[0][value]', Language::LANGCODE_NOT_APPLICABLE);
 
     $this->drupalGet('sq/node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 6);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -100,7 +100,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
 
     // Test access languages in translation skills.
     $this->drupalGet('node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 4);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -108,7 +108,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->assertOptionAvailable('langcode[0][value]', Language::LANGCODE_NOT_APPLICABLE);
 
     $this->drupalGet('fr/node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 4);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -117,11 +117,11 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
 
     // Test access other languages.
     $this->drupalGet('de/node/add/article');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->assertTextHelper('Access denied', FALSE);
 
     $this->drupalGet('sq/node/add/article');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->assertTextHelper('Access denied', FALSE);
   }
 
@@ -149,44 +149,44 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->drupalGet("node/$en_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$en_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("fr/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$en_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$en_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     $fr_nid = $node_fr->id();
     $this->drupalGet("node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$fr_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$fr_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$fr_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$fr_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Test access in another language.
     $de_nid = $node_de->id();
     $this->drupalGet("node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$de_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$de_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
   /**
@@ -213,44 +213,44 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->drupalGet("node/$en_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$en_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("fr/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$en_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$en_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     $fr_nid = $node_fr->id();
     $this->drupalGet("node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$fr_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$fr_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$fr_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$fr_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Test access in another language.
     $de_nid = $node_de->id();
     $this->drupalGet("node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -277,44 +277,44 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->drupalGet("node/$en_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$en_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("fr/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$en_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$en_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     $fr_nid = $node_fr->id();
     $this->drupalGet("node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$fr_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$fr_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$fr_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$fr_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Test access in another language.
     $de_nid = $node_de->id();
     $this->drupalGet("node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$de_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$de_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
   /**
@@ -341,44 +341,44 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->drupalGet("node/$en_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$en_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("fr/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$en_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$en_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     $fr_nid = $node_fr->id();
     $this->drupalGet("node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$fr_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$fr_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$fr_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$fr_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Test access in another language.
     $de_nid = $node_de->id();
     $this->drupalGet("node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
 }
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticTranslationTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticTranslationTest.php
index acf7e2f..446147c 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticTranslationTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticTranslationTest.php
@@ -26,7 +26,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);
     $this->createLanguages(['fr', 'de', 'sq']);
@@ -51,7 +51,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.add a[hreflang="en"]');
     $this->assertSession()
@@ -62,11 +62,11 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.add a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/de");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/sq");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
 
     $translationCreator2 = $this->createUser([
@@ -79,7 +79,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.add a[hreflang="en"]');
     $this->assertSession()
@@ -90,11 +90,11 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.add a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/de");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/sq");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
   /**
@@ -114,7 +114,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.add a[hreflang="en"]');
     $this->assertSession()
@@ -125,11 +125,11 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.add a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/de");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("node/$nid/translations/add/en/sq");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogout();
 
     $translationCreator2 = $this->createUser([
@@ -143,7 +143,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.add a[hreflang="en"]');
     $this->assertSession()
@@ -154,11 +154,11 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.add a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/de");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("node/$nid/translations/add/en/sq");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -183,7 +183,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     ]);
     $this->drupalLogin($translationCreator1);
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -191,7 +191,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/de/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -199,7 +199,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/sq/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -208,12 +208,12 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
 
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/en/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/en/fr");
     $this->drupalLogout();
 
     // Test with translators_content create translation access.
@@ -226,7 +226,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->addSkill(['de', 'fr']);
     $this->addSkill(['en', 'sq']);
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -234,7 +234,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/de/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -242,7 +242,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/sq/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -251,12 +251,12 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
 
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/en/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/en/fr");
     $this->drupalLogout();
 
     // Test with strict translation skill pairing.
@@ -266,7 +266,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
 
     $this->drupalLogin($translationCreator2);
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 2);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -274,7 +274,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/de/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 2);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -282,16 +282,16 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/sq/fr");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/en/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/en/fr");
     $this->drupalLogout();
 
     // Test preset source language.
@@ -307,12 +307,12 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->drupalLogin($translationCreator3);
     $this->addSkill(['de', 'fr']);
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/de/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/de/fr");
     $this->drupalLogout();
 
     // Test with translators_content create translation access.
@@ -323,12 +323,12 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->drupalLogin($translationCreator4);
     $this->addSkill(['de', 'fr']);
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/de/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/de/fr");
   }
 
   /**
@@ -351,7 +351,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.edit a[hreflang="en"]');
     $this->assertSession()
@@ -362,13 +362,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.edit a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("sq/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
 
     $translationEditor2 = $this->createUser([
@@ -381,7 +381,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.edit a[hreflang="en"]');
     $this->assertSession()
@@ -392,13 +392,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.edit a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("sq/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
   }
 
@@ -423,7 +423,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.edit a[hreflang="en"]');
     $this->assertSession()
@@ -434,13 +434,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.edit a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("sq/node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogout();
 
     $translationEditor2 = $this->createUser([
@@ -454,7 +454,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.edit a[hreflang="en"]');
     $this->assertSession()
@@ -465,13 +465,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.edit a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("sq/node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -494,7 +494,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.delete a[hreflang="en"]');
     $this->assertSession()
@@ -505,13 +505,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.delete a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("sq/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
 
     $translationDeleter2 = $this->createUser([
@@ -524,7 +524,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.delete a[hreflang="en"]');
     $this->assertSession()
@@ -535,13 +535,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.delete a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("sq/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
   }
 
@@ -566,7 +566,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.delete a[hreflang="en"]');
     $this->assertSession()
@@ -577,13 +577,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.delete a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("sq/node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogout();
 
     $translationDeleter2 = $this->createUser([
@@ -597,7 +597,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.delete a[hreflang="en"]');
     $this->assertSession()
@@ -608,13 +608,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.delete a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("sq/node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -636,7 +636,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->addSkill(['en', 'fr']);
 
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     $language_column_css = 'main table td:first-child';
     // Test node default language.
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTaxonomyTermTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTaxonomyTermTest.php
index 3fb8537..5ae6505 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTaxonomyTermTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTaxonomyTermTest.php
@@ -179,8 +179,8 @@ class TranslatorsContentPermissionTaxonomyTermTest extends TranslatorsContentPer
     $source = !empty($source) ? $source : $entity->getUntranslated()->language()->getId();
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertResponse(200);
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->submitForm([], t('Save'));
     $this->rebuildContainer();
   }
 
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTestBase.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTestBase.php
index 36e9e7d..bb216e1 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTestBase.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTestBase.php
@@ -53,7 +53,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);
     $this->enableFilterTranslationOverviewToSkills(FALSE);
@@ -104,7 +104,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   public function testTranslatonPermissionsVisability() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin/people/permissions');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $permissions_prefix = '(in translation skills)';
 
     // Check for Content Translators permissions section.
@@ -123,7 +123,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   public function runTestEntityPermissionsVisability() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin/people/permissions');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $permissions_prefix = '(in translation skills)';
 
     // Check for "content" permissions existence.
@@ -351,7 +351,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     if ($this->expectedStatus['create entity in any language'] == 200) {
       foreach ($this->getAllSiteLangcodes() as $langcode) {
         $this->drupalGet($this->getCreateEntityUrl($langcode));
-        $this->assertResponse(200);
+        $this->assertSession()->statusCodeEquals(200);
         foreach ($this->getAllSiteLangcodes() as $all_langcode) {
           $this->assertOptionAvailable('langcode[0][value]', $all_langcode);
         }
@@ -363,7 +363,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     elseif ($this->expectedStatus['create entity in translation skills'] == 200) {
       foreach ($translatorSkills->getAllLangcodes() as $langcode) {
         $this->drupalGet($this->getCreateEntityUrl($langcode));
-        $this->assertResponse(200);
+        $this->assertSession()->statusCodeEquals(200);
         // Check language option field.
         foreach ($translatorSkills->getAllLangcodes() as $user_langcode) {
           $this->assertOptionAvailable('langcode[0][value]', $user_langcode);
@@ -377,13 +377,13 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
       }
       foreach ($this->getUnregisteredLangcodes() as $langcode) {
         $this->drupalGet($this->getCreateEntityUrl($langcode));
-        $this->assertResponse(403);
+        $this->assertSession()->statusCodeEquals(403);
       }
     }
     else {
       foreach ($this->getAllSiteLangcodes() as $langcode) {
         $this->drupalGet($this->getCreateEntityUrl($langcode));
-        $this->assertResponse(403);
+        $this->assertSession()->statusCodeEquals(403);
       }
     }
   }
@@ -452,23 +452,23 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     $path = $this->getCurrentPath($langcode);
     if ($has_permission) {
       // Check direct link permission.
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       // Check local task tabs existence.
       $label = ucfirst($operation);
       $this->runTestLocalTaskTabsExistence($entity, $label, $url);
       // Check operation existence on translation overview page.
       if ($this->expectedStatus['access translation overview'] == 200) {
         $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
-        $this->assertResponse(200);
+        $this->assertSession()->statusCodeEquals(200);
         $this->assertSession()
           ->elementExists('css', ".$operation a[hreflang=\"" . $langcode . "\"]");
         $this->click(".$operation a[hreflang=\"" . $langcode . "\"]");
-        $this->assertUrl($path);
+        $this->assertSession()->addressEquals($path);
       }
     }
     else {
       // Check NO direct link permission.
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
       // Check NO local task tabs existence.
       $label = ucfirst($operation);
       $this->runTestNoLocalTaskTabsExistence($entity, $label);
@@ -490,7 +490,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     $url = $entity->toUrl('drupal:content-translation-overview');
     $this->drupalGet($url);
     $url_string = $url->toString();
-    $this->assertResponse($this->expectedStatus['access translation overview']);
+    $this->assertSession()->statusCodeEquals($this->expectedStatus['access translation overview']);
     if ($this->expectedStatus['access translation overview'] == 200) {
       // Check the language row filtering.
       $config = \Drupal::configFactory()->get('translators.settings');
@@ -551,11 +551,11 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
    */
   public function runTestLocalTaskTabsExistence($entity, $label, $url, $langcode = NULL) {
     $this->drupalGetEntity($entity, $langcode);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->elementExists('xpath', '//a[text()="' . $label . '"]/@href');
     $this->clickLink($label);
-    $this->assertResponse(200);
-    $this->assertUrl($url->toString());
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals($url->toString());
   }
 
   /**
@@ -633,25 +633,25 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     $source = $translatorSkills->getTranslationSourceLangcode($entity, $target);
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertUrl($translation_add_url->toString());
+    $this->assertSession()->addressEquals($translation_add_url->toString());
     $path = $this->getCurrentPath($target);
     if ($has_permission) {
       // Check direct link access.
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       // Check translation operation existence on translation overview page.
       $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       $this->assertSession()
         ->elementExists('css', '.add a[hreflang="' . $target . '"]');
       $this->click('.add a[hreflang="' . $target . '"]');
-      $this->assertUrl($path);
-      $this->assertResponse(200);
+      $this->assertSession()->addressEquals($path);
+      $this->assertSession()->statusCodeEquals(200);
       // Check source language field.
       $this->runTestCreateTranslationSourceLanguages($entity, $target);
     }
     else {
       // Check NO direct link access.
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
       // Check NO translation operation existence on translation overview page.
       $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
       $this->assertSession()
@@ -753,25 +753,25 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     $entity = $entity->getTranslation($langcode);
     $url = $this->getEntityTranslationOperationUrl($entity, $langcode, $operation);
     $this->drupalGet($url);
-    $this->assertUrl($url->toString());
+    $this->assertSession()->addressEquals($url->toString());
     if ($has_permission) {
       // Check direct link access.
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       // Check translation operation existence on translation overview page.
       $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       $this->assertSession()
         ->elementExists('css', ".$operation a[hreflang=\"" . $langcode . "\"]");
       $this->click(".$operation a[hreflang=\"" . $langcode . "\"]");
-      $this->assertUrl($url->toString());
-      $this->assertResponse(200);
+      $this->assertSession()->addressEquals($url->toString());
+      $this->assertSession()->statusCodeEquals(200);
       // Check local task tabs existence.
       $label = ucfirst($operation);
       $this->runTestLocalTaskTabsExistence($entity, $label, $url, $langcode);
     }
     else {
       // Check NO direct link access.
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
       // Check NO translation operation existence on translation overview page.
       $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
       $this->assertSession()
@@ -792,36 +792,36 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
 
     // Check that local task tabs exist for own page.
     $this->drupalGet("user/{$user->id()}");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     // Check that local task tabs doesn't exist for other uers's pages.
     $this->drupalGet("user/{$another_user->id()}");
     if ($user->hasPermission('administer users')) {
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     }
     else {
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
       $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     }
 
     // Check for the edit page access for own page.
     $this->drupalGet("user/{$user->id()}/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Check for the edit page access for other users's page.
     $this->drupalGet("user/{$another_user->id()}/edit");
     if ($user->hasPermission('administer users')) {
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
     }
     else {
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
     }
 
     // Additionally check that we don't give access to this form
     // for anonymous users.
     $this->drupalLogout();
     $this->drupalGet("user/{$user->id()}/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($user);
   }
 
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionUserStaticTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionUserStaticTest.php
index d3a819a..90a22f6 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionUserStaticTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionUserStaticTest.php
@@ -32,18 +32,18 @@ class TranslatorsContentPermissionUserStaticTest extends BrowserTestBase {
 
     // Check entity local task tabs existence.
     $this->drupalGet("user/{$user->id()}");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
 
     // Check for the edit page access.
     $this->drupalGet("user/{$user->id()}/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Additionally check that we don't give access to this form
     // for anonymous users.
     $this->drupalLogout();
     $this->drupalGet("user/{$user->id()}/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
 }
