modules/contrib/smallads/csvimport-deprecated/smallads_import.module
modules/contrib/smallads/csvimport-deprecated/src/ImportSmallads.php
modules/contrib/smallads/modules/smallads_geo/smallads_geo.install
modules/contrib/smallads/modules/smallads_geo/smallads_geo.module
modules/contrib/smallads/modules/smallads_geo/src/Plugin/Field/FieldType/OwnerCoordinatesItemList.php
modules/contrib/smallads/modules/smallads_group/smallads_group.module
modules/contrib/smallads/modules/smallads_group/src/Plugin/GroupContentEnabler/GroupSmallads.php
modules/contrib/smallads/modules/smallads_group/src/Plugin/GroupContentEnabler/SmalladDeriver.php
modules/contrib/smallads/modules/smallads_group/src/RouteSubscriber.php
modules/contrib/smallads/modules/smallads_group/src/SmalladGroupAccessControlHandler.php
modules/contrib/smallads/modules/smallads_index/smallads_index.install
modules/contrib/smallads/modules/smallads_index/smallads_index.module
modules/contrib/smallads/modules/smallads_index/src/Form.php
modules/contrib/smallads/modules/smallads_index/src/Plugin/Derivative/SmalladIndexSearchTasks.php
modules/contrib/smallads/modules/smallads_index/src/Plugin/Search/SmalladIndexSearch.php
modules/contrib/smallads/modules/smallads_index/src/RouteSubscriber.php
modules/contrib/smallads/modules/smallads_mcapi/smallads_mcapi.module
modules/contrib/smallads/modules/smallads_mcapi/src/FirstWallet.php
modules/contrib/smallads/smallads.install
modules/contrib/smallads/smallads.module
modules/contrib/smallads/smallads.tokens.inc
modules/contrib/smallads/src/Controller/Smallad.php
modules/contrib/smallads/src/Entity/Smallad.php
modules/contrib/smallads/src/Entity/SmalladInterface.php
modules/contrib/smallads/src/Entity/SmalladType.php
modules/contrib/smallads/src/EventSubscriber/MigrationSubscriber.php
modules/contrib/smallads/src/EventSubscriber/RouteSubscriber.php
modules/contrib/smallads/src/Form/Config.php
modules/contrib/smallads/src/Form/PreAddForm.php
modules/contrib/smallads/src/Form/SmalladDeleteConfirm.php
modules/contrib/smallads/src/Form/SmalladEdit.php
modules/contrib/smallads/src/Form/SmalladTypeForm.php
modules/contrib/smallads/src/Plugin/Action/DeleteSmallad.php
modules/contrib/smallads/src/Plugin/Action/UnpublishSmallad.php
modules/contrib/smallads/src/Plugin/Block/AddAdBlock.php
modules/contrib/smallads/src/Plugin/Block/NestedCategoriesBlock.php
modules/contrib/smallads/src/Plugin/Condition/AdContext.php
modules/contrib/smallads/src/Plugin/Derivative/SmalladActions.php
modules/contrib/smallads/src/Plugin/Derivative/SmalladMenuLink.php
modules/contrib/smallads/src/Plugin/Derivative/SmalladTasks.php
modules/contrib/smallads/src/Plugin/DevelGenerate/SmalladDevelGenerate.php
modules/contrib/smallads/src/Plugin/Field/FieldFormatter/TimeBeforeAfterFormatter.php
modules/contrib/smallads/src/Plugin/Field/FieldType/ScopeItem.php
modules/contrib/smallads/src/Plugin/QueueWorker/ExpiredMail.php
modules/contrib/smallads/src/Plugin/Search/SmalladSearch.php
modules/contrib/smallads/src/Plugin/migrate/D7SmalladDeriver.php
modules/contrib/smallads/src/Plugin/migrate/destination/EntitySmallad.php
modules/contrib/smallads/src/Plugin/migrate/source/d7/Smallad.php
modules/contrib/smallads/src/Plugin/views/argument/SinceTime.php
modules/contrib/smallads/src/Plugin/views/argument_default/AdTypeFromContext.php
modules/contrib/smallads/src/SmalladAccessControlHandler.php
modules/contrib/smallads/src/SmalladListBuilder.php
modules/contrib/smallads/src/SmalladStorage.php
modules/contrib/smallads/src/SmalladTypeAccessControlHandler.php
modules/contrib/smallads/src/SmalladTypeListBuilder.php
modules/contrib/smallads/src/SmalladViewBuilder.php
modules/contrib/smallads/src/SmalladViewsData.php

7 files with changes
====================

1) modules/contrib/smallads/src/SmalladListBuilder.php:116

    ---------- begin diff ----------
@@ @@
     $row['scope'] = $scopeMap[$entity->scope->value];
     $row['type'] = $entity->type->entity->label();
     $row['title'] = $entity->title->value;
-    $row['changed'] = $this->dateFormatter->formatInterval(REQUEST_TIME - $entity->changed->value);
+    $row['changed'] = $this->dateFormatter->formatInterval(\Drupal::time()->getRequestTime() - $entity->changed->value);

     return $row + parent::buildRow($entity);
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/smallads/src/Plugin/Field/FieldFormatter/TimeBeforeAfterFormatter.php:27

    ---------- begin diff ----------
@@ @@
     // @todo include the library
     $elements = array();
     foreach ($items as $delta => &$item) {
-      if (REQUEST_TIME > $item->value) {
+      if (\Drupal::time()->getRequestTime() > $item->value) {
         $item->value = FALSE;
         $class = 'expired';
       }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/smallads/src/Form/SmalladTypeForm.php:72

    ---------- begin diff ----------
@@ @@
     $smallad_type = $this->entity;
     $smallad_type->save();

-    $form_state->setRedirectUrl($smallad_type->urlInfo('collection'));
+    $form_state->setRedirectUrl($smallad_type->toUrl('collection'));
     // If the plural has changed we need to rebuild the menu.
     \Drupal::service('router.builder')->rebuild();
   }
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceUrlInfoRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/smallads/src/Form/SmalladEdit.php:100

    ---------- begin diff ----------
@@ @@
   public function validateForm(array &$form, FormStateInterface $form_state) {
     $this->entity = parent::validateForm($form, $form_state);
     // Warn the user about the expiry date.
-    if ($this->entity->expires->value - REQUEST_TIME > 0) {// Expires in the future.
+    if ($this->entity->expires->value - \Drupal::time()->getRequestTime() > 0) {// Expires in the future.
       if ($this->entity->scope->value == SmalladInterface::SCOPE_PRIVATE) {
         $message = $this->t('If the expiry date is after now, the scope must not be private');
         $form_state->setErrorByName('scope', $message);
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/smallads/smallads.module:259

    ---------- begin diff ----------
@@ @@
   // Find out how to filter by relative dates.
   $smids = \Drupal::entityTypeManager()->getStorage('smallad')->getQuery()
     // Actually the date is stored as dd-mm-yyyy.
-    ->condition('expires', gmdate('Y-m-d', REQUEST_TIME), '<')
+    ->condition('expires', gmdate('Y-m-d', \Drupal::time()->getRequestTime()), '<')
     ->condition('scope', 0, '>')
     ->execute();
   $queue = \Drupal::queue('smallads_expired_mail');
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector


6) modules/contrib/smallads/modules/smallads_index/smallads_index.module:70

    ---------- begin diff ----------
@@ @@
     'keywords' => taxonomy_implode_tags($smallad->categories->referencedEntities()),
     'created' => $smallad->getCreatedTime(),
     'expires' => $smallad->expires->value,
-    'image' => ($smallad->image && $smallad->image->entity) ? substr(file_url_transform_relative(file_create_url($smallad->image->entity->getFileUri())), 1) : '',
+    'image' => ($smallad->image && $smallad->image->entity) ? substr(\Drupal::service('file_url_generator')->generateString($smallad->image->entity->getFileUri()), 1) : '',
     'scope' => $smallad->scope->value,
     'location' => $smallad->coordinates->value,
     'directexchange' => (int)$smallad->directexchange->value,
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector


7) modules/contrib/smallads/csvimport-deprecated/src/ImportSmallads.php:146

    ---------- begin diff ----------
@@ @@
     foreach ($incoming_terms as $key => $term) {
       $incoming_terms[$key] = trim($term);
     }
-    $all_terms = db_query("SELECT LOWER(name) FROM {taxonomy_term_data}")->fetchCol();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $all_terms = \Drupal::database()->query("SELECT LOWER(name) FROM {taxonomy_term_data}")->fetchCol();
     $new_terms = array_diff(array_unique($incoming_terms), $all_terms);

     if (count($new_terms)) {
@@ @@
     $rows = $this->loadCsv($form_state);

     //get the terms so we can lookup the ids
-    $all_terms = db_query("
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $all_terms = \Drupal::database()->query("
       SELECT d.tid, d.vid, d.name, LOWER(d.name) as term_name, v.name, v.machine_name
       FROM {taxonomy_term_data} d
       LEFT JOIN {taxonomy_vocabulary} v ON d.vid = v.vid
@@ @@
       }
       node_save($node);
       if (array_key_exists('created', $row)) {
-        db_query(
-          "UPDATE {node} SET changed = :changed where nid = $node->nid",
-          array('changed' => is_numeric($row['created']) ? $row['created'] : strtotime($row['created']))
-        );
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        \Drupal::database()->query("UPDATE {node} SET changed = :changed where nid = $node->nid", array('changed' => is_numeric($row['created']) ? $row['created'] : strtotime($row['created'])));
       }
       $imported++;
     }
    ----------- end diff -----------

Applied rules:
 * DBQueryRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/smallads/src/Plugin/DevelGenerate/SmalladDevelGenerate.p
         hp" file, due to:                                                      
         "Analyze error: "Class Drupal\devel_generate\DevelGenerateBase not     
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/smallads/modules/smallads_group/src/Plugin/GroupContentE
         nabler/GroupSmallads.php" file, due to:                                
         "Analyze error: "Class Drupal\group\Plugin\GroupContentEnablerBase not 
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

