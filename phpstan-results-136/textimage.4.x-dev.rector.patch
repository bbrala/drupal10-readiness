diff --git a/composer.json b/composer.json
index 4bbb12e..5edd385 100644
--- a/composer.json
+++ b/composer.json
@@ -3,8 +3,8 @@
     "type": "drupal-module",
     "description": "Provides Text and Image field formatters, and an API, to allow building image styles with variable text.",
     "require": {
-        "drupal/core": "^9.2",
-        "drupal/image_effects": "^3.2"
+        "drupal/image_effects": "^3.2",
+        "drupal/core": "^9.3 || ^10"
     },
     "conflict": {
         "drupal/redirect": "<1.7"
diff --git a/src/Plugin/Field/FieldFormatter/TextimageImageFieldFormatter.php b/src/Plugin/Field/FieldFormatter/TextimageImageFieldFormatter.php
index 84c2b2b..94f3dbb 100644
--- a/src/Plugin/Field/FieldFormatter/TextimageImageFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/TextimageImageFieldFormatter.php
@@ -246,7 +246,7 @@ class TextimageImageFieldFormatter extends ImageFormatter {
       if (!$entity_url) {
         switch ($this->getSetting('image_link')) {
           case 'file':
-            $url = Url::fromUri(file_create_url($file->getFileUri()));
+            $url = \Drupal::service('file_url_generator')->generate($file->getFileUri());
             break;
 
           case 'derivative':
diff --git a/src/Textimage.php b/src/Textimage.php
index 885b433..c051ba9 100644
--- a/src/Textimage.php
+++ b/src/Textimage.php
@@ -431,7 +431,7 @@ class Textimage implements TextimageInterface {
    * {@inheritdoc}
    */
   public function getUrl() {
-    return $this->processed ? Url::fromUri(file_create_url($this->getUri())) : NULL;
+    return $this->processed ? \Drupal::service('file_url_generator')->generate($this->getUri()) : NULL;
   }
 
   /**
diff --git a/tests/src/Functional/TextimageFieldFormatterTest.php b/tests/src/Functional/TextimageFieldFormatterTest.php
index 74fa9a2..4ef7120 100644
--- a/tests/src/Functional/TextimageFieldFormatterTest.php
+++ b/tests/src/Functional/TextimageFieldFormatterTest.php
@@ -47,7 +47,7 @@ class TextimageFieldFormatterTest extends TextimageTestBase {
       ->setTokenData(['node' => $node])
       ->process($field_value);
     $textimage_url = $textimage->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);
 
     // Assert HTML tags are stripped and entities are decoded.
     $this->assertSame(['Para1 Para2  "Title" One …'], $textimage->getText());
@@ -145,7 +145,7 @@ class TextimageFieldFormatterTest extends TextimageTestBase {
       ->setTokenData(['node' => $node])
       ->process($field_value);
     $textimage_url = $textimage->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);
 
     // Assert HTML tags are stripped and entities are decoded.
     $this->assertSame(['Para1 Para2  "Title" One …'], $textimage->getText());
@@ -242,7 +242,7 @@ class TextimageFieldFormatterTest extends TextimageTestBase {
       ->setTokenData(['node' => $node])
       ->process($field_value)
       ->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);
 
     $display = $this->entityDisplayRepository->getViewDisplay('node', $node->getType(), 'default');
     $display_options['type'] = 'textimage_text_field_formatter';
@@ -273,7 +273,7 @@ class TextimageFieldFormatterTest extends TextimageTestBase {
         ->setTokenData(['node' => $node])
         ->process($field_value[$i])
         ->getUrl()->toString();
-      $rel_url = file_url_transform_relative($textimage_url);
+      $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);
 
       $this->assertSame($rel_url, $elements[$i]->getAttribute('src'));
       $this->assertSame('Alternate text: Test Title', $elements[$i]->getAttribute('alt'));
@@ -307,7 +307,7 @@ class TextimageFieldFormatterTest extends TextimageTestBase {
     // Get the stored image.
     $fid = $node->{$field_name}[0]->get('target_id')->getValue();
     $source_image_file = File::load($fid);
-    $source_image_file_url = file_create_url($source_image_file->getFileUri());
+    $source_image_file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($source_image_file->getFileUri());
 
     // Get Textimage URL.
     $textimage_url = $this->textimageFactory->get()
@@ -316,7 +316,7 @@ class TextimageFieldFormatterTest extends TextimageTestBase {
       ->setTokenData(['node' => $node, 'file' => $source_image_file])
       ->process(NULL)
       ->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);
 
     // Test the textimage formatter - no link.
     $display = $this->entityDisplayRepository->getViewDisplay('node', $node->getType(), 'default');
@@ -435,7 +435,7 @@ class TextimageFieldFormatterTest extends TextimageTestBase {
     // Get the stored image.
     $fid = $node->{$field_name}[0]->get('target_id')->getValue();
     $source_image_file = File::load($fid);
-    $source_image_file_url = file_create_url($source_image_file->getFileUri());
+    $source_image_file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($source_image_file->getFileUri());
 
     // Get Textimage URL.
     $textimage_url = $this->textimageFactory->get()
@@ -444,7 +444,7 @@ class TextimageFieldFormatterTest extends TextimageTestBase {
       ->setTokenData(['node' => $node, 'file' => $source_image_file])
       ->process(NULL)
       ->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);
 
     // Test the textimage formatter - no link.
     $display = $this->entityDisplayRepository->getViewDisplay('node', $node->getType(), 'default');
diff --git a/tests/src/Functional/TextimageRedirectIntegrationTest.php b/tests/src/Functional/TextimageRedirectIntegrationTest.php
index 0aa67fd..a315c8b 100644
--- a/tests/src/Functional/TextimageRedirectIntegrationTest.php
+++ b/tests/src/Functional/TextimageRedirectIntegrationTest.php
@@ -54,7 +54,7 @@ class TextimageRedirectIntegrationTest extends TextimageTestBase {
     // Get the stored image.
     $fid = $node->{$field_name}[0]->get('target_id')->getValue();
     $source_image_file = File::load($fid);
-    $source_image_file_url = file_create_url($source_image_file->getFileUri());
+    $source_image_file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($source_image_file->getFileUri());
 
     // Get Textimage URL.
     $textimage = $this->textimageFactory->get()
@@ -62,7 +62,7 @@ class TextimageRedirectIntegrationTest extends TextimageTestBase {
       ->setStyle(ImageStyle::load('textimage_test'))
       ->setTokenData(['node' => $node, 'file' => $source_image_file])
       ->process(NULL);
-    $rel_url = file_url_transform_relative($textimage->getUrl()->toString());
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage->getUrl()->toString());
     $this->assertFileDoesNotExist($textimage->getUri());
 
     // Test the textimage formatter - no link.
diff --git a/tests/src/Kernel/TextimageApiTest.php b/tests/src/Kernel/TextimageApiTest.php
index ba73ed2..fe14d3a 100644
--- a/tests/src/Kernel/TextimageApiTest.php
+++ b/tests/src/Kernel/TextimageApiTest.php
@@ -308,7 +308,7 @@ class TextimageApiTest extends KernelTestBase {
     $files = $this->getTestFiles('image');
     $file = File::create((array) array_shift($files));
     $file->save();
-    file_move($file, 'image-test.PNG');
+    \Drupal::service('file.repository')->move($file, 'image-test.PNG');
     $textimage = $this->textimageFactory->get();
     $textimage
       ->setStyle(ImageStyle::load('textimage_test'))
diff --git a/tests/src/Kernel/TextimageTestTrait.php b/tests/src/Kernel/TextimageTestTrait.php
index f81b801..3311c3a 100644
--- a/tests/src/Kernel/TextimageTestTrait.php
+++ b/tests/src/Kernel/TextimageTestTrait.php
@@ -51,7 +51,7 @@ trait TextimageTestTrait {
     $config = \Drupal::configFactory()->getEditable('image_effects.settings');
     $config
       ->set('image_selector.plugin_id', 'dropdown')
-      ->set('image_selector.plugin_settings.dropdown.path', drupal_get_path('module', 'image_effects') . '/tests/images')
+      ->set('image_selector.plugin_settings.dropdown.path', \Drupal::service('extension.list.module')->getPath('image_effects') . '/tests/images')
       ->set('font_selector.plugin_id', 'dropdown')
       ->set('font_selector.plugin_settings.dropdown.path', 'vendor://fileeye/linuxlibertine-fonts')
       ->save();
diff --git a/tests/src/Kernel/TextimageThemeTest.php b/tests/src/Kernel/TextimageThemeTest.php
index 9ae1a3d..60c483c 100644
--- a/tests/src/Kernel/TextimageThemeTest.php
+++ b/tests/src/Kernel/TextimageThemeTest.php
@@ -70,7 +70,7 @@ class TextimageThemeTest extends KernelTestBase {
     ];
     $this->setRawContent($this->renderer->renderRoot($output));
     $abs_url = $textimage->getUrl()->toString();
-    $rel_url = file_url_transform_relative($abs_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($abs_url);
     // @todo changing behaviour in D8.1, need to watch #2646744
     $elements = $this->cssSelect("a[href='$abs_url'] div.textimage-container-test img[src='$rel_url']");
     $this->assertNotEmpty($elements, 'Textimage formatted correctly.');
diff --git a/textimage.info.yml b/textimage.info.yml
index ecd169f..7086973 100644
--- a/textimage.info.yml
+++ b/textimage.info.yml
@@ -1,5 +1,5 @@
 type: module
-core_version_requirement: ^9.2
+core_version_requirement: ^9.3 || ^10
 name: Textimage
 description: 'Provides Text and Image field formatters, and an API, to allow building image styles with variable text.'
 package: Media
