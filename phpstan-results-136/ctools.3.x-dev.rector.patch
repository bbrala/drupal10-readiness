diff --git a/modules/ctools_block/tests/src/Functional/EntityFieldBlockTest.php b/modules/ctools_block/tests/src/Functional/EntityFieldBlockTest.php
index 56baf0da..2921d4d3 100644
--- a/modules/ctools_block/tests/src/Functional/EntityFieldBlockTest.php
+++ b/modules/ctools_block/tests/src/Functional/EntityFieldBlockTest.php
@@ -83,8 +83,8 @@ class EntityFieldBlockTest extends BrowserTestBase {
     $this->drupalGet('node/' . $node->id());
 
     $url = $file->getFileUri();
-    $url = file_create_url($url);
-    $url = file_url_transform_relative($url);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($url);
+    $url = \Drupal::service('file_url_generator')->transformRelative($url);
     $this->assertSession()->responseContains('src="' . $url . '"');
   }
 
diff --git a/modules/ctools_entity_mask/tests/src/Functional/DisplayTest.php b/modules/ctools_entity_mask/tests/src/Functional/DisplayTest.php
index b65d66da..a03557ec 100644
--- a/modules/ctools_entity_mask/tests/src/Functional/DisplayTest.php
+++ b/modules/ctools_entity_mask/tests/src/Functional/DisplayTest.php
@@ -39,7 +39,7 @@ class DisplayTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $account = $this->drupalCreateUser(['administer blocks']);
@@ -109,10 +109,10 @@ class DisplayTest extends BrowserTestBase {
     $this->assertNotFalse(strpos($rendered, $block->field_link->uri));
 
     $image_url = $block->field_image->entity->getFileUri();
-    $image_url = file_create_url($image_url);
+    $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($image_url);
     // file_create_url() will include the host and port, but the rendered output
     // won't include those.
-    $image_url = file_url_transform_relative($image_url);
+    $image_url = \Drupal::service('file_url_generator')->transformRelative($image_url);
     // @todo Use assertStringContainsString() when we rely exclusively on
     // PHPUnit 8.
     $this->assertNotFalse(strpos($rendered, $image_url));
diff --git a/modules/ctools_entity_mask/tests/src/Kernel/EntityMaskTest.php b/modules/ctools_entity_mask/tests/src/Kernel/EntityMaskTest.php
index f4d14a39..1192ddc0 100644
--- a/modules/ctools_entity_mask/tests/src/Kernel/EntityMaskTest.php
+++ b/modules/ctools_entity_mask/tests/src/Kernel/EntityMaskTest.php
@@ -34,7 +34,7 @@ class EntityMaskTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['block_content', 'entity_mask_test']);
     $this->installEntitySchema('fake_block_content');
diff --git a/modules/ctools_views/tests/src/Functional/CToolsViewsBasicViewBlockTest.php b/modules/ctools_views/tests/src/Functional/CToolsViewsBasicViewBlockTest.php
index 23ba31cc..5fdc8285 100644
--- a/modules/ctools_views/tests/src/Functional/CToolsViewsBasicViewBlockTest.php
+++ b/modules/ctools_views/tests/src/Functional/CToolsViewsBasicViewBlockTest.php
@@ -45,7 +45,7 @@ class CToolsViewsBasicViewBlockTest extends UITestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp($import_test_views);
 
     ViewTestData::createTestViews(get_class($this), ['ctools_views_test_views']);
diff --git a/src/Event/BlockVariantEvent.php b/src/Event/BlockVariantEvent.php
index 35df32dd..16ad375f 100644
--- a/src/Event/BlockVariantEvent.php
+++ b/src/Event/BlockVariantEvent.php
@@ -6,7 +6,7 @@ use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\ctools\Plugin\BlockVariantInterface;
 use Symfony\Component\EventDispatcher\Event;
 
-class BlockVariantEvent extends Event {
+class BlockVariantEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The block being acted upon.
diff --git a/src/Event/WizardEvent.php b/src/Event/WizardEvent.php
index 9e28d0d8..33cb615b 100644
--- a/src/Event/WizardEvent.php
+++ b/src/Event/WizardEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * An event for altering form wizard values.
  */
-class WizardEvent extends Event {
+class WizardEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * @var \Drupal\ctools\Wizard\FormWizardInterface
diff --git a/src/Testing/EntityCreationTrait.php b/src/Testing/EntityCreationTrait.php
index 2f2927bd..f6b309fe 100644
--- a/src/Testing/EntityCreationTrait.php
+++ b/src/Testing/EntityCreationTrait.php
@@ -32,7 +32,7 @@ trait EntityCreationTrait {
     $status = $entity->save();
     \Drupal::service('router.builder')->rebuild();
 
-    if ($this instanceof \PHPUnit_Framework_TestCase) {
+    if ($this instanceof \PHPUnit\Framework\TestCase) {
       $this->assertSame(SAVED_NEW, $status, (new FormattableMarkup('Created entity %id of type %type.', ['%id' => $entity->id(), '%type' => $entity_type]))->__toString());
     }
     else {
diff --git a/src/Wizard/EntityFormWizardBase.php b/src/Wizard/EntityFormWizardBase.php
index 2f47cbe4..5a78c704 100644
--- a/src/Wizard/EntityFormWizardBase.php
+++ b/src/Wizard/EntityFormWizardBase.php
@@ -85,7 +85,7 @@ abstract class EntityFormWizardBase extends FormWizardBase implements EntityForm
       $values[$this->getEntityType()] = $entity;
     }
     $event = new WizardEvent($this, $values);
-    $this->dispatcher->dispatch(FormWizardInterface::LOAD_VALUES, $event);
+    $this->dispatcher->dispatch($event, FormWizardInterface::LOAD_VALUES);
     return $event->getValues();
   }
 
diff --git a/src/Wizard/FormWizardBase.php b/src/Wizard/FormWizardBase.php
index 496d2101..f62825b9 100644
--- a/src/Wizard/FormWizardBase.php
+++ b/src/Wizard/FormWizardBase.php
@@ -117,7 +117,7 @@ abstract class FormWizardBase extends FormBase implements FormWizardInterface {
   public function initValues() {
     $values = [];
     $event = new WizardEvent($this, $values);
-    $this->dispatcher->dispatch(FormWizardInterface::LOAD_VALUES, $event);
+    $this->dispatcher->dispatch($event, FormWizardInterface::LOAD_VALUES);
     return $event->getValues();
   }
 
diff --git a/tests/src/Kernel/BlockDisplayVariantTest.php b/tests/src/Kernel/BlockDisplayVariantTest.php
index e0f8aab9..74d487fa 100644
--- a/tests/src/Kernel/BlockDisplayVariantTest.php
+++ b/tests/src/Kernel/BlockDisplayVariantTest.php
@@ -15,6 +15,7 @@ use Symfony\Component\EventDispatcher\EventDispatcherInterface;
  */
 class BlockDisplayVariantTest extends KernelTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -38,11 +39,11 @@ class BlockDisplayVariantTest extends KernelTestBase {
     // Set up the expected calls to the event dispatcher.
     $event = Argument::type(BlockVariantEvent::class);
 
-    $event_dispatcher->dispatch(BlockVariantEvents::ADD_BLOCK, $event)
+    $event_dispatcher->dispatch($event, BlockVariantEvents::ADD_BLOCK)
       ->shouldBeCalled();
-    $event_dispatcher->dispatch(BlockVariantEvents::UPDATE_BLOCK, $event)
+    $event_dispatcher->dispatch($event, BlockVariantEvents::UPDATE_BLOCK)
       ->shouldBeCalled();
-    $event_dispatcher->dispatch(BlockVariantEvents::DELETE_BLOCK, $event)
+    $event_dispatcher->dispatch($event, BlockVariantEvents::DELETE_BLOCK)
       ->shouldBeCalled();
 
     $block_id = $variant->addBlock(['id' => 'system_powered_by_block']);
diff --git a/tests/src/Kernel/Plugin/Block/EntityViewTest.php b/tests/src/Kernel/Plugin/Block/EntityViewTest.php
index 9ef8d172..10263360 100644
--- a/tests/src/Kernel/Plugin/Block/EntityViewTest.php
+++ b/tests/src/Kernel/Plugin/Block/EntityViewTest.php
@@ -42,7 +42,7 @@ class EntityViewTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['filter']);
diff --git a/tests/src/Kernel/RelationshipsTestBase.php b/tests/src/Kernel/RelationshipsTestBase.php
index 97191d0f..6768a78a 100644
--- a/tests/src/Kernel/RelationshipsTestBase.php
+++ b/tests/src/Kernel/RelationshipsTestBase.php
@@ -37,7 +37,7 @@ abstract class RelationshipsTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', ['sequences']);
diff --git a/tests/src/Kernel/SerializableTempstoreTest.php b/tests/src/Kernel/SerializableTempstoreTest.php
index 00090c4f..f4904ad2 100644
--- a/tests/src/Kernel/SerializableTempstoreTest.php
+++ b/tests/src/Kernel/SerializableTempstoreTest.php
@@ -13,6 +13,7 @@ use Symfony\Component\HttpFoundation\Request;
  */
 class SerializableTempstoreTest extends KernelTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -21,7 +22,7 @@ class SerializableTempstoreTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('system', ['key_value_expire']);
   }
diff --git a/tests/src/Kernel/TypedDataResolverTest.php b/tests/src/Kernel/TypedDataResolverTest.php
index 0aabf1f4..03925226 100644
--- a/tests/src/Kernel/TypedDataResolverTest.php
+++ b/tests/src/Kernel/TypedDataResolverTest.php
@@ -32,7 +32,7 @@ class TypedDataResolverTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', 'sequences');
diff --git a/tests/src/Unit/BlockDisplayVariantTest.php b/tests/src/Unit/BlockDisplayVariantTest.php
index 86f2513e..272e6ac5 100644
--- a/tests/src/Unit/BlockDisplayVariantTest.php
+++ b/tests/src/Unit/BlockDisplayVariantTest.php
@@ -21,6 +21,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class BlockDisplayVariantTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Tests the submitConfigurationForm() method.
    *
diff --git a/tests/src/Unit/BlockPluginCollectionTest.php b/tests/src/Unit/BlockPluginCollectionTest.php
index 0dda7752..18852591 100644
--- a/tests/src/Unit/BlockPluginCollectionTest.php
+++ b/tests/src/Unit/BlockPluginCollectionTest.php
@@ -16,6 +16,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class BlockPluginCollectionTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Tests the getAllByRegion() method.
    *
diff --git a/tests/src/Unit/BlockVariantTraitTest.php b/tests/src/Unit/BlockVariantTraitTest.php
index 8a142f10..3511eb25 100644
--- a/tests/src/Unit/BlockVariantTraitTest.php
+++ b/tests/src/Unit/BlockVariantTraitTest.php
@@ -16,6 +16,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class BlockVariantTraitTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Tests the getRegionAssignments() method.
    *
diff --git a/tests/src/Unit/ContextMapperTest.php b/tests/src/Unit/ContextMapperTest.php
index bf413ed2..9559408d 100644
--- a/tests/src/Unit/ContextMapperTest.php
+++ b/tests/src/Unit/ContextMapperTest.php
@@ -21,6 +21,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class ContextMapperTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The typed data manager.
    *
@@ -41,7 +42,7 @@ class ContextMapperTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->typedDataManager = $this->prophesize(TypedDataManager::class);
diff --git a/tests/src/Unit/VariantCollectionTraitTest.php b/tests/src/Unit/VariantCollectionTraitTest.php
index f2876dea..88152870 100644
--- a/tests/src/Unit/VariantCollectionTraitTest.php
+++ b/tests/src/Unit/VariantCollectionTraitTest.php
@@ -19,15 +19,16 @@ use Drupal\Tests\UnitTestCase;
  */
 class VariantCollectionTraitTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
-   * @var \Drupal\Component\Plugin\PluginManagerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Component\Plugin\PluginManagerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $manager;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $container = new ContainerBuilder();
     $this->manager = $this->prophesize(PluginManagerInterface::class);
