modules/contrib/juicey/juicebox/juicebox.api.php
modules/contrib/juicey/juicebox/juicebox.install
modules/contrib/juicey/juicebox/juicebox.module
modules/contrib/juicey/juicebox/src/Controller/JuiceboxXmlControllerBase.php
modules/contrib/juicey/juicebox/src/Controller/JuiceboxXmlControllerField.php
modules/contrib/juicey/juicebox/src/Controller/JuiceboxXmlControllerViewsStyle.php
modules/contrib/juicey/juicebox/src/Form/SettingsForm.php
modules/contrib/juicey/juicebox/src/JuiceboxFormatter.php
modules/contrib/juicey/juicebox/src/JuiceboxFormatterInterface.php
modules/contrib/juicey/juicebox/src/JuiceboxGallery.php
modules/contrib/juicey/juicebox/src/JuiceboxGalleryInterface.php
modules/contrib/juicey/juicebox/src/Plugin/Derivative/JuiceboxConfFieldContextualLinks.php
modules/contrib/juicey/juicebox/src/Plugin/Field/FieldFormatter/JuiceboxFieldFormatter.php
modules/contrib/juicey/juicebox/src/Plugin/views/style/JuiceboxDisplayStyle.php
modules/contrib/juicey/juicebox/templates/juicebox.theme.inc
modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxCaseTestBase.php
modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxConfCase.php
modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxConfGlobalCase.php
modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxFieldFormatterCase.php
modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxFileCase.php
modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxSubRequestCase.php
modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxViewsCase.php

4 files with changes
====================

1) modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxViewsCase.php:103

    ---------- begin diff ----------
@@ @@
     $this->drupalGet('juicebox-views-test-advanced');
     $this->assertSession()->responseContains(trim(json_encode(['configUrl' => $xml_url]), '{}"'));
     $this->assertSession()->responseContains('juicebox-views-test--page-2');
-    $this->assertSession()->responseContains(Html::escape(file_url_transform_relative($test_image_url)));
+    $this->assertSession()->responseContains(Html::escape(\Drupal::service('file_url_generator')->transformRelative($test_image_url)));
     // Check for correct XML.
     $this->drupalGet($xml_path);
     $this->assertSession()->responseContains('<?xml version="1.0" encoding="UTF-8"?>');
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxFieldFormatterCase.php:88

    ---------- begin diff ----------
@@ @@
     $this->assertSession('Your settings have been saved. Gallery configuration changes saved.');
     // Get the urls to the image and thumb derivatives expected.
     $uri = File::load($node->{$this->instFieldName}[0]->target_id)->getFileUri();
-    $test_formatted_image_url = file_create_url($uri);
+    $test_formatted_image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
     $test_formatted_thumb_url = \Drupal::entityTypeManager()->getStorage('image_style')->load('thumbnail')->buildUrl($uri);
     // Check for correct embed markup as anon user.
     $this->drupalLogout();
     $this->drupalGet('node/' . $node->id());
-    $this->assertSession(Html::escape(file_url_transform_relative($test_formatted_image_url)) . ' Test styled image found in embed code');
+    $this->assertSession(Html::escape(\Drupal::service('file_url_generator')->transformRelative($test_formatted_image_url)) . ' Test styled image found in embed code');
     // Check for correct XML.
     $this->drupalGet('juicebox/xml/field/node/' . $node->id() . '/' . $this->instFieldName . '/full');
     $this->assertSession()->responseContains('imageURL="' . Html::escape($test_formatted_image_url));
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/juicey/juicebox/tests/src/Functional/JuiceboxConfCase.php:150

    ---------- begin diff ----------
@@ @@
       // Get the urls to the main image with and without "large" styling.
       $node = $this->node;
       $uri = File::load($node->{$this->instFieldName}[0]->target_id)->getFileUri();
-      $test_image_url = file_create_url($uri);
+      $test_image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
       $test_image_url_formatted = \Drupal::entityTypeManager()->getStorage('image_style')->load('juicebox_medium')->buildUrl($uri);
       // Check control case without custom configuration.
       $this->drupalGet('juicebox/xml/field/node/' . $node->id() . '/' . $this->instFieldName . '/full');
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/juicey/juicebox/src/JuiceboxFormatter.php:362

    ---------- begin diff ----------
@@ @@
     $image_data = [];
     $image_data['juicebox_compatible'] = TRUE;
     // Set the normal, unstyled, url for reference.
-    $image_data['unstyled_src'] = file_create_url($file->getFileUri());
+    $image_data['unstyled_src'] = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     // Check compatibility if configured and if the library info contains
     // mimetype compatibility information.
     if ($check_compatible && !empty($library['compatible_mimetypes']) && !in_array($mimetype, $library['compatible_mimetypes'])) {
       // If the item is not compatible, find the substitute mimetype icon.
       $image_data['juicebox_compatible'] = FALSE;
-      $icon_dir = drupal_get_path('module', 'juicebox') . '/images/mimetypes';
+      $icon_dir = \Drupal::service('extension.list.module')->getPath('juicebox') . '/images/mimetypes';
       // We only have icons for each major type, so simplify accordingly.
       // file_icon_class() could also be useful here but would require
       // supporting icons for more package types.
@@ @@
       $type_parts = explode('/', $mimetype);
       $icon_path = $icon_dir . '/' . reset($type_parts) . '.png';
       if (file_exists($icon_path)) {
-        $image_data['imageURL'] = file_create_url($icon_path);
+        $image_data['imageURL'] = \Drupal::service('file_url_generator')->generateAbsoluteString($icon_path);
       }
       else {
-        $image_data['imageURL'] = file_create_url($icon_dir . '/general.png');
+        $image_data['imageURL'] = \Drupal::service('file_url_generator')->generateAbsoluteString($icon_dir . '/general.png');
       }
     }
     // If the item is compatible, style it.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 4 files have been changed by Rector                                       

