diff --git a/js_component.info.yml b/js_component.info.yml
index 7a6f1b6..ce9667f 100644
--- a/js_component.info.yml
+++ b/js_component.info.yml
@@ -1,5 +1,5 @@
 type: module
 name: JS Component
 description: Define JS components as custom blocks from a theme or module.
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Other
diff --git a/src/Event/BuildComponentDataEvent.php b/src/Event/BuildComponentDataEvent.php
index 4c0b5e6..f28fbeb 100644
--- a/src/Event/BuildComponentDataEvent.php
+++ b/src/Event/BuildComponentDataEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Build component data event object.
  */
-class BuildComponentDataEvent extends Event {
+class BuildComponentDataEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * @var \Drupal\js_component\Plugin\JSComponent
diff --git a/src/Plugin/Block/JSComponentBlockType.php b/src/Plugin/Block/JSComponentBlockType.php
index 8dbd3f5..c03b80f 100644
--- a/src/Plugin/Block/JSComponentBlockType.php
+++ b/src/Plugin/Block/JSComponentBlockType.php
@@ -611,8 +611,8 @@ class JSComponentBlockType extends BlockBase implements ContainerFactoryPluginIn
     );
 
     return ($this->eventDispatcher->dispatch(
-      Events::BUILD_COMPONENT_DATA,
-      $component_data_event
+      $component_data_event,
+      Events::BUILD_COMPONENT_DATA
     ))->build();
   }
 
diff --git a/src/Plugin/JSComponent.php b/src/Plugin/JSComponent.php
index 5bc803e..2bd5338 100644
--- a/src/Plugin/JSComponent.php
+++ b/src/Plugin/JSComponent.php
@@ -316,7 +316,9 @@ class JSComponent extends PluginBase implements JSComponentInterface, ContainerF
    * @throws \Exception
    */
   public function getProviderPath() {
-    return drupal_get_path($this->getProviderType(), $this->provider());
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    return \Drupal::service('extension.path.resolver')->getPath($this->getProviderType(), $this->provider());
   }
 
   /**
