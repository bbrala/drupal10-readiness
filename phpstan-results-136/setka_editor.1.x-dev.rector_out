modules/contrib/setka_editor-setka_editor/modules/setka_editor_amp/setka_editor_amp.install
modules/contrib/setka_editor-setka_editor/modules/setka_editor_amp/setka_editor_amp.module
modules/contrib/setka_editor-setka_editor/modules/setka_editor_amp/src/Asset/SetkaEditorAmpCssCollectionRenderer.php
modules/contrib/setka_editor-setka_editor/modules/setka_editor_amp/src/Controller/SetkaEditorAMPApiController.php
modules/contrib/setka_editor-setka_editor/modules/setka_editor_amp/src/Plugin/Field/FieldFormatter/SetkaEditorAMPFormatter.php
modules/contrib/setka_editor-setka_editor/modules/setka_editor_amp/src/Routing/SetkaEditorAMPRouteSubscriber.php
modules/contrib/setka_editor-setka_editor/modules/setka_editor_amp/src/SetkaAmpSanitizer.php
modules/contrib/setka_editor-setka_editor/setka_editor.install
modules/contrib/setka_editor-setka_editor/setka_editor.module
modules/contrib/setka_editor-setka_editor/src/Controller/SetkaEditorApiController.php
modules/contrib/setka_editor-setka_editor/src/Element/SetkaEditorFormat.php
modules/contrib/setka_editor-setka_editor/src/Form/SettingsForm.php
modules/contrib/setka_editor-setka_editor/src/Plugin/Field/FieldFormatter/SetkaEditorFormatter.php
modules/contrib/setka_editor-setka_editor/src/Plugin/Field/FieldWidget/SetkaEditorStringTextareaWidget.php
modules/contrib/setka_editor-setka_editor/src/Plugin/Field/FieldWidget/SetkaEditorWidget.php
modules/contrib/setka_editor-setka_editor/src/Plugin/Field/FieldWidget/SetkaEditorWithSummaryWidget.php
modules/contrib/setka_editor-setka_editor/src/ProxyClass/SetkaEditorUninstallValidator.php
modules/contrib/setka_editor-setka_editor/src/SetkaEditorApi.php
modules/contrib/setka_editor-setka_editor/src/SetkaEditorHelper.php
modules/contrib/setka_editor-setka_editor/src/SetkaEditorUninstallValidator.php
modules/contrib/setka_editor-setka_editor/src/Validate/SetkaEditorValidate.php
modules/contrib/setka_editor-setka_editor/tests/src/Kernel/SetkaEditorApiTest.php

5 files with changes
====================

1) modules/contrib/setka_editor-setka_editor/tests/src/Kernel/SetkaEditorApiTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->testStyleManagerResponse = [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/setka_editor-setka_editor/src/SetkaEditorHelper.php:182

    ---------- begin diff ----------
@@ @@
         $filename = $matches[1];
       }
       if ($filename) {
-        $file = file_save_data($fileData, 'public://setka/' . $filename, FileSystemInterface::EXISTS_REPLACE);
-        return $file ? file_create_url($file->getFileUri()) : FALSE;
+        $file = \Drupal::service('file.repository')->writeData($fileData, 'public://setka/' . $filename, FileSystemInterface::EXISTS_REPLACE);
+        return $file ? \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) : FALSE;
       }
     }
     return FALSE;
@@ @@
       $directoryPath = str_replace('/' . $filename, '', $directoryPath);
       $directoryPath = "public://setka/{$directoryPath}";
       \Drupal::service('file_system')->prepareDirectory($directoryPath, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
-      $file = file_save_data($fileData, "{$directoryPath}/{$filename}", FileSystemInterface::EXISTS_REPLACE);
+      $file = \Drupal::service('file.repository')->writeData($fileData, "{$directoryPath}/{$filename}", FileSystemInterface::EXISTS_REPLACE);

-      return $file ? file_create_url($file->getFileUri()) : FALSE;
+      return $file ? \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) : FALSE;
     }

     return FALSE;
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/setka_editor-setka_editor/src/Controller/SetkaEditorApiController.php:396

    ---------- begin diff ----------
@@ @@
         }
         else {
           $fileData = file_get_contents($_FILES['file']['tmp_name']);
-          $file = file_save_data($fileData, 'public://setka/' . $_FILES['file']['name']);
+          $file = \Drupal::service('file.repository')->writeData($fileData, 'public://setka/' . $_FILES['file']['name']);

           if ($entityId && $entityType && $entityId !== 'null') {
             $this->fileUsage->add($file, 'setka_editor', $entityType, $entityId);
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/setka_editor-setka_editor/setka_editor.module:326

    ---------- begin diff ----------
@@ @@
   if ($image instanceof Drupal\Core\Image\Image) {
     // Original image size.
     $original = [
-      'url' => file_create_url($imageItem->uri),
+      'url' => \Drupal::service('file_url_generator')->generateAbsoluteString($imageItem->uri),
       'width' => $image->getWidth(),
       'height' => $image->getHeight(),
     ];
@@ @@
         $sizes[] = $size;
       }
     }
-    $imageUrl = file_create_url($imageItem->uri);
+    $imageUrl = \Drupal::service('file_url_generator')->generateAbsoluteString($imageItem->uri);
     $entityImage = [
       'id' => $imageItem->fid,
       'name' => $imageItem->filename,
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


5) modules/contrib/setka_editor-setka_editor/modules/setka_editor_amp/setka_editor_amp.module:231

    ---------- begin diff ----------
@@ @@
   if ($fileData) {
     preg_match('/.*?\/([^\/]+)$/', $fileUrl, $matches);
     if ($matches[1]) {
-      $file = file_save_data($fileData, 'public://setka/' . $matches[1], FileSystemInterface::EXISTS_REPLACE);
-      return $file ? file_create_url($file->getFileUri()) : FALSE;
+      $file = \Drupal::service('file.repository')->writeData($fileData, 'public://setka/' . $matches[1], FileSystemInterface::EXISTS_REPLACE);
+      return $file ? \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) : FALSE;
     }
   }
   return FALSE;
@@ @@
       ];

       if (!empty($cachedAmpStyles[$libraryId])) {
-        $cachedAmpStyle = file_url_transform_relative($cachedAmpStyles[$libraryId]);
+        $cachedAmpStyle = \Drupal::service('file_url_generator')->transformRelative($cachedAmpStyles[$libraryId]);
         $libraries[$libraryId]['css'] = [
           'theme' => [
             $cachedAmpStyle => [
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/setka_editor-setka_editor/modules/setka_editor_amp/src/A
         sset/SetkaEditorAmpCssCollectionRenderer.php" file, due to:            
         "Analyze error: "Class Drupal\amp\Asset\AmpCssCollectionRenderer not   
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

