diff --git a/blocache.info.yml b/blocache.info.yml
index 9c69727..d98b228 100644
--- a/blocache.info.yml
+++ b/blocache.info.yml
@@ -1,8 +1,7 @@
 name: Blocache
 type: module
 description: 'Allows users to individually configure the cache of each block.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 php: 7.1
 dependencies:
   - drupal:block
\ No newline at end of file
diff --git a/tests/src/Functional/BlocacheBrowserTest.php b/tests/src/Functional/BlocacheBrowserTest.php
index ed48b3a..af71f7e 100644
--- a/tests/src/Functional/BlocacheBrowserTest.php
+++ b/tests/src/Functional/BlocacheBrowserTest.php
@@ -19,7 +19,9 @@ class BlocacheBrowserTest extends BlocacheBrowserTestBase {
     $block_name = 'system_powered_by_block';
     $default_theme = $this->config('system.theme')->get('default');
     $this->drupalGet('admin/structure/block/add/' . $block_name . '/' . $default_theme);
-    $this->assertField('edit-blocache-overridden');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Change assertion to buttonExists() if checking for a button.
+    $this->assertSession()->fieldExists('edit-blocache-overridden');
   }
 
   /**
@@ -43,17 +45,20 @@ class BlocacheBrowserTest extends BlocacheBrowserTestBase {
       'blocache[tabs][contexts][value][languages]' => 1,
       'blocache[tabs][contexts][value][languages__arg]' => LanguageInterface::TYPE_URL,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save block'));
+    $this->submitForm($edit, t('Save block'));
 
     // Access the block form again and check if the values have been saved.
-    $this->assertText('The block configuration has been saved.', 'Block was saved');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The block configuration has been saved.');
     $this->clickLink('Configure');
-    $this->assertFieldChecked('edit-blocache-overridden');
-    $this->assertFieldByName('blocache[tabs][max-age][value]', 600);
-    $this->assertFieldByName('blocache[tabs][contexts][value][user.roles]', 1);
-    $this->assertFieldByName('blocache[tabs][contexts][value][user.roles__arg]', 'administrator');
-    $this->assertFieldByName('blocache[tabs][contexts][value][languages]', 1);
-    $this->assertFieldByName('blocache[tabs][contexts][value][languages__arg]', LanguageInterface::TYPE_URL);
+    $this->assertSession()->checkboxChecked('edit-blocache-overridden');
+    $this->assertSession()->fieldValueEquals('blocache[tabs][max-age][value]', 600);
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][user.roles]', 1);
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][user.roles__arg]', 'administrator');
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][languages]', 1);
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][languages__arg]', LanguageInterface::TYPE_URL);
   }
 
 }
diff --git a/tests/src/Functional/BlocacheBrowserTestBase.php b/tests/src/Functional/BlocacheBrowserTestBase.php
index e9ef40a..f488805 100644
--- a/tests/src/Functional/BlocacheBrowserTestBase.php
+++ b/tests/src/Functional/BlocacheBrowserTestBase.php
@@ -40,7 +40,7 @@ abstract class BlocacheBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Use the test page as the front page.
diff --git a/tests/src/Unit/BlocacheMetadataUnitTest.php b/tests/src/Unit/BlocacheMetadataUnitTest.php
index 7d52d87..a63814a 100644
--- a/tests/src/Unit/BlocacheMetadataUnitTest.php
+++ b/tests/src/Unit/BlocacheMetadataUnitTest.php
@@ -40,20 +40,16 @@ class BlocacheMetadataUnitTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->blocacheMetadata = new BlocacheMetadata();
 
-    $plugin = $this->getMockBuilder('Drupal\Core\Block\BlockBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $plugin = $this->createMock('Drupal\Core\Block\BlockBase');
     $plugin->expects($this->any())
       ->method('getMachineNameSuggestion')
       ->will($this->returnValue($this->randomMachineName(8)));
 
-    $block = $this->getMockBuilder('Drupal\block\Entity\Block')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $block = $this->createMock('Drupal\block\Entity\Block');
     $block->expects($this->any())
       ->method('getPlugin')
       ->will($this->returnValue($plugin));
@@ -110,7 +106,7 @@ class BlocacheMetadataUnitTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     unset($this->blocacheMetadata);
     unset($this->block);
   }
