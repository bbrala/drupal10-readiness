modules/contrib/file_download_link/modules/file_downoad_link_media/src/Plugin/Field/FieldFormatter/FileDownloadLinkMedia.php
modules/contrib/file_download_link/src/Plugin/Field/FieldFormatter/FileDownloadLink.php
modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkMediaApplicableTest.php
modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkMediaTest.php
modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkMediaTestTrait.php
modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkMediaTokenTest.php
modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkTest.php
modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkTestTrait.php
modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkTokenTest.php

7 files with changes
====================

1) modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkTokenTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['system', 'field']);
     $this->installSchema('file', ['file_usage']);
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'The extension is txt',
-      '#url' => Url::fromUri(file_create_url('public://file.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'The image width is 88',
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'The extension is png',
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'Testing tokens in title',
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'Testing tokens in classes',
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_delta_0 = [
       '#type' => 'link',
       '#title' => 'This alt text is for the first image.',
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_delta_1 = [
       '#type' => 'link',
       '#title' => "When delta is 1 we should see this alt text. Let's add special chars & test them!",
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'file.txt',
-      '#url' => Url::fromUri(file_create_url('public://file.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'Download this, 99',
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'Download',
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkTestTrait.php:57

    ---------- begin diff ----------
@@ @@
     ]);
     $instance->save();

-    $image_path = drupal_get_path('theme', 'stable') . '/images/core/druplicon.png';
+    $image_path = \Drupal::service('extension.list.theme')->getPath('stable') . '/images/core/druplicon.png';
     file_put_contents('public://file.png', file_get_contents($image_path));
     $file_image = File::create([
       'uri' => 'public://file.png',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['system', 'field']);
     $this->installSchema('file', ['file_usage']);
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'Download',
-      '#url' => Url::fromUri(file_create_url('public://file.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'file.txt',
-      '#url' => Url::fromUri(file_create_url('public://file.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'Download',
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'file.png',
-      '#url' => Url::fromUri(file_create_url('public://file.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.png'),
       '#options' => [
         'attributes' => [
           'class' => [
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkMediaTokenTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['system', 'field']);
     $this->installSchema('file', ['file_usage']);
@@ @@
     $expected_deep_render = [
       '#type' => 'link',
       '#title' => 'Test Media (txt)',
-      '#url' => Url::fromUri(file_create_url('public://file.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_deep_render = [
       '#type' => 'link',
       '#title' => 'Download Media Now!',
-      '#url' => Url::fromUri(file_create_url('public://file.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_deep_render = [
       '#type' => 'link',
       '#title' => 'Download Media Now!',
-      '#url' => Url::fromUri(file_create_url('public://file.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkMediaTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['system', 'field']);
     $this->installSchema('file', ['file_usage']);
@@ @@
     $expected_deep_render = [
       '#type' => 'link',
       '#title' => 'Download',
-      '#url' => Url::fromUri(file_create_url('public://file.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
@@ @@
     $expected_deep_render = [
       '#type' => 'link',
       '#title' => 'file.txt',
-      '#url' => Url::fromUri(file_create_url('public://file.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://file.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/file_download_link/tests/src/Kernel/FileDownloadLinkMediaApplicableTest.php:47

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['system', 'field']);
     $this->installSchema('user', ['users_data']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/file_download_link/src/Plugin/Field/FieldFormatter/FileDownloadLink.php:265

    ---------- begin diff ----------
@@ @@
       $elements[$delta] = [
         '#type' => 'link',
         '#title' => $this->getSetting('link_text'),
-        '#url' => Url::fromUri(file_create_url($file->getFileUri())),
+        '#url' => \Drupal::service('file_url_generator')->generate($file->getFileUri()),
         '#options' => $options,
         '#cache' => [
           'tags' => $file->getCacheTags(),
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

