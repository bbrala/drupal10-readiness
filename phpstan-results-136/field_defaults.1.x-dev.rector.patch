diff --git a/field_defaults.info.yml b/field_defaults.info.yml
index e22083e..52b30f0 100644
--- a/field_defaults.info.yml
+++ b/field_defaults.info.yml
@@ -1,8 +1,7 @@
 name: Field Defaults
 description: Adds and overwrites default field values on existing content.
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: field_defaults.field_defaults_settings_form
 dependencies:
   - drupal:field_ui
diff --git a/src/Commands/FieldDefaultsBulkCommands.php b/src/Commands/FieldDefaultsBulkCommands.php
index e58b403..88d8a73 100644
--- a/src/Commands/FieldDefaultsBulkCommands.php
+++ b/src/Commands/FieldDefaultsBulkCommands.php
@@ -164,7 +164,7 @@ class FieldDefaultsBulkCommands extends DrushCommands {
       'title' => dt('Processing default values'),
       'operations' => $operations,
       'finished' => 'field_defaults_batch_finished',
-      'file' => drupal_get_path('module', 'field_defaults') . '/field_defaults.module',
+      'file' => \Drupal::service('extension.list.module')->getPath('field_defaults') . '/field_defaults.module',
     ];
 
     batch_set($batch);
diff --git a/src/Tests/BooleanTest.php b/src/Tests/BooleanTest.php
index c6797e0..3c567a8 100644
--- a/src/Tests/BooleanTest.php
+++ b/src/Tests/BooleanTest.php
@@ -18,7 +18,7 @@ class BooleanTest extends FieldDefaultsTestBase {
 
     // Ensure value is checked on any random node.
     $this->drupalGet('node/' . rand(1, 20) . '/edit');
-    $this->assertFieldChecked('edit-field-' . $fieldName . '-value');
+    $this->assertSession()->checkboxChecked('edit-field-' . $fieldName . '-value');
   }
 
 }
diff --git a/src/Tests/FieldDefaultsTestBase.php b/src/Tests/FieldDefaultsTestBase.php
index cdba8c0..05c1e27 100644
--- a/src/Tests/FieldDefaultsTestBase.php
+++ b/src/Tests/FieldDefaultsTestBase.php
@@ -35,7 +35,7 @@ class FieldDefaultsTestBase extends BrowserTestBase {
    *
    * Once installed, a content type with the desired field is created.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Install Drupal.
     parent::setUp();
 
@@ -96,7 +96,7 @@ class FieldDefaultsTestBase extends BrowserTestBase {
       'field_name' => $field_name,
       'label' => $field_name,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save and continue'));
+    $this->submitForm($edit, t('Save and continue'));
 
     // Fill out the $cardinality form as if we're not using an unlimited values.
     $edit = [
@@ -112,12 +112,18 @@ class FieldDefaultsTestBase extends BrowserTestBase {
     }
 
     // And now we save the cardinality settings.
-    $this->drupalPostForm(NULL, $edit, t('Save field settings'));
-    $this->assertText(t('Updated field @name field settings.', ['@name' => $field_name]));
+    $this->submitForm($edit, t('Save field settings'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('Updated field @name field settings.', ['@name' => $field_name]));
 
     // Save.
-    $this->drupalPostForm(NULL, [], t('Save settings'));
-    $this->assertText(t('Saved @name configuration.', ['@name' => $field_name]));
+    $this->submitForm([], t('Save settings'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('Saved @name configuration.', ['@name' => $field_name]));
 
     return $field_name;
   }
@@ -140,11 +146,11 @@ class FieldDefaultsTestBase extends BrowserTestBase {
     ];
 
     // Run batch.
-    $this->drupalPostForm(NULL, $edit, t('Save settings'));
-    $this->assertNoRaw('&amp;nbsp;', 'Initial progress message is not double escaped.');
+    $this->submitForm($edit, t('Save settings'));
+    $this->assertSession()->responseNotContains('&amp;nbsp;');
     // Now also go to the next step.
     $this->maximumMetaRefreshCount = 1;
-    $this->assertRaw('<li class="messages__item">Default values were updated for 20 entities.</li>');
+    $this->assertSession()->responseContains('<li class="messages__item">Default values were updated for 20 entities.</li>');
   }
 
   /**
diff --git a/src/Tests/StringTest.php b/src/Tests/StringTest.php
index 401ba45..8119985 100644
--- a/src/Tests/StringTest.php
+++ b/src/Tests/StringTest.php
@@ -20,7 +20,7 @@ class StringTest extends FieldDefaultsTestBase {
     $this->drupalGet('node/' . rand(1, 20) . '/edit');
 
     $field_setup = $this->setupFieldByType('string');
-    $this->assertFieldByName('field_' . $fieldName . $field_setup['structure'], $field_setup['value']);
+    $this->assertSession()->fieldValueEquals('field_' . $fieldName . $field_setup['structure'], $field_setup['value']);
   }
 
 }
