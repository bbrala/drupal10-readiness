modules/contrib/oml/outgoing_mail_logger.install
modules/contrib/oml/outgoing_mail_logger.module
modules/contrib/oml/src/Breadcrumb/BreadcrumbBuilder.php
modules/contrib/oml/src/Commands/OutgoingMailLoggerCommands.php
modules/contrib/oml/src/Controller/OutgoingMailLoggerController.php
modules/contrib/oml/src/Event/LogCreatedEvent.php
modules/contrib/oml/src/Event/LogUpdatedEvent.php
modules/contrib/oml/src/Event/MailSentEvent.php
modules/contrib/oml/src/Event/OutgoingMailLoggerEvents.php
modules/contrib/oml/src/EventSubscriber/OutgoingMailLoggerSubscriber.php
modules/contrib/oml/src/Form/FIlterForm.php
modules/contrib/oml/src/Form/ResendForm.php
modules/contrib/oml/src/Form/SettingsForm.php
modules/contrib/oml/src/Model/OutgoingMailLog.php
modules/contrib/oml/src/OmlSwiftmailEventListener.php
modules/contrib/oml/src/OutgoingMailLogger.php
modules/contrib/oml/tests/src/Functional/OutgoingMailLoggerTest.php

5 files with changes
====================

1) modules/contrib/oml/tests/src/Functional/OutgoingMailLoggerTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 //    $config_map = [
 //      'outgoing_mail_logger.settings' => [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/oml/src/OutgoingMailLogger.php:324

    ---------- begin diff ----------
@@ @@
           ->fields($data)
           ->execute();
         $log->setId($result);
-        $this->event_dispatcher->dispatch(OutgoingMailLoggerEvents::OML_EVENT_LOG_CREATED, new LogCreatedEvent($log));
+        $this->event_dispatcher->dispatch(new LogCreatedEvent($log), OutgoingMailLoggerEvents::OML_EVENT_LOG_CREATED);
       }
       else {
         unset($data['id']);
@@ @@
           ->condition('id', $log->getId())
           ->fields($data)
           ->execute();
-        $this->event_dispatcher->dispatch(OutgoingMailLoggerEvents::OML_EVENT_LOG_UPDATED, new LogUpdatedEvent($log));
+        $this->event_dispatcher->dispatch(new LogUpdatedEvent($log), OutgoingMailLoggerEvents::OML_EVENT_LOG_UPDATED);
       }

     } catch (\Exception $e) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


3) modules/contrib/oml/src/Event/MailSentEvent.php:10

    ---------- begin diff ----------
@@ @@
  *
  * @package Drupal\outgoing_mail_logger\Event
  */
-class MailSentEvent extends Event {
+class MailSentEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Mail message array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/oml/src/Event/LogUpdatedEvent.php:11

    ---------- begin diff ----------
@@ @@
  *
  * @package Drupal\outgoing_mail_logger\Event
  */
-class LogUpdatedEvent extends Event {
+class LogUpdatedEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Log instance
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/oml/src/Event/LogCreatedEvent.php:11

    ---------- begin diff ----------
@@ @@
  *
  * @package Drupal\outgoing_mail_logger\Event
  */
-class LogCreatedEvent extends Event {
+class LogCreatedEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Log instance
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process "modules/contrib/oml/src/OmlSwiftmailEventListener.php"
         file, due to:                                                          
         "Analyze error: "Class Swift_Events_SendListener not found.". Include  
         your files in "$rectorConfig->autoloadPaths([...]);" or                
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process "modules/contrib/oml/outgoing_mail_logger.module" file,
         due to:                                                                
         "Analyze error: "Class Swift_Events_SendListener not found.". Include  
         your files in "$rectorConfig->autoloadPaths([...]);" or                
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

