diff --git a/src/Event/StepChangeEvent.php b/src/Event/StepChangeEvent.php
index 46433b0..d1f44e3 100644
--- a/src/Event/StepChangeEvent.php
+++ b/src/Event/StepChangeEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event that is fired when before we switch from one step to another.
  */
-class StepChangeEvent extends Event {
+class StepChangeEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const STEP_CHANGE_EVENT = 'forms_steps.step_change_event';
 
diff --git a/src/Form/FormsStepsEditForm.php b/src/Form/FormsStepsEditForm.php
index b6d93d3..b43a600 100644
--- a/src/Form/FormsStepsEditForm.php
+++ b/src/Form/FormsStepsEditForm.php
@@ -255,11 +255,15 @@ class FormsStepsEditForm extends EntityForm {
         }
 
         // Defines link.
-        if (empty($progress_step->link())) {
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+        if (empty($progress_step->toLink()->toString())) {
           $link = $this->t('No link defined');
         }
         else {
-          $step_id = $progress_step->link();
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $step_id = $progress_step->toLink()->toString();
           $link = $forms_steps->getStep($step_id)->label();
         }
 
diff --git a/src/Form/FormsStepsProgressStepEditForm.php b/src/Form/FormsStepsProgressStepEditForm.php
index ad41d07..eff1ccf 100644
--- a/src/Form/FormsStepsProgressStepEditForm.php
+++ b/src/Form/FormsStepsProgressStepEditForm.php
@@ -90,13 +90,15 @@ class FormsStepsProgressStepEditForm extends EntityForm {
         '#default_value' => $progress_step->activeRoutes(),
       ];
 
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
       $form['link'] = [
         '#type' => 'select',
         '#title' => $this->t('Link'),
         '#description' => $this->t('Select the step for which the current progress step should redirect on click. Leave empty for no link on this progress step.'),
         '#empty_option' => $this->t('- None -'),
         '#options' => $options,
-        '#default_value' => $progress_step->link(),
+        '#default_value' => $progress_step->toLink()->toString(),
       ];
 
       $form['link_visibility'] = [
diff --git a/src/Plugin/Block/FormsStepsProgressBarBlock.php b/src/Plugin/Block/FormsStepsProgressBarBlock.php
index 3c13537..901c5af 100644
--- a/src/Plugin/Block/FormsStepsProgressBarBlock.php
+++ b/src/Plugin/Block/FormsStepsProgressBarBlock.php
@@ -143,7 +143,9 @@ class FormsStepsProgressBarBlock extends BlockBase implements ContainerFactoryPl
                 $saved_steps_flat[$saved_step_next->id()] = $saved_step_next->id();
               }
             }
-            $link_visibility_check = !in_array($progress_step->link(), $saved_steps_flat);
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+            $link_visibility_check = !in_array($progress_step->toLink()->toString(), $saved_steps_flat);
           }
           else {
             $link_visibility_check = !in_array($step->id(), $link_visibility);
@@ -152,11 +154,15 @@ class FormsStepsProgressBarBlock extends BlockBase implements ContainerFactoryPl
           // Display a simple label or the link.
           // @todo: Manage the specific case of "No workflow instance id" for the first step to avoid having no links at all on this step.
           //          if (empty($progress_step->link()) || $link_visibility_check || empty($instanceId)) {
-          if (empty($progress_step->link()) || $link_visibility_check || empty($instanceId)) {
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          if (empty($progress_step->toLink()->toString()) || $link_visibility_check || empty($instanceId)) {
             $item['#markup'] = $this->t($progress_step->label());
           }
           else {
-            $link_step = $forms_steps->getStep($progress_step->link());
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // Please confirm that `$progress_step` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+            $link_step = $forms_steps->getStep($progress_step->toLink()->toString());
             $options = [];
             if ($instanceId) {
               $options['instance_id'] = $instanceId;
diff --git a/tests/src/Functional/FormsStepsNavigationTest.php b/tests/src/Functional/FormsStepsNavigationTest.php
index eb39f10..dc9875c 100644
--- a/tests/src/Functional/FormsStepsNavigationTest.php
+++ b/tests/src/Functional/FormsStepsNavigationTest.php
@@ -35,7 +35,7 @@ class FormsStepsNavigationTest extends BrowserTestBase {
   /**
    * Setup the env for current test using trait methods.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->formsStepsSetup();
@@ -60,7 +60,7 @@ class FormsStepsNavigationTest extends BrowserTestBase {
       ->pageTextContains($this->data['forms_steps']['steps'][1]['label']);
 
     $value = 'This is an article Test Titre content';
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => $value,
     ], t('Save'));
 
@@ -71,7 +71,7 @@ class FormsStepsNavigationTest extends BrowserTestBase {
     $this->assertSession()->pageTextContains($value);
 
     $value2 = 'This is an article Test Titre content 2';
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => $value2,
     ], t('Save'));
 
@@ -81,7 +81,7 @@ class FormsStepsNavigationTest extends BrowserTestBase {
     $this->assertStringContainsStringIgnoringCase($this->data['forms_steps']['steps'][3]['url'], $this->getUrl());
 
     $value3 = 'This is a page Test Titre content';
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => $value3,
     ], t('Save'));
 
@@ -94,19 +94,19 @@ class FormsStepsNavigationTest extends BrowserTestBase {
     $this->assertSession()->fieldValueEquals('title[0][value]', $value2);
 
     // Access step 3.
-    $this->drupalPostForm(NULL, [], 'Previous');
+    $this->submitForm([], 'Previous');
     $this->assertSession()
       ->pageTextContains($this->data['forms_steps']['steps'][3]['label']);
     $this->assertSession()->fieldValueEquals('title[0][value]', $value3);
 
     // Access step 2.
-    $this->drupalPostForm(NULL, [], 'Previous');
+    $this->submitForm([], 'Previous');
     $this->assertSession()
       ->pageTextContains($this->data['forms_steps']['steps'][2]['label']);
     $this->assertSession()->fieldValueEquals('title[0][value]', $value2);
 
     // Access step 1.
-    $this->drupalPostForm(NULL, [], 'Previous');
+    $this->submitForm([], 'Previous');
     $this->assertSession()
       ->pageTextContains($this->data['forms_steps']['steps'][1]['label']);
     $this->assertSession()->fieldValueEquals('title[0][value]', $value2);
diff --git a/tests/src/Functional/FormsStepsTest.php b/tests/src/Functional/FormsStepsTest.php
index 2d142af..8c22d38 100644
--- a/tests/src/Functional/FormsStepsTest.php
+++ b/tests/src/Functional/FormsStepsTest.php
@@ -34,7 +34,7 @@ class FormsStepsTest extends BrowserTestBase {
   /**
    * Perform initial setup tasks that run before every test method.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->formsStepsSetup();
@@ -60,7 +60,7 @@ class FormsStepsTest extends BrowserTestBase {
       );
       $this->assertSession()->statusCodeEquals(200);
       // Add a form mode.
-      $this->drupalPostForm(NULL, [
+      $this->submitForm([
         'label' => $form_display_mode['label'],
         'id' => $form_display_mode['id'],
       ], t('Save'));
@@ -98,7 +98,7 @@ class FormsStepsTest extends BrowserTestBase {
 
     // Activate Test Form Modes as a custom display mode.
     foreach ($this->data['form_display_modes'] as $form_display_mode) {
-      $this->drupalPostForm(NULL, [
+      $this->submitForm([
         "display_modes_custom[${form_display_mode['id']}]" => $form_display_mode['id'],
       ], t('Save'));
 
@@ -117,7 +117,7 @@ class FormsStepsTest extends BrowserTestBase {
       'form_mode_name' => $form_display_mode['id'],
     ]));
     $this->assertSession()->statusCodeEquals(200);
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'fields[title][region]' => 'content',
       'fields[body][region]' => 'hidden',
       'fields[status][region]' => 'hidden',
@@ -131,7 +131,7 @@ class FormsStepsTest extends BrowserTestBase {
     $this->drupalGet(Url::fromRoute('entity.forms_steps.add_form'));
     $this->assertSession()->statusCodeEquals(200);
     // Test the creation of a form step.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'label' => $this->data['forms_steps']['label'],
       'id' => $this->data['forms_steps']['id'],
       'description' => $this->data['forms_steps']['description'],
@@ -152,7 +152,7 @@ class FormsStepsTest extends BrowserTestBase {
       $this->assertSession()->statusCodeEquals(200);
 
       // Test the creation of an add step.
-      $this->drupalPostForm(NULL, [
+      $this->submitForm([
         'label' => $step['label'],
         'id' => $step['id'],
         'target_form_mode' => $step['target_form_mode'],
@@ -181,7 +181,7 @@ class FormsStepsTest extends BrowserTestBase {
       ->pageTextContains($this->data['forms_steps']['steps'][1]['label']);
 
     $value = 'This is a Test Titre content';
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => $value,
     ], t('Save'));
 
