modules/contrib/new_relic_rpm/new_relic_rpm.drush.inc
modules/contrib/new_relic_rpm/new_relic_rpm.install
modules/contrib/new_relic_rpm/new_relic_rpm.module
modules/contrib/new_relic_rpm/src/Client/NewRelicApiClient.php
modules/contrib/new_relic_rpm/src/Commands/NewRelicRpmCommands.php
modules/contrib/new_relic_rpm/src/EventSubscriber/ExceptionSubscriber.php
modules/contrib/new_relic_rpm/src/EventSubscriber/NewRelicConfigSubscriber.php
modules/contrib/new_relic_rpm/src/EventSubscriber/NewRelicRequestSubscriber.php
modules/contrib/new_relic_rpm/src/EventSubscriber/RoutingTransactionNameSubscriber.php
modules/contrib/new_relic_rpm/src/ExtensionAdapter/AdapterFactory.php
modules/contrib/new_relic_rpm/src/ExtensionAdapter/ExtensionAdapter.php
modules/contrib/new_relic_rpm/src/ExtensionAdapter/NewRelicAdapterInterface.php
modules/contrib/new_relic_rpm/src/ExtensionAdapter/NullAdapter.php
modules/contrib/new_relic_rpm/src/Form/NewRelicRpmDeploy.php
modules/contrib/new_relic_rpm/src/Form/NewRelicRpmSettings.php
modules/contrib/new_relic_rpm/src/Logger/NewRelicLogger.php
modules/contrib/new_relic_rpm/src/RouteEnhancer/TransactionNameEnhancer.php
modules/contrib/new_relic_rpm/tests/src/Unit/EventListener/RoutingTransactionNameSubscriberTest.php
modules/contrib/new_relic_rpm/tests/src/Unit/Logger/NewRelicLoggerTest.php
modules/contrib/new_relic_rpm/tests/src/Unit/RouteEnhancer/TransactionNameEnhancerTest.php

5 files with changes
====================

1) modules/contrib/new_relic_rpm/tests/src/Unit/RouteEnhancer/TransactionNameEnhancerTest.php:16

    ---------- begin diff ----------
@@ @@
  */
 class TransactionNameEnhancerTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Test callback for _translation_name_callback with known response.
    *
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/new_relic_rpm/tests/src/Unit/Logger/NewRelicLoggerTest.php:14

    ---------- begin diff ----------
@@ @@
  */
 class NewRelicLoggerTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The default request context for tests.
    *
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/new_relic_rpm/tests/src/Unit/EventListener/RoutingTransactionNameSubscriberTest.php:16

    ---------- begin diff ----------
@@ @@
  */
 class RoutingTransactionNameSubscriberTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @covers ::addTransactionNamesToRoutes
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/new_relic_rpm/src/EventSubscriber/NewRelicRequestSubscriber.php:94

    ---------- begin diff ----------
@@ @@
    *
    * Naming is based on the current path and route.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The current response event for the page.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {

     // If this is a sub request, only process it if there was no master
     // request yet. In that case, it is probably a page not found or access
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/new_relic_rpm/src/EventSubscriber/ExceptionSubscriber.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * Handles errors for this subscriber.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The event to process.
    */
-  public function onException(GetResponseForExceptionEvent $event) {
+  public function onException(\Symfony\Component\HttpKernel\Event\ExceptionEvent $event) {
     // Don't log http exceptions.
-    if ($event->getException() instanceof HttpExceptionInterface) {
+    if ($event->getThrowable() instanceof HttpExceptionInterface) {
       return;
     }
     if (\Drupal::config('new_relic_rpm.settings')->get('override_exception_handler')) {
       // Forward the exception to New Relic.
-      $this->adapter->logException($event->getException());
+      $this->adapter->logException($event->getThrowable());
     }
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameMethodRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 5 files have been changed by Rector                                       

