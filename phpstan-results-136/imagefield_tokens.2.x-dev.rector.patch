diff --git a/imagefield_tokens.info.yml b/imagefield_tokens.info.yml
index 8a04c86..cc83718 100644
--- a/imagefield_tokens.info.yml
+++ b/imagefield_tokens.info.yml
@@ -1,7 +1,7 @@
 name: Image Field Tokens
 type: module
 description: Provides new widget type for Image field to allow to use tokens for filling Alt and Title image attributes.
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Image
 dependencies:
   - token:token
diff --git a/src/Plugin/Field/FieldFormatter/ImageFieldTokensFormatter.php b/src/Plugin/Field/FieldFormatter/ImageFieldTokensFormatter.php
index de260f5..198d5b9 100644
--- a/src/Plugin/Field/FieldFormatter/ImageFieldTokensFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageFieldTokensFormatter.php
@@ -155,7 +155,7 @@ class ImageFieldTokensFormatter extends ImageFormatter {
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
diff --git a/tests/src/Functional/ImageFieldTokensFormatterTest.php b/tests/src/Functional/ImageFieldTokensFormatterTest.php
index bfde736..ee7ecf1 100644
--- a/tests/src/Functional/ImageFieldTokensFormatterTest.php
+++ b/tests/src/Functional/ImageFieldTokensFormatterTest.php
@@ -63,7 +63,7 @@ class ImageFieldTokensFormatterTest extends ImageFieldTestBase {
     $this->drupalGet('admin/structure/types/manage/article/display');
 
     // Test for existence of link to image styles configuration.
-    $this->drupalPostForm(NULL, [], "{$field_name}_settings_edit");
+    $this->submitForm([], "{$field_name}_settings_edit");
     $this->assertSession()->linkByHrefExists(Url::fromRoute('entity.image_style.collection')->toString(), 0, 'Link to image styles configuration is found');
 
     // Remove 'administer image styles' permission from testing admin user.
@@ -74,7 +74,7 @@ class ImageFieldTokensFormatterTest extends ImageFieldTestBase {
     $this->drupalGet('admin/structure/types/manage/article/display');
 
     // Test for absence of link to image styles configuration.
-    $this->drupalPostForm(NULL, [], "{$field_name}_settings_edit");
+    $this->submitForm([], "{$field_name}_settings_edit");
     $this->assertSession()->linkByHrefNotExists(Url::fromRoute('entity.image_style.collection')->toString(), 'Link to image styles configuration is absent when permissions are insufficient');
 
     // Restore 'administer image styles' permission to testing admin user.
diff --git a/tests/src/Functional/ImageFieldTokensWidgetTest.php b/tests/src/Functional/ImageFieldTokensWidgetTest.php
index 63f9023..58c4696 100644
--- a/tests/src/Functional/ImageFieldTokensWidgetTest.php
+++ b/tests/src/Functional/ImageFieldTokensWidgetTest.php
@@ -69,8 +69,10 @@ class ImageFieldTokensWidgetTest extends ImageFieldTestBase {
 
     $this->createImageFieldTokensField($field_name, 'article', ['uri_scheme' => 'public'], $field_settings);
     $this->drupalGet('node/add/article');
-    $this->assertNotEqual(0, count($this->xpath('//div[contains(@class, "field--widget-imagefield-tokens")]')), 'Image field widget found on add/node page', 'Browser');
-    $this->assertNotEqual(0, count($this->xpath('//input[contains(@accept, "image/*")]')), 'Image field widget limits accepted files.', 'Browser');
+    $this->assertNotEquals(0, count($this->xpath('//div[contains(@class, "field--widget-imagefield-tokens")]')), 'Image field widget found on add/node page');
+    $this->assertEqualsWithDelta(0, count($this->xpath('//div[contains(@class, "field--widget-imagefield-tokens")]')), 'Browser', 'Image field widget found on add/node page');
+    $this->assertNotEquals(0, count($this->xpath('//input[contains(@accept, "image/*")]')), 'Image field widget limits accepted files.');
+    $this->assertEqualsWithDelta(0, count($this->xpath('//input[contains(@accept, "image/*")]')), 'Browser', 'Image field widget limits accepted files.');
     $this->assertSession()->pageTextNotContains('Image test on [site:name]');
 
     // Check for allowed image file extensions - default.
