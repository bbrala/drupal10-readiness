diff --git a/src/ContactEmailsTestBase.php b/src/ContactEmailsTestBase.php
index fbb99dc..e873aa4 100644
--- a/src/ContactEmailsTestBase.php
+++ b/src/ContactEmailsTestBase.php
@@ -27,7 +27,7 @@ class ContactEmailsTestBase extends BrowserTestBase {
    *
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->createUserAndLogin();
     $this->createBaseContactForm();
@@ -58,7 +58,8 @@ class ContactEmailsTestBase extends BrowserTestBase {
       'recipients' => 'test@example.com',
       'contact_storage_submit_text' => 'Send message',
     ];
-    $this->drupalPostForm('admin/structure/contact/add', $params, t('Save'));
+    $this->drupalGet('admin/structure/contact/add');
+    $this->submitForm($params, t('Save'));
   }
 
   /**
@@ -84,16 +85,20 @@ class ContactEmailsTestBase extends BrowserTestBase {
       'label' => 'Email address',
       'field_name' => 'email_address',
     ];
-    $this->drupalPostForm('admin/structure/contact/manage/contact_emails_test_form/fields/add-field', $params, t('Save and continue'));
+    $this->drupalGet('admin/structure/contact/manage/contact_emails_test_form/fields/add-field');
+    $this->submitForm($params, t('Save and continue'));
 
     // Save the default base field settings.
-    $this->drupalPostForm(NULL, [], t('Save field settings'));
+    $this->submitForm([], t('Save field settings'));
 
     // Save the field settings.
-    $this->drupalPostForm(NULL, [], t('Save settings'));
+    $this->submitForm([], t('Save settings'));
 
     // Assert that the field exists.
-    $this->assertText('field_email_address', 'Field email address exists.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('field_email_address');
   }
 
   /**
@@ -110,7 +115,8 @@ class ContactEmailsTestBase extends BrowserTestBase {
       'recipients' => 'test@example.com',
       'contact_storage_submit_text' => 'Send message',
     ];
-    $this->drupalPostForm('admin/structure/contact/add', $params, t('Save'));
+    $this->drupalGet('admin/structure/contact/add');
+    $this->submitForm($params, t('Save'));
 
     // Add an email field to be referenced.
     $params = [
@@ -118,16 +124,20 @@ class ContactEmailsTestBase extends BrowserTestBase {
       'label' => 'Email reference',
       'field_name' => 'email_reference',
     ];
-    $this->drupalPostForm('admin/structure/contact/manage/contact_reference_test_form/fields/add-field', $params, t('Save and continue'));
+    $this->drupalGet('admin/structure/contact/manage/contact_reference_test_form/fields/add-field');
+    $this->submitForm($params, t('Save and continue'));
 
     // Save the default base field settings.
-    $this->drupalPostForm(NULL, [], t('Save field settings'));
+    $this->submitForm([], t('Save field settings'));
 
     // Save the field settings.
-    $this->drupalPostForm(NULL, [], t('Save settings'));
+    $this->submitForm([], t('Save settings'));
 
     // Assert that the field exists.
-    $this->assertText('field_email_reference', 'Field email address exists.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('field_email_reference');
 
     // Add an email field to reference the new form's field.
     $params = [
@@ -135,28 +145,33 @@ class ContactEmailsTestBase extends BrowserTestBase {
       'label' => 'Reference',
       'field_name' => 'reference',
     ];
-    $this->drupalPostForm('admin/structure/contact/manage/contact_emails_test_form/fields/add-field', $params, t('Save and continue'));
+    $this->drupalGet('admin/structure/contact/manage/contact_emails_test_form/fields/add-field');
+    $this->submitForm($params, t('Save and continue'));
 
     // Save the default base field settings.
     $params = [
       'settings[target_type]' => 'contact_message',
     ];
-    $this->drupalPostForm(NULL, $params, t('Save field settings'));
+    $this->submitForm($params, t('Save field settings'));
 
     // Save the field settings.
     $params = [
       'settings[handler_settings][target_bundles][contact_reference_test_form]' => 'contact_reference_test_form',
     ];
-    $this->drupalPostForm(NULL, $params, t('Save settings'));
+    $this->submitForm($params, t('Save settings'));
 
     // Assert that the field exists.
-    $this->assertText('field_reference', 'Field reference exists.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('field_reference');
 
     // Save the display settings to make the reference a simple select.
     $params = [
       'fields[field_reference][type]' => 'options_select',
     ];
-    $this->drupalPostForm('admin/structure/contact/manage/contact_emails_test_form/form-display', $params, t('Save'));
+    $this->drupalGet('admin/structure/contact/manage/contact_emails_test_form/form-display');
+    $this->submitForm($params, t('Save'));
 
     // Submit the refernce contact form on the front-end of the website.
     $params = [
@@ -164,10 +179,14 @@ class ContactEmailsTestBase extends BrowserTestBase {
       'message[0][value]' => 'Submission Test Form Body',
       'field_email_reference[0][value]' => 'email-via-reference@test.com',
     ];
-    $this->drupalPostForm('contact/contact_reference_test_form', $params, t('Send message'));
+    $this->drupalGet('contact/contact_reference_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that it says message has been sent.
-    $this->assertText('Your message has been sent.', 'Message sent successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Your message has been sent.');
   }
 
 }
diff --git a/src/Tests/ContactEmailsDefaultEmailTest.php b/src/Tests/ContactEmailsDefaultEmailTest.php
index 0ac22cd..d79f65e 100644
--- a/src/Tests/ContactEmailsDefaultEmailTest.php
+++ b/src/Tests/ContactEmailsDefaultEmailTest.php
@@ -37,21 +37,32 @@ class ContactEmailsDefaultEmailTest extends ContactEmailsTestBase {
       'reply_to_type[0][value]' => 'default',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Submit the contact form on the front-end of the website.
     $params = [
       'subject[0][value]' => 'Submission Test Form Subject',
       'message[0][value]' => 'Submission Test Form Body',
     ];
-    $this->drupalPostForm('/contact/contact_emails_test_form', $params, t('Send message'));
+    $this->drupalGet('/contact/contact_emails_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that it says message has been sent.
-    $this->assertText('Your message has been sent.', 'Message sent successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Your message has been sent.');
 
     // Assert subject and body.
-    $this->assertText('Contact Emails Test Form Subject', 'Message subject set successfully.');
-    $this->assertText('Contact Emails Test Form Body', 'Message body set successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Contact Emails Test Form Subject');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Contact Emails Test Form Body');
   }
 
 }
diff --git a/src/Tests/ContactEmailsRecipientReferenceTest.php b/src/Tests/ContactEmailsRecipientReferenceTest.php
index bf03561..bf8fbe1 100644
--- a/src/Tests/ContactEmailsRecipientReferenceTest.php
+++ b/src/Tests/ContactEmailsRecipientReferenceTest.php
@@ -42,7 +42,8 @@ class ContactEmailsRecipientReferenceTest extends ContactEmailsTestBase {
       'reply_to_type[0][value]' => 'default',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Open the contact form on the front-end.
     $this->drupalGet('/contact/contact_emails_test_form');
@@ -58,10 +59,13 @@ class ContactEmailsRecipientReferenceTest extends ContactEmailsTestBase {
       'message[0][value]' => 'Submission Test Form Body',
       'field_reference' => $last_option->getValue(),
     ];
-    $this->drupalPostForm(NULL, $params, t('Send message'));
+    $this->submitForm($params, t('Send message'));
 
     // Assert that the message to is the email of the currently logged in user.
-    $this->assertText('Message-to:email-via-reference@test.com', 'Message to set successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-to:email-via-reference@test.com');
   }
 
 }
diff --git a/src/Tests/ContactEmailsRecipientTest.php b/src/Tests/ContactEmailsRecipientTest.php
index 2c2d87e..afbbf60 100644
--- a/src/Tests/ContactEmailsRecipientTest.php
+++ b/src/Tests/ContactEmailsRecipientTest.php
@@ -40,17 +40,22 @@ class ContactEmailsRecipientTest extends ContactEmailsTestBase {
       'reply_to_type[0][value]' => 'default',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Submit the contact form on the front-end of the website.
     $params = [
       'subject[0][value]' => 'Submission Test Form Subject',
       'message[0][value]' => 'Submission Test Form Body',
     ];
-    $this->drupalPostForm('/contact/contact_emails_test_form', $params, t('Send message'));
+    $this->drupalGet('/contact/contact_emails_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that the to is the default site email.
-    $this->assertText('Message-to:site-default-mail@test.com', 'Message to set to default successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-to:site-default-mail@test.com');
   }
 
   /**
@@ -70,7 +75,8 @@ class ContactEmailsRecipientTest extends ContactEmailsTestBase {
       'reply_to_type[0][value]' => 'default',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Submit the contact form on the front-end of the website.
     $params = [
@@ -78,10 +84,14 @@ class ContactEmailsRecipientTest extends ContactEmailsTestBase {
       'message[0][value]' => 'Submission Test Form Body',
       'field_email_address[0][value]' => 'email.in.field@test.com',
     ];
-    $this->drupalPostForm('/contact/contact_emails_test_form', $params, t('Send message'));
+    $this->drupalGet('/contact/contact_emails_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that the message to is the value of the field.
-    $this->assertText('Message-to:email.in.field@test.com', 'Message to set successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-to:email.in.field@test.com');
   }
 
   /**
@@ -98,17 +108,22 @@ class ContactEmailsRecipientTest extends ContactEmailsTestBase {
       'reply_to_type[0][value]' => 'default',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Submit the contact form on the front-end of the website.
     $params = [
       'subject[0][value]' => 'Submission Test Form Subject',
       'message[0][value]' => 'Submission Test Form Body',
     ];
-    $this->drupalPostForm('/contact/contact_emails_test_form', $params, t('Send message'));
+    $this->drupalGet('/contact/contact_emails_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that the message to is the email of the currently logged in user.
-    $this->assertText('Message-to:' . \Drupal::currentUser()->getEmail(), 'Message to set successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-to:' . \Drupal::currentUser()->getEmail());
   }
 
   /**
@@ -126,17 +141,22 @@ class ContactEmailsRecipientTest extends ContactEmailsTestBase {
       'reply_to_type[0][value]' => 'default',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Submit the contact form on the front-end of the website.
     $params = [
       'subject[0][value]' => 'Submission Test Form Subject',
       'message[0][value]' => 'Submission Test Form Body',
     ];
-    $this->drupalPostForm('/contact/contact_emails_test_form', $params, t('Send message'));
+    $this->drupalGet('/contact/contact_emails_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that the message to is the email of the currently logged in user.
-    $this->assertText('Message-to:manual-email-1@test.com, manual-email-2@test.com', 'Message to set successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-to:manual-email-1@test.com, manual-email-2@test.com');
   }
 
 }
diff --git a/src/Tests/ContactEmailsReplyToReferenceTest.php b/src/Tests/ContactEmailsReplyToReferenceTest.php
index dfde898..a3202e9 100644
--- a/src/Tests/ContactEmailsReplyToReferenceTest.php
+++ b/src/Tests/ContactEmailsReplyToReferenceTest.php
@@ -42,7 +42,8 @@ class ContactEmailsReplyToReferenceTest extends ContactEmailsTestBase {
       'reply_to_reference[0][value]' => 'field_reference.contact_message.contact_reference_test_form.field_email_reference',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Open the contact form on the front-end.
     $this->drupalGet('/contact/contact_emails_test_form');
@@ -58,10 +59,13 @@ class ContactEmailsReplyToReferenceTest extends ContactEmailsTestBase {
       'message[0][value]' => 'Submission Test Form Body',
       'field_reference' => $last_option->getValue(),
     ];
-    $this->drupalPostForm(NULL, $params, t('Send message'));
+    $this->submitForm($params, t('Send message'));
 
     // Assert that the message to is the email of the currently logged in user.
-    $this->assertText('Message-reply-to:email-via-reference@test.com', 'Message reply-to set successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-reply-to:email-via-reference@test.com');
   }
 
 }
diff --git a/src/Tests/ContactEmailsReplyToTest.php b/src/Tests/ContactEmailsReplyToTest.php
index f85f9d5..6e2332a 100644
--- a/src/Tests/ContactEmailsReplyToTest.php
+++ b/src/Tests/ContactEmailsReplyToTest.php
@@ -40,17 +40,22 @@ class ContactEmailsReplyToTest extends ContactEmailsTestBase {
       'reply_to_type[0][value]' => 'default',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Submit the contact form on the front-end of the website.
     $params = [
       'subject[0][value]' => 'Submission Test Form Subject',
       'message[0][value]' => 'Submission Test Form Body',
     ];
-    $this->drupalPostForm('/contact/contact_emails_test_form', $params, t('Send message'));
+    $this->drupalGet('/contact/contact_emails_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that the reply-to is the default site email.
-    $this->assertText('Message-reply-to:site-default-mail@test.com', 'Message to set to default successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-reply-to:site-default-mail@test.com');
   }
 
   /**
@@ -70,7 +75,8 @@ class ContactEmailsReplyToTest extends ContactEmailsTestBase {
       'reply_to_field[0][value]' => 'field_email_address',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Submit the contact form on the front-end of the website.
     $params = [
@@ -78,10 +84,14 @@ class ContactEmailsReplyToTest extends ContactEmailsTestBase {
       'message[0][value]' => 'Submission Test Form Body',
       'field_email_address[0][value]' => 'email.in.field@test.com',
     ];
-    $this->drupalPostForm('/contact/contact_emails_test_form', $params, t('Send message'));
+    $this->drupalGet('/contact/contact_emails_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that it says message has been sent.
-    $this->assertText('Message-reply-to:email.in.field@test.com', 'Message reply-to set successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-reply-to:email.in.field@test.com');
   }
 
   /**
@@ -98,17 +108,22 @@ class ContactEmailsReplyToTest extends ContactEmailsTestBase {
       'reply_to_type[0][value]' => 'submitter',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Submit the contact form on the front-end of the website.
     $params = [
       'subject[0][value]' => 'Submission Test Form Subject',
       'message[0][value]' => 'Submission Test Form Body',
     ];
-    $this->drupalPostForm('/contact/contact_emails_test_form', $params, t('Send message'));
+    $this->drupalGet('/contact/contact_emails_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that the message to is the email of the currently logged in user.
-    $this->assertText('Message-reply-to:' . \Drupal::currentUser()->getEmail(), 'Message to set successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-reply-to:' . \Drupal::currentUser()->getEmail());
   }
 
   /**
@@ -126,17 +141,22 @@ class ContactEmailsReplyToTest extends ContactEmailsTestBase {
       'reply_to_email[0][value]' => 'manual-email-1@test.com',
       'status[value]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/structure/contact/manage/contact_emails_test_form/emails/add', $params, t('Save'));
+    $this->drupalGet('/admin/structure/contact/manage/contact_emails_test_form/emails/add');
+    $this->submitForm($params, t('Save'));
 
     // Submit the contact form on the front-end of the website.
     $params = [
       'subject[0][value]' => 'Submission Test Form Subject',
       'message[0][value]' => 'Submission Test Form Body',
     ];
-    $this->drupalPostForm('/contact/contact_emails_test_form', $params, t('Send message'));
+    $this->drupalGet('/contact/contact_emails_test_form');
+    $this->submitForm($params, t('Send message'));
 
     // Assert that the message to is the email of the currently logged in user.
-    $this->assertText('Message-reply-to:manual-email-1@test.com', 'Message reply-to set successfully.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Message-reply-to:manual-email-1@test.com');
   }
 
 }
