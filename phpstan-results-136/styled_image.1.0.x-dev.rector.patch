diff --git a/src/Plugin/Field/FieldFormatter/StyledImageFormatter.php b/src/Plugin/Field/FieldFormatter/StyledImageFormatter.php
index cb53577..c7930b2 100644
--- a/src/Plugin/Field/FieldFormatter/StyledImageFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/StyledImageFormatter.php
@@ -140,7 +140,7 @@ class StyledImageFormatter extends ImageFormatterBase {
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
diff --git a/styled_image.info.yml b/styled_image.info.yml
index 22e2726..fa7ed77 100644
--- a/styled_image.info.yml
+++ b/styled_image.info.yml
@@ -1,7 +1,7 @@
 name: Styled Image Field
 type: module
 description: Provides a new image field with image style selection in widget.
-core_version_requirement: ^8.9 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Fields
 dependencies:
   - image
diff --git a/styled_image.module b/styled_image.module
index af29f59..48a01fb 100644
--- a/styled_image.module
+++ b/styled_image.module
@@ -88,7 +88,7 @@ function styled_image_field_storage_config_update(FieldStorageConfigInterface $f
   if ($file_new && (StreamWrapperManager::getScheme(($file_new->getFileUri())) !== $field_storage->getSetting('uri_scheme'))) {
     $directory = $field_storage->getSetting('uri_scheme') . '://default_images/';
     \Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY);
-    file_move($file_new, $directory . $file_new->filename);
+    \Drupal::service('file.repository')->move($file_new, $directory . $file_new->filename);
   }
 }
 
@@ -133,7 +133,7 @@ function styled_image_field_config_update(FieldConfigInterface $field) {
   if ($file_new && (StreamWrapperManager::getScheme($file_new->getFileUri()) !== $field_storage->getSetting('uri_scheme'))) {
     $directory = $field_storage->getSetting('uri_scheme') . '://default_images/';
     \Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY);
-    file_move($file_new, $directory . $file_new->filename);
+    \Drupal::service('file.repository')->move($file_new, $directory . $file_new->filename);
   }
 }
 
