diff --git a/tests/src/Functional/CacheInvalidationTest.php b/tests/src/Functional/CacheInvalidationTest.php
index db424bd..93a7945 100644
--- a/tests/src/Functional/CacheInvalidationTest.php
+++ b/tests/src/Functional/CacheInvalidationTest.php
@@ -30,7 +30,7 @@ class CacheInvalidationTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Change the view to use an exposed form block.
diff --git a/tests/src/FunctionalJavascript/IntegrationTest.php b/tests/src/FunctionalJavascript/IntegrationTest.php
index 67f0ec4..848bd5e 100644
--- a/tests/src/FunctionalJavascript/IntegrationTest.php
+++ b/tests/src/FunctionalJavascript/IntegrationTest.php
@@ -57,7 +57,7 @@ class IntegrationTest extends IntegrationTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
@@ -277,7 +277,7 @@ class IntegrationTest extends IntegrationTestBase {
     $keys = urlencode($keys);
     // @todo Replace with $assert_session->addressMatches() (and prepend "^")
     //   once we depend on Drupal 9.1+.
-    $this->assertRegExp("#/search-api-autocomplete-test\\?(?:.*&)?keys=$keys#", $this->getUrl());
+    $this->assertMatchesRegularExpression("#/search-api-autocomplete-test\\?(?:.*&)?keys=$keys#", $this->getUrl());
 
     // Check that autocomplete in the "Name" filter works, too, and that it sets
     // the correct fields on the query.
@@ -501,7 +501,7 @@ class IntegrationTest extends IntegrationTestBase {
         $this->assertStringContainsString($this->searchId, $element->getAttribute('data-search-api-autocomplete-search'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
       }
       else {
-        $this->assertContains($this->searchId, $element->getAttribute('data-search-api-autocomplete-search'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
+        $this->assertStringContainsString($this->searchId, $element->getAttribute('data-search-api-autocomplete-search'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
       }
       $this->assertTrue($element->hasClass('form-autocomplete'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
 
diff --git a/tests/src/FunctionalJavascript/PagesIntegrationTest.php b/tests/src/FunctionalJavascript/PagesIntegrationTest.php
index 0af3616..1dad1f4 100644
--- a/tests/src/FunctionalJavascript/PagesIntegrationTest.php
+++ b/tests/src/FunctionalJavascript/PagesIntegrationTest.php
@@ -53,7 +53,7 @@ class PagesIntegrationTest extends IntegrationTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
@@ -212,7 +212,7 @@ class PagesIntegrationTest extends IntegrationTestBase {
     $edit = [
       'suggesters[settings][server][fields][body]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
 
     $this->drupalGet('test-search');
 
diff --git a/tests/src/Kernel/DependencyRemovalTest.php b/tests/src/Kernel/DependencyRemovalTest.php
index f7aa85e..7f4874d 100644
--- a/tests/src/Kernel/DependencyRemovalTest.php
+++ b/tests/src/Kernel/DependencyRemovalTest.php
@@ -50,7 +50,7 @@ class DependencyRemovalTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Do not use a batch for tracking the initial items after creating an
diff --git a/tests/src/Kernel/SearchCrudTest.php b/tests/src/Kernel/SearchCrudTest.php
index 10b8a7e..463f9b3 100644
--- a/tests/src/Kernel/SearchCrudTest.php
+++ b/tests/src/Kernel/SearchCrudTest.php
@@ -32,7 +32,7 @@ class SearchCrudTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('search_api_task');
diff --git a/tests/src/Kernel/ViewsTest.php b/tests/src/Kernel/ViewsTest.php
index 935bc69..9a7b953 100644
--- a/tests/src/Kernel/ViewsTest.php
+++ b/tests/src/Kernel/ViewsTest.php
@@ -36,7 +36,7 @@ class ViewsTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('entity_test_mulrev_changed');
@@ -117,7 +117,7 @@ class ViewsTest extends KernelTestBase {
       $this->assertStringContainsString('foobar', (string) $query);
     }
     else {
-      $this->assertContains('foobar', (string) $query);
+      $this->assertStringContainsString('foobar', (string) $query);
     }
     $conditions = $query->getConditionGroup()->getConditions();
     $conditions = $this->collectConditions($conditions);
diff --git a/tests/src/Unit/AccessTest.php b/tests/src/Unit/AccessTest.php
index 73b54bf..c0940cd 100644
--- a/tests/src/Unit/AccessTest.php
+++ b/tests/src/Unit/AccessTest.php
@@ -32,14 +32,14 @@ class AccessTest extends UnitTestCase {
   /**
    * The search entity used in this test.
    *
-   * @var \Drupal\search_api_autocomplete\SearchInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\search_api_autocomplete\SearchInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $search;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $element_info = $this->createMock(ElementInfoManagerInterface::class);
@@ -96,7 +96,7 @@ class AccessTest extends UnitTestCase {
       $this->search->method('getIndex')->willReturn($index);
     }
 
-    /** @var \Drupal\Core\Session\AccountInterface|\PHPUnit_Framework_MockObject_MockObject $account */
+    /** @var \Drupal\Core\Session\AccountInterface|\PHPUnit\Framework\MockObject\MockObject $account */
     $account = $this->createMock(AccountInterface::class);
     $permission = 'use search_api_autocomplete for ' . $this->search->id();
     $account->method('hasPermission')->willReturnMap([
diff --git a/tests/src/Unit/SuggestionFactoryTest.php b/tests/src/Unit/SuggestionFactoryTest.php
index 4fdd30e..8f7275e 100644
--- a/tests/src/Unit/SuggestionFactoryTest.php
+++ b/tests/src/Unit/SuggestionFactoryTest.php
@@ -93,9 +93,7 @@ class SuggestionFactoryTest extends UnitTestCase {
   public function testCreateUrlSuggestion() {
     $factory = new SuggestionFactory('foo');
     /** @var \Drupal\Core\Url $url */
-    $url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock(Url::class);
 
     $suggestion = $factory->createUrlSuggestion($url, 'Foobar');
     $this->assertSame($url, $suggestion->getUrl());
