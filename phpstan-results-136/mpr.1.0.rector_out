modules/contrib/mpr/multi_peer_review.install
modules/contrib/mpr/multi_peer_review.module
modules/contrib/mpr/multi_peer_review.token.inc
modules/contrib/mpr/src/Controller/InvitationEmailLinkController.php
modules/contrib/mpr/src/Controller/ReviewEmailLinkController.php
modules/contrib/mpr/src/Controller/UserController.php
modules/contrib/mpr/src/Controller/UserInvitationController.php
modules/contrib/mpr/src/Controller/UserPaperController.php
modules/contrib/mpr/src/Controller/UserReviewController.php
modules/contrib/mpr/src/EmailTemplateAccessControlHandler.php
modules/contrib/mpr/src/EmailTemplateListBuilder.php
modules/contrib/mpr/src/Entity/CommonContentEntity.php
modules/contrib/mpr/src/Entity/CommonContentEntityInterface.php
modules/contrib/mpr/src/Entity/EmailCapableEntity.php
modules/contrib/mpr/src/Entity/EmailCapableEntityInterface.php
modules/contrib/mpr/src/Entity/EmailTemplate.php
modules/contrib/mpr/src/Entity/EmailTemplateInterface.php
modules/contrib/mpr/src/Entity/Invitation.php
modules/contrib/mpr/src/Entity/InvitationInterface.php
modules/contrib/mpr/src/Entity/Paper.php
modules/contrib/mpr/src/Entity/PaperInterface.php
modules/contrib/mpr/src/Entity/Review.php
modules/contrib/mpr/src/Entity/ReviewInterface.php
modules/contrib/mpr/src/Entity/Reviewer.php
modules/contrib/mpr/src/Entity/ReviewerInterface.php
modules/contrib/mpr/src/Entity/SES.php
modules/contrib/mpr/src/Entity/SESInterface.php
modules/contrib/mpr/src/Entity/SearchResultItem.php
modules/contrib/mpr/src/Entity/SearchResultItemInterface.php
modules/contrib/mpr/src/Entity/WebRequestCacheItem.php
modules/contrib/mpr/src/Entity/WebRequestCacheItemInterface.php
modules/contrib/mpr/src/FilteredEntityListBuilder.php
modules/contrib/mpr/src/Form/CommonConfirmForm.php
modules/contrib/mpr/src/Form/CommonContentEntityForm.php
modules/contrib/mpr/src/Form/CommonFormBase.php
modules/contrib/mpr/src/Form/EmailTemplateDeleteForm.php
modules/contrib/mpr/src/Form/EmailTemplateForm.php
modules/contrib/mpr/src/Form/EmailTemplateFormInterface.php
modules/contrib/mpr/src/Form/InvitationAcceptForm.php
modules/contrib/mpr/src/Form/InvitationDeclineForm.php
modules/contrib/mpr/src/Form/InvitationDeleteForm.php
modules/contrib/mpr/src/Form/InvitationForm.php
modules/contrib/mpr/src/Form/InvitationFormInterface.php
modules/contrib/mpr/src/Form/InvitationRetractForm.php
modules/contrib/mpr/src/Form/InvitationSendForm.php
modules/contrib/mpr/src/Form/PaperDeleteForm.php
modules/contrib/mpr/src/Form/PaperForm.php
modules/contrib/mpr/src/Form/PaperFormInterface.php
modules/contrib/mpr/src/Form/ReviewCancelForm.php
modules/contrib/mpr/src/Form/ReviewDeleteForm.php
modules/contrib/mpr/src/Form/ReviewForm.php
modules/contrib/mpr/src/Form/ReviewFormInterface.php
modules/contrib/mpr/src/Form/ReviewSubmitForm.php
modules/contrib/mpr/src/Form/ReviewerDeleteForm.php
modules/contrib/mpr/src/Form/ReviewerForm.php
modules/contrib/mpr/src/Form/ReviewerFormInterface.php
modules/contrib/mpr/src/Form/ReviewerNewAccountForm.php
modules/contrib/mpr/src/Form/SESDeleteForm.php
modules/contrib/mpr/src/Form/SESForm.php
modules/contrib/mpr/src/Form/SESFormInterface.php
modules/contrib/mpr/src/Form/SearchResultItemDeleteForm.php
modules/contrib/mpr/src/Form/SearchResultItemForm.php
modules/contrib/mpr/src/Form/SearchResultItemFormInterface.php
modules/contrib/mpr/src/Form/SettingsForm.php
modules/contrib/mpr/src/Form/UserPaperForm.php
modules/contrib/mpr/src/Form/UserPapersForm.php
modules/contrib/mpr/src/Form/UserProfileForm.php
modules/contrib/mpr/src/Form/UserReviewsForm.php
modules/contrib/mpr/src/Form/WebRequestCacheItemDeleteForm.php
modules/contrib/mpr/src/Form/WebRequestCacheItemForm.php
modules/contrib/mpr/src/Form/WebRequestCacheItemFormInterface.php
modules/contrib/mpr/src/InvitationAccessControlHandler.php
modules/contrib/mpr/src/InvitationHtmlRouteProvider.php
modules/contrib/mpr/src/InvitationListBuilder.php
modules/contrib/mpr/src/MPRBlank.php
modules/contrib/mpr/src/MPRCommon.php
modules/contrib/mpr/src/MPRDropDownListItem.php
modules/contrib/mpr/src/MPREmail.php
modules/contrib/mpr/src/MPRFormHelper.php
modules/contrib/mpr/src/MPRSearchEngineScript.php
modules/contrib/mpr/src/PaperAccessControlHandler.php
modules/contrib/mpr/src/PaperListBuilder.php
modules/contrib/mpr/src/Plugin/Mail/HtmlEnabledPhpMail.php
modules/contrib/mpr/src/ReviewAccessControlHandler.php
modules/contrib/mpr/src/ReviewHtmlRouteProvider.php
modules/contrib/mpr/src/ReviewListBuilder.php
modules/contrib/mpr/src/ReviewerAccessControlHandler.php
modules/contrib/mpr/src/ReviewerHtmlRouteProvider.php
modules/contrib/mpr/src/ReviewerListBuilder.php
modules/contrib/mpr/src/SESAccessControlHandler.php
modules/contrib/mpr/src/SESListBuilder.php
modules/contrib/mpr/src/SearchResultItemAccessControlHandler.php
modules/contrib/mpr/src/SearchResultItemListBuilder.php
modules/contrib/mpr/tests/src/Functional/LoadTest.php

11 files with changes
=====================

1) modules/contrib/mpr/tests/src/Functional/LoadTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/mpr/src/InvitationHtmlRouteProvider.php:28

    ---------- begin diff ----------
@@ @@
     if ($send_form_route = $this->getSendFormRoute($entity_type)) {
       $collection->add("entity.{$entity_type_id}.send_form", $send_form_route);
     }
-    
+
     if ($retract_form_route = $this->getRetractFormRoute($entity_type)) {
       $collection->add("entity.{$entity_type_id}.retract_form", $retract_form_route);
     }    
-    
+
 //    if ($accept_form_route = $this->getAcceptFormRoute($entity_type)) {
 //      $collection->add("entity.{$entity_type_id}.accept_form", $accept_form_route);
 //    }    
-    
+
 //    if ($accept_form_route = $this->getSendFormRoute($entity_type)) {
 //      $collection->add("entity.{$entity_type_id}.cancel_form", $accept_form_route);
 //    }       
@@ @@
     return $collection;
   }

-  
-  
-  

+
+
+
   /**
    * Gets the send form route.
    *
@@ @@
     }
   }

-  
-  
-  
-  

+
+
+
+
   /**
    * Gets the retract form route.
    *
@@ @@
       return $route;
     }
   }
-  
-  
-  
+
+
+
 //  
 //  /**
 //   * Gets the acceptance form route.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/mpr/src/Form/ReviewerNewAccountForm.php:299

    ---------- begin diff ----------
@@ @@
             $reviewer->logAction($this->logger('multi_peer_review'), 'user account generated');
             
             if ($this->isAdmin() == TRUE) {
-                drupal_set_message(t('An account has been created successfully for %reviewer-full-name. An email has been sent to %reviewer-email.', $placeholder_replacements)); 
+                $this->messenger()->addStatus(t('An account has been created successfully for %reviewer-full-name. An email has been sent to %reviewer-email.', $placeholder_replacements)); 
             }
             else {
-                drupal_set_message(t('Thank you for registering an account with us. An email has been sent to %reviewer-email.', $placeholder_replacements)); 
+                $this->messenger()->addStatus(t('Thank you for registering an account with us. An email has been sent to %reviewer-email.', $placeholder_replacements)); 
             }
         }
         else {
             // A technical error has occurred.
             
-            drupal_set_message(t('There was a problem creating the account. It has not been created.'), 'error'); 
+            $this->messenger()->addError(t('There was a problem creating the account. It has not been created.')); 
             
             MPRCommon::sendEmailToTechnicalContact($this->t('A user account was generated but could not be attached to %reviewer-full-name. Please check for orphaned user accounts.', $placeholder_replacements));
         }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/mpr/src/Form/ReviewSubmitForm.php:173

    ---------- begin diff ----------
@@ @@
     
     if ($status == SAVED_UPDATED) {
         if ($this->isAdmin() == TRUE) {
-            drupal_set_message(t('The Review has been submitted.')); 
+            $this->messenger()->addStatus(t('The Review has been submitted.')); 
         }
         else {
-            drupal_set_message(t('Thank you for submitting your review.')); 
+            $this->messenger()->addStatus(t('Thank you for submitting your review.')); 
         }
         
         $review->logAction($this->logger('multi_peer_review'), 'submitted');
@@ @@
     }
     else {
         if ($this->isAdmin() == TRUE) {
-            drupal_set_message(t('There was a problem submitting the Review. It has not been submitted.'), 'error'); 
+            $this->messenger()->addError(t('There was a problem submitting the Review. It has not been submitted.')); 
         }
         else {
-            drupal_set_message(t('There was a technical issue submitting your review. Please contact us or try again later.'), 'error'); 
+            $this->messenger()->addError(t('There was a technical issue submitting your review. Please contact us or try again later.')); 
         }
     }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/mpr/src/Form/ReviewCancelForm.php:241

    ---------- begin diff ----------
@@ @@
         $review->logAction($this->logger('multi_peer_review'), 'cancelled');

         if ($this->isAdmin() == FALSE) {
-            drupal_set_message(t('Your review of %paper-title has been cancelled.', $placeholder_replacements));  
+            $this->messenger()->addStatus(t('Your review of %paper-title has been cancelled.', $placeholder_replacements));  
         }
         else {
-            drupal_set_message(t('The review of %paper-title has been cancelled.', $placeholder_replacements));  
+            $this->messenger()->addStatus(t('The review of %paper-title has been cancelled.', $placeholder_replacements));  
         }
          
         // Redirect the user.    
@@ @@
         $form_state->setRedirectUrl($this->getCancelUrl());           
     }
     else {
-        drupal_set_message(t('There was a technical problem cancelling the review. Please contact us or try again later.'), 'error'); 
+        $this->messenger()->addError(t('There was a technical problem cancelling the review. Please contact us or try again later.')); 

         // Form will be rebuilt.
         $form_state->setRebuild();
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/mpr/src/Form/InvitationSendForm.php:134

    ---------- begin diff ----------
@@ @@

     
     if ($email->send() == TRUE) {
-        drupal_set_message(t('The Invitation has been sent.'));             
+        $this->messenger()->addStatus(t('The Invitation has been sent.'));             
         $invitation->logAction($this->logger('multi_peer_review'), 'sent');
         
         // Update Invitation status.
@@ @@
         
     } 
     else {
-        drupal_set_message(t('There was a problem sending the Invitation. It has not been sent.'), 'error'); 
+        $this->messenger()->addError(t('There was a problem sending the Invitation. It has not been sent.')); 
     }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/mpr/src/Form/InvitationRetractForm.php:301

    ---------- begin diff ----------
@@ @@
     

     if ($email->send() == TRUE) {
-        drupal_set_message(t('The retraction has been sent.'));        
+        $this->messenger()->addStatus(t('The retraction has been sent.'));        
         $invitation->logAction($this->logger('multi_peer_review'), 'retracted');
         
         // Update Invitation status.
@@ @@
         
     } 
     else {
-        drupal_set_message(t('There was a problem sending the retraction. It has not been sent.'), 'error'); 
+        $this->messenger()->addError(t('There was a problem sending the retraction. It has not been sent.')); 
     }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/mpr/src/Form/InvitationDeclineForm.php:152

    ---------- begin diff ----------
@@ @@
         $email->send();  
         
         $invitation->logAction($this->logger('multi_peer_review'), 'declined');
-        drupal_set_message(t('Thank you for responding to our invitation.'));  
+        $this->messenger()->addStatus(t('Thank you for responding to our invitation.'));  
          
         // Redirect the user to the home page. $status is typically SAVED_UPDATED.      
         $form_state->setRedirectUrl($this->getCancelUrl());           
     }
     else {
-        drupal_set_message(t('There was a technical problem declining the invitation. Please contact us or try again later.'), 'error'); 
+        $this->messenger()->addError(t('There was a technical problem declining the invitation. Please contact us or try again later.')); 

         // Form will be rebuilt.
         $form_state->setRebuild();
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/mpr/src/Form/InvitationAcceptForm.php:204

    ---------- begin diff ----------
@@ @@
         Paper::rebuildCachedFigures($paper);            
         
         $invitation->logAction($this->logger('multi_peer_review'), 'accepted');
-        drupal_set_message(t('Thank you for accepting our invitation.'));  
+        $this->messenger()->addStatus(t('Thank you for accepting our invitation.'));  
          
         // Redirect the user to the home page. $status is typically SAVED_UPDATED.      
         $form_state->setRedirectUrl($this->getCancelUrl());           
     }
     else {
-        drupal_set_message(t('There was a technical issue accepting the invitation. Please contact us or try again later.'), 'error'); 
+        $this->messenger()->addError(t('There was a technical issue accepting the invitation. Please contact us or try again later.')); 

         // Form will be rebuilt.
         $form_state->setRebuild();
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/mpr/src/Entity/Paper.php:207

    ---------- begin diff ----------
@@ @@
         if (empty($file) == FALSE) {

             $res = '<a target="_blank" href="' . 
-                    file_create_url($file->getFileUri()) . '">' . 
+                    \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) . '">' . 
                     htmlentities($file->getFilename()) . ' (' . format_size($file->getSize()) . ')</a>';

         }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/mpr/src/Controller/UserReviewController.php:245

    ---------- begin diff ----------
@@ @@
                 $file = \Drupal\file\Entity\File::load($fid);
                 if (empty($file) == FALSE) {
                   $file_link = '<a target="_blank" href="' . 
-                      file_create_url($file->getFileUri()) . '">' . 
+                      \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) . '">' . 
                       htmlentities($file->getFilename()) . ' (' . format_size($file->getSize()) . ')</a>';

                   array_push($file_links, $file_link);
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 11 files have been changed by Rector                                      

