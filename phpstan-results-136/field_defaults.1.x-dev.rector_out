modules/contrib/field_defaults/field_defaults.install
modules/contrib/field_defaults/field_defaults.module
modules/contrib/field_defaults/src/Commands/FieldDefaultsBulkCommands.php
modules/contrib/field_defaults/src/Form/SettingsForm.php
modules/contrib/field_defaults/src/Tests/BooleanTest.php
modules/contrib/field_defaults/src/Tests/FieldDefaultsTestBase.php
modules/contrib/field_defaults/src/Tests/StringTest.php

4 files with changes
====================

1) modules/contrib/field_defaults/src/Tests/StringTest.php:19

    ---------- begin diff ----------
@@ @@
     $this->drupalGet('node/' . rand(1, 20) . '/edit');

     $field_setup = $this->setupFieldByType('string');
-    $this->assertFieldByName('field_' . $fieldName . $field_setup['structure'], $field_setup['value']);
+    $this->assertSession()->fieldValueEquals('field_' . $fieldName . $field_setup['structure'], $field_setup['value']);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/field_defaults/src/Tests/FieldDefaultsTestBase.php:34

    ---------- begin diff ----------
@@ @@
    *
    * Once installed, a content type with the desired field is created.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Install Drupal.
     parent::setUp();

@@ @@
       'field_name' => $field_name,
       'label' => $field_name,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save and continue'));
+    $this->submitForm($edit, t('Save and continue'));

     // Fill out the $cardinality form as if we're not using an unlimited values.
     $edit = [
@@ @@
     }

     // And now we save the cardinality settings.
-    $this->drupalPostForm(NULL, $edit, t('Save field settings'));
-    $this->assertText(t('Updated field @name field settings.', ['@name' => $field_name]));
+    $this->submitForm($edit, t('Save field settings'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('Updated field @name field settings.', ['@name' => $field_name]));

     // Save.
-    $this->drupalPostForm(NULL, [], t('Save settings'));
-    $this->assertText(t('Saved @name configuration.', ['@name' => $field_name]));
+    $this->submitForm([], t('Save settings'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('Saved @name configuration.', ['@name' => $field_name]));

     return $field_name;
   }
@@ @@
     ];

     // Run batch.
-    $this->drupalPostForm(NULL, $edit, t('Save settings'));
-    $this->assertNoRaw('&amp;nbsp;', 'Initial progress message is not double escaped.');
+    $this->submitForm($edit, t('Save settings'));
+    $this->assertSession()->responseNotContains('&amp;nbsp;');
     // Now also go to the next step.
     $this->maximumMetaRefreshCount = 1;
-    $this->assertRaw('<li class="messages__item">Default values were updated for 20 entities.</li>');
+    $this->assertSession()->responseContains('<li class="messages__item">Default values were updated for 20 entities.</li>');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertNoRawRector
 * AssertRawRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/field_defaults/src/Tests/BooleanTest.php:17

    ---------- begin diff ----------
@@ @@

     // Ensure value is checked on any random node.
     $this->drupalGet('node/' . rand(1, 20) . '/edit');
-    $this->assertFieldChecked('edit-field-' . $fieldName . '-value');
+    $this->assertSession()->checkboxChecked('edit-field-' . $fieldName . '-value');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertFieldCheckedRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/field_defaults/src/Commands/FieldDefaultsBulkCommands.php:163

    ---------- begin diff ----------
@@ @@
       'title' => dt('Processing default values'),
       'operations' => $operations,
       'finished' => 'field_defaults_batch_finished',
-      'file' => drupal_get_path('module', 'field_defaults') . '/field_defaults.module',
+      'file' => \Drupal::service('extension.list.module')->getPath('field_defaults') . '/field_defaults.module',
     ];

     batch_set($batch);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

