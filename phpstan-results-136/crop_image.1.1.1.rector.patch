diff --git a/crop_image.info.yml b/crop_image.info.yml
index ee27b27..a426bb4 100644
--- a/crop_image.info.yml
+++ b/crop_image.info.yml
@@ -2,8 +2,7 @@ name: Crop Image
 type: module
 description: Module allow to crop image selected from media library.
 package: Crop
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
   - image_widget_crop:image_widget_crop
diff --git a/crop_image.install b/crop_image.install
index 5174d2d..c35f1a3 100644
--- a/crop_image.install
+++ b/crop_image.install
@@ -6,7 +6,7 @@ use Drupal\Core\Config\FileStorage;
  * Update the Image Browser view and new default configurations.
  */
 function crop_image_update_8100() {
-  $source = new FileStorage(\Drupal::service('file_system')->realpath(drupal_get_path('module', 'crop_image') . '/config/install'));
+  $source = new FileStorage(\Drupal::service('file_system')->realpath(\Drupal::service('extension.list.module')->getPath('crop_image') . '/config/install'));
   /** @var \Drupal\Core\Config\StorageInterface $active_storage */
   $active_storage = \Drupal::service('config.storage');
 
@@ -23,7 +23,7 @@ function crop_image_update_8100() {
  * Update the Image Browser view.
  */
 function crop_image_update_8101() {
-  $source = new FileStorage(\Drupal::service('file_system')->realpath(drupal_get_path('module', 'crop_image') . '/config/install'));
+  $source = new FileStorage(\Drupal::service('file_system')->realpath(\Drupal::service('extension.list.module')->getPath('crop_image') . '/config/install'));
   /** @var \Drupal\Core\Config\StorageInterface $active_storage */
   $active_storage = \Drupal::service('config.storage');
 
diff --git a/src/Plugin/Field/FieldWidget/ImageBrowserCropWidget.php b/src/Plugin/Field/FieldWidget/ImageBrowserCropWidget.php
index 570c98f..32d0448 100644
--- a/src/Plugin/Field/FieldWidget/ImageBrowserCropWidget.php
+++ b/src/Plugin/Field/FieldWidget/ImageBrowserCropWidget.php
@@ -81,10 +81,10 @@ class ImageBrowserCropWidget extends FileBrowserWidget {
    *   The current user.
    * @param \Drupal\Core\Messenger\MessengerInterface $messenger
    *   The messenger.
-   * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mime_type_guesser
+   * @param \Symfony\Component\Mime\MimeTypesInterface $mime_type_guesser
    *   The mime type guesser service.
    */
-  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager, FieldWidgetDisplayManager $field_display_manager, ConfigFactoryInterface $config_factory, EntityDisplayRepositoryInterface $display_repository, ModuleHandlerInterface $module_handler, AccountInterface $current_user, MimeTypeGuesserInterface $mime_type_guesser, MessengerInterface $messenger, ImageWidgetCropInterface $iwc_manager) {
+  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager, FieldWidgetDisplayManager $field_display_manager, ConfigFactoryInterface $config_factory, EntityDisplayRepositoryInterface $display_repository, ModuleHandlerInterface $module_handler, AccountInterface $current_user, \Symfony\Component\Mime\MimeTypesInterface $mime_type_guesser, MessengerInterface $messenger, ImageWidgetCropInterface $iwc_manager) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $third_party_settings, $entity_type_manager, $field_display_manager, $config_factory, $display_repository, $module_handler, $current_user, $mime_type_guesser, $messenger);
     $this->imageWidgetCropManager = $iwc_manager;
   }
