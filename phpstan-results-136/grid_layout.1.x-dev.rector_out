modules/contrib/grid_layout/grid_layout.module
modules/contrib/grid_layout/src/Event/GridLayoutBuildEvent.php
modules/contrib/grid_layout/src/Event/GridLayoutDefaultConfigEvent.php
modules/contrib/grid_layout/src/Event/GridLayoutFormBuildEvent.php
modules/contrib/grid_layout/src/Event/GridLayoutFormEvent.php
modules/contrib/grid_layout/src/Event/GridLayoutFormSubmitEvent.php
modules/contrib/grid_layout/src/Event/GridLayoutFormValidateEvent.php
modules/contrib/grid_layout/src/Event/GridLayoutRegionsAlterEvent.php
modules/contrib/grid_layout/src/EventSubscriber/GridLayoutBuildSubscriber.php
modules/contrib/grid_layout/src/EventSubscriber/GridLayoutFormSubscriber.php
modules/contrib/grid_layout/src/GridLayoutEvents.php
modules/contrib/grid_layout/src/Plugin/Layout/GridLayout.php

5 files with changes
====================

1) modules/contrib/grid_layout/src/Plugin/Layout/GridLayout.php:66

    ---------- begin diff ----------
@@ @@
       'columns' => [],
     ];
     $event = new GridLayoutDefaultConfigEvent($this, $default_config);
-    $this->dispatcher->dispatch(GridLayoutEvents::DEFAULT_CONFIG, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::DEFAULT_CONFIG);
     return $event->getDefaultConfig();
   }

@@ @@
    */
   public function build(array $regions) {
     $event = new GridLayoutRegionsAlterEvent($this, $regions);
-    $this->dispatcher->dispatch(GridLayoutEvents::REGIONS_ALTER, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::REGIONS_ALTER);
     $regions = $event->getRegions();

     $build = parent::build($regions);

     $event = new GridLayoutBuildEvent($this, $build, $regions);
-    $this->dispatcher->dispatch(GridLayoutEvents::BUILD_LAYOUT, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::BUILD_LAYOUT);
     return $event->getBuild();
   }

@@ @@
     $form = parent::buildConfigurationForm($form, $form_state);

     $event = new GridLayoutFormBuildEvent($this, $form, $form_state);
-    $this->dispatcher->dispatch(GridLayoutEvents::FORM_BUILD, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::FORM_BUILD);
     return $event->getForm();
   }

@@ @@
     parent::validateConfigurationForm($form, $form_state);

     $event = new GridLayoutFormValidateEvent($this, $form, $form_state);
-    $this->dispatcher->dispatch(GridLayoutEvents::FORM_VALIDATE, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::FORM_VALIDATE);
     $form = $event->getForm();
     $form_state = $event->getFormState();
   }
@@ @@
     parent::submitConfigurationForm($form, $form_state);

     $event = new GridLayoutFormSubmitEvent($this, $form, $form_state);
-    $this->dispatcher->dispatch(GridLayoutEvents::FORM_SUBMIT, $event);
+    $this->dispatcher->dispatch($event, GridLayoutEvents::FORM_SUBMIT);
     $form = $event->getForm();
     $form_state = $event->getFormState();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/grid_layout/src/Event/GridLayoutRegionsAlterEvent.php:4

    ---------- begin diff ----------
@@ @@
 use Drupal\grid_layout\Plugin\Layout\GridLayout;
 use Symfony\Component\EventDispatcher\Event;

-class GridLayoutRegionsAlterEvent extends Event {
+class GridLayoutRegionsAlterEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * @var \Drupal\grid_layout\Plugin\Layout\GridLayout
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/grid_layout/src/Event/GridLayoutFormEvent.php:5

    ---------- begin diff ----------
@@ @@
 use Drupal\grid_layout\Plugin\Layout\GridLayout;
 use Symfony\Component\EventDispatcher\Event;

-abstract class GridLayoutFormEvent extends Event {
+abstract class GridLayoutFormEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The grid layout plugin.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/grid_layout/src/Event/GridLayoutDefaultConfigEvent.php:4

    ---------- begin diff ----------
@@ @@
 use Drupal\grid_layout\Plugin\Layout\GridLayout;
 use Symfony\Component\EventDispatcher\Event;

-class GridLayoutDefaultConfigEvent extends Event {
+class GridLayoutDefaultConfigEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The grid layout plugin.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/grid_layout/src/Event/GridLayoutBuildEvent.php:4

    ---------- begin diff ----------
@@ @@
 use Drupal\grid_layout\Plugin\Layout\GridLayout;
 use Symfony\Component\EventDispatcher\Event;

-class GridLayoutBuildEvent extends Event {
+class GridLayoutBuildEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The grid layout plugin.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

