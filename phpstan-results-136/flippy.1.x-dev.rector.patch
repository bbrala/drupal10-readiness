diff --git a/flippy.info.yml b/flippy.info.yml
index 0a631cd..d34fd7b 100644
--- a/flippy.info.yml
+++ b/flippy.info.yml
@@ -1,5 +1,4 @@
 name: Flippy
-core: 8.x
 description: Allows administrators to define custom pagers for navigation in lists of nodes.
 type: module
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
diff --git a/src/FlippyEvent.php b/src/FlippyEvent.php
index 1fd8b4a..18c1eeb 100644
--- a/src/FlippyEvent.php
+++ b/src/FlippyEvent.php
@@ -8,7 +8,7 @@ use Drupal\node\NodeInterface;
 /**
  * Defines a Flippy Node event.
  */
-class FlippyEvent extends Event {
+class FlippyEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   protected $queries;
   protected $node;
diff --git a/src/FlippyPager.php b/src/FlippyPager.php
index 609bf2a..f6ba2a9 100644
--- a/src/FlippyPager.php
+++ b/src/FlippyPager.php
@@ -304,7 +304,7 @@ class FlippyPager {
         'last' => $last,
       ];
       $event = new FlippyEvent($queries, $node);
-      $this->eventDispatcher->dispatch('buildFlippyQuery', $event);
+      $this->eventDispatcher->dispatch($event, 'buildFlippyQuery');
       $queries = $event->getQueries();
 
       // Execute the queries.
diff --git a/tests/src/Functional/FlippyTest.php b/tests/src/Functional/FlippyTest.php
index 1ce698b..973f894 100644
--- a/tests/src/Functional/FlippyTest.php
+++ b/tests/src/Functional/FlippyTest.php
@@ -26,7 +26,7 @@ class FlippyTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create an article content type that we will use for testing.
@@ -71,8 +71,14 @@ class FlippyTest extends BrowserTestBase {
     $this->assertSession()->statusCodeEquals(200);
 
     // Confirm that the front page contains the standard text.
-    $this->assertNoText('Previous');
-    $this->assertText('Next');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('Previous');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Next');
 
     // Load the second page.
     $this->drupalGet('/node/2');
@@ -81,8 +87,14 @@ class FlippyTest extends BrowserTestBase {
     $this->assertSession()->statusCodeEquals(200);
 
     // Confirm that the front page contains the standard text.
-    $this->assertText('Previous');
-    $this->assertText('Next');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Previous');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Next');
 
     // Load the last page.
     $this->drupalGet('/node/3');
@@ -91,8 +103,14 @@ class FlippyTest extends BrowserTestBase {
     $this->assertSession()->statusCodeEquals(200);
 
     // Confirm that the front page contains the standard text.
-    $this->assertText('Previous');
-    $this->assertNoText('Next');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Previous');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('Next');
   }
 
 }
