modules/contrib/doc_serialization/doc_serialization.install
modules/contrib/doc_serialization/src/Encoder/Doc.php
modules/contrib/doc_serialization/src/Encoder/Docx.php
modules/contrib/doc_serialization/src/EventSubscriber/Subscriber.php
modules/contrib/doc_serialization/src/Plugin/views/display/WordExport.php
modules/contrib/doc_serialization/src/Plugin/views/display_extender/DocSerialization.php
modules/contrib/doc_serialization/src/Plugin/views/style/WordExport.php
modules/contrib/doc_serialization/tests/src/Unit/EventSubscriber/SubscriberTest.php
modules/contrib/doc_serialization/vendor/autoload.php
modules/contrib/doc_serialization/vendor/composer/ClassLoader.php
modules/contrib/doc_serialization/vendor/composer/autoload_classmap.php
modules/contrib/doc_serialization/vendor/composer/autoload_namespaces.php
modules/contrib/doc_serialization/vendor/composer/autoload_psr4.php
modules/contrib/doc_serialization/vendor/composer/autoload_real.php
modules/contrib/doc_serialization/vendor/composer/autoload_static.php
modules/contrib/doc_serialization/vendor/pclzip/pclzip/pclzip.lib.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/Adapter/Zip/PclZipAdapter.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/Adapter/Zip/ZipArchiveAdapter.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/Adapter/Zip/ZipInterface.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/Autoloader.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/Drawing.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/File.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/Font.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/Microsoft/OLERead.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/Text.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/XMLReader.php
modules/contrib/doc_serialization/vendor/phpoffice/common/src/Common/XMLWriter.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/FileTest.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/FontTest.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/TextTest.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/_includes/TestHelperZip.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/_includes/XmlDocument.php
modules/contrib/doc_serialization/vendor/phpoffice/common/tests/bootstrap.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/bootstrap.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_01_SimpleText.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_02_TabStops.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_03_Sections.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_04_Textrun.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_05_Multicolumn.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_06_Footnote.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_07_TemplateCloneRow.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_08_ParagraphPagination.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_09_Tables.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_10_EastAsianFontStyle.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_11_ReadWord2007.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_11_ReadWord97.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_12_HeaderFooter.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_13_Images.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_14_ListItem.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_15_Link.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_16_Object.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_17_TitleTOC.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_18_Watermark.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_19_TextBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_20_BGColor.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_21_TableRowRules.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_22_CheckBox.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_23_TemplateBlock.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_24_ReadODText.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_25_TextBox.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_26_Html.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_27_Field.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_28_ReadRTF.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_29_Line.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_30_ReadHTML.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_31_Shape.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_32_Chart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_33_FormField.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_34_SDT.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_35_InternalLink.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_36_RTL.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_37_Comments.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_38_Protection.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_Footer.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/Sample_Header.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/samples/index.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Collection/AbstractCollection.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Collection/Bookmarks.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Collection/Charts.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Collection/Comments.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Collection/Endnotes.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Collection/Footnotes.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Collection/Titles.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/ComplexType/FootnoteProperties.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/ComplexType/ProofState.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/ComplexType/TrackChangesView.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractContainer.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/AbstractElement.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Bookmark.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Cell.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Chart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/CheckBox.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Comment.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Endnote.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Field.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Footer.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Footnote.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/FormField.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Header.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Image.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Line.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Link.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/ListItem.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/ListItemRun.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Object.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/PageBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/PreserveText.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Row.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/SDT.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Section.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Shape.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/TOC.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Table.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Text.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/TextBox.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/TextBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/TextRun.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/Title.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Element/TrackChange.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Escaper/AbstractEscaper.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Escaper/EscaperInterface.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Escaper/RegExp.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Escaper/Rtf.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Escaper/Xml.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Exception/CopyFileException.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Exception/CreateTemporaryFileException.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Exception/Exception.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Exception/InvalidImageException.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Exception/InvalidObjectException.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Exception/InvalidStyleException.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Exception/UnsupportedImageTypeException.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/IOFactory.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Media.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Metadata/Compatibility.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Metadata/DocInfo.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Metadata/Protection.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Metadata/Settings.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/PhpWord.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/AbstractReader.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/HTML.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/MsDoc.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/AbstractPart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Content.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/ODText/Meta.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/RTF/Document.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/ReaderInterface.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/AbstractPart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsApp.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCore.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/DocPropsCustom.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Document.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Endnotes.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Footnotes.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Numbering.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Settings.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Reader/Word2007/Styles.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Settings.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Shared/AbstractEnum.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Shared/Converter.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Shared/Html.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Shared/Microsoft/PasswordEncoder.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Shared/OLERead.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Shared/PCLZip/pclzip.lib.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Shared/ZipArchive.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/SimpleType/DocProtect.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/SimpleType/Jc.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/SimpleType/JcTable.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/SimpleType/LineSpacingRule.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/SimpleType/NumberFormat.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/SimpleType/TextAlignment.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/SimpleType/Zoom.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/AbstractStyle.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Border.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Cell.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Chart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Extrusion.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Fill.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Font.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Frame.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Image.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Indentation.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Language.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Line.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/LineNumbering.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/ListItem.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Numbering.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/NumberingLevel.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Outline.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Paper.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Paragraph.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Row.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Section.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Shading.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Shadow.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Shape.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Spacing.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/TOC.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Tab.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/Table.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Style/TextBox.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Template.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/TemplateProcessor.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/AbstractWriter.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/AbstractElement.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Container.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Endnote.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Footnote.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Image.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Link.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/ListItem.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/PageBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Table.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Text.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/TextBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/TextRun.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Element/Title.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/AbstractPart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/Body.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Part/Head.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Style/AbstractStyle.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Style/Font.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Style/Generic.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Style/Image.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/HTML/Style/Paragraph.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/AbstractElement.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/Container.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/Image.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/Link.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/PageBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/Table.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/Text.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/TextBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/TextRun.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Element/Title.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/AbstractPart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Content.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Manifest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Meta.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Mimetype.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Part/Styles.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Style/AbstractStyle.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Style/Font.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Style/Image.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Style/Paragraph.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Style/Section.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/ODText/Style/Table.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF/AbstractRenderer.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF/DomPDF.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF/MPDF.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/PDF/TCPDF.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/AbstractElement.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/Container.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/Image.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/Link.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/ListItem.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/PageBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/Table.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/Text.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/TextBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/TextRun.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Element/Title.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/AbstractPart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/Document.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Part/Header.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Style/AbstractStyle.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Style/Border.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Style/Font.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Style/Paragraph.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/RTF/Style/Section.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/AbstractElement.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Bookmark.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Chart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/CheckBox.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Container.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Endnote.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Field.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Footnote.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/FormField.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Image.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Line.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Link.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/ListItem.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/ListItemRun.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Object.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/PageBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/ParagraphAlignment.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/PreserveText.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/SDT.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Shape.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/TOC.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Table.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/TableAlignment.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Text.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/TextBox.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/TextBreak.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/TextRun.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Element/Title.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/AbstractPart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Chart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Comments.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/ContentTypes.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/DocPropsApp.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/DocPropsCore.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/DocPropsCustom.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Document.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Endnotes.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/FontTable.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footer.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Footnotes.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Header.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Numbering.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Rels.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/RelsDocument.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/RelsPart.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Settings.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Styles.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/Theme.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Part/WebSettings.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/AbstractStyle.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Cell.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Extrusion.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Fill.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Font.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Frame.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Image.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Indentation.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Line.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/LineNumbering.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/MarginBorder.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Outline.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Paragraph.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Row.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Section.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Shading.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Shadow.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Shape.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Spacing.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Tab.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/Table.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/Word2007/Style/TextBox.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/src/PhpWord/Writer/WriterInterface.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Collection/CollectionTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/AbstractElementTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/BookmarkTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/CheckBoxTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/LineTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/LinkTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemRunTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/ListItemTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/PageBreakTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/PreserveTextTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/TOCTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/TableTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBoxTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/TextBreakTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/TextRunTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/TextTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/TitleTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Metadata/DocInfoTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Reader/ODTextTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Reader/Word2007Test.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/SettingsTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Shared/HtmlTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Shared/Microsoft/PasswordEncoderTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Shared/ZipArchiveTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/CellTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/IndentationTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/LineNumberingTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/LineTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/ListItemTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingLevelTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/NumberingTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/RowTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/ShadingTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/SpacingTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/TOCTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/TabTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/TableTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/StyleTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/ElementTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/StyleTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/ElementTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/StyleTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/DomPDFTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/MPDFTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDF/TCPDFTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/ElementTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTF/StyleTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FooterTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/HeaderTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/StyleTest.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/_includes/TestHelperDOCX.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/_includes/XmlDocument.php
modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/bootstrap.php
modules/contrib/doc_serialization/vendor/zendframework/zend-escaper/src/Escaper.php
modules/contrib/doc_serialization/vendor/zendframework/zend-escaper/src/Exception/ExceptionInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-escaper/src/Exception/InvalidArgumentException.php
modules/contrib/doc_serialization/vendor/zendframework/zend-escaper/src/Exception/RuntimeException.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/benchmark/ExtractPriorityQueue.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/benchmark/InsertPriorityQueue.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/benchmark/RemovePriorityQueue.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/AbstractOptions.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ArrayObject.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ArraySerializableInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ArrayStack.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ArrayUtils.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ArrayUtils/MergeRemoveKey.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ArrayUtils/MergeReplaceKey.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ArrayUtils/MergeReplaceKeyInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ConsoleHelper.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/DispatchableInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ErrorHandler.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Exception/BadMethodCallException.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Exception/DomainException.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Exception/ExceptionInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Exception/ExtensionNotLoadedException.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Exception/InvalidArgumentException.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Exception/LogicException.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Exception/RuntimeException.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/FastPriorityQueue.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Glob.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Guard/AllGuardsTrait.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Guard/ArrayOrTraversableGuardTrait.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Guard/EmptyGuardTrait.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Guard/NullGuardTrait.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/InitializableInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/JsonSerializable.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Message.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/MessageInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ParameterObjectInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Parameters.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ParametersInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/PriorityList.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/PriorityQueue.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Request.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/RequestInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/Response.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/ResponseInterface.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/SplPriorityQueue.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/SplQueue.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/SplStack.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/StringUtils.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/StringWrapper/AbstractStringWrapper.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/StringWrapper/Iconv.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/StringWrapper/Intl.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/StringWrapper/MbString.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/StringWrapper/Native.php
modules/contrib/doc_serialization/vendor/zendframework/zend-stdlib/src/StringWrapper/StringWrapperInterface.php

65 files with changes
=====================

1) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007Test.php:30

    ---------- begin diff ----------
@@ @@
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ @@

     /**
      * Use disk caching exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testSetUseDiskCachingException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         $dir = implode(DIRECTORY_SEPARATOR, array(PHPWORD_TESTS_BASE_DIR, 'foo'));

         $object = new Word2007();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/ParagraphTest.php:29

    ---------- begin diff ----------
@@ @@
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Style/FontTest.php:29

    ---------- begin diff ----------
@@ @@
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/PartTest.php:29

    ---------- begin diff ----------
@@ @@
      * Test exception when no type or target assigned to a relation
      *
      * @covers \PhpOffice\PhpWord\Writer\Word2007\Part\Rels::writeRel
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage Invalid parameters passed.
      */
     public function testRelsWriteRelException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('Invalid parameters passed.');
         $object = new RelsPart();
         $object->setMedia(array(array('type' => '', 'target' => '')));
         $object->write();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/StylesTest.php:33

    ---------- begin diff ----------
@@ @@
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/SettingsTest.php:35

    ---------- begin diff ----------
@@ @@
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/NumberingTest.php:33

    ---------- begin diff ----------
@@ @@
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/FootnotesTest.php:26

    ---------- begin diff ----------
@@ @@
  */
 class FootnotesTest extends \PHPUnit\Framework\TestCase
 {
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/DocumentTest.php:36

    ---------- begin diff ----------
@@ @@
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ @@
         // behind
         $element = $doc->getElement('/w:document/w:body/w:p[2]/w:r/w:pict/v:shape');
         $style = $element->getAttribute('style');
-        $this->assertRegExp('/z\-index:\-[0-9]*/', $style);
+        $this->assertMatchesRegularExpression('/z\-index:\-[0-9]*/', $style);

         // square
         $element = $doc->getElement('/w:document/w:body/w:p[4]/w:r/w:pict/v:shape/w10:wrap');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameMethodRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/CommentsTest.php:29

    ---------- begin diff ----------
@@ @@
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/Part/AbstractPartTest.php:39

    ---------- begin diff ----------
@@ @@

     /**
      * covers   ::getParentWriter
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage No parent WriterInterface assigned.
      */
     public function testSetGetParentWriterNull()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('No parent WriterInterface assigned.');
         $object = $this->getMockForAbstractClass('PhpOffice\\PhpWord\\Writer\\Word2007\\Part\\AbstractPart');
         $object->getParentWriter();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/Word2007/ElementTest.php:31

    ---------- begin diff ----------
@@ @@
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/RTFTest.php:38

    ---------- begin diff ----------
@@ @@

     /**
      * Construct with null
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage No PhpWord assigned.
      */
     public function testConstructWithNull()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('No PhpWord assigned.');
         $object = new RTF();
         $object->getPhpWord();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/PDFTest.php:47

    ---------- begin diff ----------
@@ @@

     /**
      * Test construct exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage PDF rendering library or library path has not been defined.
      */
     public function testConstructException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('PDF rendering library or library path has not been defined.');
         $writer = new PDF(new PhpWord());
         $writer->save();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


15) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODTextTest.php:50

    ---------- begin diff ----------
@@ @@

     /**
      * Construct with null
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage No PhpWord assigned.
      */
     public function testConstructWithNull()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('No PhpWord assigned.');
         $object = new ODText();
         $object->getPhpWord();
     }
@@ @@

     /**
      * Use disk caching exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testSetUseDiskCachingException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         $dir = implode(DIRECTORY_SEPARATOR, array(PHPWORD_TESTS_BASE_DIR, 'foo'));

         $object = new ODText();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


16) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/ContentTest.php:31

    ---------- begin diff ----------
@@ @@
     /**
      * Executed before each method of the class
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/ODText/Part/AbstractPartTest.php:39

    ---------- begin diff ----------
@@ @@

     /**
      * covers   ::getParentWriter
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage No parent WriterInterface assigned.
      */
     public function testSetGetParentWriterNull()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('No parent WriterInterface assigned.');
         $object = $this->getMockForAbstractClass('PhpOffice\\PhpWord\\Writer\\ODText\\Part\\AbstractPart');
         $object->getParentWriter();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


18) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTMLTest.php:39

    ---------- begin diff ----------
@@ @@

     /**
      * Construct with null
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage No PhpWord assigned.
      */
     public function testConstructWithNull()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('No PhpWord assigned.');
         $object = new HTML();
         $object->getPhpWord();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


19) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Writer/HTML/PartTest.php:25

    ---------- begin diff ----------
@@ @@
 {
     /**
      * Test get parent writer exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testGetParentWriterException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         $object = new Body();
         $object->getParentWriter();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


20) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/TemplateProcessorTest.php:112

    ---------- begin diff ----------
@@ @@
      * XSL stylesheet cannot be applied on failure in setting parameter value.
      *
      * @covers                   ::applyXslStyleSheet
-     * @expectedException        \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage Could not set values for the given XSL style sheet parameters.
      * @test
      */
     final public function testXslStyleSheetCanNotBeAppliedOnFailureOfSettingParameterValue()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('Could not set values for the given XSL style sheet parameters.');
         $templateProcessor = new TemplateProcessor(__DIR__ . '/_files/templates/blank.docx');

         $xslDomDocument = new \DOMDocument();
@@ @@
      * XSL stylesheet can be applied on failure of loading XML from template.
      *
      * @covers                   ::applyXslStyleSheet
-     * @expectedException        \PhpOffice\PhpWord\Exception\Exception
-     * @expectedExceptionMessage Could not load the given XML document.
      * @test
      */
     final public function testXslStyleSheetCanNotBeAppliedOnFailureOfLoadingXmlFromTemplate()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
+        $this->expectExceptionMessage('Could not load the given XML document.');
         $templateProcessor = new TemplateProcessor(__DIR__ . '/_files/templates/corrupted_main_document_part.docx');

         $xslDomDocument = new \DOMDocument();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/TextBoxTest.php:95

    ---------- begin diff ----------
@@ @@

     /**
      * Test setWrappingStyle exception
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testSetWrappingStyleException()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $object = new TextBox();
         $object->setWrappingStyle('foo');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


22) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/SectionTest.php:32

    ---------- begin diff ----------
@@ @@
         $oSettings = new Section();

         $this->assertEquals('portrait', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), 0.000000001, '');
         $this->assertEquals('A4', $oSettings->getPaperSize());

         $oSettings->setSettingValue('orientation', 'landscape');
         $this->assertEquals('landscape', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), 0.000000001, '');

         $iVal = rand(1, 1000);
         $oSettings->setSettingValue('borderSize', $iVal);
@@ @@
         // Section Settings
         $oSettings = new Section();

-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), 0.000000001, '');
         $iVal = rand(1, 1000);
         $oSettings->setSettingValue('pageSizeW', $iVal);
         $this->assertEquals($iVal, $oSettings->getPageSizeW());
@@ @@
         // Section Settings
         $oSettings = new Section();

-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), 0.000000001, '');
         $iVal = rand(1, 1000);
         $oSettings->setSettingValue('pageSizeH', $iVal);
         $this->assertEquals($iVal, $oSettings->getPageSizeH());
@@ @@

         $oSettings->setLandscape();
         $this->assertEquals('landscape', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeH(), 0.000000001, '');
     }

     /**
@@ @@

         $oSettings->setPortrait();
         $this->assertEquals('portrait', $oSettings->getOrientation());
-        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '', 0.000000001);
-        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '', 0.000000001);
+        $this->assertEquals(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_WIDTH, $oSettings->getPageSizeW(), 0.000000001, '');
+        $this->assertEquals(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), '');
+        $this->assertEqualsWithDelta(Section::DEFAULT_HEIGHT, $oSettings->getPageSizeH(), 0.000000001, '');
     }

     /**
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


23) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/ParagraphTest.php:30

    ---------- begin diff ----------
@@ @@
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ @@

     /**
      * Test line height exception by using nonnumeric value
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidStyleException
      */
     public function testLineHeightException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidStyleException::class);
         $object = new Paragraph();
         $object->setLineHeight('a');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/PaperTest.php:29

    ---------- begin diff ----------
@@ @@
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ @@
         $object = new Paper('B5');

         $this->assertEquals('B5', $object->getSize());
-        $this->assertEquals(9977.9527559055, $object->getWidth(), '', 0.000000001);
-        $this->assertEquals(14173.228346457, $object->getHeight(), '', 0.000000001);
+        $this->assertEquals(9977.9527559055, $object->getWidth(), '');
+        $this->assertEqualsWithDelta(9977.9527559055, $object->getWidth(), 0.000000001, '');
+        $this->assertEquals(14173.228346457, $object->getHeight(), '');
+        $this->assertEqualsWithDelta(14173.228346457, $object->getHeight(), 0.000000001, '');
     }

     /**
@@ @@
         $object->setSize('Folio');

         $this->assertEquals('Folio', $object->getSize());
-        $this->assertEquals(12240, $object->getWidth(), '', 0.1);
-        $this->assertEquals(18720, $object->getHeight(), '', 0.1);
+        $this->assertEquals(12240, $object->getWidth(), '');
+        $this->assertEqualsWithDelta(12240, $object->getWidth(), 0.1, '');
+        $this->assertEquals(18720, $object->getHeight(), '');
+        $this->assertEqualsWithDelta(18720, $object->getHeight(), 0.1, '');
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/LanguageTest.php:50

    ---------- begin diff ----------
@@ @@

     /**
      * Test throws exception if wrong locale is given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongLanguage()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $language = new Language();
         $language->setLatin('fr');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


26) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/ImageTest.php:77

    ---------- begin diff ----------
@@ @@

     /**
      * Test setWrappingStyle exception
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testSetWrappingStyleException()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $object = new Image();
         $object->setWrappingStyle('foo');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


27) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/FontTest.php:30

    ---------- begin diff ----------
@@ @@
     /**
      * Tear down after each test
      */
-    public function tearDown()
+    public function tearDown(): void
     {
         TestHelperDOCX::clear();
     }
@@ @@

         $this->assertEquals('text', $object->getStyleType());
         $this->assertInstanceOf('PhpOffice\\PhpWord\\Style\\Paragraph', $object->getParagraphStyle());
-        $this->assertInternalType('array', $object->getStyleValues());
+        $this->assertIsArray($object->getStyleValues());
     }

     /**
@@ @@

     /**
      * Test line height exception by using nonnumeric value
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidStyleException
      */
     public function testLineHeightException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidStyleException::class);
         $object = new Font();
         $object->setLineHeight('a');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Style/AbstractStyleTest.php:63

    ---------- begin diff ----------
@@ @@

     /**
      * Test setEnumVal exception
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testSetValEnumException()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $stub = $this->getMockForAbstractClass('\PhpOffice\PhpWord\Style\AbstractStyle');

         $this->assertEquals('b', self::callProtectedMethod($stub, 'setEnumVal', array('z', array('a', 'b'), 'b')));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


29) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Shared/ConverterTest.php:88

    ---------- begin diff ----------
@@ @@
             $this->assertEquals(round($value / 9525), $result);

             $result = Converter::picaToPoint($value);
-            $this->assertEquals($value / 6 * 72, $result, '', 0.00001);
+            $this->assertEquals($value / 6 * 72, $result, '');
+            $this->assertEqualsWithDelta($value / 6 * 72, $result, 0.00001, '');

             $result = Converter::degreeToAngle($value);
             $this->assertEquals((int) round($value * 60000), $result);
@@ @@
         $this->assertEquals(7.5, Converter::cssToPoint('10px'));
         $this->assertEquals(720, Converter::cssToPoint('10in'));
         $this->assertEquals(120, Converter::cssToPoint('10pc'));
-        $this->assertEquals(28.346457, Converter::cssToPoint('10mm'), '', 0.000001);
-        $this->assertEquals(283.464567, Converter::cssToPoint('10cm'), '', 0.000001);
+        $this->assertEquals(28.346457, Converter::cssToPoint('10mm'), '');
+        $this->assertEqualsWithDelta(28.346457, Converter::cssToPoint('10mm'), 0.000001, '');
+        $this->assertEquals(283.464567, Converter::cssToPoint('10cm'), '');
+        $this->assertEqualsWithDelta(283.464567, Converter::cssToPoint('10cm'), 0.000001, '');
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


30) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Reader/RTFTest.php:38

    ---------- begin diff ----------
@@ @@

     /**
      * Test load exception
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage Cannot read
      */
     public function testLoadException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Cannot read');
         $filename = __DIR__ . '/../_files/documents/foo.rtf';
         IOFactory::load($filename, 'RTF');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


31) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Reader/MsDocTest.php:58

    ---------- begin diff ----------
@@ @@

     /**
      * Test exception on not existing file
-     * @expectedException \Exception
      */
     public function testFailIfFileNotReadable()
     {
+        $this->expectException(\Exception::class);
         $filename = __DIR__ . '/../_files/documents/not_existing_reader.doc';
         IOFactory::load($filename, 'MsDoc');
     }
@@ @@

     /**
      * Test exception on non OLE document
-     * @expectedException \Exception
      */
     public function testFailIfFileNotOle()
     {
+        $this->expectException(\Exception::class);
         $filename = __DIR__ . '/../_files/documents/reader.odt';
         IOFactory::load($filename, 'MsDoc');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


32) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Reader/HTMLTest.php:38

    ---------- begin diff ----------
@@ @@

     /**
      * Test load exception
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage Cannot read
      */
     public function testLoadException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Cannot read');
         $filename = __DIR__ . '/../_files/documents/foo.html';
         IOFactory::load($filename, 'HTML');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


33) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/PhpWordTest.php:132

    ---------- begin diff ----------
@@ @@
      * Test load template exception
      *
      * @deprecated 0.12.0
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testLoadTemplateException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         $templateFqfn = implode(
             DIRECTORY_SEPARATOR,
             array(PHPWORD_TESTS_BASE_DIR, 'PhpWord', 'Tests', '_files', 'templates', 'blanks.docx')
@@ @@

     /**
      * Test calling undefined method
-     *
-     * @expectedException \BadMethodCallException
-     * @expectedExceptionMessage is not defined
      */
     public function testCallUndefinedMethod()
     {
+        $this->expectException(\BadMethodCallException::class);
+        $this->expectExceptionMessage('is not defined');
         $phpWord = new PhpWord();
         $phpWord->undefinedMethod();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


34) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Metadata/SettingsTest.php:70

    ---------- begin diff ----------
@@ @@

     /**
      * Test setting an invalid salt
-     * @expectedException \InvalidArgumentException
      */
     public function testInvalidSalt()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $protection = new Protection();
         $protection->setSalt('123');
     }
@@ @@
         $this->assertEquals(ProofState::DIRTY, $oSettings->getProofState()->getSpelling());
     }

-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testWrongProofStateGrammar()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $proofState = new ProofState();
         $proofState->setGrammar('wrong');
     }

-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testWrongProofStateSpelling()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $proofState = new ProofState();
         $proofState->setSpelling('wrong');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


35) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/MediaTest.php:104

    ---------- begin diff ----------
@@ @@

     /**
      * Add image element exception
-     *
-     * @expectedException \Exception
-     * @expectedExceptionMessage Image object not assigned.
      */
     public function testAddElementImageException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Image object not assigned.');
         Media::addElement('section', 'image', __DIR__ . '/_files/images/mars.jpg');
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


36) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/IOFactoryTest.php:36

    ---------- begin diff ----------
@@ @@

     /**
      * Create non-existing writer
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testNonexistentWriterCanNotBeCreated()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         IOFactory::createWriter(new PhpWord(), 'Word2006');
     }

@@ @@

     /**
      * Create non-existing reader
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      */
     public function testNonexistentReaderCanNotBeCreated()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         IOFactory::createReader('Word2006');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


37) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/UnsupportedImageTypeExceptionTest.php:27

    ---------- begin diff ----------
@@ @@
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
      * @covers            \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
      */
     public function testThrowException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\UnsupportedImageTypeException::class);
         throw new UnsupportedImageTypeException();
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


38) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidStyleExceptionTest.php:27

    ---------- begin diff ----------
@@ @@
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidStyleException
      * @covers            \PhpOffice\PhpWord\Exception\InvalidStyleException
      */
     public function testThrowException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidStyleException::class);
         throw new InvalidStyleException();
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


39) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/InvalidImageExceptionTest.php:27

    ---------- begin diff ----------
@@ @@
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      * @covers            \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testThrowException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidImageException::class);
         throw new InvalidImageException();
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


40) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/ExceptionTest.php:27

    ---------- begin diff ----------
@@ @@
     /**
      * Throw new exception
      *
-     * @expectedException \PhpOffice\PhpWord\Exception\Exception
      * @covers            \PhpOffice\PhpWord\Exception\Exception
      */
     public function testThrowException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\Exception::class);
         throw new Exception();
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


41) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/CreateTemporaryFileExceptionTest.php:26

    ---------- begin diff ----------
@@ @@
      * CreateTemporaryFileException can be thrown.
      *
      * @covers            ::__construct()
-     * @expectedException \PhpOffice\PhpWord\Exception\CreateTemporaryFileException
      * @test
      */
     public function testCreateTemporaryFileExceptionCanBeThrown()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\CreateTemporaryFileException::class);
         throw new CreateTemporaryFileException();
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


42) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Exception/CopyFileExceptionTest.php:26

    ---------- begin diff ----------
@@ @@
      * CopyFileException can be thrown.
      *
      * @covers            ::__construct()
-     * @expectedException \PhpOffice\PhpWord\Exception\CopyFileException
      * @test
      */
     public function testCopyFileExceptionCanBeThrown()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\CopyFileException::class);
         throw new CopyFileException('C:\source\dummy.txt', 'C:\destination\dummy.txt');
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


43) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/SectionTest.php:86

    ---------- begin diff ----------
@@ @@

     /**
      * @coversNothing
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidObjectException
      */
     public function testAddObjectException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidObjectException::class);
         $source = __DIR__ . '/_files/xsl/passthrough.xsl';
         $section = new Section(0);
         $section->addObject($source);
@@ @@

     /**
      * @covers ::addHeader
-     * @expectedException \Exception
-     * @expectedExceptionMessage Invalid header/footer type.
      */
     public function testAddHeaderException()
     {
+        $this->expectException(\Exception::class);
+        $this->expectExceptionMessage('Invalid header/footer type.');
         $object = new Section(1);
         $object->addHeader('ODD');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


44) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/SDTTest.php:49

    ---------- begin diff ----------
@@ @@

     /**
      * Test set type exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid style value
      */
     public function testSetTypeException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid style value');
         $object = new SDT('comboBox');
         $object->setType('foo');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


45) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/RowTest.php:33

    ---------- begin diff ----------
@@ @@

         $this->assertInstanceOf('PhpOffice\\PhpWord\\Element\\Row', $oRow);
         $this->assertNull($oRow->getHeight());
-        $this->assertInternalType('array', $oRow->getCells());
+        $this->assertIsArray($oRow->getCells());
         $this->assertCount(0, $oRow->getCells());
         $this->assertInstanceOf('PhpOffice\\PhpWord\\Style\\Row', $oRow->getStyle());
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


46) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/ObjectTest.php:52

    ---------- begin diff ----------
@@ @@

     /**
      * Create new instance with non-supported files
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidObjectException
      */
     public function testConstructWithNotSupportedFiles()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidObjectException::class);
         $src = __DIR__ . '/../_files/xsl/passthrough.xsl';
         $oObject = new Object($src);
         $oObject->getSource();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


47) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/ImageTest.php:104

    ---------- begin diff ----------
@@ @@

     /**
      * Test invalid local image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testInvalidImageLocal()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidImageException::class);
         new Image(__DIR__ . '/../_files/images/thisisnotarealimage');
     }

     /**
      * Test invalid PHP Image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testInvalidImagePhp()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidImageException::class);
         $object = new Image('test.php');
         $object->getSource();
     }
@@ @@

     /**
      * Test unsupported image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\UnsupportedImageTypeException
      */
     public function testUnsupportedImage()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\UnsupportedImageTypeException::class);
         //disable ssl verification, never do this in real application, you should pass the certiciate instead!!!
         $arrContextOptions = array(
             'ssl' => array(
@@ @@

     /**
      * Test invalid string image
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidImageException
      */
     public function testInvalidImageString()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidImageException::class);
         $object = new Image('this_is-a_non_valid_image');
         $object->getSource();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


48) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/HeaderTest.php:175

    ---------- begin diff ----------
@@ @@
     {
         $oHeader = new Header(1);

-        $this->assertInternalType('array', $oHeader->getElements());
+        $this->assertIsArray($oHeader->getElements());
     }

     /**
@@ @@

     /**
      * Add footnote exception
-     *
-     * @expectedException \BadMethodCallException
      */
     public function testAddFootnoteException()
     {
+        $this->expectException(\BadMethodCallException::class);
         $header = new Header(1);
         $header->addFootnote();
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


49) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/FootnoteTest.php:111

    ---------- begin diff ----------
@@ @@
     public function testGetElements()
     {
         $oFootnote = new Footnote();
-        $this->assertInternalType('array', $oFootnote->getElements());
+        $this->assertIsArray($oFootnote->getElements());
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


50) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/FooterTest.php:153

    ---------- begin diff ----------
@@ @@
     {
         $oFooter = new Footer(1);

-        $this->assertInternalType('array', $oFooter->getElements());
+        $this->assertIsArray($oFooter->getElements());
     }

     /**
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


51) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/FieldTest.php:112

    ---------- begin diff ----------
@@ @@

     /**
      * Test setType exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid type
      */
     public function testSetTypeException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid type');
         $object = new Field();
         $object->setType('foo');
     }
@@ @@

     /**
      * Test setProperties exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid property
      */
     public function testSetPropertiesException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid property');
         $object = new Field('PAGE');
         $object->setProperties(array('foo' => 'bar'));
     }
@@ @@

     /**
      * Test setOptions exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid option
      */
     public function testSetOptionsException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid option');
         $object = new Field('PAGE');
         $object->setOptions(array('foo' => 'bar'));
     }
@@ @@

     /**
      * Test setText exception
-     *
-     * @expectedException \InvalidArgumentException
-     * @expectedExceptionMessage Invalid text
      */
     public function testSetTextException()
     {
+        $this->expectException(\InvalidArgumentException::class);
+        $this->expectExceptionMessage('Invalid text');
         $object = new Field('XE');
         $object->setText(array());
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


52) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/CommentTest.php:65

    ---------- begin diff ----------
@@ @@
     {
         $oComment = new Comment('Test User', new \DateTime(), 'my_initials');

-        $this->assertInternalType('array', $oComment->getElements());
+        $this->assertIsArray($oComment->getElements());
     }

     /**
@@ @@
         $this->assertEquals($iVal, $oComment->getRelationId());
     }

-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testExceptionOnCommentStartOnComment()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $dummyComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment->setCommentRangeStart($dummyComment);
     }

-    /**
-     * @expectedException \InvalidArgumentException
-     */
     public function testExceptionOnCommentEndOnComment()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $dummyComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment = new Comment('Test User', new \DateTime(), 'my_initials');
         $oComment->setCommentRangeEnd($dummyComment);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


53) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/Element/CellTest.php:185

    ---------- begin diff ----------
@@ @@

     /**
      * Test add object exception
-     *
-     * @expectedException \PhpOffice\PhpWord\Exception\InvalidObjectException
      */
     public function testAddObjectException()
     {
+        $this->expectException(\PhpOffice\PhpWord\Exception\InvalidObjectException::class);
         $src = __DIR__ . '/../_files/xsl/passthrough.xsl';
         $oCell = new Cell();
         $oCell->addObject($src);
@@ @@

     /**
      * Add preserve text exception
-     *
-     * @expectedException \BadMethodCallException
      */
     public function testAddPreserveTextException()
     {
+        $this->expectException(\BadMethodCallException::class);
         $oCell = new Cell();
         $oCell->setDocPart('Section', 1);
         $oCell->addPreserveText('text');
@@ @@
     {
         $oCell = new Cell();

-        $this->assertInternalType('array', $oCell->getElements());
+        $this->assertIsArray($oCell->getElements());
     }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


54) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/ProofStateTest.php:38

    ---------- begin diff ----------
@@ @@

     /**
      * Test throws exception if wrong grammar proof state value given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongGrammar()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $pState = new ProofState();
         $pState->setGrammar('Wrong');
     }
@@ @@

     /**
      * Test throws exception if wrong spelling proof state value given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongSpelling()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $pState = new ProofState();
         $pState->setSpelling('Wrong');
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


55) modules/contrib/doc_serialization/vendor/phpoffice/phpword/tests/PhpWord/ComplexType/FootnotePropertiesTest.php:45

    ---------- begin diff ----------
@@ @@

     /**
      * Test throws exception if wrong position given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongPos()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $footnoteProp = new FootnoteProperties();
         $footnoteProp->setPos(NumberFormat::LOWER_ROMAN);
     }
@@ @@

     /**
      * Test throws exception if wrong number format given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongNumFmt()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $footnoteProp = new FootnoteProperties();
         $footnoteProp->setNumFmt(FootnoteProperties::POSITION_DOC_END);
     }
@@ @@

     /**
      * Test throws exception if wrong number restart given
-     *
-     * @expectedException \InvalidArgumentException
      */
     public function testWrongNumRestart()
     {
+        $this->expectException(\InvalidArgumentException::class);
         $footnoteProp = new FootnoteProperties();
         $footnoteProp->setNumRestart(NumberFormat::LOWER_ROMAN);
     }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


56) modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/XMLWriterTest.php:22

    ---------- begin diff ----------
@@ @@
  *
  * @coversDefaultClass PhpOffice\Common\XMLWriter
  */
-class XMLWriterTest extends \PHPUnit_Framework_TestCase
+class XMLWriterTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


57) modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/TextTest.php:22

    ---------- begin diff ----------
@@ @@
  *
  * @coversDefaultClass PhpOffice\Common\Text
  */
-class TextTest extends \PHPUnit_Framework_TestCase
+class TextTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


58) modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/FontTest.php:22

    ---------- begin diff ----------
@@ @@
  *
  * @coversDefaultClass PhpOffice\Common\Font
  */
-class FontTest extends \PHPUnit_Framework_TestCase
+class FontTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


59) modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/FileTest.php:22

    ---------- begin diff ----------
@@ @@
  *
  * @coversDefaultClass PhpOffice\Common\File
  */
-class FileTest extends \PHPUnit_Framework_TestCase
+class FileTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


60) modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/DrawingTest.php:22

    ---------- begin diff ----------
@@ @@
  *
  * @coversDefaultClass PhpOffice\Common\IOFactory
  */
-class DrawingTest extends \PHPUnit_Framework_TestCase
+class DrawingTest extends \PHPUnit\Framework\TestCase
 {
     /**
      */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


61) modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/AutoloaderTest.php:20

    ---------- begin diff ----------
@@ @@
 /**
  * Test class for Autoloader
  */
-class AutoloaderTest extends \PHPUnit_Framework_TestCase
+class AutoloaderTest extends \PHPUnit\Framework\TestCase
 {
     /**
      * Register
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


62) modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/ZipArchiveAdapterTest.php:4

    ---------- begin diff ----------
@@ @@
 use PhpOffice\Common\Adapter\Zip\ZipArchiveAdapter;
 use PhpOffice\Common\Tests\TestHelperZip;

-class ZipArchiveAdapterTest extends \PHPUnit_Framework_TestCase
+class ZipArchiveAdapterTest extends \PHPUnit\Framework\TestCase
 {
     protected $zipTest;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


63) modules/contrib/doc_serialization/vendor/phpoffice/common/tests/Common/Tests/Adapter/Zip/PclZipAdapterTest.php:4

    ---------- begin diff ----------
@@ @@
 use PhpOffice\Common\Adapter\Zip\PclZipAdapter;
 use PhpOffice\Common\Tests\TestHelperZip;

-class PclZipAdapterTest extends \PHPUnit_Framework_TestCase
+class PclZipAdapterTest extends \PHPUnit\Framework\TestCase
 {
     protected $zipTest;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


64) modules/contrib/doc_serialization/tests/src/Unit/EventSubscriber/SubscriberTest.php:15

    ---------- begin diff ----------
@@ @@
  */
 class SubscriberTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @covers ::onKernelRequest
    */
@@ @@
     /** @var \Symfony\Component\HttpFoundation\Request $request */
     $request = $this->prophesize(Request::class);
     $request->setFormat('docx', ['application/vnd.openxmlformats-officedocument.wordprocessingml.document'])->shouldBeCalled();
-    $event = $this->prophesize(GetResponseEvent::class);
+    $event = $this->prophesize(\Symfony\Component\HttpKernel\Event\RequestEvent::class);
     $event->getRequest()->willReturn($request->reveal());
     $subscriber = new Subscriber();
     $subscriber->onKernelRequest($event->reveal());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


65) modules/contrib/doc_serialization/src/EventSubscriber/Subscriber.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Register content formats on the request object.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to get the request object to register on.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $event->getRequest()->setFormat('docx', ['application/vnd.openxmlformats-officedocument.wordprocessingml.document']);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 65 files have been changed by Rector                                      

