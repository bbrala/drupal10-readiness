modules/contrib/graphql_flag/graphql_flag.module
modules/contrib/graphql_flag/src/Plugin/GraphQL/Types/UserFlagging.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/EntityFlagging.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Types/UserFlaggingList.php
modules/contrib/graphql_flag/tests/src/Kernel/GraphQLFlagTestBase.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/EntityFlaggingCount.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/EntityFlaggingCountAmount.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/EntityFlaggingCounts.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/EntityFlaggingFlagging.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/EntityFlaggings.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/FlagId.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/UserFlagging.php
modules/contrib/graphql_flag/tests/src/Kernel/GraphQLPersonalFlagTest.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/UserFlaggingEntityId.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/UserFlaggingEntityType.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Fields/UserFlaggings.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/InputTypes/FlaggingInput.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Mutations/Flag.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Types/EntityFlagging.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Types/EntityFlaggingCount.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Types/EntityFlaggingCountList.php
modules/contrib/graphql_flag/src/Plugin/GraphQL/Types/EntityFlaggingList.php

2 files with changes
====================

1) modules/contrib/graphql_flag/tests/src/Kernel/GraphQLPersonalFlagTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->flag = $this->flagCreatePersonalFlag('node', ['page']);
   }
@@ @@
     $this->assertEmpty($result['data']['flag']['errors']);
     // Flag the entity a second time.
     $result = $this->processQuery($query, $this->getMutationInput('flag'))->toArray();
-    $this->assertEqual($result['data']['flag']['errors'][0], 'The user has already flagged the entity with the flag.');
+    $this->assertEquals($result['data']['flag']['errors'][0], 'The user has already flagged the entity with the flag.');
     // Unflag the entity.
     $result = $this->processQuery($query, $this->getMutationInput('unflag'))->toArray();
     $this->assertEmpty($result['data']['flag']['errors']);
     // Unflag the entity a second time.
     $result = $this->processQuery($query, $this->getMutationInput('unflag'))->toArray();
-    $this->assertEqual($result['data']['flag']['errors'][0], 'The entity is not flagged by the user.');
+    $this->assertEquals($result['data']['flag']['errors'][0], 'The entity is not flagged by the user.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/graphql_flag/tests/src/Kernel/GraphQLFlagTestBase.php:68

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
     $this->installEntitySchema('node');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

