diff --git a/src/Entity/WhiteLabel.php b/src/Entity/WhiteLabel.php
index bd76310..f47efe7 100644
--- a/src/Entity/WhiteLabel.php
+++ b/src/Entity/WhiteLabel.php
@@ -407,7 +407,7 @@ class WhiteLabel extends ContentEntityBase implements WhiteLabelInterface {
         }
         $paths['target'] = $paths['target'] . '/';
         $paths['id'] = $id;
-        $paths['source'] = drupal_get_path('theme', $theme) . '/';
+        $paths['source'] = \Drupal::service('extension.list.theme')->getPath($theme) . '/';
         $paths['files'] = $paths['map'] = [];
 
         // Rewrite theme stylesheets.
diff --git a/tests/src/Functional/WhiteLabelCacheTest.php b/tests/src/Functional/WhiteLabelCacheTest.php
index 07b1ff3..228ec65 100644
--- a/tests/src/Functional/WhiteLabelCacheTest.php
+++ b/tests/src/Functional/WhiteLabelCacheTest.php
@@ -36,7 +36,7 @@ class WhiteLabelCacheTest extends WhiteLabelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $image_files = $this->drupalGetTestFiles('image');
@@ -119,10 +119,10 @@ class WhiteLabelCacheTest extends WhiteLabelTestBase {
     // Should not contain.
     $this->notInBrandingBlock($this->whiteLabel->getName());
     $this->notInBrandingBlock($this->whiteLabel->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     $this->notInBrandingBlock($this->whiteLabel2->getName());
     $this->notInBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));
 
     // White label 1.
     $this->setCurrentWhiteLabel($this->whiteLabel);
@@ -131,12 +131,12 @@ class WhiteLabelCacheTest extends WhiteLabelTestBase {
     // Should contain.
     $this->inBrandingBlock($this->whiteLabel->getName());
     $this->inBrandingBlock($this->whiteLabel->getSlogan());
-    $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     // Should not contain.
     $this->notInBrandingBlock($this->defaultName);
     $this->notInBrandingBlock($this->whiteLabel2->getName());
     $this->notInBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));
 
     // White label 2.
     $this->setCurrentWhiteLabel($this->whiteLabel2);
@@ -145,12 +145,12 @@ class WhiteLabelCacheTest extends WhiteLabelTestBase {
     // Should contain.
     $this->inBrandingBlock($this->whiteLabel2->getName());
     $this->inBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));
     // Should not contain.
     $this->notInBrandingBlock($this->defaultName);
     $this->notInBrandingBlock($this->whiteLabel->getName());
     $this->notInBrandingBlock($this->whiteLabel->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
 
     // White label 2 (updated).
     $this->whiteLabel2
@@ -162,12 +162,12 @@ class WhiteLabelCacheTest extends WhiteLabelTestBase {
     // Should contain.
     $this->inBrandingBlock($this->whiteLabel2->getName());
     $this->inBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));
     // Should not contain.
     $this->notInBrandingBlock($this->defaultName);
     $this->notInBrandingBlock($this->whiteLabel->getName());
     $this->notInBrandingBlock($this->whiteLabel->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
 
     // White label 1 (again).
     $this->setCurrentWhiteLabel($this->whiteLabel);
@@ -176,12 +176,12 @@ class WhiteLabelCacheTest extends WhiteLabelTestBase {
     // Should contain.
     $this->inBrandingBlock($this->whiteLabel->getName());
     $this->inBrandingBlock($this->whiteLabel->getSlogan());
-    $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     // Should not contain.
     $this->notInBrandingBlock($this->defaultName);
     $this->notInBrandingBlock($this->whiteLabel2->getName());
     $this->notInBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));
 
     // No white label (again).
     $this->resetWhiteLabel();
@@ -192,10 +192,10 @@ class WhiteLabelCacheTest extends WhiteLabelTestBase {
     // Should not contain.
     $this->notInBrandingBlock($this->whiteLabel->getName());
     $this->notInBrandingBlock($this->whiteLabel->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     $this->notInBrandingBlock($this->whiteLabel2->getName());
     $this->notInBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));
   }
 
 }
diff --git a/tests/src/Functional/WhiteLabelFeatureToggleTest.php b/tests/src/Functional/WhiteLabelFeatureToggleTest.php
index a02594b..5b3e1be 100644
--- a/tests/src/Functional/WhiteLabelFeatureToggleTest.php
+++ b/tests/src/Functional/WhiteLabelFeatureToggleTest.php
@@ -38,7 +38,7 @@ class WhiteLabelFeatureToggleTest extends WhiteLabelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Make sure everything is disabled by default.
@@ -140,8 +140,8 @@ class WhiteLabelFeatureToggleTest extends WhiteLabelTestBase {
         $this->notInBrandingBlock($this->whiteLabel->getSlogan());
 
       $config_key == 'site_logo' ?
-        $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri()))) :
-        $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+        $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri())) :
+        $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     }
 
     // Finally test the site name display option.
diff --git a/tests/src/Functional/WhiteLabelPermissionRevokeTest.php b/tests/src/Functional/WhiteLabelPermissionRevokeTest.php
index bde288e..f0f0fde 100644
--- a/tests/src/Functional/WhiteLabelPermissionRevokeTest.php
+++ b/tests/src/Functional/WhiteLabelPermissionRevokeTest.php
@@ -31,7 +31,7 @@ class WhiteLabelPermissionRevokeTest extends WhiteLabelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->defaultName = $this->config('system.site')->get('name');
diff --git a/tests/src/Functional/WhiteLabelTestBase.php b/tests/src/Functional/WhiteLabelTestBase.php
index cec56b8..a4af0c4 100644
--- a/tests/src/Functional/WhiteLabelTestBase.php
+++ b/tests/src/Functional/WhiteLabelTestBase.php
@@ -55,7 +55,7 @@ abstract class WhiteLabelTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->whiteLabelOwner = $this->drupalCreateUser(['serve white label pages']);
diff --git a/tests/src/Functional/WhiteLabelThemeNegotiatorTest.php b/tests/src/Functional/WhiteLabelThemeNegotiatorTest.php
index 063b302..f87aaad 100644
--- a/tests/src/Functional/WhiteLabelThemeNegotiatorTest.php
+++ b/tests/src/Functional/WhiteLabelThemeNegotiatorTest.php
@@ -19,7 +19,7 @@ class WhiteLabelThemeNegotiatorTest extends WhiteLabelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->container->get('theme_installer')->install(['seven']);
diff --git a/tests/src/FunctionalJavascript/WhiteLabelFieldTest.php b/tests/src/FunctionalJavascript/WhiteLabelFieldTest.php
index 06fdb5d..48b010c 100644
--- a/tests/src/FunctionalJavascript/WhiteLabelFieldTest.php
+++ b/tests/src/FunctionalJavascript/WhiteLabelFieldTest.php
@@ -26,7 +26,7 @@ class WhiteLabelFieldTest extends WhiteLabelJavascriptTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Make sure everything is disabled by default.
diff --git a/tests/src/FunctionalJavascript/WhiteLabelJavascriptTestBase.php b/tests/src/FunctionalJavascript/WhiteLabelJavascriptTestBase.php
index e5be6a0..99bffe8 100644
--- a/tests/src/FunctionalJavascript/WhiteLabelJavascriptTestBase.php
+++ b/tests/src/FunctionalJavascript/WhiteLabelJavascriptTestBase.php
@@ -56,7 +56,7 @@ abstract class WhiteLabelJavascriptTestBase extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->whiteLabelOwner = $this->drupalCreateUser(['serve white label pages']);
diff --git a/tests/src/FunctionalJavascript/WhiteLabelStyleSheetTest.php b/tests/src/FunctionalJavascript/WhiteLabelStyleSheetTest.php
index 9646b54..7f08af6 100644
--- a/tests/src/FunctionalJavascript/WhiteLabelStyleSheetTest.php
+++ b/tests/src/FunctionalJavascript/WhiteLabelStyleSheetTest.php
@@ -27,7 +27,7 @@ class WhiteLabelStyleSheetTest extends WhiteLabelJavascriptTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a secondary white label.
@@ -129,8 +129,8 @@ class WhiteLabelStyleSheetTest extends WhiteLabelJavascriptTestBase {
 
     // Get path.
     $file_path = 'public://whitelabel/' . $this->whiteLabel->getToken() . '/colors.css';
-    $url = file_create_url($file_path);
-    $html_path = file_url_transform_relative($url);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file_path);
+    $html_path = \Drupal::service('file_url_generator')->transformRelative($url);
 
     // Assert stylesheet is not on the page.
     $this->drupalGet('<front>');
diff --git a/tests/src/Kernel/WhiteLabelAccessTest.php b/tests/src/Kernel/WhiteLabelAccessTest.php
index 9b04161..2a7c17a 100644
--- a/tests/src/Kernel/WhiteLabelAccessTest.php
+++ b/tests/src/Kernel/WhiteLabelAccessTest.php
@@ -49,7 +49,7 @@ class WhiteLabelAccessTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('system', ['sequences']);
     $this->installEntitySchema('user');
diff --git a/tests/src/Kernel/WhiteLabelConditionTest.php b/tests/src/Kernel/WhiteLabelConditionTest.php
index bac97ff..ae265cd 100644
--- a/tests/src/Kernel/WhiteLabelConditionTest.php
+++ b/tests/src/Kernel/WhiteLabelConditionTest.php
@@ -20,7 +20,7 @@ class WhiteLabelConditionTest extends EntityKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('whitelabel');
diff --git a/tests/src/Kernel/WhiteLabelConfigOverrideTest.php b/tests/src/Kernel/WhiteLabelConfigOverrideTest.php
index c1bbb64..bb94683 100644
--- a/tests/src/Kernel/WhiteLabelConfigOverrideTest.php
+++ b/tests/src/Kernel/WhiteLabelConfigOverrideTest.php
@@ -55,7 +55,7 @@ class WhiteLabelConfigOverrideTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', ['sequences']);
diff --git a/tests/src/Kernel/WhiteLabelInboundPathProcessingTest.php b/tests/src/Kernel/WhiteLabelInboundPathProcessingTest.php
index bc23a86..b092e09 100644
--- a/tests/src/Kernel/WhiteLabelInboundPathProcessingTest.php
+++ b/tests/src/Kernel/WhiteLabelInboundPathProcessingTest.php
@@ -75,7 +75,7 @@ class WhiteLabelInboundPathProcessingTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', ['sequences']);
diff --git a/tests/src/Kernel/WhiteLabelOutboundPathProcessingTest.php b/tests/src/Kernel/WhiteLabelOutboundPathProcessingTest.php
index cf4ad45..c9deeaa 100644
--- a/tests/src/Kernel/WhiteLabelOutboundPathProcessingTest.php
+++ b/tests/src/Kernel/WhiteLabelOutboundPathProcessingTest.php
@@ -63,7 +63,7 @@ class WhiteLabelOutboundPathProcessingTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', ['sequences']);
diff --git a/tests/src/Kernel/WhiteLabelValidatorTest.php b/tests/src/Kernel/WhiteLabelValidatorTest.php
index f82ad5f..4a76fad 100644
--- a/tests/src/Kernel/WhiteLabelValidatorTest.php
+++ b/tests/src/Kernel/WhiteLabelValidatorTest.php
@@ -29,7 +29,7 @@ class WhiteLabelValidatorTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', ['sequences']);
diff --git a/whitelabel.module b/whitelabel.module
index 563a796..9f959c7 100644
--- a/whitelabel.module
+++ b/whitelabel.module
@@ -25,8 +25,8 @@ function whitelabel_css_alter(&$css, AttachedAssetsInterface $assets) {
     if (in_array('whitelabel/whitelabel.' . $whitelabel->getToken(), $assets->getLibraries())) {
       $stylesheets = $whitelabel->getStylesheets();
       foreach ($stylesheets as $i => $stylesheet) {
-        $url = file_create_url($stylesheet);
-        $path = file_url_transform_relative($url);
+        $url = \Drupal::service('file_url_generator')->generateAbsoluteString($stylesheet);
+        $path = \Drupal::service('file_url_generator')->transformRelative($url);
 
         // Insert a new stylesheet and hash with the palette to be able to
         // update the cached version once the file is regenerated.
@@ -325,7 +325,7 @@ function template_preprocess_whitelabel_preview(array &$variables) {
   }
 
   // Attempt to load preview HTML if the theme provides it.
-  $preview_html_path = \Drupal::root() . '/' . (isset($info['preview_html']) ? drupal_get_path('theme', $theme) . '/' . $info['preview_html'] : drupal_get_path('module', 'color') . '/preview.html');
+  $preview_html_path = \Drupal::root() . '/' . (isset($info['preview_html']) ? \Drupal::service('extension.list.theme')->getPath($theme) . '/' . $info['preview_html'] : \Drupal::service('extension.list.module')->getPath('color') . '/preview.html');
   $variables['html_preview']['#markup'] = file_get_contents($preview_html_path);
 
   // Add hidden form elements mimicing the color form so the preview library can
