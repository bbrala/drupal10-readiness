modules/contrib/quantcdn/modules/quant_api/src/Client/QuantClient.php
modules/contrib/quantcdn/modules/quant_cron/src/Form/CronSettingsForm.php
modules/contrib/quantcdn/modules/quant_search/src/Controller/Search.php
modules/contrib/quantcdn/modules/quant_sitemap/tests/src/Unit/CollectionSubscriberTest.php
modules/contrib/quantcdn/src/Page/QueueInfo.php
modules/contrib/quantcdn/src/Event/CollectRedirectsEvent.php
modules/contrib/quantcdn/src/Event/CollectRoutesEvent.php
modules/contrib/quantcdn/src/Event/ConfigFormEventBase.php
modules/contrib/quantcdn/modules/quant_purger/quant_purger.install
modules/contrib/quantcdn/modules/quant_purger/src/Form/ConfigurationForm.php
modules/contrib/quantcdn/src/Plugin/MetadataBase.php
modules/contrib/quantcdn/src/Plugin/MetadataInterface.php
modules/contrib/quantcdn/src/Plugin/Quant/Metadata/Info.php
modules/contrib/quantcdn/modules/quant_search/src/Entity/QuantSearchPage.php
modules/contrib/quantcdn/modules/quant_purger/src/Plugin/Purge/Queuer/QuantPurger.php
modules/contrib/quantcdn/modules/quant_search/src/EventSubscriber/SearchEventSubscriber.php
modules/contrib/quantcdn/modules/quant_api/src/Client/QuantClientInterface.php
modules/contrib/quantcdn/src/Event/ConfigFormEventInterface.php
modules/contrib/quantcdn/src/Event/NodeInsertEvent.php
modules/contrib/quantcdn/modules/quant_api/src/EventSubscriber/QuantApi.php
modules/contrib/quantcdn/modules/quant_search/src/Form/ConfirmIndexClearForm.php
modules/contrib/quantcdn/src/Event/QuantCollectionEvents.php
modules/contrib/quantcdn/src/Event/QuantEvent.php
modules/contrib/quantcdn/src/Plugin/Quant/Metadata/ProxyOverride.php
modules/contrib/quantcdn/modules/quant_search/src/Form/QuantSearchPageForm.php
modules/contrib/quantcdn/modules/quant_purger/src/Plugin/Purge/Queuer/QuantPurgerPlugin.php
modules/contrib/quantcdn/modules/quant_purger/src/StackMiddleware/UrlRegistrar.php
modules/contrib/quantcdn/src/Event/QuantFileEvent.php
modules/contrib/quantcdn/src/Event/QuantRedirectEvent.php
modules/contrib/quantcdn/modules/quant_webform/quant_webform.module
modules/contrib/quantcdn/modules/quant_webform/src/Element/QuantResultElement.php
modules/contrib/quantcdn/src/EventSubscriber/CollectionSubscriber.php
modules/contrib/quantcdn/src/Plugin/Quant/Metadata/Published.php
modules/contrib/quantcdn/modules/quant_webform/src/Plugin/WebformElement/QuantResult.php
modules/contrib/quantcdn/quant.install
modules/contrib/quantcdn/src/Plugin/Quant/Metadata/PublishedRevision.php
modules/contrib/quantcdn/modules/quant_purger/src/TrafficRegistry.php
modules/contrib/quantcdn/src/Plugin/Quant/Metadata/TransitionRevision.php
modules/contrib/quantcdn/src/Plugin/Quant/Metadata/Transitions.php
modules/contrib/quantcdn/modules/quant_purger/src/TrafficRegistryInterface.php
modules/contrib/quantcdn/quant.module
modules/contrib/quantcdn/src/Plugin/QuantMetadataManager.php
modules/contrib/quantcdn/modules/quant_search/quant_search.module
modules/contrib/quantcdn/src/Plugin/QueueItem/FileItem.php
modules/contrib/quantcdn/src/Plugin/QueueItem/NodeItem.php
modules/contrib/quantcdn/src/Plugin/QueueItem/QuantQueueItemInterface.php
modules/contrib/quantcdn/src/Plugin/QueueItem/RedirectItem.php
modules/contrib/quantcdn/src/Plugin/QueueItem/RouteItem.php
modules/contrib/quantcdn/modules/quant_api/src/Exception/InvalidPayload.php
modules/contrib/quantcdn/modules/quant_api/src/Exception/InvalidResponse.php
modules/contrib/quantcdn/modules/quant_api/src/Form/SettingsForm.php
modules/contrib/quantcdn/modules/quant_search/src/Form/SearchEntitiesForm.php
modules/contrib/quantcdn/src/Plugin/QueueWorker/QuantSeedWorker.php
modules/contrib/quantcdn/src/QuantStaticTrait.php
modules/contrib/quantcdn/modules/quant_api/tests/src/Unit/QuantClientTest.php
modules/contrib/quantcdn/modules/quant_cron/quant_cron.module
modules/contrib/quantcdn/src/Routing/RouteSubscriber.php
modules/contrib/quantcdn/src/Annotation/Metadata.php
modules/contrib/quantcdn/src/Commands/QuantDrushCommands.php
modules/contrib/quantcdn/src/Seed.php
modules/contrib/quantcdn/modules/quant_search/src/Form/SearchIndexForm.php
modules/contrib/quantcdn/src/EventSubscriber/NodeInsertSubscriber.php
modules/contrib/quantcdn/src/Controller/QuantNodeViewController.php
modules/contrib/quantcdn/src/EventSubscriber/TokenAccessSubscriber.php
modules/contrib/quantcdn/modules/quant_search/src/Form/SearchPagesForm.php
modules/contrib/quantcdn/modules/quant_search/src/QuantSearchPageInterface.php
modules/contrib/quantcdn/modules/quant_search/src/QuantSearchPageListBuilder.php
modules/contrib/quantcdn/modules/quant_search/src/Routing/QuantSearchRoutes.php
modules/contrib/quantcdn/src/Exception/ExpiredTokenException.php
modules/contrib/quantcdn/src/Controller/QuantValidateController.php
modules/contrib/quantcdn/src/Exception/InvalidTokenException.php
modules/contrib/quantcdn/src/Exception/StrictTokenException.php
modules/contrib/quantcdn/modules/quant_sitemap/quant_sitemap.module
modules/contrib/quantcdn/src/Event/CollectEntitiesEvent.php
modules/contrib/quantcdn/src/Exception/TokenValidationDisabledException.php
modules/contrib/quantcdn/src/Form/ConfigForm.php
modules/contrib/quantcdn/src/Event/CollectFilesEvent.php
modules/contrib/quantcdn/modules/quant_sitemap/src/EventSubscriber/CollectionSubscriber.php
modules/contrib/quantcdn/src/Form/MetadataConfigForm.php
modules/contrib/quantcdn/src/Form/SeedForm.php
modules/contrib/quantcdn/src/TokenManager.php
modules/contrib/quantcdn/src/Form/TokenForm.php

11 files with changes
=====================

1) modules/contrib/quantcdn/modules/quant_sitemap/tests/src/Unit/CollectionSubscriberTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\quant_sitemap\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\KeyValueStore\StorageBase;
 use Drupal\Core\Language\Language;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class CollectionSubscriberTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Ensure that the XmlSitemapItems are generated correctly.
    */
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/quantcdn/modules/quant_api/src/EventSubscriber/QuantApi.php:183

    ---------- begin diff ----------
@@ @@
       // If the file exists we send it directly to quant otherwise we add it
       // to the queue to generate assets on the next run.
       if (file_exists($fileOnDisk)) {
-        $this->eventDispatcher->dispatch(QuantFileEvent::OUTPUT, new QuantFileEvent($fileOnDisk, $item['full_path'] ?? $file));
+        $this->eventDispatcher->dispatch(new QuantFileEvent($fileOnDisk, $item['full_path'] ?? $file), QuantFileEvent::OUTPUT);
       }
       else {
         $file_item = new FileItem([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


3) modules/contrib/quantcdn/modules/quant_api/src/Client/QuantClient.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\quant_api\Client;

+use function GuzzleHttp\Psr7\stream_for;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use GuzzleHttp\Client;
 use GuzzleHttp\RequestOptions;
@@ @@

     // Prepare a stream.
     $resource = fopen($file, 'r');
-    $stream = Psr7\stream_for($resource);
+    $stream = stream_for($resource);

     $headers = [
       'Quant-File-Url' => $url,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


4) modules/contrib/quantcdn/src/Seed.php:58

    ---------- begin diff ----------
@@ @@
       $files[] = str_replace(DRUPAL_ROOT, '', $filename->getPathname());
     }

-    $files[] = '/' . drupal_get_path('module', 'lunr') . '/js/search.worker.js';
-    $files[] = '/' . drupal_get_path('module', 'lunr') . '/js/vendor/lunr/lunr.min.js';
+    $files[] = '/' . \Drupal::service('extension.list.module')->getPath('lunr') . '/js/search.worker.js';
+    $files[] = '/' . \Drupal::service('extension.list.module')->getPath('lunr') . '/js/vendor/lunr/lunr.min.js';

     return $files;
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


5) modules/contrib/quantcdn/src/Form/SeedForm.php:351

    ---------- begin diff ----------
@@ @@
     if ($form_state->getValue('redirects')) {
       // Collect the redirects for the seed.
       $event = new CollectRedirectsEvent($form_state);
-      $this->dispatcher->dispatch(QuantCollectionEvents::REDIRECTS, $event);
+      $this->dispatcher->dispatch($event, QuantCollectionEvents::REDIRECTS);
     }

     if ($form_state->getValue('entity_node') || $form_state->getValue('entity_node_revisions')) {
       $event = new CollectEntitiesEvent($form_state);
-      $this->dispatcher->dispatch(QuantCollectionEvents::ENTITIES, $event);
+      $this->dispatcher->dispatch($event, QuantCollectionEvents::ENTITIES);
     }

     $event = new CollectRoutesEvent($form_state);
-    $this->dispatcher->dispatch(QuantCollectionEvents::ROUTES, $event);
+    $this->dispatcher->dispatch($event, QuantCollectionEvents::ROUTES);

     foreach ($routes as $route) {
       $event->queueItem($route);
@@ @@
     }

     $event = new CollectFilesEvent($form_state);
-    $this->dispatcher->dispatch(QuantCollectionEvents::FILES, $event);
+    $this->dispatcher->dispatch($event, QuantCollectionEvents::FILES);

     foreach ($assets as $asset) {
       $event->queueItem($asset);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/quantcdn/src/EventSubscriber/TokenAccessSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\quant\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\quant\Exception\ExpiredTokenException;
 use Drupal\quant\Exception\InvalidTokenException;
@@ @@
 use Drupal\quant\Exception\TokenValidationDisabledException;
 use Drupal\quant\TokenManager;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException;

@@ @@
   /**
    * Validate the token on the incoming request.
    */
-  public function validateToken(GetResponseEvent $event) {
+  public function validateToken(RequestEvent $event) {
     /** @var Symfony\Component\HttpFoundation\Request $request */
     $request = $event->getRequest();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


7) modules/contrib/quantcdn/src/Event/QuantRedirectEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\quant\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * The transport event (redirects).
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/quantcdn/src/Event/QuantFileEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\quant\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * The transport event (files).
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/quantcdn/src/Event/QuantEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\quant\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * The transport event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/quantcdn/src/Event/NodeInsertEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\quant\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Entity\EntityInterface;

 /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/quantcdn/src/Event/ConfigFormEventBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\quant\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\quant\Plugin\QueueItem\RouteItem;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/quantcdn/modules/quant_api/tests/src/Unit/QuantClientT
         est.php" file, due to:                                                 
         "System error: "Syntax error, unexpected ';', expecting ')':172"       
         Run Rector with "--debug" option and post the report here:             
         https://github.com/rectorphp/rector/issues/new". On line: 54           

