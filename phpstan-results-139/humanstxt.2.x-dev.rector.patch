diff --git a/humanstxt.info.yml b/humanstxt.info.yml
index 4bcea1b..2fce4cf 100644
--- a/humanstxt.info.yml
+++ b/humanstxt.info.yml
@@ -2,8 +2,7 @@ name: Humans.txt
 type: module
 description: 'Generates a humans.txt file dynamically and allows you to edit it.'
 package: Other
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: humanstxt.admin_settings_form
 dependencies:
   - drupal:multiline_config
diff --git a/tests/src/Functional/HumansTxtBasicTest.php b/tests/src/Functional/HumansTxtBasicTest.php
index 4638b1c..f1e0e22 100755
--- a/tests/src/Functional/HumansTxtBasicTest.php
+++ b/tests/src/Functional/HumansTxtBasicTest.php
@@ -50,7 +50,7 @@ class HumansTxtBasicTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create users.
@@ -66,10 +66,10 @@ class HumansTxtBasicTest extends BrowserTestBase {
    */
   public function testHumansTxtUserNoAccess() {
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($this->normalUser);
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -77,8 +77,8 @@ class HumansTxtBasicTest extends BrowserTestBase {
    */
   public function testHumansTxtHeader() {
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
-    $this->assertHeader('Content-Type', 'text/plain; charset=UTF-8');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseHeaderEquals('Content-Type', 'text/plain; charset=UTF-8');
   }
 
   /**
@@ -86,8 +86,8 @@ class HumansTxtBasicTest extends BrowserTestBase {
    */
   public function testHumansTxtCacheTags() {
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
-    $this->assertCacheTag('humanstxt');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', 'humanstxt');
   }
 
   /**
@@ -96,21 +96,21 @@ class HumansTxtBasicTest extends BrowserTestBase {
   public function testHumansTxtConfigureHumansTxtNoLink() {
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $test_string = "# Testing Humans.txt {$this->randomMachineName()}";
     $this->submitForm(['humanstxt_content' => $test_string, 'humanstxt_display_link' => FALSE], t('Save configuration'));
     $this->drupalLogout();
 
     // Test the newly created humans.txt file.
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $content = $this->getSession()->getPage()->getContent();
     $this->assertTrue($content == $test_string, sprintf('Test string: [%s] is displayed in the configured humans.txt file.', $test_string));
 
     // Test if the link to the object/file is not in HTML <head> section.
     $this->drupalGet('/admin/config/development/humanstxt');
     $tags = $this->getSession()->getPage()->getHtml();
-    $this->assertNotContains($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is not shown in the -head- section.', $this->fileLink));
+    $this->assertStringNotContainsString($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is not shown in the -head- section.', $this->fileLink));
   }
 
   /**
@@ -119,21 +119,21 @@ class HumansTxtBasicTest extends BrowserTestBase {
   public function testHumansTxtConfigureHumansTxtWithLink() {
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $test_string = "# Testing Humans.txt {$this->randomMachineName()}";
     $this->submitForm(['humanstxt_content' => $test_string, 'humanstxt_display_link' => TRUE], t('Save configuration'));
     $this->drupalLogout();
 
     // Test the newly created humans.txt file.
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $content = $this->getSession()->getPage()->getContent();
     $this->assertTrue($content == $test_string, sprintf('Test string: [%s] is displayed in the configured humans.txt file.', $test_string));
 
     // Test if the link to the object/file is in HTML <head> section.
     $this->drupalGet('/admin/config/development/humanstxt');
     $tags = $this->getSession()->getPage()->getHtml();
-    $this->assertContains($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is shown in the -head- section.', $this->fileLink));
+    $this->assertStringContainsString($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is shown in the -head- section.', $this->fileLink));
   }
 
 }
