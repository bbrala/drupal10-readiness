modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_acquia_cohesion/src/AcquiaCohesionDataConverter.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_context_debug/tmgmt_smartling_context_debug.module
modules/contrib/tmgmt_smartling/src/Controller/ProgressTrackerController.php
modules/contrib/tmgmt_smartling/src/Plugin/tmgmt_file/Format/Xml.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_log_settings/src/Logger/LoggerChannel.php
modules/contrib/tmgmt_smartling/tests/src/Functional/LockFieldsTest.php
modules/contrib/tmgmt_smartling/tmgmt_smartling.module
modules/contrib/tmgmt_smartling/src/Controller/PushCallbackController.php
modules/contrib/tmgmt_smartling/src/Event/AfterFileDownloadEvent.php
modules/contrib/tmgmt_smartling/src/Event/JobBasedEventInterface.php
modules/contrib/tmgmt_smartling/src/Event/JobBasedEventTrait.php
modules/contrib/tmgmt_smartling/src/Event/RequestTranslationEvent.php
modules/contrib/tmgmt_smartling/src/EventSubscriber/ConfigEventsSubscriber.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_log_settings/src/Logger/LoggerChannelFactory.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_log_settings/src/TmgmtSmartlingLogSettingsServiceProvider.php
modules/contrib/tmgmt_smartling/src/EventSubscriber/RequestSubscriber.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_log_settings/tests/src/Functional/TmgmtSmartlingLogSettingsTest.php
modules/contrib/tmgmt_smartling/src/Plugin/views/field/TmgmtSmartlingDashboardLink.php
modules/contrib/tmgmt_smartling/src/EventSubscriber/RequestTranslationSubscriber.php
modules/contrib/tmgmt_smartling/src/Smartling/BucketJobManager.php
modules/contrib/tmgmt_smartling/src/Exceptions/EmptyContextParameterException.php
modules/contrib/tmgmt_smartling/src/Exceptions/SmartlingBaseException.php
modules/contrib/tmgmt_smartling/src/Exceptions/WrongUsernameException.php
modules/contrib/tmgmt_smartling/src/Form/DownloadByJobItemsTmgmtActionApproveForm.php
modules/contrib/tmgmt_smartling/tests/src/Functional/LoggingTest.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_log_settings/tests/src/Kernel/TmgmtSmartlingLogSettingsTest.php
modules/contrib/tmgmt_smartling/src/Smartling/ConfigManager/FirebaseConfigManager.php
modules/contrib/tmgmt_smartling/src/Smartling/ConfigManager/SmartlingConfigManager.php
modules/contrib/tmgmt_smartling/src/Smartling/ConnectorInfo.php
modules/contrib/tmgmt_smartling/src/Smartling/LockFields/LockFieldsFormManager.php
modules/contrib/tmgmt_smartling/tests/src/Functional/PushBackControllerTest.php
modules/contrib/tmgmt_smartling/src/Form/JobExtendedForm.php
modules/contrib/tmgmt_smartling/src/Smartling/LockFields/LockFieldsManager.php
modules/contrib/tmgmt_smartling/src/Form/SendContextActionApproveForm.php
modules/contrib/tmgmt_smartling/src/Smartling/SmartlingApiFactory.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_acquia_cohesion/src/AcquiaCohesionDataSuggester.php
modules/contrib/tmgmt_smartling/src/Smartling/SmartlingApiWrapper.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_acquia_cohesion/src/LayoutCanvasAwareInterface.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_acquia_cohesion/src/LayoutCanvasAwareTrait.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataConverterTest.php
modules/contrib/tmgmt_smartling/tests/src/Functional/RealTimeNotificationsTest.php
modules/contrib/tmgmt_smartling/tests/src/Functional/RequirementsTest.php
modules/contrib/tmgmt_smartling/tests/src/Functional/RevisionInflationTest.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataSuggesterTest.php
modules/contrib/tmgmt_smartling/tmgmt_smartling.simpletest.settings.php
modules/contrib/tmgmt_smartling/src/Logger/BufferLogger.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_log_settings/tmgmt_smartling_log_settings.module
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_acquia_cohesion/tmgmt_smartling_acquia_cohesion.module
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_context_debug/src/Form/TmgmtSmartlingContextDebugForm.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_test/modules/tmgmt_smartling_test_alter_filename/tmgmt_smartling_test_alter_filename.module
modules/contrib/tmgmt_smartling/src/Smartling/Submission/SearchTranslationRequestParamsV3.php
modules/contrib/tmgmt_smartling/src/Smartling/Submission/TranslationRequestManager.php
modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_test/tmgmt_smartling_test.module
modules/contrib/tmgmt_smartling/src/Context/ContextCurrentUserAuth.php
modules/contrib/tmgmt_smartling/src/Context/ContextUploader.php
modules/contrib/tmgmt_smartling/tests/src/Functional/SettingsFormTest.php
modules/contrib/tmgmt_smartling/tests/src/Functional/SmartlingTestBase.php
modules/contrib/tmgmt_smartling/src/Plugin/Action/DowloadByJobItemsJobAction.php
modules/contrib/tmgmt_smartling/src/Plugin/Action/SendContextAction.php
modules/contrib/tmgmt_smartling/src/Smartling/Submission/TranslationRequestsApiV3.php
modules/contrib/tmgmt_smartling/src/SmartlingTranslatorUi.php
modules/contrib/tmgmt_smartling/src/Plugin/QueueWorker/ContextUpload.php
modules/contrib/tmgmt_smartling/src/Plugin/tmgmt/Translator/SmartlingTranslator.php
modules/contrib/tmgmt_smartling/src/Context/ContextUserAuth.php
modules/contrib/tmgmt_smartling/src/Context/HtmlAssetInliner.php
modules/contrib/tmgmt_smartling/tests/src/Kernel/BaseFlowTest.php
modules/contrib/tmgmt_smartling/src/Context/TranslationJobToUrl.php
modules/contrib/tmgmt_smartling/tests/src/Functional/BaseFlowTest.php
modules/contrib/tmgmt_smartling/tests/src/Kernel/BufferLoggerTest.php
modules/contrib/tmgmt_smartling/tests/src/Functional/ContextTest.php
modules/contrib/tmgmt_smartling/tests/src/Kernel/ConnectorInfoTest.php
modules/contrib/tmgmt_smartling/tests/src/Kernel/DownloadFlowTest.php
modules/contrib/tmgmt_smartling/tests/src/Functional/FileNameTest.php
modules/contrib/tmgmt_smartling/tests/src/Functional/JobsTest.php
modules/contrib/tmgmt_smartling/tests/src/Kernel/SmartlingTestBase.php
modules/contrib/tmgmt_smartling/tests/src/Kernel/SmartlingTranslatorTest.php
modules/contrib/tmgmt_smartling/tests/src/Kernel/TranslationRequestManagerTest.php
modules/contrib/tmgmt_smartling/tests/src/Kernel/UploadFlowTest.php
modules/contrib/tmgmt_smartling/tests/src/Kernel/XmlPluginTest.php
modules/contrib/tmgmt_smartling/tmgmt_smartling.api.php
modules/contrib/tmgmt_smartling/tmgmt_smartling.install

10 files with changes
=====================

1) modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataSuggesterTest.php:17

    ---------- begin diff ----------
@@ @@
    * Returns component content job items from job items data as suggestions.
    */
   public function testJobItemsSuggestions() {
-    $componentContentMock = $this->getMockBuilder(ComponentContent::class)
-      ->disableOriginalConstructor()
-      ->setMethods([
-        'getEntityTypeId',
-        'id'
-      ])
-      ->getMock();
+    $componentContentMock = $this->createMock(ComponentContent::class);

     $componentContentMock->expects($this->once())
       ->method('getEntityTypeId')
@@ @@
       ->method('id')
       ->willReturn(4);

-    $acquiaDataSuggester = $this->getMockBuilder(AcquiaCohesionDataSuggester::class)
-      ->disableOriginalConstructor()
-      ->setMethods([
-        'loadComponentContent'
-      ])
-      ->getMock();
+    $acquiaDataSuggester = $this->createMock(AcquiaCohesionDataSuggester::class);

     $acquiaDataSuggester->expects($this->once())
       ->method('loadComponentContent')
@@ @@
       ->with(4)
       ->willReturn($componentContentMock);

-    $jobItemMock = $this->getMockBuilder(JobItem::class)
-      ->disableOriginalConstructor()
-      ->setMethods([
-        'getData',
-        'id'
-      ])
-      ->getMock();
+    $jobItemMock = $this->createMock(JobItem::class);

     $jobItemMock->expects($this->once())
       ->method('getData')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/tmgmt_smartling/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataConverterTest.php:140

    ---------- begin diff ----------
@@ @@
   }

   public function testXmlToJsonTransformation() {
-    $jobItemMock = $this->getMockBuilder(JobItem::class)
-      ->disableOriginalConstructor()
-      ->setMethods([
-        'getData'
-      ])
-    ->getMock();
+    $jobItemMock = $this->createMock(JobItem::class);

     $jobItemMock->expects($this->exactly(2))
       ->method('getData')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/tmgmt_smartling/src/Event/RequestTranslationEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tmgmt_smartling\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

-class RequestTranslationEvent extends \Symfony\Contracts\EventDispatcher\Event implements JobBasedEventInterface {
+class RequestTranslationEvent extends Event implements JobBasedEventInterface {
   use JobBasedEventTrait;

   const REQUEST_TRANSLATION_EVENT = 'tmgmt_smartling.request_translation';
    ----------- end diff -----------

Applied rules:
 * RenameClassRector


4) modules/contrib/tmgmt_smartling/src/Event/AfterFileDownloadEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tmgmt_smartling\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

-class AfterFileDownloadEvent extends \Symfony\Contracts\EventDispatcher\Event implements JobBasedEventInterface {
+class AfterFileDownloadEvent extends Event implements JobBasedEventInterface {
   use JobBasedEventTrait;

   const AFTER_FILE_DOWNLOAD_EVENT = 'tmgmt_smartling.after_file_download';
    ----------- end diff -----------

Applied rules:
 * RenameClassRector


5) modules/contrib/tmgmt_smartling/tests/src/Kernel/TranslationRequestManagerTest.php:26

    ---------- begin diff ----------
@@ @@
   public function setUp(): void {
     parent::setUp();

-    $api_factory_mock = $this->getMockBuilder('\Drupal\tmgmt_smartling\Smartling\SmartlingApiFactory')
-      ->onlyMethods([])
-      ->getMock();
+    $api_factory_mock = $this->createMock('\Drupal\tmgmt_smartling\Smartling\SmartlingApiFactory');

     $this->apiWrapperMock = $this->getMockBuilder('\Drupal\tmgmt_smartling\Smartling\SmartlingApiWrapper')
       ->setConstructorArgs([$api_factory_mock, $this->loggerMock])
       ->getMock();

-    $this->stateMock = $this->getMockBuilder('\Drupal\Core\State\State')
-      ->onlyMethods(['get'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->stateMock = $this->createMock('\Drupal\Core\State\State');

     $this->stateMock->expects($this->any())
       ->method('get')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/tmgmt_smartling/tests/src/Kernel/SmartlingTranslatorTest.php:26

    ---------- begin diff ----------
@@ @@
   public function setUp(): void {
     parent::setUp();

-    $this->smartlingTranslator = $this->getMockBuilder(SmartlingTranslatorBeingTested::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([])
-      ->getMock();
+    $this->smartlingTranslator = $this->createMock(SmartlingTranslatorBeingTested::class);

-    $this->moduleHandler = $this->getMockBuilder(ModuleHandler::class)
-      ->onlyMethods(['alter'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->moduleHandler = $this->createMock(ModuleHandler::class);

     $this->smartlingTranslator->moduleHandler = $this->moduleHandler;
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/tmgmt_smartling/tests/src/Kernel/SmartlingTestBase.php:31

    ---------- begin diff ----------
@@ @@
     $this->installEntitySchema('file');
     $this->installEntitySchema('tmgmt_remote');

-    $this->pluginMock = $this->getMockBuilder('\Drupal\tmgmt_smartling\Plugin\tmgmt_file\Format\Xml')
-      ->onlyMethods(['validateImport', 'import'])
-      ->getMock();
+    $this->pluginMock = $this->createMock('\Drupal\tmgmt_smartling\Plugin\tmgmt_file\Format\Xml');

-    $format_manager_mock = $this->getMockBuilder('\Drupal\tmgmt_file\Format\FormatManager')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['createInstance'])
-      ->getMock();
+    $format_manager_mock = $this->createMock('\Drupal\tmgmt_file\Format\FormatManager');

     $format_manager_mock->expects($this->any())
       ->method('createInstance')
       ->willReturn($this->pluginMock);

-    $api_factory_mock = $this->getMockBuilder('\Drupal\tmgmt_smartling\Smartling\SmartlingApiFactory')
-      ->onlyMethods([])
-      ->getMock();
+    $api_factory_mock = $this->createMock('\Drupal\tmgmt_smartling\Smartling\SmartlingApiFactory');

-    $this->loggerMock = $this->getMockBuilder('\Drupal\Core\Logger\LoggerChannel')
-      ->onlyMethods([])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->loggerMock = $this->createMock('\Drupal\Core\Logger\LoggerChannel');

-    $this->batchApiMock = $this->getMockBuilder(BatchApi::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods(['uploadBatchFile'])
-      ->getMock();
+    $this->batchApiMock = $this->createMock(BatchApi::class);

-    $this->fileApiMock = $this->getMockBuilder(FileApi::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->fileApiMock = $this->createMock(FileApi::class);

-    $this->translationRequestManagerMock = $this->getMockBuilder(TranslationRequestManager::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([
-        'getSubmitterName',
-        'getBucketName',
-        'upsertTranslationRequest',
-        'getTranslationRequest',
-        'commitSuccessfulDownload',
-        'commitSuccessfulUpload',
-        'commitError'
-      ])
-      ->getMock();
+    $this->translationRequestManagerMock = $this->createMock(TranslationRequestManager::class);

     $this->translationRequestManagerMock->expects($this->any())
       ->method('getSubmitterName')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/tmgmt_smartling/tests/src/Kernel/DownloadFlowTest.php:422

    ---------- begin diff ----------
@@ @@
       'batch_execute_on_job' => 1,
     ]);

-    $field_item_list = $this->getMockBuilder(FieldItemList::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([
-        'getValue'
-      ])
-      ->getMock();
+    $field_item_list = $this->createMock(FieldItemList::class);

     $field_item_list->expects($this->any())
       ->method('getValue')
@@ @@
         ]
       ]);

-    $job_item_mock_1 = $this->getMockBuilder(JobItem::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([
-        'save',
-        'id',
-        'setState',
-        'addTranslatedData',
-        'getItemId',
-        'getItemType'
-      ])
-      ->getMock();
+    $job_item_mock_1 = $this->createMock(JobItem::class);

     $job_item_mock_1->expects($this->any())
       ->method('id')
@@ @@
     $job_item_mock_1->expects($this->once())
       ->method('addTranslatedData');

-    $job_item_mock_2 = $this->getMockBuilder(JobItem::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([
-        'id',
-        'setState',
-        'addTranslatedData',
-        'getItemId',
-        'getItemType'
-      ])
-      ->getMock();
+    $job_item_mock_2 = $this->createMock(JobItem::class);

     $job_item_mock_2->expects($this->any())
       ->method('id')
@@ @@
     $job_item_mock_2->expects($this->once())
       ->method('addTranslatedData');

-    $translate_job = $this->getMockBuilder(Job::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([
-        'id',
-        'getItems',
-        'getTranslator',
-        'getTranslatorPlugin',
-        'getSetting',
-        'getSourceLangcode',
-        'getTargetLangcode',
-        'save',
-        'set',
-        'get',
-        'addMessage',
-        'getFieldDefinitions'
-      ])
-      ->getMock();
+    $translate_job = $this->createMock(Job::class);

     $translate_job->expects($this->any())
       ->method('id')
@@ @@
       'batch_execute_on_job' => 1,
     ]);

-    $field_item_list = $this->getMockBuilder(FieldItemList::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([
-        'getValue'
-      ])
-      ->getMock();
+    $field_item_list = $this->createMock(FieldItemList::class);

     $field_item_list->expects($this->any())
       ->method('getValue')
@@ @@
         ]
       ]);

-    $job_item_mock_1 = $this->getMockBuilder(JobItem::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([
-        'save',
-        'id',
-        'setState',
-        'addTranslatedData',
-        'getItemId',
-        'getItemType'
-      ])
-      ->getMock();
+    $job_item_mock_1 = $this->createMock(JobItem::class);

     $job_item_mock_1->expects($this->any())
       ->method('id')
@@ @@
     $job_item_mock_1->expects($this->never())
       ->method('addTranslatedData');

-    $job_item_mock_2 = $this->getMockBuilder(JobItem::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([
-        'id',
-        'setState',
-        'addTranslatedData',
-        'getItemId',
-        'getItemType'
-      ])
-      ->getMock();
+    $job_item_mock_2 = $this->createMock(JobItem::class);

     $job_item_mock_2->expects($this->any())
       ->method('id')
@@ @@
     $job_item_mock_2->expects($this->once())
       ->method('addTranslatedData');

-    $translate_job = $this->getMockBuilder(Job::class)
-      ->disableOriginalConstructor()
-      ->onlyMethods([
-        'id',
-        'getItems',
-        'getTranslator',
-        'getTranslatorPlugin',
-        'getSetting',
-        'getSourceLangcode',
-        'getTargetLangcode',
-        'save',
-        'set',
-        'get',
-        'addMessage',
-        'getFieldDefinitions'
-      ])
-      ->getMock();
+    $translate_job = $this->createMock(Job::class);

     $translate_job->expects($this->any())
       ->method('id')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/tmgmt_smartling/tests/src/Kernel/BufferLoggerTest.php:20

    ---------- begin diff ----------
@@ @@
   public function setUp(): void {
     parent::setUp();

-    $this->httpClient = $this->getMockBuilder('GuzzleHttp\Client')
-      ->onlyMethods([
-        'request',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->httpClient = $this->createMock('GuzzleHttp\Client');

     $this->channel = new LoggerChannel('tmgmt_smartling');
     $this->logger = \Drupal::getContainer()->get('logger.smartling');
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/tmgmt_smartling/tests/src/Kernel/BaseFlowTest.php:16

    ---------- begin diff ----------
@@ @@
   public function setUp(): void {
     parent::setUp();

-    $api_factory_mock = $this->getMockBuilder('\Drupal\tmgmt_smartling\Smartling\SmartlingApiFactory')
-      ->onlyMethods([])
-      ->getMock();
+    $api_factory_mock = $this->createMock('\Drupal\tmgmt_smartling\Smartling\SmartlingApiFactory');

-    $logger_mock = $this->getMockBuilder('\Drupal\Core\Logger\LoggerChannel')
-      ->disableOriginalConstructor()
-      ->onlyMethods([])
-      ->getMock();
+    $logger_mock = $this->createMock('\Drupal\Core\Logger\LoggerChannel');

     $this->apiWrapperMock = $this->getMockBuilder('\Drupal\tmgmt_smartling\Smartling\SmartlingApiWrapper')
       ->onlyMethods([
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 10 files have been changed by Rector                                      

