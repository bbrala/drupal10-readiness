diff --git a/guidelines.module b/guidelines.module
index e1a148c..bfdf0dd 100644
--- a/guidelines.module
+++ b/guidelines.module
@@ -142,7 +142,7 @@ function guidelines_attach_to_widget(&$element, FormStateInterface &$form_state,
   if (isset($descriptions[$entity_type][$key])) {
     $view_builder = \Drupal::entityTypeManager()->getViewBuilder('guideline');
     $pre_render = $view_builder->view($descriptions[$entity_type][$key], 'default');
-    $render_output = render($pre_render);
+    $render_output = \Drupal::service('renderer')->render($pre_render);
 
     if (isset($element['#description'])) {
       $element['#description'] = $render_output;
diff --git a/src/Controller/GuidelineJsonController.php b/src/Controller/GuidelineJsonController.php
index a38a9ab..ed98dc1 100644
--- a/src/Controller/GuidelineJsonController.php
+++ b/src/Controller/GuidelineJsonController.php
@@ -66,7 +66,7 @@ class GuidelineJsonController extends ControllerBase {
         if (!empty($bundle) && $bundle === $b) {
           $view_builder = $this->entityTypeManager()->getViewBuilder('guideline');
           $pre_render = $view_builder->view($guideline, 'default');
-          $render_output = render($pre_render);
+          $render_output = \Drupal::service('renderer')->render($pre_render);
 
           $description = [
             'label' => $f,
diff --git a/src/Form/GuidelineRevisionRevertForm.php b/src/Form/GuidelineRevisionRevertForm.php
index 0830421..931a0f2 100644
--- a/src/Form/GuidelineRevisionRevertForm.php
+++ b/src/Form/GuidelineRevisionRevertForm.php
@@ -135,7 +135,7 @@ class GuidelineRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(GuidelineInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/GuidelineRevisionRevertTranslationForm.php b/src/Form/GuidelineRevisionRevertTranslationForm.php
index c764348..2ccb5a1 100644
--- a/src/Form/GuidelineRevisionRevertTranslationForm.php
+++ b/src/Form/GuidelineRevisionRevertTranslationForm.php
@@ -89,7 +89,7 @@ class GuidelineRevisionRevertTranslationForm extends GuidelineRevisionRevertForm
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/ProxyClass/ParamConverter/GuidelinePreviewConverter.php b/src/ProxyClass/ParamConverter/GuidelinePreviewConverter.php
index 9927895..d8ec553 100644
--- a/src/ProxyClass/ParamConverter/GuidelinePreviewConverter.php
+++ b/src/ProxyClass/ParamConverter/GuidelinePreviewConverter.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\guidelines\ProxyClass\ParamConverter {
 
+    use Drupal\Core\ParamConverter\ParamConverterInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Symfony\Component\Routing\Route;
     /**
      * Provides a proxy class for \Drupal\guidelines\ParamConverter\GuidelinePreviewConverter.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class GuidelinePreviewConverter implements \Drupal\Core\ParamConverter\ParamConverterInterface
+    class GuidelinePreviewConverter implements ParamConverterInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -46,7 +50,7 @@ namespace Drupal\guidelines\ProxyClass\ParamConverter {
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\guidelines\ProxyClass\ParamConverter {
         /**
          * {@inheritdoc}
          */
-        public function applies($definition, $name, \Symfony\Component\Routing\Route $route)
+        public function applies($definition, $name, Route $route)
         {
             return $this->lazyLoadItself()->applies($definition, $name, $route);
         }
