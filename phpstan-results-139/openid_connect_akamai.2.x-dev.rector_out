modules/contrib/openid_connect_akamai/openid_connect_akamai.install
modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php
modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php
modules/contrib/openid_connect_akamai/src/Plugin/OpenIDConnectClient/Akamai.php
modules/contrib/openid_connect_akamai/src/Routing/RouteSubscriber.php

2 files with changes
====================

1) modules/contrib/openid_connect_akamai/src/EventSubscriber/AnonymousRedirectSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\openid_connect_akamai\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
@@ @@
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

 /**
@@ @@
   /**
    * Redirects anonymous users to login endpoint for SSO.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The request event.
    */
-  public function redirectAnonymous(GetResponseEvent $event) {
+  public function redirectAnonymous(RequestEvent $event) {
     $request = $event->getRequest();

     if ($this->akamaiSettings['enable_sso']
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/openid_connect_akamai/src/Controller/OpenIDConnectRedirectController.php:28

    ---------- begin diff ----------
@@ @@
     $query = $this->requestStack->getCurrentRequest()->query;
     if ($query->get('error')) {
       // Set cookie which controls that the login attempt using the SSO failed.
-      $response->headers->setCookie(new Cookie('akamai_error', '1', time() + $configuration['sso_cookie_age']));
+      $response->headers->setCookie(Cookie::create('akamai_error', '1', time() + $configuration['sso_cookie_age']));
       if ($query->get('error') == 'login_required') {
         // Remove error message.
         $this->messenger()->deleteByType('warning');
@@ @@
     }

     if ($this->currentUser()->isAuthenticated()) {
-      $response->headers->setCookie(new Cookie('akamai_error', '1', 1));
+      $response->headers->setCookie(Cookie::create('akamai_error', '1', 1));
     }

     return $response;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * NewToStaticCallRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

