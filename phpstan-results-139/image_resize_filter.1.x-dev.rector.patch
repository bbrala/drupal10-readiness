diff --git a/image_resize_filter.info.yml b/image_resize_filter.info.yml
index 42d11e5..8fafbac 100644
--- a/image_resize_filter.info.yml
+++ b/image_resize_filter.info.yml
@@ -1,8 +1,7 @@
 name: Image Resize Filter
 type: module
 description: Resizes images based on width and height attributes and optionally link to the original image.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Filters
 configure: filter.admin_overview
 dependencies:
diff --git a/image_resize_filter.module b/image_resize_filter.module
index 27bbc26..8d18d94 100644
--- a/image_resize_filter.module
+++ b/image_resize_filter.module
@@ -320,7 +320,7 @@ function image_resize_filter_pathinfo($uri) {
  *   Settings for the input filter.
  */
 function image_resize_filter_image_tag($image = NULL, $settings = NULL) {
-  $src = file_create_url($image['destination']);
+  $src = \Drupal::service('file_url_generator')->generateAbsoluteString($image['destination']);
 
   // Strip the http:// from the path if the original did not include it.
   if (!preg_match('/^http[s]?:\/\/' . preg_quote($_SERVER['HTTP_HOST']) . '/', $image['original'])) {
diff --git a/src/Plugin/Filter/FilterImageResize.php b/src/Plugin/Filter/FilterImageResize.php
index a3d28cc..9e8eb23 100644
--- a/src/Plugin/Filter/FilterImageResize.php
+++ b/src/Plugin/Filter/FilterImageResize.php
@@ -141,7 +141,7 @@ class FilterImageResize extends FilterBase implements ContainerFactoryPluginInte
           $image['destination'] = $this->systemFileConfig->get('default_scheme') . '://' . $local_file_path;
         }
         else {
-          $image['destination'] = file_default_scheme() . '://' . $local_file_path;
+          $image['destination'] = \Drupal::config('system.file')->get('default_scheme') . '://' . $local_file_path;
         }
       }
       // Destination and local path are the same if we're just adding attributes.
@@ -155,7 +155,7 @@ class FilterImageResize extends FilterBase implements ContainerFactoryPluginInte
           $local_file_dir = $this->streamWrapperManager->getTarget($path_info['dirname']);
         }
         else {
-          $local_file_dir = file_uri_target($path_info['dirname']);
+          $local_file_dir = \Drupal::service('stream_wrapper_manager')->getTarget($path_info['dirname']);
         }
         $local_file_path = 'resize/' . ($local_file_dir ? $local_file_dir . '/' : '') . $path_info['filename'] . '-' . $image['expected_size']['width'] . 'x' . $image['expected_size']['height'] . '.' . $path_info['extension'];
         $image['destination'] = $path_info['scheme'] . '://' . $local_file_path;
diff --git a/tests/src/Functional/ResizeImageTest.php b/tests/src/Functional/ResizeImageTest.php
index 3fde48d..21bda11 100644
--- a/tests/src/Functional/ResizeImageTest.php
+++ b/tests/src/Functional/ResizeImageTest.php
@@ -38,7 +38,7 @@ class ResizeImageTest extends BrowserTestBase {
   protected $webUser;
 
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Setup Filtered HTML text format.
@@ -82,7 +82,7 @@ class ResizeImageTest extends BrowserTestBase {
       'uuid' => 'thisisauuid',
     ]);
     $file->save();
-    $relative_path = file_url_transform_relative(file_create_url($uri));
+    $relative_path = \Drupal::service('file_url_generator')->generateString($uri);
     $images['inline-image'] = '<img alt="This is a description" data-entity-type="file" data-entity-uuid="' . $file->uuid() . '" height="50" src="' . $relative_path . '" width="44">';
     $comment = [];
     foreach ($images as $key => $img) {
@@ -91,11 +91,12 @@ class ResizeImageTest extends BrowserTestBase {
     $edit = array(
       'comment_body[0][value]' => implode("\n", $comment),
     );
-    $this->drupalPostForm('node/' . $this->node->id(), $edit, t('Save'));
+    $this->drupalGet('node/' . $this->node->id());
+    $this->submitForm($edit, t('Save'));
     $expected = 'public://resize/' . $image->name . '-44x50.png';
-    $expected_relative_path = file_url_transform_relative(file_create_url($expected));
-    $this->assertNoRaw($relative_path, 'The original image is gone.');
-    $this->assertRaw($expected_relative_path, 'The resize version was found.');
+    $expected_relative_path = \Drupal::service('file_url_generator')->generateString($expected);
+    $this->assertSession()->responseNotContains($relative_path);
+    $this->assertSession()->responseContains($expected_relative_path);
     $this->assertTrue(file_exists($expected), 'The resize file exists.');
   }
 
