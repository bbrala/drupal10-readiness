modules/contrib/nagios/nagios.api.php
modules/contrib/nagios/src/Form/IgnoredModulesForm.php
modules/contrib/nagios/nagios.drush.inc
modules/contrib/nagios/nagios.module
modules/contrib/nagios/src/Commands/NagiosCommands.php
modules/contrib/nagios/src/Form/SettingsForm.php
modules/contrib/nagios/src/Controller/RequirementsController.php
modules/contrib/nagios/src/Controller/StatuspageController.php
modules/contrib/nagios/src/EventSubscriber/MaintenanceModeSubscriber.php
modules/contrib/nagios/src/Plugin/migrate/source/NagiosDynamicSettings.php
modules/contrib/nagios/tests/modules/nagios_hook_test_module/nagios_hook_test_module.module
modules/contrib/nagios/tests/phpstan-bootstrap.php
modules/contrib/nagios/tests/src/Functional/SettingsFormTest.php
modules/contrib/nagios/tests/src/Kernel/CustomHookCheckTest.php
modules/contrib/nagios/tests/src/Kernel/MaintenanceModeTest.php
modules/contrib/nagios/tests/src/Kernel/NagiosCheckTest.php
modules/contrib/nagios/tests/src/Kernel/WatchdogCheckTest.php

2 files with changes
====================

1) modules/contrib/nagios/src/EventSubscriber/MaintenanceModeSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\nagios\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\nagios\Controller\StatuspageController;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 class MaintenanceModeSubscriber implements EventSubscriberInterface {
@@ @@
   /**
    * Make the status page available when Drupal is in maintenance mode.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function onKernelRequestMaintenance(GetResponseEvent $event) {
+  public function onKernelRequestMaintenance(RequestEvent $event) {
     $config = \Drupal::config('nagios.settings');
     $request = $event->getRequest();
     $nagios_path = '/' . $config->get('nagios.statuspage.path');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/nagios/tests/src/Kernel/MaintenanceModeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\nagios\Kernel;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Form\FormState;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 use Drupal\nagios\Controller\StatuspageController;
@@ @@
 use Drupal\system\Form\SiteMaintenanceModeForm;
 use Prophecy\Argument;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;

 /**
  * Tests the functionality to monitor cron.
@@ @@
  */
 class MaintenanceModeTest extends EntityKernelTestBase {

+  use ProphecyTrait;
   /**
    * Modules to install.
    *
@@ @@

   public function testSubscriber() {
     $subscriber = new MaintenanceModeSubscriber();
-    $get_response_event = $this->prophesize(GetResponseEvent::class);
+    $get_response_event = $this->prophesize(RequestEvent::class);
     $request = $this->prophesize(Request::class);

     /** @noinspection PhpUndefinedMethodInspection */
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

