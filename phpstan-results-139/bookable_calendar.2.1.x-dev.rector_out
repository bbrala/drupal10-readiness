modules/contrib/bookable_calendar/bookable_calendar.install
modules/contrib/bookable_calendar/src/BookableCalendarInterface.php
modules/contrib/bookable_calendar/src/Controller/BookableCalendarListController.php
modules/contrib/bookable_calendar/src/Notification.php
modules/contrib/bookable_calendar/src/BookableCalendarListBuilder.php
modules/contrib/bookable_calendar/bookable_calendar.module
modules/contrib/bookable_calendar/src/BookableCalendarOpeningAccessControlHandler.php
modules/contrib/bookable_calendar/src/Entity/BookableCalendar.php
modules/contrib/bookable_calendar/src/BookableCalendarOpeningInstanceAccessControlHandler.php
modules/contrib/bookable_calendar/src/BookableCalendarOpeningInstanceInterface.php
modules/contrib/bookable_calendar/src/BookableCalendarOpeningInstanceListBuilder.php
modules/contrib/bookable_calendar/src/BookableCalendarOpeningInstanceViewsData.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningIsActive.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningIsActiveValidator.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningMaxPartySize.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningMaxPartySizeValidator.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningNotInPast.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningNotInPastValidator.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningTooFarAway.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningTooFarAwayValidator.php
modules/contrib/bookable_calendar/src/BookableCalendarOpeningInterface.php
modules/contrib/bookable_calendar/src/BookableCalendarOpeningListBuilder.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningTooSoon.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningTooSoonValidator.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningVacancy.php
modules/contrib/bookable_calendar/src/Plugin/Validation/Constraint/CalendarOpeningVacancyValidator.php
modules/contrib/bookable_calendar/src/BookableCalendarOpeningViewsData.php
modules/contrib/bookable_calendar/src/Plugin/views/argument/AvailableSlotsArgument.php
modules/contrib/bookable_calendar/src/BookingAccessControlHandler.php
modules/contrib/bookable_calendar/src/BookingContactAccessControlHandler.php
modules/contrib/bookable_calendar/src/AvailableSlotsItemList.php
modules/contrib/bookable_calendar/src/Plugin/views/argument/MinimumAvailableSlotsArgument.php
modules/contrib/bookable_calendar/src/Plugin/views/field/AvailableSlots.php
modules/contrib/bookable_calendar/src/Entity/BookableCalendarOpening.php
modules/contrib/bookable_calendar/src/Plugin/views/field/MaxSlots.php
modules/contrib/bookable_calendar/src/BookingContactInterface.php
modules/contrib/bookable_calendar/src/BookingContactListBuilder.php
modules/contrib/bookable_calendar/src/Plugin/views/filter/AvailableSlotsFilter.php
modules/contrib/bookable_calendar/src/BookableCalendarAccessControlHandler.php
modules/contrib/bookable_calendar/src/BookingInterface.php
modules/contrib/bookable_calendar/src/BookingListBuilder.php
modules/contrib/bookable_calendar/src/BookingViewsData.php
modules/contrib/bookable_calendar/src/Entity/BookableCalendarOpeningInstance.php
modules/contrib/bookable_calendar/src/Controller/BookableCalendarApiController.php
modules/contrib/bookable_calendar/src/Entity/Booking.php
modules/contrib/bookable_calendar/src/Entity/BookingContact.php
modules/contrib/bookable_calendar/src/EventSubscriber/BookableCalendarRouteSubscriber.php
modules/contrib/bookable_calendar/src/Form/BookableCalendarForm.php
modules/contrib/bookable_calendar/src/Controller/BookableCalendarCheckInController.php
modules/contrib/bookable_calendar/src/Controller/BookableCalendarController.php
modules/contrib/bookable_calendar/src/Form/BookableCalendarOpeningForm.php
modules/contrib/bookable_calendar/src/Form/BookableCalendarOpeningInstanceForm.php
modules/contrib/bookable_calendar/src/Form/BookableCalendarOpeningInstanceSettingsForm.php
modules/contrib/bookable_calendar/src/Form/BookableCalendarOpeningSettingsForm.php
modules/contrib/bookable_calendar/src/Form/BookableCalendarSettingsForm.php
modules/contrib/bookable_calendar/src/Form/BookingContactCreateForm.php
modules/contrib/bookable_calendar/src/Form/BookingContactForm.php
modules/contrib/bookable_calendar/src/Form/BookingContactSettingsForm.php
modules/contrib/bookable_calendar/src/Form/BookingForm.php
modules/contrib/bookable_calendar/src/Form/BookingSettingsForm.php
modules/contrib/bookable_calendar/src/Form/SettingsForm.php
modules/contrib/bookable_calendar/src/MaxSlotsItemList.php

4 files with changes
====================

1) modules/contrib/bookable_calendar/src/BookingContactListBuilder.php:86

    ---------- begin diff ----------
@@ @@
    */
   public function buildRow(EntityInterface $entity) {
     /* @var $entity \Drupal\bookable_calendar\BookingContactInterface */
-    $row['id'] = $entity->link();
+    $row['id'] = $entity->toLink()->toString();
     return $row + parent::buildRow($entity);
   }
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bookable_calendar/src/Form/BookingContactForm.php:19

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New booking contact %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/bookable_calendar/src/Form/BookableCalendarOpeningForm.php:19

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New bookable calendar opening %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/bookable_calendar/src/Form/BookableCalendarForm.php:19

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New bookable calendar %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

