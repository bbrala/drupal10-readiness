diff --git a/src/EventSubscriber/SimpleMegaMenuAccessCanonicalPageSubscriber.php b/src/EventSubscriber/SimpleMegaMenuAccessCanonicalPageSubscriber.php
index 8eb0aac..ac22f28 100644
--- a/src/EventSubscriber/SimpleMegaMenuAccessCanonicalPageSubscriber.php
+++ b/src/EventSubscriber/SimpleMegaMenuAccessCanonicalPageSubscriber.php
@@ -2,10 +2,10 @@
 
 namespace Drupal\simple_megamenu\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Core\Routing\UrlGeneratorInterface;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
@@ -47,10 +47,10 @@ class SimpleMegaMenuAccessCanonicalPageSubscriber implements EventSubscriberInte
   /**
    * This method is called whenever the kernel.request event is dispatched.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event object.
    */
-  public function onRequestCheckAccess(GetResponseEvent $event) {
+  public function onRequestCheckAccess(RequestEvent $event) {
     $request = $event->getRequest();
 
     // If we've got an exception, nothing to do here.
diff --git a/src/Tests/SimpleMegaMenuTest.php b/src/Tests/SimpleMegaMenuTest.php
index d957bec..f716e3c 100644
--- a/src/Tests/SimpleMegaMenuTest.php
+++ b/src/Tests/SimpleMegaMenuTest.php
@@ -65,7 +65,7 @@ class SimpleMegaMenuTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->normalUser = $this->drupalCreateUser([
@@ -90,7 +90,8 @@ class SimpleMegaMenuTest extends BrowserTestBase {
     $edit = [
       'settings[depth]' => '0',
     ];
-    $this->drupalPostForm($block_main_menu_path, $edit, 'Save block');
+    $this->drupalGet($block_main_menu_path);
+    $this->submitForm($edit, 'Save block');
   }
 
   /**
@@ -186,14 +187,14 @@ class SimpleMegaMenuTest extends BrowserTestBase {
     $content_path = '/admin/content/simple_mega_menu/add/megamenu';
     // Check that the field appears in the form.
     $this->drupalGet($content_path);
-    $this->assertFieldByName('name[0][value]');
-    $this->assertFieldByName('field_image_title[0][value]');
-    $this->assertFieldByName('field_image_link[0][uri]');
-    $this->assertFieldByName('field_text[0][value]');
-    $this->assertFieldByName('field_links[0][uri]');
-    $this->assertFieldByName('field_links[0][title]');
-    $this->assertText('The name of the Simple mega menu entity.');
-    $this->assertResponse(200);
+    $this->assertSession()->fieldExists('name[0][value]');
+    $this->assertSession()->fieldExists('field_image_title[0][value]');
+    $this->assertSession()->fieldExists('field_image_link[0][uri]');
+    $this->assertSession()->fieldExists('field_text[0][value]');
+    $this->assertSession()->fieldExists('field_links[0][uri]');
+    $this->assertSession()->fieldExists('field_links[0][title]');
+    $this->assertSession()->pageTextContains('The name of the Simple mega menu entity.');
+    $this->assertSession()->statusCodeEquals(200);
 
     // Create a mage menu entity with some fields filled.
     $fields = [
@@ -223,31 +224,32 @@ class SimpleMegaMenuTest extends BrowserTestBase {
     $menu_path = '/admin/structure/menu/item/';
 
     $this->drupalGet($menu_path . $menu_service->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertFieldByName('simple_mega_menu');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->fieldExists('simple_mega_menu');
 
     $edit = [
       'simple_mega_menu' => $mega_menu->label() . ' (' . $mega_menu->id() . ')',
     ];
-    $this->drupalPostForm($menu_path . $menu_service->id() . '/edit', $edit, 'Save');
-    $this->assertText('The menu link has been saved.');
+    $this->drupalGet($menu_path . $menu_service->id() . '/edit');
+    $this->submitForm($edit, 'Save');
+    $this->assertSession()->pageTextContains('The menu link has been saved.');
 
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertText('Services main');
+    $this->assertSession()->pageTextContains('Services main');
     // Check the Mega menu is present.
-    $this->assertText('CTA text for mega menu');
-    $this->assertText('See Flocon de toile');
-    $this->assertText('Contact us');
+    $this->assertSession()->pageTextContains('CTA text for mega menu');
+    $this->assertSession()->pageTextContains('See Flocon de toile');
+    $this->assertSession()->pageTextContains('Contact us');
 
     // Access to the canonical page.
     $this->drupalGet('/admin/content/simple_mega_menu/' . $mega_menu->id());
-    $this->assertResponse('200');
+    $this->assertSession()->statusCodeEquals('200');
 
     $this->drupalLogout();
     $this->drupalLogin($this->normalUser);
 
     $this->drupalGet('/admin/content/simple_mega_menu/' . $mega_menu->id());
-    $this->assertResponse('404');
+    $this->assertSession()->statusCodeEquals('404');
 
     /* @var \Drupal\simple_megamenu\Entity\SimpleMegaMenu $mega_menu */
     $mega_menu2 = $this->createMegaMenu('megamenu', 'Services2', 'en', $this->user->id(), $fields);
