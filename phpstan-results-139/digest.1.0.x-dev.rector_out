modules/contrib/digest/digest.install
modules/contrib/digest/src/Form/Digest/DigestEditForm.php
modules/contrib/digest/digest.module
modules/contrib/digest/src/Controller/DigestController.php
modules/contrib/digest/src/DigestListBuilder.php
modules/contrib/digest/src/Form/Digest/DigestTestForm.php
modules/contrib/digest/src/DigestManager.php
modules/contrib/digest/src/Form/DigestSettingsForm.php
modules/contrib/digest/src/Plugin/Field/FieldType/SubscriptionItem.php
modules/contrib/digest/src/DigestManagerInterface.php
modules/contrib/digest/src/Entity/Digest.php
modules/contrib/digest/src/Plugin/Field/FieldWidget/SubscriptionWidget.php
modules/contrib/digest/src/Plugin/QueueWorker/DigestSendQueue.php
modules/contrib/digest/tests/modules/digest_test/src/Plugin/Block/TestAdminBlock.php
modules/contrib/digest/tests/src/Functional/DigestListBuilderTest.php
modules/contrib/digest/src/Entity/DigestInterface.php
modules/contrib/digest/src/Form/Digest/DigestDeleteForm.php
modules/contrib/digest/tests/src/Functional/Form/Digest/DigestEditFormTest.php
modules/contrib/digest/tests/src/Functional/Form/Digest/DigestTestFormTest.php
modules/contrib/digest/tests/src/Functional/Form/DigestSettingsFormTest.php
modules/contrib/digest/tests/src/Functional/Plugin/Field/FieldWidget/SubscriptionWidgetTest.php
modules/contrib/digest/tests/src/Kernel/DigestManagerTest.php
modules/contrib/digest/tests/src/Kernel/Entity/DigestTest.php
modules/contrib/digest/tests/src/Unit/Controller/DigestControllerTest.php
modules/contrib/digest/tests/src/Unit/Plugin/QueueWorker/DigestSendQueueTest.php

4 files with changes
====================

1) modules/contrib/digest/tests/src/Kernel/Entity/DigestTest.php:68

    ---------- begin diff ----------
@@ @@

     $title = $this->randomMachineName();
     $this->digest->setTitle($title);
-    $this->assertEqual($title, $this->digest->getTitle());
+    $this->assertEquals($title, $this->digest->getTitle());

   }

@@ @@

     $description = $this->randomMachineName();
     $this->digest->setDescription($description);
-    $this->assertEqual($description, $this->digest->getDescription());
+    $this->assertEquals($description, $this->digest->getDescription());

   }

@@ @@
     // Should successfully set and retrieve a cron expression.
     $this->digest->setSchedule($valid_cron);
     $expression = $this->digest->getSchedule()->getExpression();
-    $this->assertEqual($valid_cron, $expression);
+    $this->assertEquals($valid_cron, $expression);

     try {

@@ @@

       // The schedule should not have changed.
       $expression = $this->digest->getSchedule()->getExpression();
-      $this->assertEqual($valid_cron, $expression);
+      $this->assertEquals($valid_cron, $expression);

     }

@@ @@
     $valid_cron = '0 0 * * 5';
     $this->digest->set('schedule', $valid_cron);
     $expression = $this->digest->getSchedule();
-    $this->assertEqual($valid_cron, $expression);
+    $this->assertEquals($valid_cron, $expression);

     // The same results should occur if a CronExpression object is passed in.
     $cron_expression = new CronExpression($valid_cron);
     $this->digest->setSchedule($cron_expression);
     $expression = $this->digest->getSchedule();
-    $this->assertEqual($cron_expression, $expression);
+    $this->assertEquals($cron_expression, $expression);

     // The next send date should be updated when changing the schedule.
     $valid_cron = '0 0 * * 3';
@@ @@
     // Should successfully set and retrieve the display block.
     $this->digest->setDisplayBlock($valid_block);
     $block = $this->digest->getDisplayBlock();
-    $this->assertEqual($valid_block, $block->getPluginId());
+    $this->assertEquals($valid_block, $block->getPluginId());

     try {

@@ @@

       // The display block should not have changed.
       $block = $this->digest->getDisplayBlock();
-      $this->assertEqual($valid_block, $block->getPluginId());
+      $this->assertEquals($valid_block, $block->getPluginId());

     }

@@ @@
     $valid_block = 'user_login_block';
     $this->digest->set('display_block', $valid_block);
     $block = $this->digest->getDisplayBlock();
-    $this->assertEqual($valid_block, $block->getPluginId());
+    $this->assertEquals($valid_block, $block->getPluginId());

   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/digest/tests/src/Kernel/DigestManagerTest.php:70

    ---------- begin diff ----------
@@ @@
     // The enabled digest should be returned.
     $enabled = $this->manager->getEnabled();
     $this->assertCount(1, $enabled);
-    $this->assertEqual($digest_1->id(), reset($enabled)->id());
+    $this->assertEquals($digest_1->id(), reset($enabled)->id());

     $this->storage->create([
       'id' => 'digest_2',
@@ @@
     // The new digest should not be returned.
     $enabled = $this->manager->getEnabled();
     $this->assertCount(1, $enabled);
-    $this->assertEqual($digest_1->id(), reset($enabled)->id());
+    $this->assertEquals($digest_1->id(), reset($enabled)->id());

   }

@@ @@
     $this->assertCount(1, $options);

     // Check that the options were created correctly.
-    $this->assertEqual($options[$digest_1->id()], $digest_1->getTitle());
+    $this->assertEquals($options[$digest_1->id()], $digest_1->getTitle());
     $this->assertFalse(isset($options[$digest_2->id()]));

   }
@@ @@

     // Check that the data was created correctly.
     $data = $queue->claimItem()->data;
-    $this->assertEqual($digest_1->id(), $data['digest']);
-    $this->assertEqual($user->id(), $data['user']);
+    $this->assertEquals($digest_1->id(), $data['digest']);
+    $this->assertEquals($user->id(), $data['user']);

     // Check that the send date of the digest has been updated.
     $this->assertFalse($digest_1->shouldSend());
-    $this->assertEqual($digest_1->getNextSendDate(), $digest_1->getSchedule()->getNextRunDate());
+    $this->assertEquals($digest_1->getNextSendDate(), $digest_1->getSchedule()->getNextRunDate());

   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/digest/tests/src/Functional/Form/Digest/DigestTestFormTest.php:85

    ---------- begin diff ----------
@@ @@
       ->fieldValueEquals($user_field, $user_field_value);

     // Send the digest.
-    $this->drupalPostForm(NULL, [], 'Send');
+    $this->submitForm([], 'Send');

     $this->assertSession()->pageTextContains('The digest was sent successfully.');

@@ @@
     $this->assertSession()->statusCodeEquals(200);

     // Send the digest.
-    $this->drupalPostForm(NULL, [], 'Send');
+    $this->submitForm([], 'Send');

     $this->assertSession()->pageTextContains('The digest could not be sent.');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/digest/tests/src/Functional/Form/Digest/DigestEditFormTest.php:77

    ---------- begin diff ----------
@@ @@
     $blockUsed = 'page_title_block';
     $page->fillField('display_block', $blockUsed);

-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->pageTextContains('The ' . $titleUsed . ' digest has been created');

     // Check the corresponding entity was created.
@@ @@

     $this->assertCount(1, $digests);
     $digest = reset($digests);
-    $this->assertEqual($digest->get('title'), $titleUsed);
-    $this->assertEqual($digest->get('schedule'), $scheduleUsed);
-    $this->assertEqual($digest->get('display_block'), $blockUsed);
+    $this->assertEquals($digest->get('title'), $titleUsed);
+    $this->assertEquals($digest->get('schedule'), $scheduleUsed);
+    $this->assertEquals($digest->get('display_block'), $blockUsed);

   }

@@ @@
     $newTitle = $this->randomMachineName();
     $this->getSession()->getPage()->fillField('title', $newTitle);

-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->pageTextContains('The ' . $newTitle . ' digest has been updated');

     // Check the corresponding entity was updated.
@@ @@

     $this->assertCount(1, $digests);
     $digest = reset($digests);
-    $this->assertEqual($digest->get('title'), $newTitle);
+    $this->assertEquals($digest->get('title'), $newTitle);

   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

