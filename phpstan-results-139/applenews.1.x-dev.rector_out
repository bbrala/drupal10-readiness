modules/contrib/applenews/applenews.install
modules/contrib/applenews/src/ApplenewsTextStyleInterface.php
modules/contrib/applenews/src/Form/ApplenewsTemplateForm.php
modules/contrib/applenews/src/ArticleListBuilder.php
modules/contrib/applenews/src/Plugin/applenews/ComponentType/ApplenewsDefaultImageComponentType.php
modules/contrib/applenews/tests/src/Functional/ApplenewsAdminTest.php
modules/contrib/applenews/applenews.module
modules/contrib/applenews/src/ChannelInterface.php
modules/contrib/applenews/src/Plugin/applenews/ComponentType/ApplenewsDefaultNestedComponentType.php
modules/contrib/applenews/src/Plugin/applenews/ComponentType/ApplenewsDefaultTextComponentType.php
modules/contrib/applenews/src/ChannelListBuilder.php
modules/contrib/applenews/src/Plugin/migrate/process/FieldName.php
modules/contrib/applenews/src/Annotation/ApplenewsComponentType.php
modules/contrib/applenews/src/Commands/ApplenewsCommands.php
modules/contrib/applenews/src/AppleNewsRequestDataTrait.php
modules/contrib/applenews/src/ApplenewsManager.php
modules/contrib/applenews/src/Plugin/migrate/source/ApplenewsArticle.php
modules/contrib/applenews/src/Controller/ApplenewsChannelController.php
modules/contrib/applenews/src/Controller/ApplenewsPreviewController.php
modules/contrib/applenews/src/Publisher.php
modules/contrib/applenews/src/Controller/ApplenewsTemplateListBuilder.php
modules/contrib/applenews/tests/src/Functional/ApplenewsChannelAdminTest.php
modules/contrib/applenews/tests/src/Functional/ApplenewsTemplateAdminTest.php
modules/contrib/applenews/src/Derivative/ApplenewsDefaultComponentImageTypeDeriver.php
modules/contrib/applenews/src/PublisherInterface.php
modules/contrib/applenews/src/Derivative/ApplenewsDefaultComponentNestedDeriver.php
modules/contrib/applenews/src/Repository/ApplenewsChannelRepository.php
modules/contrib/applenews/src/Derivative/ApplenewsDefaultComponentTextTypeDeriver.php
modules/contrib/applenews/src/Derivative/ApplenewsDefaultDeriverInterface.php
modules/contrib/applenews/src/Repository/ApplenewsRepositoryBase.php
modules/contrib/applenews/src/Entity/ApplenewsArticle.php
modules/contrib/applenews/src/Repository/ApplenewsTemplateRepository.php
modules/contrib/applenews/tests/src/Functional/ApplenewsTestBase.php
modules/contrib/applenews/src/TextStyleListBuilder.php
modules/contrib/applenews/tests/src/Kernel/ApplenewsManagerTest.php
modules/contrib/applenews/src/TextStyleStorage.php
modules/contrib/applenews/tests/modules/applenews_test/src/ApplenewsTestServiceProvider.php
modules/contrib/applenews/tests/modules/applenews_test/src/EventSubscriber/DocumentPostTransformEventSubscriber.php
modules/contrib/applenews/src/Entity/ApplenewsChannel.php
modules/contrib/applenews/tests/modules/applenews_test/src/Publisher.php
modules/contrib/applenews/src/Form/ChannelDeleteForm.php
modules/contrib/applenews/tests/src/Kernel/Normalizer/ApplenewsContentEntityNormalizerTest.php
modules/contrib/applenews/src/Form/ChannelForm.php
modules/contrib/applenews/tests/src/Functional/AppleNewsWidgetTest.php
modules/contrib/applenews/src/ApplenewsPreviewBuilder.php
modules/contrib/applenews/src/Form/SettingsForm.php
modules/contrib/applenews/tests/src/Kernel/Normalizer/ApplenewsImageComponentNormalizerTest.php
modules/contrib/applenews/src/Entity/ApplenewsTemplate.php
modules/contrib/applenews/src/Form/TextStyleDeleteForm.php
modules/contrib/applenews/src/Form/TextStyleForm.php
modules/contrib/applenews/tests/src/Traits/AppleNewsTestTrait.php
modules/contrib/applenews/src/ApplenewsTemplateInterface.php
modules/contrib/applenews/src/Entity/ApplenewsTextStyle.php
modules/contrib/applenews/src/Event/DocumentPostTransformEvent.php
modules/contrib/applenews/src/Normalizer/ApplenewsComponentNormalizerBase.php
modules/contrib/applenews/src/Exception/ApplenewsInvalidResponseException.php
modules/contrib/applenews/src/Form/AppleNewsArticleDeleteForm.php
modules/contrib/applenews/src/Normalizer/ApplenewsContentEntityNormalizer.php
modules/contrib/applenews/src/Form/ApplenewsTemplateDeleteForm.php
modules/contrib/applenews/src/Normalizer/ApplenewsFieldItemListNormalizer.php
modules/contrib/applenews/src/Normalizer/ApplenewsFieldItemNormalizer.php
modules/contrib/applenews/src/Normalizer/ApplenewsImageComponentNormalizer.php
modules/contrib/applenews/src/Normalizer/ApplenewsNestedComponentNormalizer.php
modules/contrib/applenews/src/Normalizer/ApplenewsNormalizerBase.php
modules/contrib/applenews/src/Normalizer/ApplenewsTextComponentNormalizer.php
modules/contrib/applenews/src/Plugin/ApplenewsComponentTypeBase.php
modules/contrib/applenews/src/Plugin/ApplenewsComponentTypeInterface.php
modules/contrib/applenews/src/Plugin/ApplenewsComponentTypeManager.php
modules/contrib/applenews/src/Plugin/Field/FieldType/Applenews.php
modules/contrib/applenews/src/Plugin/Field/FieldWidget/Applenews.php
modules/contrib/applenews/src/Plugin/applenews/ComponentType/ApplenewsDefaultDividerComponentType.php

7 files with changes
====================

1) modules/contrib/applenews/src/ApplenewsPreviewBuilder.php:150

    ---------- begin diff ----------
@@ @@
     $this->archive = !empty($filename) ? 'applenews-' . $filename . '.zip' : 'applenews.zip';
     $this->archiveRealPath = $filesystem->realpath($this->fileBuildUri($this->directory));
     $this->archiveFile = $filesystem->realpath($this->fileBuildUri($this->directory . $this->archive));
-    $this->archiveUrl = file_create_url($this->fileBuildUri($this->directory . $this->archive));
+    $this->archiveUrl = \Drupal::service('file_url_generator')->generateAbsoluteString($this->fileBuildUri($this->directory . $this->archive));

     if ($entity_id) {
       $drupal_entity_directory = $this->fileBuildUri($this->directory . $entity_id);
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/applenews/tests/src/Kernel/Normalizer/ApplenewsImageComponentNormalizerTest.php:53

    ---------- begin diff ----------
@@ @@
     $this->applenewsImageComponentNormalizer
       ->method('fileCreateUrl')
       ->willReturn('http://example.com/test/example.jpg');
-    $this->serializer = $this->getMockBuilder(Serializer::class)
-      ->getMock();
+    $this->serializer = $this->createMock(Serializer::class);
     $this->applenewsImageComponentNormalizer->setSerializer($this->serializer);
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/applenews/tests/src/Functional/ApplenewsAdminTest.php:79

    ---------- begin diff ----------
@@ @@
     $edit['api_secret'] = '';
     $this->submitForm($edit, 'Save configuration');
     $assert_session->pageTextContains('The configuration options have been saved.');
-    $this->assertEqual(\Drupal::config('applenews.settings')->get('api_secret'), $api_secret);
+    $this->assertEquals(\Drupal::config('applenews.settings')->get('api_secret'), $api_secret);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/applenews/src/Event/DocumentPostTransformEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\applenews\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use ChapterThree\AppleNewsAPI\Document;
 use Drupal\applenews\Entity\ApplenewsTemplate;
 use Drupal\Core\Entity\ContentEntityInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Event fires after an entity has been transformed into a Apple News Document.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/applenews/tests/src/Functional/AppleNewsWidgetTest.php:115

    ---------- begin diff ----------
@@ @@
     $assert_session->pageTextContains('No channels available');
     $assert_session->pageTextContains('Download the Apple News generated document');
     $assert_session->pageTextContains($template->label());
-    $this->assertRaw(sprintf('admin/config/services/applenews/node/%s/%s/%s/download', $node->id(), $node->getLoadedRevisionId(), $template->id()));
+    $this->assertSession()->responseContains(sprintf('admin/config/services/applenews/node/%s/%s/%s/download', $node->id(), $node->getLoadedRevisionId(), $template->id()));
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertRawRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/applenews/src/Normalizer/ApplenewsImageComponentNormalizer.php:73

    ---------- begin diff ----------
@@ @@
    *   Return value from file_create_url.
    */
   public function fileCreateUrl($uri) {
-    return file_create_url($uri);
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
   }

 }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/applenews/src/Normalizer/ApplenewsContentEntityNormalizer.php:110

    ---------- begin diff ----------
@@ @@
     }

     $event = new DocumentPostTransformEvent($object, $document, $template);
-    $this->eventDispatcher->dispatch(DocumentPostTransformEvent::DOCUMENT_POST_TRANSFORM_EVENT, $event);
+    $this->eventDispatcher->dispatch($event, DocumentPostTransformEvent::DOCUMENT_POST_TRANSFORM_EVENT);

     // @todo It's atypical for a normalizer service to end this way. Typically
     //   the normalizer would leave it completely in the normalized format, here
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

