diff --git a/tests/src/FunctionalJavascript/MyGengoTest.php b/tests/src/FunctionalJavascript/MyGengoTest.php
index 603ad45..e6fa68e 100644
--- a/tests/src/FunctionalJavascript/MyGengoTest.php
+++ b/tests/src/FunctionalJavascript/MyGengoTest.php
@@ -354,9 +354,10 @@ class MyGengoTest extends TMGMTTestBase {
     $orders = \Drupal::state()->get('tmgmt_mygengo_test_orders', array());
     $order_id = key($orders);
     \Drupal::state()->set('tmgmt_mygengo_test_last_gengo_response', (object) array('jobs' => $orders[$order_id]));
+    $this->drupalGet('admin/tmgmt/jobs/' . $job->id());
 
     // Pull jobs from gengo.
-    $this->drupalPostForm('admin/tmgmt/jobs/' . $job->id(), array(), t('Pull translations'));
+    $this->submitForm(array(), t('Pull translations'));
     $this->assertSession()->pageTextContains(t('All available translations from Gengo have been pulled.'));
 
     // Check the updated mappings of item 1.
@@ -572,13 +573,14 @@ class MyGengoTest extends TMGMTTestBase {
     // Get mapping for first data item of second job item -> Title "Nice day".
     $remotes = RemoteMapping::loadByLocalData($job->id(), $item->id(), 'title');
     $remote = reset($remotes);
-    $this->drupalPostForm('admin/tmgmt/items/' . $item->id(), array(), '✉');
+    $this->drupalGet('admin/tmgmt/items/' . $item->id());
+    $this->submitForm(array(), '✉');
     $this->assertSession()->pageTextContains(t('New comment'));
     $comment = $this->randomMachineName();
     $edit = array(
       $remote->getRemoteIdentifier2() . '_comment' => $comment,
     );
-    $this->drupalPostForm(NULL, $edit, t('Submit comment'));
+    $this->submitForm($edit, t('Submit comment'));
 
     // Reload the review form again and check if comment text is present.
     $this->drupalGet('admin/tmgmt/items/' . $item->id());
@@ -597,11 +599,12 @@ class MyGengoTest extends TMGMTTestBase {
 
     // Request a review.
     $comment = $this->randomMachineName();
-    $this->drupalPostForm('admin/tmgmt/items/' . $item->id(), array(), '✍');
+    $this->drupalGet('admin/tmgmt/items/' . $item->id());
+    $this->submitForm(array(), '✍');
     $edit = array(
       $remote->getRemoteIdentifier2() . '_comment' => $comment,
     );
-    $this->drupalPostForm(NULL, $edit, t('Request revision'));
+    $this->submitForm($edit, t('Request revision'));
 
     $job = Job::load(($job->id()));
     $data = $job->getData(\Drupal::service('tmgmt.data')->ensureArrayKey($key));
@@ -647,9 +650,10 @@ class MyGengoTest extends TMGMTTestBase {
     $data->jobs[$key]['status'] = 'approved';
     $data->jobs[$key]['body_tgt'] = 'Title translated';
     \Drupal::state()->set('tmgmt_mygengo_test_last_gengo_response', $data);
+    $this->drupalGet('admin/tmgmt/jobs/' . $job->id());
 
     // Pull jobs from gengo.
-    $this->drupalPostForm('admin/tmgmt/jobs/' . $job->id(), array(), t('Pull translations'));
+    $this->submitForm(array(), t('Pull translations'));
     $this->assertSession()->pageTextContains(t('All available translations from Gengo have been pulled.'));
 
     // Reload item data.
@@ -722,7 +726,7 @@ class MyGengoTest extends TMGMTTestBase {
       'settings[api_public_key]' => 'wrong key',
       'settings[api_private_key]' => 'wrong key',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Connect'));
+    $this->submitForm($edit, t('Connect'));
     $this->assertSession()->pageTextContains(t('The "Gengo API Public key" is not correct.'));
 
     // Test connection with valid credentials.
@@ -730,14 +734,14 @@ class MyGengoTest extends TMGMTTestBase {
       'settings[api_public_key]' => 'correct key',
       'settings[api_private_key]' => 'correct key',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Connect'));
+    $this->submitForm($edit, t('Connect'));
     $this->assertSession()->pageTextContains('Successfully connected!');
 
     // Assert that default remote languages mappings were updated.
     $this->assertSession()->optionExists('edit-remote-languages-mappings-en', 'en');
     $this->assertSession()->optionExists('edit-remote-languages-mappings-de', 'de');
 
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->submitForm([], t('Save'));
     $this->assertSession()->pageTextContainsOnce(t('@label configuration has been updated.', ['@label' => $this->translator->label()]));
   }
 
