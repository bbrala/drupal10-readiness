diff --git a/drowl_paragraphs.api.php b/drowl_paragraphs.api.php
index 33268e4..cccdae6 100644
--- a/drowl_paragraphs.api.php
+++ b/drowl_paragraphs.api.php
@@ -1,13 +1,13 @@
-<?php
-
-
-// ---- Other hook / manipulation examples
+<?php
+
+use Drupal\Core\Form\FormStateInterface;
+// ---- Other hook / manipulation examples
 /**
  * Implements hook_field_widget_form_alter.
- */
-function MYMODULE_field_widget_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context){
+ */
+function MYMODULE_field_widget_form_alter(&$element, FormStateInterface $form_state, $context){
   // Add custom styles:
   if (get_class($context['widget']) === 'Drupal\drowl_paragraphs\Plugin\Field\FieldWidget\DrowlParagraphsSettingsDefaultWidget' && !empty($element['style']['style_boxstyle']['style_boxstyle'])) {
     $element['style']['style_boxstyle']['style_boxstyle']['#options']['drowl_customer_XYZ'] = 'Customer: XYZ';
   }
-}
\ No newline at end of file
+}
diff --git a/drowl_paragraphs.module b/drowl_paragraphs.module
index f065bdb..023bf7c 100644
--- a/drowl_paragraphs.module
+++ b/drowl_paragraphs.module
@@ -1,4 +1,6 @@
 <?php
+use Drupal\Component\Serialization\Json;
+use Drupal\paragraphs\Entity\Paragraph;
 /**
  * @file
  * DROWL paragraphs enhancements.
@@ -95,7 +97,7 @@ function drowl_paragraphs_preprocess_paragraph(&$variables) {
           }
           if (!empty($animations)) {
             $variables['attributes']->addClass('has-animation');
-            $variables['attributes']->setAttribute('data-animations', \Drupal\Component\Serialization\Json::encode($animations));
+            $variables['attributes']->setAttribute('data-animations', Json::encode($animations));
           }
           if (!empty($ps['layout_min_height'])) {
             $variables['attributes']->addClass('min-height-' . $ps['layout_min_height']);
@@ -139,7 +141,7 @@ function drowl_paragraphs_preprocess_paragraph(&$variables) {
 
     // Indicate subparagraph and type of parent paragraph for twig:
     $parentEntity = $paragraph->getParentEntity();
-    if($parentEntity instanceof \Drupal\paragraphs\Entity\Paragraph){
+    if($parentEntity instanceof Paragraph){
       $bundle = $parentEntity->bundle();
       $variables['attributes']->addClass('is-subparagraph');
       $variables['is_subparagraph'] = TRUE;
diff --git a/src/Plugin/Field/FieldFormatter/DrowlParagraphsSettingsDefaultFormatter.php b/src/Plugin/Field/FieldFormatter/DrowlParagraphsSettingsDefaultFormatter.php
index 2b145c3..7467b59 100644
--- a/src/Plugin/Field/FieldFormatter/DrowlParagraphsSettingsDefaultFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/DrowlParagraphsSettingsDefaultFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\drowl_paragraphs\Plugin\Field\FieldFormatter;
 
+use Drupal\Component\Utility\Html;
 use Drupal\Core\Field\FormatterBase;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -62,7 +63,7 @@ class DrowlParagraphsSettingsDefaultFormatter extends FormatterBase {
             '#type' => 'container',
             '#title' => $value->getName(),
             '#attributes' => array(
-              'class' => \Drupal\Component\Utility\Html::cleanCssIdentifier($value->getName()),
+              'class' => Html::cleanCssIdentifier($value->getName()),
             ),
             '#plain_text' => $value->getValue(),
             // '#markup' => t('Name'),
diff --git a/src/Plugin/Field/FieldType/DrowlParagraphsSettingsItem.php b/src/Plugin/Field/FieldType/DrowlParagraphsSettingsItem.php
index 940656f..74b46c8 100644
--- a/src/Plugin/Field/FieldType/DrowlParagraphsSettingsItem.php
+++ b/src/Plugin/Field/FieldType/DrowlParagraphsSettingsItem.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\drowl_paragraphs\Plugin\Field\FieldType;
 
+use Drupal\Component\Utility\Html;
 use Drupal\Core\TypedData\DataDefinition;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Field\FieldItemInterface;
@@ -263,7 +264,7 @@ class DrowlParagraphsSettingsItem extends FieldItemBase implements FieldItemInte
     if(!empty($classes_additional)){
       $classes_additional_array = explode(' ', trim($classes_additional));
       foreach($classes_additional_array as $class){
-        $classes_additional_sanitized .= ' ' . trim(\Drupal\Component\Utility\Html::getClass(trim($class)));
+        $classes_additional_sanitized .= ' ' . trim(Html::getClass(trim($class)));
       }
     }
     $this->get('classes_additional')->setValue(trim($classes_additional_sanitized));
@@ -271,7 +272,7 @@ class DrowlParagraphsSettingsItem extends FieldItemBase implements FieldItemInte
     // Sanitize ID:
     $id_attr = $this->get('id_attr')->getValue();
     if(!empty($id_attr)){
-      $this->get('id_attr')->setValue(\Drupal\Component\Utility\Html::cleanCssIdentifier(trim($id_attr)));
+      $this->get('id_attr')->setValue(Html::cleanCssIdentifier(trim($id_attr)));
     }
   }
 }
