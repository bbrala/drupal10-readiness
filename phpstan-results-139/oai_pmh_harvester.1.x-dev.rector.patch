diff --git a/oai_pmh_harvester.info.yml b/oai_pmh_harvester.info.yml
index c8482a8..e986f94 100644
--- a/oai_pmh_harvester.info.yml
+++ b/oai_pmh_harvester.info.yml
@@ -1,6 +1,5 @@
 name: 'OAI-PMH Harvester'
 type: module
 description: 'Harvest bibliographic records from an OAI-PMH source, like Koha, and caches them in a table so we can refer to them from fields.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: 'OAI-PMH Harvester'
diff --git a/src/Event/HarvestPreMergeEvent.php b/src/Event/HarvestPreMergeEvent.php
index 9feb9d6..29dbbaf 100644
--- a/src/Event/HarvestPreMergeEvent.php
+++ b/src/Event/HarvestPreMergeEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\oai_pmh_harvester\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use SimpleXMLElement;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * An event that should fire just before harvested data is merged into the DB.
diff --git a/src/Service/DecoderService.php b/src/Service/DecoderService.php
index 8f66ab2..7826620 100644
--- a/src/Service/DecoderService.php
+++ b/src/Service/DecoderService.php
@@ -46,7 +46,7 @@ class DecoderService {
     $csl = new MarcCslVariables(Record::fromSimpleXMLElement($xml));
 
     // Allow other modules to modify the $csl object before we return it.
-    $this->dispatcher->dispatch(HarvestPreMergeEvent::EVENT_NAME, new HarvestPreMergeEvent($xml, $csl));
+    $this->dispatcher->dispatch(new HarvestPreMergeEvent($xml, $csl), HarvestPreMergeEvent::EVENT_NAME);
 
     return $csl;
   }
diff --git a/tests/src/Functional/InstallTest.php b/tests/src/Functional/InstallTest.php
index 9881bed..67e7d98 100644
--- a/tests/src/Functional/InstallTest.php
+++ b/tests/src/Functional/InstallTest.php
@@ -29,7 +29,7 @@ class InstallTest extends BrowserTestBase {
   public function testLoadFront() {
     $this->drupalGet('<front>');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Log in');
+    $this->assertSession()->pageTextContains('Log in');
   }
 
 }
diff --git a/tests/src/Unit/UtilTest.php b/tests/src/Unit/UtilTest.php
index b9a91fc..8d35b3f 100644
--- a/tests/src/Unit/UtilTest.php
+++ b/tests/src/Unit/UtilTest.php
@@ -81,9 +81,7 @@ class UtilTest extends UnitTestCase {
     // Mock the Drupal::time container.
     $container = new ContainerBuilder();
     Drupal::setContainer($container);
-    $mockTime = $this->getMockBuilder('Drupal\Component\Datetime\TimeInterface')
-        ->disableOriginalConstructor()
-        ->getMock();
+    $mockTime = $this->createMock('Drupal\Component\Datetime\TimeInterface');
     $mockTime->method('getRequestTime')->willReturn(12345);
     $container->set('datetime.time', $mockTime);
 
