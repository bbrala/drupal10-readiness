modules/contrib/inline_entity_form/inline_entity_form.api.php
modules/contrib/inline_entity_form/tests/modules/inline_entity_form_test/src/Entity/EntityTestWithoutBundle.php
modules/contrib/inline_entity_form/tests/src/FunctionalJavascript/InlineEntityFormTestBase.php
modules/contrib/inline_entity_form/inline_entity_form.module
modules/contrib/inline_entity_form/tests/modules/inline_entity_form_test/src/IefTest.php
modules/contrib/inline_entity_form/tests/src/FunctionalJavascript/ComplexSimpleWidgetTest.php
modules/contrib/inline_entity_form/tests/src/FunctionalJavascript/SimpleWidgetTest.php
modules/contrib/inline_entity_form/src/Element/InlineEntityForm.php
modules/contrib/inline_entity_form/tests/src/FunctionalJavascript/ComplexWidgetRevisionsTest.php
modules/contrib/inline_entity_form/src/ElementSubmit.php
modules/contrib/inline_entity_form/src/Form/EntityInlineForm.php
modules/contrib/inline_entity_form/tests/src/FunctionalJavascript/TranslationTest.php
modules/contrib/inline_entity_form/src/Form/NodeInlineForm.php
modules/contrib/inline_entity_form/src/InlineFormInterface.php
modules/contrib/inline_entity_form/src/MigrationHelper.php
modules/contrib/inline_entity_form/tests/src/Kernel/Migrate/MigrateFieldInstanceTest.php
modules/contrib/inline_entity_form/tests/src/FunctionalJavascript/ComplexWidgetTest.php
modules/contrib/inline_entity_form/src/Plugin/Field/FieldWidget/InlineEntityFormBase.php
modules/contrib/inline_entity_form/tests/src/Kernel/Migrate/MigrateFieldInstanceWidgetSettingsTest.php
modules/contrib/inline_entity_form/tests/src/Kernel/Migrate/MigrateFieldTest.php
modules/contrib/inline_entity_form/src/Plugin/Field/FieldWidget/InlineEntityFormComplex.php
modules/contrib/inline_entity_form/tests/src/Kernel/Migrate/MigrateTestBase.php
modules/contrib/inline_entity_form/tests/src/FunctionalJavascript/ElementWebTest.php
modules/contrib/inline_entity_form/src/Plugin/Field/FieldWidget/InlineEntityFormSimple.php
modules/contrib/inline_entity_form/src/Plugin/migrate/process/InlineFormEntityFieldInstanceSettings.php
modules/contrib/inline_entity_form/src/ReferenceUpgrader.php
modules/contrib/inline_entity_form/src/TranslationHelper.php
modules/contrib/inline_entity_form/src/WidgetSubmit.php
modules/contrib/inline_entity_form/tests/fixtures/drupal7-small.php

4 files with changes
====================

1) modules/contrib/inline_entity_form/tests/src/Kernel/Migrate/MigrateTestBase.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->loadFixture($this->getFixtureFilePath());
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/inline_entity_form/tests/src/Kernel/Migrate/MigrateFieldTest.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->executeMigration('d7_field');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/inline_entity_form/tests/src/Kernel/Migrate/MigrateFieldInstanceWidgetSettingsTest.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('node');
     $this->installEntitySchema('node');
@@ @@
     /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $entity */
     $entity = EntityFormDisplay::load($id);
     $this->assertInstanceOf(EntityFormDisplayInterface::class, $entity);
-    $this->assertIdentical($expected_entity_type, $entity->getTargetEntityTypeId());
-    $this->assertIdentical($expected_bundle, $entity->getTargetBundle());
+    $this->assertSame($expected_entity_type, $entity->getTargetEntityTypeId());
+    $this->assertSame($expected_bundle, $entity->getTargetBundle());
   }

   /**
@@ @@
   protected function assertComponent($display_id, $component_id, $widget_type, $weight) {
     $component = EntityFormDisplay::load($display_id)->getComponent($component_id);
     $this->assertIsArray($component);
-    $this->assertIdentical($widget_type, $component['type']);
-    $this->assertIdentical($weight, $component['weight']);
+    $this->assertSame($widget_type, $component['type']);
+    $this->assertSame($weight, $component['weight']);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertIdenticalRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/inline_entity_form/tests/src/FunctionalJavascript/ComplexWidgetRevisionsTest.php:65

    ---------- begin diff ----------
@@ @@
   /**
    * Data provider for ::testRevisionsAtDepth.
    */
-  public function testRevisionsAtDepthDataProvider(): array {
+  public function revisionsAtDepthDataProvider(): array {
     return [
       [FALSE],
       [TRUE],
@@ @@
   /**
    * Tests saving entity reference revisions' field types at depth.
    *
-   * @dataProvider testRevisionsAtDepthDataProvider
+   * @dataProvider revisionsAtDepthDataProvider
    */
   public function testRevisionsAtDepth(bool $inner_widget_adds_revisions) {
     $level_2_display_config = $this->entityFormDisplayStorage->load('node.err_level_2.default');
    ----------- end diff -----------

Applied rules:
 * RemoveDataProviderTestPrefixRector (https://stackoverflow.com/a/46693675/1348344)
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

