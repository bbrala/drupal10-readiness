modules/contrib/oai_pmh_harvester/oai_pmh_harvester.install
modules/contrib/oai_pmh_harvester/src/Form/ConfigForm.php
modules/contrib/oai_pmh_harvester/src/Form/InspectForm.php
modules/contrib/oai_pmh_harvester/oai_pmh_harvester.module
modules/contrib/oai_pmh_harvester/src/Batch/DecodeBatch.php
modules/contrib/oai_pmh_harvester/src/Harvester.php
modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php
modules/contrib/oai_pmh_harvester/src/Batch/HarvestRecordsInDateRangeBatch.php
modules/contrib/oai_pmh_harvester/src/Service/HarvesterService.php
modules/contrib/oai_pmh_harvester/src/Util.php
modules/contrib/oai_pmh_harvester/src/Batch/HarvestSpecificRecordsBatch.php
modules/contrib/oai_pmh_harvester/src/Controller/StatusPageController.php
modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php
modules/contrib/oai_pmh_harvester/src/Exceptions/ConfigException.php
modules/contrib/oai_pmh_harvester/src/Exceptions/DatabaseException.php
modules/contrib/oai_pmh_harvester/src/Exceptions/EndpointException.php
modules/contrib/oai_pmh_harvester/src/Form/ActionsForm.php
modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php
modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php

4 files with changes
====================

1) modules/contrib/oai_pmh_harvester/src/Event/HarvestPreMergeEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\oai_pmh_harvester\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use SimpleXMLElement;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * An event that should fire just before harvested data is merged into the DB.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/oai_pmh_harvester/tests/src/Unit/UtilTest.php:80

    ---------- begin diff ----------
@@ @@
     // Mock the Drupal::time container.
     $container = new ContainerBuilder();
     Drupal::setContainer($container);
-    $mockTime = $this->getMockBuilder('Drupal\Component\Datetime\TimeInterface')
-        ->disableOriginalConstructor()
-        ->getMock();
+    $mockTime = $this->createMock('Drupal\Component\Datetime\TimeInterface');
     $mockTime->method('getRequestTime')->willReturn(12345);
     $container->set('datetime.time', $mockTime);
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/oai_pmh_harvester/tests/src/Functional/InstallTest.php:28

    ---------- begin diff ----------
@@ @@
   public function testLoadFront() {
     $this->drupalGet('<front>');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Log in');
+    $this->assertSession()->pageTextContains('Log in');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/oai_pmh_harvester/src/Service/DecoderService.php:45

    ---------- begin diff ----------
@@ @@
     $csl = new MarcCslVariables(Record::fromSimpleXMLElement($xml));

     // Allow other modules to modify the $csl object before we return it.
-    $this->dispatcher->dispatch(HarvestPreMergeEvent::EVENT_NAME, new HarvestPreMergeEvent($xml, $csl));
+    $this->dispatcher->dispatch(new HarvestPreMergeEvent($xml, $csl), HarvestPreMergeEvent::EVENT_NAME);

     return $csl;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


 [OK] 4 files have been changed by Rector                                       

