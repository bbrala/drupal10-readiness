modules/contrib/maillog/maillog.install
modules/contrib/maillog/maillog.module
modules/contrib/maillog/maillog.views.inc
modules/contrib/maillog/src/Controller/MaillogController.php
modules/contrib/maillog/src/Form/MaillogClearConfirmForm.php
modules/contrib/maillog/src/Form/MaillogSettingsForm.php
modules/contrib/maillog/src/Plugin/Mail/Maillog.php
modules/contrib/maillog/src/Plugin/views/field/MaillogFieldDelete.php
modules/contrib/maillog/tests/modules/maillog_test/maillog_test.module
modules/contrib/maillog/tests/src/Functional/MailUiTest.php
modules/contrib/maillog/tests/src/Kernel/MailTest.php

2 files with changes
====================

1) modules/contrib/maillog/tests/src/Kernel/MailTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('maillog', 'maillog');
     $this->installConfig(['system', 'maillog']);
@@ @@
     // Compare the maillog db entry with the sent mail.
     $logged_email = $this->getLatestMaillogEntry();
     $this->assertTrue(is_array($logged_email), 'Email is captured.');
-    $this->assertEqual($from_email, $logged_email['header_from'], 'Email is sent correctly.');
-    $this->assertEqual($reply_email, $logged_email['header_all']['Reply-to'], 'Message is sent with correct reply address.');
+    $this->assertEquals($from_email, $logged_email['header_from'], 'Email is sent correctly.');
+    $this->assertEquals($reply_email, $logged_email['header_all']['Reply-to'], 'Message is sent with correct reply address.');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/maillog/tests/src/Functional/MailUiTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Use the maillog mail plugin.
@@ @@
     $this->assertSession()->statusCodeEquals(200);

     // Assert some values and click the subject link.
-    $this->assertText('simpletest@example.com');
-    $this->assertText('test@example.com');
+    $this->assertSession()->pageTextContains('simpletest@example.com');
+    $this->assertSession()->pageTextContains('test@example.com');
     $this->clickLink('This is a test subject.');
-    $this->assertText('This message is a test email body.');
+    $this->assertSession()->pageTextContains('This message is a test email body.');

     // Test clear log.
     $this->drupalGet('admin/config/development/maillog');
     $this->assertSession()->statusCodeEquals(200);
-    $this->drupalPostForm(NULL, [], 'Clear all maillog entries');
+    $this->submitForm([], 'Clear all maillog entries');
     $this->assertSession()->statusCodeEquals(200);
-    $this->drupalPostForm(NULL, [], 'Clear');
+    $this->submitForm([], 'Clear');
     $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet('admin/reports/maillog');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertNoText('simpletest@example.com');
-    $this->assertText('There are no mail logs in the database.');
+    $this->assertSession()->pageTextNotContains('simpletest@example.com');
+    $this->assertSession()->pageTextContains('There are no mail logs in the database.');
   }

   /**
@@ @@
       'subject[0][value]' => 'Test Message',
       'message[0][value]' => 'This is a test.',
     ];
-    $this->drupalPostForm('user/' . $recipient->id() . '/contact', $edit, 'Send message');
+    $this->drupalGet('user/' . $recipient->id() . '/contact');
+    $this->submitForm($edit, 'Send message');
     $this->clickLink('here');
-    $this->assertResponse(200);
-    $this->assertTitle('Maillog Settings | Drupal');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->titleEquals('Maillog Settings | Drupal');
   }

   /**
@@ @@
       'subject[0][value]' => 'Test Message',
       'message[0][value]' => 'This is a test.',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Send message');
+    $this->submitForm($edit, 'Send message');
     $this->assertSession()->statusCodeEquals(200);

     // Assert the verbose output.
-    $this->assertText('A mail has been sent:');
-    $this->assertRaw('[To] => ' . $account->getAccountName() . '@example.com');
-    $this->assertRaw('[Header] => Array');
-    $this->assertRaw('[X-Mailer] =&gt; Drupal');
-    $this->assertRaw('[Content-Type] =&gt; text/plain; charset=UTF-8; format=flowed; delsp=yes');
-    $this->assertRaw('[Body] => Hello ' . $account->getAccountName());
+    $this->assertSession()->pageTextContains('A mail has been sent:');
+    $this->assertSession()->responseContains('[To] => ' . $account->getAccountName() . '@example.com');
+    $this->assertSession()->responseContains('[Header] => Array');
+    $this->assertSession()->responseContains('[X-Mailer] =&gt; Drupal');
+    $this->assertSession()->responseContains('[Content-Type] =&gt; text/plain; charset=UTF-8; format=flowed; delsp=yes');
+    $this->assertSession()->responseContains('[Body] => Hello ' . $account->getAccountName());

     // Set verbose to false.
     $this->config('maillog.settings')->set('verbose', FALSE)->save();
@@ @@
       'subject[0][value]' => 'Test Message',
       'message[0][value]' => 'This is a test.',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Send message');
+    $this->submitForm($edit, 'Send message');
     $this->assertSession()->statusCodeEquals(200);

     // Assert there is no output.
-    $this->assertNoText('A mail has been sent:');
-    $this->assertNoRaw('[To] => ' . $account->getAccountName() . '@example.com');
-    $this->assertNoRaw('[Header] => Array');
+    $this->assertSession()->pageTextNotContains('A mail has been sent:');
+    $this->assertSession()->responseNotContains('[To] => ' . $account->getAccountName() . '@example.com');
+    $this->assertSession()->responseNotContains('[Header] => Array');

     // Tests that users without permission cannot see verbose output.
     $this->config('maillog.settings')->set('verbose', TRUE)->save();
@@ @@
       'subject[0][value]' => 'Test Message',
       'message[0][value]' => 'This is a test.',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Send message');
+    $this->submitForm($edit, 'Send message');
     $this->assertSession()->statusCodeEquals(200);

     // Assert there is no output.
-    $this->assertNoText('A mail has been sent:');
-    $this->assertNoRaw('[To] => ' . $account->getAccountName() . '@example.com');
-    $this->assertNoRaw('[Header] => Array');
+    $this->assertSession()->pageTextNotContains('A mail has been sent:');
+    $this->assertSession()->responseNotContains('[To] => ' . $account->getAccountName() . '@example.com');
+    $this->assertSession()->responseNotContains('[Header] => Array');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertNoRawRector
 * AssertNoTextRector
 * AssertRawRector
 * AssertResponseRector
 * AssertTextRector
 * AssertTitleRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

