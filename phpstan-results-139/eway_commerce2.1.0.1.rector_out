modules/contrib/eway_commerce2/eway_gate.install
modules/contrib/eway_commerce2/eway_gate.module
modules/contrib/eway_commerce2/src/Controller/EwayRedirectController.php
modules/contrib/eway_commerce2/src/EwayTransactionManager.php
modules/contrib/eway_commerce2/src/Form/EwayGateSettings.php
modules/contrib/eway_commerce2/src/Plugin/Commerce/PaymentGateway/Onsite.php
modules/contrib/eway_commerce2/src/Plugin/Commerce/PaymentGateway/OnsiteInterface.php
modules/contrib/eway_commerce2/src/Plugin/Commerce/PaymentMethodType/EwayCreditCard.php
modules/contrib/eway_commerce2/src/PluginForm/Onsite/PaymentMethodAddForm.php
modules/contrib/eway_commerce2/src/TransactionManagerInterface.php

2 files with changes
====================

1) modules/contrib/eway_commerce2/src/EwayTransactionManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\eway_gate;

+use Eway\Rapid;
+use Eway\Rapid\Enum\ApiMethod;
+use Eway\Rapid\Enum\TransactionType;
 use Drupal\commerce_payment\Entity\PaymentInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\commerce_payment\Entity\PaymentMethodInterface;
@@ @@

   public function getClient() {
     if (!$this->client && $this->apiKey && $this->apiPass && $this->apiEnv) {
-      $this->client = $client = \Eway\Rapid::createClient(
+      $this->client = $client = Rapid::createClient(
         $this->apiKey, $this->apiPass, $this->apiEnv
       );
     }
@@ @@
       $customer['Country'] = $billing_address->getCountryCode();
     }

-    $response = $client->createCustomer(\Eway\Rapid\Enum\ApiMethod::DIRECT, $customer);
+    $response = $client->createCustomer(ApiMethod::DIRECT, $customer);

     if (!$response->getErrors()) {
       return $response->Customer->TokenCustomerID;
@@ @@
     } else {
       foreach ($response->getErrors() as $error) {
         \Drupal::logger('eway_gate')->error('eWay Error: @message.', [
-          '@message' => \Eway\Rapid::getMessage($error)
+          '@message' => Rapid::getMessage($error)
         ]);
       }

@@ @@
     } else {
       foreach ($response->getErrors() as $error) {
         \Drupal::logger('eway_gate')->error('eWay Error: @message.', [
-          '@message' => \Eway\Rapid::getMessage($error)
+          '@message' => Rapid::getMessage($error)
         ]);
       }

@@ @@
         'TotalAmount' => $amount->getNumber() * 100,
         'InvoiceReference' => $payment->getOrderId()
       ],
-      'TransactionType' => \Eway\Rapid\Enum\TransactionType::RECURRING,
+      'TransactionType' => TransactionType::RECURRING,
     ];

-    $response = $client->createTransaction(\Eway\Rapid\Enum\ApiMethod::DIRECT, $transaction);
+    $response = $client->createTransaction(ApiMethod::DIRECT, $transaction);

     if ($response->TransactionStatus) {
       return $response->TransactionID;
@@ @@
       if ($response->getErrors()) {
         foreach ($response->getErrors() as $error) {
           \Drupal::logger('eway_gate')->error('eWay Error: @message.', [
-            '@message' => \Eway\Rapid::getMessage($error)
+            '@message' => Rapid::getMessage($error)
           ]);
         }
       } else {
@@ @@
       ]
     ];

-    $response = $client->updateCustomer(\Eway\Rapid\Enum\ApiMethod::DIRECT, $customer);
+    $response = $client->updateCustomer(ApiMethod::DIRECT, $customer);

     if (!$response->getErrors()) {
       return $response->Customer->TokenCustomerID;
@@ @@
     } else {
       foreach ($response->getErrors() as $error) {
         \Drupal::logger('eway_gate')->error('eWay Error: @message.', [
-          '@message' => \Eway\Rapid::getMessage($error)
+          '@message' => Rapid::getMessage($error)
         ]);
       }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/eway_commerce2/eway_gate.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\ImmutableConfig;
+use Eway\Rapid;
+use Eway\Rapid\Enum\ApiMethod;
 /**
  * @file
  * Main functions of the module.
@@ @@
 /**
  * Submits an API request to eWAY.
  */
-function eway_gate_api_request(array $transaction, \Drupal\Core\Config\ImmutableConfig $config) {
+function eway_gate_api_request(array $transaction, ImmutableConfig $config) {
   if (!$config->get('eway_gate.api_key') || $config->get('eway_gate.api_pass')) {
     Drupal::logger('eway_gate')->alert('eWay credentials are not set up properly.');

@@ @@
   }

   // POST payment to eWAY API.
-  $client = \Eway\Rapid::createClient(
+  $client = Rapid::createClient(
     $config->get('eway_gate.api_key'),
     $config->get('eway_gate.api_pass'),
     $config->get('eway_gate.api_env'),
   );

-  $response = $client->createTransaction(\Eway\Rapid\Enum\ApiMethod::TRANSPARENT_REDIRECT, $transaction);
+  $response = $client->createTransaction(ApiMethod::TRANSPARENT_REDIRECT, $transaction);

   if (!$response->getErrors()) {
     return $response;
   } else {
     foreach ($response->getErrors() as $error) {
-      Drupal::logger('eway_gate')->error(\Eway\Rapid::getMessage($error));
+      Drupal::logger('eway_gate')->error(Rapid::getMessage($error));
     }
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

