diff --git a/src/DrupalCacheAdapter.php b/src/DrupalCacheAdapter.php
index e45649e..794194a 100644
--- a/src/DrupalCacheAdapter.php
+++ b/src/DrupalCacheAdapter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flysystem_drupal_cache;
 
+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
@@ -10,7 +11,6 @@ use League\Flysystem\Adapter\Polyfill\StreamedTrait;
 use League\Flysystem\AdapterInterface;
 use League\Flysystem\Config;
 use League\Flysystem\Util;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 
 /**
  * Class DrupalCacheAdapter
@@ -38,7 +38,7 @@ class DrupalCacheAdapter extends AbstractAdapter {
   /**
    * Mime type guesser.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var \Symfony\Component\Mime\MimeTypesInterface
    */
   protected $mimeTypeGuesser;
 
@@ -53,12 +53,12 @@ class DrupalCacheAdapter extends AbstractAdapter {
    *   Cache backend.
    * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cacheTagsInvalidator
    *   Cache tags invalidator.
-   * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mimeTypeGuesser
+   * @param \Symfony\Component\Mime\MimeTypesInterface $mimeTypeGuesser
    *   Mime type guesser.
    * @param array $tags
    *   Default cache tags.
    */
-  public function __construct(CacheBackendInterface $cache, CacheTagsInvalidatorInterface $cacheTagsInvalidator, MimeTypeGuesserInterface $mimeTypeGuesser, array $tags) {
+  public function __construct(CacheBackendInterface $cache, CacheTagsInvalidatorInterface $cacheTagsInvalidator, MimeTypesInterface $mimeTypeGuesser, array $tags) {
     $this->cacheBackend = $cache;
     $this->cacheTagsInvalidator = $cacheTagsInvalidator;
     $this->mimeTypeGuesser = $mimeTypeGuesser;
diff --git a/src/Flysystem/DrupalCachePlugin.php b/src/Flysystem/DrupalCachePlugin.php
index 225d25c..7d9dbc9 100644
--- a/src/Flysystem/DrupalCachePlugin.php
+++ b/src/Flysystem/DrupalCachePlugin.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flysystem_drupal_cache\Flysystem;
 
+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Cache\CacheFactoryInterface;
 use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
@@ -10,7 +11,6 @@ use Drupal\flysystem\Plugin\FlysystemPluginInterface;
 use Drupal\flysystem\Plugin\FlysystemUrlTrait;
 use Drupal\flysystem_drupal_cache\DrupalCacheAdapter;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 
 /**
  * Drupal plugin for the "Drupal Cache" Flysystem adapter.
@@ -40,7 +40,7 @@ class DrupalCachePlugin implements FlysystemPluginInterface, ContainerFactoryPlu
   /**
    * Mime Type Guesser.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var \Symfony\Component\Mime\MimeTypesInterface
    */
   protected $mimeTypeGuesser;
 
@@ -63,7 +63,7 @@ class DrupalCachePlugin implements FlysystemPluginInterface, ContainerFactoryPlu
    * @param $tags
    *   List of cache tags.
    */
-  public function __construct(CacheFactoryInterface $cacheFactory, CacheTagsInvalidatorInterface $cacheTagsInvalidator, MimeTypeGuesserInterface $mimeTypeGuesser, $bin, $tags) {
+  public function __construct(CacheFactoryInterface $cacheFactory, CacheTagsInvalidatorInterface $cacheTagsInvalidator, MimeTypesInterface $mimeTypeGuesser, $bin, $tags) {
     $this->cacheBackend = $cacheFactory->get(self::getCacheBin($bin));
     $this->cacheTagsInvalidator = $cacheTagsInvalidator;
     $this->mimeTypeGuesser = $mimeTypeGuesser;
diff --git a/src/StackMiddleware/Flysystem.php b/src/StackMiddleware/Flysystem.php
index 6f930ab..84ddda0 100644
--- a/src/StackMiddleware/Flysystem.php
+++ b/src/StackMiddleware/Flysystem.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flysystem_drupal_cache\StackMiddleware;
 
+use Symfony\Component\Mime\MimeTypesInterface;
 use DateTime;
 use Drupal\Component\Datetime\DateTimePlus;
 use Drupal\Component\Utility\UrlHelper;
@@ -9,7 +10,6 @@ use Drupal\Core\Cache\CacheFactoryInterface;
 use Drupal\Core\File\FileSystem;
 use Drupal\Core\PageCache\RequestPolicyInterface;
 use Drupal\flysystem\FlysystemFactory;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\HttpFoundation\ResponseHeaderBag;
@@ -43,7 +43,7 @@ class Flysystem implements HttpKernelInterface {
     /**
      * Mime Type Guesser.
      *
-     * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+     * @var \Symfony\Component\Mime\MimeTypesInterface
      */
     protected $mimeTypeGuesser;
 
@@ -70,14 +70,14 @@ class Flysystem implements HttpKernelInterface {
      *   The cache bin.
      * @param \Drupal\Core\PageCache\RequestPolicyInterface $request_policy
      *   A policy rule determining the cacheability of a request.
-     * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mimeTypeGuesser
+     * @param \Symfony\Component\Mime\MimeTypesInterface $mimeTypeGuesser
      *   Mime Type Guesser.
      * @param \Drupal\flysystem\FlysystemFactory $flysystemFactory
      *   Flysystem Factory.
      * @param \Drupal\Core\File\FileSystem $filesystem
      *   Filesystem.
      */
-    public function __construct(HttpKernelInterface $http_kernel, CacheFactoryInterface $cacheFactory, RequestPolicyInterface $request_policy, MimeTypeGuesserInterface $mimeTypeGuesser, FlysystemFactory $flysystemFactory, FileSystem $filesystem) {
+    public function __construct(HttpKernelInterface $http_kernel, CacheFactoryInterface $cacheFactory, RequestPolicyInterface $request_policy, MimeTypesInterface $mimeTypeGuesser, FlysystemFactory $flysystemFactory, FileSystem $filesystem) {
         $this->httpKernel = $http_kernel;
         $this->cacheFactory = $cacheFactory;
         $this->requestPolicy = $request_policy;
