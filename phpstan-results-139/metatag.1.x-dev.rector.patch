diff --git a/metatag.api.php b/metatag.api.php
index 96e3d2f..d3347b4 100644
--- a/metatag.api.php
+++ b/metatag.api.php
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Routing\RouteMatchInterface;
 /**
  * @file
  * Document all supported APIs.
@@ -17,7 +18,7 @@
  * @return \Drupal\Core\Entity\EntityInterface|null
  *   Return an entity, if the route should use metatags.
  */
-function hook_metatag_route_entity(\Drupal\Core\Routing\RouteMatchInterface $route_match) {
+function hook_metatag_route_entity(RouteMatchInterface $route_match) {
   if ($route_match->getRouteName() === 'example.test_route') {
     if ($node = $route_match->getParameter('node')) {
       return $node;
diff --git a/metatag_extended_perms/tests/src/Functional/PermissionsTest.php b/metatag_extended_perms/tests/src/Functional/PermissionsTest.php
index 1380fc7..7ad806e 100644
--- a/metatag_extended_perms/tests/src/Functional/PermissionsTest.php
+++ b/metatag_extended_perms/tests/src/Functional/PermissionsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\metatag_extended_perms\Functional;
 
+use Drupal\Tests\metatag\Functional\MetatagHelperTrait;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -12,7 +13,7 @@ use Drupal\Tests\BrowserTestBase;
 class PermissionsTest extends BrowserTestBase {
 
   // Contains helper methods.
-  use \Drupal\Tests\metatag\Functional\MetatagHelperTrait;
+  use MetatagHelperTrait;
 
   /**
    * {@inheritdoc}
diff --git a/metatag_views/tests/src/Functional/MetatagViewsBasicsTest.php b/metatag_views/tests/src/Functional/MetatagViewsBasicsTest.php
index 62f7496..331d23d 100644
--- a/metatag_views/tests/src/Functional/MetatagViewsBasicsTest.php
+++ b/metatag_views/tests/src/Functional/MetatagViewsBasicsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\metatag_views\Functional;
 
+use Drupal\Tests\metatag\Functional\MetatagHelperTrait;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -12,7 +13,7 @@ use Drupal\Tests\BrowserTestBase;
 class MetatagViewsBasicsTest extends BrowserTestBase {
 
   // Contains helper methods.
-  use \Drupal\Tests\metatag\Functional\MetatagHelperTrait;
+  use MetatagHelperTrait;
 
   /**
    * {@inheritdoc}
diff --git a/metatag_views/tests/src/Functional/MetatagViewsTokenTest.php b/metatag_views/tests/src/Functional/MetatagViewsTokenTest.php
index 5715fd4..23166be 100644
--- a/metatag_views/tests/src/Functional/MetatagViewsTokenTest.php
+++ b/metatag_views/tests/src/Functional/MetatagViewsTokenTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\metatag_views\Functional;
 
+use Drupal\Tests\metatag\Functional\MetatagHelperTrait;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -12,7 +13,7 @@ use Drupal\Tests\BrowserTestBase;
 class MetatagViewsTokenTest extends BrowserTestBase {
 
   // Contains helper methods.
-  use \Drupal\Tests\metatag\Functional\MetatagHelperTrait;
+  use MetatagHelperTrait;
 
   /**
    * {@inheritdoc}
diff --git a/src/Entity/MetatagDefaults.php b/src/Entity/MetatagDefaults.php
index d6fba8a..30517b1 100644
--- a/src/Entity/MetatagDefaults.php
+++ b/src/Entity/MetatagDefaults.php
@@ -99,7 +99,7 @@ class MetatagDefaults extends ConfigEntityBase implements MetatagDefaultsInterfa
    * Reverts an entity to its default values.
    */
   public function revert() {
-    $default_install_path = drupal_get_path('module', 'metatag') . '/' . InstallStorage::CONFIG_INSTALL_DIRECTORY;
+    $default_install_path = \Drupal::service('extension.list.module')->getPath('metatag') . '/' . InstallStorage::CONFIG_INSTALL_DIRECTORY;
     $storage = new FileStorage($default_install_path, StorageInterface::DEFAULT_COLLECTION);
     $default_config_data = $storage->read('metatag.metatag_defaults.' . $this->id());
     if ($default_config_data) {
diff --git a/tests/src/Functional/MetatagHelperTrait.php b/tests/src/Functional/MetatagHelperTrait.php
index 4090f27..5504c59 100644
--- a/tests/src/Functional/MetatagHelperTrait.php
+++ b/tests/src/Functional/MetatagHelperTrait.php
@@ -111,7 +111,7 @@ trait MetatagHelperTrait {
     $vocab = Vocabulary::create($values);
     $status = $vocab->save();
 
-    if ($this instanceof \PHPUnit_Framework_TestCase) {
+    if ($this instanceof \PHPUnit\Framework\TestCase) {
       $this->assertSame($status, SAVED_NEW, (new FormattableMarkup('Created vocabulary %type.', ['%type' => $vocab->id()]))->__toString());
     }
     else {
@@ -144,7 +144,7 @@ trait MetatagHelperTrait {
     $term = Term::create($values);
     $status = $term->save();
 
-    if ($this instanceof \PHPUnit_Framework_TestCase) {
+    if ($this instanceof \PHPUnit\Framework\TestCase) {
       $this->assertSame($status, SAVED_NEW, (new FormattableMarkup('Created term %name.', ['%name' => $term->label()]))->__toString());
     }
     else {
diff --git a/tests/src/Functional/MetatagXssTest.php b/tests/src/Functional/MetatagXssTest.php
index 588d8f8..20b0f02 100644
--- a/tests/src/Functional/MetatagXssTest.php
+++ b/tests/src/Functional/MetatagXssTest.php
@@ -141,7 +141,7 @@ class MetatagXssTest extends BrowserTestBase {
 
     // Check for the title tag, which will have the HTML tags removed and then
     // be lightly HTML encoded.
-    $session->assertEscaped(strip_tags($this->xssTitleString));
+    $this->assertSession()->assertEscaped(strip_tags($this->xssTitleString));
     $session->responseNotContains($this->xssTitleString);
 
     // Check for the basic meta tag.
@@ -171,7 +171,7 @@ class MetatagXssTest extends BrowserTestBase {
 
     // Check for the title tag, which will have the HTML tags removed and then
     // be lightly HTML encoded.
-    $session->assertEscaped(strip_tags($this->xssTitleString));
+    $this->assertSession()->assertEscaped(strip_tags($this->xssTitleString));
     $session->responseNotContains($this->xssTitleString);
 
     // Check for the basic meta tag.
@@ -199,7 +199,7 @@ class MetatagXssTest extends BrowserTestBase {
 
     // Check for the title tag, which will have the HTML tags removed and then
     // be lightly HTML encoded.
-    $session->assertEscaped(strip_tags($this->xssTitleString));
+    $this->assertSession()->assertEscaped(strip_tags($this->xssTitleString));
     $session->responseNotContains($this->xssTitleString);
   }
 
