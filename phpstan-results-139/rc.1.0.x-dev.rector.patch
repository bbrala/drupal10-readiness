diff --git a/modules/rc_group/src/Services/RcGroup.php b/modules/rc_group/src/Services/RcGroup.php
index 076f5af..694847f 100644
--- a/modules/rc_group/src/Services/RcGroup.php
+++ b/modules/rc_group/src/Services/RcGroup.php
@@ -393,7 +393,7 @@ class RcGroup {
 
     // Create field storage if it does not exist.
     if (!$roomIdFieldStorage) {
-      $configDirectory = new FileStorage(drupal_get_path('module', 'rc_group') . '/config/install');
+      $configDirectory = new FileStorage(\Drupal::service('extension.list.module')->getPath('rc_group') . '/config/install');
 
       // Import the field from the associated config file.
       $rcRoomIdConfig = $configDirectory
diff --git a/rc.api.php b/rc.api.php
index 988b72c..685b26e 100644
--- a/rc.api.php
+++ b/rc.api.php
@@ -1,5 +1,6 @@
 <?php
 
+use ATDev\RocketChat\Users\User;
 /**
  * @file
  */
@@ -11,7 +12,7 @@
  *   * Custom hook to provide an interface to map Drupal user fields to Rocket Chat
  *   User fields.
  */
-function hook_field_mapping_rc_alter(object $entity, ATDev\RocketChat\Users\User $rcUser) {
+function hook_field_mapping_rc_alter(object $entity, User $rcUser) {
   // Usage example with $entity = Drupal\user\UserInterface $user.
   //  $name = $user->getDisplayName();
   //  $invokeName = $name . ' Invoke';
diff --git a/src/Plugin/Action/RcUpdateUser.php b/src/Plugin/Action/RcUpdateUser.php
index 6a1efa2..79cec93 100644
--- a/src/Plugin/Action/RcUpdateUser.php
+++ b/src/Plugin/Action/RcUpdateUser.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rc\Plugin\Action;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\views_bulk_operations\Action\ViewsBulkOperationsActionBase;
 use Drupal\Core\Session\AccountInterface;
 
@@ -37,7 +38,7 @@ class RcUpdateUser extends ViewsBulkOperationsActionBase {
   /**
    * {@inheritdoc}
    */
-  public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE): bool|\Drupal\Core\Access\AccessResultInterface {
+  public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE): bool|AccessResultInterface {
     if ($object->getEntityType() === 'user') {
       $access = $object->access('update', $account, TRUE)
         ->andIf($object->status->access('edit', $account, TRUE));
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 59393d6..6398619 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
