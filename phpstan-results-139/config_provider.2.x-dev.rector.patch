diff --git a/config_provider.info.yml b/config_provider.info.yml
index 58bb009..1ab1d51 100644
--- a/config_provider.info.yml
+++ b/config_provider.info.yml
@@ -1,8 +1,7 @@
 name: 'Configuration Provider'
 type: module
 description: 'Enables provision of configuration by extensions.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Configuration
 dependencies:
  - 'drupal:config'
diff --git a/src/Plugin/ConfigProviderBase.php b/src/Plugin/ConfigProviderBase.php
index 61e1b68..34e5646 100644
--- a/src/Plugin/ConfigProviderBase.php
+++ b/src/Plugin/ConfigProviderBase.php
@@ -278,7 +278,7 @@ abstract class ConfigProviderBase extends PluginBase implements ConfigProviderIn
    *   found.
    */
   protected function drupalGetPath($type, $name) {
-    return drupal_get_path($type, $name);
+    return \Drupal::service('extension.path.resolver')->getPath($type, $name);
   }
 
   /**
diff --git a/src/ProxyClass/ConfigProviderConfigInstaller.php b/src/ProxyClass/ConfigProviderConfigInstaller.php
index 211f9c7..22c563f 100644
--- a/src/ProxyClass/ConfigProviderConfigInstaller.php
+++ b/src/ProxyClass/ConfigProviderConfigInstaller.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\config_provider\ProxyClass {
 
+    use Drupal\Core\Config\ConfigInstallerInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\Config\StorageInterface;
     /**
      * Provides a proxy class for \Drupal\config_provider\ConfigProviderConfigInstaller.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class ConfigProviderConfigInstaller implements \Drupal\Core\Config\ConfigInstallerInterface
+    class ConfigProviderConfigInstaller implements ConfigInstallerInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -46,7 +50,7 @@ namespace Drupal\config_provider\ProxyClass {
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\config_provider\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function installOptionalConfig(\Drupal\Core\Config\StorageInterface $storage = NULL, $dependency = array (
+        public function installOptionalConfig(StorageInterface $storage = NULL, $dependency = array (
         ))
         {
             return $this->lazyLoadItself()->installOptionalConfig($storage, $dependency);
@@ -95,7 +99,7 @@ namespace Drupal\config_provider\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function setSourceStorage(\Drupal\Core\Config\StorageInterface $storage)
+        public function setSourceStorage(StorageInterface $storage)
         {
             return $this->lazyLoadItself()->setSourceStorage($storage);
         }
