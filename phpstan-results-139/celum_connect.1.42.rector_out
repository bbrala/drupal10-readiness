modules/contrib/celum_connect/celum_connect.install
modules/contrib/celum_connect/celum_connect.module
modules/contrib/celum_connect/src/Form/CelumConnectSettingsForm.php
modules/contrib/celum_connect/src/Plugin/Field/FieldFormatter/CelumConnectFormatter.php
modules/contrib/celum_connect/src/Plugin/Field/FieldType/CelumConnectFieldType.php
modules/contrib/celum_connect/src/Plugin/Field/FieldWidget/CelumConnectWidget.php

4 files with changes
====================

1) modules/contrib/celum_connect/src/Plugin/Field/FieldWidget/CelumConnectWidget.php:55

    ---------- begin diff ----------
@@ @@
         $element['#attached']['drupalSettings']['link_only'] = $config->get('celum_connect_link_only');
         $element['#attached']['drupalSettings']['anura_links'] = $config->get('celum_connect_anura_links');
         $element['#attached']['drupalSettings']['urlRootNodeMap'] = $config->get('celum_connect_urlRootNodeMap');
-        $element['#attached']['drupalSettings']['module_path'] = drupal_get_path('module', 'celum_connect');
-        $element['#attached']['drupalSettings']['module_url'] = drupal_get_path('module', 'celum_connect');
+        $element['#attached']['drupalSettings']['module_path'] = \Drupal::service('extension.list.module')->getPath('celum_connect');
+        $element['#attached']['drupalSettings']['module_url'] = \Drupal::service('extension.list.module')->getPath('celum_connect');
         list($url, $t) = explode("_", $this->decrypt($config->get('celum_connect_licenseKey')));
         $element['#attached']['drupalSettings']['celum_url'] = $url;
         $element['#attached']['drupalSettings']['api_key'] = $config->get('celum_connect_apikey');
@@ @@
             $title = $items[$delta]->title;
         }
         if($prev == null){
-            $prev = file_create_url($items[$delta]->thumb);
+            $prev = \Drupal::service('file_url_generator')->generateAbsoluteString($items[$delta]->thumb);
         }
         if($celum_id == null){
             $celum_id = $items[$delta]->id;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/celum_connect/src/Plugin/Field/FieldType/CelumConnectFieldType.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\celum_connect\Plugin\Field\FieldType;

+use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Field\FieldItemBase;
 use Drupal\Core\Field\FieldItemInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
@@ @@
                 $download_url = $url."/direct/download?id=".$id."&format=".$dlf."&consumer=Drupal8";
                 if(system_retrieve_file($download_url,
                   \Drupal::config('system.file')->get('default_scheme')."://celum_connect/".$id."_".$version."_".$dlf.".".$fileExtension,
-                    TRUE, FILE_EXISTS_REPLACE)){
+                    TRUE, FileSystemInterface::EXISTS_REPLACE)){
                     system_retrieve_file(
                         $thumb_url,
                       \Drupal::config('system.file')->get('default_scheme')."://celum_connect/".$id."_".$version."_".$dlf.".".$fileExtension."_thumb",
                         TRUE,
-                        FILE_EXISTS_REPLACE);
+                        FileSystemInterface::EXISTS_REPLACE);
                   \Drupal::messenger()->addMessage("File uploaded successfully");
                 }else{
                   \Drupal::messenger()->addMessage("Failed to upload File",'error');
    ----------- end diff -----------

Applied rules:
 * FileExistsReplaceRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/celum_connect/src/Plugin/Field/FieldFormatter/CelumConnectFormatter.php:33

    ---------- begin diff ----------
@@ @@
                 '#id' => $item->id,
                 '#downloadFormat' => $item->downloadFormat,
                 '#fileExtension' => $item->fileExtension,
-                '#uri' => file_create_url($item->uri),
-                '#thumb' => file_create_url($item->thumb),
+                '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($item->uri),
+                '#thumb' => \Drupal::service('file_url_generator')->generateAbsoluteString($item->thumb),

             );
             if($config->get('celum_connect_anura_links')) {
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/celum_connect/celum_connect.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\File\FileSystemInterface;
 /**
  * @file
  * Contains celum_connect.install.
  */
-
 /**
  * Implements hook_install().
  */
 function celum_connect_install() {
     $directory = 'public://celum_connect';
-    if (file_prepare_directory($directory, FILE_CREATE_DIRECTORY)) {
+    if (\Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY)) {
         \Drupal::messenger()->addMessage("Directory created successfully");
     }else{
         \Drupal::messenger()->addMessage("Directory not created");
    ----------- end diff -----------

Applied rules:
 * FileCreateDirectoryRector
 * FilePrepareDirectoryRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

