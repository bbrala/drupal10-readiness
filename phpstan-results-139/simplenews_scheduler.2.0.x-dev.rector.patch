diff --git a/simplenews_scheduler.api.php b/simplenews_scheduler.api.php
index 861ea52..b4385e8 100644
--- a/simplenews_scheduler.api.php
+++ b/simplenews_scheduler.api.php
@@ -19,5 +19,5 @@
  *   The original scheduler node object.
  */
 function hook_simplenews_scheduler_edition_node_alter($edition_node, $scheduler_node) {
-  $edition_node->setTitle('Your newsletter from ' . REQUEST_TIME);
+  $edition_node->setTitle('Your newsletter from ' . \Drupal::time()->getRequestTime());
 }
diff --git a/simplenews_scheduler.module b/simplenews_scheduler.module
index 8210fec..d25bc65 100644
--- a/simplenews_scheduler.module
+++ b/simplenews_scheduler.module
@@ -70,9 +70,9 @@ function simplenews_scheduler_form_simplenews_node_tab_alter(array &$form, FormS
         $form['send']['#open'] = FALSE;
       }
       // If there is no default value, use the current time for start.
-      $start_date = !empty($scheduler['start_date']) ? $scheduler['start_date'] : REQUEST_TIME;
+      $start_date = !empty($scheduler['start_date']) ? $scheduler['start_date'] : \Drupal::time()->getRequestTime();
       // and Today + 2 years for stop, that should be enough.
-      $stop_date = !empty($scheduler['stop_date']) ? $scheduler['stop_date'] : REQUEST_TIME + 2 * 365 * 24 * 60 * 60;
+      $stop_date = !empty($scheduler['stop_date']) ? $scheduler['stop_date'] : \Drupal::time()->getRequestTime() + 2 * 365 * 24 * 60 * 60;
 
       // Get DateTime objects for the default values of start and stop date.
       $default_start_date = DrupalDateTime::createFromTimestamp($start_date);
@@ -316,7 +316,7 @@ function simplenews_scheduler_node_delete(NodeInterface $node) {
  */
 function simplenews_scheduler_cron() {
   // Get the newsletters that need to be sent at this time.
-  $now_time = REQUEST_TIME;
+  $now_time = \Drupal::time()->getRequestTime();
   $newsletters_to_send = simplenews_scheduler_get_newsletters_due($now_time);
   foreach ($newsletters_to_send as $newsletter_parent_data) {
     $edition_time = simplenews_scheduler_calculate_edition_time($newsletter_parent_data, $now_time);
diff --git a/tests/src/Functional/SimplenewsSchedulerDaylightSavingSwitchTest.php b/tests/src/Functional/SimplenewsSchedulerDaylightSavingSwitchTest.php
index 925fa7a..bb50a69 100644
--- a/tests/src/Functional/SimplenewsSchedulerDaylightSavingSwitchTest.php
+++ b/tests/src/Functional/SimplenewsSchedulerDaylightSavingSwitchTest.php
@@ -44,7 +44,7 @@ class SimplenewsSchedulerDaylightSavingSwitchTest extends SimplenewsSchedulerTes
     $edition_time_formatted = \Drupal::service('date.formatter')->format($edition_time, 'custom', DATE_ATOM);
     $edition_hour_formatted = \Drupal::service('date.formatter')->format($edition_time, 'custom', 'H:i');
 
-    $this->assertEqual($edition_hour_formatted, '12:00', t('Edition time is at 12:00 in the local timezone; full edition time is %time.', array(
+    $this->assertEquals($edition_hour_formatted, '12:00', t('Edition time is at 12:00 in the local timezone; full edition time is %time.', array(
       '%time' => $edition_time_formatted,
     )));
   }
diff --git a/tests/src/Functional/SimplenewsSchedulerEditionDueTest.php b/tests/src/Functional/SimplenewsSchedulerEditionDueTest.php
index 7c3374f..93ece46 100644
--- a/tests/src/Functional/SimplenewsSchedulerEditionDueTest.php
+++ b/tests/src/Functional/SimplenewsSchedulerEditionDueTest.php
@@ -12,7 +12,7 @@ use Drupal\node\Entity\Node;
  */
 class SimplenewsSchedulerEditionDueTest extends SimplenewsSchedulerTestBase {
 
-  function setUp() {
+  function setUp(): void {
     parent::setUp();
 
     $admin_user = $this->drupalCreateUser(array(
@@ -143,7 +143,7 @@ class SimplenewsSchedulerEditionDueTest extends SimplenewsSchedulerTestBase {
           // debug("Edition time: $formatted, $edition_time");
 
           // Check the edition time is 12:00.
-          $this->assertEqual(date('H:i', $edition_time), '12:00', t('Edition time is at 12:00.'));
+          $this->assertEquals(date('H:i', $edition_time), '12:00', t('Edition time is at 12:00.'));
 
           // Fake sending it: update the 'last_run' for subsequent iterations.
           \Drupal::database()->update('simplenews_scheduler')
diff --git a/tests/src/Functional/SimplenewsSchedulerEditionTimeTest.php b/tests/src/Functional/SimplenewsSchedulerEditionTimeTest.php
index 2cf82ef..dce76f8 100644
--- a/tests/src/Functional/SimplenewsSchedulerEditionTimeTest.php
+++ b/tests/src/Functional/SimplenewsSchedulerEditionTimeTest.php
@@ -52,7 +52,7 @@ class SimplenewsSchedulerEditionTimeTest extends SimplenewsSchedulerTestBase {
       $this_month = $date->format('Y-m');
       $expected_time_formatted = "{$this_month}-{$this->edition_day} 12:00:00";
 
-      $this->assertEqual($edition_time_formatted, $expected_time_formatted, t("Edition time of @edition-time matches expected time of @edition-time-expected at time 2now.", array(
+      $this->assertEquals($edition_time_formatted, $expected_time_formatted, t("Edition time of @edition-time matches expected time of @edition-time-expected at time 2now.", array(
         '@edition-time' => $edition_time_formatted,
         '@edition-time-expected' => $expected_time_formatted,
         '@now' => $date->format("Y-m-d H:i:s"),
@@ -112,7 +112,7 @@ class SimplenewsSchedulerEditionTimeTest extends SimplenewsSchedulerTestBase {
       $expected_month = $this_month - $elapsed_mod;
       $expected_time_formatted = "{$this_year}-{$expected_month}-{$this->edition_day} 12:00:00";
 
-      $this->assertEqual($edition_time_formatted, $expected_time_formatted, t("Edition time of @edition-time matches expected time of @edition-time-expected at time @now.", array(
+      $this->assertEquals($edition_time_formatted, $expected_time_formatted, t("Edition time of @edition-time matches expected time of @edition-time-expected at time @now.", array(
         '@edition-time' => $edition_time_formatted,
         '@edition-time-expected' => $expected_time_formatted,
         '@now' => $date->format("Y-m-d H:i:s"),
diff --git a/tests/src/Functional/SimplenewsSchedulerNextRunTimeTest.php b/tests/src/Functional/SimplenewsSchedulerNextRunTimeTest.php
index 24af27b..9ef0508 100644
--- a/tests/src/Functional/SimplenewsSchedulerNextRunTimeTest.php
+++ b/tests/src/Functional/SimplenewsSchedulerNextRunTimeTest.php
@@ -53,7 +53,7 @@ class SimplenewsSchedulerNextRunTimeTest extends SimplenewsSchedulerTestBase {
         $offset = _simplenews_scheduler_make_time_offset($newsletter_parent_data->send_interval, $newsletter_parent_data->interval_frequency);
 
         $next_run_date = date_add(date_create(date('Y-m-d H:i:s', $last_run_time)), date_interval_create_from_date_string($offset));
-        $this->assertEqual($next_run_date->getTimestamp(), $next_run_time, t('New next run timestamp has advanced by the expected offset of 2offset.', array(
+        $this->assertEquals($next_run_date->getTimestamp(), $next_run_time, t('New next run timestamp has advanced by the expected offset of 2offset.', array(
           '@offset' => $offset,
         )));
 
@@ -72,8 +72,8 @@ class SimplenewsSchedulerNextRunTimeTest extends SimplenewsSchedulerTestBase {
       // consider the string as a timestamp.
       $next_run_date = new \DateTime(date('Y-m-d H:i:s', $last_run_time));
       $d = date_format($next_run_date, 'd');
-      $this->assertEqual($next_run_date->format('d'), $this->edition_day, t('Next run timestamp is on same day of the month as the start date.'));
-      $this->assertEqual($next_run_date->format('H:i:s'), '12:00:00', t('Next run timestamp is at the same time.'));
+      $this->assertEquals($next_run_date->format('d'), $this->edition_day, t('Next run timestamp is on same day of the month as the start date.'));
+      $this->assertEquals($next_run_date->format('H:i:s'), '12:00:00', t('Next run timestamp is at the same time.'));
 
       $added_days++;
     } // while days
@@ -130,7 +130,7 @@ class SimplenewsSchedulerNextRunTimeTest extends SimplenewsSchedulerTestBase {
       // consider the string as a timestamp.
       $next_run_date = new \DateTime("@$next_run_time");
       $d = date_format($next_run_date, 'd');
-      $this->assertEqual($next_run_date->format('d'), $this->edition_day, t('Next run timestamp is on same day of the month as the start date.'));
+      $this->assertEquals($next_run_date->format('d'), $this->edition_day, t('Next run timestamp is on same day of the month as the start date.'));
 
       $added_days++;
     } // while days
diff --git a/tests/src/Functional/SimplenewsSchedulerNodeCreationTest.php b/tests/src/Functional/SimplenewsSchedulerNodeCreationTest.php
index d2cbda3..cf4905f 100644
--- a/tests/src/Functional/SimplenewsSchedulerNodeCreationTest.php
+++ b/tests/src/Functional/SimplenewsSchedulerNodeCreationTest.php
@@ -16,7 +16,7 @@ class SimplenewsSchedulerNodeCreationTest extends SimplenewsSchedulerTestBase {
 
   protected static $modules = ['block'];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_tasks_block');
@@ -49,8 +49,9 @@ class SimplenewsSchedulerNodeCreationTest extends SimplenewsSchedulerTestBase {
       'simplenews_issue[target_id]' => 'default',
       'status[value]' => TRUE
     );
-    $this->drupalPostForm('node/add/simplenews_issue', $edit, t('Save'));
-    $this->assertText($title);
+    $this->drupalGet('node/add/simplenews_issue');
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains($title);
 
     $node = $this->drupalGetNodeByTitle($title);
 
@@ -61,7 +62,7 @@ class SimplenewsSchedulerNodeCreationTest extends SimplenewsSchedulerTestBase {
 
     // Now create the simplenews schedule configuration.
     $this->drupalGet("node/" . $node->id() . "/simplenews");
-    $this->assertText(t('Enable scheduled newsletter'));
+    $this->assertSession()->pageTextContains(t('Enable scheduled newsletter'));
 
     $edit = array();
     $edit['enable_scheduler'] = TRUE;
@@ -75,18 +76,19 @@ class SimplenewsSchedulerNodeCreationTest extends SimplenewsSchedulerTestBase {
     $edit["start_date[date]"] = $date->format('Y-m-d');
     $edit["start_date[time]"] = $date->format('H:i:s');
     $edit["title"] = "Custom title [node:nid]";
+    $this->drupalGet("node/{$node->id()}/simplenews");
 
-    $this->drupalPostForm("node/{$node->id()}/simplenews", $edit, t('Save scheduler settings'));
+    $this->submitForm($edit, t('Save scheduler settings'));
 
     // Check if the saving was successful.
-    $this->assertText('Newsletter schedule preferences have been saved.');
-    $this->assertFieldByName('start_date[date]', $date->format('Y-m-d'));
-    $this->assertFieldByName('start_date[time]', $date->format('H:i:s'));
-    $this->assertFieldByName('title', "Custom title [node:nid]");
+    $this->assertSession()->pageTextContains('Newsletter schedule preferences have been saved.');
+    $this->assertSession()->fieldValueEquals('start_date[date]', $date->format('Y-m-d'));
+    $this->assertSession()->fieldValueEquals('start_date[time]', $date->format('H:i:s'));
+    $this->assertSession()->fieldValueEquals('title', "Custom title [node:nid]");
 
     // Make sure it knows no editions created yet.
     $this->drupalGet("node/{$node->id()}/editions");
-    $this->assertText(t("No scheduled newsletter editions have been sent."));
+    $this->assertSession()->pageTextContains(t("No scheduled newsletter editions have been sent."));
 
     // Execute cron.
     \Drupal::service('cron')->run();
@@ -101,24 +103,24 @@ class SimplenewsSchedulerNodeCreationTest extends SimplenewsSchedulerTestBase {
 
     // See if it was created.
     $this->drupalGet("node/{$node->id()}/editions");
-    $this->assertText("Custom title " . $edition_node->id());
-    $this->assertNoText(t("No scheduled newsletter editions have been sent."));
+    $this->assertSession()->pageTextContains("Custom title " . $edition_node->id());
+    $this->assertSession()->pageTextNotContains(t("No scheduled newsletter editions have been sent."));
 
     // Go to node and verify creation time and token for custom title
     $this->clickLink("Custom title " . $edition_node->id());
 
-    $this->assertEqual($edition_node->getCreatedTime(), $date->getTimestamp());
+    $this->assertEquals($edition_node->getCreatedTime(), $date->getTimestamp());
 
     // Check sent mails.
     $mails = $this->getMails();
-    $this->assertEqual(1, count($mails), t('Newsletter mail has been sent.'));
+    $this->assertEquals(1, count($mails), t('Newsletter mail has been sent.'));
 
     $this->clickLink(t('Newsletter'));
-    $this->assertText(t('This node is part of a scheduled newsletter configuration.'));
+    $this->assertSession()->pageTextContains(t('This node is part of a scheduled newsletter configuration.'));
     $this->clickLink(t('here'));
     $url = $node->toUrl('canonical', ['absolute' => TRUE])->toString();
 
-    $this->assertEqual($url, $this->getUrl());
+    $this->assertEquals($url, $this->getUrl());
 
     // Test the tab on a sent newsletter, schedule details should not be shown.
     $title = "newsletter " . $this->randomMachineName(8);
@@ -129,18 +131,20 @@ class SimplenewsSchedulerNodeCreationTest extends SimplenewsSchedulerTestBase {
       'simplenews_issue[target_id]' => 'default',
       'status[value]' => TRUE
     );
-    $this->drupalPostForm('node/add/simplenews_issue', $edit, t('Save'));
-    $this->assertText($title);
+    $this->drupalGet('node/add/simplenews_issue');
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains($title);
 
     $node = $this->drupalGetNodeByTitle($title);
 
     $edit = array();
-    $this->drupalPostForm("node/{$node->id()}/simplenews", $edit, t('Send now'));
-    $this->assertNoText(t('Scheduled Newsletter'));
+    $this->drupalGet("node/{$node->id()}/simplenews");
+    $this->submitForm($edit, t('Send now'));
+    $this->assertSession()->pageTextNotContains(t('Scheduled Newsletter'));
 
     // Check sent mails.
     $mails = $this->getMails();
-    $this->assertEqual(1, count($mails), t('Newsletter mail has been sent.'));
+    $this->assertEquals(1, count($mails), t('Newsletter mail has been sent.'));
   }
 
 }
diff --git a/tests/src/Functional/SimplenewsSchedulerTestBase.php b/tests/src/Functional/SimplenewsSchedulerTestBase.php
index eb84a19..145ce19 100644
--- a/tests/src/Functional/SimplenewsSchedulerTestBase.php
+++ b/tests/src/Functional/SimplenewsSchedulerTestBase.php
@@ -26,7 +26,7 @@ abstract class SimplenewsSchedulerTestBase extends BrowserTestBase {
   /**
    * Overrides DrupalWebTestCase::setUp().
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Set the site timezone to something visibly different from UTC, which
     // has daylight saving changes.
