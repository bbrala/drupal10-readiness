modules/contrib/api_proxy/src/Annotation/HttpApi.php
modules/contrib/api_proxy/src/ApiProxyPermissions.php
modules/contrib/api_proxy/src/Controller/Forwarder.php
modules/contrib/api_proxy/src/EventSubscriber/OptionsRequestSubscriber.php
modules/contrib/api_proxy/src/Form/ApiProxyForm.php
modules/contrib/api_proxy/src/Form/SettingsForm.php
modules/contrib/api_proxy/src/ParamConverter/HttpApiProxyConverter.php
modules/contrib/api_proxy/src/Plugin/HttpApiInterface.php
modules/contrib/api_proxy/src/Plugin/HttpApiPluginBase.php
modules/contrib/api_proxy/src/Plugin/HttpApiPluginManager.php
modules/contrib/api_proxy/src/Plugin/api_proxy/HttpApiCommonConfigs.php

3 files with changes
====================

1) modules/contrib/api_proxy/src/Form/SettingsForm.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function __construct(ConfigFactoryInterface $config_factory, HttpApiPluginManager $api_proxy_manager) {
+  public function __construct(ConfigFactoryInterface $config_factory, HttpApiPluginManager $api_proxy_manager, HttpApiPluginManager $apiProxyManager) {
     $this->setConfigFactory($config_factory);
     $this->apiProxyManager = $api_proxy_manager;
+    $this->apiProxyManager = $apiProxyManager;
   }

   /**
@@ @@
   public static function create(ContainerInterface $container) {
     return new static(
       $container->get('config.factory'),
-      $container->get(HttpApiPluginManager::class)
+      $this->apiProxyManager
     );
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ContainerGetToConstructorInjectionRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/api_proxy/src/EventSubscriber/OptionsRequestSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\api_proxy\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\api_proxy\Controller\Forwarder;
 use Drupal\api_proxy\Plugin\HttpApiPluginBase;
 use Drupal\Core\Cache\CacheableMetadata;
@@ @@
 use Drupal\Core\Config\ImmutableConfig;
 use Symfony\Cmf\Component\Routing\RouteProviderInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Tries to handle the options request.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The request event.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(RequestEvent $event) {
     $request = $event->getRequest();
     $routes = $this->routeProvider->getRouteCollectionForRequest($event->getRequest());
     if ($request->getMethod() !== 'OPTIONS') {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


3) modules/contrib/api_proxy/src/ApiProxyPermissions.php:24

    ---------- begin diff ----------
@@ @@
    * @param \Drupal\api_proxy\Plugin\HttpApiPluginManager $proxy_plugin_manager
    *   The HTTP API proxy plugin manager.
    */
-  public function __construct(HttpApiPluginManager $proxy_plugin_manager) {
+  public function __construct(HttpApiPluginManager $proxy_plugin_manager, HttpApiPluginManager $proxyPluginManager) {
     $this->proxyPluginManager = $proxy_plugin_manager;
+    $this->proxyPluginManager = $proxyPluginManager;
   }

   /**
@@ @@
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    return new static($container->get(HttpApiPluginManager::class));
+    return new static($this->proxyPluginManager);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ContainerGetToConstructorInjectionRector
 * WrapReturnRector


 [ERROR] Could not process "modules/contrib/api_proxy/src/Form/ApiProxyForm.php"
         file, due to:                                                          
         "System error: "Internal error."                                       
         Run Rector with "--debug" option and post the report here:             
         https://github.com/rectorphp/rector/issues/new". On line: 366          

