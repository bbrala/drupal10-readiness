modules/contrib/tfa/services_tfa/src/Plugin/ServiceDefinition/GenericValidation.php
modules/contrib/tfa/src/Plugin/TfaBasePlugin.php
modules/contrib/tfa/src/TfaValidationPluginManager.php
modules/contrib/tfa/src/Annotation/TfaLogin.php
modules/contrib/tfa/src/Annotation/TfaSend.php
modules/contrib/tfa/src/Annotation/TfaSetup.php
modules/contrib/tfa/src/Annotation/TfaValidation.php
modules/contrib/tfa/src/Commands/TfaCommands.php
modules/contrib/tfa/src/Plugin/TfaLogin/TfaTrustedBrowser.php
modules/contrib/tfa/src/Controller/TfaLoginController.php
modules/contrib/tfa/tests/modules/tfa_test_plugins/src/Plugin/TfaSetup/TfaTestValidationPluginSetupPlugin.php
modules/contrib/tfa/src/Form/BasicDisable.php
modules/contrib/tfa/tests/modules/tfa_test_plugins/src/Plugin/TfaValidation/TfaTestValidationPlugin.php
modules/contrib/tfa/tests/src/Functional/TfaConfigTest.php
modules/contrib/tfa/src/Plugin/TfaLoginInterface.php
modules/contrib/tfa/src/Plugin/TfaSendInterface.php
modules/contrib/tfa/src/Plugin/TfaSetup/TfaRecoveryCodeSetup.php
modules/contrib/tfa/src/Plugin/TfaSetup/TfaTrustedBrowserSetup.php
modules/contrib/tfa/tests/src/Functional/TfaLoginTest.php
modules/contrib/tfa/src/Form/BasicOverview.php
modules/contrib/tfa/src/Plugin/TfaSetupInterface.php
modules/contrib/tfa/src/Plugin/TfaValidation/TfaRecoveryCode.php
modules/contrib/tfa/tests/src/Functional/TfaRecoveryCodePluginTest.php
modules/contrib/tfa/src/Form/BasicSetup.php
modules/contrib/tfa/src/Plugin/TfaValidationInterface.php
modules/contrib/tfa/src/Plugin/views/field/TfaEnabledField.php
modules/contrib/tfa/tests/src/Functional/TfaTestBase.php
modules/contrib/tfa/src/Routing/TfaRouteSubscriber.php
modules/contrib/tfa/src/TfaContext.php
modules/contrib/tfa/tests/src/Unit/Plugin/TfaValidation/TfaRecoveryCodeTest.php
modules/contrib/tfa/src/Form/EntryForm.php
modules/contrib/tfa/src/TfaContextInterface.php
modules/contrib/tfa/src/TfaDataTrait.php
modules/contrib/tfa/src/TfaLoginPluginManager.php
modules/contrib/tfa/src/TfaLoginTrait.php
modules/contrib/tfa/src/Form/SettingsForm.php
modules/contrib/tfa/src/TfaRandomTrait.php
modules/contrib/tfa/src/TfaSendPluginManager.php
modules/contrib/tfa/tests/src/Unit/TfaContextTest.php
modules/contrib/tfa/src/TfaSetup.php
modules/contrib/tfa/src/TfaSetupPluginManager.php
modules/contrib/tfa/src/Form/TfaLoginForm.php
modules/contrib/tfa/tfa.install
modules/contrib/tfa/tfa.module
modules/contrib/tfa/src/Plugin/Block/TfaUserLoginBlock.php
modules/contrib/tfa/tfa.views.inc
modules/contrib/tfa/src/Plugin/EncryptionMethod/McryptAES128Encryption.php

5 files with changes
====================

1) modules/contrib/tfa/tests/src/Unit/TfaContextTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tfa\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class TfaContextTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Validation plugin manager.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/tfa/tests/src/Unit/Plugin/TfaValidation/TfaRecoveryCodeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tfa\Unit\Plugin\TfaValidation;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
@@ @@
  */
 class TfaRecoveryCodeTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Mocked user data service.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/tfa/tests/src/Functional/TfaTestBase.php:114

    ---------- begin diff ----------
@@ @@
     $select_field_id = 'edit-tfa-validate';
     $option_field = $assert->optionExists($select_field_id, $validation_plugin_id);
     $result = $option_field->hasAttribute('selected');
-    $assert->assert($result, "Option {$validation_plugin_id} for field {$select_field_id} is selected.");
+    $this->assertTrue($result, "Option {$validation_plugin_id} for field {$select_field_id} is selected.");
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/tfa/tests/src/Functional/TfaRecoveryCodePluginTest.php:124

    ---------- begin diff ----------
@@ @@

     // Make sure codes were saved to the account.
     $codes = $this->validationPlugin->getCodes();
-    $assert->assert(!empty($codes), 'No codes saved to the account data.');
+    $this->assertTrue(!empty($codes), 'No codes saved to the account data.');

     // Now the user should be able to see their existing codes. Let's test that.
     $assert->linkExists('Show codes');
@@ @@
       'name' => $this->userAccount->getAccountName(),
       'pass' => $this->userAccount->passRaw,
     ];
-    $this->drupalPostForm('user/login', $edit, 'Log in');
+    $this->drupalGet('user/login');
+    $this->submitForm($edit, 'Log in');
     $assert->statusCodeEquals(200);
     $assert->pageTextContains('Enter one of your recovery codes');

@@ @@
     $this->submitForm($edit, 'Verify');
     $assert->statusCodeEquals(200);
     $assert->pageTextContains($this->userAccount->getDisplayName());
-    $assert->assert($this->userAccount->isAuthenticated(), 'User is logged in.');
+    $this->assertTrue($this->userAccount->isAuthenticated(), 'User is logged in.');

     // Try replay attack with a valid code that has already been used.
     $this->drupalLogout();
@@ @@
       'name' => $this->userAccount->getAccountName(),
       'pass' => $this->userAccount->passRaw,
     ];
-    $this->drupalPostForm('user/login', $edit, 'Log in');
+    $this->drupalGet('user/login');
+    $this->submitForm($edit, 'Log in');
     $assert->statusCodeEquals(200);
     $assert->pageTextContains('Enter one of your recovery codes');
    ----------- end diff -----------

Applied rules:
 * AssertRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/tfa/tests/src/Functional/TfaLoginTest.php:48

    ---------- begin diff ----------
@@ @@
     $edit = [
       'tfa_required_roles[' . $web_user_roles[0] . ']' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/people/tfa', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/people/tfa');
+    $this->submitForm($edit, 'Save configuration');
     $assert_session->statusCodeEquals(200);
-    $this->assertText('The configuration options have been saved.');
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');

     // Check that tfa is presented.
     $this->drupalLogout();
@@ @@
       'name' => $this->webUser->getAccountName(),
       'pass' => $this->webUser->passRaw,
     ];
-    $this->drupalPostForm('user/login', $edit, 'Log in');
+    $this->drupalGet('user/login');
+    $this->submitForm($edit, 'Log in');
     $assert_session->statusCodeEquals(200);
     $assert_session->addressMatches('/\/tfa\/' . $this->webUser->id() . '/');

@@ @@
       $edit['tfa_required_roles[' . $role_id . ']'] = FALSE;
     }
     $edit['tfa_required_roles[authenticated]'] = FALSE;
-    $this->drupalPostForm('admin/config/people/tfa', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/people/tfa');
+    $this->submitForm($edit, 'Save configuration');
     $assert_session->statusCodeEquals(200);
-    $this->assertText('The configuration options have been saved.');
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
     // Enable tfa for a single user.
     $this->drupalLogin($this->webUser);
     $this->drupalGet('user/' . $this->webUser->id() . '/security/tfa');
@@ @@
       'name' => $this->webUser->getAccountName(),
       'pass' => $this->webUser->passRaw,
     ];
-    $this->drupalPostForm('user/login', $edit, 'Log in');
+    $this->drupalGet('user/login');
+    $this->submitForm($edit, 'Log in');
     $assert_session->statusCodeEquals(200);
     $assert_session->addressMatches('/\/tfa\/' . $this->webUser->id() . '/');
   }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

