modules/contrib/entity_sync/entity_sync.module
modules/contrib/entity_sync/src/Entity/Sync.php
modules/contrib/entity_sync/src/Annotation/EntitySyncFieldTransformer.php
modules/contrib/entity_sync/src/Entity/SyncInterface.php
modules/contrib/entity_sync/src/EntityManagerBase.php
modules/contrib/entity_sync/src/Annotation/EntitySyncValidationConstraint.php
modules/contrib/entity_sync/src/Client/ClientFactory.php
modules/contrib/entity_sync/src/Exception/FieldImportException.php
modules/contrib/entity_sync/src/Exception/InvalidConfigurationException.php
modules/contrib/entity_sync/src/Export/EntityManager.php
modules/contrib/entity_sync/src/Import/FieldManager.php
modules/contrib/entity_sync/src/Event/InitiateOperationEvent.php
modules/contrib/entity_sync/src/Event/PostTerminateOperationEvent.php
modules/contrib/entity_sync/src/Event/PreInitiateOperationEvent.php
modules/contrib/entity_sync/src/Event/TerminateOperationEvent.php
modules/contrib/entity_sync/src/EventSubscriber/DefaultExportFieldMapping.php
modules/contrib/entity_sync/src/EventSubscriber/DefaultExportLocalEntityMapping.php
modules/contrib/entity_sync/tests/src/Exception/TestRuntimeException.php
modules/contrib/entity_sync/src/EventSubscriber/DefaultImportFieldMapping.php
modules/contrib/entity_sync/src/EventSubscriber/DefaultImportLocalEntityMapping.php
modules/contrib/entity_sync/src/Client/ClientInterface.php
modules/contrib/entity_sync/src/EventSubscriber/DefaultImportRemoteEntityMapping.php
modules/contrib/entity_sync/src/Client/ProviderClientFactoryInterface.php
modules/contrib/entity_sync/src/Commands/Export.php
modules/contrib/entity_sync/src/EventSubscriber/ManagedExportLocalEntityTerminate.php
modules/contrib/entity_sync/tests/src/Mock/Export/FieldManager.php
modules/contrib/entity_sync/src/EventSubscriber/ManagedImportRemoteListFilters.php
modules/contrib/entity_sync/src/Commands/Import.php
modules/contrib/entity_sync/tests/src/TestTrait/DataProviderTrait.php
modules/contrib/entity_sync/src/EventSubscriber/ManagedImportRemoteListLock.php
modules/contrib/entity_sync/src/EventSubscriber/ManagedImportRemoteListTerminate.php
modules/contrib/entity_sync/src/EventSubscriber/ManagedImportRemoteListUnlock.php
modules/contrib/entity_sync/src/Commands/State.php
modules/contrib/entity_sync/src/Exception/EntityExportException.php
modules/contrib/entity_sync/src/Exception/EntityImportException.php
modules/contrib/entity_sync/src/Exception/FieldExportException.php
modules/contrib/entity_sync/src/Config/Manager.php
modules/contrib/entity_sync/tests/src/TestTrait/FixturesTrait.php
modules/contrib/entity_sync/src/Config/ManagerInterface.php
modules/contrib/entity_sync/src/Import/FieldManagerInterface.php
modules/contrib/entity_sync/src/Import/Manager.php
modules/contrib/entity_sync/src/Export/EntityManagerInterface.php
modules/contrib/entity_sync/src/Export/Event/Events.php
modules/contrib/entity_sync/src/Export/Event/FieldMappingEvent.php
modules/contrib/entity_sync/src/Export/Event/LocalEntityMappingEvent.php
modules/contrib/entity_sync/tests/src/Unit/Config/SyncManagerTest.php
modules/contrib/entity_sync/src/Export/FieldManager.php
modules/contrib/entity_sync/src/Export/FieldManagerInterface.php
modules/contrib/entity_sync/src/FieldTransformer/Factory/ContainerAndValidatorFactory.php
modules/contrib/entity_sync/src/FieldTransformer/PluginBase.php
modules/contrib/entity_sync/src/FieldTransformer/PluginInterface.php
modules/contrib/entity_sync/src/FieldTransformer/PluginManager.php
modules/contrib/entity_sync/tests/src/Unit/Export/FieldManagerGetNamesTest.php
modules/contrib/entity_sync/src/Form/ImportBase.php
modules/contrib/entity_sync/src/Import/ManagerInterface.php
modules/contrib/entity_sync/src/Plugin/EntitySync/FieldTransformer/ConfigProperty.php
modules/contrib/entity_sync/src/Form/ImportListBase.php
modules/contrib/entity_sync/src/Plugin/EntitySync/FieldTransformer/CopyValue.php
modules/contrib/entity_sync/src/Plugin/EntitySync/FieldTransformer/FixedValue.php
modules/contrib/entity_sync/src/Plugin/EntitySync/FieldTransformer/LocalEntityIdsByPropertyBase.php
modules/contrib/entity_sync/src/Import/Event/Events.php
modules/contrib/entity_sync/src/Import/Event/FieldMappingEvent.php
modules/contrib/entity_sync/src/Plugin/EntitySync/FieldTransformer/LocalEntityIdsByRemoteProperty.php
modules/contrib/entity_sync/src/Import/Event/ListFiltersEvent.php
modules/contrib/entity_sync/src/Plugin/EntitySync/FieldTransformer/StringToTimestamp.php
modules/contrib/entity_sync/src/Import/Event/LocalEntityMappingEvent.php
modules/contrib/entity_sync/src/Plugin/EntitySync/ValidationConstraint/Count.php
modules/contrib/entity_sync/src/Plugin/EntitySync/ValidationConstraint/CountValidator.php
modules/contrib/entity_sync/src/Plugin/EntitySync/ValidationConstraint/NotNull.php
modules/contrib/entity_sync/src/Plugin/EntitySync/ValidationConstraint/NotNullValidator.php
modules/contrib/entity_sync/src/Plugin/QueueWorker/ExportLocalEntity.php
modules/contrib/entity_sync/src/Import/Event/RemoteEntityMappingEvent.php
modules/contrib/entity_sync/tests/src/Unit/Export/FieldManagerTest.php
modules/contrib/entity_sync/src/Plugin/QueueWorker/ImportList.php
modules/contrib/entity_sync/src/StateManager.php
modules/contrib/entity_sync/src/StateManagerInterface.php
modules/contrib/entity_sync/src/Utility/DateTime.php
modules/contrib/entity_sync/src/ValidationConstraint/PluginManager.php
modules/contrib/entity_sync/tests/src/Unit/Import/CommandsTest.php
modules/contrib/entity_sync/tests/src/Unit/Import/EntityManagerTest.php
modules/contrib/entity_sync/tests/src/Unit/Import/FieldManagerTest.php
modules/contrib/entity_sync/tests/src/Unit/Import/ImportListQueueWorkerTest.php
modules/contrib/entity_sync/tests/src/Unit/State/CommandsTest.php
modules/contrib/entity_sync/tests/src/Unit/Utility/DateTimeTest.php

22 files with changes
=====================

1) modules/contrib/entity_sync/src/Event/TerminateOperationEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the operation terminate event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_sync/src/Event/PreInitiateOperationEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the operation pre-initiate event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_sync/src/Event/PostTerminateOperationEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the operation post-terminate event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_sync/src/Event/InitiateOperationEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the operation initiate event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_sync/src/Import/Event/RemoteEntityMappingEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Import\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the import remote entity mapping event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/entity_sync/src/Import/Event/LocalEntityMappingEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Import\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
-
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the import local entity mapping event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/entity_sync/src/Import/Event/ListFiltersEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Import\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the import list filters event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/entity_sync/src/Import/Event/FieldMappingEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Import\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
-
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the import field mapping event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/entity_sync/src/Export/FieldManager.php:218

    ---------- begin diff ----------
@@ @@
       $remote_entity_id,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::FIELD_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::FIELD_MAPPING);

     // Return the final mappings.
     return $event->getFieldMapping();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


10) modules/contrib/entity_sync/src/Export/Event/LocalEntityMappingEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Export\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
-
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the export local entity mapping event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/entity_sync/src/Export/Event/FieldMappingEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_sync\Export\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
-
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the export field mapping event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/entity_sync/src/Export/EntityManager.php:791

    ---------- begin diff ----------
@@ @@
       $local_entity,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::LOCAL_ENTITY_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::LOCAL_ENTITY_MAPPING);

     // Return the final mapping.
     return $event->getEntityMapping();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


13) modules/contrib/entity_sync/src/Import/Manager.php:955

    ---------- begin diff ----------
@@ @@
     ImmutableConfig $sync
   ) {
     $event = new RemoteEntityMappingEvent($remote_entity, $sync);
-    $this->eventDispatcher->dispatch(Events::REMOTE_ENTITY_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::REMOTE_ENTITY_MAPPING);

     // Return the final mapping.
     return $event->getEntityMapping();
@@ @@
       $local_entity,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::LOCAL_ENTITY_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::LOCAL_ENTITY_MAPPING);

     // Return the final mapping.
     return $event->getEntityMapping();
@@ @@
       $context,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::REMOTE_LIST_FILTERS, $event);
+    $this->eventDispatcher->dispatch($event, Events::REMOTE_LIST_FILTERS);

     // Return the final filters.
     return $event->getFilters();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/entity_sync/src/Import/FieldManager.php:261

    ---------- begin diff ----------
@@ @@
       $local_entity,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::FIELD_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::FIELD_MAPPING);

     // Return the final mappings.
     return $event->getFieldMapping();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


15) modules/contrib/entity_sync/tests/src/Unit/State/CommandsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_sync\Unit\State;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Commands\State as Command;
 use Drupal\entity_sync\StateManagerInterface;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class CommandsTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Tests that the state manager is properly called to unset the state.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


16) modules/contrib/entity_sync/tests/src/Unit/Import/ImportListQueueWorkerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_sync\Unit\Import;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Import\ManagerInterface;
 use Drupal\entity_sync\Plugin\QueueWorker\ImportList as QueueWorker;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class ImportListQueueWorkerTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Different values for the datetime filters.
    */
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


17) modules/contrib/entity_sync/tests/src/Unit/Import/FieldManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_sync\Unit\Import;

+use Prophecy\PhpUnit\ProphecyTrait;
+use phpmock\phpunit\PHPMock;
 use Drupal\entity_sync\Config\ManagerInterface as ConfigManagerInterface;
 use Drupal\entity_sync\Exception\FieldImportException;
 use Drupal\entity_sync\Import\FieldManager;
@@ @@
  */
 class FieldManagerTest extends UnitTestCase {

+  use ProphecyTrait;
   use DataProviderTrait;
   use FixturesTrait;

-  use \phpmock\phpunit\PHPMock;
+  use PHPMock;

   /**
    * Different values for the remote changed field.
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


18) modules/contrib/entity_sync/tests/src/Unit/Import/EntityManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_sync\Unit\Import;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Client\ClientFactory;
 use Drupal\entity_sync\Client\ClientInterface;
 use Drupal\entity_sync\Exception\FieldImportException;
@@ @@
  */
 class EntityManagerTest extends UnitTestCase {

+  use ProphecyTrait;
   use DataProviderTrait;
   use FixturesTrait;
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


19) modules/contrib/entity_sync/tests/src/Unit/Import/CommandsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_sync\Unit\Import;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Commands\Import as Command;
 use Drupal\entity_sync\Import\ManagerInterface;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class CommandsTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Different values for the datetime filters.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


20) modules/contrib/entity_sync/tests/src/Unit/Export/FieldManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_sync\Unit\Export;

+use Prophecy\PhpUnit\ProphecyTrait;
+use phpmock\phpunit\PHPMock;
 use Drupal\entity_sync\Config\ManagerInterface as ConfigManagerInterface;
 use Drupal\entity_sync\Exception\FieldExportException;
 use Drupal\entity_sync\Export\Event\Events;
@@ @@
  */
 class FieldManagerTest extends UnitTestCase {

+  use ProphecyTrait;
   use DataProviderTrait;
   use FixturesTrait;

-  use \phpmock\phpunit\PHPMock;
+  use PHPMock;

   /**
    * Holds the return value of the field manager for each test case.
@@ @@
    *
    * We set the expected value where appropriate in the branching methods.
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->expectedFields = [];
   }
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/entity_sync/tests/src/Unit/Export/FieldManagerGetNamesTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_sync\Unit\Export;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Config\ManagerInterface as ConfigManagerInterface;
 use Drupal\entity_sync\Export\FieldManager;

@@ @@
  */
 class FieldManagerGetNamesTest extends UnitTestCase {

+  use ProphecyTrait;
   use FixturesTrait;

   /**
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


22) modules/contrib/entity_sync/tests/src/Unit/Config/SyncManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_sync\Unit\Config;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Config\Manager;

 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
  */
 class SyncManagerTest extends UnitTestCase {

+  use ProphecyTrait;
   use FixturesTrait;

   /**
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/entity_sync/src/Plugin/EntitySync/FieldTransformer/Cop
         yValue.php" file, due to:                                              
         "System error:                                                         
         "RectorPrefix202207\Nette\Utils\Reflection::getUseStatements(): Return 
         value must be of type array, null returned"                            
         Run Rector with "--debug" option and post the report here:             
         https://github.com/rectorphp/rector/issues/new". On line: 234          

