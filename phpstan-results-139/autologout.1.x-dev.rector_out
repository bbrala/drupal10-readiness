modules/contrib/autologout/autologout.api.php
modules/contrib/autologout/src/Plugin/Block/AutologoutWarningBlock.php
modules/contrib/autologout/autologout.install
modules/contrib/autologout/autologout.module
modules/contrib/autologout/tests/src/Functional/AutologoutAjaxTest.php
modules/contrib/autologout/tests/src/Functional/AutologoutSessionCleanupOnLoginTest.php
modules/contrib/autologout/src/AutologoutManager.php
modules/contrib/autologout/tests/src/Functional/AutologoutTest.php
modules/contrib/autologout/src/AutologoutManagerInterface.php
modules/contrib/autologout/src/Controller/AutologoutController.php
modules/contrib/autologout/src/EventSubscriber/AutologoutSubscriber.php
modules/contrib/autologout/src/Form/AutologoutBlockForm.php
modules/contrib/autologout/tests/src/FunctionalJavascript/CyclicAjaxTest.php
modules/contrib/autologout/src/Form/AutologoutSettingsForm.php
modules/contrib/autologout/tests/src/Kernel/SettingsFormTest.php

6 files with changes
====================

1) modules/contrib/autologout/src/EventSubscriber/AutologoutSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\autologout\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\autologout\AutologoutManagerInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactory;
@@ @@
 use Drupal\Core\Theme\ThemeManager;
 use Symfony\Component\HttpFoundation\RequestStack;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

 /**
@@ @@
   /**
    * Check for autologout JS.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The request event.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(RequestEvent $event) {
     $autologout_manager = $this->autoLogoutManager;

     $uid = $this->currentUser->id();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/autologout/tests/src/Kernel/SettingsFormTest.php:59

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
     $this->installSchema('user', ['users_data']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/autologout/tests/src/FunctionalJavascript/CyclicAjaxTest.php:45

    ---------- begin diff ----------
@@ @@
    *
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in our privileged user.
     $this->privilegedUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/autologout/tests/src/Functional/AutologoutTest.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * Performs any pre-requisite tasks that need to happen.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in our privileged user.
     $this->privilegedUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/autologout/tests/src/Functional/AutologoutSessionCleanupOnLoginTest.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * Performs any pre-requisite tasks that need to happen.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in our privileged user.
     $this->privilegedUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/autologout/tests/src/Functional/AutologoutAjaxTest.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * SetUp() performs any pre-requisite tasks that need to happen.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in our privileged user.
     $this->privilegedUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

