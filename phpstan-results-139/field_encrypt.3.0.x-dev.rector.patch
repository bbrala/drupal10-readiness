diff --git a/field_encrypt.api.php b/field_encrypt.api.php
index 05e5079..c8fb97c 100644
--- a/field_encrypt.api.php
+++ b/field_encrypt.api.php
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityInterface;
 /**
  * @file
  * Hooks for Field Encrypt module.
@@ -26,7 +27,7 @@ use Drupal\node\Entity\Node;
  * @return bool
  *   Return FALSE if entity should not be encrypted.
  */
-function hook_field_encrypt_allow_encryption(\Drupal\Core\Entity\ContentEntityInterface $entity) {
+function hook_field_encrypt_allow_encryption(ContentEntityInterface $entity) {
   // Only encrypt fields on unpublished nodes.
   if ($entity instanceof Node) {
     if ($entity->isPublished()) {
diff --git a/tests/src/Functional/BaseFieldTest.php b/tests/src/Functional/BaseFieldTest.php
index e2f421b..0699069 100644
--- a/tests/src/Functional/BaseFieldTest.php
+++ b/tests/src/Functional/BaseFieldTest.php
@@ -42,7 +42,7 @@ class BaseFieldTest extends EncryptTestBase {
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create an admin user.
diff --git a/tests/src/Functional/CacheTest.php b/tests/src/Functional/CacheTest.php
index 55692c7..35b64dd 100644
--- a/tests/src/Functional/CacheTest.php
+++ b/tests/src/Functional/CacheTest.php
@@ -29,7 +29,7 @@ class CacheTest extends FieldEncryptTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->entityTypeManager = $this->container->get('entity_type.manager');
diff --git a/tests/src/Functional/EncryptUserTest.php b/tests/src/Functional/EncryptUserTest.php
index 02e7d19..d180c47 100644
--- a/tests/src/Functional/EncryptUserTest.php
+++ b/tests/src/Functional/EncryptUserTest.php
@@ -35,7 +35,7 @@ class EncryptUserTest extends EncryptTestBase {
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create an admin user.
diff --git a/tests/src/Functional/EntityHooksTest.php b/tests/src/Functional/EntityHooksTest.php
index e72a6b0..4526665 100644
--- a/tests/src/Functional/EntityHooksTest.php
+++ b/tests/src/Functional/EntityHooksTest.php
@@ -35,7 +35,7 @@ class EntityHooksTest extends EncryptTestBase {
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Disable eval().
diff --git a/tests/src/Functional/FieldEncryptTestBase.php b/tests/src/Functional/FieldEncryptTestBase.php
index 9e5cdf9..cfb6ef3 100644
--- a/tests/src/Functional/FieldEncryptTestBase.php
+++ b/tests/src/Functional/FieldEncryptTestBase.php
@@ -57,7 +57,7 @@ abstract class FieldEncryptTestBase extends EncryptTestBase {
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create an admin user.
diff --git a/tests/src/Functional/KeyChangeTest.php b/tests/src/Functional/KeyChangeTest.php
index 7c5e94d..f049931 100644
--- a/tests/src/Functional/KeyChangeTest.php
+++ b/tests/src/Functional/KeyChangeTest.php
@@ -37,7 +37,7 @@ class KeyChangeTest extends EncryptTestBase {
    *
    * @TODO: Simplify setUp() by extending EncryptTestBase when https://www.drupal.org/node/2692387 lands.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create an admin user.
diff --git a/tests/src/Functional/PerformanceScriptTest.php b/tests/src/Functional/PerformanceScriptTest.php
index 72e606a..68b47a0 100644
--- a/tests/src/Functional/PerformanceScriptTest.php
+++ b/tests/src/Functional/PerformanceScriptTest.php
@@ -39,7 +39,7 @@ class PerformanceScriptTest extends EncryptTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // This test relies on
     // \Drupal\Tests\encrypt\Functional\EncryptTestBase::setUp()
     // creating an encryption profile called 'encryption_profile_1' to avoid
diff --git a/tests/src/FunctionalJavascript/BaseFieldSettingsFormTest.php b/tests/src/FunctionalJavascript/BaseFieldSettingsFormTest.php
index 30729ac..3e0ff3e 100644
--- a/tests/src/FunctionalJavascript/BaseFieldSettingsFormTest.php
+++ b/tests/src/FunctionalJavascript/BaseFieldSettingsFormTest.php
@@ -58,7 +58,7 @@ class BaseFieldSettingsFormTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
diff --git a/tests/src/Unit/ProcessEntitiesTest.php b/tests/src/Unit/ProcessEntitiesTest.php
index 16e481e..ec8ee51 100644
--- a/tests/src/Unit/ProcessEntitiesTest.php
+++ b/tests/src/Unit/ProcessEntitiesTest.php
@@ -44,7 +44,7 @@ class ProcessEntitiesTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     if (version_compare(Version::id(), '8.0', '<')) {
@@ -52,14 +52,10 @@ class ProcessEntitiesTest extends UnitTestCase {
     }
 
     // Set up a mock entity.
-    $this->entity = $this->getMockBuilder('\Drupal\Core\Entity\ContentEntityInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity = $this->createMock('\Drupal\Core\Entity\ContentEntityInterface');
 
     // Set up language object.
-    $language = $this->getMockBuilder('\Drupal\Core\Language\LanguageInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $language = $this->createMock('\Drupal\Core\Language\LanguageInterface');
 
     // Set up expectations for language.
     $language->expects($this->any())
@@ -75,17 +71,11 @@ class ProcessEntitiesTest extends UnitTestCase {
       ->will($this->returnSelf());
 
     // Set up a mock field.
-    $this->field = $this->getMockBuilder('\Drupal\Core\Field\FieldItemListInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->field = $this->createMock('\Drupal\Core\Field\FieldItemListInterface');
 
     // Set up a mock storage field.
-    $storage_item = $this->getMockBuilder(EncryptedFieldStorageItem::class)
-      ->disableOriginalConstructor()
-      ->getMock();
-    $this->storageField = $this->getMockBuilder('\Drupal\Core\Field\FieldItemListInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $storage_item = $this->createMock(EncryptedFieldStorageItem::class);
+    $this->storageField = $this->createMock('\Drupal\Core\Field\FieldItemListInterface');
     $this->storageField->expects($this->any())
       ->method('offsetGet')
       ->with(0)
@@ -106,16 +96,10 @@ class ProcessEntitiesTest extends UnitTestCase {
    */
   public function testEncryptDecryptEntity($field_type, $property_definitions, $properties, $field_value, $expected_placeholder, $encrypted) {
     // Set up field definition.
-    $definition = $this->getMockBuilder(FieldConfig::class)
-      ->onlyMethods(['getName', 'getFieldStorageDefinition', 'getType'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $definition = $this->createMock(FieldConfig::class);
 
     // Set up field storage.
-    $storage = $this->getMockBuilder(FieldStorageConfig::class)
-      ->onlyMethods(['getThirdPartySetting', 'getPropertyDefinitions', 'isBaseField'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $storage = $this->createMock(FieldStorageConfig::class);
 
     // Set up expectations for storage.
     $storage_map = [
