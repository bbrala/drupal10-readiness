diff --git a/tests/src/Functional/ExportFormTest.php b/tests/src/Functional/ExportFormTest.php
index 0438c90..a11065e 100644
--- a/tests/src/Functional/ExportFormTest.php
+++ b/tests/src/Functional/ExportFormTest.php
@@ -20,7 +20,7 @@ class ExportFormTest extends FormTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->moduleConfig->set('export.text_revoked', 'N');
@@ -38,7 +38,8 @@ class ExportFormTest extends FormTestBase {
     // Submit export form.
     $edit = [];
     $edit['format'] = $format;
-    $this->drupalPostForm(static::PAGE_PATH, $edit, t('Download'));
+    $this->drupalGet(static::PAGE_PATH);
+    $this->submitForm($edit, t('Download'));
     $assert_session->statusCodeEquals(200);
     $assert_session->responseHeaderContains('Content-Disposition', 'attachment; filename=' . $this->moduleConfig->get('export.filename') . '.' . $format . '');
 
@@ -51,7 +52,7 @@ class ExportFormTest extends FormTestBase {
     $file = File::create($file_params);
     file_put_contents($file->getFileUri(), $this->getSession()->getDriver()->getContent());
     $file->save();
-    $assert_session->assert($file->id(), 'Save exported file to temporary directory.');
+    $this->assertTrue($file->id(), 'Save exported file to temporary directory.');
 
     // Test the exported file.
     $sheet = NULL;
@@ -60,17 +61,17 @@ class ExportFormTest extends FormTestBase {
       $sheet = $reader->getActiveSheet();
     }
     catch (\Exception $ex) {
-      $assert_session->assert($sheet !== NULL, 'Load exported file.');
+      $this->assertTrue($sheet !== NULL, 'Load exported file.');
     }
 
-    $assert_session->assert($sheet->getCellByColumnAndRow(7, 1)->getValue() == $this->adminUser->getRoles(TRUE)[0], 'Role name is output correctly.');
+    $this->assertTrue($sheet->getCellByColumnAndRow(7, 1)->getValue() == $this->adminUser->getRoles(TRUE)[0], 'Role name is output correctly.');
 
     $values = [];
     for ($row = 2; strlen($permission = $sheet->getCellByColumnAndRow(4, $row)->getValue()); $row++) {
       $values[$permission] = trim($sheet->getCellByColumnAndRow(7, $row)->getValue());
     }
-    $assert_session->assert($values['access administration pages'] == $this->moduleConfig->get('export.text_granted'), 'Granted permission is output correctly.');
-    $assert_session->assert($values['administer site configuration'] == $this->moduleConfig->get('export.text_revoked'), 'Revoked permission is output correctly.');
+    $this->assertTrue($values['access administration pages'] == $this->moduleConfig->get('export.text_granted'), 'Granted permission is output correctly.');
+    $this->assertTrue($values['administer site configuration'] == $this->moduleConfig->get('export.text_revoked'), 'Revoked permission is output correctly.');
   }
 
 }
diff --git a/tests/src/Functional/FormTestBase.php b/tests/src/Functional/FormTestBase.php
index 8b9324e..d93942a 100644
--- a/tests/src/Functional/FormTestBase.php
+++ b/tests/src/Functional/FormTestBase.php
@@ -41,7 +41,7 @@ abstract class FormTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer permissions', 'access administration pages']);
diff --git a/tests/src/Functional/ImportFormTest.php b/tests/src/Functional/ImportFormTest.php
index 451e97c..2d64b4d 100644
--- a/tests/src/Functional/ImportFormTest.php
+++ b/tests/src/Functional/ImportFormTest.php
@@ -26,7 +26,7 @@ class ImportFormTest extends FormTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->moduleConfig->set('import.text_revoked', "N\nx");
@@ -71,23 +71,24 @@ class ImportFormTest extends FormTestBase {
     $file_real_path = $this->container->get('file_system')->realPath($file->getFileUri());
     $this->createWriter($format, $spreadsheet)->save($file_real_path);
     $file->save();
-    $assert_session->assert($file->id(), 'Save import file to temporary directory.');
+    $this->assertTrue($file->id(), 'Save import file to temporary directory.');
 
     // Submit import form.
     $edit = ['files[file]' => $file_real_path];
-    $this->drupalPostForm(static::PAGE_PATH, $edit, t('Import'));
+    $this->drupalGet(static::PAGE_PATH);
+    $this->submitForm($edit, t('Import'));
     $assert_session->statusCodeEquals(200);
     $assert_session->responseContains((string) t('The permissions have been imported.'));
 
     // Check updated permissions.
     $roles = $this->loadRoles();
-    $assert_session->assert($roles['administrator']->hasPermission('administer menu'), "Check uneditable permission is protected.");
+    $this->assertTrue($roles['administrator']->hasPermission('administer menu'), "Check uneditable permission is protected.");
 
     $role = $roles[$current_user_rid];
-    $assert_session->assert($role->hasPermission('administer menu'), "Check behavior for cell filled with 'Y'.");
-    $assert_session->assert(!$role->hasPermission('administer modules'), "Check behavior for cell filled with 'N'.");
-    $assert_session->assert(!$role->hasPermission('administer site configuration'), "Check behavior for cell filled with 'x'.");
-    $assert_session->assert(!$role->hasPermission('administer themes'), "Check behavior for empty cell.");
+    $this->assertTrue($role->hasPermission('administer menu'), "Check behavior for cell filled with 'Y'.");
+    $this->assertTrue(!$role->hasPermission('administer modules'), "Check behavior for cell filled with 'N'.");
+    $this->assertTrue(!$role->hasPermission('administer site configuration'), "Check behavior for cell filled with 'x'.");
+    $this->assertTrue(!$role->hasPermission('administer themes'), "Check behavior for empty cell.");
 
     // Revert changes.
     user_role_change_permissions($current_user_rid, [
