modules/contrib/entity_print/entity_print.install
modules/contrib/entity_print/modules/entity_print_views/src/Controller/ViewPrintController.php
modules/contrib/entity_print/src/Event/PreSendPrintEvent.php
modules/contrib/entity_print/src/Plugin/ExportTypeInterface.php
modules/contrib/entity_print/tests/modules/entity_print_test/src/EventSubscriber/TestEngineConfigurationAlter.php
modules/contrib/entity_print/tests/src/Kernel/TranslationTest.php
modules/contrib/entity_print/src/Plugin/ExportTypeManager.php
modules/contrib/entity_print/src/Event/PrintCssAlterEvent.php
modules/contrib/entity_print/src/Event/PrintEventBase.php
modules/contrib/entity_print/src/Event/PrintEvents.php
modules/contrib/entity_print/src/Event/PrintHtmlAlterEvent.php
modules/contrib/entity_print/src/EventSubscriber/PostRenderSubscriber.php
modules/contrib/entity_print/tests/modules/entity_print_test/src/Plugin/EntityPrint/PrintEngine/NotAvailablePrintEngine.php
modules/contrib/entity_print/src/Plugin/ExportTypeManagerInterface.php
modules/contrib/entity_print/src/Plugin/Field/FieldFormatter/Base64ImageFormatter.php
modules/contrib/entity_print/tests/modules/entity_print_test/src/Plugin/EntityPrint/PrintEngine/PrintExceptionEngine.php
modules/contrib/entity_print/tests/modules/entity_print_test/src/Plugin/EntityPrint/PrintEngine/TestPrintEngine.php
modules/contrib/entity_print/entity_print.module
modules/contrib/entity_print/tests/modules/entity_print_test/src/Plugin/EntityPrint/PrintEngine/TestWordPrintEngine.php
modules/contrib/entity_print/tests/src/Functional/Base64ImageTest.php
modules/contrib/entity_print/src/EventSubscriber/PrintEngineExceptionSubscriber.php
modules/contrib/entity_print/entity_print.post_update.php
modules/contrib/entity_print/tests/src/Unit/AssetCollectorTest.php
modules/contrib/entity_print/src/Plugin/PrintEngineBase.php
modules/contrib/entity_print/modules/entity_print_views/entity_print_views.module
modules/contrib/entity_print/modules/entity_print_views/entity_print_views.views.inc
modules/contrib/entity_print/modules/entity_print_views/src/Plugin/views/area/EntityPrintViewsLink.php
modules/contrib/entity_print/src/Plugin/PrintEngineInterface.php
modules/contrib/entity_print/src/PrintBuilder.php
modules/contrib/entity_print/tests/src/Unit/PrintEngineExceptionTest.php
modules/contrib/entity_print/modules/entity_print_views/src/Plugin/views/display/PrintExtender.php
modules/contrib/entity_print/src/FilenameGenerator.php
modules/contrib/entity_print/modules/entity_print_views/src/Plugin/views/field/PrintLink.php
modules/contrib/entity_print/src/FilenameGeneratorInterface.php
modules/contrib/entity_print/tests/src/Functional/EntityPrintActionTest.php
modules/contrib/entity_print/src/Form/SettingsForm.php
modules/contrib/entity_print/src/PrintBuilderInterface.php
modules/contrib/entity_print/src/PrintEngineException.php
modules/contrib/entity_print/modules/entity_print_views/src/Renderer/ViewRenderer.php
modules/contrib/entity_print/src/Renderer/ContentEntityRenderer.php
modules/contrib/entity_print/tests/src/Functional/EntityPrintAdminTest.php
modules/contrib/entity_print/modules/entity_print_views/tests/src/Functional/PrintViewsTest.php
modules/contrib/entity_print/src/Renderer/RendererBase.php
modules/contrib/entity_print/tests/src/Functional/EntityPrintTest.php
modules/contrib/entity_print/src/Renderer/RendererFactory.php
modules/contrib/entity_print/tests/src/Functional/InstallationTest.php
modules/contrib/entity_print/src/Renderer/RendererFactoryInterface.php
modules/contrib/entity_print/src/Renderer/RendererInterface.php
modules/contrib/entity_print/tests/modules/entity_print_test/entity_print_test.module
modules/contrib/entity_print/src/Plugin/Action/PrintDownload.php
modules/contrib/entity_print/tests/src/FunctionalJavascript/EntityPrintAdminTest.php
modules/contrib/entity_print/modules/entity_print_views/tests/src/Kernel/ViewsAccessTest.php
modules/contrib/entity_print/src/Plugin/Block/PrintLinks.php
modules/contrib/entity_print/tests/src/Kernel/EntityPrintAccessTest.php
modules/contrib/entity_print/modules/entity_print_views/tests/src/Kernel/ViewsRendererTest.php
modules/contrib/entity_print/src/Plugin/EntityPrint/ExportType/DefaultExportType.php
modules/contrib/entity_print/src/Plugin/EntityPrint/PrintEngine/AlignableHeaderFooterInterface.php
modules/contrib/entity_print/src/Plugin/EntityPrint/PrintEngine/DomPdf.php
modules/contrib/entity_print/src/Annotation/PrintEngine.php
modules/contrib/entity_print/src/Asset/AssetCollector.php
modules/contrib/entity_print/tests/src/Kernel/EntityPrintPluginManagerTest.php
modules/contrib/entity_print/src/Asset/AssetCollectorInterface.php
modules/contrib/entity_print/src/Asset/AssetRenderer.php
modules/contrib/entity_print/src/Asset/AssetRendererInterface.php
modules/contrib/entity_print/src/Controller/EntityPrintController.php
modules/contrib/entity_print/tests/src/Kernel/ExtraFieldsTest.php
modules/contrib/entity_print/src/Plugin/EntityPrint/PrintEngine/PdfEngineBase.php
modules/contrib/entity_print/src/Plugin/EntityPrint/PrintEngine/PhpWkhtmlToPdf.php
modules/contrib/entity_print/src/Element/PrintLink.php
modules/contrib/entity_print/tests/src/Kernel/FilenameGeneratorTest.php
modules/contrib/entity_print/src/Entity/PrintEngineStorage.php
modules/contrib/entity_print/src/Entity/PrintEngineStorageInterface.php
modules/contrib/entity_print/src/EntityPrintPermissions.php
modules/contrib/entity_print/tests/src/Kernel/NodePreviewTest.php
modules/contrib/entity_print/src/Plugin/EntityPrint/PrintEngine/TcPdfv1.php
modules/contrib/entity_print/tests/src/Kernel/PostRenderSubscriberTest.php
modules/contrib/entity_print/src/Plugin/EntityPrintPluginManager.php
modules/contrib/entity_print/tests/src/Kernel/PrintBuilderTest.php
modules/contrib/entity_print/src/Plugin/EntityPrintPluginManagerInterface.php
modules/contrib/entity_print/tests/src/Kernel/PrintHtmlAlterTestEvent.php
modules/contrib/entity_print/tests/src/Kernel/PrintLinkTest.php

15 files with changes
=====================

1) modules/contrib/entity_print/tests/src/Unit/AssetCollectorTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_print\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Extension\Extension;
 use Drupal\Core\Extension\InfoParserInterface;
 use Drupal\Core\Extension\ThemeExtensionList;
@@ @@
  */
 class AssetCollectorTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * CSS Alter event should always fire, even when no entries in the theme file.
    */
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_print/tests/modules/entity_print_test/entity_print_test.module:10

    ---------- begin diff ----------
@@ @@
  * Implements hook_system_theme_info().
  */
 function entity_print_test_system_theme_info() {
-  $themes['entity_print_test_theme'] = drupal_get_path('module', 'entity_print_test') . '/themes/entity_print_test_theme/entity_print_test_theme.info';
+  $themes['entity_print_test_theme'] = \Drupal::service('extension.list.module')->getPath('entity_print_test') . '/themes/entity_print_test_theme/entity_print_test_theme.info';
   return $themes;
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


3) modules/contrib/entity_print/src/Renderer/RendererBase.php:90

    ---------- begin diff ----------
@@ @@
     });

     // Allow other modules to alter the generated HTML.
-    $this->dispatcher->dispatch(PrintEvents::POST_RENDER, new PrintHtmlAlterEvent($html, $entities));
+    $this->dispatcher->dispatch(new PrintHtmlAlterEvent($html, $entities), PrintEvents::POST_RENDER);

     return $html;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


4) modules/contrib/entity_print/src/PrintBuilder.php:55

    ---------- begin diff ----------
@@ @@
     $renderer = $this->prepareRenderer($entities, $print_engine, $use_default_css);

     // Allow other modules to alter the generated Print object.
-    $this->dispatcher->dispatch(PrintEvents::PRE_SEND, new PreSendPrintEvent($print_engine, $entities));
+    $this->dispatcher->dispatch(new PreSendPrintEvent($print_engine, $entities), PrintEvents::PRE_SEND);

     // Calculate the filename.
     $filename = $renderer->getFilename($entities) . '.' . $print_engine->getExportType()->getFileExtension();
@@ @@
     $renderer = $this->prepareRenderer($entities, $print_engine, $use_default_css);

     // Allow other modules to alter the generated Print object.
-    $this->dispatcher->dispatch(PrintEvents::PRE_SEND, new PreSendPrintEvent($print_engine, $entities));
+    $this->dispatcher->dispatch(new PreSendPrintEvent($print_engine, $entities), PrintEvents::PRE_SEND);

     // If we didn't have a URI passed in the generate one.
     if (!$filename) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


5) modules/contrib/entity_print/src/Asset/AssetCollector.php:74

    ---------- begin diff ----------
@@ @@
       }
     }

-    $this->dispatcher->dispatch(PrintEvents::CSS_ALTER, new PrintCssAlterEvent($libraries, $entities));
+    $this->dispatcher->dispatch(new PrintCssAlterEvent($libraries, $entities), PrintEvents::CSS_ALTER);

     return $libraries;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


6) modules/contrib/entity_print/src/Plugin/EntityPrintPluginManager.php:158

    ---------- begin diff ----------
@@ @@
     }
     $configuration = $entity->getSettings();
     $event = new GenericEvent(PrintEvents::CONFIGURATION_ALTER, ['configuration' => $configuration, 'config' => $entity]);
-    $this->dispatcher->dispatch(PrintEvents::CONFIGURATION_ALTER, $event);
+    $this->dispatcher->dispatch($event, PrintEvents::CONFIGURATION_ALTER);
     $configuration = $event->getArgument('configuration');

     return $configuration;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/entity_print/src/EventSubscriber/PrintEngineExceptionSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_print\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ @@
 use Drupal\entity_print\PrintEngineException;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Handles print exceptions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The exception event.
    */
-  public function handleException(GetResponseForExceptionEvent $event) {
-    $exception = $event->getException();
+  public function handleException(ExceptionEvent $event) {
+    $exception = $event->getThrowable();
     if ($exception instanceof PrintEngineException) {
       \Drupal::messenger()->addError(new FormattableMarkup($exception->getPrettyMessage(), []));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameMethodRector
 * RenameClassRector
 * WrapReturnRector


8) modules/contrib/entity_print/src/Event/PrintHtmlAlterEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_print\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * An event to alter the HTML string.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/entity_print/src/Event/PrintEventBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_print\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\entity_print\Plugin\PrintEngineInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Event base class.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/entity_print/src/Event/PrintCssAlterEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_print\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * This event allows the CSS libraries to be altered.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/entity_print/tests/src/Kernel/PrintBuilderTest.php:117

    ---------- begin diff ----------
@@ @@

     // Print builder generates a filename for us.
     $uri = $builder->savePrintable([$node], $print_engine);
-    $this->assertRegExp('#public://(.*)\.pdf#', $uri);
+    $this->assertMatchesRegularExpression('#public://(.*)\.pdf#', $uri);

     $filename = $this->randomMachineName() . 'pdf';
     $uri = $builder->savePrintable([$node], $print_engine, 'public', $filename);
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * RenameMethodRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/entity_print/tests/src/FunctionalJavascript/EntityPrintAdminTest.php:68

    ---------- begin diff ----------
@@ @@
     $assert->pageTextContains('Dompdf is not available because it is not configured. Please install with:');

     // Ensure saving the form without any PDF engine selected doesn't blow up.
-    $this->drupalPostForm(NULL, [], 'Save configuration');
+    $this->submitForm([], 'Save configuration');

     // Assert the intial config values.
     $this->getSession()->getPage()->fillField('pdf', 'testprintengine');
@@ @@
     $assert->fieldValueEquals('test_word_print_engine[test_word_setting]', 'my-default');

     // Ensure the plugin gets the chance to validate the form.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'pdf' => 'testprintengine',
       'word_docx' => 'test_word_print_engine',
       'testprintengine[test_engine_setting]' => 'rejected',
@@ @@
     ], 'Save configuration');
     $assert->pageTextContains('Setting has an invalid value');

-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'default_css' => 0,
       'force_download' => 0,
       'pdf' => 'testprintengine',
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


13) modules/contrib/entity_print/tests/src/Functional/InstallationTest.php:53

    ---------- begin diff ----------
@@ @@
    * Uninstall the module using the UI.
    */
   protected function uninstallModules() {
-    $this->drupalPostForm('admin/modules/uninstall', [
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm([
       'uninstall[entity_print_views]' => TRUE,
     ], 'Uninstall');
     $this->getSession()->getPage()->pressButton('Uninstall');
-    $this->drupalPostForm('admin/modules/uninstall', [
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm([
       'uninstall[entity_print]' => TRUE,
     ], 'Uninstall');
     $this->getSession()->getPage()->pressButton('Uninstall');
@@ @@
    * Install the modules using the UI.
    */
   protected function installModules() {
-    $this->drupalPostForm('admin/modules', [
+    $this->drupalGet('admin/modules');
+    $this->submitForm([
       'modules[entity_print][enable]' => TRUE,
       'modules[entity_print_views][enable]' => TRUE,
     ], 'Install');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/entity_print/tests/src/Functional/EntityPrintAdminTest.php:74

    ---------- begin diff ----------
@@ @@

     $full_view_mode = 'Full view mode';
     $pdf_view_mode = 'PDF view mode';
-    $this->drupalPostForm('admin/structure/types/manage/page/display', [
+    $this->drupalGet('admin/structure/types/manage/page/display');
+    $this->submitForm([
       'fields[entity_print_view_pdf][empty_cell]' => $full_view_mode,
       'fields[entity_print_view_pdf][region]' => 'content',
     ], 'Save');
@@ @@
     $this->drupalGet('/print/pdf/node/1/debug');
     $assert->pageTextContains($full_view_mode);
     $assert->pageTextNotContains($pdf_view_mode);
+    $this->drupalGet('admin/structure/types/manage/page/display');

     // Configure the PDF view mode.
-    $this->drupalPostForm('admin/structure/types/manage/page/display', [
+    $this->submitForm([
       'display_modes_custom[pdf]' => 1,
     ], 'Save');
-    $this->drupalPostForm('admin/structure/types/manage/page/display/pdf', [
+    $this->drupalGet('admin/structure/types/manage/page/display/pdf');
+    $this->submitForm([
       'fields[entity_print_view_pdf][empty_cell]' => $pdf_view_mode,
       'fields[entity_print_view_pdf][region]' => 'content',
     ], 'Save');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


15) modules/contrib/entity_print/tests/src/Functional/EntityPrintActionTest.php:53

    ---------- begin diff ----------
@@ @@
    */
   public function testDownloadPdfAction() {
     $this->drupalGet('/admin/content');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'action' => 'entity_print_pdf_download_action',
       'node_bulk_form[0]' => 1,
     ], 'Apply to selected items');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 15 files have been changed by Rector                                      

