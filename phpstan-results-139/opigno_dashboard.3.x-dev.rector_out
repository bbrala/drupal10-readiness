modules/contrib/opigno_dashboard/opigno_dashboard.install
modules/contrib/opigno_dashboard/src/Cache/Context/IsCurrentUserPageCacheContext.php
modules/contrib/opigno_dashboard/opigno_dashboard.module
modules/contrib/opigno_dashboard/src/Controller/DashboardController.php
modules/contrib/opigno_dashboard/src/EventSubscriber/RedirectOnAccessDeniedSubscriber.php
modules/contrib/opigno_dashboard/src/BlockService.php
modules/contrib/opigno_dashboard/src/Form/SettingsForm.php
modules/contrib/opigno_dashboard/src/Plugin/Block/AboutOpignoBlock.php
modules/contrib/opigno_dashboard/src/Plugin/Block/SiteHeaderBlock.php
modules/contrib/opigno_dashboard/src/BlockServiceInterface.php
modules/contrib/opigno_dashboard/src/Plugin/Block/UserStatisticsBlock.php
modules/contrib/opigno_dashboard/src/RedirectMiddleware.php

2 files with changes
====================

1) modules/contrib/opigno_dashboard/src/Plugin/Block/AboutOpignoBlock.php:80

    ---------- begin diff ----------
@@ @@

     $logo = theme_get_setting('logo_path_anonymous');
     if (!is_file($logo)) {
-      $logo = drupal_get_path('theme', 'aristotle') . '/assets/' . $logo;
+      $logo = \Drupal::service('extension.list.theme')->getPath('aristotle') . '/assets/' . $logo;
     }

     $options = [
@@ @@

     return [
       '#theme' => 'opigno_about_block',
-      '#logo' => file_exists($logo) ? file_url_transform_relative(file_create_url($logo)) : '',
+      '#logo' => file_exists($logo) ? \Drupal::service('file_url_generator')->generateString($logo) : '',
       '#texts' => [
         $this->t('Opigno™ is a Trademark of Connect-i Sàrl, based in Préverenges, Switzerland.'),
         $this->t('For more information regarding Opigno™ please consult the website @link.', [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/opigno_dashboard/src/EventSubscriber/RedirectOnAccessDeniedSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\opigno_dashboard\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Access\AccessResultReasonInterface;
 use Drupal\Core\Cache\CacheableDependencyInterface;
@@ @@
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Symfony\Component\HttpKernel\KernelEvents;

@@ @@
   /**
    * @return \Drupal\Core\Session\AccountInterface
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $is_anonymous = $this->user->isAnonymous();
     // Add the route name as an extra class to body.
     $route = (string) \Drupal::routeMatch()->getRouteName();
@@ @@
   /**
    * Redirect if 403 and node an event.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The route building event.
    */
-  public function redirectOn403(FilterResponseEvent $event) {
+  public function redirectOn403(ResponseEvent $event) {
     $route_name = \Drupal::routeMatch()->getRouteName();
     $status_code = $event->getResponse()->getStatusCode();
     $is_anonymous = $this->user->isAnonymous();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

