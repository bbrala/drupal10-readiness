modules/contrib/userpoints/src/Access/UserpointsNodeTabAccess.php
modules/contrib/userpoints/src/Form/UserpointsEntityTabForm.php
modules/contrib/userpoints/userpoints.module
modules/contrib/userpoints/src/Access/UserpointsTabAccess.php
modules/contrib/userpoints/src/Access/UserpointsUserTabAccess.php
modules/contrib/userpoints/src/Controller/UserPointsController.php
modules/contrib/userpoints/src/Form/UserpointsNodeTabForm.php
modules/contrib/userpoints/src/Form/UserpointsUserTabForm.php
modules/contrib/userpoints/src/Plugin/Derivative/DynamicLocalTasks.php
modules/contrib/userpoints/src/Plugin/rest/resource/UserpointsRestResource.php
modules/contrib/userpoints/src/Entity/UserPoints.php
modules/contrib/userpoints/src/Routing/UserpointsRoutes.php
modules/contrib/userpoints/src/Service/UserPointsService.php
modules/contrib/userpoints/src/Entity/UserPointsInterface.php
modules/contrib/userpoints/src/Entity/UserPointsType.php
modules/contrib/userpoints/src/Entity/UserPointsTypeInterface.php
modules/contrib/userpoints/src/Entity/UserPointsViewsData.php
modules/contrib/userpoints/src/Exception/UserPointsException.php
modules/contrib/userpoints/src/Form/UserPointsDeleteForm.php
modules/contrib/userpoints/src/Form/UserPointsForm.php
modules/contrib/userpoints/src/Form/UserPointsRevisionDeleteForm.php
modules/contrib/userpoints/src/Service/UserPointsServiceInterface.php
modules/contrib/userpoints/src/UserPointsAccessControlHandler.php
modules/contrib/userpoints/src/UserPointsHtmlRouteProvider.php
modules/contrib/userpoints/src/Form/UserPointsRevisionRevertForm.php
modules/contrib/userpoints/src/UserPointsPermissions.php
modules/contrib/userpoints/src/UserPointsStorage.php
modules/contrib/userpoints/src/Form/UserPointsSettingsForm.php
modules/contrib/userpoints/src/UserPointsStorageInterface.php
modules/contrib/userpoints/src/UserPointsTypeHtmlRouteProvider.php
modules/contrib/userpoints/src/UserPointsTypeListBuilder.php
modules/contrib/userpoints/src/Form/UserPointsTypeDeleteForm.php
modules/contrib/userpoints/tests/src/Functional/UserpointsTest.php
modules/contrib/userpoints/src/Form/UserPointsTypeForm.php

4 files with changes
====================

1) modules/contrib/userpoints/src/Form/UserPointsRevisionRevertForm.php:144

    ---------- begin diff ----------
@@ @@
   protected function prepareRevertedRevision(UserPointsInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $revision;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/userpoints/src/Form/UserPointsRevisionDeleteForm.php:73

    ---------- begin diff ----------
@@ @@
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }

@@ @@
     $this->UserPointsStorage->deleteRevision($this->revision->getRevisionId());

     $this->logger('content')->notice('User points: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of User points %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of User points %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.userpoints.canonical',
        ['userpoints' => $this->revision->id()]
    ----------- end diff -----------

Applied rules:
 * FormatDateRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/userpoints/src/Controller/UserPointsController.php:133

    ---------- begin diff ----------
@@ @@
         ]));
       }
       else {
-        $link = $userpoints->link($date);
+        $link = $userpoints->toLink($date)->toString();
       }

       $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/userpoints/src/Service/UserPointsService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\userpoints\Service;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
@@ @@
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\userpoints\Entity\UserPointsInterface;
 use Drupal\userpoints\Exception\UserPointsException;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the User Points service.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 4 files have been changed by Rector                                       

