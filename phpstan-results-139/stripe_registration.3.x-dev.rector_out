modules/contrib/stripe_registration/Tests/Controller/UserSubscriptionsControllerTest.php
modules/contrib/stripe_registration/src/StripePlanEntityHtmlRouteProvider.php
modules/contrib/stripe_registration/src/Controller/MySubscriptions.php
modules/contrib/stripe_registration/src/Controller/UserSubscriptionsController.php
modules/contrib/stripe_registration/src/StripePlanEntityListBuilder.php
modules/contrib/stripe_registration/src/StripeRegistrationService.php
modules/contrib/stripe_registration/src/Entity/StripePlanEntity.php
modules/contrib/stripe_registration/src/StripeSubscriptionEntityAccessControlHandler.php
modules/contrib/stripe_registration/src/Entity/StripePlanEntityInterface.php
modules/contrib/stripe_registration/src/Entity/StripePlanEntityViewsData.php
modules/contrib/stripe_registration/src/StripeSubscriptionEntityHtmlRouteProvider.php
modules/contrib/stripe_registration/src/Entity/StripeSubscriptionEntity.php
modules/contrib/stripe_registration/src/StripeSubscriptionEntityListBuilder.php
modules/contrib/stripe_registration/stripe_plan.page.inc
modules/contrib/stripe_registration/stripe_registration.install
modules/contrib/stripe_registration/stripe_registration.module
modules/contrib/stripe_registration/stripe_subscription_entity.page.inc
modules/contrib/stripe_registration/src/Entity/StripeSubscriptionEntityInterface.php
modules/contrib/stripe_registration/src/Entity/StripeSubscriptionEntityViewsData.php
modules/contrib/stripe_registration/src/Event/StripeCreateSubscribeSessionEvent.php
modules/contrib/stripe_registration/src/EventSubscriber/WebHookSubscriber.php
modules/contrib/stripe_registration/src/Form/StripePlanEntityDeleteForm.php
modules/contrib/stripe_registration/src/Form/StripePlanEntityForm.php
modules/contrib/stripe_registration/src/Form/StripePlanEntitySettingsForm.php
modules/contrib/stripe_registration/src/Form/StripeSubscriptionEntityDeleteForm.php
modules/contrib/stripe_registration/src/Form/StripeSubscriptionEntityForm.php
modules/contrib/stripe_registration/src/Form/StripeSubscriptionEntitySettingsForm.php
modules/contrib/stripe_registration/src/Plugin/Menu/SubscribeMenuLink.php
modules/contrib/stripe_registration/src/StripePlanEntityAccessControlHandler.php

3 files with changes
====================

1) modules/contrib/stripe_registration/stripe_registration.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Field\BaseFieldDefinition;
 /**
  * Implements hook_install().
  */
@@ @@
  * Add 'data' field to Stripe Plan entities.
  */
 function stripe_registration_update_8001() {
-  $storage_definition = \Drupal\Core\Field\BaseFieldDefinition::create('map')
+  $storage_definition = BaseFieldDefinition::create('map')
     ->setLabel(t('Plan data'))
     ->setDescription(t('Array of raw plan data from Stripe.'));

@@ @@
  * Add 'price_id' field to Stripe Plan and Stripe Subscription entities.
  */
 function stripe_registration_update_8003() {
-  $storage_definition = \Drupal\Core\Field\BaseFieldDefinition::create('string')
+  $storage_definition = BaseFieldDefinition::create('string')
     ->setLabel(t('Plan Price ID'))
     ->setDescription(t('The Stripe Price ID for this plan.'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/stripe_registration/src/EventSubscriber/WebHookSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\stripe_registration\EventSubscriber;

+use Stripe\Event;
 use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\Messenger\MessengerInterface;
@@ @@
    * @param \Drupal\stripe_api\Event\StripeApiWebhookEvent $event
    * @param \Stripe\Event $stripe_event
    */
-  protected function logEvent(StripeApiWebhookEvent $event, \Stripe\Event $stripe_event): void {
+  protected function logEvent(StripeApiWebhookEvent $event, Event $stripe_event): void {
     if (\Drupal::config('stripe_api.settings')->get('log_webhooks')) {
       $this->logger->info("Event Subscriber reacting to @type event:\n @event",
         ['@type' => $event->type, '@event' => json_encode($stripe_event, JSON_PRETTY_PRINT)]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


3) modules/contrib/stripe_registration/src/Event/StripeCreateSubscribeSessionEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\stripe_registration\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Session\AccountInterface;
-use Symfony\Component\EventDispatcher\Event;

 class StripeCreateSubscribeSessionEvent extends Event {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

