diff --git a/modules/webform_access/tests/src/Functional/WebformAccessBrowserTestBase.php b/modules/webform_access/tests/src/Functional/WebformAccessBrowserTestBase.php
index 57d227fab..72342c462 100644
--- a/modules/webform_access/tests/src/Functional/WebformAccessBrowserTestBase.php
+++ b/modules/webform_access/tests/src/Functional/WebformAccessBrowserTestBase.php
@@ -49,7 +49,7 @@ abstract class WebformAccessBrowserTestBase extends WebformNodeBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create webform nodes.
diff --git a/modules/webform_attachment/src/Element/WebformAttachmentBase.php b/modules/webform_attachment/src/Element/WebformAttachmentBase.php
index 220c45c70..41e7297ab 100644
--- a/modules/webform_attachment/src/Element/WebformAttachmentBase.php
+++ b/modules/webform_attachment/src/Element/WebformAttachmentBase.php
@@ -111,7 +111,7 @@ abstract class WebformAttachmentBase extends RenderElement implements WebformAtt
    * {@inheritdoc}
    */
   public static function getFileMimeType(array $element, WebformSubmissionInterface $webform_submission) {
-    /** @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $file_mime_type_guesser */
+    /** @var \Symfony\Component\Mime\MimeTypesInterface $file_mime_type_guesser */
     $file_mime_type_guesser = \Drupal::service('file.mime_type.guesser');
     $file_name = static::getFileName($element, $webform_submission);
     return $file_mime_type_guesser->guess($file_name);
diff --git a/modules/webform_attachment/src/Element/WebformAttachmentUrl.php b/modules/webform_attachment/src/Element/WebformAttachmentUrl.php
index 2cdd89bb0..3417a975a 100644
--- a/modules/webform_attachment/src/Element/WebformAttachmentUrl.php
+++ b/modules/webform_attachment/src/Element/WebformAttachmentUrl.php
@@ -32,7 +32,7 @@ class WebformAttachmentUrl extends WebformAttachmentBase {
       $token_manager = \Drupal::service('webform.token_manager');
       $url = $token_manager->replace($url, $webform_submission);
       // Url can be a URI.
-      $url = file_create_url($url) ?: $url;
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($url) ?: $url;
       // Prepend scheme and host to root relative path.
       if (strpos($url, '/') === 0) {
         $url = \Drupal::request()->getSchemeAndHttpHost() . $url;
diff --git a/modules/webform_attachment/tests/src/Functional/WebformAttachmentTest.php b/modules/webform_attachment/tests/src/Functional/WebformAttachmentTest.php
index 1f13407d3..6cb54cd6b 100644
--- a/modules/webform_attachment/tests/src/Functional/WebformAttachmentTest.php
+++ b/modules/webform_attachment/tests/src/Functional/WebformAttachmentTest.php
@@ -250,12 +250,12 @@ class WebformAttachmentTest extends WebformBrowserTestBase {
     // Check that attachment is enabled.
     $this->postSubmission($webform_attachment_states, ['attach' => TRUE]);
     $sent_email = $this->getLastEmail();
-    $this->assert(isset($sent_email['params']['attachments'][0]), 'Attachment enabled via #states');
+    $this->assertTrue(isset($sent_email['params']['attachments'][0]), 'Attachment enabled via #states');
 
     // Check that attachment is disabled.
     $this->postSubmission($webform_attachment_states, ['attach' => FALSE]);
     $sent_email = $this->getLastEmail();
-    $this->assert(!isset($sent_email['params']['attachments'][0]), 'Attachment disabled via #states');
+    $this->assertTrue(!isset($sent_email['params']['attachments'][0]), 'Attachment disabled via #states');
   }
 
 }
diff --git a/modules/webform_bootstrap/webform_bootstrap.module b/modules/webform_bootstrap/webform_bootstrap.module
index 87ac8e6c4..6a0de992b 100644
--- a/modules/webform_bootstrap/webform_bootstrap.module
+++ b/modules/webform_bootstrap/webform_bootstrap.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\bootstrap\Bootstrap;
 /**
  * @file
  * Helps support Webform to Bootstrap integration.
@@ -52,7 +53,7 @@ function webform_bootstrap_webform_element_alter(array &$element, FormStateInter
   // @see \Drupal\bootstrap\Utility\Element::smartDescription
   static $smart_description_enabled;
   if (!isset($smart_description_enabled)) {
-    $theme = \Drupal\bootstrap\Bootstrap::getTheme();
+    $theme = Bootstrap::getTheme();
     $smart_description_enabled = $theme->getSetting('tooltip_enabled') && $theme->getSetting('forms_smart_descriptions');
   }
 
@@ -128,11 +129,11 @@ function webform_bootstrap_preprocess_input(&$variables) {
     $element['#icon_only'] = TRUE;
     if (strpos($variables['attributes']['src'], '/webform/images/icons/plus.svg') !== FALSE) {
       $element['#title'] = t('Add');
-      $element['#icon'] = \Drupal\bootstrap\Bootstrap::glyphicon('plus-sign');
+      $element['#icon'] = Bootstrap::glyphicon('plus-sign');
     }
     elseif (strpos($variables['attributes']['src'], '/webform/images/icons/minus.svg') !== FALSE) {
       $element['#title'] = t('Remove');
-      $element['#icon'] = \Drupal\bootstrap\Bootstrap::glyphicon('minus-sign');
+      $element['#icon'] = Bootstrap::glyphicon('minus-sign');
     }
   }
 }
diff --git a/modules/webform_entity_print/src/EventSubscriber/WebformEntityPrintRequestSubscriber.php b/modules/webform_entity_print/src/EventSubscriber/WebformEntityPrintRequestSubscriber.php
index 9373e3f99..723bf46df 100644
--- a/modules/webform_entity_print/src/EventSubscriber/WebformEntityPrintRequestSubscriber.php
+++ b/modules/webform_entity_print/src/EventSubscriber/WebformEntityPrintRequestSubscriber.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\webform_entity_print\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\HttpKernelInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
 
@@ -33,7 +33,7 @@ class WebformEntityPrintRequestSubscriber implements EventSubscriberInterface {
   /**
    * Set custom webform entity print submission view mode.
    */
-  public function requestSetViewMode(GetResponseEvent $event) {
+  public function requestSetViewMode(RequestEvent $event) {
     if ($event->getRequestType() !== HttpKernelInterface::MASTER_REQUEST) {
       return;
     }
diff --git a/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php b/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php
index 4b825040f..3bb8d03f3 100644
--- a/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php
+++ b/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php
@@ -79,12 +79,12 @@ body {
     $assert_session->responseContains('&' . UrlHelper::buildQuery($image_style_token_query));
 
     // Check signature private image.
-    $this->assertRaw('<label>signature_private</label>');
-    $this->assertRaw("/webform/test_entity_print/signature_private/$sid/signature-");
+    $this->assertSession()->responseContains('<label>signature_private</label>');
+    $this->assertSession()->responseContains("/webform/test_entity_print/signature_private/$sid/signature-");
 
     // Check signature public image.
-    $this->assertRaw('<label>signature_public</label>');
-    $this->assertRaw("/webform/test_entity_print/signature_public/$sid/signature-");
+    $this->assertSession()->responseContains('<label>signature_public</label>');
+    $this->assertSession()->responseContains("/webform/test_entity_print/signature_public/$sid/signature-");
 
     // Check image access.
     $this->drupalLogout();
diff --git a/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTestBase.php b/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTestBase.php
index bbc1923b1..29f7e26e0 100644
--- a/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTestBase.php
+++ b/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTestBase.php
@@ -21,7 +21,7 @@ abstract class WebformEntityPrintFunctionalTestBase extends WebformBrowserTestBa
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Use test print engine.
