diff --git a/src/Event/Events/CasAccountLinkEmailCollisionEvent.php b/src/Event/Events/CasAccountLinkEmailCollisionEvent.php
index db9f965..785f7c0 100644
--- a/src/Event/Events/CasAccountLinkEmailCollisionEvent.php
+++ b/src/Event/Events/CasAccountLinkEmailCollisionEvent.php
@@ -4,8 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\cas_account_link\Event\Events;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\cas\CasPropertyBag;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Provides an event class for CasAccountLinkEvents::EMAIL_COLLISION events.
diff --git a/src/Event/Events/CasAccountLinkPostLinkEvent.php b/src/Event/Events/CasAccountLinkPostLinkEvent.php
index 693e43b..db93a22 100644
--- a/src/Event/Events/CasAccountLinkPostLinkEvent.php
+++ b/src/Event/Events/CasAccountLinkPostLinkEvent.php
@@ -4,11 +4,11 @@ declare(strict_types = 1);
 
 namespace Drupal\cas_account_link\Event\Events;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\cas\CasPropertyBag;
 use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Url;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Provides an event class for CasAccountLinkEvents::POST_LINK events.
diff --git a/src/Event/Events/CasAccountLinkValidateEvent.php b/src/Event/Events/CasAccountLinkValidateEvent.php
index cfaac8b..26e3fc7 100644
--- a/src/Event/Events/CasAccountLinkValidateEvent.php
+++ b/src/Event/Events/CasAccountLinkValidateEvent.php
@@ -4,8 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\cas_account_link\Event\Events;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Form\FormStateInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Provides an event class for CasAccountLinkEvents::VALIDATE events.
diff --git a/src/Form/CasAccountLinkForm.php b/src/Form/CasAccountLinkForm.php
index 7dcda77..cff8cfa 100755
--- a/src/Form/CasAccountLinkForm.php
+++ b/src/Form/CasAccountLinkForm.php
@@ -225,7 +225,7 @@ class CasAccountLinkForm extends FormBase {
       if (user_load_by_mail($local_mail)) {
         $email_collision_event = new CasAccountLinkEmailCollisionEvent($local_mail, $property_bag);
         $this->casHelper->log(LogLevel::DEBUG, 'Dispatching CasAccountLinkEvents::EMAIL_COLLISION.');
-        $this->eventDispatcher->dispatch(CasAccountLinkEvents::EMAIL_COLLISION, $email_collision_event);
+        $this->eventDispatcher->dispatch($email_collision_event, CasAccountLinkEvents::EMAIL_COLLISION);
         if (!$message = $email_collision_event->getErrorMessage()) {
           $message = $this->t('The email address %mail is already taken.', [
             '%mail' => $local_mail,
@@ -261,7 +261,7 @@ class CasAccountLinkForm extends FormBase {
     // Let third party add their own validation.
     $this->casHelper->log(LogLevel::DEBUG, 'Dispatching CasAccountLinkEvents::VALIDATE');
     $event = new CasAccountLinkValidateEvent($form, $form_state);
-    $this->eventDispatcher->dispatch(CasAccountLinkEvents::VALIDATE, $event);
+    $this->eventDispatcher->dispatch($event, CasAccountLinkEvents::VALIDATE);
   }
 
   /**
@@ -322,7 +322,7 @@ class CasAccountLinkForm extends FormBase {
     // redirect and/or their success status message.
     $this->casHelper->log(LogLevel::DEBUG, 'Dispatching CasAccountLinkEvents::POST_LINK');
     $event = new CasAccountLinkPostLinkEvent($ticket, $property_bag, $service_parameters, $account, $is_local_account_selected);
-    $this->eventDispatcher->dispatch(CasAccountLinkEvents::POST_LINK, $event);
+    $this->eventDispatcher->dispatch($event, CasAccountLinkEvents::POST_LINK);
 
     // Third-party modules success message has precedence.
     if (!$success_message = $event->getSuccessMessage()) {
