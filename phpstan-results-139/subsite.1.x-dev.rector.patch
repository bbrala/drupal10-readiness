diff --git a/src/Plugin/Block/SubsiteFooterLinksBlock.php b/src/Plugin/Block/SubsiteFooterLinksBlock.php
index 232b13f..e06c02c 100644
--- a/src/Plugin/Block/SubsiteFooterLinksBlock.php
+++ b/src/Plugin/Block/SubsiteFooterLinksBlock.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\subsite\Plugin\Block;
 
+use Drupal\node\Entity\Node;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -34,7 +35,7 @@ class SubsiteFooterLinksBlock extends BlockBase implements ContainerFactoryPlugi
 
     if ($current_bid) {
       /** @var \Drupal\node\Entity\Node $theme_node */
-      $subsite_node = \Drupal\node\Entity\Node::load($current_bid);
+      $subsite_node = Node::load($current_bid);
 
       if ($subsite_node->getType() == 'sub_site') {
         // Expect theme ref field.
diff --git a/src/Plugin/Block/SubsiteSocialLinksBlock.php b/src/Plugin/Block/SubsiteSocialLinksBlock.php
index 8e9dfa9..48fd460 100644
--- a/src/Plugin/Block/SubsiteSocialLinksBlock.php
+++ b/src/Plugin/Block/SubsiteSocialLinksBlock.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\subsite\Plugin\Block;
 
+use Drupal\node\Entity\Node;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -34,7 +35,7 @@ class SubsiteSocialLinksBlock extends BlockBase implements ContainerFactoryPlugi
 
     if ($current_bid) {
       /** @var \Drupal\node\Entity\Node $theme_node */
-      $subsite_node = \Drupal\node\Entity\Node::load($current_bid);
+      $subsite_node = Node::load($current_bid);
 
       if ($subsite_node->getType() == 'sub_site') {
         // Expect theme ref field.
diff --git a/src/Plugin/Subsite/BookSubsitePlugin.php b/src/Plugin/Subsite/BookSubsitePlugin.php
index a2052d3..b7b8218 100644
--- a/src/Plugin/Subsite/BookSubsitePlugin.php
+++ b/src/Plugin/Subsite/BookSubsitePlugin.php
@@ -7,6 +7,7 @@
  */
 
 namespace Drupal\subsite\Plugin\Subsite;
+use Drupal\node\Entity\Node;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -193,7 +194,7 @@ class BookSubsitePlugin extends BaseSubsitePlugin {
                 }
 
                 if (!empty($child_nids)) {
-                  $nodes = \Drupal\node\Entity\Node::loadMultiple($child_nids);
+                  $nodes = Node::loadMultiple($child_nids);
                   $built_child_nodes = \Drupal::entityTypeManager()->getViewBuilder('node')->viewMultiple($nodes, 'teaser');
                   $built_child_nodes['#weight'] = 200;
                   $build['subsite_touts'] = $built_child_nodes;
diff --git a/src/Plugin/Subsite/BrandingSubsitePlugin.php b/src/Plugin/Subsite/BrandingSubsitePlugin.php
index c77e48c..5d060b1 100644
--- a/src/Plugin/Subsite/BrandingSubsitePlugin.php
+++ b/src/Plugin/Subsite/BrandingSubsitePlugin.php
@@ -16,7 +16,6 @@ use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\subsite\BaseSubsitePlugin;
 use Drupal\subsite\SubsitePluginInterface;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 
 /**
  * @Plugin(
@@ -200,7 +199,7 @@ class BrandingSubsitePlugin extends BaseSubsitePlugin {
     }
 
     if (!empty($branding_configuration['logo_path'])) {
-      $logo_url = file_create_url($branding_configuration['logo_path']);
+      $logo_url = \Drupal::service('file_url_generator')->generateAbsoluteString($branding_configuration['logo_path']);
       $build['content']['site_logo']['#uri'] = $logo_url;
     }
 
@@ -211,10 +210,10 @@ class BrandingSubsitePlugin extends BaseSubsitePlugin {
     $branding_configuration = $this->getConfiguration();
 
     if (!empty($branding_configuration['favicon_path'])) {
-      /** @var MimeTypeGuesserInterface $mime_type_guesser */
+      /** @var \Symfony\Component\Mime\MimeTypesInterface $mime_type_guesser */
       $mime_type_guesser = \Drupal::service('file.mime_type.guesser');
       $mime_type = $mime_type_guesser->guess($branding_configuration['favicon_path']);
-      $favicon_url = file_create_url($branding_configuration['favicon_path']);
+      $favicon_url = \Drupal::service('file_url_generator')->generateAbsoluteString($branding_configuration['favicon_path']);
       foreach ($attachments['#attached']['html_head_link'] as $key => $value) {
         foreach ($value as $inner_key => $inner_value) {
           if (!empty($inner_value['rel']) && $inner_value['rel'] == 'shortcut icon') {
diff --git a/src/SubsiteManager.php b/src/SubsiteManager.php
index 4129558..7c673f7 100644
--- a/src/SubsiteManager.php
+++ b/src/SubsiteManager.php
@@ -8,6 +8,7 @@
 
 namespace Drupal\subsite;
 
+use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -159,7 +160,7 @@ class SubsiteManager implements SubsiteManagerInterface, TrustedCallbackInterfac
 
     if ($current_bid) {
       /** @var Node $subsite_node */
-      $subsite_node = \Drupal\node\Entity\Node::load($current_bid);
+      $subsite_node = Node::load($current_bid);
       if ($this->getSubsiteField($subsite_node)) {
         return $subsite_node;
       }
@@ -190,7 +191,7 @@ class SubsiteManager implements SubsiteManagerInterface, TrustedCallbackInterfac
    * @param array $build
    * @param \Drupal\Core\Block\BlockPluginInterface $block
    */
-  public function blockViewAlter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {
+  public function blockViewAlter(array &$build, BlockPluginInterface $block) {
     $prerender_plugins = $this->getBlockPrerenderPluginIds($block->getPluginId());
     if (!empty($prerender_plugins)) {
       $build['#pre_render'][] = '\Drupal\subsite\SubsiteManager::blockPrerender';
diff --git a/src/SubsiteManagerInterface.php b/src/SubsiteManagerInterface.php
index 3920cc4..162832d 100644
--- a/src/SubsiteManagerInterface.php
+++ b/src/SubsiteManagerInterface.php
@@ -8,6 +8,7 @@
 
 namespace Drupal\subsite;
 
+use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -38,7 +39,7 @@ interface SubsiteManagerInterface {
   public function validateFormElements(array $form, FormStateInterface $form_state, NodeInterface $node, AccountInterface $account);
   public function getFormValues(array $form, FormStateInterface $form_state);
 
-  public function blockViewAlter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block);
+  public function blockViewAlter(array &$build, BlockPluginInterface $block);
   public function nodeViewAlter(array &$build, EntityInterface $node, EntityViewDisplayInterface $display);
   public function pageAttachmentsAlter(array &$attachments);
 
diff --git a/subsite.info.yml b/subsite.info.yml
index a509867..3c47dd9 100644
--- a/subsite.info.yml
+++ b/subsite.info.yml
@@ -2,8 +2,7 @@ name: Sub Site
 type: module
 description: Very basic support for sub sites using the book module.
 package: Sub sites
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
  - book
diff --git a/subsite.module b/subsite.module
index e1834b8..7e3c0c2 100644
--- a/subsite.module
+++ b/subsite.module
@@ -1,4 +1,5 @@
 <?php
+use Drupal\Core\Block\BlockPluginInterface;
 /**
  * Created by PhpStorm.
  * User: andy
@@ -105,7 +106,7 @@ function subsite_node_view_alter(array &$build, EntityInterface $node, EntityVie
  *
  * @param $attachments
  */
-function subsite_block_view_alter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {
+function subsite_block_view_alter(array &$build, BlockPluginInterface $block) {
   $subsite_manager = \Drupal::service('subsite.manager');
   $subsite_manager->blockViewAlter($build, $block);
 }
