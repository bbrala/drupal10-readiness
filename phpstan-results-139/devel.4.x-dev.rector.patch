diff --git a/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php b/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php
index 995887b..cde2ffd 100644
--- a/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php
+++ b/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php
@@ -464,7 +464,7 @@ class ContentDevelGenerate extends DevelGenerateBase implements ContainerFactory
       'title' => $this->t('Generating Content'),
       'operations' => $operations,
       'finished' => 'devel_generate_batch_finished',
-      'file' => drupal_get_path('module', 'devel_generate') . '/devel_generate.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('devel_generate') . '/devel_generate.batch.inc',
     ];
 
     batch_set($batch);
diff --git a/devel_generate/src/Plugin/DevelGenerate/MediaDevelGenerate.php b/devel_generate/src/Plugin/DevelGenerate/MediaDevelGenerate.php
index 983d472..2d3d3e0 100644
--- a/devel_generate/src/Plugin/DevelGenerate/MediaDevelGenerate.php
+++ b/devel_generate/src/Plugin/DevelGenerate/MediaDevelGenerate.php
@@ -324,7 +324,7 @@ class MediaDevelGenerate extends DevelGenerateBase implements ContainerFactoryPl
       'title' => $this->t('Generating media items'),
       'operations' => $operations,
       'finished' => 'devel_generate_batch_finished',
-      'file' => drupal_get_path('module', 'devel_generate') . '/devel_generate.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('devel_generate') . '/devel_generate.batch.inc',
     ];
     batch_set($batch);
 
diff --git a/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php b/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php
index f54e02c..745e597 100644
--- a/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php
+++ b/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php
@@ -22,9 +22,10 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
     $edit = [
       'num' => 4,
     ];
-    $this->drupalPostForm('admin/config/development/generate/user', $edit, 'Generate');
-    $this->assertText('4 users created.');
-    $this->assertText('Generate process complete.');
+    $this->drupalGet('admin/config/development/generate/user');
+    $this->submitForm($edit, 'Generate');
+    $this->assertSession()->pageTextContains('4 users created.');
+    $this->assertSession()->pageTextContains('Generate process complete.');
 
   }
 
@@ -37,8 +38,9 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'num' => 4,
       'title_length' => 4,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
-    $this->assertText('Please select at least one content type');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
+    $this->assertSession()->pageTextContains('Please select at least one content type');
 
     // Create a node in order to test the Delete content checkbox.
     $this->drupalCreateNode(['type' => 'article']);
@@ -53,7 +55,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'title_length' => 4,
       'add_alias' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 1 node');
     $this->assertSession()->pageTextContains('Created 4 nodes');
     $this->assertSession()->pageTextContains('Generate process complete.');
@@ -61,7 +64,7 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
 
     // Tests that nodes have been created in the generation process.
     $nodes = Node::loadMultiple();
-    $this->assert(count($nodes) == 4, 'Nodes generated successfully.');
+    $this->assertTrue(count($nodes) == 4, 'Nodes generated successfully.');
 
     // Tests url alias for the generated nodes.
     foreach ($nodes as $node) {
@@ -80,7 +83,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'translate_language[]' => ['de', 'ca'],
       'add_alias' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 4 nodes');
     $this->assertSession()->pageTextContains('Created 3 nodes');
     // Two translations for each node makes six.
@@ -113,7 +117,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'add_language[]' => ['en'],
       'translate_language[]' => ['fr'],
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextNotContains('Deleted');
     $this->assertSession()->pageTextContains('Created 2 nodes');
     $this->assertSession()->pageTextNotContains('node translations');
@@ -131,7 +136,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'node_types[article]' => TRUE,
       'add_type_label' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 5 nodes');
     $this->assertSession()->pageTextContains('Generate process complete');
 
@@ -155,7 +161,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'authors[3]' => TRUE,
       'authors[4]' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
 
     // Display the full content list for information and debug only.
     $this->drupalGet('admin/content');
@@ -188,7 +195,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'num' => 5,
       'title_length' => 12,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 5 new terms');
     $this->assertSession()->pageTextContains('In vocabulary ' . $this->vocabulary->label());
     $this->assertSession()->pageTextNotContains('translations');
@@ -202,7 +210,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'add_language[]' => ['en'],
       'translate_language[]' => ['ca'],
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextNotContains('Deleted');
     $this->assertSession()->pageTextContains('Created 3 new terms');
     $this->assertSession()->pageTextContains('Created 3 term translations');
@@ -220,7 +229,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'vids[]' => $this->vocabulary2->id(),
       'num' => 4,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 4 new terms');
     $this->assertSession()->pageTextNotContains('In vocabulary ' . $this->vocabulary->label());
     $this->assertSession()->pageTextContains('In vocabulary ' . $this->vocabulary2->label());
@@ -236,7 +246,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'num' => 6,
       'kill' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 4 existing terms');
     $this->assertSession()->pageTextContains('Created 6 new terms');
     // Check the term count in vocabulary 1 has not changed.
@@ -253,7 +264,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'minimum_depth' => 2,
       'maximum_depth' => 6,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 9 new terms');
     // Check the total term count is 8 + 6 + 9 = 23.
     $terms1 = \Drupal::entityQuery('taxonomy_term')->condition('vid', $this->vocabulary->id())->execute();
@@ -271,7 +283,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'title_length' => 12,
       'kill' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/vocabs', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/vocabs');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created the following new vocabularies: ');
     $this->assertSession()->pageTextContains('Generate process complete.');
   }
@@ -290,7 +303,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'num_menus' => 5,
       'num_links' => 7,
     ];
-    $this->drupalPostForm('admin/config/development/generate/menu', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/menu');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created the following 5 new menus: ');
     $this->assertSession()->pageTextContains('Created 7 new menu links');
     $this->assertSession()->pageTextContains('Generate process complete.');
@@ -303,7 +317,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'title_length' => 3,
       'kill' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/menu', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/menu');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 5 menu(s) and 0 other link(s).');
     $this->assertSession()->pageTextContains('Created the following 160 new menus: ');
     $this->assertSession()->pageTextContains('Created 380 new menu links');
@@ -336,7 +351,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       "media_types[{$media_type2->id()}]" => 1,
       'kill' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/media', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/media');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Finished creating 5 media items.');
     $this->assertSession()->pageTextContains('Generate process complete.');
     $this->assertCount(5, \Drupal::entityQuery('media')->execute());
@@ -349,7 +365,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       "media_types[{$media_type2->id()}]" => 1,
       'kill' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/media', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/media');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Finished 56 elements created successfully.');
     $this->assertSession()->pageTextContains('Generate process complete.');
     $this->assertCount(56, \Drupal::entityQuery('media')->execute());
@@ -366,7 +383,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'node_types[article]' => TRUE,
       'node_types[page]' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Finished 55 elements created successfully.');
     $this->assertSession()->pageTextContains('Generate process complete.');
 
@@ -383,7 +401,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'add_language[]' => ['en'],
       'translate_language[]' => ['de', 'ca'],
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertCount(52, \Drupal::entityQuery('node')->execute());
     // Only aticles will have translations so get that number.
     $articles = \Drupal::entityQuery('node')->condition('type', 'article')->execute();
@@ -396,7 +415,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'node_types[article]' => TRUE,
       'node_types[page]' => FALSE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
 
     // Tests that all the created nodes were of the node type selected.
     $nodeStorage = $this->container->get('entity_type.manager')->getStorage('node');
diff --git a/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php b/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php
index 6efcbf9..21cd578 100644
--- a/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php
+++ b/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php
@@ -44,7 +44,7 @@ abstract class DevelGenerateBrowserTestBase extends BrowserTestBase {
   /**
    * Prepares the testing environment.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->setUpData();
   }
diff --git a/devel_generate/tests/src/Functional/DevelGenerateCommandsTest.php b/devel_generate/tests/src/Functional/DevelGenerateCommandsTest.php
index c68853d..19df387 100644
--- a/devel_generate/tests/src/Functional/DevelGenerateCommandsTest.php
+++ b/devel_generate/tests/src/Functional/DevelGenerateCommandsTest.php
@@ -53,7 +53,7 @@ class DevelGenerateCommandsTest extends BrowserTestBase {
   /**
    * Prepares the testing environment.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->setUpData();
   }
diff --git a/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php b/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php
index ca9bcd3..539e2e5 100644
--- a/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php
+++ b/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php
@@ -15,7 +15,7 @@ class DevelGenerateManagerTest extends UnitTestCase {
   /**
    * The plugin discovery.
    *
-   * @var \Drupal\Component\Plugin\Discovery\DiscoveryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Component\Plugin\Discovery\DiscoveryInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $discovery;
 
@@ -36,7 +36,7 @@ class DevelGenerateManagerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Mock a Discovery object to replace AnnotationClassDiscovery.
     $this->discovery = $this->createMock('Drupal\Component\Plugin\Discovery\DiscoveryInterface');
diff --git a/src/EventSubscriber/ErrorHandlerSubscriber.php b/src/EventSubscriber/ErrorHandlerSubscriber.php
index ee5ad21..4031130 100644
--- a/src/EventSubscriber/ErrorHandlerSubscriber.php
+++ b/src/EventSubscriber/ErrorHandlerSubscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\devel\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Session\AccountProxyInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
 
@@ -32,7 +32,7 @@ class ErrorHandlerSubscriber implements EventSubscriberInterface {
   /**
    * Register devel error handler.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The event to process.
    */
   public function registerErrorHandler(Event $event = NULL) {
diff --git a/src/EventSubscriber/ThemeInfoRebuildSubscriber.php b/src/EventSubscriber/ThemeInfoRebuildSubscriber.php
index 9b833ec..311a7a1 100644
--- a/src/EventSubscriber/ThemeInfoRebuildSubscriber.php
+++ b/src/EventSubscriber/ThemeInfoRebuildSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
 use Drupal\Core\Messenger\MessengerTrait;
@@ -10,7 +11,6 @@ use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -68,10 +68,10 @@ class ThemeInfoRebuildSubscriber implements EventSubscriberInterface {
   /**
    * Forces the system to rebuild the theme registry.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function rebuildThemeInfo(GetResponseEvent $event) {
+  public function rebuildThemeInfo(RequestEvent $event) {
     if ($this->config->get('rebuild_theme')) {
       // Update the theme registry.
       drupal_theme_rebuild();
diff --git a/tests/src/Functional/DevelBrowserTestBase.php b/tests/src/Functional/DevelBrowserTestBase.php
index 38571f8..552621b 100644
--- a/tests/src/Functional/DevelBrowserTestBase.php
+++ b/tests/src/Functional/DevelBrowserTestBase.php
@@ -39,7 +39,7 @@ abstract class DevelBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
diff --git a/tests/src/Functional/DevelContainerInfoTest.php b/tests/src/Functional/DevelContainerInfoTest.php
index 004b5ac..470af0c 100644
--- a/tests/src/Functional/DevelContainerInfoTest.php
+++ b/tests/src/Functional/DevelContainerInfoTest.php
@@ -16,7 +16,7 @@ class DevelContainerInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_tasks_block');
     $this->drupalPlaceBlock('page_title_block');
diff --git a/tests/src/Functional/DevelControllerTest.php b/tests/src/Functional/DevelControllerTest.php
index 6109fa3..fc92b73 100644
--- a/tests/src/Functional/DevelControllerTest.php
+++ b/tests/src/Functional/DevelControllerTest.php
@@ -25,7 +25,7 @@ class DevelControllerTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $entity_type_manager = $this->container->get('entity_type.manager');
 
diff --git a/tests/src/Functional/DevelDumperTest.php b/tests/src/Functional/DevelDumperTest.php
index 52296c5..19b90b5 100644
--- a/tests/src/Functional/DevelDumperTest.php
+++ b/tests/src/Functional/DevelDumperTest.php
@@ -19,7 +19,7 @@ class DevelDumperTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->adminUser);
   }
@@ -70,7 +70,8 @@ class DevelDumperTest extends DevelBrowserTestBase {
     $edit = [
       'dumper' => 'var_dumper',
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
     $this->assertSession()->checkboxChecked('Symfony var-dumper');
 
@@ -85,7 +86,8 @@ class DevelDumperTest extends DevelBrowserTestBase {
     $edit = [
       'dumper' => 'available_test_dumper',
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $this->drupalGet('devel_dumper_test/dump');
diff --git a/tests/src/Functional/DevelElementInfoTest.php b/tests/src/Functional/DevelElementInfoTest.php
index 0b3fe89..bd51c44 100644
--- a/tests/src/Functional/DevelElementInfoTest.php
+++ b/tests/src/Functional/DevelElementInfoTest.php
@@ -15,7 +15,7 @@ class DevelElementInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_menu_block:devel');
     $this->drupalPlaceBlock('page_title_block');
diff --git a/tests/src/Functional/DevelEntityTypeInfoTest.php b/tests/src/Functional/DevelEntityTypeInfoTest.php
index c78e7f0..b90b93d 100644
--- a/tests/src/Functional/DevelEntityTypeInfoTest.php
+++ b/tests/src/Functional/DevelEntityTypeInfoTest.php
@@ -15,7 +15,7 @@ class DevelEntityTypeInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_menu_block:devel');
     $this->drupalPlaceBlock('page_title_block');
diff --git a/tests/src/Functional/DevelErrorHandlerTest.php b/tests/src/Functional/DevelErrorHandlerTest.php
index 60d220a..e2adaa9 100644
--- a/tests/src/Functional/DevelErrorHandlerTest.php
+++ b/tests/src/Functional/DevelErrorHandlerTest.php
@@ -35,7 +35,8 @@ class DevelErrorHandlerTest extends DevelBrowserTestBase {
     $edit = [
       'error_handlers[]' => DEVEL_ERROR_HANDLER_NONE,
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
@@ -56,7 +57,8 @@ class DevelErrorHandlerTest extends DevelBrowserTestBase {
     $edit = [
       'error_handlers[]' => DEVEL_ERROR_HANDLER_BACKTRACE_KINT,
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
@@ -72,7 +74,8 @@ class DevelErrorHandlerTest extends DevelBrowserTestBase {
     $edit = [
       'error_handlers[]' => DEVEL_ERROR_HANDLER_BACKTRACE_DPM,
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
@@ -92,7 +95,8 @@ class DevelErrorHandlerTest extends DevelBrowserTestBase {
         DEVEL_ERROR_HANDLER_BACKTRACE_DPM => DEVEL_ERROR_HANDLER_BACKTRACE_DPM,
       ],
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
diff --git a/tests/src/Functional/DevelEventInfoTest.php b/tests/src/Functional/DevelEventInfoTest.php
index 952924e..2eaf392 100644
--- a/tests/src/Functional/DevelEventInfoTest.php
+++ b/tests/src/Functional/DevelEventInfoTest.php
@@ -12,7 +12,7 @@ class DevelEventInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('page_title_block');
     $this->drupalLogin($this->develUser);
diff --git a/tests/src/Functional/DevelLayoutInfoTest.php b/tests/src/Functional/DevelLayoutInfoTest.php
index f4253cd..109d38a 100644
--- a/tests/src/Functional/DevelLayoutInfoTest.php
+++ b/tests/src/Functional/DevelLayoutInfoTest.php
@@ -17,7 +17,7 @@ class DevelLayoutInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('page_title_block');
     $this->drupalLogin($this->develUser);
diff --git a/tests/src/Functional/DevelMenuLinksTest.php b/tests/src/Functional/DevelMenuLinksTest.php
index b2de463..fe84529 100644
--- a/tests/src/Functional/DevelMenuLinksTest.php
+++ b/tests/src/Functional/DevelMenuLinksTest.php
@@ -14,7 +14,7 @@ class DevelMenuLinksTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Devel links currently appears only in the devel menu.
     // Place the devel menu block so we can ensure that these link works
diff --git a/tests/src/Functional/DevelModulesReinstallTest.php b/tests/src/Functional/DevelModulesReinstallTest.php
index 9a9a12c..2c4a38c 100644
--- a/tests/src/Functional/DevelModulesReinstallTest.php
+++ b/tests/src/Functional/DevelModulesReinstallTest.php
@@ -19,7 +19,7 @@ class DevelModulesReinstallTest extends DevelBrowserTestBase {
   /**
    * Set up test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->adminUser);
   }
@@ -41,8 +41,9 @@ class DevelModulesReinstallTest extends DevelBrowserTestBase {
     foreach ($modules as $module) {
       $edit["reinstall[$module]"] = TRUE;
     }
+    $this->drupalGet('devel/reinstall');
 
-    $this->drupalPostForm('devel/reinstall', $edit, 'Reinstall');
+    $this->submitForm($edit, 'Reinstall');
     $this->assertSession()->pageTextContains('Uninstalled and installed: ' . implode(', ', $modules) . '.');
 
   }
diff --git a/tests/src/Functional/DevelRouteInfoTest.php b/tests/src/Functional/DevelRouteInfoTest.php
index 9a2a2a3..4f18bba 100644
--- a/tests/src/Functional/DevelRouteInfoTest.php
+++ b/tests/src/Functional/DevelRouteInfoTest.php
@@ -14,7 +14,7 @@ class DevelRouteInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_menu_block:devel');
     $this->drupalPlaceBlock('page_title_block');
diff --git a/tests/src/Functional/DevelRouterRebuildTest.php b/tests/src/Functional/DevelRouterRebuildTest.php
index 9091629..6ace03e 100644
--- a/tests/src/Functional/DevelRouterRebuildTest.php
+++ b/tests/src/Functional/DevelRouterRebuildTest.php
@@ -26,8 +26,9 @@ class DevelRouterRebuildTest extends DevelBrowserTestBase {
     $this->assertSession()->pageTextContains('Are you sure you want to rebuild the router?');
     $route_rebuild_state = \Drupal::state()->get('devel_test_route_rebuild');
     $this->assertEmpty($route_rebuild_state);
+    $this->drupalGet('devel/menu/reset');
 
-    $this->drupalPostForm('devel/menu/reset', [], 'Rebuild');
+    $this->submitForm([], 'Rebuild');
     $this->assertSession()->pageTextContains('The router has been rebuilt.');
     $route_rebuild_state = \Drupal::state()->get('devel_test_route_rebuild');
     $this->assertEquals('Router rebuild fired', $route_rebuild_state);
diff --git a/tests/src/Functional/DevelStateEditorTest.php b/tests/src/Functional/DevelStateEditorTest.php
index 1ca7996..376e4dc 100644
--- a/tests/src/Functional/DevelStateEditorTest.php
+++ b/tests/src/Functional/DevelStateEditorTest.php
@@ -21,7 +21,7 @@ class DevelStateEditorTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->state = $this->container->get('state');
     $this->drupalPlaceBlock('page_title_block');
@@ -128,7 +128,8 @@ class DevelStateEditorTest extends DevelBrowserTestBase {
     $this->assertFalse($button->hasAttribute('disabled'));
 
     $edit = ['new_value' => 1];
-    $this->drupalPostForm('devel/state/edit/devel.simple', $edit, 'Save');
+    $this->drupalGet('devel/state/edit/devel.simple');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(strtr('Variable @name was successfully edited.', ['@name' => 'devel.simple']));
     $this->assertEquals(1, $this->state->get('devel.simple'));
 
@@ -144,11 +145,13 @@ class DevelStateEditorTest extends DevelBrowserTestBase {
 
     // Try to save an invalid yaml input.
     $edit = ['new_value' => 'devel: \'value updated'];
-    $this->drupalPostForm('devel/state/edit/devel.array', $edit, 'Save');
+    $this->drupalGet('devel/state/edit/devel.array');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('Invalid input:');
 
     $edit = ['new_value' => 'devel: \'value updated\''];
-    $this->drupalPostForm('devel/state/edit/devel.array', $edit, 'Save');
+    $this->drupalGet('devel/state/edit/devel.array');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(strtr('Variable @name was successfully edited.', ['@name' => 'devel.array']));
     $this->assertEquals(['devel' => 'value updated'], $this->state->get('devel.array'));
 
diff --git a/tests/src/Functional/DevelSwitchUserTest.php b/tests/src/Functional/DevelSwitchUserTest.php
index 0ab2a8f..a596338 100644
--- a/tests/src/Functional/DevelSwitchUserTest.php
+++ b/tests/src/Functional/DevelSwitchUserTest.php
@@ -42,7 +42,7 @@ class DevelSwitchUserTest extends DevelBrowserTestBase {
   /**
    * Set up test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->block = $this->drupalPlaceBlock('devel_switch_user', ['id' => 'switch-user', 'label' => 'Switch Hit']);
@@ -91,7 +91,7 @@ class DevelSwitchUserTest extends DevelBrowserTestBase {
 
     // Use the search form to switch to another account.
     $edit = ['userid' => $this->switchUser->getDisplayName()];
-    $this->drupalPostForm(NULL, $edit, 'Switch');
+    $this->submitForm($edit, 'Switch');
     $this->assertSessionByUid($this->switchUser->id());
     $this->assertNoSessionByUid($this->develUser->id());
   }
diff --git a/tests/src/Functional/DevelToolbarTest.php b/tests/src/Functional/DevelToolbarTest.php
index 0860cb7..1352452 100644
--- a/tests/src/Functional/DevelToolbarTest.php
+++ b/tests/src/Functional/DevelToolbarTest.php
@@ -48,7 +48,7 @@ class DevelToolbarTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_tasks_block');
@@ -100,7 +100,8 @@ class DevelToolbarTest extends DevelBrowserTestBase {
       'toolbar_items[devel.event_info]' => 'devel.event_info',
       'toolbar_items[devel.theme_registry]' => 'devel.theme_registry',
     ];
-    $this->drupalPostForm('admin/config/development/devel/toolbar', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel/toolbar');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $expected_items = array_merge($this->defaultToolbarItems, ['devel.event_info', 'devel.theme_registry']);
diff --git a/tests/src/Kernel/DevelEnforcedDependenciesTest.php b/tests/src/Kernel/DevelEnforcedDependenciesTest.php
index e1b6a99..53e835e 100644
--- a/tests/src/Kernel/DevelEnforcedDependenciesTest.php
+++ b/tests/src/Kernel/DevelEnforcedDependenciesTest.php
@@ -23,7 +23,7 @@ class DevelEnforcedDependenciesTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
diff --git a/tests/src/Kernel/DevelMailLogTest.php b/tests/src/Kernel/DevelMailLogTest.php
index d3d01e4..bae2cae 100644
--- a/tests/src/Kernel/DevelMailLogTest.php
+++ b/tests/src/Kernel/DevelMailLogTest.php
@@ -30,7 +30,7 @@ class DevelMailLogTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['system', 'devel']);
diff --git a/tests/src/Kernel/DevelQueryDebugTest.php b/tests/src/Kernel/DevelQueryDebugTest.php
index 87fadc3..8e164e7 100644
--- a/tests/src/Kernel/DevelQueryDebugTest.php
+++ b/tests/src/Kernel/DevelQueryDebugTest.php
@@ -31,7 +31,7 @@ class DevelQueryDebugTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', 'sequences');
diff --git a/tests/src/Kernel/DevelTwigExtensionTest.php b/tests/src/Kernel/DevelTwigExtensionTest.php
index 51f061a..4a84563 100644
--- a/tests/src/Kernel/DevelTwigExtensionTest.php
+++ b/tests/src/Kernel/DevelTwigExtensionTest.php
@@ -36,7 +36,7 @@ class DevelTwigExtensionTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
diff --git a/webprofiler/src/Command/BenchmarkCommand.php b/webprofiler/src/Command/BenchmarkCommand.php
index ab6dc25..ca80fea 100644
--- a/webprofiler/src/Command/BenchmarkCommand.php
+++ b/webprofiler/src/Command/BenchmarkCommand.php
@@ -44,7 +44,7 @@ class BenchmarkCommand extends Command {
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $runs = $input->getOption('runs');
     $file = $input->getOption('file');
     $cache_rebuild = $input->getOption('cache-rebuild');
@@ -145,6 +145,7 @@ class BenchmarkCommand extends Command {
     else {
       $output->writeln($yaml);
     }
+    return 0;
 
   }
 
@@ -227,7 +228,7 @@ class BenchmarkCommand extends Command {
    */
   private function getGitHash() {
     try {
-      $process = new Process('git rev-parse HEAD');
+      $process = new Process(['git', 'rev-parse', 'HEAD']);
       $process->setTimeout(3600);
       $process->run();
       $git_hash = $process->getOutput();
diff --git a/webprofiler/src/Command/ExportCommand.php b/webprofiler/src/Command/ExportCommand.php
index c21def2..6164fa9 100644
--- a/webprofiler/src/Command/ExportCommand.php
+++ b/webprofiler/src/Command/ExportCommand.php
@@ -44,7 +44,7 @@ class ExportCommand extends Command {
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $id = $input->getArgument('id');
     $directory = $input->getOption('directory');
 
@@ -63,6 +63,7 @@ class ExportCommand extends Command {
     catch (\Exception $e) {
       $output->writeln('<error>' . $e->getMessage() . '</error>');
     }
+    return 0;
   }
 
   /**
diff --git a/webprofiler/src/Command/ListCommand.php b/webprofiler/src/Command/ListCommand.php
index 7957ace..945c683 100644
--- a/webprofiler/src/Command/ListCommand.php
+++ b/webprofiler/src/Command/ListCommand.php
@@ -38,7 +38,7 @@ class ListCommand extends Command {
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $ip = $input->getOption('ip');
     $url = $input->getOption('url');
     $method = $input->getOption('method');
@@ -72,6 +72,7 @@ class ListCommand extends Command {
       ])
       ->setRows($rows);
     $table->render();
+    return 0;
   }
 
   /**
diff --git a/webprofiler/src/DataCollector/DrupalDataCollector.php b/webprofiler/src/DataCollector/DrupalDataCollector.php
index e018a2a..72a9b82 100644
--- a/webprofiler/src/DataCollector/DrupalDataCollector.php
+++ b/webprofiler/src/DataCollector/DrupalDataCollector.php
@@ -50,12 +50,12 @@ class DrupalDataCollector extends DataCollector implements DrupalDataCollectorIn
     $this->data['config_url'] = (new Url('webprofiler.settings', [], ['query' => $this->redirectDestination->getAsArray()]))->toString();
 
     try {
-      $process = new Process("git log -1 --pretty=format:'%H - %s (%ci)' --abbrev-commit");
+      $process = new Process(['git', 'log', '-1', '--pretty=format:%H - %s (%ci)', '--abbrev-commit']);
       $process->setTimeout(3600);
       $process->mustRun();
       $this->data['git_commit'] = $process->getOutput();
 
-      $process = new Process("git log -1 --pretty=format:'%h' --abbrev-commit");
+      $process = new Process(['git', 'log', '-1', '--pretty=format:%h', '--abbrev-commit']);
       $process->setTimeout(3600);
       $process->mustRun();
       $this->data['abbr_git_commit'] = $process->getOutput();
diff --git a/webprofiler/src/EventDispatcher/TraceableEventDispatcher.php b/webprofiler/src/EventDispatcher/TraceableEventDispatcher.php
index ef51862..1fa411f 100644
--- a/webprofiler/src/EventDispatcher/TraceableEventDispatcher.php
+++ b/webprofiler/src/EventDispatcher/TraceableEventDispatcher.php
@@ -2,10 +2,10 @@
 
 namespace Drupal\webprofiler\EventDispatcher;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher;
 use Drupal\webprofiler\Stopwatch;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -122,7 +122,7 @@ class TraceableEventDispatcher extends ContainerAwareEventDispatcher implements
    *
    * @param string $eventName
    *   The event name.
-   * @param \Symfony\Component\EventDispatcher\Event|\Drupal\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event|\Drupal\Component\EventDispatcher\Event $event
    *   The event.
    */
   protected function preDispatch($eventName, $event) {
@@ -142,7 +142,7 @@ class TraceableEventDispatcher extends ContainerAwareEventDispatcher implements
    *
    * @param string $eventName
    *   The event name.
-   * @param \Symfony\Component\EventDispatcher\Event|\Drupal\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event|\Drupal\Component\EventDispatcher\Event $event
    *   The event.
    */
   protected function postDispatch($eventName, $event) {
diff --git a/webprofiler/src/EventSubscriber/ProfilerSubscriber.php b/webprofiler/src/EventSubscriber/ProfilerSubscriber.php
index f52eb74..9fa9df4 100644
--- a/webprofiler/src/EventSubscriber/ProfilerSubscriber.php
+++ b/webprofiler/src/EventSubscriber/ProfilerSubscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\webprofiler\EventSubscriber;
 
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\HttpKernel\Event\FinishRequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpKernel\Profiler\Profiler;
@@ -59,18 +59,18 @@ class ProfilerSubscriber implements EventSubscriberInterface {
   /**
    * Handles the onKernelException event.
    */
-  public function onKernelException(GetResponseForExceptionEvent $event) {
+  public function onKernelException(ExceptionEvent $event) {
     if ($this->onlyMasterRequests && !$event->isMasterRequest()) {
       return;
     }
 
-    $this->exception = $event->getException();
+    $this->exception = $event->getThrowable();
   }
 
   /**
    * Handles the onKernelResponse event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $master = $event->isMasterRequest();
     if ($this->onlyMasterRequests && !$master) {
       return;
diff --git a/webprofiler/src/EventSubscriber/WebprofilerEventSubscriber.php b/webprofiler/src/EventSubscriber/WebprofilerEventSubscriber.php
index 6325b77..dd18787 100644
--- a/webprofiler/src/EventSubscriber/WebprofilerEventSubscriber.php
+++ b/webprofiler/src/EventSubscriber/WebprofilerEventSubscriber.php
@@ -2,12 +2,12 @@
 
 namespace Drupal\webprofiler\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Routing\UrlGeneratorInterface;
 use Drupal\Core\Session\AccountInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -42,9 +42,9 @@ class WebprofilerEventSubscriber implements EventSubscriberInterface {
   }
 
   /**
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     $request = $event->getRequest();
 
diff --git a/webprofiler/src/Http/HttpClientMiddleware.php b/webprofiler/src/Http/HttpClientMiddleware.php
index 69f4c70..47e82ab 100644
--- a/webprofiler/src/Http/HttpClientMiddleware.php
+++ b/webprofiler/src/Http/HttpClientMiddleware.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webprofiler\Http;
 
+use function GuzzleHttp\Promise\rejection_for;
 use GuzzleHttp\Exception\RequestException;
 use GuzzleHttp\TransferStats;
 use Psr\Http\Message\RequestInterface;
@@ -71,7 +72,7 @@ class HttpClientMiddleware {
               'message' => $reason->getMessage(),
             ];
 
-            return \GuzzleHttp\Promise\rejection_for($reason);
+            return rejection_for($reason);
           }
         );
       };
diff --git a/webprofiler/src/ProxyClass/Command/ListCommand.php b/webprofiler/src/ProxyClass/Command/ListCommand.php
index e8e22c8..4d93320 100644
--- a/webprofiler/src/ProxyClass/Command/ListCommand.php
+++ b/webprofiler/src/ProxyClass/Command/ListCommand.php
@@ -9,6 +9,12 @@
 
 namespace Drupal\webprofiler\ProxyClass\Command {
 
+  use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+  use Symfony\Component\DependencyInjection\ContainerInterface;
+  use Symfony\Component\Console\Application;
+  use Symfony\Component\Console\Helper\HelperSet;
+  use Symfony\Component\Console\Input\InputInterface;
+  use Symfony\Component\Console\Output\OutputInterface;
   /**
    * Provides a proxy class for \Drupal\webprofiler\Command\ListCommand.
    *
@@ -16,7 +22,7 @@ namespace Drupal\webprofiler\ProxyClass\Command {
    */
   class ListCommand {
 
-    use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use DependencySerializationTrait;
 
     /**
      * The id of the original proxied service.
@@ -47,7 +53,7 @@ namespace Drupal\webprofiler\ProxyClass\Command {
      * @param string $drupal_proxy_original_service_id
      *   The service ID of the original service.
      */
-    public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id) {
+    public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id) {
       $this->container = $container;
       $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
     }
@@ -83,14 +89,14 @@ namespace Drupal\webprofiler\ProxyClass\Command {
     /**
      * {@inheritdoc}
      */
-    public function setApplication(\Symfony\Component\Console\Application $application = NULL) {
+    public function setApplication(Application $application = NULL) {
       return $this->lazyLoadItself()->setApplication($application);
     }
 
     /**
      * {@inheritdoc}
      */
-    public function setHelperSet(\Symfony\Component\Console\Helper\HelperSet $helperSet) {
+    public function setHelperSet(HelperSet $helperSet) {
       return $this->lazyLoadItself()->setHelperSet($helperSet);
     }
 
@@ -118,7 +124,7 @@ namespace Drupal\webprofiler\ProxyClass\Command {
     /**
      * {@inheritdoc}
      */
-    public function run(\Symfony\Component\Console\Input\InputInterface $input, \Symfony\Component\Console\Output\OutputInterface $output) {
+    public function run(InputInterface $input, OutputInterface $output) {
       return $this->lazyLoadItself()->run($input, $output);
     }
 
diff --git a/webprofiler/tests/src/Functional/DataCollectorTest.php b/webprofiler/tests/src/Functional/DataCollectorTest.php
index 60e9884..eecfde7 100644
--- a/webprofiler/tests/src/Functional/DataCollectorTest.php
+++ b/webprofiler/tests/src/Functional/DataCollectorTest.php
@@ -36,7 +36,7 @@ class DataCollectorTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $entity_type_manager = $this->container->get('entity_type.manager');
     $this->blocksDataCollector = new BlocksDataCollector($entity_type_manager);
diff --git a/webprofiler/tests/src/FunctionalJavascript/ToolbarTest.php b/webprofiler/tests/src/FunctionalJavascript/ToolbarTest.php
index 5daa835..fc36c1b 100644
--- a/webprofiler/tests/src/FunctionalJavascript/ToolbarTest.php
+++ b/webprofiler/tests/src/FunctionalJavascript/ToolbarTest.php
@@ -17,7 +17,7 @@ class ToolbarTest extends WebprofilerTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     \Drupal::configFactory()->getEditable('system.site')->set('page.front', '/node')->save(TRUE);
diff --git a/webprofiler/tests/src/Unit/DataCollector/AssetsDataCollectorTest.php b/webprofiler/tests/src/Unit/DataCollector/AssetsDataCollectorTest.php
index 1c12981..b0ed5c9 100644
--- a/webprofiler/tests/src/Unit/DataCollector/AssetsDataCollectorTest.php
+++ b/webprofiler/tests/src/Unit/DataCollector/AssetsDataCollectorTest.php
@@ -18,7 +18,7 @@ class AssetsDataCollectorTest extends DataCollectorBaseTest {
   private $assetDataCollector;
 
   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   private $assetCollectionRendererInterface;
 
@@ -27,7 +27,7 @@ class AssetsDataCollectorTest extends DataCollectorBaseTest {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->assetDataCollector = new AssetsDataCollector(AssetsDataCollectorTest::ROOT);
diff --git a/webprofiler/tests/src/Unit/DataCollector/CacheDataCollectorTest.php b/webprofiler/tests/src/Unit/DataCollector/CacheDataCollectorTest.php
index a35f16f..f8de864 100644
--- a/webprofiler/tests/src/Unit/DataCollector/CacheDataCollectorTest.php
+++ b/webprofiler/tests/src/Unit/DataCollector/CacheDataCollectorTest.php
@@ -18,14 +18,14 @@ class CacheDataCollectorTest extends DataCollectorBaseTest {
   private $cacheDataCollector;
 
   /**
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   private $cacheBackendInterface;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->cacheDataCollector = new CacheDataCollector();
     $this->cacheBackendInterface = $this->createMock('Drupal\Core\Cache\CacheBackendInterface');
   }
diff --git a/webprofiler/tests/src/Unit/DataCollector/DataCollectorBaseTest.php b/webprofiler/tests/src/Unit/DataCollector/DataCollectorBaseTest.php
index 3428446..35d139d 100644
--- a/webprofiler/tests/src/Unit/DataCollector/DataCollectorBaseTest.php
+++ b/webprofiler/tests/src/Unit/DataCollector/DataCollectorBaseTest.php
@@ -29,7 +29,7 @@ abstract class DataCollectorBaseTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->request = $this->createMock('Symfony\Component\HttpFoundation\Request');
