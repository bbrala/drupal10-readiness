modules/contrib/schemadotorg/includes/schemadotorg.allowed_values.inc
modules/contrib/schemadotorg/modules/schemadotorg_demo_standard/schemadotorg_demo_standard.install
modules/contrib/schemadotorg/modules/schemadotorg_demo_umami_content/schemadotorg_demo_umami_content.install
modules/contrib/schemadotorg/modules/schemadotorg_export/src/EventSubscriber/SchemaDotOrgExportEventSubscriber.php
modules/contrib/schemadotorg/modules/schemadotorg_demo_default_content/schemadotorg_demo_default_content.install
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/schemadotorg_jsonapi.module
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi_preview/src/SchemaDotOrgJsonApiPreviewAccessChecker.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/src/Breadcrumb/SchemaDotOrgJsonApiBreadcrumbBuilder.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/src/EventSubscriber/SchemaDotOrgJsonApiEventSubscriber.php
modules/contrib/schemadotorg/modules/schemadotorg_demo_standard_admin/schemadotorg_demo_standard_admin.module
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/src/SchemaDotOrgJsonLdManagerInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/tests/src/Functional/SchemaDotOrgJsonLdSettingsFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_endpoint/src/Controller/SchemaDotOrgJsonLdEndpointController.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_preview/tests/src/Functional/SchemaDotOrgJsonLdPreviewTest.php
modules/contrib/schemadotorg/modules/schemadotorg_paragraphs/schemadotorg_paragraphs.module
modules/contrib/schemadotorg/modules/schemadotorg_demo_umami_content/src/SchemaDotOrgDemoUmamiContentInstallHelper.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Breadcrumb/SchemaDotOrgReportBreadcrumbBuilder.php
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/schemadotorg_taxonomy.module
modules/contrib/schemadotorg/modules/schemadotorg_translation/src/SchemaDotOrgTranslationManager.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/tests/src/Functional/SchemaDotOrgUiControllerTest.php
modules/contrib/schemadotorg/src/Entity/SchemaDotOrgMapping.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingManager.php
modules/contrib/schemadotorg/tests/src/Functional/SchemaDotOrgSettingsFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/src/Form/SchemaDotOrgJsonApiSettingsForm.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/tests/src/Kernel/SchemaDotOrgJsonLdBuilderTest.php
modules/contrib/schemadotorg/modules/schemadotorg_export/tests/src/Functional/SchemaDotOrgExportTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/src/SchemaDotOrgJsonApiManager.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_endpoint/src/EventSubscriber/SchemaDotOrgJsonLdEndpointEventSubscriber.php
modules/contrib/schemadotorg/modules/schemadotorg_paragraphs/tests/src/Functional/SchemaDotOrgParagraphsSettingsFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_descriptions/schemadotorg_descriptions.module
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_endpoint/src/ParamConverter/SchemaDotOrgJsonLdEndpointEntityUuidConverter.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi_preview/src/SchemaDotOrgJsonApiPreviewAccessCheckerInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi_preview/src/SchemaDotOrgJsonApiPreviewBuilder.php
modules/contrib/schemadotorg/modules/schemadotorg_flexfield/schemadotorg_flexfield.module
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/tests/src/Kernel/SchemaDotOrgJsonLdManagerTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_endpoint/src/Routing/SchemaDotOrgJsonLdEndpointRoutes.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Controller/SchemaDotOrgReportControllerBase.php
modules/contrib/schemadotorg/modules/schemadotorg_paragraphs/tests/src/Kernel/SchemaDotOrgParagraphsTest.php
modules/contrib/schemadotorg/modules/schemadotorg_mapping_set/schemadotorg_mapping_set.install
modules/contrib/schemadotorg/modules/schemadotorg_ui/tests/src/Functional/SchemaDotOrgUiMappingFormTest.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgAutocompleteControllerTest.php
modules/contrib/schemadotorg/modules/schemadotorg_mapping_set/schemadotorg_mapping_set.module
modules/contrib/schemadotorg/modules/schemadotorg_mapping_set/src/Breadcrumb/SchemaDotOrgMappingSetBreadcrumbBuilder.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_endpoint/tests/src/Functional/SchemaDotOrgJsonLdEndpointSettingsFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/src/SchemaDotOrgTaxonomyJsonLdManager.php
modules/contrib/schemadotorg/modules/schemadotorg_rdf/schemadotorg_rdf.install
modules/contrib/schemadotorg/modules/schemadotorg_mapping_set/src/Commands/SchemaDotOrgMappingSetCommands.php
modules/contrib/schemadotorg/modules/schemadotorg_rdf/schemadotorg_rdf.module
modules/contrib/schemadotorg/modules/schemadotorg_inline_entity_form/schemadotorg_inline_entity_form.module
modules/contrib/schemadotorg/modules/schemadotorg_rdf/tests/src/Functional/SchemaDotOrgRdfTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_endpoint/tests/src/Functional/SchemaDotOrgJsonLdEndpointTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi_preview/src/SchemaDotOrgJsonApiPreviewBuilderInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi_preview/tests/src/Functional/SchemaDotOrgJsonApiPreviewTest.php
modules/contrib/schemadotorg/modules/schemadotorg_inline_entity_form/tests/src/Functional/SchemaDotOrgInlineEntityFormSettingsFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/src/SchemaDotOrgJsonApiManagerInterface.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgEntityFieldManagerTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/tests/src/Functional/SchemaDotOrgJsonApiListBuilderTest.php
modules/contrib/schemadotorg/modules/schemadotorg_inline_entity_form/tests/src/Kernel/SchemaDotOrgInlineEntityFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_mapping_set/src/Controller/SchemadotorgMappingSetController.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_preview/schemadotorg_jsonld_preview.module
modules/contrib/schemadotorg/modules/schemadotorg_descriptions/src/Breadcrumb/SchemaDotOrgDescriptionsBreadcrumbBuilder.php
modules/contrib/schemadotorg/modules/schemadotorg_descriptions/src/Config/SchemaDotOrgDescriptionsConfigFactoryOverride.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Controller/SchemaDotOrgReportHierarchyController.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/tests/src/Functional/SchemaDotOrgJsonApiSettingsFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/schemadotorg_jsonapi.install
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/tests/src/Kernel/SchemaDotOrgJsonApiManagerTest.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Controller/SchemaDotOrgReportItemController.php
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/src/SchemaDotOrgTaxonomyJsonLdManagerInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/src/SchemaDotOrgTaxonomyPropertyVocabularyManager.php
modules/contrib/schemadotorg/src/Entity/SchemaDotOrgMappingType.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_preview/src/SchemaDotOrgJsonLdPreviewAccessChecker.php
modules/contrib/schemadotorg/modules/schemadotorg_translation/src/SchemaDotOrgTranslationManagerInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_translation/tests/Kernel/SchemaDotOrgTranslationManagerTest.php
modules/contrib/schemadotorg/modules/schemadotorg_report/schemadotorg_report.module
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/schemadotorg_jsonld.api.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/tests/src/Functional/SchemaDotOrgUiMappingTypeSelectFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_preview/src/SchemaDotOrgJsonLdPreviewAccessCheckerInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_preview/src/SchemaDotOrgJsonLdPreviewBuilder.php
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/src/SchemaDotOrgTaxonomyPropertyVocabularyManagerInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/tests/src/Functional/SchemaDotOrgTaxonomyJsonLdTest.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/tests/src/Functional/SchemaDotOrgUiRouteTest.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgEntityTest.php
modules/contrib/schemadotorg/modules/schemadotorg_mapping_set/src/Form/SchemaDotOrgMappingSetConfirmForm.php
modules/contrib/schemadotorg/src/Form/SchemaDotOrgMappingForm.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_preview/src/SchemaDotOrgJsonLdPreviewBuilderInterface.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgKernelEntityTestBase.php
modules/contrib/schemadotorg/modules/schemadotorg_descriptions/src/Form/SchemaDotOrgDescriptionsSettingsForm.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/tests/src/Unit/SchemaDotOrgJsonApiBreadcrumbBuilderTest.php
modules/contrib/schemadotorg/modules/schemadotorg_mapping_set/src/Form/SchemaDotOrgMappingSetSettingsForm.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingManagerInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_mapping_set/src/SchemaDotOrgMappingSetManager.php
modules/contrib/schemadotorg/schemadotorg.api.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingStorage.php
modules/contrib/schemadotorg/schemadotorg.install
modules/contrib/schemadotorg/schemadotorg.module
modules/contrib/schemadotorg/modules/schemadotorg_descriptions/tests/src/Functional/SchemaDotOrgDescriptionsSettingsFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/schemadotorg_jsonld.module
modules/contrib/schemadotorg/modules/schemadotorg_ui/schemadotorg_ui.module
modules/contrib/schemadotorg/src/Form/SchemaDotOrgMappingTypeForm.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/tests/src/Unit/SchemaDotOrgJsonLdBreadcrumbBuilderTest.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/src/Controller/SchemaDotOrgUiMappingController.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/src/Breadcrumb/SchemaDotOrgJsonLdBreadcrumbBuilder.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Controller/SchemaDotOrgReportMappingsController.php
modules/contrib/schemadotorg/modules/schemadotorg_descriptions/tests/src/Functional/SchemaDotOrgDescriptionsTest.php
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/tests/src/Functional/SchemaDotOrgTaxonomySettingsFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/src/Form/SchemaDotOrgJsonLdSettingsForm.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonapi_preview/schemadotorg_jsonapi_preview.module
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/tests/src/Kernel/SchemaDotOrgTaxonomyJsonLdTest.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingStorageInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingTypeInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingTypeListBuilder.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgKernelTestBase.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingEntityTest.php
modules/contrib/schemadotorg/modules/schemadotorg_mapping_set/src/SchemaDotOrgMappingSetManagerInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_export/src/Controller/SchemaDotOrgExportController.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/src/Form/SchemaDotOrgUiMappingForm.php
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/tests/src/Kernel/SchemaDotOrgTaxonomyPropertyVocabularyManagerTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_breadcrumb/schemadotorg_jsonld_breadcrumb.module
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/src/SchemaDotOrgJsonLdBuilder.php
modules/contrib/schemadotorg/src/Form/SchemaDotOrgSettingsNamesForm.php
modules/contrib/schemadotorg/src/Breadcrumb/SchemaDotOrgBreadcrumbBuilder.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingTypeStorage.php
modules/contrib/schemadotorg/modules/schemadotorg_translation/schemadotorg_translation.install
modules/contrib/schemadotorg/src/Commands/SchemaDotOrgCommands.php
modules/contrib/schemadotorg/modules/schemadotorg_translation/schemadotorg_translation.module
modules/contrib/schemadotorg/modules/schemadotorg_translation/src/Form/SchemaDotOrgTranslationSettingsForm.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_breadcrumb/tests/src/Kernel/SchemaDotOrgJsonLdBreadcrumbTest.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingTypeStorageInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgNames.php
modules/contrib/schemadotorg/src/Form/SchemaDotOrgSettingsPropertiesForm.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_embed/schemadotorg_jsonld_embed.module
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_embed/src/SchemaDotOrgJsonLdEmbedInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_embed/src/SchemaDotOrgJsonLdEmbedManager.php
modules/contrib/schemadotorg/src/Controller/SchemaDotOrgAutocompleteController.php
modules/contrib/schemadotorg/src/Form/SchemaDotOrgSettingsTypesForm.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingFormTest.php
modules/contrib/schemadotorg/src/SchemaDotOrgNamesInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgSchemaTypeBuilder.php
modules/contrib/schemadotorg/src/SchemaDotOrgConfigEntityListBuilderBase.php
modules/contrib/schemadotorg/src/Element/SchemaDotOrgSettings.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingManagerTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_embed/tests/src/Kernel/SchemaDotOrgJsonLdEmbedTest.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/src/SchemaDotOrgJsonLdBuilderInterface.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld/src/SchemaDotOrgJsonLdManager.php
modules/contrib/schemadotorg/src/SchemaDotOrgSchemaTypeBuilderInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgSchemaTypeManager.php
modules/contrib/schemadotorg/src/SchemaDotOrgConfigManager.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingStorageTest.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Controller/SchemaDotOrgReportNamesController.php
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_endpoint/schemadotorg_jsonld_endpoint.install
modules/contrib/schemadotorg/modules/schemadotorg_jsonld_endpoint/schemadotorg_jsonld_endpoint.module
modules/contrib/schemadotorg/src/SchemaDotOrgConfigManagerInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgEntityFieldManager.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingTypeEntityTest.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingTypeStorageTest.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgNamesTest.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Controller/SchemaDotOrgReportReferencesController.php
modules/contrib/schemadotorg/src/SchemaDotOrgEntityFieldManagerInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgEntityRelationshipManager.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Controller/SchemaDotOrgReportTableController.php
modules/contrib/schemadotorg/src/SchemaDotOrgSchemaTypeManagerInterface.php
modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgSchemaTypeManagerTest.php
modules/contrib/schemadotorg/tests/modules/schemadotorg_settings_element_test/src/Form/SchemaDotOrgSettingsElementTestForm.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/src/Form/SchemaDotOrgUiMappingTypeSelectForm.php
modules/contrib/schemadotorg/src/SchemaDotOrgEntityRelationshipManagerInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgEntityTypeBuilder.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Form/SchemaDotOrgReportFilterForm.php
modules/contrib/schemadotorg/tests/src/Functional/SchemaDotOrgBrowserTestBase.php
modules/contrib/schemadotorg/modules/schemadotorg_report/src/Form/SchemaDotOrgReportSettingsForm.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/src/Plugin/Derivative/SchemaDotOrgUiLocalAction.php
modules/contrib/schemadotorg/modules/schemadotorg_report/tests/src/Functional/SchemaDotOrgReportSettingsFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/src/Plugin/Derivative/SchemaDotOrgUiLocalTask.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/src/Plugin/Derivative/SchemaDotOrgUiMenuLink.php
modules/contrib/schemadotorg/tests/src/Functional/SchemaDotOrgMappingTypeFormTest.php
modules/contrib/schemadotorg/modules/schemadotorg_report/tests/src/Functional/SchemaDotOrgReportTest.php
modules/contrib/schemadotorg/tests/src/Functional/SchemaDotOrgSettingsElementTest.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/src/Plugin/Menu/LocalAction/SchemaDotOrgUiLocalAction.php
modules/contrib/schemadotorg/modules/schemadotorg_ui/src/Routing/SchemaDotOrgRouteSubscriber.php
modules/contrib/schemadotorg/modules/schemadotorg_report/tests/src/Unit/Breadcrumb/SchemaDotOrgReportBreadcrumbBuilderTest.php
modules/contrib/schemadotorg/tests/src/Traits/SchemaDotOrgTestTrait.php
modules/contrib/schemadotorg/src/SchemaDotOrgEntityTypeBuilderInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgInstaller.php
modules/contrib/schemadotorg/modules/schemadotorg_report/tests/src/Unit/Form/SchemaDotOrgReportFilterFormTest.php
modules/contrib/schemadotorg/tests/src/Unit/Breadcrumb/SchemaDotOrgBreadcrumbBuilderTest.php
modules/contrib/schemadotorg/src/SchemaDotOrgInstallerInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingInterface.php
modules/contrib/schemadotorg/src/SchemaDotOrgMappingListBuilder.php
modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/schemadotorg_taxonomy.install
modules/contrib/schemadotorg/tests/src/Unit/SchemaDotOrgSchemaTypeBuilderTest.php

31 files with changes
=====================

1) modules/contrib/schemadotorg/modules/schemadotorg_rdf/tests/src/Functional/SchemaDotOrgRdfTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create Event node with field.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/schemadotorg/modules/schemadotorg_paragraphs/tests/src/Kernel/SchemaDotOrgParagraphsTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(['schemadotorg_paragraphs']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/tests/src/Unit/SchemaDotOrgJsonApiBreadcrumbBuilderTest.php:23

    ---------- begin diff ----------
@@ @@
     // @see \Drupal\Core\Breadcrumb\Breadcrumb
     // @see \Drupal\Core\Cache\RefinableCacheableDependencyTrait
     // @see \Drupal\Core\Cache\Cache
-    $cache_contexts_manager = $this->getMockBuilder('Drupal\Core\Cache\Context\CacheContextsManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock('Drupal\Core\Cache\Context\CacheContextsManager');
     // Always return TRUE for ::assertValidTokens so that any cache context
     // will be accepted.
     $cache_contexts_manager->method('assertValidTokens')->willReturn(TRUE);
@@ @@
    * @covers ::applies
    */
   public function testApplies($expected, $route_name = NULL) {
-    $breadcrumb_builder = $this->getMockBuilder('\Drupal\schemadotorg_jsonapi\Breadcrumb\SchemaDotOrgJsonApiBreadcrumbBuilder')
-      ->onlyMethods([])
-      ->getMock();
+    $breadcrumb_builder = $this->createMock('\Drupal\schemadotorg_jsonapi\Breadcrumb\SchemaDotOrgJsonApiBreadcrumbBuilder');

     $route_match = $this->createMock('Drupal\Core\Routing\RouteMatchInterface');
     $route_match->expects($this->once())
@@ @@
    */
   public function testBuild() {
     // Build a breadcrumb builder to test.
-    $breadcrumb_builder = $this->getMockBuilder('\Drupal\schemadotorg_jsonapi\Breadcrumb\SchemaDotOrgJsonApiBreadcrumbBuilder')
-      ->onlyMethods([])
-      ->getMock();
+    $breadcrumb_builder = $this->createMock('\Drupal\schemadotorg_jsonapi\Breadcrumb\SchemaDotOrgJsonApiBreadcrumbBuilder');

     // Add a translation manager for t().
     $translation_manager = $this->getStringTranslationStub();
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/schemadotorg/modules/schemadotorg_jsonapi/tests/src/Kernel/SchemaDotOrgJsonApiManagerTest.php:58

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('schemadotorg_mapping');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/schemadotorg/modules/schemadotorg_demo_umami_content/src/SchemaDotOrgDemoUmamiContentInstallHelper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\schemadotorg_demo_umami_content;

+use Drupal\demo_umami_content\InstallHelper;
 use Drupal\Component\Utility\Html;

 include \Drupal::root() . '/core/profiles/demo_umami/modules/demo_umami_content/src/InstallHelper.php';
@@ @@
  *
  * @see \Drupal\demo_umami_content\InstallHelper
  */
-class SchemaDotOrgDemoUmamiContentInstallHelper extends \Drupal\demo_umami_content\InstallHelper {
+class SchemaDotOrgDemoUmamiContentInstallHelper extends InstallHelper {

   /**
    * {@inheritdoc}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/tests/src/Kernel/SchemaDotOrgTaxonomyPropertyVocabularyManagerTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('taxonomy_vocabulary');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/tests/src/Kernel/SchemaDotOrgTaxonomyJsonLdTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('taxonomy_vocabulary');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/schemadotorg/modules/schemadotorg_taxonomy/tests/src/Functional/SchemaDotOrgTaxonomyJsonLdTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->builder = $this->container->get('schemadotorg_jsonld.builder');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/schemadotorg/modules/schemadotorg_jsonld_embed/tests/src/Kernel/SchemaDotOrgJsonLdEmbedTest.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['schemadotorg_jsonld']);
     $this->manager = $this->container->get('schemadotorg_jsonld.manager');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/schemadotorg/modules/schemadotorg_jsonld_breadcrumb/tests/src/Kernel/SchemaDotOrgJsonLdBreadcrumbTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['schemadotorg_jsonld']);
     $this->manager = $this->container->get('schemadotorg_jsonld.manager');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/schemadotorg/modules/schemadotorg_jsonld/tests/src/Unit/SchemaDotOrgJsonLdBreadcrumbBuilderTest.php:23

    ---------- begin diff ----------
@@ @@
     // @see \Drupal\Core\Breadcrumb\Breadcrumb
     // @see \Drupal\Core\Cache\RefinableCacheableDependencyTrait
     // @see \Drupal\Core\Cache\Cache
-    $cache_contexts_manager = $this->getMockBuilder('Drupal\Core\Cache\Context\CacheContextsManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock('Drupal\Core\Cache\Context\CacheContextsManager');
     // Always return TRUE for ::assertValidTokens so that any cache context
     // will be accepted.
     $cache_contexts_manager->method('assertValidTokens')->willReturn(TRUE);
@@ @@
    * @covers ::applies
    */
   public function testApplies($expected, $route_name = NULL) {
-    $breadcrumb_builder = $this->getMockBuilder('\Drupal\schemadotorg_jsonld\Breadcrumb\SchemaDotOrgJsonLdBreadcrumbBuilder')
-      ->onlyMethods([])
-      ->getMock();
+    $breadcrumb_builder = $this->createMock('\Drupal\schemadotorg_jsonld\Breadcrumb\SchemaDotOrgJsonLdBreadcrumbBuilder');

     $route_match = $this->createMock('Drupal\Core\Routing\RouteMatchInterface');
     $route_match->expects($this->once())
@@ @@
    */
   public function testBuild() {
     // Build a breadcrumb builder to test.
-    $breadcrumb_builder = $this->getMockBuilder('\Drupal\schemadotorg_jsonld\Breadcrumb\SchemaDotOrgJsonLdBreadcrumbBuilder')
-      ->onlyMethods([])
-      ->getMock();
+    $breadcrumb_builder = $this->createMock('\Drupal\schemadotorg_jsonld\Breadcrumb\SchemaDotOrgJsonLdBreadcrumbBuilder');

     // Add a translation manager for t().
     $translation_manager = $this->getStringTranslationStub();
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/schemadotorg/modules/schemadotorg_jsonld/tests/src/Kernel/SchemaDotOrgJsonLdManagerTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['schemadotorg_jsonld']);
     $this->manager = $this->container->get('schemadotorg_jsonld.manager');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/schemadotorg/modules/schemadotorg_jsonld/tests/src/Kernel/SchemaDotOrgJsonLdBuilderTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['schemadotorg_jsonld']);
     $this->builder = $this->container->get('schemadotorg_jsonld.builder');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/schemadotorg/modules/schemadotorg_jsonld/schemadotorg_jsonld.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\taxonomy\VocabularyInterface;
+use Drupal\taxonomy\TermInterface;
+use Drupal\Core\Field\FieldItemInterface;
 /**
  * @file
  * Hooks related to Schema.org Blueprints JSON-LD module.
@@ @@
  * @return array
  *   Custom Schema.org JSON-LD data.
  */
-function hook_schemadotorg_jsonld(\Drupal\Core\Routing\RouteMatchInterface $route_match) {
+function hook_schemadotorg_jsonld(RouteMatchInterface $route_match) {
   return [
     '@context' => 'https://schema.org',
     '@type' => 'BreadcrumbList',
@@ @@
  * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
  *   The current route match.
  */
-function hook_schemadotorg_jsonld_alter(array &$data, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
+function hook_schemadotorg_jsonld_alter(array &$data, RouteMatchInterface $route_match) {
   /** @var \Drupal\schemadotorg_jsonld\SchemaDotOrgJsonLdManagerInterface $manager */
   $manager = \Drupal::service('schemadotorg_jsonld.manager');
   $entity = $manager->getRouteMatchEntity($route_match);
@@ @@
  * @param \Drupal\Core\Entity\EntityInterface $entity
  *   The entity.
  */
-function hook_schemadotorg_jsonld_entity_load(array &$data, \Drupal\Core\Entity\EntityInterface $entity) {
-  if (!$entity instanceof \Drupal\taxonomy\VocabularyInterface) {
+function hook_schemadotorg_jsonld_entity_load(array &$data, EntityInterface $entity) {
+  if (!$entity instanceof VocabularyInterface) {
     return;
   }

@@ @@
  * @param \Drupal\Core\Entity\EntityInterface $entity
  *   The entity.
  */
-function hook_schemadotorg_jsonld_entity_alter(array &$data, \Drupal\Core\Entity\EntityInterface $entity) {
-  if (!$entity instanceof \Drupal\taxonomy\TermInterface) {
+function hook_schemadotorg_jsonld_entity_alter(array &$data, EntityInterface $entity) {
+  if (!$entity instanceof TermInterface) {
     return;
   }

@@ @@
  * @param \Drupal\Core\Field\FieldItemInterface $item
  *   Tn entity's field item.
  */
-function hook_schemadotorg_jsonld_schema_property_alter(&$value, \Drupal\Core\Field\FieldItemInterface $item) {
+function hook_schemadotorg_jsonld_schema_property_alter(&$value, FieldItemInterface $item) {
   // Get entity information.
   $entity = $item->getEntity();
   $entity_type_id = $entity->getEntityTypeId();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


15) modules/contrib/schemadotorg/modules/schemadotorg_translation/tests/Kernel/SchemaDotOrgTranslationManagerTest.php:52

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('language_content_settings');
     $this->installConfig(['schemadotorg_translation']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/schemadotorg/modules/schemadotorg_report/tests/src/Unit/Form/SchemaDotOrgReportFilterFormTest.php:35

    ---------- begin diff ----------
@@ @@

     // Mock Schema.org type manager which is only used to validate
     // type and property ids.
-    $schema_type_manager = $this->getMockBuilder('\Drupal\schemadotorg\SchemaDotOrgSchemaTypeManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $schema_type_manager = $this->createMock('\Drupal\schemadotorg\SchemaDotOrgSchemaTypeManager');
     $schema_type_manager->method('isId')->willReturnMap([
       ['types', 'Thing', TRUE],
       ['types', 'Th', FALSE],
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/schemadotorg/modules/schemadotorg_report/tests/src/Unit/Breadcrumb/SchemaDotOrgReportBreadcrumbBuilderTest.php:23

    ---------- begin diff ----------
@@ @@
     // @see \Drupal\Core\Breadcrumb\Breadcrumb
     // @see \Drupal\Core\Cache\RefinableCacheableDependencyTrait
     // @see \Drupal\Core\Cache\Cache
-    $cache_contexts_manager = $this->getMockBuilder('Drupal\Core\Cache\Context\CacheContextsManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock('Drupal\Core\Cache\Context\CacheContextsManager');
     // Always return TRUE for ::assertValidTokens so that any cache context
     // will be accepted.
     $cache_contexts_manager->method('assertValidTokens')->willReturn(TRUE);
@@ @@
    * @covers ::applies
    */
   public function testApplies($expected, $route_name = NULL) {
-    $breadcrumb_builder = $this->getMockBuilder('\Drupal\schemadotorg_report\Breadcrumb\SchemaDotOrgReportBreadcrumbBuilder')
-      ->onlyMethods([])
-      ->getMock();
+    $breadcrumb_builder = $this->createMock('\Drupal\schemadotorg_report\Breadcrumb\SchemaDotOrgReportBreadcrumbBuilder');

     $route_match = $this->createMock('Drupal\Core\Routing\RouteMatchInterface');
     $route_match->expects($this->once())
@@ @@
    */
   public function testBuild() {
     // Build a breadcrumb builder to test.
-    $breadcrumb_builder = $this->getMockBuilder('\Drupal\schemadotorg_report\Breadcrumb\SchemaDotOrgReportBreadcrumbBuilder')
-      ->onlyMethods([])
-      ->getMock();
+    $breadcrumb_builder = $this->createMock('\Drupal\schemadotorg_report\Breadcrumb\SchemaDotOrgReportBreadcrumbBuilder');

     // Add a translation manager for t().
     $translation_manager = $this->getStringTranslationStub();
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/schemadotorg/modules/schemadotorg_report/tests/src/Functional/SchemaDotOrgReportTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->reportUser = $this->drupalCreateUser(['access site reports']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/schemadotorg/tests/src/Unit/SchemaDotOrgSchemaTypeBuilderTest.php:49

    ---------- begin diff ----------
@@ @@

     $this->currentUser = $this->createMock('Drupal\Core\Session\AccountInterface');

-    $this->schemaTypeManager = $this->getMockBuilder('\Drupal\schemadotorg\SchemaDotOrgSchemaTypeManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->schemaTypeManager = $this->createMock('\Drupal\schemadotorg\SchemaDotOrgSchemaTypeManager');

     $this->schemaTypeBuilder = new SchemaDotOrgSchemaTypeBuilder(
       $this->moduleHandler,
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/schemadotorg/tests/src/Unit/Breadcrumb/SchemaDotOrgBreadcrumbBuilderTest.php:23

    ---------- begin diff ----------
@@ @@
     // @see \Drupal\Core\Breadcrumb\Breadcrumb
     // @see \Drupal\Core\Cache\RefinableCacheableDependencyTrait
     // @see \Drupal\Core\Cache\Cache
-    $cache_contexts_manager = $this->getMockBuilder('Drupal\Core\Cache\Context\CacheContextsManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock('Drupal\Core\Cache\Context\CacheContextsManager');
     // Always return TRUE for ::assertValidTokens so that any cache context
     // will be accepted.
     $cache_contexts_manager->method('assertValidTokens')->willReturn(TRUE);
@@ @@
    * @covers ::applies
    */
   public function testApplies($expected, $route_name = NULL) {
-    $breadcrumb_builder = $this->getMockBuilder('\Drupal\schemadotorg\Breadcrumb\SchemaDotOrgBreadcrumbBuilder')
-      ->onlyMethods([])
-      ->getMock();
+    $breadcrumb_builder = $this->createMock('\Drupal\schemadotorg\Breadcrumb\SchemaDotOrgBreadcrumbBuilder');

     $route_match = $this->createMock('Drupal\Core\Routing\RouteMatchInterface');
     $route_match->expects($this->once())
@@ @@
    */
   public function testBuild() {
     // Build a breadcrumb builder to test.
-    $breadcrumb_builder = $this->getMockBuilder('\Drupal\schemadotorg\Breadcrumb\SchemaDotOrgBreadcrumbBuilder')
-      ->onlyMethods([])
-      ->getMock();
+    $breadcrumb_builder = $this->createMock('\Drupal\schemadotorg\Breadcrumb\SchemaDotOrgBreadcrumbBuilder');

     // Add a translation manager for t().
     $translation_manager = $this->getStringTranslationStub();
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgSchemaTypeManagerTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(['schemadotorg']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgNamesTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(['schemadotorg']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingTypeStorageTest.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('schemadotorg_mapping_type');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingTypeEntityTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingStorageTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('schemadotorg_mapping');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingManagerTest.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('schemadotorg_mapping');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingFormTest.php:52

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('schemadotorg_mapping');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgMappingEntityTest.php:62

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('schemadotorg_mapping');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


29) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgKernelEntityTestBase.php:91

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('schemadotorg_mapping');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


30) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgEntityFieldManagerTest.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Install the Schema.org mapping entity.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


31) modules/contrib/schemadotorg/tests/src/Kernel/SchemaDotOrgAutocompleteControllerTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('schemadotorg_mapping_type');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 31 files have been changed by Rector                                      

