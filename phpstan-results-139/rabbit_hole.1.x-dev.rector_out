modules/contrib/rabbit_hole/modules/rh_commerce/rh_commerce.module
modules/contrib/rabbit_hole/modules/rh_media/tests/src/Functional/MediaBehaviorSettingsFormTest.php
modules/contrib/rabbit_hole/modules/rh_user/tests/src/Functional/UserBehaviorSettingsFormTest.php
modules/contrib/rabbit_hole/src/Exception/InvalidRedirectResponseException.php
modules/contrib/rabbit_hole/src/FormManglerService.php
modules/contrib/rabbit_hole/modules/rh_commerce/src/Plugin/RabbitHoleEntityPlugin/Product.php
modules/contrib/rabbit_hole/modules/rh_commerce/tests/src/Functional/ProductBehaviorInvocationTest.php
modules/contrib/rabbit_hole/rabbit_hole.api.php
modules/contrib/rabbit_hole/modules/rh_commerce/tests/src/Functional/ProductBehaviorSettingsFormTest.php
modules/contrib/rabbit_hole/rabbit_hole.install
modules/contrib/rabbit_hole/rabbit_hole.module
modules/contrib/rabbit_hole/modules/rh_file/rh_file.module
modules/contrib/rabbit_hole/modules/rh_file/src/Plugin/RabbitHoleEntityPlugin/File.php
modules/contrib/rabbit_hole/modules/rh_group/rh_group.module
modules/contrib/rabbit_hole/modules/rh_node/rh_node.module
modules/contrib/rabbit_hole/modules/rh_group/src/Plugin/RabbitHoleEntityPlugin/Group.php
modules/contrib/rabbit_hole/modules/rh_group/tests/src/Functional/GroupBehaviorInvocationTest.php
modules/contrib/rabbit_hole/modules/rh_node/src/Plugin/RabbitHoleEntityPlugin/Node.php
modules/contrib/rabbit_hole/rabbit_hole.post_update.php
modules/contrib/rabbit_hole/modules/rh_group/tests/src/Functional/GroupBehaviorSettingsFormTest.php
modules/contrib/rabbit_hole/modules/rh_node/tests/src/Functional/NodeBehaviorInvocationTest.php
modules/contrib/rabbit_hole/modules/rh_node/tests/src/Functional/NodeBehaviorSettingsFormTest.php
modules/contrib/rabbit_hole/src/Annotation/RabbitHoleBehaviorPlugin.php
modules/contrib/rabbit_hole/src/Annotation/RabbitHoleEntityPlugin.php
modules/contrib/rabbit_hole/src/BehaviorInvoker.php
modules/contrib/rabbit_hole/modules/rh_media/rh_media.module
modules/contrib/rabbit_hole/modules/rh_media/src/Plugin/RabbitHoleEntityPlugin/Media.php
modules/contrib/rabbit_hole/modules/rh_paragraphs_library/rh_paragraphs_library.module
modules/contrib/rabbit_hole/modules/rh_paragraphs_library/src/Plugin/RabbitHoleEntityPlugin/ParagraphsLibraryItem.php
modules/contrib/rabbit_hole/modules/rh_taxonomy/rh_taxonomy.module
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleBehaviorPlugin/AccessDenied.php
modules/contrib/rabbit_hole/modules/rh_taxonomy/src/Plugin/RabbitHoleEntityPlugin/Taxonomy.php
modules/contrib/rabbit_hole/modules/rh_taxonomy/tests/src/Functional/TaxonomyBehaviorInvocationTest.php
modules/contrib/rabbit_hole/modules/rh_taxonomy/tests/src/Functional/TaxonomyBehaviorSettingsFormTest.php
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleBehaviorPlugin/DisplayPage.php
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleBehaviorPlugin/PageNotFound.php
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleBehaviorPlugin/PageRedirect.php
modules/contrib/rabbit_hole/modules/rh_user/rh_user.module
modules/contrib/rabbit_hole/modules/rh_user/rh_user.post_update.php
modules/contrib/rabbit_hole/modules/rh_user/src/Plugin/RabbitHoleEntityPlugin/User.php
modules/contrib/rabbit_hole/modules/rh_user/tests/src/Functional/UserBehaviorInvocationTest.php
modules/contrib/rabbit_hole/src/BehaviorInvokerInterface.php
modules/contrib/rabbit_hole/src/BehaviorSettingsInterface.php
modules/contrib/rabbit_hole/src/BehaviorSettingsManager.php
modules/contrib/rabbit_hole/src/BehaviorSettingsManagerInterface.php
modules/contrib/rabbit_hole/src/Entity/BehaviorSettings.php
modules/contrib/rabbit_hole/src/EntityExtender.php
modules/contrib/rabbit_hole/src/EntityExtenderInterface.php
modules/contrib/rabbit_hole/src/EventSubscriber/RabbitHoleSubscriber.php
modules/contrib/rabbit_hole/src/Exception/InvalidBehaviorSettingException.php
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleBehaviorPluginBase.php
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleBehaviorPluginInterface.php
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleBehaviorPluginManager.php
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleEntityPluginBase.php
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleEntityPluginInterface.php
modules/contrib/rabbit_hole/src/Plugin/RabbitHoleEntityPluginManager.php
modules/contrib/rabbit_hole/src/RabbitHolePermissionGenerator.php
modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorInvocationTestBase.php
modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorPluginTest.php
modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorSettingsEntityMethodsTest.php
modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorSettingsFormTestBase.php
modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorSettingsTest.php
modules/contrib/rabbit_hole/tests/src/Functional/RabbitHolePageRedirectActionTest.php

8 files with changes
====================

1) modules/contrib/rabbit_hole/modules/rh_commerce/tests/src/Functional/ProductBehaviorSettingsFormTest.php:48

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->store = $this->createStore();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/rabbit_hole/rabbit_hole.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\ContentEntityInterface;
 /**
  * @file
  * Hooks provided by the Rabbit Hole module.
@@ @@
  * @param \Drupal\Core\Entity\ContentEntityInterface $entity
  *   The entity to apply rabbit hole behavior on.
  */
-function hook_rabbit_hole_values_alter(array &$values, \Drupal\Core\Entity\ContentEntityInterface $entity) {
+function hook_rabbit_hole_values_alter(array &$values, ContentEntityInterface $entity) {
   // Disable bypassing access for everyone (including administrators).
   $values['bypass_access'] = FALSE;

@@ @@
  * @param \Drupal\Core\Entity\ContentEntityInterface $entity
  *   The entity to apply rabbit hole behavior on.
  */
-function hook_rabbit_hole_response_alter(Response &$response, \Drupal\Core\Entity\ContentEntityInterface $entity) {
+function hook_rabbit_hole_response_alter(Response &$response, ContentEntityInterface $entity) {
   if ($response instanceof RedirectResponse) {
     $response = new TrustedRedirectResponse('https://example.com');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


3) modules/contrib/rabbit_hole/tests/src/Functional/RabbitHolePageRedirectActionTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->behaviorSettingsManager = $this->container->get('rabbit_hole.behavior_settings_manager');
     $this->behaviorSettingsManager->saveBehaviorSettings([
@@ @@
     $node->save();

     $this->drupalGet($node->toUrl());
-    $expected_url = file_create_url($file->getFileUri());
+    $expected_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     $this->assertSession()->addressEquals($expected_url);
     $this->assertSession()->responseContains('first');

@@ @@
     $media->save();

     $this->drupalGet($node->toUrl());
-    $expected_url = file_create_url($file2->getFileUri());
+    $expected_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file2->getFileUri());
     $this->assertSession()->addressEquals($expected_url);
     $this->assertSession()->responseContains('second');
   }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorSettingsTest.php:56

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->configFactory = $this->container->get('config.factory');
     $this->behaviorSettingsManager = $this->container
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorSettingsFormTestBase.php:47

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->behaviorSettingsManager = $this->container->get('rabbit_hole.behavior_settings_manager');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorSettingsEntityMethodsTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->configFactory = $this->container->get('config.factory');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorPluginTest.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
     $this->manager = $this->container->get('plugin.manager.rabbit_hole_behavior_plugin');
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/rabbit_hole/tests/src/Functional/RabbitHoleBehaviorInvocationTestBase.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->behaviorSettingsManager = $this->container->get('rabbit_hole.behavior_settings_manager');
     $this->drupalLogin($this->drupalCreateUser($this->getViewPermissions()));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

