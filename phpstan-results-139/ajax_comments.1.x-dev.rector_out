modules/contrib/ajax_comments/ajax_comments.module
modules/contrib/ajax_comments/src/Ajax/ajaxCommentsScrollToElementCommand.php
modules/contrib/ajax_comments/src/Controller/AjaxCommentsController.php
modules/contrib/ajax_comments/src/FieldSettingsHelper.php
modules/contrib/ajax_comments/src/Form/AjaxCommentsDeleteForm.php
modules/contrib/ajax_comments/src/Form/AjaxCommentsForm.php
modules/contrib/ajax_comments/src/Form/SettingsForm.php
modules/contrib/ajax_comments/src/TempStore.php
modules/contrib/ajax_comments/src/Tests/AjaxCommentsSettingsFormTest.php
modules/contrib/ajax_comments/src/Utility.php
modules/contrib/ajax_comments/tests/src/FunctionalJavascript/AjaxCommentsFunctionalTest.php

3 files with changes
====================

1) modules/contrib/ajax_comments/tests/src/FunctionalJavascript/AjaxCommentsFunctionalTest.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->entityTypeManager = $this->container->get('entity_type.manager');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/ajax_comments/src/Tests/AjaxCommentsSettingsFormTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $admin_roles = $this->adminUser->getRoles();
     $admin_role = Role::load(reset($admin_roles));
@@ @@
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('admin/config/content/ajax_comments');
     // Check that the page loads.
-    $this->assertResponse(200);
-    $this->assertText(
-      t("Enable Ajax Comments on the comment fields' display settings"),
-      'The list of bundles appears on the form.'
-    );
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->pageTextContains(t("Enable Ajax Comments on the comment fields' display settings"));
     $this->clickLink(t('Content: Article'));
-    $this->assertUrl('/admin/structure/types/manage/article/display', [], 'There is a link to the entity view display form for articles.');
-    $this->assertResponse(200);
+    $this->assertSession()->addressEquals('/admin/structure/types/manage/article/display', [], 'There is a link to the entity view display form for articles.');
+    $this->assertSession()->statusCodeEquals(200);

     // Open comment settings.
-    $this->drupalPostForm(NULL, [], 'comment_settings_edit');
+    $this->submitForm([], 'comment_settings_edit');
     // Disable ajax comments.
-    $this->drupalPostForm(NULL, ['fields[comment][settings_edit_form][third_party_settings][ajax_comments][enable_ajax_comments]' => '0'], 'comment_plugin_settings_update');
+    $this->submitForm(['fields[comment][settings_edit_form][third_party_settings][ajax_comments][enable_ajax_comments]' => '0'], 'comment_plugin_settings_update');
     // Save display mode.
-    $this->drupalPostForm(NULL, [], t('Save'));
-    $this->assertResponse(200);
+    $this->submitForm([], t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * AssertTextRector
 * AssertUrlRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/ajax_comments/ajax_comments.module:207

    ---------- begin diff ----------
@@ @@
 /**
  * Implements hook_form_FORM_ID_alter().
  */
-function ajax_comments_form_comment_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function ajax_comments_form_comment_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   /** @var \Drupal\ajax_comments\FieldSettingsHelper $field_settings_helper */
   $field_settings_helper = \Drupal::service('ajax_comments.field_settings_helper');
   /** @var \Drupal\Core\Routing\CurrentRouteMatch $current_route */
@@ @@

   // Set unique id (need for Views with enabled AJAX).
   if (empty($form['actions']['submit']['#id'])) {
-    $form['actions']['submit']['#id'] = \Drupal\Component\Utility\Html::getUniqueId('edit-' . $id);
+    $form['actions']['submit']['#id'] = Html::getUniqueId('edit-' . $id);
   }

   $form['actions']['preview']['#ajax'] = [
@@ @@
   ];
   // Set unique id (need for Views with enabled AJAX).
   if (empty($form['actions']['preview']['#id'])) {
-    $form['actions']['preview']['#id'] = \Drupal\Component\Utility\Html::getUniqueId('preview-' . $id);
+    $form['actions']['preview']['#id'] = Html::getUniqueId('preview-' . $id);
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

