diff --git a/modules/opigno_tincan_badges/opigno_tincan_badges.module b/modules/opigno_tincan_badges/opigno_tincan_badges.module
index 9c56328..09705b4 100644
--- a/modules/opigno_tincan_badges/opigno_tincan_badges.module
+++ b/modules/opigno_tincan_badges/opigno_tincan_badges.module
@@ -150,7 +150,7 @@ function _opigno_tincan_badges_create_and_send_statements($entity) {
   // Load image.
   $badge_image_id = $media_entity->get('field_media_image')->target_id;
   $badge_image = File::load($badge_image_id);
-  $image_url = file_create_url($badge_image->getFileUri());
+  $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($badge_image->getFileUri());
   // Add an extension in the result.
   $statement->setResult([
     'extensions' => [
diff --git a/modules/opigno_tincan_live_meeting/src/EventSubscriber/OpignoTincanLiveMeeting.php b/modules/opigno_tincan_live_meeting/src/EventSubscriber/OpignoTincanLiveMeeting.php
index d601cfc..efdce00 100644
--- a/modules/opigno_tincan_live_meeting/src/EventSubscriber/OpignoTincanLiveMeeting.php
+++ b/modules/opigno_tincan_live_meeting/src/EventSubscriber/OpignoTincanLiveMeeting.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_tincan_live_meeting\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\opigno_moxtra\Entity\Meeting;
@@ -10,7 +11,6 @@ use Drupal\opigno_tincan_api\OpignoTinCanApiStatements;
 use Drupal\opigno_tincan_api\OpignoTincanApiTinCanActivityDefinitionTypes;
 use Drupal\opigno_tincan_api\OpignoTincanApiTinCanVerbs;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use TinCan\Context;
@@ -76,7 +76,7 @@ class OpignoTincanLiveMeeting implements EventSubscriberInterface {
   /**
    * Called whenever the tincanLiveMeeting event is dispatched.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   Event.
    *
    * @throws \Exception
