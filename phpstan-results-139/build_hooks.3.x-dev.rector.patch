diff --git a/modules/build_hooks_bitbucket/tests/src/Unit/BitbucketManagerTest.php b/modules/build_hooks_bitbucket/tests/src/Unit/BitbucketManagerTest.php
index dffdc8f..0ea2bf4 100644
--- a/modules/build_hooks_bitbucket/tests/src/Unit/BitbucketManagerTest.php
+++ b/modules/build_hooks_bitbucket/tests/src/Unit/BitbucketManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\build_hooks_bitbucket\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\build_hooks\BuildHookDetails;
 use Drupal\build_hooks_bitbucket\BitbucketManager;
 use Drupal\Tests\UnitTestCase;
@@ -14,6 +15,7 @@ use GuzzleHttp\ClientInterface;
  */
 class BitbucketManagerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Tests getting build hook details..
    */
diff --git a/modules/build_hooks_circleci/tests/src/Kernel/CircleBuildHookTest.php b/modules/build_hooks_circleci/tests/src/Kernel/CircleBuildHookTest.php
index cc47457..eda84cb 100644
--- a/modules/build_hooks_circleci/tests/src/Kernel/CircleBuildHookTest.php
+++ b/modules/build_hooks_circleci/tests/src/Kernel/CircleBuildHookTest.php
@@ -26,7 +26,7 @@ class CircleBuildHookTest extends BuildHooksKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('system');
     $this->installConfig('build_hooks_circleci');
diff --git a/modules/build_hooks_netlify/tests/src/Kernel/NetlifyBuildHooksTest.php b/modules/build_hooks_netlify/tests/src/Kernel/NetlifyBuildHooksTest.php
index 14b6ca0..2698e94 100644
--- a/modules/build_hooks_netlify/tests/src/Kernel/NetlifyBuildHooksTest.php
+++ b/modules/build_hooks_netlify/tests/src/Kernel/NetlifyBuildHooksTest.php
@@ -22,7 +22,7 @@ class NetlifyBuildHooksTest extends BuildHooksKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('build_hooks_netlify');
   }
diff --git a/src/Event/BuildTrigger.php b/src/Event/BuildTrigger.php
index b239855..7e1de79 100644
--- a/src/Event/BuildTrigger.php
+++ b/src/Event/BuildTrigger.php
@@ -2,12 +2,12 @@
 
 namespace Drupal\build_hooks\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\build_hooks\BuildHookDetails;
 use Drupal\build_hooks\Entity\DeploymentInterface;
 use Drupal\build_hooks\Entity\FrontendEnvironmentInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Psr\Http\Message\ResponseInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines a class for triggering a build.
diff --git a/src/Event/ResponseEvent.php b/src/Event/ResponseEvent.php
index 8bb8aee..633f58f 100755
--- a/src/Event/ResponseEvent.php
+++ b/src/Event/ResponseEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\build_hooks\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Psr\Http\Message\ResponseInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\build_hooks\Plugin\FrontendEnvironmentInterface;
 
 /**
diff --git a/src/Trigger.php b/src/Trigger.php
index 9d2dce0..f80bf2f 100755
--- a/src/Trigger.php
+++ b/src/Trigger.php
@@ -248,7 +248,7 @@ class Trigger implements TriggerInterface {
     $deployment = $deployment_storage->getOrCreateNextDeploymentForEnvironment($frontendEnvironment);
     $triggerEvent = new BuildTrigger($buildHookDetails, $frontendEnvironment, $deployment);
     $frontendEnvironment->getPlugin()->preDeploymentTrigger($triggerEvent);
-    $this->eventDispatcher->dispatch(BuildTrigger::class, $triggerEvent);
+    $this->eventDispatcher->dispatch($triggerEvent);
     if (!$triggerEvent->shouldBuild()) {
       return $triggerEvent;
     }
@@ -258,7 +258,7 @@ class Trigger implements TriggerInterface {
       $buildHookDetails->getOptions()
     );
     $event = new ResponseEvent($response, $frontendEnvironment->getPlugin());
-    $this->eventDispatcher->dispatch(ResponseEvent::EVENT_NAME, $event);
+    $this->eventDispatcher->dispatch($event, ResponseEvent::EVENT_NAME);
     return $triggerEvent->setResponse($response);
   }
 
diff --git a/tests/src/Functional/UiTest.php b/tests/src/Functional/UiTest.php
index 80849eb..48d53a0 100644
--- a/tests/src/Functional/UiTest.php
+++ b/tests/src/Functional/UiTest.php
@@ -146,7 +146,7 @@ class UiTest extends BrowserTestBase {
    */
   private function assertAddEnvironmentForPluginFunctionality() {
     $assert = $this->assertSession();
-    $query = $assert->buildXPathQuery('//a[contains(@href, :href)]', [
+    $query = $this->assertSession()->buildXPathQuery('//a[contains(@href, :href)]', [
       ':href' => Url::fromRoute('build_hooks.admin_add', [
         'plugin_id' => 'build_hooks_test',
       ])->toString(),
diff --git a/tests/src/Kernel/BuildHooksKernelTestBase.php b/tests/src/Kernel/BuildHooksKernelTestBase.php
index 25f089f..227e455 100644
--- a/tests/src/Kernel/BuildHooksKernelTestBase.php
+++ b/tests/src/Kernel/BuildHooksKernelTestBase.php
@@ -48,7 +48,7 @@ abstract class BuildHooksKernelTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('build_hooks');
     $this->installConfig('system');
diff --git a/tests/src/Kernel/DeploymentStorageHandlerTest.php b/tests/src/Kernel/DeploymentStorageHandlerTest.php
index fc78fa3..b3f95df 100644
--- a/tests/src/Kernel/DeploymentStorageHandlerTest.php
+++ b/tests/src/Kernel/DeploymentStorageHandlerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\build_hooks\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\Tests\build_hooks\Traits\EnvironmentTestTrait;
@@ -14,6 +15,7 @@ use GuzzleHttp\Psr7\Response;
  */
 class DeploymentStorageHandlerTest extends BuildHooksKernelTestBase {
 
+  use ProphecyTrait;
   use EnvironmentTestTrait;
 
   const MOCK_TIME = 1600745446;
@@ -28,7 +30,7 @@ class DeploymentStorageHandlerTest extends BuildHooksKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->createTestEnvironment();
     $time = $this->prophesize(TimeInterface::class);
diff --git a/tests/src/Kernel/DeploymentValidationTest.php b/tests/src/Kernel/DeploymentValidationTest.php
index 07cd8ed..80fdb9b 100644
--- a/tests/src/Kernel/DeploymentValidationTest.php
+++ b/tests/src/Kernel/DeploymentValidationTest.php
@@ -17,7 +17,7 @@ class DeploymentValidationTest extends BuildHooksKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->createTestEnvironment();
   }
@@ -36,7 +36,7 @@ class DeploymentValidationTest extends BuildHooksKernelTestBase {
     /** @var \Drupal\Core\Entity\EntityConstraintViolationList $errors */
     $errors = $another->validate();
     $this->assertCount(1, $errors);
-    $this->assertRegExp('/There is already an active deployment for this environment/', (string) $errors[0]->getMessage());
+    $this->assertMatchesRegularExpression('/There is already an active deployment for this environment/', (string) $errors[0]->getMessage());
     $this->assertEquals('status', $errors[0]->getPropertyPath());
   }
 
