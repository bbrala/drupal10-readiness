diff --git a/search_api_attachments.api.php b/search_api_attachments.api.php
index c526418..04db67e 100644
--- a/search_api_attachments.api.php
+++ b/search_api_attachments.api.php
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\search_api\Item\ItemInterface;
+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Hooks provided by the "Search API attachments" module.
@@ -23,7 +25,7 @@
  * @return bool|null
  *   Return FALSE if the attachment should not be indexed.
  */
-function hook_search_api_attachments_indexable($file, \Drupal\search_api\Item\ItemInterface $item, $field_name) {
+function hook_search_api_attachments_indexable($file, ItemInterface $item, $field_name) {
   // Don't index files on entities owned by our bulk upload bot accounts.
   if (in_array($item->getOriginalObject()->uid, my_module_blocked_uids())) {
     return FALSE;
@@ -38,7 +40,7 @@ function hook_search_api_attachments_indexable($file, \Drupal\search_api\Item\It
  * @param \Drupal\Core\Entity\EntityInterface $entity
  *   The entity where the file was referenced in.
  */
-function hook_search_api_attachments_content_extracted($file, \Drupal\Core\Entity\EntityInterface $entity) {
+function hook_search_api_attachments_content_extracted($file, EntityInterface $entity) {
   // Search for nodes using media item in specific fields.
   if ($entity->getEntityTypeId() === 'media') {
     $query = \Drupal::entityQuery('node')
diff --git a/src/ExtractFileValidator.php b/src/ExtractFileValidator.php
index 6f9ad31..d7c7c43 100644
--- a/src/ExtractFileValidator.php
+++ b/src/ExtractFileValidator.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\search_api_attachments;
 
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Component\Utility\Bytes;
 
 /**
@@ -17,17 +17,17 @@ class ExtractFileValidator {
   /**
    * The route match.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var \Symfony\Component\Mime\MimeTypesInterface
    */
   protected $mimeTypeGuesser;
 
   /**
    * Constructs a new ExtractFileValidator class.
    *
-   * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mimeTypeGuesser
+   * @param \Symfony\Component\Mime\MimeTypesInterface $mimeTypeGuesser
    *   Mime type guesser service.
    */
-  public function __construct(MimeTypeGuesserInterface $mimeTypeGuesser) {
+  public function __construct(MimeTypesInterface $mimeTypeGuesser) {
     $this->mimeTypeGuesser = $mimeTypeGuesser;
   }
 
diff --git a/src/Form/TextExtractorFormSettings.php b/src/Form/TextExtractorFormSettings.php
index b8258cd..526227a 100644
--- a/src/Form/TextExtractorFormSettings.php
+++ b/src/Form/TextExtractorFormSettings.php
@@ -328,7 +328,7 @@ class TextExtractorFormSettings extends ConfigFormBase {
     $file = $this->entityTypeManager->getStorage('file')->loadByProperties($values);
     if (empty($file)) {
       // Copy the source file to public directory.
-      $source = drupal_get_path('module', 'search_api_attachments');
+      $source = \Drupal::service('extension.list.module')->getPath('search_api_attachments');
       $source .= '/data/search_api_attachments_test_extraction.pdf';
       copy($source, $filepath);
       // Create the file object.
diff --git a/src/Plugin/search_api_attachments/SolrExtractor.php b/src/Plugin/search_api_attachments/SolrExtractor.php
index 87770d6..32d159f 100644
--- a/src/Plugin/search_api_attachments/SolrExtractor.php
+++ b/src/Plugin/search_api_attachments/SolrExtractor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_attachments\Plugin\search_api_attachments;
 
+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\File\FileSystemInterface;
@@ -11,7 +12,6 @@ use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\search_api_attachments\TextExtractorPluginBase;
 use Drupal\search_api_solr\Plugin\search_api\backend\SearchApiSolrBackend;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 use Drupal\file\Entity\File;
 
 /**
@@ -35,7 +35,7 @@ class SolrExtractor extends TextExtractorPluginBase {
   /**
    * {@inheritdoc}
    */
-  public function __construct(array $configuration, $plugin_id, array $plugin_definition, ConfigFactoryInterface $config_factory, StreamWrapperManagerInterface $stream_wrapper_manager, MimeTypeGuesserInterface $mime_type_guesser, MessengerInterface $messenger, FileSystemInterface $file_system, EntityTypeManagerInterface $entity_type_manager) {
+  public function __construct(array $configuration, $plugin_id, array $plugin_definition, ConfigFactoryInterface $config_factory, StreamWrapperManagerInterface $stream_wrapper_manager, MimeTypesInterface $mime_type_guesser, MessengerInterface $messenger, FileSystemInterface $file_system, EntityTypeManagerInterface $entity_type_manager) {
     parent::__construct($configuration, $plugin_id, $plugin_definition, $config_factory, $stream_wrapper_manager, $mime_type_guesser, $messenger, $file_system);
     $this->entityTypeManager = $entity_type_manager;
   }
diff --git a/src/Plugin/search_api_attachments/TikaServerExtractor.php b/src/Plugin/search_api_attachments/TikaServerExtractor.php
index 825f942..c97f339 100644
--- a/src/Plugin/search_api_attachments/TikaServerExtractor.php
+++ b/src/Plugin/search_api_attachments/TikaServerExtractor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_attachments\Plugin\search_api_attachments;
 
+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -10,7 +11,6 @@ use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\search_api_attachments\TextExtractorPluginBase;
 use GuzzleHttp\ClientInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 use Drupal\file\Entity\File;
 
 /**
@@ -34,7 +34,7 @@ class TikaServerExtractor extends TextExtractorPluginBase {
   /**
    * {@inheritdoc}
    */
-  public function __construct(array $configuration, $plugin_id, array $plugin_definition, ConfigFactoryInterface $config_factory, StreamWrapperManagerInterface $stream_wrapper_manager, MimeTypeGuesserInterface $mime_type_guesser, MessengerInterface $messenger, FileSystemInterface $file_system, ClientInterface $http_client) {
+  public function __construct(array $configuration, $plugin_id, array $plugin_definition, ConfigFactoryInterface $config_factory, StreamWrapperManagerInterface $stream_wrapper_manager, MimeTypesInterface $mime_type_guesser, MessengerInterface $messenger, FileSystemInterface $file_system, ClientInterface $http_client) {
     parent::__construct($configuration, $plugin_id, $plugin_definition, $config_factory, $stream_wrapper_manager, $mime_type_guesser, $messenger, $file_system);
     $this->httpClient = $http_client;
   }
diff --git a/src/TextExtractorPluginBase.php b/src/TextExtractorPluginBase.php
index 5ad991d..b72e1ce 100644
--- a/src/TextExtractorPluginBase.php
+++ b/src/TextExtractorPluginBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_attachments;
 
+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -11,7 +12,6 @@ use Drupal\Core\StreamWrapper\StreamWrapperInterface;
 use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\file\Entity\File;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 
 /**
  * Base class for plugins able to extract file content.
@@ -42,7 +42,7 @@ abstract class TextExtractorPluginBase extends PluginBase implements TextExtract
   /**
    * Mime type guesser service.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var \Symfony\Component\Mime\MimeTypesInterface
    */
   protected $mimeTypeGuesser;
 
@@ -57,7 +57,7 @@ abstract class TextExtractorPluginBase extends PluginBase implements TextExtract
   /**
    * {@inheritdoc}
    */
-  public function __construct(array $configuration, $plugin_id, array $plugin_definition, ConfigFactoryInterface $config_factory, StreamWrapperManagerInterface $stream_wrapper_manager, MimeTypeGuesserInterface $mime_type_guesser, MessengerInterface $messenger) {
+  public function __construct(array $configuration, $plugin_id, array $plugin_definition, ConfigFactoryInterface $config_factory, StreamWrapperManagerInterface $stream_wrapper_manager, MimeTypesInterface $mime_type_guesser, MessengerInterface $messenger) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
     $this->configFactory = $config_factory;
     $this->streamWrapperManager = $stream_wrapper_manager;
