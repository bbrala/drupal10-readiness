diff --git a/modules/search_api_db/search_api_db.api.php b/modules/search_api_db/search_api_db.api.php
index fcbc4597..055b6d41 100644
--- a/modules/search_api_db/search_api_db.api.php
+++ b/modules/search_api_db/search_api_db.api.php
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Database\Query\SelectInterface;
+use Drupal\search_api\Query\QueryInterface;
 /**
  * @file
  * Hooks provided by the Database Search module.
@@ -28,7 +30,7 @@
  * @see https://www.drupal.org/node/3103591
  * @see \Drupal\search_api_db\Plugin\search_api\backend\Database::preQuery()
  */
-function hook_search_api_db_query_alter(\Drupal\Core\Database\Query\SelectInterface &$db_query, \Drupal\search_api\Query\QueryInterface $query) {
+function hook_search_api_db_query_alter(SelectInterface &$db_query, QueryInterface $query) {
   // If the option was set on the query, add additional SQL conditions.
   if ($custom = $query->getOption('custom_sql_conditions')) {
     foreach ($custom as $condition) {
diff --git a/modules/search_api_db/search_api_db_defaults/search_api_db_defaults.install b/modules/search_api_db/search_api_db_defaults/search_api_db_defaults.install
index e740fb67..97fc4917 100644
--- a/modules/search_api_db/search_api_db_defaults/search_api_db_defaults.install
+++ b/modules/search_api_db/search_api_db_defaults/search_api_db_defaults.install
@@ -18,7 +18,7 @@ function search_api_db_defaults_requirements($phase) {
     // itself, the class autoloader will not be able to find the
     // \Drupal\search_api\IndexListBuilder class on its own. Load it manually.
     if (!class_exists(IndexListBuilder::class)) {
-      $search_api_path = drupal_get_path('module', 'search_api');
+      $search_api_path = \Drupal::service('extension.list.module')->getPath('search_api');
       require_once $search_api_path . '/src/IndexListBuilder.php';
     }
 
diff --git a/modules/search_api_db/search_api_db_defaults/tests/src/Functional/IntegrationTest.php b/modules/search_api_db/search_api_db_defaults/tests/src/Functional/IntegrationTest.php
index 1da19bce..ae5dfa10 100644
--- a/modules/search_api_db/search_api_db_defaults/tests/src/Functional/IntegrationTest.php
+++ b/modules/search_api_db/search_api_db_defaults/tests/src/Functional/IntegrationTest.php
@@ -43,7 +43,7 @@ class IntegrationTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create user with content access permission to see if the view is
diff --git a/modules/search_api_db/src/Tests/Update/SearchApiDbUpdate8102Test.php b/modules/search_api_db/src/Tests/Update/SearchApiDbUpdate8102Test.php
index fc54329b..317704c0 100644
--- a/modules/search_api_db/src/Tests/Update/SearchApiDbUpdate8102Test.php
+++ b/modules/search_api_db/src/Tests/Update/SearchApiDbUpdate8102Test.php
@@ -20,7 +20,7 @@ class SearchApiDbUpdate8102Test extends UpdatePathTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // We need to manually set our entity types as "installed".
diff --git a/modules/search_api_db/tests/src/Kernel/AutocompleteTest.php b/modules/search_api_db/tests/src/Kernel/AutocompleteTest.php
index 8868d140..e20ab74f 100644
--- a/modules/search_api_db/tests/src/Kernel/AutocompleteTest.php
+++ b/modules/search_api_db/tests/src/Kernel/AutocompleteTest.php
@@ -54,7 +54,7 @@ class AutocompleteTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/modules/search_api_db/tests/src/Kernel/BackendTest.php b/modules/search_api_db/tests/src/Kernel/BackendTest.php
index 68234e2c..2ccb629b 100644
--- a/modules/search_api_db/tests/src/Kernel/BackendTest.php
+++ b/modules/search_api_db/tests/src/Kernel/BackendTest.php
@@ -64,7 +64,7 @@ class BackendTest extends BackendTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create a dummy table that will cause a naming conflict with the backend's
diff --git a/search_api.api.php b/search_api.api.php
index 9e36b45c..73f07e75 100644
--- a/search_api.api.php
+++ b/search_api.api.php
@@ -1,5 +1,12 @@
 <?php
 
+use Drupal\search_api\ServerInterface;
+use Drupal\search_api_solr\Plugin\search_api\backend\SearchApiSolrBackend;
+use Drupal\search_api\IndexInterface;
+use Drupal\search_api\Utility\Utility;
+use Drupal\search_api\Query\QueryInterface;
+use Drupal\search_api\Query\ResultSetInterface;
+use Drupal\Core\Database\Database;
 /**
  * @file
  * Hooks provided by the Search API module.
@@ -48,8 +55,8 @@ function hook_search_api_backend_info_alter(array &$backend_info) {
  * @see https://www.drupal.org/node/3059866
  * @see \Drupal\search_api\Backend\BackendSpecificInterface::getSupportedFeatures()
  */
-function hook_search_api_server_features_alter(array &$features, \Drupal\search_api\ServerInterface $server) {
-  if ($server->getBackend() instanceof \Drupal\search_api_solr\Plugin\search_api\backend\SearchApiSolrBackend) {
+function hook_search_api_server_features_alter(array &$features, ServerInterface $server) {
+  if ($server->getBackend() instanceof SearchApiSolrBackend) {
     $features[] = 'my_custom_feature';
   }
 }
@@ -281,9 +288,9 @@ function hook_search_api_views_field_handler_mapping_alter(array &$mapping) {
  *
  * @see https://www.drupal.org/node/3059866
  */
-function hook_search_api_index_items_alter(\Drupal\search_api\IndexInterface $index, array &$items) {
+function hook_search_api_index_items_alter(IndexInterface $index, array &$items) {
   foreach ($items as $item_id => $item) {
-    list(, $raw_id) = \Drupal\search_api\Utility\Utility::splitCombinedId($item->getId());
+    list(, $raw_id) = Utility::splitCombinedId($item->getId());
     if ($raw_id % 5 == 0) {
       unset($items[$item_id]);
     }
@@ -309,7 +316,7 @@ function hook_search_api_index_items_alter(\Drupal\search_api\IndexInterface $in
  *
  * @see https://www.drupal.org/node/3059866
  */
-function hook_search_api_items_indexed(\Drupal\search_api\IndexInterface $index, array $item_ids) {
+function hook_search_api_items_indexed(IndexInterface $index, array $item_ids) {
   if ($index->isValidDatasource('entity:node')) {
     // Note that this is just an example, and would only work if there are only
     // nodes indexed in that index (and even then the printed IDs would probably
@@ -332,7 +339,7 @@ function hook_search_api_items_indexed(\Drupal\search_api\IndexInterface $index,
  *
  * @see https://www.drupal.org/node/3059866
  */
-function hook_search_api_query_alter(\Drupal\search_api\Query\QueryInterface $query) {
+function hook_search_api_query_alter(QueryInterface $query) {
   // Do not run for queries with a certain tag.
   if ($query->hasTag('example_tag')) {
     return;
@@ -361,7 +368,7 @@ function hook_search_api_query_alter(\Drupal\search_api\Query\QueryInterface $qu
  *
  * @see https://www.drupal.org/node/3059866
  */
-function hook_search_api_query_TAG_alter(\Drupal\search_api\Query\QueryInterface $query) {
+function hook_search_api_query_TAG_alter(QueryInterface $query) {
   // Exclude the node with ID 10 from the search results.
   $fields = $query->getIndex()->getFields();
   foreach ($query->getIndex()->getDatasources() as $datasource_id => $datasource) {
@@ -387,7 +394,7 @@ function hook_search_api_query_TAG_alter(\Drupal\search_api\Query\QueryInterface
  *
  * @see https://www.drupal.org/node/3059866
  */
-function hook_search_api_results_alter(\Drupal\search_api\Query\ResultSetInterface &$results) {
+function hook_search_api_results_alter(ResultSetInterface &$results) {
   $results->setExtraData('example_hook_invoked', microtime(TRUE));
 }
 
@@ -405,7 +412,7 @@ function hook_search_api_results_alter(\Drupal\search_api\Query\ResultSetInterfa
  *
  * @see https://www.drupal.org/node/3059866
  */
-function hook_search_api_results_TAG_alter(\Drupal\search_api\Query\ResultSetInterface &$results) {
+function hook_search_api_results_TAG_alter(ResultSetInterface &$results) {
   $results->setExtraData('example_hook_invoked', microtime(TRUE));
 }
 
@@ -422,8 +429,8 @@ function hook_search_api_results_TAG_alter(\Drupal\search_api\Query\ResultSetInt
  *
  * @see https://www.drupal.org/node/3059866
  */
-function hook_search_api_index_reindex(\Drupal\search_api\IndexInterface $index, $clear = FALSE) {
-  \Drupal\Core\Database\Database::getConnection()->insert('example_search_index_reindexed')
+function hook_search_api_index_reindex(IndexInterface $index, $clear = FALSE) {
+  Database::getConnection()->insert('example_search_index_reindexed')
     ->fields([
       'index' => $index->id(),
       'clear' => $clear,
diff --git a/search_api.theme.inc b/search_api.theme.inc
index bde23f87..876aefeb 100644
--- a/search_api.theme.inc
+++ b/search_api.theme.inc
@@ -31,7 +31,7 @@ function template_preprocess_search_api_admin_fields_table(array &$variables) {
     foreach (Element::children($form['fields']) as $name) {
       $row = [];
       foreach (Element::children($form['fields'][$name]) as $field) {
-        if ($cell = render($form['fields'][$name][$field])) {
+        if ($cell = \Drupal::service('renderer')->render($form['fields'][$name][$field])) {
           $row[] = $cell;
         }
       }
@@ -231,7 +231,7 @@ function template_preprocess_search_api_server(array &$variables) {
   // Check if the indexes variable contains links.
   if ($indexes['#links']) {
     $label = t('Search indexes');
-    $info = render($indexes);
+    $info = \Drupal::service('renderer')->render($indexes);
     $classes[] = 'search-api-server-summary--indexes';
     $rows[] = Utility::deepCopy($row);
     $classes = [];
diff --git a/tests/src/Functional/AddServerFormTest.php b/tests/src/Functional/AddServerFormTest.php
index 79cdeb19..df0ea3fb 100644
--- a/tests/src/Functional/AddServerFormTest.php
+++ b/tests/src/Functional/AddServerFormTest.php
@@ -30,7 +30,7 @@ class AddServerFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create the users used for the tests.
diff --git a/tests/src/Functional/CacheabilityTest.php b/tests/src/Functional/CacheabilityTest.php
index 654e7e9b..75752884 100644
--- a/tests/src/Functional/CacheabilityTest.php
+++ b/tests/src/Functional/CacheabilityTest.php
@@ -29,7 +29,7 @@ class CacheabilityTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Set up example structure and content and populate the test index with
diff --git a/tests/src/Functional/ConfigOverrideIntegrationTest.php b/tests/src/Functional/ConfigOverrideIntegrationTest.php
index 4f595cad..a04b1f32 100644
--- a/tests/src/Functional/ConfigOverrideIntegrationTest.php
+++ b/tests/src/Functional/ConfigOverrideIntegrationTest.php
@@ -17,7 +17,7 @@ class ConfigOverrideIntegrationTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Set up overrides.
diff --git a/tests/src/Functional/EmptyQueryStringExcerptTest.php b/tests/src/Functional/EmptyQueryStringExcerptTest.php
index 844ad1eb..6fdca970 100644
--- a/tests/src/Functional/EmptyQueryStringExcerptTest.php
+++ b/tests/src/Functional/EmptyQueryStringExcerptTest.php
@@ -33,7 +33,7 @@ class EmptyQueryStringExcerptTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->drupalLogin($this->adminUser);
@@ -68,7 +68,8 @@ class EmptyQueryStringExcerptTest extends SearchApiBrowserTestBase {
       'status[highlight]' => 1,
       'processors[highlight][settings][excerpt_always]' => (int) $enabled,
     ];
-    $this->drupalPostForm($editForm, $form, 'Save');
+    $this->drupalGet($editForm);
+    $this->submitForm($form, 'Save');
 
     $this->drupalGet('admin/config/search/search-api/index/' . $this->indexId);
 
diff --git a/tests/src/Functional/EventsTest.php b/tests/src/Functional/EventsTest.php
index 50546def..e49bd27c 100644
--- a/tests/src/Functional/EventsTest.php
+++ b/tests/src/Functional/EventsTest.php
@@ -36,7 +36,7 @@ class EventsTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create some nodes.
diff --git a/tests/src/Functional/ExcerptFieldTest.php b/tests/src/Functional/ExcerptFieldTest.php
index cc2e7ba6..82a0639c 100644
--- a/tests/src/Functional/ExcerptFieldTest.php
+++ b/tests/src/Functional/ExcerptFieldTest.php
@@ -33,7 +33,7 @@ class ExcerptFieldTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     \Drupal::getContainer()
diff --git a/tests/src/Functional/HooksTest.php b/tests/src/Functional/HooksTest.php
index cb160cf5..58145a1d 100644
--- a/tests/src/Functional/HooksTest.php
+++ b/tests/src/Functional/HooksTest.php
@@ -36,7 +36,7 @@ class HooksTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create some nodes.
diff --git a/tests/src/Functional/IntegrationTest.php b/tests/src/Functional/IntegrationTest.php
index 7549f90a..ce63ea27 100644
--- a/tests/src/Functional/IntegrationTest.php
+++ b/tests/src/Functional/IntegrationTest.php
@@ -73,7 +73,7 @@ class IntegrationTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->indexStorage = \Drupal::entityTypeManager()->getStorage('search_api_index');
 
diff --git a/tests/src/Functional/LanguageIntegrationTest.php b/tests/src/Functional/LanguageIntegrationTest.php
index 9b330140..9e8b817c 100644
--- a/tests/src/Functional/LanguageIntegrationTest.php
+++ b/tests/src/Functional/LanguageIntegrationTest.php
@@ -25,7 +25,7 @@ class LanguageIntegrationTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Add extra languages.
diff --git a/tests/src/Functional/OverviewPageTest.php b/tests/src/Functional/OverviewPageTest.php
index e54312a6..aaeeb671 100644
--- a/tests/src/Functional/OverviewPageTest.php
+++ b/tests/src/Functional/OverviewPageTest.php
@@ -32,7 +32,7 @@ class OverviewPageTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->drupalLogin($this->adminUser);
diff --git a/tests/src/Functional/ProcessorIntegrationTest.php b/tests/src/Functional/ProcessorIntegrationTest.php
index 156931f8..374edaa8 100644
--- a/tests/src/Functional/ProcessorIntegrationTest.php
+++ b/tests/src/Functional/ProcessorIntegrationTest.php
@@ -35,7 +35,7 @@ class ProcessorIntegrationTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->adminUser);
 
diff --git a/tests/src/Functional/SearchApiBrowserTestBase.php b/tests/src/Functional/SearchApiBrowserTestBase.php
index be5053a9..d2f3a28e 100644
--- a/tests/src/Functional/SearchApiBrowserTestBase.php
+++ b/tests/src/Functional/SearchApiBrowserTestBase.php
@@ -101,7 +101,7 @@ abstract class SearchApiBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create the users used for the tests.
diff --git a/tests/src/Functional/SearchApiBulkFormTest.php b/tests/src/Functional/SearchApiBulkFormTest.php
index c2d85ab8..ff1e8bb7 100644
--- a/tests/src/Functional/SearchApiBulkFormTest.php
+++ b/tests/src/Functional/SearchApiBulkFormTest.php
@@ -38,7 +38,7 @@ class SearchApiBulkFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->index = Index::load('test_index');
diff --git a/tests/src/Functional/ViewsTest.php b/tests/src/Functional/ViewsTest.php
index e0aabb42..d710c280 100644
--- a/tests/src/Functional/ViewsTest.php
+++ b/tests/src/Functional/ViewsTest.php
@@ -46,7 +46,7 @@ class ViewsTest extends SearchApiBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Add a second language.
diff --git a/tests/src/FunctionalJavascript/AjaxTest.php b/tests/src/FunctionalJavascript/AjaxTest.php
index 57141f34..92538dfe 100644
--- a/tests/src/FunctionalJavascript/AjaxTest.php
+++ b/tests/src/FunctionalJavascript/AjaxTest.php
@@ -37,7 +37,7 @@ class AjaxTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create an article node type, if not already present.
diff --git a/tests/src/Kernel/BackendTestBase.php b/tests/src/Kernel/BackendTestBase.php
index 3a1983c3..9f5cec20 100644
--- a/tests/src/Kernel/BackendTestBase.php
+++ b/tests/src/Kernel/BackendTestBase.php
@@ -54,7 +54,7 @@ abstract class BackendTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/tests/src/Kernel/BasicTrackerTest.php b/tests/src/Kernel/BasicTrackerTest.php
index 8962305f..7a63653a 100644
--- a/tests/src/Kernel/BasicTrackerTest.php
+++ b/tests/src/Kernel/BasicTrackerTest.php
@@ -51,7 +51,7 @@ class BasicTrackerTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
@@ -296,15 +296,11 @@ class BasicTrackerTest extends KernelTestBase {
    */
   public function testExceptionHandling($tracker_method, array $args = []) {
     /** @var \PHPUnit\Framework\MockObject\MockObject|\Drupal\Core\Database\Connection $connection */
-    $connection = $this->getMockBuilder(Connection::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $connection = $this->createMock(Connection::class);
     foreach (['select', 'insert', 'update', 'delete'] as $method) {
       $connection->method($method)->willThrowException(new \Exception());
     }
-    $transaction = $this->getMockBuilder(Transaction::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $transaction = $this->createMock(Transaction::class);
     $rolled_back = FALSE;
     $rollback = function () use (&$rolled_back) {
       $rolled_back = TRUE;
diff --git a/tests/src/Kernel/ConfigEntity/ConfigOverrideKernelTest.php b/tests/src/Kernel/ConfigEntity/ConfigOverrideKernelTest.php
index 8202a871..7343a6fc 100644
--- a/tests/src/Kernel/ConfigEntity/ConfigOverrideKernelTest.php
+++ b/tests/src/Kernel/ConfigEntity/ConfigOverrideKernelTest.php
@@ -46,7 +46,7 @@ class ConfigOverrideKernelTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Set up necessary schemas.
@@ -101,7 +101,7 @@ class ConfigOverrideKernelTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     parent::tearDown();
 
     unset($GLOBALS['config']['search_api.server.test_server']);
diff --git a/tests/src/Kernel/ConfigEntity/DefaultConfigEntityInstallationTest.php b/tests/src/Kernel/ConfigEntity/DefaultConfigEntityInstallationTest.php
index 0f7d726d..e0fd7fb7 100644
--- a/tests/src/Kernel/ConfigEntity/DefaultConfigEntityInstallationTest.php
+++ b/tests/src/Kernel/ConfigEntity/DefaultConfigEntityInstallationTest.php
@@ -32,7 +32,7 @@ class DefaultConfigEntityInstallationTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('entity_test_mulrev_changed');
diff --git a/tests/src/Kernel/ConfigEntity/DependencyRemovalTest.php b/tests/src/Kernel/ConfigEntity/DependencyRemovalTest.php
index 33ae54ee..f50a17dd 100644
--- a/tests/src/Kernel/ConfigEntity/DependencyRemovalTest.php
+++ b/tests/src/Kernel/ConfigEntity/DependencyRemovalTest.php
@@ -50,7 +50,7 @@ class DependencyRemovalTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
diff --git a/tests/src/Kernel/Datasource/BundlelessEntityTest.php b/tests/src/Kernel/Datasource/BundlelessEntityTest.php
index 6ece6b11..877ca691 100644
--- a/tests/src/Kernel/Datasource/BundlelessEntityTest.php
+++ b/tests/src/Kernel/Datasource/BundlelessEntityTest.php
@@ -41,7 +41,7 @@ class BundlelessEntityTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('search_api_task');
diff --git a/tests/src/Kernel/Datasource/ContentEntityDatasourceTest.php b/tests/src/Kernel/Datasource/ContentEntityDatasourceTest.php
index c8052452..42fec7f4 100644
--- a/tests/src/Kernel/Datasource/ContentEntityDatasourceTest.php
+++ b/tests/src/Kernel/Datasource/ContentEntityDatasourceTest.php
@@ -62,7 +62,7 @@ class ContentEntityDatasourceTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Enable translation for the entity_test module.
diff --git a/tests/src/Kernel/Datasource/DatasourceTaskTest.php b/tests/src/Kernel/Datasource/DatasourceTaskTest.php
index bb0ed1ba..e95086ae 100644
--- a/tests/src/Kernel/Datasource/DatasourceTaskTest.php
+++ b/tests/src/Kernel/Datasource/DatasourceTaskTest.php
@@ -59,7 +59,7 @@ class DatasourceTaskTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Enable translation for the entity_test module.
diff --git a/tests/src/Kernel/Datasource/EntityStringIdTest.php b/tests/src/Kernel/Datasource/EntityStringIdTest.php
index ebc82125..d2b234f9 100644
--- a/tests/src/Kernel/Datasource/EntityStringIdTest.php
+++ b/tests/src/Kernel/Datasource/EntityStringIdTest.php
@@ -61,7 +61,7 @@ class EntityStringIdTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', [
diff --git a/tests/src/Kernel/Datasource/LanguageKernelTest.php b/tests/src/Kernel/Datasource/LanguageKernelTest.php
index 49484e00..2f9038f8 100644
--- a/tests/src/Kernel/Datasource/LanguageKernelTest.php
+++ b/tests/src/Kernel/Datasource/LanguageKernelTest.php
@@ -65,7 +65,7 @@ class LanguageKernelTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Enable translation for the entity_test module.
diff --git a/tests/src/Kernel/Datasource/NodeTrackingTest.php b/tests/src/Kernel/Datasource/NodeTrackingTest.php
index e9bc15db..85654003 100644
--- a/tests/src/Kernel/Datasource/NodeTrackingTest.php
+++ b/tests/src/Kernel/Datasource/NodeTrackingTest.php
@@ -37,7 +37,7 @@ class NodeTrackingTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/tests/src/Kernel/Datasource/ReferencedEntitiesReindexingTest.php b/tests/src/Kernel/Datasource/ReferencedEntitiesReindexingTest.php
index efa041f3..4a060c3e 100644
--- a/tests/src/Kernel/Datasource/ReferencedEntitiesReindexingTest.php
+++ b/tests/src/Kernel/Datasource/ReferencedEntitiesReindexingTest.php
@@ -42,7 +42,7 @@ class ReferencedEntitiesReindexingTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/tests/src/Kernel/Index/IndexChangesTest.php b/tests/src/Kernel/Index/IndexChangesTest.php
index 4932b3fd..7f02354c 100644
--- a/tests/src/Kernel/Index/IndexChangesTest.php
+++ b/tests/src/Kernel/Index/IndexChangesTest.php
@@ -65,7 +65,7 @@ class IndexChangesTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', [
diff --git a/tests/src/Kernel/Index/IndexImportTest.php b/tests/src/Kernel/Index/IndexImportTest.php
index f860c128..1ab953aa 100644
--- a/tests/src/Kernel/Index/IndexImportTest.php
+++ b/tests/src/Kernel/Index/IndexImportTest.php
@@ -39,7 +39,7 @@ class IndexImportTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/tests/src/Kernel/Index/IndexLoadItemsTest.php b/tests/src/Kernel/Index/IndexLoadItemsTest.php
index 9bd3b2c8..4546fed5 100644
--- a/tests/src/Kernel/Index/IndexLoadItemsTest.php
+++ b/tests/src/Kernel/Index/IndexLoadItemsTest.php
@@ -35,7 +35,7 @@ class IndexLoadItemsTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('search_api_task');
diff --git a/tests/src/Kernel/Index/IndexStorageTest.php b/tests/src/Kernel/Index/IndexStorageTest.php
index de1fb8d0..54dddacf 100644
--- a/tests/src/Kernel/Index/IndexStorageTest.php
+++ b/tests/src/Kernel/Index/IndexStorageTest.php
@@ -30,7 +30,7 @@ class IndexStorageTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', 'key_value_expire');
diff --git a/tests/src/Kernel/Processor/AddHierarchyTest.php b/tests/src/Kernel/Processor/AddHierarchyTest.php
index 24062587..5bc9cd23 100644
--- a/tests/src/Kernel/Processor/AddHierarchyTest.php
+++ b/tests/src/Kernel/Processor/AddHierarchyTest.php
@@ -77,7 +77,7 @@ class AddHierarchyTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp();
 
     $this->installConfig(['filter']);
diff --git a/tests/src/Kernel/Processor/AddURLKernelTest.php b/tests/src/Kernel/Processor/AddURLKernelTest.php
index 4b6db222..5dcfbfca 100644
--- a/tests/src/Kernel/Processor/AddURLKernelTest.php
+++ b/tests/src/Kernel/Processor/AddURLKernelTest.php
@@ -25,7 +25,7 @@ class AddURLKernelTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp('add_url');
 
     $url_field = new Field($this->index, 'url');
diff --git a/tests/src/Kernel/Processor/ContentAccessTest.php b/tests/src/Kernel/Processor/ContentAccessTest.php
index 825ac54d..d3f26a85 100644
--- a/tests/src/Kernel/Processor/ContentAccessTest.php
+++ b/tests/src/Kernel/Processor/ContentAccessTest.php
@@ -45,7 +45,7 @@ class ContentAccessTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp('content_access');
 
     // Activate our custom grant.
diff --git a/tests/src/Kernel/Processor/EntityTypeTest.php b/tests/src/Kernel/Processor/EntityTypeTest.php
index 7671684b..50dc678e 100644
--- a/tests/src/Kernel/Processor/EntityTypeTest.php
+++ b/tests/src/Kernel/Processor/EntityTypeTest.php
@@ -41,7 +41,7 @@ class EntityTypeTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp('entity_type');
 
     NodeType::create([
diff --git a/tests/src/Kernel/Processor/LanguageWithFallbackTest.php b/tests/src/Kernel/Processor/LanguageWithFallbackTest.php
index 55973f00..8783849d 100644
--- a/tests/src/Kernel/Processor/LanguageWithFallbackTest.php
+++ b/tests/src/Kernel/Processor/LanguageWithFallbackTest.php
@@ -39,7 +39,7 @@ class LanguageWithFallbackTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp('language_with_fallback');
 
     // search_api_test_language_fallback.module adds a fallback from 'fr' to
diff --git a/tests/src/Kernel/Processor/NumberFieldBoostTest.php b/tests/src/Kernel/Processor/NumberFieldBoostTest.php
index de9df93c..f42c78fc 100644
--- a/tests/src/Kernel/Processor/NumberFieldBoostTest.php
+++ b/tests/src/Kernel/Processor/NumberFieldBoostTest.php
@@ -30,7 +30,7 @@ class NumberFieldBoostTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp('number_field_boost');
 
     // Create a page node type, if not already present.
diff --git a/tests/src/Kernel/Processor/ProcessorTestBase.php b/tests/src/Kernel/Processor/ProcessorTestBase.php
index b041d932..59c18067 100644
--- a/tests/src/Kernel/Processor/ProcessorTestBase.php
+++ b/tests/src/Kernel/Processor/ProcessorTestBase.php
@@ -60,7 +60,7 @@ abstract class ProcessorTestBase extends KernelTestBase {
    *   (optional) The plugin ID of the processor that should be set up for
    *   testing.
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp();
 
     $this->installSchema('node', ['node_access']);
diff --git a/tests/src/Kernel/Processor/RenderedItemTest.php b/tests/src/Kernel/Processor/RenderedItemTest.php
index bd56d79e..e680e073 100644
--- a/tests/src/Kernel/Processor/RenderedItemTest.php
+++ b/tests/src/Kernel/Processor/RenderedItemTest.php
@@ -55,7 +55,7 @@ class RenderedItemTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp('rendered_item');
 
     // Enable the optional "path_alias" entity type as well to make sure the
diff --git a/tests/src/Kernel/Processor/ReverseEntityReferencesTest.php b/tests/src/Kernel/Processor/ReverseEntityReferencesTest.php
index 333548b6..8abcb382 100644
--- a/tests/src/Kernel/Processor/ReverseEntityReferencesTest.php
+++ b/tests/src/Kernel/Processor/ReverseEntityReferencesTest.php
@@ -43,7 +43,7 @@ class ReverseEntityReferencesTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp('reverse_entity_references');
 
     // Create a node type for testing.
diff --git a/tests/src/Kernel/Processor/RoleAccessTest.php b/tests/src/Kernel/Processor/RoleAccessTest.php
index e734a695..206ed9cc 100644
--- a/tests/src/Kernel/Processor/RoleAccessTest.php
+++ b/tests/src/Kernel/Processor/RoleAccessTest.php
@@ -39,7 +39,7 @@ class RoleAccessTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp('role_access');
 
     $this->installSchema('system', ['sequences']);
diff --git a/tests/src/Kernel/Processor/TypeBoostTest.php b/tests/src/Kernel/Processor/TypeBoostTest.php
index 78d9a474..b3c827f8 100644
--- a/tests/src/Kernel/Processor/TypeBoostTest.php
+++ b/tests/src/Kernel/Processor/TypeBoostTest.php
@@ -27,7 +27,7 @@ class TypeBoostTest extends ProcessorTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp($processor = NULL) {
+  public function setUp($processor = NULL): void {
     parent::setUp('type_boost');
 
     // Create an article node type, if not already present.
diff --git a/tests/src/Kernel/Server/ServerChangesTest.php b/tests/src/Kernel/Server/ServerChangesTest.php
index f0ba4ebc..dd362f1d 100644
--- a/tests/src/Kernel/Server/ServerChangesTest.php
+++ b/tests/src/Kernel/Server/ServerChangesTest.php
@@ -64,7 +64,7 @@ class ServerChangesTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
diff --git a/tests/src/Kernel/Server/ServerImportTest.php b/tests/src/Kernel/Server/ServerImportTest.php
index de0aa5ee..f3ee990b 100644
--- a/tests/src/Kernel/Server/ServerImportTest.php
+++ b/tests/src/Kernel/Server/ServerImportTest.php
@@ -33,7 +33,7 @@ class ServerImportTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
diff --git a/tests/src/Kernel/Server/ServerStorageTest.php b/tests/src/Kernel/Server/ServerStorageTest.php
index d44e1a70..c6a46ad9 100644
--- a/tests/src/Kernel/Server/ServerStorageTest.php
+++ b/tests/src/Kernel/Server/ServerStorageTest.php
@@ -38,7 +38,7 @@ class ServerStorageTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', 'key_value_expire');
diff --git a/tests/src/Kernel/Server/ServerTaskTest.php b/tests/src/Kernel/Server/ServerTaskTest.php
index 47f30d29..a70a3468 100644
--- a/tests/src/Kernel/Server/ServerTaskTest.php
+++ b/tests/src/Kernel/Server/ServerTaskTest.php
@@ -67,7 +67,7 @@ class ServerTaskTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
diff --git a/tests/src/Kernel/System/CliTest.php b/tests/src/Kernel/System/CliTest.php
index f5b1b364..3ce036aa 100644
--- a/tests/src/Kernel/System/CliTest.php
+++ b/tests/src/Kernel/System/CliTest.php
@@ -41,7 +41,7 @@ class CliTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/tests/src/Kernel/System/CommandHelperTest.php b/tests/src/Kernel/System/CommandHelperTest.php
index c548d784..5dc5c8a2 100644
--- a/tests/src/Kernel/System/CommandHelperTest.php
+++ b/tests/src/Kernel/System/CommandHelperTest.php
@@ -43,7 +43,7 @@ class CommandHelperTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/tests/src/Kernel/System/CustomDataTypesTest.php b/tests/src/Kernel/System/CustomDataTypesTest.php
index c138d705..6db5ceb1 100644
--- a/tests/src/Kernel/System/CustomDataTypesTest.php
+++ b/tests/src/Kernel/System/CustomDataTypesTest.php
@@ -56,7 +56,7 @@ class CustomDataTypesTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/tests/src/Kernel/System/FieldValuesExtractionTest.php b/tests/src/Kernel/System/FieldValuesExtractionTest.php
index 9f465bde..e73f8768 100644
--- a/tests/src/Kernel/System/FieldValuesExtractionTest.php
+++ b/tests/src/Kernel/System/FieldValuesExtractionTest.php
@@ -58,7 +58,7 @@ class FieldValuesExtractionTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', ['sequences']);
diff --git a/tests/src/Kernel/System/QueryTest.php b/tests/src/Kernel/System/QueryTest.php
index 55e3f435..08ce977e 100644
--- a/tests/src/Kernel/System/QueryTest.php
+++ b/tests/src/Kernel/System/QueryTest.php
@@ -42,7 +42,7 @@ class QueryTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
@@ -88,7 +88,7 @@ class QueryTest extends KernelTestBase {
    *   (optional) Whether hooks and processors should be invoked with this
    *   processing level.
    *
-   * @dataProvider testProcessingLevelDataProvider
+   * @dataProvider processingLevelDataProvider
    */
   public function testProcessingLevel($level, $hooks_and_processors_invoked = TRUE) {
     /** @var \Drupal\search_api\Processor\ProcessorInterface $processor */
@@ -139,7 +139,7 @@ class QueryTest extends KernelTestBase {
    *   Arrays of method arguments for the
    *   \Drupal\Tests\search_api\Kernel\QueryTest::testProcessingLevel() method.
    */
-  public function testProcessingLevelDataProvider() {
+  public function processingLevelDataProvider() {
     return [
       'none' => [QueryInterface::PROCESSING_NONE, FALSE],
       'basic' => [QueryInterface::PROCESSING_BASIC],
diff --git a/tests/src/Kernel/System/SerializationTest.php b/tests/src/Kernel/System/SerializationTest.php
index 2e95e772..b7c2b17a 100644
--- a/tests/src/Kernel/System/SerializationTest.php
+++ b/tests/src/Kernel/System/SerializationTest.php
@@ -37,7 +37,7 @@ class SerializationTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/tests/src/Kernel/System/TaskTest.php b/tests/src/Kernel/System/TaskTest.php
index 67c2f67d..28df6618 100644
--- a/tests/src/Kernel/System/TaskTest.php
+++ b/tests/src/Kernel/System/TaskTest.php
@@ -60,7 +60,7 @@ class TaskTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('search_api_task');
diff --git a/tests/src/Kernel/Views/ViewsCacheInvalidationTest.php b/tests/src/Kernel/Views/ViewsCacheInvalidationTest.php
index 1bd912a6..56e087c0 100644
--- a/tests/src/Kernel/Views/ViewsCacheInvalidationTest.php
+++ b/tests/src/Kernel/Views/ViewsCacheInvalidationTest.php
@@ -125,7 +125,7 @@ class ViewsCacheInvalidationTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('node', ['node_access']);
diff --git a/tests/src/Kernel/Views/ViewsCacheabilityMetadataExportTest.php b/tests/src/Kernel/Views/ViewsCacheabilityMetadataExportTest.php
index 03c293cc..894b47cc 100644
--- a/tests/src/Kernel/Views/ViewsCacheabilityMetadataExportTest.php
+++ b/tests/src/Kernel/Views/ViewsCacheabilityMetadataExportTest.php
@@ -68,7 +68,7 @@ class ViewsCacheabilityMetadataExportTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('node');
diff --git a/tests/src/Kernel/Views/ViewsDisplayCachingTest.php b/tests/src/Kernel/Views/ViewsDisplayCachingTest.php
index 6eed047d..43b3a3f6 100644
--- a/tests/src/Kernel/Views/ViewsDisplayCachingTest.php
+++ b/tests/src/Kernel/Views/ViewsDisplayCachingTest.php
@@ -71,7 +71,7 @@ class ViewsDisplayCachingTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('search_api', ['search_api_item']);
diff --git a/tests/src/Kernel/Views/ViewsDisplayTest.php b/tests/src/Kernel/Views/ViewsDisplayTest.php
index 806788e1..39c04e88 100644
--- a/tests/src/Kernel/Views/ViewsDisplayTest.php
+++ b/tests/src/Kernel/Views/ViewsDisplayTest.php
@@ -35,7 +35,7 @@ class ViewsDisplayTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('entity_test_mulrev_changed');
diff --git a/tests/src/Kernel/Views/ViewsFieldTraitTest.php b/tests/src/Kernel/Views/ViewsFieldTraitTest.php
index b22b7872..7c09f728 100644
--- a/tests/src/Kernel/Views/ViewsFieldTraitTest.php
+++ b/tests/src/Kernel/Views/ViewsFieldTraitTest.php
@@ -67,7 +67,7 @@ class ViewsFieldTraitTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('entity_test_mulrev_changed');
@@ -125,9 +125,7 @@ class ViewsFieldTraitTest extends KernelTestBase {
 
     $this->field = new ViewsTestField([], 'search_api', []);
     /** @var \Drupal\search_api\Plugin\views\query\SearchApiQuery|\PHPUnit\Framework\MockObject\MockObject $query */
-    $query = $this->getMockBuilder(SearchApiQuery::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $query = $this->createMock(SearchApiQuery::class);
     $query->method('getIndex')->willReturn($this->index);
     $query->method('getAccessAccount')->willReturn($this->users[1]);
     $this->field->setQuery($query);
diff --git a/tests/src/Kernel/Views/ViewsPropertyExtractionTest.php b/tests/src/Kernel/Views/ViewsPropertyExtractionTest.php
index 5223d69a..1c886708 100644
--- a/tests/src/Kernel/Views/ViewsPropertyExtractionTest.php
+++ b/tests/src/Kernel/Views/ViewsPropertyExtractionTest.php
@@ -135,21 +135,15 @@ class ViewsPropertyExtractionTest extends KernelTestBase {
     }
     $index->method('getFields')->willReturn($fields);
 
-    $query = $this->getMockBuilder(SearchApiQuery::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $query = $this->createMock(SearchApiQuery::class);
     $query->method('getIndex')->willReturn($index);
 
     /** @var \Drupal\views\ViewExecutable $view */
-    $view = $this->getMockBuilder(ViewExecutable::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $view = $this->createMock(ViewExecutable::class);
     $view->query = $query;
 
     /** @var \Drupal\views\Plugin\views\display\DisplayPluginBase $display */
-    $display = $this->getMockBuilder(DisplayPluginBase::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $display = $this->createMock(DisplayPluginBase::class);
 
     $configuration = [
       'real field' => $property_path,
diff --git a/tests/src/Kernel/Views/ViewsQueryTypeTest.php b/tests/src/Kernel/Views/ViewsQueryTypeTest.php
index d9fece3f..3513d3a1 100644
--- a/tests/src/Kernel/Views/ViewsQueryTypeTest.php
+++ b/tests/src/Kernel/Views/ViewsQueryTypeTest.php
@@ -39,7 +39,7 @@ class ViewsQueryTypeTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('node');
@@ -55,7 +55,7 @@ class ViewsQueryTypeTest extends KernelTestBase {
    * Tests that a new view with default incorrect query gets corrected.
    */
   public function testViewInsert() {
-    $view_yml = file_get_contents(drupal_get_path('module', 'search_api') . '/tests/fixtures/views.view.search_api_query_type_test.yml');
+    $view_yml = file_get_contents(\Drupal::service('extension.list.module')->getPath('search_api') . '/tests/fixtures/views.view.search_api_query_type_test.yml');
     $values = Yaml::decode($view_yml);
     $view = View::create($values);
     $this->assertTrue($view->isNew());
diff --git a/tests/src/Kernel/Views/ViewsQueryTypeUpdateTest.php b/tests/src/Kernel/Views/ViewsQueryTypeUpdateTest.php
index ce6341a3..7217a411 100644
--- a/tests/src/Kernel/Views/ViewsQueryTypeUpdateTest.php
+++ b/tests/src/Kernel/Views/ViewsQueryTypeUpdateTest.php
@@ -38,7 +38,7 @@ class ViewsQueryTypeUpdateTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('node');
@@ -55,7 +55,7 @@ class ViewsQueryTypeUpdateTest extends KernelTestBase {
    */
   public function testViewUpdate() {
     // Create the view with faulty properties.
-    $module_path = drupal_get_path('module', 'search_api');
+    $module_path = \Drupal::service('extension.list.module')->getPath('search_api');
     $view_yml = file_get_contents("$module_path/tests/fixtures/views.view.search_api_query_type_test.yml");
     $values = Yaml::decode($view_yml);
     $view_id = $values['id'];
diff --git a/tests/src/Unit/DateDataTypeTest.php b/tests/src/Unit/DateDataTypeTest.php
index e55ee429..ab79c1f6 100644
--- a/tests/src/Unit/DateDataTypeTest.php
+++ b/tests/src/Unit/DateDataTypeTest.php
@@ -25,7 +25,7 @@ class DateDataTypeTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Make sure the default timezone isn't UTC.
diff --git a/tests/src/Unit/FieldsHelperTest.php b/tests/src/Unit/FieldsHelperTest.php
index 06a6ed2e..dc50ec74 100644
--- a/tests/src/Unit/FieldsHelperTest.php
+++ b/tests/src/Unit/FieldsHelperTest.php
@@ -32,7 +32,7 @@ class FieldsHelperTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $entity_type_manager = $this->createMock(EntityTypeManagerInterface::class);
diff --git a/tests/src/Unit/ItemFieldTest.php b/tests/src/Unit/ItemFieldTest.php
index bbc43c27..648f4b40 100644
--- a/tests/src/Unit/ItemFieldTest.php
+++ b/tests/src/Unit/ItemFieldTest.php
@@ -26,7 +26,7 @@ class ItemFieldTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $data_type = $this->createMock(DataTypeInterface::class);
@@ -37,9 +37,7 @@ class ItemFieldTest extends UnitTestCase {
       });
 
     /** @var \Drupal\search_api\DataType\DataTypePluginManager|\PHPUnit\Framework\MockObject\MockObject $data_type_manager */
-    $data_type_manager = $this->getMockBuilder('Drupal\search_api\DataType\DataTypePluginManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $data_type_manager = $this->createMock('Drupal\search_api\DataType\DataTypePluginManager');
     $data_type_manager->expects($this->any())
       ->method('hasDefinition')
       ->willReturn(TRUE);
diff --git a/tests/src/Unit/LocalTasksTest.php b/tests/src/Unit/LocalTasksTest.php
index 95fa0ece..fab63991 100644
--- a/tests/src/Unit/LocalTasksTest.php
+++ b/tests/src/Unit/LocalTasksTest.php
@@ -14,7 +14,7 @@ class LocalTasksTest extends LocalTaskIntegrationTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Set the path of the module dynamically.
diff --git a/tests/src/Unit/Processor/AddURLTest.php b/tests/src/Unit/Processor/AddURLTest.php
index 2ad6102c..5e2d3cd0 100644
--- a/tests/src/Unit/Processor/AddURLTest.php
+++ b/tests/src/Unit/Processor/AddURLTest.php
@@ -48,7 +48,7 @@ class AddURLTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setUpMockContainer();
@@ -81,9 +81,7 @@ class AddURLTest extends UnitTestCase {
    */
   public function testAddFieldValues() {
     /** @var \Drupal\node\Entity\Node $node */
-    $node = $this->getMockBuilder('Drupal\node\Entity\Node')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $node = $this->createMock('Drupal\node\Entity\Node');
 
     $body_value = ['Some text value'];
     $fields = [
diff --git a/tests/src/Unit/Processor/AggregatedFieldsTest.php b/tests/src/Unit/Processor/AggregatedFieldsTest.php
index 0a458e0c..30b4d7a5 100644
--- a/tests/src/Unit/Processor/AggregatedFieldsTest.php
+++ b/tests/src/Unit/Processor/AggregatedFieldsTest.php
@@ -60,7 +60,7 @@ class AggregatedFieldsTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $datasource = $this->createMock(DatasourceInterface::class);
diff --git a/tests/src/Unit/Processor/EntityStatusTest.php b/tests/src/Unit/Processor/EntityStatusTest.php
index 4c3d507a..154f673a 100644
--- a/tests/src/Unit/Processor/EntityStatusTest.php
+++ b/tests/src/Unit/Processor/EntityStatusTest.php
@@ -51,7 +51,7 @@ class EntityStatusTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setUpMockContainer();
@@ -154,9 +154,7 @@ class EntityStatusTest extends UnitTestCase {
       foreach ([1 => TRUE, 2 => FALSE] as $i => $status) {
         $item_id = Utility::createCombinedId($datasource_id, "$i:en");
         $item = $fields_helper->createItem($this->index, $item_id, $this->datasources[$datasource_id]);
-        $entity = $this->getMockBuilder($info['class'])
-          ->disableOriginalConstructor()
-          ->getMock();
+        $entity = $this->createMock($info['class']);
         if (isset($info['method'])) {
           $entity->method($info['method'])
             ->will($this->returnValue($status));
diff --git a/tests/src/Unit/Processor/FieldsProcessorPluginBaseTest.php b/tests/src/Unit/Processor/FieldsProcessorPluginBaseTest.php
index c67931a8..1d2c21ef 100644
--- a/tests/src/Unit/Processor/FieldsProcessorPluginBaseTest.php
+++ b/tests/src/Unit/Processor/FieldsProcessorPluginBaseTest.php
@@ -37,7 +37,7 @@ class FieldsProcessorPluginBaseTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->setUpMockContainer();
diff --git a/tests/src/Unit/Processor/HighlightTest.php b/tests/src/Unit/Processor/HighlightTest.php
index 6692d06c..7324d6f9 100644
--- a/tests/src/Unit/Processor/HighlightTest.php
+++ b/tests/src/Unit/Processor/HighlightTest.php
@@ -45,7 +45,7 @@ class HighlightTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setUpMockContainer();
diff --git a/tests/src/Unit/Processor/HtmlFilterTest.php b/tests/src/Unit/Processor/HtmlFilterTest.php
index a1e8ac70..bb4e563e 100644
--- a/tests/src/Unit/Processor/HtmlFilterTest.php
+++ b/tests/src/Unit/Processor/HtmlFilterTest.php
@@ -24,7 +24,7 @@ class HtmlFilterTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->setUpMockContainer();
diff --git a/tests/src/Unit/Processor/IgnoreCaseTest.php b/tests/src/Unit/Processor/IgnoreCaseTest.php
index 8281c2fa..0a81fa5c 100644
--- a/tests/src/Unit/Processor/IgnoreCaseTest.php
+++ b/tests/src/Unit/Processor/IgnoreCaseTest.php
@@ -23,7 +23,7 @@ class IgnoreCaseTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->processor = new IgnoreCase([], 'string', []);
   }
diff --git a/tests/src/Unit/Processor/IgnoreCharacterTest.php b/tests/src/Unit/Processor/IgnoreCharacterTest.php
index 0adb6daa..5adf0310 100644
--- a/tests/src/Unit/Processor/IgnoreCharacterTest.php
+++ b/tests/src/Unit/Processor/IgnoreCharacterTest.php
@@ -23,7 +23,7 @@ class IgnoreCharacterTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->processor = new IgnoreCharacters(['ignorable' => ''], 'ignore_character', []);
   }
diff --git a/tests/src/Unit/Processor/RoleFilterTest.php b/tests/src/Unit/Processor/RoleFilterTest.php
index f16a17fa..9a2be823 100644
--- a/tests/src/Unit/Processor/RoleFilterTest.php
+++ b/tests/src/Unit/Processor/RoleFilterTest.php
@@ -39,7 +39,7 @@ class RoleFilterTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setUpMockContainer();
@@ -62,17 +62,13 @@ class RoleFilterTest extends UnitTestCase {
 
     $fields_helper = \Drupal::getContainer()->get('search_api.fields_helper');
     $item = $fields_helper->createItem($index, Utility::createCombinedId('entity:node', '1:en'), $node_datasource);
-    $node = $this->getMockBuilder(NodeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $node = $this->createMock(NodeInterface::class);
     /** @var \Drupal\node\NodeInterface $node */
     $item->setOriginalObject(EntityAdapter::createFromEntity($node));
     $this->items[$item->getId()] = $item;
 
     $item = $fields_helper->createItem($index, Utility::createCombinedId('entity:user', '1:en'), $user_datasource);
-    $account1 = $this->getMockBuilder(UserInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $account1 = $this->createMock(UserInterface::class);
     $account1->expects($this->any())
       ->method('getRoles')
       ->will($this->returnValue(['authenticated' => 'authenticated', 'editor' => 'editor']));
@@ -81,9 +77,7 @@ class RoleFilterTest extends UnitTestCase {
     $this->items[$item->getId()] = $item;
 
     $item = $fields_helper->createItem($index, Utility::createCombinedId('entity:user', '2:en'), $user_datasource);
-    $account2 = $this->getMockBuilder(UserInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $account2 = $this->createMock(UserInterface::class);
     $account2->expects($this->any())
       ->method('getRoles')
       ->will($this->returnValue(['authenticated' => 'authenticated']));
diff --git a/tests/src/Unit/Processor/StemmerTest.php b/tests/src/Unit/Processor/StemmerTest.php
index 2dfaa2b0..4e6adf8c 100644
--- a/tests/src/Unit/Processor/StemmerTest.php
+++ b/tests/src/Unit/Processor/StemmerTest.php
@@ -29,7 +29,7 @@ class StemmerTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setUpMockContainer();
@@ -88,9 +88,7 @@ class StemmerTest extends UnitTestCase {
   public function testPreprocessIndexItems() {
     $index = $this->createMock(IndexInterface::class);
 
-    $item_en = $this->getMockBuilder(ItemInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $item_en = $this->createMock(ItemInterface::class);
     $item_en->method('getLanguage')->willReturn('en');
     $field_en = new Field($index, 'foo');
     $field_en->setType('text');
@@ -99,9 +97,7 @@ class StemmerTest extends UnitTestCase {
     ]);
     $item_en->method('getFields')->willReturn(['foo' => $field_en]);
 
-    $item_de = $this->getMockBuilder(ItemInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $item_de = $this->createMock(ItemInterface::class);
     $item_de->method('getLanguage')->willReturn('de');
     $field_de = new Field($index, 'foo');
     $field_de->setType('text');
diff --git a/tests/src/Unit/Processor/StopwordsTest.php b/tests/src/Unit/Processor/StopwordsTest.php
index 28141d77..01c2d486 100644
--- a/tests/src/Unit/Processor/StopwordsTest.php
+++ b/tests/src/Unit/Processor/StopwordsTest.php
@@ -20,7 +20,7 @@ class StopwordsTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setUpMockContainer();
     $this->processor = new Stopwords([], 'stopwords', []);
diff --git a/tests/src/Unit/Processor/TestItemsTrait.php b/tests/src/Unit/Processor/TestItemsTrait.php
index 45cfb69c..329c642e 100644
--- a/tests/src/Unit/Processor/TestItemsTrait.php
+++ b/tests/src/Unit/Processor/TestItemsTrait.php
@@ -116,28 +116,17 @@ trait TestItemsTrait {
    */
   protected function setUpMockContainer() {
     /** @var \Drupal\Tests\UnitTestCase|\Drupal\Tests\search_api\Unit\Processor\TestItemsTrait $this */
-    $dataTypeManager = $this->getMockBuilder('Drupal\search_api\DataType\DataTypePluginManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $dataTypeManager = $this->createMock('Drupal\search_api\DataType\DataTypePluginManager');
     $dataTypeManager->method('getInstances')
       ->will($this->returnValue([]));
 
-    $moduleHandler = $this->getMockBuilder('Drupal\Core\Extension\ModuleHandlerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $eventDispatcher = $this->getMockBuilder(EventDispatcherInterface::class)
-      ->getMock();
+    $moduleHandler = $this->createMock('Drupal\Core\Extension\ModuleHandlerInterface');
+    $eventDispatcher = $this->createMock(EventDispatcherInterface::class);
     $dataTypeHelper = new DataTypeHelper($moduleHandler, $eventDispatcher, $dataTypeManager);
 
-    $entityTypeManager = $this->getMockBuilder('Drupal\Core\Entity\EntityTypeManagerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $entityFieldManager = $this->getMockBuilder('Drupal\Core\Entity\EntityFieldManagerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $entityBundleInfo = $this->getMockBuilder('Drupal\Core\Entity\EntityTypeBundleInfoInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityTypeManager = $this->createMock('Drupal\Core\Entity\EntityTypeManagerInterface');
+    $entityFieldManager = $this->createMock('Drupal\Core\Entity\EntityFieldManagerInterface');
+    $entityBundleInfo = $this->createMock('Drupal\Core\Entity\EntityTypeBundleInfoInterface');
     $fieldsHelper = new FieldsHelper($entityTypeManager, $entityFieldManager, $entityBundleInfo, $dataTypeHelper);
 
     $queryHelper = $this->createMock(QueryHelperInterface::class);
diff --git a/tests/src/Unit/Processor/TokenizerTest.php b/tests/src/Unit/Processor/TokenizerTest.php
index ad4d451a..2c9448bf 100644
--- a/tests/src/Unit/Processor/TokenizerTest.php
+++ b/tests/src/Unit/Processor/TokenizerTest.php
@@ -24,7 +24,7 @@ class TokenizerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->processor = new Tokenizer([], 'tokenizer', []);
diff --git a/tests/src/Unit/Processor/TransliterationTest.php b/tests/src/Unit/Processor/TransliterationTest.php
index 44da8a81..11c71c9e 100644
--- a/tests/src/Unit/Processor/TransliterationTest.php
+++ b/tests/src/Unit/Processor/TransliterationTest.php
@@ -28,7 +28,7 @@ class TransliterationTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->index = $this->createMock(IndexInterface::class);
diff --git a/tests/src/Unit/TermsParseModeTest.php b/tests/src/Unit/TermsParseModeTest.php
index e2dabeb1..278a46d4 100644
--- a/tests/src/Unit/TermsParseModeTest.php
+++ b/tests/src/Unit/TermsParseModeTest.php
@@ -24,7 +24,7 @@ class TermsParseModeTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->plugin = new Terms([], '', []);
diff --git a/tests/src/Unit/UtilityTest.php b/tests/src/Unit/UtilityTest.php
index 7adc6927..b74b8765 100644
--- a/tests/src/Unit/UtilityTest.php
+++ b/tests/src/Unit/UtilityTest.php
@@ -20,7 +20,7 @@ class UtilityTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $container = new ContainerBuilder();
diff --git a/tests/src/Unit/Views/AllTermsArgumentTest.php b/tests/src/Unit/Views/AllTermsArgumentTest.php
index ccd37c5c..50862a6f 100644
--- a/tests/src/Unit/Views/AllTermsArgumentTest.php
+++ b/tests/src/Unit/Views/AllTermsArgumentTest.php
@@ -47,7 +47,7 @@ class AllTermsArgumentTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->setupContainer();
diff --git a/tests/src/Unit/Views/TaxonomyTermArgumentTest.php b/tests/src/Unit/Views/TaxonomyTermArgumentTest.php
index 51b214a8..6c381744 100644
--- a/tests/src/Unit/Views/TaxonomyTermArgumentTest.php
+++ b/tests/src/Unit/Views/TaxonomyTermArgumentTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\search_api\Unit\Views;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\search_api\Plugin\views\argument\SearchApiTerm;
 use Drupal\taxonomy\Entity\Term;
 use Drupal\Tests\UnitTestCase;
@@ -15,12 +16,13 @@ use Drupal\Tests\UnitTestCase;
  */
 class TaxonomyTermArgumentTest extends UnitTestCase {
 
+  use ProphecyTrait;
   use TaxonomyTestTrait;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->setupContainer();
