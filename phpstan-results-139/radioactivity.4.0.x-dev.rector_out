modules/contrib/radioactivity/endpoints/file/rest.php
modules/contrib/radioactivity/src/IncidentStorageInterface.php
modules/contrib/radioactivity/src/Plugin/Field/FieldFormatter/RadioactivityEmitter.php
modules/contrib/radioactivity/src/RadioactivityStorage.php
modules/contrib/radioactivity/radioactivity.install
modules/contrib/radioactivity/tests/src/Unit/RadioactivityReferenceUpdaterTest.php
modules/contrib/radioactivity/radioactivity.module
modules/contrib/radioactivity/src/Plugin/Field/FieldFormatter/RadioactivityReferenceEmitter.php
modules/contrib/radioactivity/src/Plugin/Field/FieldFormatter/RadioactivityReferenceFormatterBase.php
modules/contrib/radioactivity/radioactivity.views.inc
modules/contrib/radioactivity/src/RadioactivityViewsData.php
modules/contrib/radioactivity/src/Plugin/Field/FieldFormatter/RadioactivityReferenceValue.php
modules/contrib/radioactivity/src/RestIncidentStorage.php
modules/contrib/radioactivity/src/Plugin/Field/FieldFormatter/RadioactivityValue.php
modules/contrib/radioactivity/src/Plugin/Field/FieldType/RadioactivityField.php
modules/contrib/radioactivity/tests/src/Unit/RestIncidentStorageTest.php
modules/contrib/radioactivity/src/RestIncidentStorageInterface.php
modules/contrib/radioactivity/src/RestProcessor.php
modules/contrib/radioactivity/src/Commands/RadioactivityCommands.php
modules/contrib/radioactivity/src/StorageFactory.php
modules/contrib/radioactivity/tests/src/FunctionalJavascript/EmitTest.php
modules/contrib/radioactivity/src/Plugin/Field/FieldType/RadioactivityReferenceItem.php
modules/contrib/radioactivity/tests/src/Unit/RestProcessorTest.php
modules/contrib/radioactivity/tests/src/Unit/StorageFactoryTest.php
modules/contrib/radioactivity/src/Controller/EmitController.php
modules/contrib/radioactivity/src/Plugin/Field/FieldWidget/RadioactivityEnergy.php
modules/contrib/radioactivity/src/Plugin/Field/FieldWidget/RadioactivityReferenceWidget.php
modules/contrib/radioactivity/tests/src/FunctionalJavascript/RadioactivityFunctionalJavascriptTestBase.php
modules/contrib/radioactivity/tests/src/Kernel/DefaultIncidentStorageTest.php
modules/contrib/radioactivity/src/DefaultIncidentStorage.php
modules/contrib/radioactivity/tests/src/Kernel/EmitControllerEndpointTest.php
modules/contrib/radioactivity/src/Plugin/QueueWorker/RadioactivityDecay.php
modules/contrib/radioactivity/src/Plugin/QueueWorker/RadioactivityIncidents.php
modules/contrib/radioactivity/src/Plugin/QueueWorker/RadioactivityQueueWorkerBase.php
modules/contrib/radioactivity/src/RadioactivityInterface.php
modules/contrib/radioactivity/src/RadioactivityLazyBuilder.php
modules/contrib/radioactivity/src/RadioactivityProcessor.php
modules/contrib/radioactivity/src/Entity/Radioactivity.php
modules/contrib/radioactivity/tests/src/Kernel/RadioactivityFieldTypeTest.php
modules/contrib/radioactivity/tests/src/Kernel/RadioactivityReferenceValueFormatterTest.php
modules/contrib/radioactivity/tests/src/Kernel/RadioactivityValueFormatterTest.php
modules/contrib/radioactivity/tests/src/Traits/RadioactivityFunctionTestTrait.php
modules/contrib/radioactivity/src/EntityOperations.php
modules/contrib/radioactivity/src/Event/EnergyBelowCutoffEvent.php
modules/contrib/radioactivity/src/Incident.php
modules/contrib/radioactivity/src/IncidentInterface.php
modules/contrib/radioactivity/tests/src/Unit/EmitControllerTest.php
modules/contrib/radioactivity/src/RadioactivityProcessorInterface.php
modules/contrib/radioactivity/src/RadioactivityReferenceFieldItemList.php
modules/contrib/radioactivity/tests/src/Unit/EnergyBelowCutoffTest.php
modules/contrib/radioactivity/src/RadioactivityReferenceUpdater.php
modules/contrib/radioactivity/tests/src/Unit/EventTestBase.php
modules/contrib/radioactivity/tests/src/Unit/IncidentTest.php
modules/contrib/radioactivity/src/RadioactivityReferenceUpdaterInterface.php
modules/contrib/radioactivity/tests/src/Unit/RadioactivityLazyBuilderTest.php
modules/contrib/radioactivity/tests/src/Unit/RadioactivityProcessorTest.php

10 files with changes
=====================

1) modules/contrib/radioactivity/tests/src/Unit/StorageFactoryTest.php:43

    ---------- begin diff ----------
@@ @@
     parent::setUp();

     // Mock the radioactivity.storage configuration.
-    $this->config = $this->getMockBuilder(ImmutableConfig::class)
-      ->disableOriginalConstructor()
-      ->setMethods([
-        'get',
-      ])
-      ->getMock();
+    $this->config = $this->createMock(ImmutableConfig::class);

-    $this->configFactory = $this->getMockBuilder(ConfigFactory::class)
-      ->disableOriginalConstructor()
-      ->setMethods([
-        'get',
-      ])
-      ->getMock();
+    $this->configFactory = $this->createMock(ConfigFactory::class);
     $this->configFactory->expects($this->any())
       ->method('get')
       ->will($this->returnValue($this->config));

     // Mock the class resolver and the classes it provides.
-    $mockRestStorage = $this->getMockBuilder(RestIncidentStorage::class)
-      ->getMock();
-    $mockDefaultStorage = $this->getMockBuilder(DefaultIncidentStorage::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $mockRestStorage = $this->createMock(RestIncidentStorage::class);
+    $mockDefaultStorage = $this->createMock(DefaultIncidentStorage::class);

-    $this->classResolver = $this->getMockBuilder(ClassResolverInterface::class)
-      ->setMethods(['getInstanceFromDefinition'])
-      ->getMock();
+    $this->classResolver = $this->createMock(ClassResolverInterface::class);
     $this->classResolver->expects($this->any())
       ->method('getInstanceFromDefinition')
       ->will($this->returnValueMap([
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/radioactivity/tests/src/Unit/RestIncidentStorageTest.php:26

    ---------- begin diff ----------
@@ @@
   public function setUp(): void {
     parent::setUp();

-    $this->sut = $this->getMockBuilder(RestIncidentStorage::class)
-      ->disableOriginalConstructor()
-      ->setMethods([
-        'getDefaultEndpoint',
-        'getIncidentsFromStorage',
-        'clearIncidentStorage',
-      ])
-      ->getMock();
+    $this->sut = $this->createMock(RestIncidentStorage::class);

     // Initiate the Settings singleton used by this test.
     new Settings([
@@ @@
    * @covers ::addIncident
    */
   public function testAddIncident() {
-    $incident = $this->getMockBuilder(IncidentInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $incident = $this->createMock(IncidentInterface::class);

     $this->expectException("Exception");
     $this->expectExceptionMessage("The Radioactivity rest endpoint expects incidents to be added somewhere else.");
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/radioactivity/tests/src/Unit/RadioactivityReferenceUpdaterTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\radioactivity\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\node\NodeInterface;
 use Drupal\radioactivity\RadioactivityReferenceUpdater;
@@ @@
  */
 class RadioactivityReferenceUpdaterTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * @covers ::hasMissingReferences
    * @dataProvider providerHasMissingReferences
    */
   public function testHasMissingReferences($referencesWithoutTarget, $hasMissingReferences) {
-    $sut = $this->getMockBuilder(RadioactivityReferenceUpdater::class)
-      ->onlyMethods([
-        'getReferencesWithoutTarget',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $sut = $this->createMock(RadioactivityReferenceUpdater::class);

     $sut->expects($this->any())
       ->method('getReferencesWithoutTarget')
@@ @@
    * @dataProvider providerGetReferencesWithoutTarget
    */
   public function testGetReferencesWithoutTarget($getAllReferenceFields, $result) {
-    $sut = $this->getMockBuilder(RadioactivityReferenceUpdater::class)
-      ->onlyMethods([
-        'getAllReferenceFields',
-        'entitiesWithNonexistentFields',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $sut = $this->createMock(RadioactivityReferenceUpdater::class);

     // The return value of ::getAllReferenceFields are the configured fields
     // of entity+bundle that are configured as radioactivity reference fields.
@@ @@
    * @dataProvider providerUpdateReferenceFields
    */
   public function testUpdateReferenceFields($getReferenceFields, $fieldIsEmpty, $entityIsUpdated) {
-    $sut = $this->getMockBuilder(RadioactivityReferenceUpdater::class)
-      ->onlyMethods([
-        'getReferenceFields',
-        'createRadioactivity',
-        'getRequestTime',
-        'getFieldDefaultEnergy',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $sut = $this->createMock(RadioactivityReferenceUpdater::class);
     $fieldItemList = $this->createMock(FieldItemListInterface::class);
     $fieldItemList->expects($this->any())
       ->method('isEmpty')
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/radioactivity/src/Event/EnergyBelowCutoffEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\radioactivity\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Entity\ContentEntityInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Represents a 'Energy is below the cutoff level' event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/radioactivity/radioactivity.module:159

    ---------- begin diff ----------
@@ @@
  *
  * @todo Remove in 5.0.0 when the deprecated 'radioactivity' field gets removed.
  */
-function radioactivity_form_field_ui_field_storage_add_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function radioactivity_form_field_ui_field_storage_add_form_alter(&$form, FormStateInterface $form_state, $form_id) {

   // Hide the deprecated radioactivity field type when no field of this type is
   // currently being used.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


6) modules/contrib/radioactivity/tests/src/Unit/RadioactivityProcessorTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\radioactivity\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityPublishedInterface;
@@ @@
 class RadioactivityProcessorTest extends UnitTestCase {


+  use ProphecyTrait;
   /**
    * The radioactivity processor under test.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/radioactivity/tests/src/Unit/RadioactivityLazyBuilderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\radioactivity\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\radioactivity\RadioactivityInterface;
@@ @@
  */
 class RadioactivityLazyBuilderTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Mock entity type manager.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/radioactivity/tests/src/Unit/EmitControllerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\radioactivity\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Site\Settings;
 use Drupal\radioactivity\Controller\EmitController;
@@ @@
  */
 class EmitControllerTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The request received by the controller.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/radioactivity/tests/src/Kernel/RadioactivityFieldTypeTest.php:50

    ---------- begin diff ----------
@@ @@
     parent::setUp();

     // Mock Time::getRequestTime.
-    $dateTime = $this->getMockBuilder(TimeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $dateTime = $this->createMock(TimeInterface::class);
     $dateTime
       ->expects($this->any())
       ->method('getRequestTime')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/radioactivity/src/RestIncidentStorage.php:102

    ---------- begin diff ----------
@@ @@
   protected function getDefaultEndpoint(): string {
     global $base_url;

-    return $base_url . '/' . drupal_get_path('module', 'radioactivity') . '/endpoints/file/rest.php';
+    return $base_url . '/' . \Drupal::service('extension.list.module')->getPath('radioactivity') . '/endpoints/file/rest.php';
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 10 files have been changed by Rector                                      

