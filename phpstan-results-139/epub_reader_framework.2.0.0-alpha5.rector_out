modules/contrib/epub_reader_framework/epub_reader_framework.api.php
modules/contrib/epub_reader_framework/epub_reader_framework.module
modules/contrib/epub_reader_framework/src/Plugin/Block/ReaderNavigationBlock.php
modules/contrib/epub_reader_framework/src/Ajax/ChapterChangedCommand.php
modules/contrib/epub_reader_framework/epub_reader_framework.install
modules/contrib/epub_reader_framework/src/Ajax/ChapterHistoryPushStateCommand.php
modules/contrib/epub_reader_framework/src/Batch/ReaderChapterExtractorBatchProcessor.php
modules/contrib/epub_reader_framework/src/Plugin/Block/ReaderPreviousNextBlock.php
modules/contrib/epub_reader_framework/src/Controller/ReaderNodeAjaxController.php
modules/contrib/epub_reader_framework/tests/modules/epub_reader_framework_implementation_test/epub_reader_framework_implementation_test.module
modules/contrib/epub_reader_framework/tests/src/Functional/ReaderChapterNavigationTest.php
modules/contrib/epub_reader_framework/src/Entity/ReaderChapterHeading.php
modules/contrib/epub_reader_framework/tests/src/Functional/ReaderPreviousNextTest.php
modules/contrib/epub_reader_framework/src/Entity/ReaderEntityChapterHeadingsSave.php
modules/contrib/epub_reader_framework/tests/src/Functional/ReaderSubchapterHeadingsTest.php
modules/contrib/epub_reader_framework/tests/src/FunctionalJavascript/ReaderUploadEpubTest.php
modules/contrib/epub_reader_framework/src/Entity/ReaderEntityCrossReference.php
modules/contrib/epub_reader_framework/src/Entity/ReaderEntityPostsave.php
modules/contrib/epub_reader_framework/src/Entity/ReaderEntityPresave.php
modules/contrib/epub_reader_framework/src/Epub/ReaderEpubCompletedCleanup.php
modules/contrib/epub_reader_framework/src/Epub/ReaderEpubXhtmlConverter.php
modules/contrib/epub_reader_framework/src/Epub/ReaderEpubZipExtractor.php
modules/contrib/epub_reader_framework/src/EpubReaderFrameworkHelpers.php
modules/contrib/epub_reader_framework/src/Event/ReaderEpubXhmlConverterEvent.php
modules/contrib/epub_reader_framework/src/Event/ReaderNodeAjaxControllerResponseEvent.php
modules/contrib/epub_reader_framework/src/Form/ReaderChapterFormAlter.php
modules/contrib/epub_reader_framework/src/Form/ReaderPublicationFormAlter.php

8 files with changes
====================

1) modules/contrib/epub_reader_framework/tests/src/FunctionalJavascript/ReaderUploadEpubTest.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $admin_user = $this->drupalCreateUser([], NULL, TRUE);
     $this->drupalLogin($admin_user);
@@ @@
     $this->drupalGet('media/add/epub');

     // Add an EPUB file.
-    $filepath = drupal_get_path('module', 'epub_reader_framework');
+    $filepath = \Drupal::service('extension.list.module')->getPath('epub_reader_framework');
     $filepath .= '/tests/fixtures/epubs/trees.epub';
     $this->getSession()->getPage()->attachFileToField('files[field_media_file_0]', $filepath);
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->submitForm([], t('Save'));

     // Create the reader publication.
     $this->drupalGet('node/add/reader_publication');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => 'Test EPUB',
       'field_reader_file[0][target_id]' => 'trees.epub (1)',
     ], t('Save'));
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/epub_reader_framework/tests/src/Functional/ReaderSubchapterHeadingsTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $admin_user = $this->drupalCreateUser([], NULL, TRUE);
     $this->drupalLogin($admin_user);
@@ @@

     // Create the reader publication.
     $this->drupalGet('node/add/reader_publication');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => 'Test EPUB',
     ], t('Save'));

@@ @@
     $this->clickLink(t('Add Chapter'));

     // Create a chapter.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => 'Chapter One',
       'body[0][value]' => '
         <h2>Chapter One Subheading One</h2>
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/epub_reader_framework/tests/src/Functional/ReaderPreviousNextTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $admin_user = $this->drupalCreateUser([], NULL, TRUE);
     $this->drupalLogin($admin_user);
@@ @@

     // Create the reader publication.
     $this->drupalGet('node/add/reader_publication');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => 'Test EPUB',
     ], t('Save'));

@@ @@
     $this->assertSession()->pageTextContains('Create Reader chapter');

     // Create a chapter.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => 'Chapter One',
     ], t('Save'));

@@ @@
     $this->clickLink(t('Add Chapter'));

     // Create a chapter.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => 'Chapter Two',
     ], t('Save'));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/epub_reader_framework/tests/src/Functional/ReaderChapterNavigationTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $admin_user = $this->drupalCreateUser([], NULL, TRUE);
     $this->drupalLogin($admin_user);
@@ @@

     // Create the reader publication.
     $this->drupalGet('node/add/reader_publication');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => 'Test EPUB',
     ], t('Save'));

@@ @@
     $this->assertSession()->pageTextContains('Create Reader chapter');

     // Create a chapter.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => 'Chapter One',
     ], t('Save'));

@@ @@
     $this->clickLink(t('Add Chapter'));

     // Create a chapter.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => 'Chapter Two',
     ], t('Save'));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/epub_reader_framework/src/Event/ReaderNodeAjaxControllerResponseEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\epub_reader_framework\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\node\NodeInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Event that is fired before the ajax response is returned.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/epub_reader_framework/src/Event/ReaderEpubXhmlConverterEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\epub_reader_framework\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\node\NodeInterface;
 use Wa72\HtmlPageDom\HtmlPageCrawler;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Event that is fired when the batch is processing a particular chapter.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/epub_reader_framework/src/Epub/ReaderEpubXhtmlConverter.php:111

    ---------- begin diff ----------
@@ @@
         // Get the event_dispatcher service and dispatch the event.
         $event_name = ReaderEpubXhmlConverterEvent::EVENT_NAME;
         $event_dispatcher = $this->eventDispatcher;
-        $event_dispatcher->dispatch($event_name, $event);
+        $event_dispatcher->dispatch($event, $event_name);
       }
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


8) modules/contrib/epub_reader_framework/src/Controller/ReaderNodeAjaxController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\epub_reader_framework\Controller;

+use Drupal\Core\Cache\CacheableAjaxResponse;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
         if (class_exists('\Drupal\Core\Cache\CacheableAjaxResponse')) {
           // Cannot use 'Use' statement as we are unsure if this will exist.
           // @see https://www.drupal.org/project/drupal/issues/2701085.
-          $response = new \Drupal\Core\Cache\CacheableAjaxResponse();
+          $response = new CacheableAjaxResponse();
         }
         else {
           $response = new AjaxResponse();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

