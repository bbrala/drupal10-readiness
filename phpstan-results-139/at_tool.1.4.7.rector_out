modules/contrib/at_tool/at_theme_generator/at_theme_generator.install
modules/contrib/at_tool/at_theme_generator/starterkits/starterkit/STARTERKIT.theme
modules/contrib/at_tool/at_theme_generator/starterkits/starterkit/theme-settings.php
modules/contrib/at_tool/at_tool.module
modules/contrib/at_tool/at_theme_generator/at_theme_generator.module
modules/contrib/at_tool/at_theme_generator/starterkits/starterkit/color/color.inc
modules/contrib/at_tool/at_theme_generator/src/File/DirectoryOperations.php
modules/contrib/at_tool/at_theme_generator/src/File/FileOperations.php
modules/contrib/at_tool/at_theme_generator/src/Form/GeneratorForm.php
modules/contrib/at_tool/src/AtToolLazyBuilders.php
modules/contrib/at_tool/at_theme_generator/src/Theme/ThemeGenerator.php
modules/contrib/at_tool/at_theme_generator/src/Theme/ThemeGeneratorTypes.php
modules/contrib/at_tool/at_theme_generator/src/Theme/ThemeInfo.php

6 files with changes
====================

1) modules/contrib/at_tool/at_theme_generator/starterkits/starterkit/color/color.inc:10

    ---------- begin diff ----------
@@ @@
 use Drupal\at_core\Ext\ExtGet;

 $theme_name = \Drupal::service('theme.manager')->getActiveTheme()->getName();
-$file_path = drupal_get_path('theme', $theme_name) . '/styles/uikit/components/partials/_variables.scss';
+$file_path = \Drupal::service('extension.list.theme')->getPath($theme_name) . '/styles/uikit/components/partials/_variables.scss';
 $sass_variables = (new ExtGet)->getSassVariables($file_path);

 $info = [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


2) modules/contrib/at_tool/at_tool.module:61

    ---------- begin diff ----------
@@ @@
           $layout_data = new LayoutCompatible($theme_key);
           $layout_compatible_data = $layout_data->getCompatibleLayout();
           $css_config = $layout_compatible_data['css_config'];
-          $layout_form_css = drupal_get_path('theme', $css_config['layout_provider']) . '/layout/' . $css_config['layout'] . '/' . $css_config['css_form_styles_path'];
+          $layout_form_css = \Drupal::service('extension.list.theme')->getPath($css_config['layout_provider']) . '/layout/' . $css_config['layout'] . '/' . $css_config['css_form_styles_path'];
           if (file_exists($layout_form_css)) {
             $libraries['layout_settings']['css']['theme'] = ['/' . $layout_form_css => []];
           }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


3) modules/contrib/at_tool/at_theme_generator/src/Theme/ThemeGeneratorTypes.php:216

    ---------- begin diff ----------
@@ @@
     $this->processSkinStyles('SKIN');

     // Remove SCSS if base theme does not support it.
-    $skin_base_path = drupal_get_path('theme', $this->skin_base);
+    $skin_base_path = \Drupal::service('extension.list.theme')->getPath($this->skin_base);
     if (!file_exists($skin_base_path . '/Gruntfile.js')) {
       $this->removeScss();
       $this->removeScssTools();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/at_tool/at_theme_generator/src/Theme/ThemeGenerator.php:85

    ---------- begin diff ----------
@@ @@
     $this->clone_source_config = $this->getCloneSourceConfigSettings();

     // Paths.
-    $this->at_core_path      = drupal_get_path('theme', 'at_core');
-    $this->at_generator_path = drupal_get_path('module', 'at_theme_generator');
+    $this->at_core_path      = \Drupal::service('extension.list.theme')->getPath('at_core');
+    $this->at_generator_path = \Drupal::service('extension.list.module')->getPath('at_theme_generator');
   }

   /**
@@ @@
     $source = [];
     if ($this->sub_theme_type === 'clone') {
       $source['name'] = $this->clone_source;
-      $source['path'] = drupal_get_path('theme', $this->clone_source);
+      $source['path'] = \Drupal::service('extension.list.theme')->getPath($this->clone_source);
     }
     else {
       $source['name'] = strtoupper($this->sub_theme_type);
-      $source['path'] = drupal_get_path('module', 'at_theme_generator') . '/starterkits/' . $this->sub_theme_type;
+      $source['path'] = \Drupal::service('extension.list.module')->getPath('at_theme_generator') . '/starterkits/' . $this->sub_theme_type;
     }

     return $source;
@@ @@
    * Copy logos from the skin source/base to the skin theme.
    */
   public function replaceSkinLogos() {
-    $skin_base_path = drupal_get_path('theme', $this->skin_base);
+    $skin_base_path = \Drupal::service('extension.list.theme')->getPath($this->skin_base);
     foreach (['svg', 'png'] as $ext) {
       $logo = $skin_base_path . '/logo.' . $ext;
       if (file_exists($logo)) {
@@ @@
     if ($this->sub_theme_type === 'skin') {
       $base_theme = $this->skin_base;
     }
-    return \Drupal::service('info_parser')->parse(drupal_get_path('theme', $base_theme) . '/' . $base_theme . '.info.yml');
+    return \Drupal::service('info_parser')->parse(\Drupal::service('extension.list.theme')->getPath($base_theme) . '/' . $base_theme . '.info.yml');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


5) modules/contrib/at_tool/at_theme_generator/src/Form/GeneratorForm.php:382

    ---------- begin diff ----------
@@ @@
         $source_error = '';

         if ($subtheme_type == 'starterkit') {
-          $source = drupal_get_path('module', 'at_theme_generator') . '/starterkits/starterkit';
+          $source = \Drupal::service('extension.list.module')->getPath('at_theme_generator') . '/starterkits/starterkit';
         }
         elseif ($subtheme_type == 'clone') {
-          $source = drupal_get_path('theme', $values['generate']['generate_clone_source']);
+          $source = \Drupal::service('extension.list.theme')->getPath($values['generate']['generate_clone_source']);
           $source_error = 'generate][generate_clone_source';
         }
         elseif ($subtheme_type == 'skin') {
-          $source = drupal_get_path('module', 'at_theme_generator') . '/starterkits/skin';
+          $source = \Drupal::service('extension.list.module')->getPath('at_theme_generator') . '/starterkits/skin';
           $source_error = 'generate][generate_skin_base';
         }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/at_tool/at_theme_generator/at_theme_generator.install:28

    ---------- begin diff ----------
@@ @@
     \Drupal::service('theme_installer')->uninstall([$theme]);
   }
   // Now remove the old generator theme.
-  $gen_path = drupal_get_path('theme', $theme);
+  $gen_path = \Drupal::service('extension.list.theme')->getPath($theme);
   if (!empty($gen_path)) {
     $directoryOperations = new DirectoryOperations();
     $directoryOperations->directoryRemove($gen_path);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

