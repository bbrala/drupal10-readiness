diff --git a/reserve.inc b/reserve.inc
index fb15c44..bc8249d 100644
--- a/reserve.inc
+++ b/reserve.inc
@@ -1,4 +1,5 @@
 <?php
+use Drupal\field\Entity\FieldConfig;
 /**
  * @file
  * Classes and general Room Reservations helper functions.
@@ -21,7 +22,7 @@ function reserve_categories($ebundle = null) {
     $entity_type = ebundle_split($ebundle, 'type');
     $bundle = ebundle_split($ebundle, 'bundle');
     $field = reserve_category_fields($ebundle);
-    $fconfig = \Drupal\field\Entity\FieldConfig::loadByName($entity_type, $bundle, $field)->getSettings();
+    $fconfig = FieldConfig::loadByName($entity_type, $bundle, $field)->getSettings();
     $ids = array_filter($fconfig['categories']);
   }
   else {
@@ -696,7 +697,7 @@ function reserve_start_conflicts($room, $yyyy_mmdd, $time) {
     )
   ";
   $conflicts_found = FALSE;
-  $conflicts_found = db_query($sql, array(
+  $conflicts_found = \Drupal::database()->query($sql, array(
       ':room' => $room,
       ':date0' => $search_items[0]['date'], ':time0' => $search_items[0]['start_time'], ':length0' => $search_items[0]['length'],
       ':date1' => $search_items[1]['date'], ':time1' => $search_items[1]['start_time'], ':length1' => $search_items[1]['length'],
@@ -705,8 +706,7 @@ function reserve_start_conflicts($room, $yyyy_mmdd, $time) {
       ':date4' => $search_items[4]['date'], ':time4' => $search_items[4]['start_time'], ':length4' => $search_items[4]['length'],
       ':date5' => $search_items[5]['date'], ':time5' => $search_items[5]['start_time'], ':length5' => $search_items[5]['length'],
       ':date6' => $search_items[6]['date'], ':time6' => $search_items[6]['start_time'], ':length6' => $search_items[6]['length'],
-      ':date7' => $search_items[7]['date'], ':time7' => $search_items[7]['start_time'], ':length7' => $search_items[7]['length'])
-  )->rowCount();
+      ':date7' => $search_items[7]['date'], ':time7' => $search_items[7]['start_time'], ':length7' => $search_items[7]['length']))->rowCount();
   return $conflicts_found;
 }
 
diff --git a/src/Controller/CalendarController.php b/src/Controller/CalendarController.php
index 5db5e14..56aeac3 100644
--- a/src/Controller/CalendarController.php
+++ b/src/Controller/CalendarController.php
@@ -1,6 +1,7 @@
 <?php
 namespace Drupal\reserve\Controller;
 
+use Drupal\field\Entity\FieldConfig;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Drupal\Core\Link;
@@ -334,7 +335,7 @@ class CalendarController extends ControllerBase {
     $extended = \Drupal::currentUser()->hasPermission('add reservations extended');
     $config = \Drupal::config('reserve.settings');
     $category_field = reserve_category_fields($ebundle);
-    $clearimg = '<img src="' . base_path() . drupal_get_path('module', 'reserve') . '/images/clear.png" />';
+    $clearimg = '<img src="' . base_path() . \Drupal::service('extension.list.module')->getPath('reserve') . '/images/clear.png" />';
     $modal = ['attributes' => [
       'class' => ['use-ajax'],
       'data-dialog-type' => 'modal',
@@ -371,12 +372,12 @@ class CalendarController extends ControllerBase {
     $variables['#calendar-text'] = $config->get('calendar_text');
     $variables['#reserve_room_instructions_text'] = $config->get('reserve_instructions') ? $config->get('reserve_instructions') :
       t('To make a reservation, click on the desired time/day in the calendar below. You will be asked to login.');
-    $variables['#arrow'] = base_path() . drupal_get_path('module', 'reserve') . '/images/arrow-icon.png';
+    $variables['#arrow'] = base_path() . \Drupal::service('extension.list.module')->getPath('reserve') . '/images/arrow-icon.png';
     $variables['#date'] = \Drupal::service('date.formatter')->format(strtotime($month . ' ' . $xday . ', ' . $year), 'custom', 'l, F d, Y');
     $variables['#date_picker'] = \Drupal::formBuilder()->getForm('Drupal\reserve\Form\CalendarDatePicker');
 
     $field = reserve_category_fields($ebundle);
-    $fconfig = \Drupal\field\Entity\FieldConfig::loadByName($entity_type, $bundle, $field)->getSettings();
+    $fconfig = FieldConfig::loadByName($entity_type, $bundle, $field)->getSettings();
     $variables['#calendar_header'] = $fconfig['calendar_header'];
     $variables['#reservation_instructions'] = $fconfig['reservation_instructions'];
 
diff --git a/src/Plugin/Field/FieldFormatter/ReserveCategoryFormatter.php b/src/Plugin/Field/FieldFormatter/ReserveCategoryFormatter.php
index 7eb2f30..b19fa81 100644
--- a/src/Plugin/Field/FieldFormatter/ReserveCategoryFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ReserveCategoryFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\reserve\Plugin\Field\FieldFormatter;
 
+use Drupal\reserve\Entity\ReserveCategory;
 use Drupal\Core\Field\FormatterBase;
 use Drupal\Core\Field\FieldItemListInterface;
 
@@ -35,7 +36,7 @@ class ReserveCategoryFormatter extends FormatterBase {
     $element = [];
 
     foreach ($items as $delta => $item) {
-      $category =  \Drupal\reserve\Entity\ReserveCategory::load($item->cid);
+      $category =  ReserveCategory::load($item->cid);
       // Render each element as markup.
       $element[$delta] = [
         '#type' => 'markup',
diff --git a/src/Plugin/Field/FieldWidget/ReserveCategorySelect.php b/src/Plugin/Field/FieldWidget/ReserveCategorySelect.php
index 7644242..7b73085 100644
--- a/src/Plugin/Field/FieldWidget/ReserveCategorySelect.php
+++ b/src/Plugin/Field/FieldWidget/ReserveCategorySelect.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\reserve\Plugin\Field\FieldWidget;
 
+use Drupal\reserve\Entity\ReserveCategory;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\WidgetBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -30,7 +31,7 @@ class ReserveCategorySelect extends WidgetBase {
     $set = $items->getSettings()['categories'];
 
     $ids = \Drupal::entityQuery('reserve_category')->sort('name', 'ASC')->execute();
-    $categories =  \Drupal\reserve\Entity\ReserveCategory::loadMultiple($ids);
+    $categories =  ReserveCategory::loadMultiple($ids);
     $options = array();
     foreach ($categories as $key => $cat) {
       if (!in_array($key, $set)) continue;
