modules/contrib/focal_point/focal_point.install
modules/contrib/focal_point/tests/src/FunctionalJavascript/MediaLibraryIntegrationTest.php
modules/contrib/focal_point/focal_point.module
modules/contrib/focal_point/tests/src/Unit/Effects/FocalPointEffectsTest.php
modules/contrib/focal_point/src/Controller/FocalPointPreviewController.php
modules/contrib/focal_point/src/FocalPointEffectBase.php
modules/contrib/focal_point/src/FocalPointManager.php
modules/contrib/focal_point/src/FocalPointManagerInterface.php
modules/contrib/focal_point/src/Plugin/Field/FieldWidget/FocalPointImageWidget.php
modules/contrib/focal_point/src/Plugin/ImageEffect/FocalPointCropImageEffect.php
modules/contrib/focal_point/src/Plugin/ImageEffect/FocalPointScaleAndCropImageEffect.php
modules/contrib/focal_point/tests/src/Functional/FocalPointWidgetTest.php
modules/contrib/focal_point/tests/src/Unit/FieldWidgets/FocalPointFieldWidgetTest.php
modules/contrib/focal_point/tests/src/Unit/FocalPointManagerTest.php
modules/contrib/focal_point/tests/src/Unit/FocalPointUnitTestCase.php

6 files with changes
====================

1) modules/contrib/focal_point/tests/src/Functional/FocalPointWidgetTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create an article content type that we will use for testing.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/focal_point/tests/src/Unit/FocalPointUnitTestCase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\focal_point\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\crop\CropStorageInterface;
 use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Image\ImageInterface;
@@ @@
  */
 abstract class FocalPointUnitTestCase extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Drupal container.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $crop_storage = $this->prophesize(CropStorageInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/focal_point/tests/src/Unit/FocalPointManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\focal_point\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\crop\CropInterface;
 use Drupal\focal_point\FocalPointManager;
 use Drupal\Core\Entity\EntityTypeManager;
@@ @@
  */
 class FocalPointManagerTest extends FocalPointUnitTestCase {

+  use ProphecyTrait;
   /**
    * Test constructor.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/focal_point/tests/src/Unit/FieldWidgets/FocalPointFieldWidgetTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\focal_point\Unit\FieldWidgets;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\focal_point\FocalPointManager;
 use Drupal\focal_point\Plugin\Field\FieldWidget\FocalPointImageWidget;
 use Drupal\Core\Entity\EntityTypeManager;
@@ @@
  */
 class FocalPointFieldWidgetTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * A simple form element for testing.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create some mock objects.
@@ @@

     // Setup a mock form state object for testing.
     // @todo: Figure out why using prophesize for this mock causes an exception.
-    $this->testFormState = $this->getMockBuilder('\Drupal\Core\Form\FormStateInterface')->disableOriginalConstructor()->getMock();
+    $this->testFormState = $this->createMock('\Drupal\Core\Form\FormStateInterface');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/focal_point/tests/src/Unit/Effects/FocalPointEffectsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\focal_point\Unit\Effects;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\crop\CropInterface;
 use Drupal\crop\CropStorageInterface;
@@ @@
  */
 class FocalPointEffectsTest extends FocalPointUnitTestCase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
   }
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/focal_point/tests/src/FunctionalJavascript/MediaLibraryIntegrationTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalCreateContentType([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

