diff --git a/src/EventSubscriber/ResponseSubscriber.php b/src/EventSubscriber/ResponseSubscriber.php
index 6a57aaf..e87bc24 100644
--- a/src/EventSubscriber/ResponseSubscriber.php
+++ b/src/EventSubscriber/ResponseSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\reporting\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ -9,7 +10,6 @@ use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\reporting\ReportingResponse;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -62,10 +62,10 @@ class ResponseSubscriber implements EventSubscriberInterface {
   /**
    * Prevent other response event listeners from altering reporting responses.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The response event.
    */
-  public function reportingResponses(FilterResponseEvent $event) {
+  public function reportingResponses(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
@@ -78,10 +78,10 @@ class ResponseSubscriber implements EventSubscriberInterface {
   /**
    * Add report-to header to the response.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The response event.
    */
-  public function addReportToHeader(FilterResponseEvent $event) {
+  public function addReportToHeader(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
