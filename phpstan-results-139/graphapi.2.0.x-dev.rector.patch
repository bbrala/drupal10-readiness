diff --git a/graphapi.install b/graphapi.install
index a53dad1..dba0d3b 100644
--- a/graphapi.install
+++ b/graphapi.install
@@ -12,7 +12,7 @@ function graphapi_requirements($phase) {
     );
 
     if (!class_exists('\\Fhaculty\\Graph\\GraphViz')) {
-      $path = drupal_get_path('module', 'graphapi');
+      $path = \Drupal::service('extension.list.module')->getPath('graphapi');
       $requirements['graphapi']['description'] = "FIX ME"; //t('Please follow the instructions from !readme', array('!readme' => \Drupal::l("README.txt", Url::fromUri($path . "/README.txt"))));
       $requirements['graphapi']['value'] = 'Missing';
       $requirements['graphapi']['severity'] = REQUIREMENT_ERROR;
diff --git a/graphapi.module b/graphapi.module
index 4427825..d69e153 100644
--- a/graphapi.module
+++ b/graphapi.module
@@ -299,7 +299,7 @@ function _graphapi_uniform_id($config, $id) {
 function graphapi_views_api() {
   return array(
     'api' => 3.0,
-    'path' => drupal_get_path('module', 'graphapi') . '/views',
+    'path' => \Drupal::service('extension.list.module')->getPath('graphapi') . '/views',
   );
 }
 
@@ -526,7 +526,7 @@ function _graphapi_dump_to_properties($options, $recurse = FALSE) {
 }
 
 function graphapi_direct_dump($g) {
-  $graph = new Fhaculty\Graph\Graph();
+  $graph = new Graph();
   foreach ($g as $from_id => $from_data) {
     $v = $graph->createVertex($from_id);
     if (isset($from_data['data'])) {
diff --git a/modules/graphapi_class/graphapi_class.module b/modules/graphapi_class/graphapi_class.module
index ff64f68..f02c081 100644
--- a/modules/graphapi_class/graphapi_class.module
+++ b/modules/graphapi_class/graphapi_class.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Component\Discovery\YamlDiscovery;
 use Fhaculty\Graph\Uml\ClassDiagramBuilder;
 use Fhaculty\Graph\GraphViz;
 use Fhaculty\Graph\Graph;
@@ -103,7 +104,7 @@ function _graphapi_class_cache_set($cid, $data) {
 }
 
 function _graphapi_class_services() {
-  $yaml_discovery = new \Drupal\Component\Discovery\YamlDiscovery('services', \Drupal::moduleHandler()->getModuleDirectories());
+  $yaml_discovery = new YamlDiscovery('services', \Drupal::moduleHandler()->getModuleDirectories());
   $yaml = $yaml_discovery->findAll();
   $classes = array();
   foreach ($yaml as $module => $services) {
diff --git a/modules/graphapi_devel/graphapi_devel.module b/modules/graphapi_devel/graphapi_devel.module
index 5578ef1..8d236a7 100644
--- a/modules/graphapi_devel/graphapi_devel.module
+++ b/modules/graphapi_devel/graphapi_devel.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Component\Graph\Graph;
+use Drupal\Component\Discovery\YamlDiscovery;
+use Fhaculty\Graph\GraphViz;
 /**
  * Implements hook_menu().
  */
@@ -106,7 +109,7 @@ function graphapi_devel_system_module_install_layout() {
   $graph = _graphapi_devel_system_module_install_layout();
 
   // Apply Graph weight algoritm
-  $g = new Drupal\Component\Graph\Graph($graph);
+  $g = new Graph($graph);
   $graph = $g->searchAndSort();
   foreach ($graph as $id => $node) {
     $graph[$id]['data']['rank'] = 1 - $graph[$id]['weight'];
@@ -301,7 +304,7 @@ function _graphapi_system_module_install_layout_active() {
 }
 
 function graphapi_devel_routing() {
-  $yaml_discovery = new \Drupal\Component\Discovery\YamlDiscovery('routing', \Drupal::moduleHandler()->getModuleDirectories());
+  $yaml_discovery = new YamlDiscovery('routing', \Drupal::moduleHandler()->getModuleDirectories());
   $yaml = $yaml_discovery->findAll();
 
   //$graph = graphapi_new_graph();
@@ -344,7 +347,7 @@ function graphapi_devel_routing() {
     }
   }
   $options = array(
-    Fhaculty\Graph\GraphViz::LAYOUT_GRAPH => array(
+    GraphViz::LAYOUT_GRAPH => array(
       'layout' => 'twopi',
       'ranksep' => '3',
       'ratio' => 'auto',
diff --git a/views/graphapi.views.inc b/views/graphapi.views.inc
index d7a08cf..dd0e1a1 100644
--- a/views/graphapi.views.inc
+++ b/views/graphapi.views.inc
@@ -11,7 +11,7 @@
  * Implements hook_views_plugins().
  */
 function graphapi_views_plugins() {
-  $path = drupal_get_path('module', 'graphapi') . '/views';
+  $path = \Drupal::service('extension.list.module')->getPath('graphapi') . '/views';
   return array(
     'module' => 'graphapi',
     'style' => array(
diff --git a/views/theme/views_graphapi_style.theme.inc b/views/theme/views_graphapi_style.theme.inc
index 1bbab3b..f2e8ac2 100644
--- a/views/theme/views_graphapi_style.theme.inc
+++ b/views/theme/views_graphapi_style.theme.inc
@@ -67,7 +67,7 @@ function _views_graphapi_style_build_graph_data(&$vars) {
     $defined_fields = array_keys($view->field);
     $diff = array_diff(array_keys($fields), $defined_fields);
     if (count($diff)) {
-      drupal_set_message(t("Some fields are removed from %view. Please check it's definition.", array('%view' => $view->human_name)), 'error');
+      \Drupal::messenger()->addError(t("Some fields are removed from %view. Please check it's definition.", array('%view' => $view->human_name)));
       $vars['graph'] = array();
       $vars['graph-config'] = $vars['settings'];
       return;
