modules/contrib/views_taxonomy_term_name_into_id/src/Plugin/views/argument_validator/TermNameAsId.php
modules/contrib/views_taxonomy_term_name_into_id/tests/src/Functional/ArgumentValidatorTest.php
modules/contrib/views_taxonomy_term_name_into_id/tests/src/Kernel/VTTNIITestViewsTest.php

1 file with changes
===================

1) modules/contrib/views_taxonomy_term_name_into_id/tests/src/Functional/ArgumentValidatorTest.php:61

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp($import_test_views);

     ViewTestData::createTestViews(get_class($this), ['views_taxonomy_term_name_into_id_test']);
@@ @@
   public function testViewsWithTaxonomyTermNameArgument() {
     // Test the view with results.
     $this->drupalGet('test_argument_taxonomy_name_into_id/' . $this->terms[1]->getName());
-    $this->assertLink($this->node->label());
+    $this->assertSession()->linkExists($this->node->label());

     // Test the view with no results found.
     $this->drupalGet('test_argument_taxonomy_name_into_id/' . $this->terms[2]->getName());
-    $this->assertResponse(200);
-    $this->assertNoLink($this->node->label());
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->linkNotExists($this->node->label());

     // Test the view with an invalid argument.
     $this->drupalGet('test_argument_taxonomy_name_into_id/xyz');
-    $this->assertResponse(404);
+    $this->assertSession()->statusCodeEquals(404);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertLinkRector
 * AssertNoLinkRector
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

