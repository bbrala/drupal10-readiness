diff --git a/src/CKEditorMentionEvent.php b/src/CKEditorMentionEvent.php
index f0fec62..b68d466 100644
--- a/src/CKEditorMentionEvent.php
+++ b/src/CKEditorMentionEvent.php
@@ -3,10 +3,11 @@
 // @codingStandardsIgnoreFile
 namespace Drupal\ckeditor_mentions;
 
+use Symfony\Contracts\EventDispatcher\Event;
+use Drupal\ckeditor_mentions\Events\CKEditorMentionsEvent;
 use Drupal\ckeditor_mentions\Events\CKEditorMentionEventInterface;
 use Drupal\ckeditor_mentions\MentionsType\MentionsTypeInterface;
 use Drupal\Core\Entity\EntityInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class provide the mention event.
@@ -46,7 +47,7 @@ class CKEditorMentionEvent extends Event implements CKEditorMentionEventInterfac
    *   The users mentioned in the entity.
    */
   public function __construct(EntityInterface $entity, array $information = []) {
-    $this->event = new Events\CKEditorMentionsEvent($entity, $information['entity'], $information['plugin'], $information);
+    $this->event = new CKEditorMentionsEvent($entity, $information['entity'], $information['plugin'], $information);
   }
 
   /**
diff --git a/src/CKEditorMentionSuggestionEvent.php b/src/CKEditorMentionSuggestionEvent.php
index 888adef..73df0eb 100644
--- a/src/CKEditorMentionSuggestionEvent.php
+++ b/src/CKEditorMentionSuggestionEvent.php
@@ -3,8 +3,9 @@
 // @codingStandardsIgnoreFile
 namespace Drupal\ckeditor_mentions;
 
+use Symfony\Contracts\EventDispatcher\Event;
+use Drupal\ckeditor_mentions\Events\CKEditorMentionSuggestionsEvent;
 use Drupal\ckeditor_mentions\Events\CKEditorMentionSuggestionEventInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class CKEditorMentionSuggestionEvent.
@@ -36,7 +37,7 @@ class CKEditorMentionSuggestionEvent extends Event implements CKEditorMentionSug
    *   The keyword  used by the user.
    */
   public function __construct(string $keyword) {
-    $this->event = new Events\CKEditorMentionSuggestionsEvent($keyword, []);
+    $this->event = new CKEditorMentionSuggestionsEvent($keyword, []);
   }
 
   /**
diff --git a/src/Events/CKEditorMentionSuggestionsEvent.php b/src/Events/CKEditorMentionSuggestionsEvent.php
index f0ee379..a4c0f02 100644
--- a/src/Events/CKEditorMentionSuggestionsEvent.php
+++ b/src/Events/CKEditorMentionSuggestionsEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\ckeditor_mentions\Events;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Provides a Ckeditor mentions suggestion event.
diff --git a/src/Events/CKEditorMentionsEvent.php b/src/Events/CKEditorMentionsEvent.php
index dc7d418..0b50a56 100644
--- a/src/Events/CKEditorMentionsEvent.php
+++ b/src/Events/CKEditorMentionsEvent.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\ckeditor_mentions\Events;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\ckeditor_mentions\MentionsType\MentionsTypeInterface;
 use Drupal\Core\Entity\EntityInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class provide the mention event.
diff --git a/src/MentionEventDispatcher.php b/src/MentionEventDispatcher.php
index 43d224f..559de38 100644
--- a/src/MentionEventDispatcher.php
+++ b/src/MentionEventDispatcher.php
@@ -113,14 +113,14 @@ class MentionEventDispatcher {
     // @todo Remove in 3.0
     foreach ($mentioned_entities as $mentioned_entity) {
       $event = new CKEditorMentionsEvent($entity, $mentioned_entity['entity'], $mentioned_entity['plugin'], $mentioned_entity);
-      $dispatcher->dispatch($event_name, $event);
+      $dispatcher->dispatch($event, $event_name);
 
       $legacy_event_name = $event_name === CKEditorEvents::MENTION_FIRST ? CKEditorMentionEvent::MENTION_FIRST : CKEditorMentionEvent::MENTION_SUBSEQUENT;
       $legacy_event = new CKEditorMentionEvent($event->getEntity(), [
         'entity' => $event->getMentionedEntity(),
         'plugin' => $event->getPlugin(),
       ] + $event->getAdditionalInformation());
-      $dispatcher->dispatch($legacy_event_name, $legacy_event);
+      $dispatcher->dispatch($legacy_event, $legacy_event_name);
     }
   }
 
diff --git a/src/MentionsType/MentionsTypeBase.php b/src/MentionsType/MentionsTypeBase.php
index 626b16e..46b6631 100644
--- a/src/MentionsType/MentionsTypeBase.php
+++ b/src/MentionsType/MentionsTypeBase.php
@@ -181,11 +181,11 @@ abstract class MentionsTypeBase extends PluginBase implements MentionsTypeInterf
    */
   protected function dispatchSuggestionsEvent(array $suggestions): array {
     $suggestion_event = new CKEditorMentionSuggestionsEvent($this->getMatch(), $suggestions);
-    $this->eventDispatcher->dispatch(CKEditorEvents::SUGGESTION, $suggestion_event);
+    $this->eventDispatcher->dispatch($suggestion_event, CKEditorEvents::SUGGESTION);
     // @todo Remove in 3.0
     $suggestion_event_legacy = new CKEditorMentionSuggestionEvent($this->getMatch());
     $suggestion_event_legacy->setSuggestions($suggestion_event->getSuggestions());
-    $this->eventDispatcher->dispatch(CKEditorMentionSuggestionEvent::SUGGESTION, $suggestion_event);
+    $this->eventDispatcher->dispatch($suggestion_event, CKEditorMentionSuggestionEvent::SUGGESTION);
 
     return $suggestion_event_legacy->getSuggestions();
   }
diff --git a/tests/src/Kernel/CkeditorMentionsEventsTest.php b/tests/src/Kernel/CkeditorMentionsEventsTest.php
index 42c4fc9..8671c13 100644
--- a/tests/src/Kernel/CkeditorMentionsEventsTest.php
+++ b/tests/src/Kernel/CkeditorMentionsEventsTest.php
@@ -62,7 +62,7 @@ class CkeditorMentionsEventsTest extends KernelTestBase {
     $entities = $this->dispatcher->getMentionedEntities($search_string);
 
     $this->assertNotEmpty($entities);
-    $this->assertEqual($entities[$id]['entity']->id(), $user->id());
+    $this->assertEquals($entities[$id]['entity']->id(), $user->id());
 
     $search_string = "<p><a data-mention=\"$id\" data-plugin=\"not_existing\" href=\"/user/3\">@Kekwinko Pesto</a></p>";
     $this->expectException(PluginNotFoundException::class);
@@ -74,7 +74,7 @@ class CkeditorMentionsEventsTest extends KernelTestBase {
    */
   public function testTestFormatUsingMentions() {
     $formats = $this->dispatcher->getTexformatsUsingMentions();
-    $this->assertEqual([$this->format->id()], $formats);
+    $this->assertEquals([$this->format->id()], $formats);
 
     $setting = $this->editor->getSettings();
     $setting['plugins']['mentions']['enable'] = FALSE;
@@ -116,7 +116,7 @@ class CkeditorMentionsEventsTest extends KernelTestBase {
     ]);
 
     $this->dispatcher->dispatchMentionEvent($node, CKEditorEvents::MENTION_FIRST);
-    $this->assertEqual($node->getTitle(), TestSubscriber::TEST_MENTIONED_USER_NAME);
+    $this->assertEquals($node->getTitle(), TestSubscriber::TEST_MENTIONED_USER_NAME);
   }
 
   /**
@@ -136,7 +136,7 @@ class CkeditorMentionsEventsTest extends KernelTestBase {
     ]);
     $response = $plugin->buildResponse();
 
-    $this->assertEqual($response, TestSubscriber::TEST_SUGGESTION_EXPECT);
+    $this->assertEquals($response, TestSubscriber::TEST_SUGGESTION_EXPECT);
   }
 
 }
diff --git a/tests/src/Kernel/CkeditorMentionsUserTest.php b/tests/src/Kernel/CkeditorMentionsUserTest.php
index 849e814..c372979 100644
--- a/tests/src/Kernel/CkeditorMentionsUserTest.php
+++ b/tests/src/Kernel/CkeditorMentionsUserTest.php
@@ -50,7 +50,7 @@ class CkeditorMentionsUserTest extends KernelTestBase {
         'user_name' => $user->getDisplayName(),
       ];
     }
-    $this->assertIdentical($response, $expected);
+    $this->assertSame($response, $expected);
 
     $plugin->setMatch('Kip');
     $response = $plugin->buildResponse();
@@ -75,7 +75,7 @@ class CkeditorMentionsUserTest extends KernelTestBase {
     $response = $plugin->buildResponse();
 
     $this->assertNotEmpty($response);
-    $this->assertEqual(current($response)['id'], $user->id());
+    $this->assertEquals(current($response)['id'], $user->id());
   }
 
 }
