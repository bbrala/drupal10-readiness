diff --git a/language_cookie.api.php b/language_cookie.api.php
index 1e7378f..281aaf1 100644
--- a/language_cookie.api.php
+++ b/language_cookie.api.php
@@ -37,7 +37,7 @@ function hook_language_cookie_condition_info_alter(array &$plugins) {
  */
 function hook_language_cookie_alter(Cookie &$cookie) {
   $default_langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
-  $cookie = new Cookie('my_altered_language_cookie', $default_langcode);
+  $cookie = Cookie::create('my_altered_language_cookie', $default_langcode);
 }
 
 /**
diff --git a/src/EventSubscriber/LanguageCookieSubscriber.php b/src/EventSubscriber/LanguageCookieSubscriber.php
index d0d5af9..ddae3eb 100644
--- a/src/EventSubscriber/LanguageCookieSubscriber.php
+++ b/src/EventSubscriber/LanguageCookieSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\language_cookie\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Executable\ExecutableManagerInterface;
@@ -13,7 +14,6 @@ use Drupal\language\Plugin\LanguageNegotiation\LanguageNegotiationSelected;
 use Drupal\language_cookie\Plugin\LanguageNegotiation\LanguageNegotiationCookie;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Cookie;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -24,7 +24,7 @@ class LanguageCookieSubscriber implements EventSubscriberInterface {
   /**
    * The event.
    *
-   * @var \Symfony\Component\HttpKernel\Event\FilterResponseEvent
+   * @var \Symfony\Component\HttpKernel\Event\ResponseEvent
    */
   protected $event;
 
@@ -145,7 +145,7 @@ class LanguageCookieSubscriber implements EventSubscriberInterface {
   /**
    * Event callback for setting the language cookie.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The response event.
    *
    * @return bool
@@ -153,7 +153,7 @@ class LanguageCookieSubscriber implements EventSubscriberInterface {
    *   - TRUE if all conditions pass. If a language is available, the cookie
    *     will have been set.
    */
-  public function setLanguageCookie(FilterResponseEvent $event) {
+  public function setLanguageCookie(ResponseEvent $event) {
     $this->event = $event;
     $config = $this->configFactory->get('language_cookie.negotiation');
 
diff --git a/tests/src/Functional/LanguageCookieNegotiationConfigTest.php b/tests/src/Functional/LanguageCookieNegotiationConfigTest.php
index 73c18b9..b55f07e 100644
--- a/tests/src/Functional/LanguageCookieNegotiationConfigTest.php
+++ b/tests/src/Functional/LanguageCookieNegotiationConfigTest.php
@@ -118,7 +118,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
 
-    $this->assertRegExp('/max-age=86/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains expires option.');
+    $this->assertMatchesRegularExpression('/max-age=86/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains expires option.');
 
     $config->set('time', 60 * 60 * 24 * 2);
     $config->save();
@@ -126,7 +126,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('en/node/' . $node->id());
 
-    $this->assertRegExp('/max-age=172/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains expires option.');
+    $this->assertMatchesRegularExpression('/max-age=172/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains expires option.');
   }
 
   /**
@@ -139,7 +139,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
 
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
-    $this->assertRegExp('/path=\/drupal;/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains path option.');
+    $this->assertMatchesRegularExpression('/path=\/drupal;/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains path option.');
   }
 
   /**
@@ -153,7 +153,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
 
-    $this->assertRegExp('/domain=example\.org;/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains domain option.');
+    $this->assertMatchesRegularExpression('/domain=example\.org;/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains domain option.');
   }
 
   /**
@@ -167,7 +167,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
 
-    $this->assertRegExp('/secure/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains secure option.');
+    $this->assertMatchesRegularExpression('/secure/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains secure option.');
   }
 
   /**
@@ -181,13 +181,13 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
 
-    $this->assertRegExp('/httponly/i', $this->getSession()->getResponseHeader('Set-Cookie'), 'Cookie contains httpOnly option.');
+    $this->assertMatchesRegularExpression('/httponly/i', $this->getSession()->getResponseHeader('Set-Cookie'), 'Cookie contains httpOnly option.');
 
     $config->set('http_only', FALSE);
     $config->save();
 
     $this->drupalGet('en/node/' . $node->id());
-    $this->assertNotRegExp('/httponly/i', $this->getSession()->getResponseHeader('Set-Cookie'), 'Cookie contains httpOnly option.');
+    $this->assertDoesNotMatchRegularExpression('/httponly/i', $this->getSession()->getResponseHeader('Set-Cookie'), 'Cookie contains httpOnly option.');
   }
 
   /**
@@ -196,13 +196,13 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
   public function testLanguageCookieSetOnEveryPageLoadOption() {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
-    $this->assertRegExp('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
 
     $this->drupalGet('fr/node/' . $node->id());
     $this->assertEmpty($this->drupalGetHeader('Set-Cookie'));
 
     $this->drupalGet('en/node/' . $node->id());
-    $this->assertRegExp('/language=en/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=en/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
 
     $config = $this->config('language_cookie.negotiation');
     $config->set('set_on_every_pageload', TRUE);
@@ -210,13 +210,13 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
 
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
-    $this->assertRegExp('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
 
     $this->drupalGet('fr/node/' . $node->id());
-    $this->assertRegExp('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
 
     $this->drupalGet('en/node/' . $node->id());
-    $this->assertRegExp('/language=en/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=en/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
   }
 
 }
