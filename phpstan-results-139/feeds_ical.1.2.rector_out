modules/contrib/feeds_ical/feeds_ical.install
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/CarbonInterval.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/fr.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/gl.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/he.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/hr.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/hu.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/hy.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/id.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/it.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/ja.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/ka.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/km.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/ko.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/lt.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/lv.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/mk.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/ms.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/nl.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/no.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/pl.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/pt.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/pt_BR.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/ro.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/ru.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/sk.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/sl.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/sq.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/sr.php
modules/contrib/feeds_ical/src/Feeds/Item/IcalItem.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/sr_Cyrl_ME.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/sr_Latn_ME.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/sr_ME.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/sv.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/th.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/tr.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/uk.php
modules/contrib/feeds_ical/src/Feeds/Parser/IcalParser.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/ur.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/uz.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/vi.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/zh.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/zh_TW.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidDateException.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/af.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/ar.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/az.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/bg.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/bn.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/ca.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/cs.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/da.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/de.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/el.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/en.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/eo.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/es.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/et.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/eu.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/fa.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/fi.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Lang/fo.php
modules/contrib/feeds_ical/vendor/autoload.php
modules/contrib/feeds_ical/vendor/composer/ClassLoader.php
modules/contrib/feeds_ical/vendor/composer/autoload_classmap.php
modules/contrib/feeds_ical/vendor/composer/autoload_files.php
modules/contrib/feeds_ical/vendor/composer/autoload_namespaces.php
modules/contrib/feeds_ical/vendor/composer/autoload_psr4.php
modules/contrib/feeds_ical/vendor/composer/autoload_real.php
modules/contrib/feeds_ical/vendor/composer/autoload_static.php
modules/contrib/feeds_ical/vendor/johngrogg/ics-parser/examples/index.php
modules/contrib/feeds_ical/vendor/johngrogg/ics-parser/src/ICal/Event.php
modules/contrib/feeds_ical/vendor/johngrogg/ics-parser/src/ICal/ICal.php
modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Carbon.php

5 files with changes
====================

1) modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/CarbonInterval.php:10

    ---------- begin diff ----------
@@ @@

 namespace Carbon;

+use Symfony\Contracts\Translation\TranslatorInterface;
 use DateInterval;
 use InvalidArgumentException;
 use Symfony\Component\Translation\Loader\ArrayLoader;
 use Symfony\Component\Translation\Translator;
-use Symfony\Component\Translation\TranslatorInterface;

 /**
  * A simple API extension for DateInterval.
@@ @@
     /**
      * A translator to ... er ... translate stuff
      *
-     * @var \Symfony\Component\Translation\TranslatorInterface
+     * @var \Symfony\Contracts\Translation\TranslatorInterface
      */
     protected static $translator;

@@ @@
     ///////////////////////////////////////////////////////////////////
     /////////////////////// LOCALIZATION //////////////////////////////
     ///////////////////////////////////////////////////////////////////
-
     /**
      * Initialize the translator instance if necessary.
      *
-     * @return \Symfony\Component\Translation\TranslatorInterface
+     * @return \Symfony\Contracts\Translation\TranslatorInterface
      */
     protected static function translator()
     {
@@ @@
     /**
      * Get the translator instance in use
      *
-     * @return \Symfony\Component\Translation\TranslatorInterface
+     * @return \Symfony\Contracts\Translation\TranslatorInterface
      */
     public static function getTranslator()
     {
@@ @@
     /**
      * Set the translator instance to use
      *
-     * @param TranslatorInterface $translator
+     * @param \Symfony\Contracts\Translation\TranslatorInterface $translator
      */
     public static function setTranslator(TranslatorInterface $translator)
     {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/feeds_ical/vendor/nesbot/carbon/src/Carbon/Carbon.php:10

    ---------- begin diff ----------
@@ @@

 namespace Carbon;

+use Symfony\Contracts\Translation\TranslatorInterface;
 use Carbon\Exceptions\InvalidDateException;
 use Closure;
 use DatePeriod;
@@ @@
 use InvalidArgumentException;
 use Symfony\Component\Translation\Loader\ArrayLoader;
 use Symfony\Component\Translation\Translator;
-use Symfony\Component\Translation\TranslatorInterface;

 /**
  * A simple API extension for DateTime
@@ @@
     /**
      * A translator to ... er ... translate stuff.
      *
-     * @var \Symfony\Component\Translation\TranslatorInterface
+     * @var \Symfony\Contracts\Translation\TranslatorInterface
      */
     protected static $translator;

@@ @@
     ///////////////////////////////////////////////////////////////////
     /////////////////////// LOCALIZATION //////////////////////////////
     ///////////////////////////////////////////////////////////////////
-
     /**
      * Initialize the translator instance if necessary.
      *
-     * @return \Symfony\Component\Translation\TranslatorInterface
+     * @return \Symfony\Contracts\Translation\TranslatorInterface
      */
     protected static function translator()
     {
@@ @@
     /**
      * Get the translator instance in use
      *
-     * @return \Symfony\Component\Translation\TranslatorInterface
+     * @return \Symfony\Contracts\Translation\TranslatorInterface
      */
     public static function getTranslator()
     {
@@ @@
     /**
      * Set the translator instance to use
      *
-     * @param \Symfony\Component\Translation\TranslatorInterface $translator
+     * @param \Symfony\Contracts\Translation\TranslatorInterface $translator
      */
     public static function setTranslator(TranslatorInterface $translator)
     {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/feeds_ical/vendor/composer/autoload_real.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Composer\Autoload\ClassLoader;
+use Composer\Autoload\ComposerStaticInitf41804c989a67b26034ce47de705ea17;
 // autoload_real.php @generated by Composer

 class ComposerAutoloaderInitf41804c989a67b26034ce47de705ea17
@@ @@
         }

         spl_autoload_register(array('ComposerAutoloaderInitf41804c989a67b26034ce47de705ea17', 'loadClassLoader'), true, true);
-        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
+        self::$loader = $loader = new ClassLoader();
         spl_autoload_unregister(array('ComposerAutoloaderInitf41804c989a67b26034ce47de705ea17', 'loadClassLoader'));

         $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
@@ @@
         if ($useStaticLoader) {
             require_once __DIR__ . '/autoload_static.php';

-            call_user_func(\Composer\Autoload\ComposerStaticInitf41804c989a67b26034ce47de705ea17::getInitializer($loader));
+            call_user_func(ComposerStaticInitf41804c989a67b26034ce47de705ea17::getInitializer($loader));
         } else {
             $map = require __DIR__ . '/autoload_namespaces.php';
             foreach ($map as $namespace => $path) {
@@ @@
         $loader->register(true);

         if ($useStaticLoader) {
-            $includeFiles = Composer\Autoload\ComposerStaticInitf41804c989a67b26034ce47de705ea17::$files;
+            $includeFiles = ComposerStaticInitf41804c989a67b26034ce47de705ea17::$files;
         } else {
             $includeFiles = require __DIR__ . '/autoload_files.php';
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


4) modules/contrib/feeds_ical/src/Feeds/Parser/IcalParser.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\feeds_ical\Feeds\Parser;

-require_once drupal_get_path('module', 'feeds_ical').DIRECTORY_SEPARATOR.'vendor'.DIRECTORY_SEPARATOR.'autoload.php';
+require_once \Drupal::service('extension.list.module')->getPath('feeds_ical').DIRECTORY_SEPARATOR.'vendor'.DIRECTORY_SEPARATOR.'autoload.php';

 use Drupal\feeds\Component\XmlParserTrait;
 use Drupal\feeds\Exception\EmptyFeedException;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/feeds_ical/feeds_ical.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\feeds_ical\Feeds\Parser\IcalParser;
 /**
  * @file
  * Install/update/uninstall hooks.
  */
-
 /**
  * Fix feed mapping values to match machine names.
  */
@@ @@
   ];

   foreach (\Drupal::entityTypeManager()->getStorage('feeds_feed_type')->loadMultiple() as $feed_type) {
-    if ($feed_type->getParser() instanceof \Drupal\feeds_ical\Feeds\Parser\IcalParser) {
+    if ($feed_type->getParser() instanceof IcalParser) {
       $mappings = $feed_type->getMappings();
       $mappings = array_map(function ($mapping) use ($properties) {
         if (!empty($mapping['map']['value']) && in_array($mapping['map']['value'], $properties)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

