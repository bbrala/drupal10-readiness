modules/contrib/examples/examples.module
modules/contrib/examples/modules/ajax_example/src/Form/Simplest.php
modules/contrib/examples/modules/batch_example/tests/src/Functional/BatchExampleWebTest.php
modules/contrib/examples/modules/config_entity_example/config_entity_example.module
modules/contrib/examples/modules/content_entity_example/content_entity_example.module
modules/contrib/examples/modules/cron_example/src/Plugin/QueueWorker/ReportWorkerBase.php
modules/contrib/examples/modules/email_example/src/Form/EmailExampleGetFormPage.php
modules/contrib/examples/modules/config_entity_example/src/Controller/RobotListBuilder.php
modules/contrib/examples/modules/content_entity_example/src/ContactAccessControlHandler.php
modules/contrib/examples/modules/field_example/src/Plugin/Field/FieldFormatter/ColorBackgroudFormatter.php
modules/contrib/examples/modules/field_permission_example/src/Plugin/Field/FieldFormatter/SimpleTextFormatter.php
modules/contrib/examples/modules/form_api_example/src/Form/SimpleForm.php
modules/contrib/examples/modules/js_example/js_example.module
modules/contrib/examples/modules/js_example/src/Controller/JsExampleController.php
modules/contrib/examples/modules/menu_example/tests/src/Functional/MenuExampleTest.php
modules/contrib/examples/modules/page_example/src/Controller/PageExampleController.php
modules/contrib/examples/modules/action_example/src/Plugin/Action/BasicExample.php
modules/contrib/examples/modules/field_permission_example/src/Plugin/Field/FieldType/FieldNote.php
modules/contrib/examples/modules/config_entity_example/src/Entity/Robot.php
modules/contrib/examples/modules/content_entity_example/src/ContactInterface.php
modules/contrib/examples/modules/content_entity_example/src/Entity/Contact.php
modules/contrib/examples/modules/ajax_example/src/Form/SubmitDriven.php
modules/contrib/examples/modules/config_entity_example/src/Form/RobotAddForm.php
modules/contrib/examples/modules/cron_example/src/Plugin/QueueWorker/ReportWorkerOne.php
modules/contrib/examples/modules/field_example/src/Plugin/Field/FieldFormatter/SimpleTextFormatter.php
modules/contrib/examples/modules/cron_example/src/Plugin/QueueWorker/ReportWorkerTwo.php
modules/contrib/examples/modules/ajax_example/src/Form/Wizard.php
modules/contrib/examples/modules/config_entity_example/src/Form/RobotDeleteForm.php
modules/contrib/examples/modules/cron_example/tests/src/Functional/CronExampleTest.php
modules/contrib/examples/modules/field_example/src/Plugin/Field/FieldType/RgbItem.php
modules/contrib/examples/modules/phpunit_example/src/ProtectedPrivates.php
modules/contrib/examples/modules/plugin_type_example/tests/src/Functional/PluginTypeExampleTest.php
modules/contrib/examples/modules/action_example/tests/src/Functional/ActionExampleTest.php
modules/contrib/examples/modules/render_example/tests/src/Functional/RenderExampleMenuTest.php
modules/contrib/examples/modules/block_example/block_example.module
modules/contrib/examples/modules/config_entity_example/src/Form/RobotEditForm.php
modules/contrib/examples/modules/email_example/tests/src/Functional/EmailExampleTest.php
modules/contrib/examples/modules/config_entity_example/src/Form/RobotFormBase.php
modules/contrib/examples/modules/block_example/src/Controller/BlockExampleController.php
modules/contrib/examples/modules/field_permission_example/src/Plugin/Field/FieldWidget/TextWidget.php
modules/contrib/examples/modules/block_example/src/Plugin/Block/ExampleConfigurableTextBlock.php
modules/contrib/examples/modules/js_example/tests/src/Functional/JsExampleTest.php
modules/contrib/examples/modules/field_example/src/Plugin/Field/FieldWidget/ColorPickerWidget.php
modules/contrib/examples/modules/field_permission_example/tests/src/Kernel/FieldNoteItemTest.php
modules/contrib/examples/modules/field_example/src/Plugin/Field/FieldWidget/Text3Widget.php
modules/contrib/examples/modules/page_example/tests/src/Functional/PageExampleTest.php
modules/contrib/examples/modules/ajax_example/ajax_example.module
modules/contrib/examples/modules/ajax_example/src/Controller/AjaxExampleController.php
modules/contrib/examples/modules/form_api_example/src/Form/StateDemo.php
modules/contrib/examples/modules/form_api_example/src/Form/VerticalTabsDemo.php
modules/contrib/examples/modules/config_entity_example/src/RobotAccessController.php
modules/contrib/examples/modules/menu_example/menu_example.module
modules/contrib/examples/modules/menu_example/src/Access/RoleAccessCheck.php
modules/contrib/examples/modules/block_example/src/Plugin/Block/ExampleEmptyBlock.php
modules/contrib/examples/modules/ajax_example/tests/src/Functional/AjaxExampleMenuTest.php
modules/contrib/examples/modules/block_example/src/Plugin/Block/ExampleUppercaseBlock.php
modules/contrib/examples/modules/config_entity_example/tests/src/Functional/ConfigEntityExampleTest.php
modules/contrib/examples/modules/menu_example/src/Controller/MenuExampleController.php
modules/contrib/examples/modules/form_api_example/src/Plugin/Block/SimpleFormBlock.php
modules/contrib/examples/modules/events_example/events_example.module
modules/contrib/examples/modules/events_example/src/Event/IncidentEvents.php
modules/contrib/examples/modules/block_example/tests/src/Functional/BlockExampleMenuTest.php
modules/contrib/examples/modules/events_example/src/Event/IncidentReportEvent.php
modules/contrib/examples/modules/ajax_example/src/Form/Autotextfields.php
modules/contrib/examples/modules/events_example/src/EventSubscriber/EventsExampleSubscriber.php
modules/contrib/examples/modules/field_example/src/Plugin/Field/FieldWidget/TextWidget.php
modules/contrib/examples/modules/field_example/tests/src/Functional/ColorBackgroundFormatterTest.php
modules/contrib/examples/modules/events_example/src/Form/EventsExampleForm.php
modules/contrib/examples/modules/form_api_example/tests/src/Functional/FapiExampleTest.php
modules/contrib/examples/modules/block_example/tests/src/Functional/BlockExampleTest.php
modules/contrib/examples/modules/ajax_example/src/Form/DependentDropdown.php
modules/contrib/examples/modules/dbtng_example/dbtng_example.install
modules/contrib/examples/modules/content_entity_example/src/Entity/Controller/ContactListBuilder.php
modules/contrib/examples/modules/events_example/tests/src/Functional/EventsExampleTest.php
modules/contrib/examples/modules/ajax_example/tests/src/Functional/DependentDropdownTest.php
modules/contrib/examples/modules/cache_example/cache_example.module
modules/contrib/examples/modules/cache_example/src/Form/CacheExampleForm.php
modules/contrib/examples/modules/menu_example/src/Routing/MenuExampleDynamicRoutes.php
modules/contrib/examples/modules/content_entity_example/src/Form/ContactDeleteForm.php
modules/contrib/examples/modules/pager_example/pager_example.module
modules/contrib/examples/modules/pager_example/src/Controller/PagerExamplePage.php
modules/contrib/examples/modules/ajax_example/src/Form/DynamicFormSections.php
modules/contrib/examples/modules/events_example/tests/src/Kernel/EventsExampleServiceTest.php
modules/contrib/examples/modules/menu_example/src/Routing/RouteSubscriber.php
modules/contrib/examples/modules/field_example/tests/src/Functional/ColorPickerWidgetTest.php
modules/contrib/examples/modules/dbtng_example/dbtng_example.module
modules/contrib/examples/modules/dbtng_example/src/Controller/DbtngExampleController.php
modules/contrib/examples/modules/rest_example/tests/src/Functional/RestExampleSettingsTest.php
modules/contrib/examples/modules/node_type_example/node_type_example.install
modules/contrib/examples/modules/phpunit_example/tests/src/Functional/PHPUnitExampleMenuTest.php
modules/contrib/examples/modules/node_type_example/node_type_example.module
modules/contrib/examples/modules/node_type_example/src/Controller/NodeTypeExampleController.php
modules/contrib/examples/modules/node_type_example/tests/src/Functional/NodeTypeExampleTest.php
modules/contrib/examples/modules/content_entity_example/src/Form/ContactForm.php
modules/contrib/examples/modules/field_example/tests/src/Functional/FieldExampleBrowserTestBase.php
modules/contrib/examples/modules/field_example/field_example.module
modules/contrib/examples/modules/field_example/src/Controller/FieldExampleController.php
modules/contrib/examples/modules/stream_wrapper_example/tests/src/Kernel/StreamWrapperTest.php
modules/contrib/examples/modules/content_entity_example/src/Form/ContactSettingsForm.php
modules/contrib/examples/modules/content_entity_example/tests/src/Functional/ContentEntityExampleTest.php
modules/contrib/examples/modules/session_example/session_example.module
modules/contrib/examples/modules/session_example/src/Controller/SessionExampleController.php
modules/contrib/examples/modules/config_entity_example/tests/src/Functional/RobotReferenceTest.php
modules/contrib/examples/modules/ajax_example/src/Form/EntityAutocomplete.php
modules/contrib/examples/modules/ajax_example/tests/src/Functional/DynamicFormSectionsTest.php
modules/contrib/examples/modules/session_example/src/Form/SessionExampleForm.php
modules/contrib/examples/modules/tablesort_example/tablesort_example.module
modules/contrib/examples/modules/tablesort_example/tests/src/Functional/TableSortExampleTest.php
modules/contrib/examples/modules/field_example/tests/src/Functional/FieldExampleMenuTest.php
modules/contrib/examples/modules/dbtng_example/src/DbtngExampleRepository.php
modules/contrib/examples/modules/form_api_example/form_api_example.module
modules/contrib/examples/modules/form_api_example/src/Controller/Page.php
modules/contrib/examples/modules/testing_example/tests/src/Functional/SkeletonTest.php
modules/contrib/examples/modules/form_api_example/src/Form/AjaxAddMore.php
modules/contrib/examples/modules/field_example/tests/src/Functional/Text3WidgetTest.php
modules/contrib/examples/modules/testing_example/tests/src/Functional/TestingExampleMenuTest.php
modules/contrib/examples/modules/render_example/tests/src/Functional/RenderExampleTest.php
modules/contrib/examples/modules/pager_example/tests/src/Functional/PagerExampleTest.php
modules/contrib/examples/modules/ajax_example/tests/src/FunctionalJavascript/AjaxWizardTest.php
modules/contrib/examples/modules/testing_example/tests/src/Kernel/ExampleFixtureManagementTest.php
modules/contrib/examples/modules/phpunit_example/tests/src/Unit/AddClassTest.php
modules/contrib/examples/modules/page_example/page_example.module
modules/contrib/examples/modules/field_example/tests/src/Functional/TextWidgetTest.php
modules/contrib/examples/modules/tour_example/tour_example.module
modules/contrib/examples/src/Utility/DescriptionTemplateTrait.php
modules/contrib/examples/modules/form_api_example/src/Form/AjaxAddRemoveElements.php
modules/contrib/examples/modules/queue_example/queue_example.module
modules/contrib/examples/modules/queue_example/src/Form/QueueExampleForm.php
modules/contrib/examples/modules/session_example/tests/src/Functional/SessionExampleTest.php
modules/contrib/examples/tests/modules/examples_description_test/src/Controller/SampleExampleController.php
modules/contrib/examples/modules/ajax_example/tests/src/FunctionalJavascript/AutotextfieldsTest.php
modules/contrib/examples/tests/src/Functional/ExamplesBrowserTestBase.php
modules/contrib/examples/modules/testing_example/src/Controller/ContrivedController.php
modules/contrib/examples/tests/src/Functional/ExamplesTest.php
modules/contrib/examples/modules/field_permission_example/field_permission_example.module
modules/contrib/examples/modules/phpunit_example/phpunit_example.module
modules/contrib/examples/modules/phpunit_example/src/AddClass.php
modules/contrib/examples/modules/rest_example/rest_example.module
modules/contrib/examples/modules/rest_example/src/Controller/RestExampleClientController.php
modules/contrib/examples/modules/testing_example/src/Controller/TestingExampleController.php
modules/contrib/examples/modules/phpunit_example/src/Controller/PHPUnitExampleController.php
modules/contrib/examples/modules/phpunit_example/tests/src/Unit/DisplayManagerTest.php
modules/contrib/examples/modules/phpunit_example/src/DisplayInfoInterface.php
modules/contrib/examples/modules/ajax_example/tests/src/FunctionalJavascript/DependentDropdownTest.php
modules/contrib/examples/modules/form_api_example/tests/src/Functional/MultistepFormTest.php
modules/contrib/examples/modules/form_api_example/src/Form/AjaxColorForm.php
modules/contrib/examples/modules/phpunit_example/src/DisplayManager.php
modules/contrib/examples/modules/content_entity_example/tests/src/Kernel/ContactTest.php
modules/contrib/examples/modules/dbtng_example/src/Form/DbtngExampleAddForm.php
modules/contrib/examples/tests/src/Kernel/DescriptionTraitTest.php
modules/contrib/examples/modules/testing_example/testing_example.module
modules/contrib/examples/modules/cache_example/tests/src/Functional/CacheExampleTest.php
modules/contrib/examples/modules/ajax_example/tests/src/FunctionalJavascript/DynamicFormSectionsTest.php
modules/contrib/examples/modules/field_permission_example/src/Controller/FieldPermissionExampleController.php
modules/contrib/examples/modules/testing_example/tests/modules/testing_example_test/testing_example_test.module
modules/contrib/examples/modules/form_api_example/src/Form/BuildDemo.php
modules/contrib/examples/modules/testing_example/tests/src/Functional/ExampleFunctionalTest.php
modules/contrib/examples/modules/cron_example/cron_example.module
modules/contrib/examples/modules/testing_example/tests/src/Unit/Controller/ContrivedControllerTest.php
modules/contrib/examples/modules/form_api_example/tests/src/Functional/SimpleFormBlockTest.php
modules/contrib/examples/modules/phpunit_example/tests/src/Unit/ProtectedPrivatesTest.php
modules/contrib/examples/modules/ajax_example/tests/src/FunctionalJavascript/EntityAutocompleteTest.php
modules/contrib/examples/modules/rest_example/src/Controller/RestExampleHelpController.php
modules/contrib/examples/tests/src/Unit/RoutePathTest.php
modules/contrib/examples/modules/form_api_example/src/Form/ContainerDemo.php
modules/contrib/examples/modules/rest_example/src/Form/RestExampleClientDelete.php
modules/contrib/examples/modules/cron_example/src/Form/CronExampleForm.php
modules/contrib/examples/modules/stream_wrapper_example/src/Controller/StreamWrapperExampleController.php
modules/contrib/examples/modules/stream_wrapper_example/src/PathProcessor/PathProcessorSessions.php
modules/contrib/examples/modules/form_api_example/src/Form/DemoBase.php
modules/contrib/examples/modules/form_api_example/tests/src/FunctionalJavascript/AjaxColorFormTest.php
modules/contrib/examples/modules/ajax_example/tests/src/FunctionalJavascript/SimplestTest.php
modules/contrib/examples/modules/stream_wrapper_example/src/SessionHelper.php
modules/contrib/examples/modules/rest_example/src/Form/RestExampleClientEdit.php
modules/contrib/examples/modules/ajax_example/tests/src/FunctionalJavascript/SubmitDrivenTest.php
modules/contrib/examples/modules/form_api_example/src/Form/InputDemo.php
modules/contrib/examples/modules/batch_example/batch_example.install
modules/contrib/examples/tests/src/Unit/YamlValidationTest.php
modules/contrib/examples/modules/dbtng_example/src/Form/DbtngExampleUpdateForm.php
modules/contrib/examples/modules/phpunit_example/tests/src/Unit/Subclasses/ProtectedPrivatesSubclass.php
modules/contrib/examples/modules/plugin_type_example/plugin_type_example.api.php
modules/contrib/examples/modules/plugin_type_example/plugin_type_example.module
modules/contrib/examples/modules/form_api_example/tests/src/FunctionalJavascript/ModalFormTest.php
modules/contrib/examples/modules/plugin_type_example/src/Annotation/Sandwich.php
modules/contrib/examples/modules/plugin_type_example/src/Controller/PluginTypeExampleController.php
modules/contrib/examples/modules/form_api_example/tests/src/FunctionalJavascript/StateDemoTest.php
modules/contrib/examples/modules/testing_example/tests/src/Functional/FrontPageLinkDependenciesTest.php
modules/contrib/examples/modules/hooks_example/hooks_example.api.php
modules/contrib/examples/modules/batch_example/batch_example.module
modules/contrib/examples/modules/stream_wrapper_example/src/StreamWrapper/SessionStreamWrapper.php
modules/contrib/examples/modules/dbtng_example/tests/src/Functional/DbtngExampleTest.php
modules/contrib/examples/modules/theming_example/src/Controller/ThemingPageController.php
modules/contrib/examples/modules/batch_example/src/Form/BatchExampleForm.php
modules/contrib/examples/modules/hooks_example/hooks_example.module
modules/contrib/examples/modules/rest_example/src/Form/RestExampleClientSettings.php
modules/contrib/examples/modules/plugin_type_example/src/Plugin/Sandwich/ExampleHamSandwich.php
modules/contrib/examples/modules/testing_example/tests/src/Functional/FrontPageLinkTest.php
modules/contrib/examples/modules/theming_example/src/Form/SelectForm.php
modules/contrib/examples/modules/stream_wrapper_example/tests/src/Traits/MockSessionTrait.php
modules/contrib/examples/modules/plugin_type_example/src/Plugin/Sandwich/ExampleMeatballSandwich.php
modules/contrib/examples/modules/dbtng_example/tests/src/Kernel/DbtngExampleRepositoryTest.php
modules/contrib/examples/modules/stream_wrapper_example/tests/src/Unit/SessionHelperTest.php
modules/contrib/examples/modules/plugin_type_example/src/SandwichBase.php
modules/contrib/examples/modules/queue_example/tests/src/Functional/QueueExampleTest.php
modules/contrib/examples/modules/plugin_type_example/src/SandwichInterface.php
modules/contrib/examples/modules/hooks_example/src/Controller/HooksExampleController.php
modules/contrib/examples/modules/theming_example/src/Form/TextForm.php
modules/contrib/examples/modules/plugin_type_example/src/SandwichPluginManager.php
modules/contrib/examples/modules/hooks_example/tests/src/Functional/HooksExampleTest.php
modules/contrib/examples/modules/rest_example/src/RestExampleClientCalls.php
modules/contrib/examples/modules/theming_example/tests/src/Functional/ThemingExampleTest.php
modules/contrib/examples/modules/form_api_example/src/Form/ModalForm.php
modules/contrib/examples/modules/render_example/render_example.module
modules/contrib/examples/modules/tabledrag_example/src/Controller/TableDragExampleController.php
modules/contrib/examples/modules/tabledrag_example/src/Fixtures.php
modules/contrib/examples/modules/tabledrag_example/src/Form/TableDragExampleNestedForm.php
modules/contrib/examples/modules/rest_example/tests/src/Functional/RestExampleActionTest.php
modules/contrib/examples/modules/email_example/email_example.module
modules/contrib/examples/modules/stream_wrapper_example/stream_wrapper_example.module
modules/contrib/examples/modules/stream_wrapper_example/tests/src/Functional/StreamWrapperExampleTest.php
modules/contrib/examples/modules/render_example/src/Controller/RenderExampleController.php
modules/contrib/examples/modules/theming_example/theming_example.module
modules/contrib/examples/modules/rest_example/tests/src/Functional/RestExampleMenuTest.php
modules/contrib/examples/modules/form_api_example/src/Form/MultistepForm.php
modules/contrib/examples/modules/tour_example/src/Controller/TourExampleController.php
modules/contrib/examples/modules/tour_example/tests/src/Functional/TourExampleTest.php
modules/contrib/examples/modules/tabledrag_example/src/Form/TableDragExampleResetForm.php
modules/contrib/examples/modules/tabledrag_example/src/Form/TableDragExampleRootLeafForm.php
modules/contrib/examples/modules/render_example/src/Element/Marquee.php
modules/contrib/examples/modules/tabledrag_example/src/Form/TableDragExampleSimpleForm.php
modules/contrib/examples/modules/render_example/src/Form/RenderExampleDemoForm.php
modules/contrib/examples/modules/tabledrag_example/tabledrag_example.install
modules/contrib/examples/modules/tabledrag_example/tabledrag_example.module
modules/contrib/examples/modules/tabledrag_example/tests/src/Functional/TabledragMenuTest.php
modules/contrib/examples/modules/tablesort_example/src/Controller/TableSortExampleController.php
modules/contrib/examples/modules/tablesort_example/tablesort_example.install

32 files with changes
=====================

1) modules/contrib/examples/modules/events_example/src/Form/EventsExampleForm.php:123

    ---------- begin diff ----------
@@ @@
     // to represent the event being dispatched. The constant serves as a
     // location for documentation of the event, and ensures your code is future
     // proofed against event name changes.
-    $this->eventDispatcher->dispatch(IncidentEvents::NEW_REPORT, $event);
+    $this->eventDispatcher->dispatch($event, IncidentEvents::NEW_REPORT);
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/examples/modules/events_example/src/Event/IncidentReportEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\events_example\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Wraps a incident report event for event subscribers.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/examples/modules/config_entity_example/tests/src/Functional/ConfigEntityExampleTest.php:129

    ---------- begin diff ----------
@@ @@

     // 6) Verify that required links are present on respective paths.
     $this->drupalGet(Url::fromRoute('entity.robot.list'));
-    $this->assertLinkByHref('/examples/config-entity-example/add');
-    $this->assertLinkByHref('/examples/config-entity-example/manage/robby_machine_name');
-    $this->assertLinkByHref('/examples/config-entity-example/manage/robby_machine_name/delete');
+    $this->assertSession()->linkByHrefExists('/examples/config-entity-example/add');
+    $this->assertSession()->linkByHrefExists('/examples/config-entity-example/manage/robby_machine_name');
+    $this->assertSession()->linkByHrefExists('/examples/config-entity-example/manage/robby_machine_name/delete');

     // Verify links on Add Robot.
     $this->drupalGet('/examples/config-entity-example/add');
@@ @@

     // Verify links on Edit Robot.
     $this->drupalGet('/examples/config-entity-example/manage/robby_machine_name');
-    $this->assertLinkByHref('/examples/config-entity-example/manage/robby_machine_name/delete');
+    $this->assertSession()->linkByHrefExists('/examples/config-entity-example/manage/robby_machine_name/delete');
     $this->assertActionButton('examples/config-entity-example');

     // Verify links on Delete Robot.
@@ @@
       '//a[@id="edit-cancel" and contains(@href, :path)]',
       [':path' => '/examples/config-entity-example']
     );
-    $this->assertEqual(count($cancel_button), 1, 'Found cancel button linking to list page.');
+    $this->assertEquals(count($cancel_button), 1, 'Found cancel button linking to list page.');

     // Try to submit a robot with a machine name of 'custom'. This is a reserved
     // keyword we've disallowed in the form.
@@ @@
       '//a[contains(@class, "button-action") and contains(@data-drupal-link-system-path, :path)]',
       [':path' => $path]
     );
-    $this->assertEqual(count($button_element), 1, 'Found action button for path: ' . $path);
+    $this->assertEquals(count($button_element), 1, 'Found action button for path: ' . $path);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * AssertLinkByHrefRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/examples/modules/node_type_example/tests/src/Functional/NodeTypeExampleTest.php:152

    ---------- begin diff ----------
@@ @@
     $this->drupalGet('/node/add/basic_content_type');
     $this->submitForm($edit, 'Save');
     // Verify all fields and data of created content is shown.
-    $this->assertText($title);
-    $this->assertText($body);
+    $this->assertSession()->pageTextContains($title);
+    $this->assertSession()->pageTextContains($body);

     // Create a locked_content_type content.
     $this->drupalGet('/node/add/locked_content_type');
     $this->submitForm($edit, 'Save');
     // Verify all fields and data of created content is shown.
-    $this->assertText($title);
-    $this->assertText($body);
+    $this->assertSession()->pageTextContains($title);
+    $this->assertSession()->pageTextContains($body);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/examples/modules/menu_example/tests/src/Functional/MenuExampleTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Always call the parent setUp().
     parent::setUp();
     // Add the main menu block, as provided by the Block module.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/examples/modules/pager_example/tests/src/Functional/PagerExampleTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Log in a user to prevent caching from affecting the results.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/examples/modules/field_example/tests/src/Functional/FieldExampleBrowserTestBase.php:57

    ---------- begin diff ----------
@@ @@
    *
    * Once installed, a content type with the desired field is created.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Install Drupal.
     parent::setUp();

@@ @@
       'type' => $this->contentTypeName,
     ];
     $this->submitForm($edit, 'Save and manage fields');
-    $this->assertText((string) new FormattableMarkup('The content type @name has been added.', ['@name' => $this->contentTypeName]));
+    $this->assertSession()->pageTextContains((string) new FormattableMarkup('The content type @name has been added.', ['@name' => $this->contentTypeName]));

     // Reset the permission cache.
     $create_permission = 'create ' . $this->contentTypeName . ' content';
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/examples/modules/block_example/tests/src/Functional/BlockExampleMenuTest.php:39

    ---------- begin diff ----------
@@ @@
    */
   public function testBlockExampleLink() {
     $this->drupalGet('');
-    $this->assertLinkByHref('examples/block-example');
+    $this->assertSession()->linkByHrefExists('examples/block-example');

     $this->drupalGet('examples/block-example');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Verify that the block admin page link works.
     $this->clickLink('the block admin page');
     // Since it links to the admin page, we should get a permissions error and
     // not 404.
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertLinkByHrefRector
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/examples/modules/batch_example/tests/src/Functional/BatchExampleWebTest.php:34

    ---------- begin diff ----------
@@ @@
     $this->drupalGet('examples/batch_example');
     $this->submitForm(['batch' => 'batch_1'], 'Go');
     // Check that 1000 operations were performed.
-    $this->assertText('1000 results processed');
+    $this->assertSession()->pageTextContains('1000 results processed');

     // Launch Batch 2.
     $this->drupalGet('examples/batch_example');
     $this->submitForm(['batch' => 'batch_2'], 'Go');
     // Check that 600 operations were performed.
-    $this->assertText('600 results processed');
+    $this->assertSession()->pageTextContains('600 results processed');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/examples/tests/src/Functional/ExamplesBrowserTestBase.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Add the system menu blocks to appropriate regions.
     $this->setupExamplesMenus();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/examples/modules/ajax_example/tests/src/Functional/DynamicFormSectionsTest.php:48

    ---------- begin diff ----------
@@ @@
     $this->drupalGet($dropdown_url);
     $this->submitForm(['question_type_select' => 'Choose question style'], 'Choose');
     $detail_children = $page->findAll('css', 'div.details-wrapper *');
-    $this->assertEqual(count($detail_children), 0);
+    $this->assertEquals(count($detail_children), 0);

     // Cycle through the other dropdown values.
     $question_styles = [
@@ @@
       $this->drupalGet($dropdown_url);
       $this->submitForm(['question_type_select' => $question_style], 'Choose');
       $detail_children = $page->findAll('css', 'div.details-wrapper *');
-      $this->assertNotEqual($this->count($detail_children), 0);
+      $this->assertNotEquals($this->count($detail_children), 0);
       $this->submitForm(['question' => 'George Washington'], 'Submit your answer');
       $assert->pageTextContains('You got the right answer: George Washington');
     }
@@ @@
     $this->drupalGet($dropdown_url);
     $this->submitForm(['question_type_select' => 'Multiple Choice'], 'Choose');
     $detail_children = $page->findAll('css', 'div.details-wrapper *');
-    $this->assertNotEqual($this->count($detail_children), 0);
+    $this->assertNotEquals($this->count($detail_children), 0);
     $this->submitForm(['question' => 'Abraham Lincoln'], 'Submit your answer');
     $assert->pageTextContains('Sorry, your answer (Abraham Lincoln) is wrong');
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * AssertNotEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/examples/modules/testing_example/tests/src/Functional/FrontPageLinkDependenciesTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Always call the parent setUp().
     parent::setUp();
     // Add the Tools menu block, as provided by the Block module.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/examples/modules/testing_example/tests/src/Functional/ExampleFunctionalTest.php:48

    ---------- begin diff ----------
@@ @@
    * The setUp() method is run before every other test method, so commonalities
    * should go here.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create users.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/examples/modules/testing_example/src/Controller/TestingExampleController.php:29

    ---------- begin diff ----------
@@ @@
    *   A render array.
    */
   public function simpletestDescription() {
-    $template_file = drupal_get_path('module', 'testing_example') . '/templates/simpletest.description.html.twig';
+    $template_file = \Drupal::service('extension.list.module')->getPath('testing_example') . '/templates/simpletest.description.html.twig';
     $build = [
       'description' => [
         '#type' => 'inline_template',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


15) modules/contrib/examples/modules/hooks_example/tests/src/Functional/HooksExampleTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->createContentType(['type' => 'page']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/examples/modules/hooks_example/hooks_example.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\node\NodeInterface;
 /**
  * @file
  * Hooks specific to the Hooks Example module.
@@ @@
  * @param \Drupal\node\NodeInterface $node
  *   The node being viewed.
  */
-function hook_hooks_example_count_incremented($current_count, \Drupal\node\NodeInterface $node) {
+function hook_hooks_example_count_incremented($current_count, NodeInterface $node) {
   // If this is the first time the user has viewed this node we display a
   // message letting them know.
   if ($current_count === 1) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


17) modules/contrib/examples/modules/form_api_example/tests/src/Functional/FapiExampleTest.php:292

    ---------- begin diff ----------
@@ @@

     // Verify that anonymous can access the ajax_add_more page.
     $this->drupalGet($ajax_addmore_url);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Verify that there is no remove button.
     $this->assertEmpty($this->xpath($button_xpath));

@@ @@

     // Submit the form and verify the results.
     $this->submitForm([], 'Submit');
-    $this->assertText('These people are coming to the picnic: ' . $name_one . ', ' . $name_two);
+    $this->assertSession()->pageTextContains('These people are coming to the picnic: ' . $name_one . ', ' . $name_two);

   }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


18) modules/contrib/examples/modules/session_example/tests/src/Functional/SessionExampleTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Place our blocks.
     $this->drupalPlaceBlock('local_tasks_block', ['region' => 'content']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/examples/modules/rest_example/tests/src/Functional/RestExampleSettingsTest.php:47

    ---------- begin diff ----------
@@ @@

     $this->drupalGet(base_path() . 'examples/rest-client-settings');
     $this->submitForm($edit, t('Save configuration'));
-    $this->assertText('The configuration options have been saved.');
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');

     $config_factory = \Drupal::configFactory();
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


20) modules/contrib/examples/modules/dbtng_example/tests/src/Kernel/DbtngExampleRepositoryTest.php:33

    ---------- begin diff ----------
@@ @@
    * Kernel tests do not invoke hook_schema() or hook_install(). Therefore we
    * have to do it if our tests expect them to have been run.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Install the schema we defined in hook_schema().
     $this->installSchema('dbtng_example', 'dbtng_example');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/examples/modules/cron_example/tests/src/Functional/CronExampleTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create user. Search content permission granted for the search block to
     // be shown.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/examples/modules/rest_example/tests/src/Functional/RestExampleActionTest.php:31

    ---------- begin diff ----------
@@ @@
    *
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setup();

     global $base_url;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/examples/modules/theming_example/tests/src/Functional/ThemingExampleTest.php:40

    ---------- begin diff ----------
@@ @@
     // Check that the main page has been themed (first line with <b>) and has
     // content.
     $this->drupalGet('/examples/theming_example');
-    $this->assertRaw('Some examples of pages and forms that are run through theme functions.</h1>');
-    $this->assertRaw('examples/theming_example/form_select">Simple form 1</a>');
-    $this->assertRaw('examples/theming_example/form_text">Simple form 2</a>');
+    $this->assertSession()->responseContains('Some examples of pages and forms that are run through theme functions.</h1>');
+    $this->assertSession()->responseContains('examples/theming_example/form_select">Simple form 1</a>');
+    $this->assertSession()->responseContains('examples/theming_example/form_text">Simple form 2</a>');

     // Visit the list demonstration page and check that css gets loaded
     // and do some spot checks on how the two lists were themed.
@@ @@
     // Visit the select form page to do spot checks.
     $this->drupalGet('/examples/theming_example/form_select');
     // Choice element title should be output separately, as h3 header.
-    $this->assertRaw('<h3 data-drupal-selector="edit-title">Choose which ordering you want</h3>');
+    $this->assertSession()->responseContains('<h3 data-drupal-selector="edit-title">Choose which ordering you want</h3>');
     // Choice element should be wrapped with <strong> tag.
-    $this->assertRaw('<strong>Choose which ordering you want</strong>');
+    $this->assertSession()->responseContains('<strong>Choose which ordering you want</strong>');
     // Form elements should be wrapped with container-inline div.
     $this->assertSession()->responseMatches('/<div class="container-inline choice-wrapper"><div class="[a-zA-Z- ]* form-item-choice/');
     $this->assertSession()->responseNotMatches('/<link rel="stylesheet".*theming_example.css/');
@@ @@

     // Visit the text form page and do spot checks.
     $this->drupalGet('/examples/theming_example/form_text');
-    $this->assertText('Please input something!');
+    $this->assertSession()->pageTextContains('Please input something!');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertRawRector
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


24) modules/contrib/examples/modules/testing_example/tests/src/Unit/Controller/ContrivedControllerTest.php:26

    ---------- begin diff ----------
@@ @@
    * @dataProvider provideTestAdd
    */
   public function testAdd($expected, $first, $second) {
-    $controller = $this->getMockBuilder(ContrivedController::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $controller = $this->createMock(ContrivedController::class);
     $ref_add = new \ReflectionMethod($controller, 'add');
     $ref_add->setAccessible(TRUE);
     $this->assertEquals($expected, $ref_add->invokeArgs($controller, [$first, $second]));
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


25) modules/contrib/examples/modules/testing_example/tests/src/Kernel/ExampleFixtureManagementTest.php:57

    ---------- begin diff ----------
@@ @@
    * In a Kernel test, setUp() can be responsible for creating any schema or
    * database configuration which must exist for the test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Since kernel tests do not install modules, we have to install whatever
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/examples/modules/testing_example/tests/src/Functional/TestingExampleMenuTest.php:44

    ---------- begin diff ----------
@@ @@
   public function testTestingNavigation() {
     foreach (['' => '/examples/testing-example'] as $page => $path) {
       $this->drupalGet($page);
-      $this->assertLinkByHref($path);
+      $this->assertSession()->linkByHrefExists($path);
     }
     $this->drupalGet('/examples/testing-example');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertLinkByHrefRector
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


27) modules/contrib/examples/modules/form_api_example/src/Form/InputDemo.php:259

    ---------- begin diff ----------
@@ @@
     $form['image_button'] = [
       '#type' => 'image_button',
       '#value' => 'Image button',
-      '#src' => drupal_get_path('module', 'examples') . '/images/100x30.svg',
+      '#src' => \Drupal::service('extension.list.module')->getPath('examples') . '/images/100x30.svg',
       '#description' => $this->t('image file, #type = image_button'),
     ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


28) modules/contrib/examples/modules/field_permission_example/tests/src/Kernel/FieldNoteItemTest.php:41

    ---------- begin diff ----------
@@ @@
    * This sets up the entity_test and user types to use our example
    * field plugins.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $type_manager = $this->container->get('entity_type.manager');

@@ @@

     $this->assertTrue($entity->field_fieldnote instanceof FieldItemListInterface, 'Field implements interface.');
     $this->assertTrue($entity->field_fieldnote[0] instanceof FieldItemInterface, 'Field item implements interface.');
-    $this->assertEqual($entity->field_fieldnote->value, $value);
-    $this->assertEqual($entity->field_fieldnote[0]->value, $value);
+    $this->assertEquals($entity->field_fieldnote->value, $value);
+    $this->assertEquals($entity->field_fieldnote[0]->value, $value);

     // Verify changing the field's value.
     $new_value = $this->randomMachineName();
     $entity->field_fieldnote->value = $new_value;
-    $this->assertEqual($entity->field_fieldnote->value, $new_value);
+    $this->assertEquals($entity->field_fieldnote->value, $new_value);

     // Read changed entity and assert changed values.
     $entity->save();
@@ @@
         ->getStorage('entity_test')
         ->load($id);

-    $this->assertEqual($entity->field_fieldnote->value, $new_value);
+    $this->assertEquals($entity->field_fieldnote->value, $new_value);

     // Test sample item generation.
     $entity
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


29) modules/contrib/examples/modules/queue_example/tests/src/Functional/QueueExampleTest.php:42

    ---------- begin diff ----------
@@ @@
     for ($i = 1; $i <= 5; $i++) {
       $edit = ['queue_name' => 'queue_example_first_queue', 'string_to_add' => 'boogie' . $i];
       $this->submitForm($edit, 'Insert into queue');
-      $this->assertText((string) new FormattableMarkup('There are now @number items in the queue', ['@number' => $i]));
+      $this->assertSession()->pageTextContains((string) new FormattableMarkup('There are now @number items in the queue', ['@number' => $i]));
     }
     // Claim each of the 5 items with a claim time of 0 seconds.
     for ($i = 1; $i <= 5; $i++) {
       $edit = ['queue_name' => 'queue_example_first_queue', 'claim_time' => 0];
       $this->submitForm($edit, 'Claim the next item from the queue');
-      $this->assertPattern((string) new FormattableMarkup('%Claimed item id=.*string=@string for 0 seconds.%', ['@string' => 'boogie' . $i]));
+      $this->assertSession()->responseMatches((string) new FormattableMarkup('%Claimed item id=.*string=@string for 0 seconds.%', ['@string' => 'boogie' . $i]));
     }
     $edit = ['queue_name' => 'queue_example_first_queue', 'claim_time' => 0];
     $this->submitForm($edit, 'Claim the next item from the queue');
-    $this->assertText('There were no items in the queue available to claim');
+    $this->assertSession()->pageTextContains('There were no items in the queue available to claim');

     // Sleep a second so we can make sure that the timeouts actually time out.
     // Local systems work fine with this but apparently the PIFR server is so
@@ @@
     for ($i = 1; $i <= 5; $i++) {
       $edit = ['queue_name' => 'queue_example_first_queue', 'claim_time' => 0];
       $this->submitForm($edit, 'Claim the next item and delete it');
-      $this->assertPattern((string) new FormattableMarkup('%Claimed and deleted item id=.*string=@string for 0 seconds.%', ['@string' => 'boogie' . $i]));
+      $this->assertSession()->responseMatches((string) new FormattableMarkup('%Claimed and deleted item id=.*string=@string for 0 seconds.%', ['@string' => 'boogie' . $i]));
     }
     // Verify that nothing is left to claim.
     $edit = ['queue_name' => 'queue_example_first_queue', 'claim_time' => 0];
     $this->submitForm($edit, 'Claim the next item from the queue');
-    $this->assertText('There were no items in the queue available to claim');
+    $this->assertSession()->pageTextContains('There were no items in the queue available to claim');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertPatternRector
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


30) modules/contrib/examples/modules/plugin_type_example/tests/src/Functional/PluginTypeExampleTest.php:64

    ---------- begin diff ----------
@@ @@
     $ref_day->setAccessible(TRUE);
     $ref_day->setValue($meatball, 'Sun');
     // Check the special description on Sunday.
-    $this->assertEqual($meatball->description(), 'Italian style meatballs drenched in irresistible marinara sauce, served on day old bread.');
+    $this->assertEquals($meatball->description(), 'Italian style meatballs drenched in irresistible marinara sauce, served on day old bread.');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


31) modules/contrib/examples/modules/stream_wrapper_example/tests/src/Unit/SessionHelperTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Mock the session service.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


32) modules/contrib/examples/modules/stream_wrapper_example/tests/src/Kernel/StreamWrapperTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // We use a mock session here so that our session-based stream wrapper is
     // able to operate. Kernel tests don't normally have a logged-in user, so
@@ @@

     $uri = 'session://drupal.txt';

-    $this->assertFileNotExists($uri, "File $uri should not exist yet.");
+    $this->assertFileDoesNotExist($uri, "File $uri should not exist yet.");
     $handle = fopen($uri, 'wb');
     $this->assertNotEmpty($handle, "Handle for $uri should be non-empty.");
     $buffer = "Ain't seen nothin' yet!\n";
@@ @@
     $result = fclose($handle);
     $this->assertNotFalse($result, "Closed $uri.");
     $this->assertFileExists($uri, "File $uri should now exist.");
-    $this->assertDirectoryNotExists($uri, "$uri is not a directory.");
+    $this->assertDirectoryDoesNotExist($uri, "$uri is not a directory.");
     $this->assertTrue(is_file($uri), "$uri is a file.");

     $contents = file_get_contents($uri);
@@ @@

     $dir = dirname($dir_uri);

-    $this->assertFileNotExists($dir, "The outer dir $dir should not exist yet.");
+    $this->assertFileDoesNotExist($dir, "The outer dir $dir should not exist yet.");
     // We don't care about mode, since we don't support it.
     $worked = mkdir($dir);
     $this->assertDirectoryExists($dir, "Directory $dir was created.");
@@ @@
     $this->assertSame($content, $got_back, 'Data in subdir made round trip.');
     $worked = unlink($file_in_sub);
     $this->assertTrue($worked, 'Deleted file in subdir.');
-    $this->assertFileNotExists($file_in_sub, 'File in subdir should not exist.');
+    $this->assertFileDoesNotExist($file_in_sub, 'File in subdir should not exist.');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameMethodRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 32 files have been changed by Rector                                      

