modules/contrib/layout_builder_modal/layout_builder_modal.install
modules/contrib/layout_builder_modal/layout_builder_modal.module
modules/contrib/layout_builder_modal/src/EventSubscriber/AjaxResponseSubscriber.php
modules/contrib/layout_builder_modal/src/Form/LayoutBuilderModalSettingsForm.php
modules/contrib/layout_builder_modal/src/LayoutBuilderModal.php
modules/contrib/layout_builder_modal/tests/src/Functional/LayoutBuilderModalTest.php
modules/contrib/layout_builder_modal/tests/src/FunctionalJavascript/LayoutBuilderModalTest.php

2 files with changes
====================

1) modules/contrib/layout_builder_modal/tests/src/FunctionalJavascript/LayoutBuilderModalTest.php:64

    ---------- begin diff ----------
@@ @@
       'administer node display',
       'create and edit custom blocks',
     ], 'foobar'));
+    $this->drupalGet('admin/structure/types/manage/bundle_with_section_field/display/default');

     // Enable layout builder.
-    $this->drupalPostForm(
-      'admin/structure/types/manage/bundle_with_section_field/display/default',
-      ['layout[enabled]' => TRUE, 'layout[allow_custom]' => TRUE],
-      'Save');
+    $this->submitForm(['layout[enabled]' => TRUE, 'layout[allow_custom]' => TRUE], 'Save');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/layout_builder_modal/src/EventSubscriber/AjaxResponseSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\layout_builder_modal\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\CloseDialogCommand;
@@ @@
   /**
    * Close modal dialog if Layout Builder is re-rendered.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(ResponseEvent $event) {
     $response = $event->getResponse();

     if ($response instanceof AjaxResponse) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

