modules/contrib/organigrams/organigrams.api.php
modules/contrib/organigrams/organigrams.install
modules/contrib/organigrams/src/Form/OrganigramsImportD7Form.php
modules/contrib/organigrams/organigrams.module
modules/contrib/organigrams/src/Form/OrganigramsImportItemsForm.php
modules/contrib/organigrams/src/Controller/OrganigramsController.php
modules/contrib/organigrams/src/OrganigramsListBuilder.php
modules/contrib/organigrams/src/Plugin/Block/OrganigramsBlocks.php
modules/contrib/organigrams/src/Plugin/Derivative/OrganigramsBlocks.php
modules/contrib/organigrams/src/TaxonomyTermTree.php

2 files with changes
====================

1) modules/contrib/organigrams/organigrams.module:125

    ---------- begin diff ----------
@@ @@
  */
 function organigrams_create_term_fields($vid) {
   // Set the config path to the field configs.
-  $config_path = drupal_get_path('module', 'organigrams') . '/config';
+  $config_path = \Drupal::service('extension.list.module')->getPath('organigrams') . '/config';

   // Get the sources for the config files.
   $field_storage_source = new FileStorage($config_path . '/optional');
@@ @@
       $organigramsController = new OrganigramsController($taxonomyTermTree);
       $organigram = $organigramsController->viewOrganigram($vocabulary);
       // Put the organigram as value in this token.
-      $replacements[$original] = render($organigram);
+      $replacements[$original] = \Drupal::service('renderer')->render($organigram);
     }
   }
   return $replacements;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * RenderRector
 * ArgumentRemoverRector


2) modules/contrib/organigrams/src/TaxonomyTermTree.php:182

    ---------- begin diff ----------
@@ @@
           '#style_name' => 'thumbnail',
           '#uri' => $image_uri,
         ];
-        $markup = render($image) . $markup;
+        $markup = \Drupal::service('renderer')->render($image) . $markup;
       }
     }

@@ @@
         $renderable_link['#attributes'] = [
           'class' => ['nodecontent'],
         ];
-        $markup = render($renderable_link);
+        $markup = \Drupal::service('renderer')->render($renderable_link);
       }
     }
     // If not, wrap the mkarup in a div.
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

