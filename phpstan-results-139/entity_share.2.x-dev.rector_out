modules/contrib/entity_share/modules/entity_share_async/entity_share_async.module
modules/contrib/entity_share/modules/entity_share_client/src/Command/PullCommand.php
modules/contrib/entity_share/modules/entity_share_client/src/Form/PullForm.php
modules/contrib/entity_share/modules/entity_share_client/tests/modules/entity_share_client_test/entity_share_client_test.module
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/PathautoTest.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/FilterDeleteForm.php
modules/contrib/entity_share/modules/entity_share_server/tests/src/Functional/EntityShareServerRequestTestTrait.php
modules/contrib/entity_share/tests/modules/entity_share_test/src/EntityFieldHelperTrait.php
modules/contrib/entity_share/src/EntityShareUtility.php
modules/contrib/entity_share/modules/entity_share_async/src/Plugin/QueueWorker/EntityShareAsyncWorker.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/FilterEditForm.php
modules/contrib/entity_share/modules/entity_share_client/src/Commands/EntityShareClientCommands.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/TaxonomyEntityReferenceTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/BasicFieldsTest.php
modules/contrib/entity_share/modules/entity_share_client/src/Controller/DiffController.php
modules/contrib/entity_share/src/Plugin/jsonapi/FieldEnhancer/EntityShareBlockFieldEnhancer.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/GroupAddForm.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/GroupBaseForm.php
modules/contrib/entity_share/modules/entity_share_async/src/Service/QueueHelper.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/GroupDeleteForm.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Kernel/RemoteUrlTest.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/GroupEditForm.php
modules/contrib/entity_share/modules/entity_share_async/src/Service/QueueHelperInterface.php
modules/contrib/entity_share/modules/entity_share_async/tests/src/Functional/EntityShareAsyncFunctionalTest.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/SearchAddForm.php
modules/contrib/entity_share/src/Plugin/jsonapi/FieldEnhancer/EntityShareMetatagEnhancer.php
modules/contrib/entity_share/modules/entity_share_client/src/Drush8Io.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/SearchBaseForm.php
modules/contrib/entity_share/modules/entity_share_client/src/Entity/Remote.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/SearchDeleteForm.php
modules/contrib/entity_share/modules/entity_share_client/src/Form/RemoteDeleteForm.php
modules/contrib/entity_share/modules/entity_share_server/entity_share_server.module
modules/contrib/entity_share/modules/entity_share_server/src/Form/SearchEditForm.php
modules/contrib/entity_share/modules/entity_share_client/src/Entity/RemoteInterface.php
modules/contrib/entity_share/modules/entity_share_client/src/Event/EntityAlterEvent.php
modules/contrib/entity_share/modules/entity_share_client/src/Event/EntityInsertEvent.php
modules/contrib/entity_share/modules/entity_share_client/src/Form/RemoteForm.php
modules/contrib/entity_share/modules/entity_share_client/src/Event/EntityListDataAlterEvent.php
modules/contrib/entity_share/modules/entity_share_server/src/ChannelHtmlRouteProvider.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/SortAddForm.php
modules/contrib/entity_share/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php
modules/contrib/entity_share/modules/entity_share_client/src/EventSubscriber/BlockFieldBlockContentImporter.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/SortBaseForm.php
modules/contrib/entity_share/modules/entity_share_client/src/JsonapiBatchHelper.php
modules/contrib/entity_share/src/Plugin/jsonapi/FieldEnhancer/EntitySharePathautoEnhancer.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/SortDeleteForm.php
modules/contrib/entity_share/modules/entity_share_client/src/RemoteHtmlRouteProvider.php
modules/contrib/entity_share/modules/entity_share_client/src/EventSubscriber/EntityReferenceRevisionsRelationshipSubscriber.php
modules/contrib/entity_share/modules/entity_share_server/src/ChannelListBuilder.php
modules/contrib/entity_share/modules/entity_share_client/src/RemoteListBuilder.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/SortEditForm.php
modules/contrib/entity_share/modules/entity_share_client/src/Service/EntityShareClientCliService.php
modules/contrib/entity_share/tests/modules/entity_share_entity_test/src/Entity/EntityTestNotTranslatable.php
modules/contrib/entity_share/modules/entity_share_client/entity_share_client.drush.inc
modules/contrib/entity_share/tests/modules/entity_share_entity_test/src/Entity/EntityTestNotTranslatableEL.php
modules/contrib/entity_share/modules/entity_share_server/src/Controller/EntryPoint.php
modules/contrib/entity_share/modules/entity_share_server/src/OperatorsHelper.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/BcTimestampNormalizerUnixTest.php
modules/contrib/entity_share/modules/entity_share_server/src/Routing/Routes.php
modules/contrib/entity_share/modules/entity_share_server/src/Entity/Channel.php
modules/contrib/entity_share/modules/entity_share_client/src/Service/JsonapiHelper.php
modules/contrib/entity_share/modules/entity_share_server/src/Entity/ChannelInterface.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/ChannelDeleteForm.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/BlockFieldTest.php
modules/contrib/entity_share/modules/entity_share_server/src/Service/ChannelManipulator.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/ChannelForm.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/ChangedRemovedTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/CliTest.php
modules/contrib/entity_share/modules/entity_share_server/src/Service/ChannelManipulatorInterface.php
modules/contrib/entity_share/modules/entity_share_server/tests/src/Functional/EntityShareServerFunctionalTest.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/FilterAddForm.php
modules/contrib/entity_share/modules/entity_share_server/src/Form/FilterBaseForm.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/ContentEntityReferenceTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/EntityNotTranslatableEmptyLangcodeTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/EntityNotTranslatableTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/EntityShareClientFunctionalTestBase.php
modules/contrib/entity_share/modules/entity_share_server/tests/src/Functional/EntityShareServerFunctionalTestBase.php
modules/contrib/entity_share/modules/entity_share_client/src/Service/JsonapiHelperInterface.php
modules/contrib/entity_share/modules/entity_share_client/src/Service/RemoteManager.php
modules/contrib/entity_share/modules/entity_share_client/src/Service/RemoteManagerInterface.php
modules/contrib/entity_share/modules/entity_share_client/src/Service/RequestService.php
modules/contrib/entity_share/modules/entity_share_client/src/Service/RequestServiceInterface.php
modules/contrib/entity_share/modules/entity_share_client/src/Service/StateInformation.php
modules/contrib/entity_share/modules/entity_share_client/src/Service/StateInformationInterface.php
modules/contrib/entity_share/modules/entity_share_client/tests/modules/entity_share_client_request_test/src/EntityShareClientRequestTestServiceProvider.php
modules/contrib/entity_share/modules/entity_share_client/tests/modules/entity_share_client_request_test/src/Service/TestRequestService.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/FileDeletedTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/FileTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/InfiniteLoopTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/JsonApiExtrasTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/LinkFieldTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/MediaEntityReferenceTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/MetatagTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/MissingEntityReferenceTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/MultilingualTest.php
modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/ParagraphEntityReferenceTest.php

28 files with changes
=====================

1) modules/contrib/entity_share/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_share_client\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Field\FieldItemListInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines a RelationshipFieldValueEvent event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_share/modules/entity_share_client/src/Event/EntityListDataAlterEvent.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_share_client\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\entity_share_client\Entity\RemoteInterface;

 /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_share/modules/entity_share_client/src/Event/EntityInsertEvent.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_share_client\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\core\Entity\EntityInterface;
 use Drupal\entity_share_client\Entity\RemoteInterface;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_share/modules/entity_share_client/src/Event/EntityAlterEvent.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_share_client\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\core\Entity\EntityInterface;
 use Drupal\entity_share_client\Entity\RemoteInterface;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_share/modules/entity_share_client/src/Command/PullCommand.php:122

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $this->setupIo($input, $output);
     try {
       // Make the magic happen.
@@ @@
     catch (\Exception $e) {
       $this->getIo()->error($e->getMessage());
     }
+    return 0;
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/entity_share/modules/entity_share_async/tests/src/Functional/EntityShareAsyncFunctionalTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->postSetupFixture();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/entity_share/modules/entity_share_client/tests/src/Kernel/RemoteUrlTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('remote');
   }
@@ @@
       'basic_auth_password' => 'test',
     ]);
     $remote->save();
-    $this->assertEqual($remote->get('url'), 'http://example.com');
+    $this->assertEquals($remote->get('url'), 'http://example.com');

     $remote->set('url', 'http://example.com/');
     $remote->save();
-    $this->assertEqual($remote->get('url'), 'http://example.com');
+    $this->assertEquals($remote->get('url'), 'http://example.com');

     $remote->set('url', 'http://example.com/subdirectory');
     $remote->save();
-    $this->assertEqual($remote->get('url'), 'http://example.com/subdirectory');
+    $this->assertEquals($remote->get('url'), 'http://example.com/subdirectory');

     $remote->set('url', 'http://example.com/subdirectory/');
     $remote->save();
-    $this->assertEqual($remote->get('url'), 'http://example.com/subdirectory');
+    $this->assertEquals($remote->get('url'), 'http://example.com/subdirectory');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/TaxonomyEntityReferenceTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->postSetupFixture();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/entity_share/modules/entity_share_server/tests/src/Functional/EntityShareServerFunctionalTestBase.php:52

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser($this->getAdministratorPermissions());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/entity_share/modules/entity_share_server/tests/src/Functional/EntityShareServerFunctionalTest.php:773

    ---------- begin diff ----------
@@ @@
         }
       }

-      $this->assertEqual($found, $expected, 'Expected state for entity with UUID: ' . $entity_uuid);
+      $this->assertEquals($found, $expected, 'Expected state for entity with UUID: ' . $entity_uuid);
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/entity_share/modules/entity_share_client/src/Service/JsonapiHelper.php:342

    ---------- begin diff ----------
@@ @@

                   // Allow to alter the field value with an event.
                   $event = new RelationshipFieldValueEvent($field, $field_value);
-                  $this->eventDispatcher->dispatch(RelationshipFieldValueEvent::EVENT_NAME, $event);
+                  $this->eventDispatcher->dispatch($event, RelationshipFieldValueEvent::EVENT_NAME);
                   $field_values[] = $event->getFieldValue();
                 }
               }
@@ @@
   public function importEntityListData(array $entity_list_data) {
     // Allow other modules to alter the entity data with an EventSubscriber.
     $event = new EntityListDataAlterEvent($entity_list_data, $this->remote);
-    $this->eventDispatcher->dispatch(EntityListDataAlterEvent::EVENT_NAME, $event);
+    $this->eventDispatcher->dispatch($event, EntityListDataAlterEvent::EVENT_NAME);
     $entity_list_data = $event->getEntityListData();

     $imported_entity_ids = [];
@@ @@
       if (empty($existing_entities)) {
         // Allow other modules to alter the entity with an EventSubscriber.
         $event = new EntityInsertEvent($entity, $this->remote);
-        $this->eventDispatcher->dispatch(EntityInsertEvent::EVENT_NAME, $event);
+        $this->eventDispatcher->dispatch($event, EntityInsertEvent::EVENT_NAME);

         $entity->save();
         $imported_entity_ids[] = $entity->id();
@@ @@
             }
             // Allow other modules to alter the entity with an EventSubscriber.
             $event = new EntityAlterEvent($existing_translation, $this->remote);
-            $this->eventDispatcher->dispatch(EntityAlterEvent::EVENT_NAME, $event);
+            $this->eventDispatcher->dispatch($event, EntityAlterEvent::EVENT_NAME);
             $existing_translation->save();
           }
           // Create the new translation.
@@ @@
             // Allow other modules to alter the entity translation with an
             // EventSubscriber.
             $event = new EntityAlterEvent($existing_entity->getTranslation($data_langcode), $this->remote);
-            $this->eventDispatcher->dispatch(EntityAlterEvent::EVENT_NAME, $event);
+            $this->eventDispatcher->dispatch($event, EntityAlterEvent::EVENT_NAME);
             $existing_entity->save();
             $existing_translation = $existing_entity->getTranslation($data_langcode);
           }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


12) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/ParagraphEntityReferenceTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->postSetupFixture();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/MultilingualTest.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->stateInformation = $this->container->get('entity_share_client.state_information');
@@ @@
   protected function expectedState($en_expected_state, $fr_expected_state) {
     $json_data = $this->getEntityJsonData('node_es_test_en', 'es_test');
     $status = $this->stateInformation->getStatusInfo($json_data);
-    $this->assertEqual($status['info_id'], $en_expected_state);
+    $this->assertEquals($status['info_id'], $en_expected_state);

     $json_data = $this->getEntityJsonData('node_es_test_fr', 'es_test');
     $status = $this->stateInformation->getStatusInfo($json_data);
-    $this->assertEqual($status['info_id'], $fr_expected_state);
+    $this->assertEquals($status['info_id'], $fr_expected_state);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/MissingEntityReferenceTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $node_storage = $this->entityTypeManager->getStorage('node');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/MediaEntityReferenceTest.php:73

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->getTestFiles('image');
     // Special case for the image created using native helper method.
@@ @@
   protected function getMediaEntityReferenceTestFiles($file_uuid, array $file_data) {
     /** @var \Drupal\Core\File\FileSystemInterface $file_system */
     $file_system = \Drupal::service('file_system');
-    $filepath = drupal_get_path('module', 'entity_share') . '/tests/fixtures/files/' . $file_data['filename'];
+    $filepath = \Drupal::service('extension.list.module')->getPath('entity_share') . '/tests/fixtures/files/' . $file_data['filename'];
     $file_system->copy($filepath, PublicStream::basePath());
     $this->filesSize[$file_uuid] = filesize($filepath);
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/LinkFieldTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->entityTypeManager->getStorage('jsonapi_resource_config')->create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/JsonApiExtrasTest.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->entityTypeManager->getStorage('jsonapi_resource_config')->create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/InfiniteLoopTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->postSetupFixture();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/FileTest.php:76

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->getTestFiles('image');
     // Special case for the images created using native helper method.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/EntityShareClientFunctionalTestBase.php:164

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Prepare users.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/EntityNotTranslatableTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->postSetupFixture();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/EntityNotTranslatableEmptyLangcodeTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->postSetupFixture();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/ContentEntityReferenceTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->postSetupFixture();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/CliTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->stateInformation = $this->container->get('entity_share_client.state_information');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/ChangedRemovedTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->entityTypeManager->getStorage('jsonapi_resource_config')->create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/BlockFieldTest.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->entityTypeManager->getStorage('jsonapi_resource_config')->create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/BcTimestampNormalizerUnixTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $serialization_settings = $this->config('serialization.settings');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/entity_share/modules/entity_share_client/tests/src/Functional/BasicFieldsTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->postSetupFixture();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 28 files have been changed by Rector                                      

