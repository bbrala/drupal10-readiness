modules/contrib/flag_lists/flag_list_item.page.inc
modules/contrib/flag_lists/flag_lists.tokens.inc
modules/contrib/flag_lists/flag_lists.install
modules/contrib/flag_lists/src/Entity/FlagForList.php
modules/contrib/flag_lists/src/FlagTracker.php
modules/contrib/flag_lists/flagging_collection.page.inc
modules/contrib/flag_lists/modules/flag_lists_actions/flag_lists_actions.install
modules/contrib/flag_lists/src/Form/FlaggingCollectionTypeForm.php
modules/contrib/flag_lists/modules/flag_lists_actions/flag_lists_actions.module
modules/contrib/flag_lists/src/Entity/FlagForListInterface.php
modules/contrib/flag_lists/src/Entity/FlagListItem.php
modules/contrib/flag_lists/modules/flag_lists_actions/src/Controller/FlagListsActionsController.php
modules/contrib/flag_lists/src/FlaggingCollectionHtmlRouteProvider.php
modules/contrib/flag_lists/modules/flag_lists_actions/src/FlagListsActionsActionListBuilder.php
modules/contrib/flag_lists/src/Permissions/FlagListsPermissionHandler.php
modules/contrib/flag_lists/flag_lists.module
modules/contrib/flag_lists/src/Plugin/ActionLink/AJAXactionLink.php
modules/contrib/flag_lists/src/Plugin/migrate/source/D7FlagForList.php
modules/contrib/flag_lists/src/Access/FlagListItemAccess.php
modules/contrib/flag_lists/src/Entity/FlagListItemInterface.php
modules/contrib/flag_lists/src/Access/FlagListItemAccessControlHandler.php
modules/contrib/flag_lists/src/Entity/FlagListItemViewsData.php
modules/contrib/flag_lists/src/Access/FlagListsAccessCheck.php
modules/contrib/flag_lists/src/Entity/FlaggingCollection.php
modules/contrib/flag_lists/src/Access/FlaggingCollectionAccessControlHandler.php
modules/contrib/flag_lists/src/Access/UnFlagListsAccessCheck.php
modules/contrib/flag_lists/src/Controller/ActionLinkController.php
modules/contrib/flag_lists/src/FlaggingCollectionListBuilder.php
modules/contrib/flag_lists/src/Plugin/migrate/source/D7FlagListItems.php
modules/contrib/flag_lists/src/Controller/ActionLinkHelper.php
modules/contrib/flag_lists/src/Plugin/migrate/source/D7FlagListsFlagging.php
modules/contrib/flag_lists/src/FlaggingCollectionStorage.php
modules/contrib/flag_lists/src/Controller/ActionLinkNoJsController.php
modules/contrib/flag_lists/src/Plugin/migrate/source/D7FlaggingCollections.php
modules/contrib/flag_lists/src/Controller/FlaggingCollectionController.php
modules/contrib/flag_lists/src/Plugin/views/field/FlaggingCollectionBulkForm.php
modules/contrib/flag_lists/src/FlaggingCollectionStorageInterface.php
modules/contrib/flag_lists/src/FlaggingCollectionTranslationHandler.php
modules/contrib/flag_lists/src/FlaggingCollectionTypeHtmlRouteProvider.php
modules/contrib/flag_lists/src/FlaggingCollectionTypeListBuilder.php
modules/contrib/flag_lists/src/Entity/FlaggingCollectionInterface.php
modules/contrib/flag_lists/src/Form/FlagForListDeleteForm.php
modules/contrib/flag_lists/src/Entity/FlaggingCollectionType.php
modules/contrib/flag_lists/src/Entity/FlaggingCollectionTypeInterface.php
modules/contrib/flag_lists/src/Entity/FlaggingCollectionViewsData.php
modules/contrib/flag_lists/src/EventSubscriber/FlagForListSubscriber.php
modules/contrib/flag_lists/src/Form/FlagForListForm.php
modules/contrib/flag_lists/src/FlagForListHtmlRouteProvider.php
modules/contrib/flag_lists/src/FlagForListListBuilder.php
modules/contrib/flag_lists/src/Form/FlagListItemDeleteForm.php
modules/contrib/flag_lists/src/Form/FlagListItemForm.php
modules/contrib/flag_lists/src/FlagListItemHtmlRouteProvider.php
modules/contrib/flag_lists/src/FlagListItemListBuilder.php
modules/contrib/flag_lists/src/Form/FlagListsSettingForm.php
modules/contrib/flag_lists/src/FlagListItemTranslationHandler.php
modules/contrib/flag_lists/src/FlagListsFlagLinkBuilder.php
modules/contrib/flag_lists/tests/src/Functional/LoadTest.php
modules/contrib/flag_lists/src/Form/FlaggingCollectionDeleteForm.php
modules/contrib/flag_lists/src/FlagListsFlagListBuilder.php
modules/contrib/flag_lists/src/Form/FlaggingCollectionForm.php
modules/contrib/flag_lists/tests/src/Unit/FlagForListTest.php
modules/contrib/flag_lists/src/FlagListsService.php
modules/contrib/flag_lists/src/Form/FlaggingCollectionRevisionDeleteForm.php
modules/contrib/flag_lists/src/FlagListsServiceInterface.php
modules/contrib/flag_lists/src/Form/FlaggingCollectionRevisionRevertForm.php
modules/contrib/flag_lists/src/Form/FlaggingCollectionRevisionRevertTranslationForm.php
modules/contrib/flag_lists/src/Form/FlaggingCollectionSettingsForm.php
modules/contrib/flag_lists/src/Form/FlaggingCollectionTypeDeleteForm.php

2 files with changes
====================

1) modules/contrib/flag_lists/tests/src/Functional/LoadTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ @@
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/flag_lists/src/EventSubscriber/FlagForListSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\flag_lists\EventSubscriber;

+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\Core\Messenger\MessengerTrait;
 use Drupal\flag\Event\FlagEvents;

@@ @@
   /**
    * This is called whenever the flag.entity_flagged event is dispatched.
    *
-   * @param Symfony\Component\EventDispatcher\Event $flag_event
+   * @param \Symfony\Contracts\EventDispatcher\Event $flag_event
    *   The response event.
    */
   public function flagListsEntityFlagged(Event $flag_event) {
@@ @@
   /**
    * This is called whenever the flag.entity_unflagged event is dispatched.
    *
-   * @param Symfony\Component\EventDispatcher\Event $flag_events
+   * @param \Symfony\Contracts\EventDispatcher\Event $flag_events
    *   The response events.
    */
   public function flagListsEntityUnflagged(Event $flag_events) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

