modules/contrib/styled_google_map/modules/data/demo.batch.inc
modules/contrib/styled_google_map/modules/demo/src/RealEstateAccessControlHandler.php
modules/contrib/styled_google_map/styled_google_map.views.inc
modules/contrib/styled_google_map/modules/demo/src/RealEstateHtmlRouteProvider.php
modules/contrib/styled_google_map/modules/demo/src/RealEstateListBuilder.php
modules/contrib/styled_google_map/src/Form/StyledGoogleMapSettingsForm.php
modules/contrib/styled_google_map/modules/data/styled_google_map_data.install
modules/contrib/styled_google_map/modules/data/styled_google_map_data.module
modules/contrib/styled_google_map/modules/demo/real_estate.page.inc
modules/contrib/styled_google_map/modules/demo/src/Entity/RealEstate.php
modules/contrib/styled_google_map/src/Plugin/Field/FieldFormatter/StyledGoogleMapDefaultFormatter.php
modules/contrib/styled_google_map/modules/demo/src/Entity/RealEstateInterface.php
modules/contrib/styled_google_map/modules/demo/src/Entity/RealEstateViewsData.php
modules/contrib/styled_google_map/modules/demo/src/Form/RealEstateDeleteForm.php
modules/contrib/styled_google_map/modules/demo/src/Form/RealEstateForm.php
modules/contrib/styled_google_map/modules/demo/src/Form/RealEstateSettingsForm.php
modules/contrib/styled_google_map/src/Plugin/views/area/Control.php
modules/contrib/styled_google_map/src/Plugin/views/style/StyledGoogleMapStyle.php
modules/contrib/styled_google_map/src/StyledGoogleMapInterface.php
modules/contrib/styled_google_map/styled_google_map.api.php
modules/contrib/styled_google_map/styled_google_map.install
modules/contrib/styled_google_map/styled_google_map.module

4 files with changes
====================

1) modules/contrib/styled_google_map/modules/data/styled_google_map_data.install:4

    ---------- begin diff ----------
@@ @@
  */
 function styled_google_map_data_install() {
   $files = [];
-  $pins = \Drupal::service('file_system')->scanDirectory(drupal_get_path('module', 'styled_google_map_data') . '/images', '/.png/');
+  $pins = \Drupal::service('file_system')->scanDirectory(\Drupal::service('extension.list.module')->getPath('styled_google_map_data') . '/images', '/.png/');
   foreach (array_keys($pins) as $file_path) {
     $file_content = file_get_contents($file_path);
-    $files[] = file_save_data($file_content);
+    $files[] = \Drupal::service('file.repository')->writeData($file_content);
   }
   // Create property types.
   $property_types = [
@@ @@
     ],
     'finished' => 'demo_real_estate_finished',
     'title' => t('Updating depths for all terms'),
-    'file' => drupal_get_path('module', 'styled_google_map_data') . '/demo.batch.inc',
+    'file' => \Drupal::service('extension.list.module')->getPath('styled_google_map_data') . '/demo.batch.inc',
   ]);

   // Processes the batch in cli mode.
@@ @@
     ],
     'finished' => 'demo_real_estate_finished',
     'title' => t('Delete real estate'),
-    'file' => drupal_get_path('module', 'styled_google_map_data'). '/demo.batch.inc',
+    'file' => \Drupal::service('extension.list.module')->getPath('styled_google_map_data'). '/demo.batch.inc',
   ]);

   // Processes the batch in cli mode.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileSaveDataRector
 * ArgumentRemoverRector


2) modules/contrib/styled_google_map/modules/data/demo.batch.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityStorageException;
 /**
  * Imports real estate data from csv data.
  *
@@ @@
  */
 function import_real_estate($terms, &$context) {
   // Read real estate data.
-  $demo_file = \Drupal::service('file_system')->realpath(drupal_get_path('module', 'styled_google_map_data') .'/csv/demo.csv');
+  $demo_file = \Drupal::service('file_system')->realpath(\Drupal::service('extension.list.module')->getPath('styled_google_map_data') .'/csv/demo.csv');
   $file = new SplFileObject($demo_file, 'r');
   $file->setFlags(SplFileObject::READ_CSV);
   if (empty($context['sandbox'])) {
@@ @@
     ]);
     try {
       $item->save();
-    } catch (\Drupal\Core\Entity\EntityStorageException $e) {
+    } catch (EntityStorageException $e) {
       \Drupal::logger('real_estate')->error($e->getMessage());
     }
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


3) modules/contrib/styled_google_map/styled_google_map.module:58

    ---------- begin diff ----------
@@ @@

   // Get the pin file url.
   if (isset($settings['style']['pin']) && !empty($settings['style']['pin'])) {
-    $settings['style']['pin'] = file_create_url($settings['style']['pin']);
+    $settings['style']['pin'] = \Drupal::service('file_url_generator')->generateAbsoluteString($settings['style']['pin']);
   }
   // Sanitize the output of the style settings.
   foreach ($settings['style'] as $id => $setting) {
@@ @@
       default:
         $popup_field = [];
     }
-    $location['popup'] = render($popup_field);
+    $location['popup'] = \Drupal::service('renderer')->render($popup_field);
   }
   else {
     // Not an entity object.
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * RenderRector
 * ArgumentRemoverRector


4) modules/contrib/styled_google_map/src/Plugin/views/style/StyledGoogleMapStyle.php:828

    ---------- begin diff ----------
@@ @@
           }

           if (!empty($this->options['default_pin_source'])) {
-            $location['pin'] = file_create_url($this->options['default_pin_source']);
+            $location['pin'] = \Drupal::service('file_url_generator')->generateAbsoluteString($this->options['default_pin_source']);
             if (!empty($this->options['main']['styled_google_map_view_active_pin'])) {
-              $location['active_pin'] = file_create_url($this->options['main']['styled_google_map_view_active_pin']);
+              $location['active_pin'] = \Drupal::service('file_url_generator')->generateAbsoluteString($this->options['main']['styled_google_map_view_active_pin']);
             }
           }
           // Add pin image url.
@@ @@
             $fileTargetId = $sourceHandler->render($row);
             if ($fileTargetId instanceof ViewsRenderPipelineMarkup) {
               $image = File::load($fileTargetId->__toString());
-              $location['pin'] = file_create_url($image->getFileUri());
+              $location['pin'] = \Drupal::service('file_url_generator')->generateAbsoluteString($image->getFileUri());
               // Add the active pin image.
               if (!empty($this->options['active_pin_source']) && !empty($sourceHandlerOutput[$this->options['active_pin_source']])) {
                 /** @var \Drupal\views\Plugin\views\field\FieldHandlerInterface $sourceHandler */
@@ @@
                 $fileTargetId = $sourceHandler->render($row);
                 if ($fileTargetId instanceof ViewsRenderPipelineMarkup) {
                   $image = File::load($fileTargetId->__toString());
-                  $location['active_pin'] = file_create_url($image->getFileUri());
+                  $location['active_pin'] = \Drupal::service('file_url_generator')->generateAbsoluteString($image->getFileUri());
                 }
               }
               elseif (empty($this->options['main']['styled_google_map_view_active_pin'])) {
-                $location['active_pin'] = file_create_url($image->getFileUri());
+                $location['active_pin'] = \Drupal::service('file_url_generator')->generateAbsoluteString($image->getFileUri());
               }
               else {
-                $location['active_pin'] = file_create_url($this->options['main']['styled_google_map_view_active_pin']);
+                $location['active_pin'] = \Drupal::service('file_url_generator')->generateAbsoluteString($this->options['main']['styled_google_map_view_active_pin']);
               }
             }
             elseif (!empty($this->options['default_pin_source'])) {
-              $location['pin'] = file_create_url($this->options['default_pin_source']);
+              $location['pin'] = \Drupal::service('file_url_generator')->generateAbsoluteString($this->options['default_pin_source']);
             }
           }
           // Add marker Label.
@@ @@
     $cluster = [];

     if ($this->options['cluster_settings']['cluster_enabled']) {
-      $cluster_pin_image = file_create_url($this->options['cluster_settings']['pin_image']);
+      $cluster_pin_image = \Drupal::service('file_url_generator')->generateAbsoluteString($this->options['cluster_settings']['pin_image']);
       $cluster = ['pin_image' => $cluster_pin_image] + $this->options['cluster_settings'];
     }

@@ @@
     // Spider settings.
     $spider = [];
     if ($this->options['spider_settings']['spider_enabled']) {
-      $spider_pin_image = file_create_url($this->options['spider_settings']['pin_image']);
+      $spider_pin_image = \Drupal::service('file_url_generator')->generateAbsoluteString($this->options['spider_settings']['pin_image']);
       $spider = ['pin_image' => $spider_pin_image] + $this->options['spider_settings'];
     }
     // Heat map settings.
@@ @@
           'hide_close_button' => $this->options['popup']['styled_google_map_view_hide_close_button'] ? TRUE : FALSE,
           'shadow_style' => $this->options['popup']['styled_google_map_view_shadow_style'],
           'padding' => $this->options['popup']['styled_google_map_view_padding'],
-          'close_button_source' => !empty($this->options['popup']['close_button_source']) ? file_create_url($this->options['popup']['close_button_source']) : FALSE,
+          'close_button_source' => !empty($this->options['popup']['close_button_source']) ? \Drupal::service('file_url_generator')->generateAbsoluteString($this->options['popup']['close_button_source']) : FALSE,
           'border_radius' => $this->options['popup']['styled_google_map_view_border_radius'],
           'border_width' => $this->options['popup']['styled_google_map_view_border_width'],
           'border_color' => $this->options['popup']['styled_google_map_view_border_color'],
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

