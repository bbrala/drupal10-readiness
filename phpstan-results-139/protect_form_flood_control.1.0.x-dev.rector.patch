diff --git a/protect_form_flood_control.info.yml b/protect_form_flood_control.info.yml
index 5d79d5f..5b3d89a 100644
--- a/protect_form_flood_control.info.yml
+++ b/protect_form_flood_control.info.yml
@@ -1,7 +1,6 @@
 name: 'Protect Form Flood Control'
 type: module
 description: 'Provide flood control protection on any form.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 configure: 'protect_form_flood_control.settings'
 package: 'Spam control'
diff --git a/tests/src/Functional/ProtectFormFloodControlFormTest.php b/tests/src/Functional/ProtectFormFloodControlFormTest.php
index 4aff3a0..15af338 100644
--- a/tests/src/Functional/ProtectFormFloodControlFormTest.php
+++ b/tests/src/Functional/ProtectFormFloodControlFormTest.php
@@ -57,7 +57,7 @@ class ProtectFormFloodControlFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     // Enable modules required for this test.
     parent::setUp();
 
@@ -132,19 +132,22 @@ class ProtectFormFloodControlFormTest extends BrowserTestBase {
     // Set up form and submit it.
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, $this->t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, $this->t('Create new account'));
     // Form should have been submitted successfully.
     $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');
 
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, $this->t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, $this->t('Create new account'));
     // Form should have been submitted successfully.
     $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');
 
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, $this->t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, $this->t('Create new account'));
 
     $window = \Drupal::service('date.formatter')->formatInterval(60);
     $this->assertSession()->pageTextContains("You cannot submit the form more than 2 times in $window. Please, try again later.");
@@ -160,13 +163,16 @@ class ProtectFormFloodControlFormTest extends BrowserTestBase {
 
     // Set up form and submit it.
     $edit["comment_body[0][value]"] = $comment;
-    $this->drupalPostForm('comment/reply/node/' . $this->node->id() . '/comment', $edit, $this->t('Save'));
+    $this->drupalGet('comment/reply/node/' . $this->node->id() . '/comment');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()->pageTextContains('Your comment has been queued for review');
+    $this->drupalGet('comment/reply/node/' . $this->node->id() . '/comment');
 
-    $this->drupalPostForm('comment/reply/node/' . $this->node->id() . '/comment', $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()->pageTextContains('Your comment has been queued for review');
+    $this->drupalGet('comment/reply/node/' . $this->node->id() . '/comment');
 
-    $this->drupalPostForm('comment/reply/node/' . $this->node->id() . '/comment', $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $window = \Drupal::service('date.formatter')->formatInterval(60);
     $this->assertSession()->pageTextContains("You cannot submit the form more than 2 times in $window. Please, try again later.");
   }
