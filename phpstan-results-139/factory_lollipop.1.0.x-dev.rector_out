modules/contrib/factory_lollipop/factory_lollipop.module
modules/contrib/factory_lollipop/src/FactoryType/VocabularyFactoryType.php
modules/contrib/factory_lollipop/src/FactoryInterface.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/NodeTypeArticleFactory.php
modules/contrib/factory_lollipop/src/FactoryType/EntityFieldEntityReferenceFactoryType.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/VocabularyFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/RoleFactoryTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/RoleFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/TaxonomyTermCategoriesFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/TaxonomyTermCountriesFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/TaxonomyTermTagsFactory.php
modules/contrib/factory_lollipop/src/FixtureFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/UserFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/VocabularyFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/FileFactoryTest.php
modules/contrib/factory_lollipop/src/FactoryType/EntityFieldFactoryType.php
modules/contrib/factory_lollipop/src/Resolver/ChainFactoryResolver.php
modules/contrib/factory_lollipop/src/Resolver/ChainFactoryTypeResolver.php
modules/contrib/factory_lollipop/src/Traits/EntityReferenceTestTrait.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/FixtureFactoryTest.php
modules/contrib/factory_lollipop/src/FactoryType/FactoryTypeInterface.php
modules/contrib/factory_lollipop/src/FactoryType/FileFactoryType.php
modules/contrib/factory_lollipop/src/Traits/RandomGeneratorTrait.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/MediaFactoryTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FixtureFactoryTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/MediaFieldEntityReferenceFactoryTest.php
modules/contrib/factory_lollipop/src/Traits/UserCreationTrait.php
modules/contrib/factory_lollipop/tests/src/Kernel/LollipopKernelTestBase.php
modules/contrib/factory_lollipop/tests/src/Unit/ChainFactoryResolverTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/MediaFieldFactoryTest.php
modules/contrib/factory_lollipop/src/FactoryType/MediaFactoryType.php
modules/contrib/factory_lollipop/tests/src/Unit/ChainFactoryTypeResolverTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/TaxonomyTermFactoryTest.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/EntityFieldEntityReferenceFactoryTypeTest.php
modules/contrib/factory_lollipop/src/FactoryType/MediaTypeFactoryType.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/EntityFieldFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/MediaTypeFactoryTest.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/FileFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/FileFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/TaxonomyTermFieldEntityReferenceFactoryTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/MediaFileFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/MediaImageFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/MenuFactoryTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/MediaTypeImageFactory.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/MediaFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/MediaVideoFactory.php
modules/contrib/factory_lollipop/src/FactoryType/MenuFactoryType.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/MenuFactory.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/MediaTypeFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/MenuLinkFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/MenuMainFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/MenuLinkFactoryTest.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/MenuFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/MenuLinkFactoryTypeTest.php
modules/contrib/factory_lollipop/src/FactoryType/MenuLinkFactoryType.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/NodeArticleFactory.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/NodeNewsFactory.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/NodeFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/src/Factories/NodePageFactory.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/NodeTypeFactoryTypeTest.php
modules/contrib/factory_lollipop/src/FactoryType/NodeFactoryType.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/RoleFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/MenuLinksFactoryTest.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/TaxonomyTermFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/NodeFactoryTest.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/UserFactoryTypeTest.php
modules/contrib/factory_lollipop/src/FactoryType/NodeTypeFactoryType.php
modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/VocabularyFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/NodeFieldEntityReferenceFactoryTest.php
modules/contrib/factory_lollipop/tests/src/Unit/FixtureFactoryTest.php
modules/contrib/factory_lollipop/src/FactoryType/RoleFactoryType.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/TaxonomyTermFieldFactoryTest.php
modules/contrib/factory_lollipop/src/FactoryType/TaxonomyTermFactoryType.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/NodeFieldFactoryTest.php
modules/contrib/factory_lollipop/src/FactoryType/UserFactoryType.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/UserFactoryTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/NodeTypeFactoryTest.php
modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/VocabularyFactoryTest.php
modules/contrib/factory_lollipop/tests/src/Functional/HelpTest.php
modules/contrib/factory_lollipop/tests/src/Functional/InstallUninstallTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/EntityFieldEntityReferenceFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/EntityFieldFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/FileFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/MediaFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/MediaTypeFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/MenuFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/MenuLinkFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/NodeFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/NodeTypeFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/RoleFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/TaxonomyTermFactoryTypeTest.php
modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/UserFactoryTypeTest.php

11 files with changes
=====================

1) modules/contrib/factory_lollipop/src/FactoryType/UserFactoryType.php:69

    ---------- begin diff ----------
@@ @@
     $mail = $attributes['mail'] ?? $name . '@example.com';
     $roles = $attributes['roles'] ?? [];
     $status = $attributes['status'] ?? 1;
-    $pass = $attributes['pass'] ?? user_password();
+    $pass = $attributes['pass'] ?? \Drupal::service('password_generator')->generate();

     // Prevent creation of already existing User.
     if ($uid) {
    ----------- end diff -----------

Applied rules:
 * UserPasswordRector
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/NodeFieldEntityReferenceFactoryTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create an entity test.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/factory_lollipop/tests/src/Unit/FixtureFactoryTest.php:54

    ---------- begin diff ----------
@@ @@
    * @see \Drupal\Tests\factory_lollipop_test\Kernel\VocabularyFactoryTest
    */
   public function testCreate(): void {
-    $factory_type_foo = $this->getMockBuilder(FactoryTypeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $factory_type_foo = $this->createMock(FactoryTypeInterface::class);

     $factory_type_foo
       ->expects(self::once())
@@ @@
       ->method('create')
       ->with(self::equalTo((object) ['default' => 'lorem', 'arg1' => 'bar']));

-    $chain_factory_type_resolver = $this->getMockBuilder(ChainFactoryTypeResolver::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $chain_factory_type_resolver = $this->createMock(ChainFactoryTypeResolver::class);

     $chain_factory_type_resolver
       ->expects(self::once())
@@ @@
       ->method('getResolvers')
       ->willReturn([$factory_type_foo]);

-    $chain_factory_resolver = $this->getMockBuilder(ChainFactoryResolver::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $chain_factory_resolver = $this->createMock(ChainFactoryResolver::class);

     $factory_Lollipop = $this->getMockBuilder(FixtureFactory::class)
       ->setConstructorArgs([
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/factory_lollipop/tests/src/Unit/FactoryType/FileFactoryTypeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\factory_lollipop\Unit\Resolver\FactoryType;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\File\FileSystemInterface;
@@ @@
  */
 class FileFactoryTypeTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The File Factory resolver.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/factory_lollipop/tests/src/Kernel/LollipopKernelTestBase.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->factoryLollipop = $this->container->get('factory_lollipop.fixture_factory');
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/MenuLinkFactoryTypeTest.php:173

    ---------- begin diff ----------
@@ @@
       $menu_link_plugin = $this->menuLinkManager->createInstance($links[$id]);
       $expected_parent = $links[$parent] ?? '';

-      $this->assertEqual($menu_link_plugin->getParent(), $expected_parent, sprintf('Menu link %s has parent of %s, expected %s.', $id, $menu_link_plugin->getParent(), $expected_parent));
+      $this->assertEquals($menu_link_plugin->getParent(), $expected_parent, sprintf('Menu link %s has parent of %s, expected %s.', $id, $menu_link_plugin->getParent(), $expected_parent));
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/MediaTypeFactoryTypeTest.php:92

    ---------- begin diff ----------
@@ @@
       $this->expectExceptionMessageMatches('#^The "foo" plugin does not exist\. Valid plugin IDs.+$#');
     }
     else {
-      $this->expectExceptionMessageRegExp('#^The "foo" plugin does not exist\. Valid plugin IDs.+$#');
+      $this->expectExceptionMessageMatches('#^The "foo" plugin does not exist\. Valid plugin IDs.+$#');
     }
     $this->mediaTypeFactoryTypeResolver->create((object) [
       'source' => 'foo',
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * RenameMethodRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/factory_lollipop/tests/src/Kernel/FactoryType/FileFactoryTypeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\factory_lollipop\Kernel\FactoryType;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\File\FileSystemInterface;
@@ @@
  */
 class FileFactoryTypeTest extends EntityKernelTestBase {

+  use ProphecyTrait;
   /**
    * The Node Factory resolver.
    *
@@ @@
       $this->expectExceptionMessageMatches('#^File ".+/core/tests/fixtures/foo" does not exist\.$#');
     }
     else {
-      $this->expectExceptionMessageRegExp('#^File ".+/core/tests/fixtures/foo" does not exist\.$#');
+      $this->expectExceptionMessageMatches('#^File ".+/core/tests/fixtures/foo" does not exist\.$#');
     }
     $this->fileFactoryTypeResolver->create((object) ['path' => $file_path]);
   }
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * RenameMethodRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/factory_lollipop/tests/src/Functional/InstallUninstallTest.php:26

    ---------- begin diff ----------
@@ @@
     // Attempt to install the factory_lollipop module.
     $edit = [];
     $edit['modules[factory_lollipop][enable]'] = 'factory_lollipop';
-    $this->drupalPostForm('admin/modules', $edit, 'Install');
-    $this->assertText('Module Factory Lollipop has been enabled.', 'Modules status has been updated.');
+    $this->drupalGet('admin/modules');
+    $this->submitForm($edit, 'Install');
+    $this->assertSession()->pageTextContains('Module Factory Lollipop has been enabled.');

     // Makes sure the module has been installed.
     $this->assertModules(['factory_lollipop'], TRUE);
@@ @@

     // Attempt to uninstall the factory_lollipop module.
     $edit['uninstall[factory_lollipop]'] = TRUE;
-    $this->drupalPostForm('admin/modules/uninstall', $edit, 'Uninstall');
-    $this->drupalPostForm(NULL, NULL, 'Uninstall');
-    $this->assertText('The selected modules have been uninstalled.', 'Modules status has been updated.');
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm($edit, 'Uninstall');
+    $this->submitForm(NULL, 'Uninstall');
+    $this->assertSession()->pageTextContains('The selected modules have been uninstalled.');

     // Makes sure the module has been uninstalled.
     $this->assertModules(['factory_lollipop'], FALSE);
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/factory_lollipop/tests/src/Functional/HelpTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create users.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/factory_lollipop/tests/modules/factory_lollipop_test/tests/src/Kernel/TaxonomyTermFieldEntityReferenceFactoryTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create an entity test.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/factory_lollipop/src/Traits/UserCreationTrait.php"    
         file, due to:                                                          
         "System error: "Method assertIdentical() was not found in reflection of
         class Drupal\factory_lollipop\Traits\UserCreationTrait."               
         Run Rector with "--debug" option and post the report here:             
         https://github.com/rectorphp/rector/issues/new". On line: 411          

