diff --git a/dbee.users.inc b/dbee.users.inc
index 58d959e..376fa56 100644
--- a/dbee.users.inc
+++ b/dbee.users.inc
@@ -63,7 +63,7 @@ function dbee_update_crypt_all($action, $dbee_context = FALSE, $force_batch = FA
         ],
       ],
       'finished' => 'dbee_update_crypt_users_all_batch_finished',
-      'file' => drupal_get_path('module', 'dbee') . '/dbee.users.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('dbee') . '/dbee.users.inc',
     ];
     batch_set($batch);
 
diff --git a/tests/src/Functional/DbeeContactMailTest.php b/tests/src/Functional/DbeeContactMailTest.php
index 2935a7c..26be888 100644
--- a/tests/src/Functional/DbeeContactMailTest.php
+++ b/tests/src/Functional/DbeeContactMailTest.php
@@ -41,7 +41,7 @@ class DbeeContactMailTest extends DbeeWebTestBase {
    *
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     // Enable any modules required for the test.
     parent::setUp();
     $this->recipientUser = $this->drupalCreateUser();
@@ -65,7 +65,8 @@ class DbeeContactMailTest extends DbeeWebTestBase {
       'subject[0][value]' => $this->randomString(20),
       'message[0][value]' => $this->randomString(128),
     ];
-    $this->drupalPostForm($contact_uri, $edit, 'Send message');
+    $this->drupalGet($contact_uri);
+    $this->submitForm($edit, 'Send message');
     $session->responseContains('Your message has been sent.');
     $this->assertMail('to', $this->recipientUser->getEmail(), 'The recipient email address is valid');
     $this->assertMail('reply-to', $this->senderUser->getEmail(), 'The sender email address is valid');
diff --git a/tests/src/Functional/DbeeCoreFunctionsTest.php b/tests/src/Functional/DbeeCoreFunctionsTest.php
index a6d4929..01503c4 100644
--- a/tests/src/Functional/DbeeCoreFunctionsTest.php
+++ b/tests/src/Functional/DbeeCoreFunctionsTest.php
@@ -38,7 +38,7 @@ class DbeeCoreFunctionsTest extends DbeeWebSwitchTestBase {
    *
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     // Enable any modules required for the test.
     parent::setUp();
     $this->userToLoad = $this->drupalCreateUser();
diff --git a/tests/src/Functional/DbeeEditUserTest.php b/tests/src/Functional/DbeeEditUserTest.php
index c3f4b08..37b5bf0 100644
--- a/tests/src/Functional/DbeeEditUserTest.php
+++ b/tests/src/Functional/DbeeEditUserTest.php
@@ -35,7 +35,7 @@ class DbeeEditUserTest extends DbeeWebTestBase {
    *
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create a basic user with mail = 'example@example.com'. This email will
     // be used to testing if the system prevent from creating a new user with
@@ -79,7 +79,8 @@ class DbeeEditUserTest extends DbeeWebTestBase {
       'mail' => mb_strtolower($data0[$uid]['mail']),
       'current_pass' => $pass,
     ];
-    $this->drupalPostForm('user/' . $uid . '/edit', $edit1, 'Save');
+    $this->drupalGet('user/' . $uid . '/edit');
+    $this->submitForm($edit1, 'Save');
     $data1 = $data0;
     $data1[$uid]['mail'] = $edit1['mail'];
     $this->assertTrue($this->dbeeAllUsersValid($data1), 'The user mail is correctly encrypted.');
@@ -90,7 +91,8 @@ class DbeeEditUserTest extends DbeeWebTestBase {
       'mail' => $this->randomMachineName() . '@EXAMple.com',
       'current_pass' => $pass,
     ];
-    $this->drupalPostForm('user/' . $uid . '/edit', $edit3, 'Save');
+    $this->drupalGet('user/' . $uid . '/edit');
+    $this->submitForm($edit3, 'Save');
     // Check user account on edition.
     // We successfully edit the user email address :
     // to a new case sensitive email address:
@@ -111,7 +113,8 @@ class DbeeEditUserTest extends DbeeWebTestBase {
       'mail' => mb_strtolower($this->randomMachineName() . '@example.com'),
       'current_pass' => $pass,
     ];
-    $this->drupalPostForm('user/' . $uid . '/edit', $edit4, 'Save');
+    $this->drupalGet('user/' . $uid . '/edit');
+    $this->submitForm($edit4, 'Save');
     // Check user account on edition.
     // We successfully edit the user email address again:
     // back to a new lower case email address:
@@ -131,7 +134,8 @@ class DbeeEditUserTest extends DbeeWebTestBase {
       'mail' => mb_strtoupper($this->existingUser->getEmail()),
       'current_pass' => $pass,
     ];
-    $this->drupalPostForm('user/' . $uid . '/edit', $edit5, 'Save');
+    $this->drupalGet('user/' . $uid . '/edit');
+    $this->submitForm($edit5, 'Save');
     // Check if new user account has not been created.
     // From the user_account_form_validate() function.
     // The system successfully detects when someone trying to save the same
diff --git a/tests/src/Functional/DbeeNewUsersTest.php b/tests/src/Functional/DbeeNewUsersTest.php
index b95f913..5538032 100644
--- a/tests/src/Functional/DbeeNewUsersTest.php
+++ b/tests/src/Functional/DbeeNewUsersTest.php
@@ -56,7 +56,7 @@ class DbeeNewUsersTest extends DbeeWebTestBase {
    * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
    * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
    */
-  public function setUp() {
+  public function setUp(): void {
     // Enable any modules required for the test.
     parent::setUp();
 
@@ -93,7 +93,8 @@ class DbeeNewUsersTest extends DbeeWebTestBase {
       'name' => $name,
       'mail' => $mail,
     ];
-    $this->drupalPostForm('user/register', $edit1, 'Create new account');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit1, 'Create new account');
     $session = $this->assertSession();
     // Anonymous user successfully registered.
     $session->responseContains('A welcome message with further instructions has been sent to your email address.');
@@ -116,14 +117,15 @@ class DbeeNewUsersTest extends DbeeWebTestBase {
       // Set email to 'STRING@EXAMPLE.COM'.
       'mail' => mb_strtoupper($this->existingUser->getEmail()),
     ];
-    $this->drupalPostForm('user/register', $edit2, 'Create new account');
+    $this->drupalGet('user/register');
+    $this->submitForm($edit2, 'Create new account');
     // The module successfully detects when someone trying to register the same
     // email twice, even if there is case conflict.
     $session->pageTextContains("The email address {$edit2['mail']} is already taken");
 
     // Try to create a new user from the admin interface.
     $this->drupalLogin($this->adminUsersAccount);
-    $password3 = user_password();
+    $password3 = \Drupal::service('password_generator')->generate();
     $name3 = $this->randomMachineName();
     $mail3 = $name3 . '@example.com';
     $edit3 = [
@@ -132,7 +134,8 @@ class DbeeNewUsersTest extends DbeeWebTestBase {
       'pass[pass1]' => $password3,
       'pass[pass2]' => $password3,
     ];
-    $this->drupalPostForm('admin/people/create', $edit3, 'Create new account');
+    $this->drupalGet('admin/people/create');
+    $this->submitForm($edit3, 'Create new account');
     // Check if new user account has not been created.
     // From the user_profile_form_submit() function.
     /** @var \Drupal\user\UserInterface[] $users */
@@ -153,7 +156,7 @@ class DbeeNewUsersTest extends DbeeWebTestBase {
 
     // Try to create a new user with an email already register, the system
     // should not validate it.
-    $password4 = user_password();
+    $password4 = \Drupal::service('password_generator')->generate();
     $name4 = $this->randomMachineName();
     // Set email to 'STRING@EXAMPLE.COM'.
     $mail4 = mb_strtoupper($this->existingUser->getEmail());
@@ -163,7 +166,8 @@ class DbeeNewUsersTest extends DbeeWebTestBase {
       'pass[pass1]' => $password4,
       'pass[pass2]' => $password4,
     ];
-    $this->drupalPostForm('admin/people/create', $edit4, 'Create new account');
+    $this->drupalGet('admin/people/create');
+    $this->submitForm($edit4, 'Create new account');
     // Check if new user account has not been created.
     // Trying to add a new user with an existing email displays an error
     // message, even if there is case conflict.
@@ -172,14 +176,15 @@ class DbeeNewUsersTest extends DbeeWebTestBase {
     // Attempt to bypass duplicate email registration validation by adding
     // spaces.
     $edit['mail'] = '   ' . $mail4 . '   ';
+    $this->drupalGet('admin/people/create');
 
-    $this->drupalPostForm('admin/people/create', $edit, 'Create new account');
+    $this->submitForm($edit, 'Create new account');
     // Supplying a duplicate email address with added whitespace displays an
     // error message.
     $session->pageTextContains("The email address {$mail4} is already taken.");
 
     // Try to save a new user programmatically.
-    $password5 = user_password();
+    $password5 = \Drupal::service('password_generator')->generate();
     $name5 = $this->randomMachineName();
     $mail5 = $name5 . '@exAMple.com';
     $prog_user_array = [
diff --git a/tests/src/Functional/DbeeQueryUsersTest.php b/tests/src/Functional/DbeeQueryUsersTest.php
index f2f6844..e7c8ce8 100644
--- a/tests/src/Functional/DbeeQueryUsersTest.php
+++ b/tests/src/Functional/DbeeQueryUsersTest.php
@@ -58,7 +58,7 @@ class DbeeQueryUsersTest extends DbeeWebSwitchTestBase {
    *
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     // Enable any modules required for the test.
     parent::setUp();
     // Create a user who can enable the dbee module.
diff --git a/tests/src/Functional/DbeeSearchUserTest.php b/tests/src/Functional/DbeeSearchUserTest.php
index cbd820d..12b9405 100644
--- a/tests/src/Functional/DbeeSearchUserTest.php
+++ b/tests/src/Functional/DbeeSearchUserTest.php
@@ -57,7 +57,7 @@ class DbeeSearchUserTest extends DbeeWebSwitchTestBase {
    *
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     // Enable any modules required for the test.
     parent::setUp();
 
@@ -111,7 +111,8 @@ class DbeeSearchUserTest extends DbeeWebSwitchTestBase {
     $this->drupalLogin($this->searchUsersAccount);
     // Search the completed email address.
     $edit1 = ['keys' => mb_strtoupper($this->existingUser1->getEmail())];
-    $this->drupalPostForm('search/user', $edit1, 'Search');
+    $this->drupalGet('search/user');
+    $this->submitForm($edit1, 'Search');
     $session = $this->assertSession();
     // The searching of the user by completed email address succeeds.
     $label1 = $this->existingUser1->getAccountName() . ' (' . $this->existingUser1->getEmail() . ')';
@@ -119,7 +120,8 @@ class DbeeSearchUserTest extends DbeeWebSwitchTestBase {
 
     // Search the partial email address.
     $edit2 = ['keys' => mb_strtoupper($this->provider)];
-    $this->drupalPostForm('search/user', $edit2, 'Search');
+    $this->drupalGet('search/user');
+    $this->submitForm($edit2, 'Search');
     // The searching of the user by partial email address succeeds
     // (first user found).
     $session->linkExists($label1);
diff --git a/tests/src/Functional/DbeeUserResetPassTest.php b/tests/src/Functional/DbeeUserResetPassTest.php
index 042f1dc..334aa32 100644
--- a/tests/src/Functional/DbeeUserResetPassTest.php
+++ b/tests/src/Functional/DbeeUserResetPassTest.php
@@ -35,7 +35,7 @@ class DbeeUserResetPassTest extends DbeeWebTestBase {
    *
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create a basic user with mail = 'example@example.com'. This email will
     // be used to testing if the system prevent from creating a new user with
@@ -74,7 +74,8 @@ class DbeeUserResetPassTest extends DbeeWebTestBase {
     $edit1 = [
       'name' => $data0[$uid]['mail'],
     ];
-    $this->drupalPostForm('user/password', $edit1, 'Submit');
+    $this->drupalGet('user/password');
+    $this->submitForm($edit1, 'Submit');
     $session = $this->assertSession();
     // Login link successfully sent for the exact sensitive case email.
     $session->pageTextContains('Further instructions have been sent to your email address.');
@@ -84,7 +85,8 @@ class DbeeUserResetPassTest extends DbeeWebTestBase {
     $edit2 = [
       'name' => mb_strtolower($data0[$uid]['mail']),
     ];
-    $this->drupalPostForm('user/password', $edit2, 'Submit');
+    $this->drupalGet('user/password');
+    $this->submitForm($edit2, 'Submit');
     // Login link successfully sent for lowercase email.
     $session->pageTextContains('Further instructions have been sent to your email address.');
 
@@ -92,14 +94,16 @@ class DbeeUserResetPassTest extends DbeeWebTestBase {
     $edit3 = [
       'name' => mb_strtoupper($data0[$uid]['mail']),
     ];
-    $this->drupalPostForm('user/password', $edit3, 'Submit');
+    $this->drupalGet('user/password');
+    $this->submitForm($edit3, 'Submit');
     // Login link successfully sent for other sensitive case email.
     $session->pageTextContains('Further instructions have been sent to your email address.');
 
     $edit4 = [
       'name' => $this->editedUserAccount->getAccountName(),
     ];
-    $this->drupalPostForm('user/password', $edit4, 'Submit');
+    $this->drupalGet('user/password');
+    $this->submitForm($edit4, 'Submit');
     // Login link successfully sent for username.
     $session->pageTextContains('Further instructions have been sent to your email address.');
   }
diff --git a/tests/src/Functional/DbeeWebSwitchTestBase.php b/tests/src/Functional/DbeeWebSwitchTestBase.php
index 5dcecbc..249f25a 100644
--- a/tests/src/Functional/DbeeWebSwitchTestBase.php
+++ b/tests/src/Functional/DbeeWebSwitchTestBase.php
@@ -54,7 +54,7 @@ abstract class DbeeWebSwitchTestBase extends DbeeWebTestBase {
    *
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create a user who can enable the dbee module.
@@ -90,10 +90,11 @@ abstract class DbeeWebSwitchTestBase extends DbeeWebTestBase {
     $confirm_page_route = ($enabling) ? 'system.modules_list_confirm' : 'system.modules_uninstall_confirm';
     $confirm_submit_text = ($enabling) ? 'Continue' : 'Uninstall';
     $success_text = ($enabling) ? 'been enabled' : 'The selected modules have been uninstalled.';
-    $this->drupalPostForm($uri, $edit0, $submit_text);
+    $this->drupalGet($uri);
+    $this->submitForm($edit0, $submit_text);
     // Check if dependencies needs to be loaded.
     if ($this->getUrl() == Url::fromRoute($confirm_page_route)->setAbsolute()->toString()) {
-      $this->drupalPostForm(NULL, [], $confirm_submit_text);
+      $this->submitForm([], $confirm_submit_text);
     }
     $arg_enabled = ($enabling) ? 'enabled' : 'disabled';
     $session = $this->assertSession();
@@ -161,7 +162,7 @@ abstract class DbeeWebSwitchTestBase extends DbeeWebTestBase {
         }
       }
 
-      $edit['pass'] = user_password();
+      $edit['pass'] = \Drupal::service('password_generator')->generate();
       $edit['status'] = 1;
       $edit['init'] = $edit['mail'];
 
diff --git a/tests/src/Functional/DbeeWebTestBase.php b/tests/src/Functional/DbeeWebTestBase.php
index 8b248c1..3d6b74b 100644
--- a/tests/src/Functional/DbeeWebTestBase.php
+++ b/tests/src/Functional/DbeeWebTestBase.php
@@ -69,7 +69,7 @@ abstract class DbeeWebTestBase extends BrowserTestBase {
   /**
    * Make sure that the dbee functions are availables.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     if (!function_exists('dbee_encrypt')) {
       module_load_include('module', 'dbee');
