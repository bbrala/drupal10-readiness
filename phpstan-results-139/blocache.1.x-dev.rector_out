modules/contrib/blocache/blocache.module
modules/contrib/blocache/src/Blocache.php
modules/contrib/blocache/src/BlocacheMetadata.php
modules/contrib/blocache/tests/src/Functional/BlocacheBrowserTest.php
modules/contrib/blocache/tests/src/Functional/BlocacheBrowserTestBase.php
modules/contrib/blocache/tests/src/Unit/BlocacheMetadataUnitTest.php

3 files with changes
====================

1) modules/contrib/blocache/tests/src/Unit/BlocacheMetadataUnitTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->blocacheMetadata = new BlocacheMetadata();

-    $plugin = $this->getMockBuilder('Drupal\Core\Block\BlockBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $plugin = $this->createMock('Drupal\Core\Block\BlockBase');
     $plugin->expects($this->any())
       ->method('getMachineNameSuggestion')
       ->will($this->returnValue($this->randomMachineName(8)));

-    $block = $this->getMockBuilder('Drupal\block\Entity\Block')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $block = $this->createMock('Drupal\block\Entity\Block');
     $block->expects($this->any())
       ->method('getPlugin')
       ->will($this->returnValue($plugin));
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     unset($this->blocacheMetadata);
     unset($this->block);
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/blocache/tests/src/Functional/BlocacheBrowserTestBase.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Use the test page as the front page.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/blocache/tests/src/Functional/BlocacheBrowserTest.php:18

    ---------- begin diff ----------
@@ @@
     $block_name = 'system_powered_by_block';
     $default_theme = $this->config('system.theme')->get('default');
     $this->drupalGet('admin/structure/block/add/' . $block_name . '/' . $default_theme);
-    $this->assertField('edit-blocache-overridden');
+    $this->assertSession()->fieldExists('edit-blocache-overridden');
   }

   /**
@@ @@
       'blocache[tabs][contexts][value][languages]' => 1,
       'blocache[tabs][contexts][value][languages__arg]' => LanguageInterface::TYPE_URL,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save block'));
+    $this->submitForm($edit, t('Save block'));

     // Access the block form again and check if the values have been saved.
-    $this->assertText('The block configuration has been saved.', 'Block was saved');
+    $this->assertSession()->pageTextContains('The block configuration has been saved.');
     $this->clickLink('Configure');
-    $this->assertFieldChecked('edit-blocache-overridden');
-    $this->assertFieldByName('blocache[tabs][max-age][value]', 600);
-    $this->assertFieldByName('blocache[tabs][contexts][value][user.roles]', 1);
-    $this->assertFieldByName('blocache[tabs][contexts][value][user.roles__arg]', 'administrator');
-    $this->assertFieldByName('blocache[tabs][contexts][value][languages]', 1);
-    $this->assertFieldByName('blocache[tabs][contexts][value][languages__arg]', LanguageInterface::TYPE_URL);
+    $this->assertSession()->checkboxChecked('edit-blocache-overridden');
+    $this->assertSession()->fieldValueEquals('blocache[tabs][max-age][value]', 600);
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][user.roles]', 1);
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][user.roles__arg]', 'administrator');
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][languages]', 1);
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][languages__arg]', LanguageInterface::TYPE_URL);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * AssertFieldCheckedRector
 * AssertFieldRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

