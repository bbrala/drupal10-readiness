modules/contrib/whitelabel/src/Cache/Context/WhiteLabelCacheContext.php
modules/contrib/whitelabel/src/Resolver/WhiteLabelStoreResolver.php
modules/contrib/whitelabel/src/ContextProvider/CurrentWhiteLabelContext.php
modules/contrib/whitelabel/src/Entity/WhiteLabel.php
modules/contrib/whitelabel/tests/src/FunctionalJavascript/WhiteLabelJavascriptTestBase.php
modules/contrib/whitelabel/src/Theme/WhiteLabelNegotiator.php
modules/contrib/whitelabel/src/WhiteLabelAccessControlHandler.php
modules/contrib/whitelabel/src/WhiteLabelBlockAlter.php
modules/contrib/whitelabel/src/WhiteLabelConfigOverride.php
modules/contrib/whitelabel/src/WhiteLabelProvider.php
modules/contrib/whitelabel/src/WhiteLabelProviderInterface.php
modules/contrib/whitelabel/src/WhiteLabelSession.php
modules/contrib/whitelabel/src/WhiteLabelSessionInterface.php
modules/contrib/whitelabel/src/WhiteLabelSystemBrandingBlockAlter.php
modules/contrib/whitelabel/tests/modules/whitelabel_test/src/Controller/WhiteLabelTestController.php
modules/contrib/whitelabel/tests/src/Functional/WhiteLabelCacheTest.php
modules/contrib/whitelabel/tests/src/FunctionalJavascript/WhiteLabelStyleSheetTest.php
modules/contrib/whitelabel/src/Entity/WhiteLabelInterface.php
modules/contrib/whitelabel/src/EventSubscriber/WhiteLabelCacheConfigInvalidator.php
modules/contrib/whitelabel/src/Form/WhiteLabelConfigurationForm.php
modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelAccessTest.php
modules/contrib/whitelabel/tests/src/Functional/WhiteLabelFeatureToggleTest.php
modules/contrib/whitelabel/src/PathProcessor/WhiteLabelPathProcessor.php
modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelConditionTest.php
modules/contrib/whitelabel/src/Plugin/Action/ClearWhiteLabel.php
modules/contrib/whitelabel/src/Plugin/Action/SetWhiteLabel.php
modules/contrib/whitelabel/src/Plugin/Condition/WhiteLabel.php
modules/contrib/whitelabel/src/Plugin/EntityReferenceSelection/WhiteLabelSelection.php
modules/contrib/whitelabel/src/Plugin/Field/FieldFormatter/WhiteLabelPreviewFormatter.php
modules/contrib/whitelabel/src/Plugin/Field/FieldWidget/InlineWhiteLabelWidget.php
modules/contrib/whitelabel/src/Plugin/Validation/Constraint/WhiteLabelNotUsernameConstraint.php
modules/contrib/whitelabel/src/Plugin/Validation/Constraint/WhiteLabelNotUsernameConstraintValidator.php
modules/contrib/whitelabel/src/Plugin/views/argument_default/CurrentWhiteLabel.php
modules/contrib/whitelabel/src/Plugin/views/argument_default/CurrentWhiteLabelUid.php
modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelConfigOverrideTest.php
modules/contrib/whitelabel/tests/src/Functional/WhiteLabelPermissionRevokeTest.php
modules/contrib/whitelabel/tests/src/Functional/WhiteLabelTestBase.php
modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelInboundPathProcessingTest.php
modules/contrib/whitelabel/tests/src/Functional/WhiteLabelThemeNegotiatorTest.php
modules/contrib/whitelabel/tests/src/FunctionalJavascript/WhiteLabelFieldTest.php
modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelOutboundPathProcessingTest.php
modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelValidatorTest.php
modules/contrib/whitelabel/tests/src/Traits/WhiteLabelCreationTrait.php
modules/contrib/whitelabel/whitelabel.install
modules/contrib/whitelabel/whitelabel.module
modules/contrib/whitelabel/whitelabel.views.inc

16 files with changes
=====================

1) modules/contrib/whitelabel/src/Entity/WhiteLabel.php:406

    ---------- begin diff ----------
@@ @@
         }
         $paths['target'] = $paths['target'] . '/';
         $paths['id'] = $id;
-        $paths['source'] = drupal_get_path('theme', $theme) . '/';
+        $paths['source'] = \Drupal::service('extension.list.theme')->getPath($theme) . '/';
         $paths['files'] = $paths['map'] = [];

         // Rewrite theme stylesheets.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/whitelabel/tests/src/FunctionalJavascript/WhiteLabelFieldTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Make sure everything is disabled by default.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/whitelabel/tests/src/Functional/WhiteLabelThemeNegotiatorTest.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->container->get('theme_installer')->install(['seven']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/whitelabel/tests/src/Functional/WhiteLabelTestBase.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->whiteLabelOwner = $this->drupalCreateUser(['serve white label pages']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/whitelabel/tests/src/Functional/WhiteLabelPermissionRevokeTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->defaultName = $this->config('system.site')->get('name');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/whitelabel/tests/src/Functional/WhiteLabelFeatureToggleTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Make sure everything is disabled by default.
@@ @@
         $this->notInBrandingBlock($this->whiteLabel->getSlogan());

       $config_key == 'site_logo' ?
-        $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri()))) :
-        $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+        $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri())) :
+        $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     }

     // Finally test the site name display option.
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/whitelabel/tests/src/Functional/WhiteLabelCacheTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $image_files = $this->drupalGetTestFiles('image');
@@ @@
     // Should not contain.
     $this->notInBrandingBlock($this->whiteLabel->getName());
     $this->notInBrandingBlock($this->whiteLabel->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     $this->notInBrandingBlock($this->whiteLabel2->getName());
     $this->notInBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));

     // White label 1.
     $this->setCurrentWhiteLabel($this->whiteLabel);
@@ @@
     // Should contain.
     $this->inBrandingBlock($this->whiteLabel->getName());
     $this->inBrandingBlock($this->whiteLabel->getSlogan());
-    $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     // Should not contain.
     $this->notInBrandingBlock($this->defaultName);
     $this->notInBrandingBlock($this->whiteLabel2->getName());
     $this->notInBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));

     // White label 2.
     $this->setCurrentWhiteLabel($this->whiteLabel2);
@@ @@
     // Should contain.
     $this->inBrandingBlock($this->whiteLabel2->getName());
     $this->inBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));
     // Should not contain.
     $this->notInBrandingBlock($this->defaultName);
     $this->notInBrandingBlock($this->whiteLabel->getName());
     $this->notInBrandingBlock($this->whiteLabel->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));

     // White label 2 (updated).
     $this->whiteLabel2
@@ @@
     // Should contain.
     $this->inBrandingBlock($this->whiteLabel2->getName());
     $this->inBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));
     // Should not contain.
     $this->notInBrandingBlock($this->defaultName);
     $this->notInBrandingBlock($this->whiteLabel->getName());
     $this->notInBrandingBlock($this->whiteLabel->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));

     // White label 1 (again).
     $this->setCurrentWhiteLabel($this->whiteLabel);
@@ @@
     // Should contain.
     $this->inBrandingBlock($this->whiteLabel->getName());
     $this->inBrandingBlock($this->whiteLabel->getSlogan());
-    $this->inImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->inImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     // Should not contain.
     $this->notInBrandingBlock($this->defaultName);
     $this->notInBrandingBlock($this->whiteLabel2->getName());
     $this->notInBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));

     // No white label (again).
     $this->resetWhiteLabel();
@@ @@
     // Should not contain.
     $this->notInBrandingBlock($this->whiteLabel->getName());
     $this->notInBrandingBlock($this->whiteLabel->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel->getLogo()->getFileUri()));
     $this->notInBrandingBlock($this->whiteLabel2->getName());
     $this->notInBrandingBlock($this->whiteLabel2->getSlogan());
-    $this->notInImagePath(file_url_transform_relative(file_create_url($this->whiteLabel2->getLogo()->getFileUri())));
+    $this->notInImagePath(\Drupal::service('file_url_generator')->generateString($this->whiteLabel2->getLogo()->getFileUri()));
   }

 }
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/whitelabel/whitelabel.module:24

    ---------- begin diff ----------
@@ @@
     if (in_array('whitelabel/whitelabel.' . $whitelabel->getToken(), $assets->getLibraries())) {
       $stylesheets = $whitelabel->getStylesheets();
       foreach ($stylesheets as $i => $stylesheet) {
-        $url = file_create_url($stylesheet);
-        $path = file_url_transform_relative($url);
+        $url = \Drupal::service('file_url_generator')->generateAbsoluteString($stylesheet);
+        $path = \Drupal::service('file_url_generator')->transformRelative($url);

         // Insert a new stylesheet and hash with the palette to be able to
         // update the cached version once the file is regenerated.
@@ @@
   }

   // Attempt to load preview HTML if the theme provides it.
-  $preview_html_path = \Drupal::root() . '/' . (isset($info['preview_html']) ? drupal_get_path('theme', $theme) . '/' . $info['preview_html'] : drupal_get_path('module', 'color') . '/preview.html');
+  $preview_html_path = \Drupal::root() . '/' . (isset($info['preview_html']) ? \Drupal::service('extension.list.theme')->getPath($theme) . '/' . $info['preview_html'] : \Drupal::service('extension.list.module')->getPath('color') . '/preview.html');
   $variables['html_preview']['#markup'] = file_get_contents($preview_html_path);

   // Add hidden form elements mimicing the color form so the preview library can
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector


9) modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelValidatorTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('system', ['sequences']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelOutboundPathProcessingTest.php:62

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('system', ['sequences']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelInboundPathProcessingTest.php:74

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('system', ['sequences']);
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelConfigOverrideTest.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('system', ['sequences']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelConditionTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('whitelabel');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/whitelabel/tests/src/Kernel/WhiteLabelAccessTest.php:48

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('system', ['sequences']);
     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/whitelabel/tests/src/FunctionalJavascript/WhiteLabelStyleSheetTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a secondary white label.
@@ @@

     // Get path.
     $file_path = 'public://whitelabel/' . $this->whiteLabel->getToken() . '/colors.css';
-    $url = file_create_url($file_path);
-    $html_path = file_url_transform_relative($url);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file_path);
+    $html_path = \Drupal::service('file_url_generator')->transformRelative($url);

     // Assert stylesheet is not on the page.
     $this->drupalGet('<front>');
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/whitelabel/tests/src/FunctionalJavascript/WhiteLabelJavascriptTestBase.php:55

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->whiteLabelOwner = $this->drupalCreateUser(['serve white label pages']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 16 files have been changed by Rector                                      

