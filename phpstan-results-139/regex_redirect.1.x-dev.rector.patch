diff --git a/src/EventSubscriber/RegexRedirectRequestSubscriber.php b/src/EventSubscriber/RegexRedirectRequestSubscriber.php
index 945bee1..f1d9e65 100644
--- a/src/EventSubscriber/RegexRedirectRequestSubscriber.php
+++ b/src/EventSubscriber/RegexRedirectRequestSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\regex_redirect\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\PathProcessor\InboundPathProcessorInterface;
@@ -13,7 +14,6 @@ use Drupal\redirect\RedirectChecker;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\Routing\RequestContext;
 
 /**
@@ -87,7 +87,7 @@ class RegexRedirectRequestSubscriber implements EventSubscriberInterface {
   /**
    * Handles the redirect if any found.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    *
    * @throws \Drupal\redirect\Exception\RedirectLoopException
@@ -95,7 +95,7 @@ class RegexRedirectRequestSubscriber implements EventSubscriberInterface {
    * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
    * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
    */
-  public function onKernelRequestCheckRegexRedirect(GetResponseEvent $event) {
+  public function onKernelRequestCheckRegexRedirect(RequestEvent $event) {
     // Get a clone of the request. During inbound processing the request
     // can be altered. Allowing this here can lead to unexpected behavior.
     // For example the path_processor.files inbound processor provided by
@@ -145,12 +145,12 @@ class RegexRedirectRequestSubscriber implements EventSubscriberInterface {
   /**
    * Prior to set the response it check if we can redirect.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event object.
    * @param \Drupal\Core\Url $url
    *   The Url where we want to redirect.
    */
-  protected function setResponse(GetResponseEvent $event, Url $url) {
+  protected function setResponse(RequestEvent $event, Url $url) {
     // Set the response if the regex redirect is valid.
     $request = $event->getRequest();
     $this->context->fromRequest($request);
diff --git a/tests/src/Unit/RegexRedirectRepositoryTest.php b/tests/src/Unit/RegexRedirectRepositoryTest.php
index eb718ec..404e944 100644
--- a/tests/src/Unit/RegexRedirectRepositoryTest.php
+++ b/tests/src/Unit/RegexRedirectRepositoryTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\regex_redirect\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Database\Connection;
@@ -31,6 +32,7 @@ use Symfony\Component\HttpFoundation\RequestStack;
  */
 class RegexRedirectRepositoryTest extends UnitTestCase {
 
+  use ProphecyTrait;
   use StringTranslationTrait;
 
   /**
@@ -106,7 +108,7 @@ class RegexRedirectRepositoryTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->container = new ContainerBuilder();
@@ -559,7 +561,7 @@ class RegexRedirectRepositoryTest extends UnitTestCase {
       $this->requestStack->reveal(),
       $this->configFactory->reveal()
     );
-    $this->setExpectedException(RedirectLoopException::class);
+    $this->expectException(RedirectLoopException::class);
     $regex_redirect_repository->findMatchingRedirect($data[0]['actual']);
   }
 
