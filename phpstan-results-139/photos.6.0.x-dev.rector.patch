diff --git a/photos.install b/photos.install
index d54cc27..49ea050 100644
--- a/photos.install
+++ b/photos.install
@@ -327,7 +327,7 @@ function photos_update_8502(&$sandbox) {
     $all_created = TRUE;
     // Only create if the photos view doesn't exist and views is enabled.
     if (!View::load('photos')) {
-      $config_path = drupal_get_path('module', 'photos') . '/config/optional/views.view.photos.yml';
+      $config_path = \Drupal::service('extension.list.module')->getPath('photos') . '/config/optional/views.view.photos.yml';
       $data = Yaml::parseFile($config_path);
       \Drupal::configFactory()->getEditable('views.view.photos')->setData($data)->save(TRUE);
     }
@@ -336,7 +336,7 @@ function photos_update_8502(&$sandbox) {
     }
     // Album view.
     if (!View::load('photos_album')) {
-      $config_path = drupal_get_path('module', 'photos') . '/config/optional/views.view.photos_album.yml';
+      $config_path = \Drupal::service('extension.list.module')->getPath('photos') . '/config/optional/views.view.photos_album.yml';
       $data = Yaml::parseFile($config_path);
       \Drupal::configFactory()->getEditable('views.view.photos_album')->setData($data)->save(TRUE);
     }
@@ -345,7 +345,7 @@ function photos_update_8502(&$sandbox) {
     }
     // Album list view.
     if (!View::load('photos_album_list')) {
-      $config_path = drupal_get_path('module', 'photos') . '/config/optional/views.view.photos_album_list.yml';
+      $config_path = \Drupal::service('extension.list.module')->getPath('photos') . '/config/optional/views.view.photos_album_list.yml';
       $data = Yaml::parseFile($config_path);
       \Drupal::configFactory()->getEditable('views.view.photos_album_list')->setData($data)->save(TRUE);
     }
diff --git a/photos.module b/photos.module
index 78b16bb..cd0bd28 100644
--- a/photos.module
+++ b/photos.module
@@ -967,7 +967,7 @@ function photos_preprocess_photos_image_html(&$variables, $hook) {
       if (!file_exists($styleUri)) {
         $style->createDerivative($uri, $styleUri);
       }
-      $url = file_create_url($styleUri);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($styleUri);
     }
 
     // Render image view.
diff --git a/photos_access/photos_access.module b/photos_access/photos_access.module
index 38e83f0..e1f8707 100644
--- a/photos_access/photos_access.module
+++ b/photos_access/photos_access.module
@@ -155,7 +155,7 @@ function photos_access_form_node_form_alter(&$form, FormStateInterface &$form_st
           $form['photos_privacy']['viewremove'][$u['target_id']] = [
             '#type' => 'checkbox',
             '#default_value' => isset($node->viewremove[$u['target_id']]) ? $node->viewremove[$u['target_id']] : '',
-            '#title' => t('Delete: @name', ['@name' => render($u['username'])]),
+            '#title' => t('Delete: @name', ['@name' => \Drupal::service('renderer')->render($u['username'])]),
             '#prefix' => '<div id="photos-access-remove"' . $classes . '>',
             '#suffix' => '</div>',
           ];
@@ -175,7 +175,7 @@ function photos_access_form_node_form_alter(&$form, FormStateInterface &$form_st
           $form['photos_privacy']['updateremove'][$u['target_id']] = [
             '#type' => 'checkbox',
             '#default_value' => isset($node->updateremove[$u['target_id']]) ? $node->updateremove[$u['target_id']] : '',
-            '#title' => t('Delete: @name', ['@name' => render($u['username'])]),
+            '#title' => t('Delete: @name', ['@name' => \Drupal::service('renderer')->render($u['username'])]),
             '#prefix' => '<div id="photos_access_updateremove" class="photos-access-update-remove">',
             '#suffix' => '</div>',
           ];
@@ -377,7 +377,7 @@ function photos_access_move_files(NodeInterface $node, $public = TRUE) {
           $new_uri = str_replace($old_file_wrapper, $file_wrapper, $file->getFileUri());
           $dirname = $file_system->dirname($new_uri);
           $file_system->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY);
-          file_move($file, $new_uri);
+          \Drupal::service('file.repository')->move($file, $new_uri);
           // Clear image page cache.
           $cache_tags[] = 'photos:image:' . $fid;
         }
@@ -1245,7 +1245,7 @@ function _photos_access_move_field_image(EntityInterface $entity, FileFieldItemL
             $new_uri = str_replace($old_file_wrapper, $file_wrapper, $file->getFileUri());
             $dirname = $file_system->dirname($new_uri);
             $file_system->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY);
-            file_move($file, $new_uri);
+            \Drupal::service('file.repository')->move($file, $new_uri);
           }
         }
       }
diff --git a/photos_access/tests/src/Functional/PhotosAccessTest.php b/photos_access/tests/src/Functional/PhotosAccessTest.php
index f0ef6bd..f9ec944 100644
--- a/photos_access/tests/src/Functional/PhotosAccessTest.php
+++ b/photos_access/tests/src/Functional/PhotosAccessTest.php
@@ -66,7 +66,7 @@ class PhotosAccessTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create admin user and adjust photos admin settings. This user will also
@@ -144,7 +144,7 @@ class PhotosAccessTest extends BrowserTestBase {
     // Get test image file.
     /** @var \Drupal\Core\File\FileSystemInterface $fileSystem */
     $fileSystem = \Drupal::service('file_system');
-    $testImageFile = drupal_get_path('module', 'photos') . '/tests/images/photos-test-picture.jpg';
+    $testImageFile = \Drupal::service('extension.list.module')->getPath('photos') . '/tests/images/photos-test-picture.jpg';
     // Add image to album.
     $edit = [
       'files[images_0]' => $fileSystem->realpath($testImageFile),
diff --git a/src/PhotosImageFile.php b/src/PhotosImageFile.php
index 82a50f0..2dd2916 100644
--- a/src/PhotosImageFile.php
+++ b/src/PhotosImageFile.php
@@ -151,7 +151,7 @@ class PhotosImageFile {
     $style->createDerivative($uri, $destination);
 
     // Return URL.
-    return file_create_url($destination);
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($destination);
   }
 
   /**
@@ -166,7 +166,7 @@ class PhotosImageFile {
         $image_url = ImageStyle::load($style_name)->buildUrl($uri);
       }
       else {
-        $image_url = file_create_url($uri);
+        $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
       }
     }
     else {
diff --git a/src/PhotosUpload.php b/src/PhotosUpload.php
index 5b9f5e0..ae6f91e 100644
--- a/src/PhotosUpload.php
+++ b/src/PhotosUpload.php
@@ -491,7 +491,7 @@ class PhotosUpload implements PhotosUploadInterface {
               break;
             }
             $path = $this->fileSystem->createFilename($image['name'], $this->path($scheme));
-            if ($temp_file = file_save_data($zip->getFromIndex($x), $path)) {
+            if ($temp_file = \Drupal::service('file.repository')->writeData($zip->getFromIndex($x), $path)) {
               // Update file values.
               $temp_file->album_id = $params['album_id'];
               $temp_file->nid = $params['nid'];
diff --git a/tests/src/Functional/AddPhotosAlbumImageTest.php b/tests/src/Functional/AddPhotosAlbumImageTest.php
index 5b73702..3d970e8 100644
--- a/tests/src/Functional/AddPhotosAlbumImageTest.php
+++ b/tests/src/Functional/AddPhotosAlbumImageTest.php
@@ -51,7 +51,7 @@ class AddPhotosAlbumImageTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create user with permissions to edit own photos.
     $this->account = $this->drupalCreateUser([
@@ -82,7 +82,7 @@ class AddPhotosAlbumImageTest extends BrowserTestBase {
     $album->save();
 
     // Get test image file.
-    $testPhotoUri = drupal_get_path('module', 'photos') . '/tests/images/photos-test-picture.jpg';
+    $testPhotoUri = \Drupal::service('extension.list.module')->getPath('photos') . '/tests/images/photos-test-picture.jpg';
     $fileSystem = \Drupal::service('file_system');
 
     // Post image upload form.
diff --git a/tests/src/Kernel/CreatePhotosAlbumTest.php b/tests/src/Kernel/CreatePhotosAlbumTest.php
index 3d21a96..56e9aa5 100644
--- a/tests/src/Kernel/CreatePhotosAlbumTest.php
+++ b/tests/src/Kernel/CreatePhotosAlbumTest.php
@@ -31,7 +31,7 @@ class CreatePhotosAlbumTest extends EntityKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['system']);
