diff --git a/src/EventSubscriber/HandlerFor403AccessDenied.php b/src/EventSubscriber/HandlerFor403AccessDenied.php
index 0961ccc..704a617 100644
--- a/src/EventSubscriber/HandlerFor403AccessDenied.php
+++ b/src/EventSubscriber/HandlerFor403AccessDenied.php
@@ -2,8 +2,9 @@
 
 namespace Drupal\moderated_content_bulk_publish\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
+use Drupal\Core\Routing\TrustedRedirectResponse;
 use Drupal\Core\EventSubscriber\HttpExceptionSubscriberBase;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
@@ -20,7 +21,7 @@ class HandlerFor403AccessDenied extends HttpExceptionSubscriberBase {
     return ['html'];
   }
 
-  public function on403(\Symfony\Component\HttpKernel\Event\ExceptionEvent $event) {
+  public function on403(ExceptionEvent $event) {
     $request = $event->getRequest();
     $is_anonymous = $this->currentUser->isAnonymous();
     $route_name = $request->attributes->get('_route');
@@ -35,7 +36,7 @@ class HandlerFor403AccessDenied extends HttpExceptionSubscriberBase {
       $new_path = str_replace('/latest', '', $current_path);
       \Drupal::logger('moderated_content_bulk_publish')->notice(utf8_encode('HandlerFor403AccessDenied: Redirecting from ' . $current_path . ' to ' . $new_path));
       $base_url = \Drupal::request()->getSchemeAndHttpHost();
-      $returnResponse = new \Drupal\Core\Routing\TrustedRedirectResponse($base_url . '/' . $langId . $new_path); // TODO: figure out how to do this the Drupal 8 way for internal path but didn't because of language afterthought in Drupal 8.
+      $returnResponse = new TrustedRedirectResponse($base_url . '/' . $langId . $new_path); // TODO: figure out how to do this the Drupal 8 way for internal path but didn't because of language afterthought in Drupal 8.
       $event->setResponse($returnResponse);
 
       return;
