modules/contrib/entity_usage_integrity/entity_usage_integrity.module
modules/contrib/entity_usage_integrity/src/IntegrityValidationTrait.php
modules/contrib/entity_usage_integrity/src/EntityUsage.php
modules/contrib/entity_usage_integrity/src/IntegrityValidator.php
modules/contrib/entity_usage_integrity/src/EntityUsageIntegrityResource/RelationCollections.php
modules/contrib/entity_usage_integrity/src/EntityUsageIntegrityResource/RelationStatusCollection.php
modules/contrib/entity_usage_integrity/src/EntityUsageIntegrityResource/RelationStatusItem.php
modules/contrib/entity_usage_integrity/src/Event/EntityUsageIntegrityApplicabilityCheckEvent.php
modules/contrib/entity_usage_integrity/src/Event/EntityUsageIntegrityEvents.php
modules/contrib/entity_usage_integrity/src/Form/IntegritySettingsForm.php
modules/contrib/entity_usage_integrity/src/FormIntegrityValidation/ModerationStateChangeConfirmDialog.php
modules/contrib/entity_usage_integrity/src/FormIntegrityValidation/SubmittedEditForm.php
modules/contrib/entity_usage_integrity/src/FormIntegrityValidation/SubmittedFormBase.php
modules/contrib/entity_usage_integrity/src/FormIntegrityValidation/SubmittedModerationStateForm.php
modules/contrib/entity_usage_integrity/src/FormIntegrityValidation/ViewedDeleteForm.php
modules/contrib/entity_usage_integrity/src/FormIntegrityValidation/ViewedEditForm.php
modules/contrib/entity_usage_integrity/src/IntegrityValidationContext.php

4 files with changes
====================

1) modules/contrib/entity_usage_integrity/src/FormIntegrityValidation/ViewedEditForm.php:156

    ---------- begin diff ----------
@@ @@

     if ($is_applicable) {
       $event = new EntityUsageIntegrityApplicabilityCheckEvent($form_state, $is_applicable);
-      $this->eventDispatcher->dispatch(EntityUsageIntegrityEvents::APPLICABILITY_CHECK, $event);
+      $this->eventDispatcher->dispatch($event, EntityUsageIntegrityEvents::APPLICABILITY_CHECK);
       $is_applicable = $event->isApplicable();
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


2) modules/contrib/entity_usage_integrity/src/FormIntegrityValidation/ViewedDeleteForm.php:149

    ---------- begin diff ----------
@@ @@

     if ($is_applicable) {
       $event = new EntityUsageIntegrityApplicabilityCheckEvent($form_state, $is_applicable);
-      $this->eventDispatcher->dispatch(EntityUsageIntegrityEvents::APPLICABILITY_CHECK, $event);
+      $this->eventDispatcher->dispatch($event, EntityUsageIntegrityEvents::APPLICABILITY_CHECK);
       $is_applicable = $event->isApplicable();
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


3) modules/contrib/entity_usage_integrity/src/FormIntegrityValidation/ModerationStateChangeConfirmDialog.php:271

    ---------- begin diff ----------
@@ @@

     if ($is_applicable) {
       $event = new EntityUsageIntegrityApplicabilityCheckEvent($form_state, $is_applicable);
-      $this->eventDispatcher->dispatch(EntityUsageIntegrityEvents::APPLICABILITY_CHECK, $event);
+      $this->eventDispatcher->dispatch($event, EntityUsageIntegrityEvents::APPLICABILITY_CHECK);
       $is_applicable = $event->isApplicable();
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


4) modules/contrib/entity_usage_integrity/src/Event/EntityUsageIntegrityApplicabilityCheckEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_usage_integrity\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Form\FormStateInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines an entity usage integrity applicability check event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

