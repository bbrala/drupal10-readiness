diff --git a/src/Form/ImportForm.php b/src/Form/ImportForm.php
index 56f7833..c4644ad 100644
--- a/src/Form/ImportForm.php
+++ b/src/Form/ImportForm.php
@@ -214,7 +214,7 @@ class ImportForm extends FormBase
             'init_message' => t('Importing'),
             'progress_message' => t('@current of @total. Estimated duration: @estimate.'),
             'error_message' => t('There was an error on the import process.'),
-            'file' => drupal_get_path('module', 'bibcite_import_orcid') . '/bibcite_import_orcid.batch.inc',
+            'file' => \Drupal::service('extension.list.module')->getPath('bibcite_import_orcid') . '/bibcite_import_orcid.batch.inc',
         );
 
         batch_set($batch);
diff --git a/src/Form/PrepareImport.php b/src/Form/PrepareImport.php
index 8623b48..b4f0a99 100644
--- a/src/Form/PrepareImport.php
+++ b/src/Form/PrepareImport.php
@@ -62,7 +62,7 @@ class PrepareImport extends FormBase
       'init_message' => t('Preparing the form'),
       'progress_message' => t('@current of @total. Estimated duration: @estimate.'),
       'error_message' => t('There was an error on the import process.'),
-      'file' => drupal_get_path('module', 'bibcite_import_orcid') . '/bibcite_import_orcid.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('bibcite_import_orcid') . '/bibcite_import_orcid.batch.inc',
     );
     foreach ($works as $work) {
       $batch['operations'][] = ['bibcite_prep_import_orcid_batch', [$work, $user]];
diff --git a/src/Import.php b/src/Import.php
index c916b69..62fcb2d 100644
--- a/src/Import.php
+++ b/src/Import.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\bibcite_import_orcid;
 
+use RenanBr\BibTexParser\Processor\TagNameCaseProcessor;
+use RenanBr\BibTexParser\Processor\NamesProcessor;
 use Drupal;
 use Drupal\user\Entity\User;
 use Drupal\bibcite_entity\Entity\Contributor;
@@ -139,8 +141,8 @@ class Import {
     try {
       $parser = new Parser();
       $listener = new Listener();
-      $listener->addProcessor(new Processor\TagNameCaseProcessor(CASE_LOWER));
-      $listener->addProcessor(new Processor\NamesProcessor());
+      $listener->addProcessor(new TagNameCaseProcessor(CASE_LOWER));
+      $listener->addProcessor(new NamesProcessor());
 
       $parser->addListener($listener);
       $parser->parseString($work);
