diff --git a/src/Controller/RequestReportController.php b/src/Controller/RequestReportController.php
index aa70191..9b168d3 100644
--- a/src/Controller/RequestReportController.php
+++ b/src/Controller/RequestReportController.php
@@ -160,14 +160,14 @@ class RequestReportController extends ControllerBase {
    */
   public function previewApp(Request $request) {
     if (FALSE) {
-      $build_path = '/' . drupal_get_path('module', 'qtools_profiler') . '/react-app/chrome-extension/build';
+      $build_path = '/' . \Drupal::service('extension.list.module')->getPath('qtools_profiler') . '/react-app/chrome-extension/build';
       $build = [
         '#theme' => 'qtools_profiler_preview_react',
         '#build_path' => $build_path,
       ];
     }
     else {
-      $build_path = '/' . drupal_get_path('module', 'qtools_profiler') . '/vue-app/dist/spa';
+      $build_path = '/' . \Drupal::service('extension.list.module')->getPath('qtools_profiler') . '/vue-app/dist/spa';
       $build = [
         '#theme' => 'qtools_profiler_preview_vue',
         '#build_path' => $build_path,
@@ -184,7 +184,7 @@ class RequestReportController extends ControllerBase {
    * Returns preview app summary.
    */
   public function previewVueApp(Request $request) {
-    $build_path = drupal_get_path('module', 'qtools_profiler') . '/vue-app/dist/spa';
+    $build_path = \Drupal::service('extension.list.module')->getPath('qtools_profiler') . '/vue-app/dist/spa';
     $content = file_get_contents($build_path . '/index.html');
 
     $response = new HtmlResponse();
diff --git a/src/EventSubscriber/OnKernelEvents.php b/src/EventSubscriber/OnKernelEvents.php
index 161e2bc..4b09404 100644
--- a/src/EventSubscriber/OnKernelEvents.php
+++ b/src/EventSubscriber/OnKernelEvents.php
@@ -2,15 +2,15 @@
 
 namespace Drupal\qtools_profiler\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\TerminateEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Render\HtmlResponse;
 use Drupal\Core\Url;
 use Drupal\dynamic_page_cache\EventSubscriber\DynamicPageCacheSubscriber;
 use Drupal\qtools_profiler\PerformanceService;
 use Drupal\qtools_profiler\Routing\ProfilerRoutes;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
-use Symfony\Component\HttpKernel\Event\PostResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -42,7 +42,7 @@ class OnKernelEvents implements EventSubscriberInterface {
   /**
    * Handles kernel terminate event.
    */
-  public function onKernelTerminate(PostResponseEvent $event) {
+  public function onKernelTerminate(TerminateEvent $event) {
     if ($this->performanceService->monitoringActive()) {
       $this->performanceService->monitoringFinish($event);
     }
@@ -51,7 +51,7 @@ class OnKernelEvents implements EventSubscriberInterface {
   /**
    * Handles kernel response event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     if (!$this->performanceService->monitoringActive()) {
       return;
     }
@@ -167,7 +167,7 @@ class OnKernelEvents implements EventSubscriberInterface {
   /**
    * Handles kernel request event.
    */
-  public function onKernelRequestEarly(GetResponseEvent $event) {
+  public function onKernelRequestEarly(RequestEvent $event) {
     // Ensure cookie client.
     $this->performanceService->monitoringEnsureCookie($event);
 
@@ -180,7 +180,7 @@ class OnKernelEvents implements EventSubscriberInterface {
   /**
    * Handles kernel request event.
    */
-  public function onKernelRequestWithRoute(GetResponseEvent $event) {
+  public function onKernelRequestWithRoute(RequestEvent $event) {
     if ($this->performanceService->monitoringActive()) {
       $route = $event->getRequest()->attributes->get('_route');
       if (!empty($route)) {
diff --git a/src/PerformanceService.php b/src/PerformanceService.php
index 4c0239b..c01f20c 100644
--- a/src/PerformanceService.php
+++ b/src/PerformanceService.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\qtools_profiler;
 
+use Symfony\Component\HttpKernel\Event\TerminateEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Database\Connection;
@@ -18,10 +21,7 @@ use Drupal\qtools_common\Utility\Slug;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Drupal\Core\Path\PathMatcherInterface;
-use Symfony\Component\HttpKernel\Event\PostResponseEvent;
 
 /**
  * Service to monitor performance.
@@ -465,7 +465,7 @@ class PerformanceService {
   /**
    * Handle request termination.
    */
-  public function monitoringFinish(PostResponseEvent $event) {
+  public function monitoringFinish(TerminateEvent $event) {
     // Only act if we have valid requestID.
     if (!$this->monitoringActive()) {
       $this->finishProfiling(FALSE);
@@ -511,7 +511,7 @@ class PerformanceService {
   /**
    * Handle request completion.
    */
-  public function monitoringComplete(FilterResponseEvent $event) {
+  public function monitoringComplete(ResponseEvent $event) {
     // Only act if we have valid requestID.
     if (!$this->monitoringActive()) {
       $this->finishProfiling(FALSE);
@@ -544,7 +544,7 @@ class PerformanceService {
   /**
    * Add tracking information to supported responses.
    */
-  public function addTrackingInformation(FilterResponseEvent $event, $requestId, $in_progress_stats = NULL) {
+  public function addTrackingInformation(ResponseEvent $event, $requestId, $in_progress_stats = NULL) {
     // Add header to any request.
     $summary = $this->getRequestSummary($requestId, $in_progress_stats);
     $event->getResponse()->headers->set('X-QTools-Profiler-RequestId', $requestId);
@@ -672,7 +672,7 @@ class PerformanceService {
   /**
    * Make sure we have monitoring cookie set.
    */
-  public function monitoringEnsureCookie(GetResponseEvent $event) {
+  public function monitoringEnsureCookie(RequestEvent $event) {
 
     $clientId = $event->getRequest()->cookies->get(static::COOKIE_PROFILER_CLIENT);
     $channel_info = $this->getChannelInfo($clientId);
@@ -743,7 +743,7 @@ class PerformanceService {
   /**
    * Start collection routine.
    */
-  public function monitoringStart(GetResponseEvent $event) {
+  public function monitoringStart(RequestEvent $event) {
     // If we already started then this is subrequest,
     // that we merge into main one.
     if ($this->monitoringActive()) {
@@ -893,7 +893,7 @@ class PerformanceService {
    * @return bool
    *   Result of the allowed check.
    */
-  public function monitoringAllowed(GetResponseEvent $event) {
+  public function monitoringAllowed(RequestEvent $event) {
     // If client id ia not set ignore this request.
     if (empty($this->clientId)) {
       return FALSE;
@@ -924,7 +924,7 @@ class PerformanceService {
    * @return bool
    *   Result of the allowed check.
    */
-  protected function profilingAllowed(GetResponseEvent $event) {
+  protected function profilingAllowed(RequestEvent $event) {
     $conf = $this->confGet();
 
     // Get profiling rules.
@@ -1148,7 +1148,7 @@ class PerformanceService {
   /**
    * Check if rule is valid.
    */
-  protected function rulesValid($rules_text, GetResponseEvent $event) {
+  protected function rulesValid($rules_text, RequestEvent $event) {
     // Check by rules.
     $rules = explode(PHP_EOL, $rules_text);
     $validation_context = $this->getRuleValidaionContext($event);
@@ -1199,7 +1199,7 @@ class PerformanceService {
   /**
    * Check if rule is valid.
    */
-  protected function getRuleValidaionContext(GetResponseEvent $event) {
+  protected function getRuleValidaionContext(RequestEvent $event) {
     $context = [
       'path' => $event->getRequest()->getRequestUri(),
       'uid' => $this->currentUser->id(),
diff --git a/src/Routing/ProfilerRoutes.php b/src/Routing/ProfilerRoutes.php
index 2475975..cb2d068 100644
--- a/src/Routing/ProfilerRoutes.php
+++ b/src/Routing/ProfilerRoutes.php
@@ -21,7 +21,7 @@ class ProfilerRoutes {
    */
   public function routes() {
     $routes = [];
-    $vue_app_index_path = drupal_get_path('module', 'qtools_profiler') . '/vue-app/dist/spa/index';
+    $vue_app_index_path = \Drupal::service('extension.list.module')->getPath('qtools_profiler') . '/vue-app/dist/spa/index';
 
     $routes[static::PREVIEW_APP_IFRAME_ROUTE] = new Route($vue_app_index_path, 
       [
