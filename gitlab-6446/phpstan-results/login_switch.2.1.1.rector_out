modules/contrib/login_switch/login_switch.module
modules/contrib/login_switch/src/EventSubscriber/AddNoIndexHeader.php
modules/contrib/login_switch/src/Form/LoginSwitchSettingsForm.php
modules/contrib/login_switch/src/Routing/ExceptionEventSubscriber.php
modules/contrib/login_switch/src/Routing/LoginSwitchRouteSubscriber.php
modules/contrib/login_switch/tests/src/Functional/LoadTest.php

2 files with changes
====================

1) modules/contrib/login_switch/src/Routing/ExceptionEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\login_switch\Routing;

+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Core\Session\AccountProxyInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
     ];
   }

-  public function onException(\Symfony\Component\HttpKernel\Event\ExceptionEvent $event) {
+  public function onException(ExceptionEvent $event) {
     $route_name = \Drupal::routeMatch()->getRouteName();
     $config = $this->configFactory->get('login_switch.settings');
     if ($config->get('login_disabled')) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/login_switch/src/EventSubscriber/AddNoIndexHeader.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\login_switch\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

@@ @@
   /**
   * Add noindex Headers
   *
-  * @param FilterResponseEvent $event
+  * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
   */
- public function onRespond(FilterResponseEvent $event)
+ public function onRespond(ResponseEvent $event)
  {
    if (!$event->isMasterRequest()) {
      return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

