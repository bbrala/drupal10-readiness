diff --git a/src/Form/CustomSolrConfigDeleteForm.php b/src/Form/CustomSolrConfigDeleteForm.php
index d938b1b..f010ec5 100644
--- a/src/Form/CustomSolrConfigDeleteForm.php
+++ b/src/Form/CustomSolrConfigDeleteForm.php
@@ -38,14 +38,12 @@ class CustomSolrConfigDeleteForm extends EntityConfirmFormBase {
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $this->entity->delete();
 
-    drupal_set_message(
-      $this->t('content @type: deleted @label.',
-        [
-          '@type' => $this->entity->bundle(),
-          '@label' => $this->entity->label(),
-        ]
-        )
-    );
+    $this->messenger()->addStatus($this->t('content @type: deleted @label.',
+      [
+        '@type' => $this->entity->bundle(),
+        '@label' => $this->entity->label(),
+      ]
+      ));
 
     $form_state->setRedirectUrl($this->getCancelUrl());
   }
diff --git a/src/Form/CustomSolrConfigForm.php b/src/Form/CustomSolrConfigForm.php
index 6841b9f..6527ab7 100644
--- a/src/Form/CustomSolrConfigForm.php
+++ b/src/Form/CustomSolrConfigForm.php
@@ -129,17 +129,17 @@ class CustomSolrConfigForm extends EntityForm {
 
     switch ($status) {
       case SAVED_NEW:
-        drupal_set_message($this->t('Created the %label Custom solr config.', [
+        $this->messenger()->addStatus($this->t('Created the %label Custom solr config.', [
           '%label' => $custom_solr_config->label(),
         ]));
         break;
 
       default:
-        drupal_set_message($this->t('Saved the %label Custom solr config.', [
+        $this->messenger()->addStatus($this->t('Saved the %label Custom solr config.', [
           '%label' => $custom_solr_config->label(),
         ]));
     }
-    $form_state->setRedirectUrl($custom_solr_config->urlInfo('collection'));
+    $form_state->setRedirectUrl($custom_solr_config->toUrl('collection'));
   }
 
 }
diff --git a/src/Plugin/Block/CustomSolrSearchResultBlock.php b/src/Plugin/Block/CustomSolrSearchResultBlock.php
index 6deff22..9ca346e 100644
--- a/src/Plugin/Block/CustomSolrSearchResultBlock.php
+++ b/src/Plugin/Block/CustomSolrSearchResultBlock.php
@@ -171,7 +171,7 @@ class CustomSolrSearchResultBlock extends BlockBase implements ContainerFactoryP
             '#topic' => implode(', ', $result->topic)
           );
 
-          $result_items[] = render($result_item);
+          $result_items[] = \Drupal::service('renderer')->render($result_item);
         }
       }
     }
