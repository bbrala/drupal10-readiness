modules/contrib/acquia_perz/modules/acquia_perz_push/acquia_perz_push.module
modules/contrib/acquia_perz/acquia_perz.install
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportContent/ParagraphsExportContentTest.php
modules/contrib/acquia_perz/src/Plugin/GraphQL/DataProducer/Site/BaseUrl.php
modules/contrib/acquia_perz/tests/src/Traits/EntityHelperTestTrait.php
modules/contrib/acquia_perz/modules/acquia_perz_push/src/Commands/QueueCommands.php
modules/contrib/acquia_perz/tests/src/Traits/ImageFieldCreationTrait.php
modules/contrib/acquia_perz/acquia_perz.module
modules/contrib/acquia_perz/src/Plugin/GraphQL/Schema/ExportEntitiesSchema.php
modules/contrib/acquia_perz/tests/src/Traits/TaxonomyFieldCreationTrait.php
modules/contrib/acquia_perz/tests/src/Traits/TextFieldCreationTrait.php
modules/contrib/acquia_perz/src/Service/Context/BaseContext.php
modules/contrib/acquia_perz/tests/src/Unit/AcquiaPerzEntityHelperTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/src/ExportContent.php
modules/contrib/acquia_perz/src/Service/Context/ContextInterface.php
modules/contrib/acquia_perz/src/Service/Context/PageContext.php
modules/contrib/acquia_perz/acquia_perz.post_update.php
modules/contrib/acquia_perz/modules/acquia_perz_push/acquia_perz_push.install
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportContent/RandomEntitiesExportContentTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportFormTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/src/ExportQueue.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/PerzPushTestBase.php
modules/contrib/acquia_perz/src/Service/Context/PathContext.php
modules/contrib/acquia_perz/src/Service/Helper/PathMatcher.php
modules/contrib/acquia_perz/src/Service/Helper/SettingsHelper.php
modules/contrib/acquia_perz/modules/acquia_perz_push/src/ExportTracker.php
modules/contrib/acquia_perz/src/Session/AcquiaPerzUserSession.php
modules/contrib/acquia_perz/tests/modules/acquia_perz_test/src/AcquiaPerzTestServiceProvider.php
modules/contrib/acquia_perz/tests/modules/acquia_perz_test/src/Client/ClientFactoryMock.php
modules/contrib/acquia_perz/modules/acquia_perz_push/src/Form/DeletePersonalizationDataForm.php
modules/contrib/acquia_perz/tests/modules/acquia_perz_test/src/Client/PerzApiPhpClientMock.php
modules/contrib/acquia_perz/modules/acquia_perz_push/src/Form/ExportForm.php
modules/contrib/acquia_perz/tests/src/Functional/AcquiaPersonalizationTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/src/Plugin/QueueWorker/ContentExportBulkQueueWorker.php
modules/contrib/acquia_perz/modules/acquia_perz_push/src/Plugin/QueueWorker/ContentExportQueueWorker.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Functional/QueueCommandsTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/CustomViewModesExportedVariationsTest.php
modules/contrib/acquia_perz/tests/src/Kernel/DiscoveryEndpointTest.php
modules/contrib/acquia_perz/tests/src/Kernel/PerzGraphQLTestBase.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportContent/CustomBlocksExportContentTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportContent/NodesExportContentTest.php
modules/contrib/acquia_perz/tests/src/Kernel/VariationsEndpointTest.php
modules/contrib/acquia_perz/tests/src/Traits/CreateCustomBlockTrait.php
modules/contrib/acquia_perz/tests/src/Traits/CustomBlockTestTrait.php
modules/contrib/acquia_perz/tests/src/Traits/CustomParagraphsTestTrait.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/TaxonomyRelationsTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/TranslatedEntitiesExportedVariationsTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Unit/Service/ExportContentTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Unit/Service/ExportQueueTest.php
modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Unit/Service/ExportTrackerTest.php
modules/contrib/acquia_perz/src/ClientFactory.php
modules/contrib/acquia_perz/src/Controller/HmacValidationController.php
modules/contrib/acquia_perz/src/EntityHelper.php
modules/contrib/acquia_perz/src/EventSubscriber/AcquiaSubscriptionData/AcquiaPerzData.php
modules/contrib/acquia_perz/src/EventSubscriber/PerzProductSettings.php
modules/contrib/acquia_perz/src/EventSubscriber/ResponseSubscriber.php
modules/contrib/acquia_perz/src/EventSubscriber/RouteSubscriber.php
modules/contrib/acquia_perz/src/Form/AdminSettingsForm.php
modules/contrib/acquia_perz/src/PerzHelper.php
modules/contrib/acquia_perz/src/Plugin/GraphQL/DataProducer/Entity/QueryDiscoverEntities.php
modules/contrib/acquia_perz/src/Plugin/GraphQL/DataProducer/Entity/QueryEntityVariations.php

12 files with changes
=====================

1) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportContent/NodesExportContentTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->entityConfig = [
       $this->entityTypeId => [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportContent/CustomBlocksExportContentTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->entityConfig = [
       $this->entityTypeId => [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/CustomViewModesExportedVariationsTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Prevent error during content render.
     DateFormat::create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/acquia_perz/tests/src/Kernel/PerzGraphQLTestBase.php:64

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $site_base_url = \Drupal::service('request_stack')->getCurrentRequest()->getSchemeAndHttpHost();
-    $subscriptionServiceMock = $this->getMockBuilder(Subscription::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $subscriptionServiceMock = $this->createMock(Subscription::class);
     $subscriptionServiceMock->expects($this->any())
       ->method('getSubscription')
       ->willReturn([
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Unit/Service/ExportTrackerTest.php:133

    ---------- begin diff ----------
@@ @@
    */
   protected function insertData() {
     unset($this->exportTrackerMock);
-    $insert = $this->getMockBuilder(Insert::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $insert = $this->createMock(Insert::class);
     $insert->expects($this->any())
       ->method('fields')
       ->will($this->returnSelf());
@@ @@
       ->method('execute')
       ->will($this->returnValue(['1' => '1']));

-    $this->database = $this->getMockBuilder(Connection::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->database = $this->createMock(Connection::class);

     $this->database->expects($this->once())
       ->method('insert')
@@ @@
    */
   protected function updateData() {
     unset($this->exportTrackerMock);
-    $update = $this->getMockBuilder(Update::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $update = $this->createMock(Update::class);
     $update->expects($this->any())
       ->method('fields')
       ->will($this->returnSelf());
@@ @@
       ->method('execute')
       ->will($this->returnValue(['1' => '1']));

-    $this->database = $this->getMockBuilder(Connection::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->database = $this->createMock(Connection::class);

     $this->database->expects($this->once())
       ->method('update')
@@ @@
    *   ExportTracker object.
    */
   protected function getDatabaseObjectForDelete() {
-    $delete = $this->getMockBuilder(Delete::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $delete = $this->createMock(Delete::class);

     $delete->expects($this->any())
       ->method('condition')
@@ @@
       ->method('execute')
       ->will($this->returnValue(['1' => '1']));

-    $this->database = $this->getMockBuilder(Connection::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->database = $this->createMock(Connection::class);

     $this->database->expects($this->once())
       ->method('delete')
@@ @@
    */
   protected function getDatabaseObjectForSelect() {
     $this->entityTypeManager = $this->createMock(EntityTypeManagerInterface::class);
-    $this->statement = $this->getMockBuilder(Statement::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->statement = $this->createMock(Statement::class);

     $this->statement->expects($this->any())
       ->method('fetchObject')
       ->will($this->returnCallback([$this, 'fetchObjectCallback']));

-    $this->select = $this->getMockBuilder(Select::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->select = $this->createMock(Select::class);

     $this->select->expects($this->any())
       ->method('fields')
@@ @@
       ->method('execute')
       ->will($this->returnValue($this->statement));

-    $this->database = $this->getMockBuilder(Connection::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->database = $this->createMock(Connection::class);

     $this->database->expects($this->once())
       ->method('select')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Unit/Service/ExportContentTest.php:169

    ---------- begin diff ----------
@@ @@
       ->willReturn('PERZTESTv3');

     $site_base_url = 'http://localhost';
-    $subscriptionServiceMock = $this->getMockBuilder(Subscription::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $subscriptionServiceMock = $this->createMock(Subscription::class);
     $subscriptionServiceMock->expects($this->any())
       ->method('getSubscription')
       ->willReturn([
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/TranslatedEntitiesExportedVariationsTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Prevent error during content render.
     DateFormat::create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/TaxonomyRelationsTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('taxonomy_term');
     $this->tagsVocabulary = $this->createVocabulary();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/PerzPushTestBase.php:94

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('system', 'sequences');
@@ @@
     $this->installSchema('comment', ['comment_entity_statistics']);
     \Drupal::moduleHandler()->loadInclude('paragraphs', 'install');
     $site_base_url = \Drupal::service('request_stack')->getCurrentRequest()->getSchemeAndHttpHost();
-    $subscriptionServiceMock = $this->getMockBuilder(Subscription::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $subscriptionServiceMock = $this->createMock(Subscription::class);
     $subscriptionServiceMock->expects($this->any())
       ->method('getSubscription')
       ->willReturn([
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportFormTest.php:25

    ---------- begin diff ----------
@@ @@
    *
    * @covers ::\__construct()
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->exportForm = ExportForm::create($this->container);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportContent/RandomEntitiesExportContentTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->entityConfig = [
       'node' => [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/acquia_perz/modules/acquia_perz_push/tests/src/Kernel/ExportContent/ParagraphsExportContentTest.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalCreateContentType([
       'type' => $this->parentBundle,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 12 files have been changed by Rector                                      

