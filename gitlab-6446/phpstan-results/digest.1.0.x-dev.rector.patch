diff --git a/tests/src/Functional/Form/Digest/DigestEditFormTest.php b/tests/src/Functional/Form/Digest/DigestEditFormTest.php
index 0557e11..8f9b075 100644
--- a/tests/src/Functional/Form/Digest/DigestEditFormTest.php
+++ b/tests/src/Functional/Form/Digest/DigestEditFormTest.php
@@ -78,7 +78,7 @@ class DigestEditFormTest extends BrowserTestBase {
     $blockUsed = 'page_title_block';
     $page->fillField('display_block', $blockUsed);
 
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->pageTextContains('The ' . $titleUsed . ' digest has been created');
 
     // Check the corresponding entity was created.
@@ -87,9 +87,9 @@ class DigestEditFormTest extends BrowserTestBase {
 
     $this->assertCount(1, $digests);
     $digest = reset($digests);
-    $this->assertEqual($digest->get('title'), $titleUsed);
-    $this->assertEqual($digest->get('schedule'), $scheduleUsed);
-    $this->assertEqual($digest->get('display_block'), $blockUsed);
+    $this->assertEquals($digest->get('title'), $titleUsed);
+    $this->assertEquals($digest->get('schedule'), $scheduleUsed);
+    $this->assertEquals($digest->get('display_block'), $blockUsed);
 
   }
 
@@ -125,7 +125,7 @@ class DigestEditFormTest extends BrowserTestBase {
     $newTitle = $this->randomMachineName();
     $this->getSession()->getPage()->fillField('title', $newTitle);
 
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');
     $this->assertSession()->pageTextContains('The ' . $newTitle . ' digest has been updated');
 
     // Check the corresponding entity was updated.
@@ -134,7 +134,7 @@ class DigestEditFormTest extends BrowserTestBase {
 
     $this->assertCount(1, $digests);
     $digest = reset($digests);
-    $this->assertEqual($digest->get('title'), $newTitle);
+    $this->assertEquals($digest->get('title'), $newTitle);
 
   }
 
diff --git a/tests/src/Functional/Form/Digest/DigestTestFormTest.php b/tests/src/Functional/Form/Digest/DigestTestFormTest.php
index 7a864b4..87ab658 100644
--- a/tests/src/Functional/Form/Digest/DigestTestFormTest.php
+++ b/tests/src/Functional/Form/Digest/DigestTestFormTest.php
@@ -86,7 +86,7 @@ class DigestTestFormTest extends BrowserTestBase {
       ->fieldValueEquals($user_field, $user_field_value);
 
     // Send the digest.
-    $this->drupalPostForm(NULL, [], 'Send');
+    $this->submitForm([], 'Send');
 
     $this->assertSession()->pageTextContains('The digest was sent successfully.');
 
@@ -120,7 +120,7 @@ class DigestTestFormTest extends BrowserTestBase {
     $this->assertSession()->statusCodeEquals(200);
 
     // Send the digest.
-    $this->drupalPostForm(NULL, [], 'Send');
+    $this->submitForm([], 'Send');
 
     $this->assertSession()->pageTextContains('The digest could not be sent.');
 
diff --git a/tests/src/Kernel/DigestManagerTest.php b/tests/src/Kernel/DigestManagerTest.php
index 3c74386..c841c74 100644
--- a/tests/src/Kernel/DigestManagerTest.php
+++ b/tests/src/Kernel/DigestManagerTest.php
@@ -71,7 +71,7 @@ class DigestManagerTest extends EntityKernelTestBase {
     // The enabled digest should be returned.
     $enabled = $this->manager->getEnabled();
     $this->assertCount(1, $enabled);
-    $this->assertEqual($digest_1->id(), reset($enabled)->id());
+    $this->assertEquals($digest_1->id(), reset($enabled)->id());
 
     $this->storage->create([
       'id' => 'digest_2',
@@ -81,7 +81,7 @@ class DigestManagerTest extends EntityKernelTestBase {
     // The new digest should not be returned.
     $enabled = $this->manager->getEnabled();
     $this->assertCount(1, $enabled);
-    $this->assertEqual($digest_1->id(), reset($enabled)->id());
+    $this->assertEquals($digest_1->id(), reset($enabled)->id());
 
   }
 
@@ -115,7 +115,7 @@ class DigestManagerTest extends EntityKernelTestBase {
     $this->assertCount(1, $options);
 
     // Check that the options were created correctly.
-    $this->assertEqual($options[$digest_1->id()], $digest_1->getTitle());
+    $this->assertEquals($options[$digest_1->id()], $digest_1->getTitle());
     $this->assertFalse(isset($options[$digest_2->id()]));
 
   }
@@ -194,12 +194,12 @@ class DigestManagerTest extends EntityKernelTestBase {
 
     // Check that the data was created correctly.
     $data = $queue->claimItem()->data;
-    $this->assertEqual($digest_1->id(), $data['digest']);
-    $this->assertEqual($user->id(), $data['user']);
+    $this->assertEquals($digest_1->id(), $data['digest']);
+    $this->assertEquals($user->id(), $data['user']);
 
     // Check that the send date of the digest has been updated.
     $this->assertFalse($digest_1->shouldSend());
-    $this->assertEqual($digest_1->getNextSendDate(), $digest_1->getSchedule()->getNextRunDate());
+    $this->assertEquals($digest_1->getNextSendDate(), $digest_1->getSchedule()->getNextRunDate());
 
   }
 
diff --git a/tests/src/Kernel/Entity/DigestTest.php b/tests/src/Kernel/Entity/DigestTest.php
index 8924b0a..833d820 100644
--- a/tests/src/Kernel/Entity/DigestTest.php
+++ b/tests/src/Kernel/Entity/DigestTest.php
@@ -69,7 +69,7 @@ class DigestTest extends EntityKernelTestBase {
 
     $title = $this->randomMachineName();
     $this->digest->setTitle($title);
-    $this->assertEqual($title, $this->digest->getTitle());
+    $this->assertEquals($title, $this->digest->getTitle());
 
   }
 
@@ -85,7 +85,7 @@ class DigestTest extends EntityKernelTestBase {
 
     $description = $this->randomMachineName();
     $this->digest->setDescription($description);
-    $this->assertEqual($description, $this->digest->getDescription());
+    $this->assertEquals($description, $this->digest->getDescription());
 
   }
 
@@ -109,7 +109,7 @@ class DigestTest extends EntityKernelTestBase {
     // Should successfully set and retrieve a cron expression.
     $this->digest->setSchedule($valid_cron);
     $expression = $this->digest->getSchedule()->getExpression();
-    $this->assertEqual($valid_cron, $expression);
+    $this->assertEquals($valid_cron, $expression);
 
     try {
 
@@ -122,7 +122,7 @@ class DigestTest extends EntityKernelTestBase {
 
       // The schedule should not have changed.
       $expression = $this->digest->getSchedule()->getExpression();
-      $this->assertEqual($valid_cron, $expression);
+      $this->assertEquals($valid_cron, $expression);
 
     }
 
@@ -131,13 +131,13 @@ class DigestTest extends EntityKernelTestBase {
     $valid_cron = '0 0 * * 5';
     $this->digest->set('schedule', $valid_cron);
     $expression = $this->digest->getSchedule();
-    $this->assertEqual($valid_cron, $expression);
+    $this->assertEquals($valid_cron, $expression);
 
     // The same results should occur if a CronExpression object is passed in.
     $cron_expression = new CronExpression($valid_cron);
     $this->digest->setSchedule($cron_expression);
     $expression = $this->digest->getSchedule();
-    $this->assertEqual($cron_expression, $expression);
+    $this->assertEquals($cron_expression, $expression);
 
     // The next send date should be updated when changing the schedule.
     $valid_cron = '0 0 * * 3';
@@ -171,7 +171,7 @@ class DigestTest extends EntityKernelTestBase {
     // Should successfully set and retrieve the display block.
     $this->digest->setDisplayBlock($valid_block);
     $block = $this->digest->getDisplayBlock();
-    $this->assertEqual($valid_block, $block->getPluginId());
+    $this->assertEquals($valid_block, $block->getPluginId());
 
     try {
 
@@ -184,7 +184,7 @@ class DigestTest extends EntityKernelTestBase {
 
       // The display block should not have changed.
       $block = $this->digest->getDisplayBlock();
-      $this->assertEqual($valid_block, $block->getPluginId());
+      $this->assertEquals($valid_block, $block->getPluginId());
 
     }
 
@@ -193,7 +193,7 @@ class DigestTest extends EntityKernelTestBase {
     $valid_block = 'user_login_block';
     $this->digest->set('display_block', $valid_block);
     $block = $this->digest->getDisplayBlock();
-    $this->assertEqual($valid_block, $block->getPluginId());
+    $this->assertEquals($valid_block, $block->getPluginId());
 
   }
 
