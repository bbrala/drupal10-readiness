modules/contrib/date_recur/date_recur.api.php
modules/contrib/date_recur/src/DateRecurNonRecurringHelper.php
modules/contrib/date_recur/src/Plugin/DateRecurInterpreterPluginBase.php
modules/contrib/date_recur/tests/src/Functional/DateRecurInterpreterTest.php
modules/contrib/date_recur/tests/modules/date_recur_basic_widget_test/date_recur_basic_widget_test.module
modules/contrib/date_recur/tests/src/Unit/DateRecurDateRangeUnitTest.php
modules/contrib/date_recur/date_recur.install
modules/contrib/date_recur/tests/modules/date_recur_entity_test/src/Entity/DrEntityTest.php
modules/contrib/date_recur/src/Plugin/DateRecurInterpreterPluginCollection.php
modules/contrib/date_recur/src/Plugin/DateRecurInterpreterPluginInterface.php
modules/contrib/date_recur/src/Plugin/Field/DateRecurDateTimeComputed.php
modules/contrib/date_recur/src/Plugin/Field/DateRecurOccurrencesComputed.php
modules/contrib/date_recur/tests/src/Unit/DateRecurNonRecurringHelperUnitTest.php
modules/contrib/date_recur/tests/modules/date_recur_entity_test/src/Entity/DrEntityTestRev.php
modules/contrib/date_recur/src/DateRecurOccurrences.php
modules/contrib/date_recur/src/Plugin/Field/FieldFormatter/DateRecurBasicFormatter.php
modules/contrib/date_recur/tests/modules/date_recur_entity_test/src/Entity/DrEntityTestSingleCardinality.php
modules/contrib/date_recur/tests/modules/date_recur_interpreter_test/src/Plugin/DateRecurInterpreter/TestInterpreter.php
modules/contrib/date_recur/tests/src/Unit/DateRecurPartGridUnitTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurBaseFieldTest.php
modules/contrib/date_recur/tests/modules/date_recur_subfield/date_recur_subfield.module
modules/contrib/date_recur/tests/modules/date_recur_subfield/src/Plugin/Field/FieldType/DateRecurSubItem.php
modules/contrib/date_recur/tests/src/Functional/DateRecurBasicWidgetTest.php
modules/contrib/date_recur/tests/src/Unit/DateRecurRlHelperUnitTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurBasicFormatterTest.php
modules/contrib/date_recur/date_recur.module
modules/contrib/date_recur/src/Annotation/DateRecurInterpreter.php
modules/contrib/date_recur/src/DateRange.php
modules/contrib/date_recur/tests/src/Unit/DateRecurRlInterpretationUnitTest.php
modules/contrib/date_recur/src/DateRecurCachedHooks.php
modules/contrib/date_recur/src/DateRecurPartGrid.php
modules/contrib/date_recur/src/DateRecurGranularityMap.php
modules/contrib/date_recur/src/DateRecurHelper.php
modules/contrib/date_recur/src/DateRecurRruleMap.php
modules/contrib/date_recur/src/Plugin/Field/FieldType/DateRecurFieldItemList.php
modules/contrib/date_recur/src/DateRecurRuleInterface.php
modules/contrib/date_recur/src/DateRecurUtility.php
modules/contrib/date_recur/src/DateRecurHelperInterface.php
modules/contrib/date_recur/tests/src/Functional/DateRecurFieldSettingsTest.php
modules/contrib/date_recur/src/DateRecurViewsHooks.php
modules/contrib/date_recur/tests/src/Unit/DateRecurRruleUnitTest.php
modules/contrib/date_recur/src/Plugin/Field/FieldType/DateRecurItem.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurDefaultInterpreterTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurFieldItemDefaultValuesTest.php
modules/contrib/date_recur/src/Entity/DateRecurInterpreter.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurFieldItemListTest.php
modules/contrib/date_recur/src/Entity/DateRecurInterpreterInterface.php
modules/contrib/date_recur/src/Entity/Handlers/DateRecurOccurrenceListBuilder.php
modules/contrib/date_recur/src/Event/DateRecurEvents.php
modules/contrib/date_recur/src/Event/DateRecurValueEvent.php
modules/contrib/date_recur/src/Exception/DateRecurHelperArgumentException.php
modules/contrib/date_recur/src/Exception/DateRecurRulePartIncompatible.php
modules/contrib/date_recur/src/Form/DateRecurInterpreterAddForm.php
modules/contrib/date_recur/src/Plugin/Field/FieldWidget/DateRecurBasicWidget.php
modules/contrib/date_recur/src/Form/DateRecurInterpreterDeleteForm.php
modules/contrib/date_recur/src/Form/DateRecurInterpreterEditForm.php
modules/contrib/date_recur/src/Plugin/DateRecurInterpreter/RlInterpreter.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurFieldItemTest.php
modules/contrib/date_recur/src/Plugin/Validation/Constraint/DateRecurRruleConstraint.php
modules/contrib/date_recur/src/Plugin/Validation/Constraint/DateRecurRruleConstraintValidator.php
modules/contrib/date_recur/src/Plugin/Validation/Constraint/DateRecurRulePartConstraint.php
modules/contrib/date_recur/src/Plugin/Validation/Constraint/DateRecurRulePartConstraintValidator.php
modules/contrib/date_recur/src/Plugin/DateRecurInterpreterManager.php
modules/contrib/date_recur/src/Plugin/DateRecurInterpreterManagerInterface.php
modules/contrib/date_recur/src/Plugin/Validation/Constraint/DateRecurTimeZoneConstraint.php
modules/contrib/date_recur/src/Plugin/Validation/Constraint/DateRecurTimeZoneConstraintValidator.php
modules/contrib/date_recur/src/Plugin/views/field/DateRecurDate.php
modules/contrib/date_recur/src/Plugin/views/filter/DateRecurFilter.php
modules/contrib/date_recur/src/Rl/RlDateRecurRule.php
modules/contrib/date_recur/src/Rl/RlHelper.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurFieldTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurOccurrenceTableAttachedTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurOccurrenceTableSchemaTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurOccurrenceTableTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurPartGridTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurSubFieldTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurTokenTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurUtilityTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurViewsFieldTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php
modules/contrib/date_recur/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php

8 files with changes
====================

1) modules/contrib/date_recur/date_recur.api.php:8

    ---------- begin diff ----------
@@ @@

 declare(strict_types = 1);

+use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+use Drupal\date_recur\Event\DateRecurValueEvent;
+use Drupal\date_recur\Event\DateRecurEvents;
+
 /**
  * @file
  * Contains hooks and event examples for date_recur module.
@@ @@
  * ```
  * </code>
  */
-class MyEventSubscriber implements \Symfony\Component\EventDispatcher\EventSubscriberInterface {
+class MyEventSubscriber implements EventSubscriberInterface {

   /**
    * Dispatched after an entity containing a date recur field is saved.
@@ @@
    * @see \Drupal\date_recur\DateRecurOccurrences::onSave
    *   Live example.
    */
-  public function onSave(\Drupal\date_recur\Event\DateRecurValueEvent $event): void {}
+  public function onSave(DateRecurValueEvent $event): void {}

   /**
    * Dispatched when an entity containing date recur fields is almost deleted.
@@ @@
    * @see \Drupal\date_recur\DateRecurOccurrences::onEntityDelete
    *   Live example.
    */
-  public function onEntityDelete(\Drupal\date_recur\Event\DateRecurValueEvent $event): void {}
+  public function onEntityDelete(DateRecurValueEvent $event): void {}

   /**
    * Dispatched when an entity revision is deleted.
@@ @@
    * @see \Drupal\date_recur\DateRecurOccurrences::onEntityRevisionDelete
    *   Live example.
    */
-  public function onEntityRevisionDelete(\Drupal\date_recur\Event\DateRecurValueEvent $event): void {}
+  public function onEntityRevisionDelete(DateRecurValueEvent $event): void {}

   /**
    * {@inheritdoc}
@@ @@
    */
   public static function getSubscribedEvents(): array {
     return [
-      \Drupal\date_recur\Event\DateRecurEvents::FIELD_VALUE_SAVE => ['onSave'],
-      \Drupal\date_recur\Event\DateRecurEvents::FIELD_ENTITY_DELETE => ['onEntityDelete'],
-      \Drupal\date_recur\Event\DateRecurEvents::FIELD_REVISION_DELETE => ['onEntityRevisionDelete'],
+      DateRecurEvents::FIELD_VALUE_SAVE => ['onSave'],
+      DateRecurEvents::FIELD_ENTITY_DELETE => ['onEntityDelete'],
+      DateRecurEvents::FIELD_REVISION_DELETE => ['onEntityRevisionDelete'],
     ];
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/date_recur/src/Event/DateRecurValueEvent.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\date_recur\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\date_recur\Plugin\Field\FieldType\DateRecurFieldItemList;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Event dispatched when an entity containing a date recur field is modified.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/date_recur/src/Plugin/Field/FieldType/DateRecurFieldItemList.php:33

    ---------- begin diff ----------
@@ @@
   public function postSave($update): bool {
     parent::postSave($update);
     $event = new DateRecurValueEvent($this, !$update);
-    $this->getDispatcher()->dispatch(DateRecurEvents::FIELD_VALUE_SAVE, $event);
+    $this->getDispatcher()->dispatch($event, DateRecurEvents::FIELD_VALUE_SAVE);
     return FALSE;
   }

@@ @@
   public function delete(): void {
     parent::delete();
     $event = new DateRecurValueEvent($this, FALSE);
-    $this->getDispatcher()->dispatch(DateRecurEvents::FIELD_ENTITY_DELETE, $event);
+    $this->getDispatcher()->dispatch($event, DateRecurEvents::FIELD_ENTITY_DELETE);
   }

   /**
@@ @@
   public function deleteRevision(): void {
     parent::deleteRevision();
     $event = new DateRecurValueEvent($this, FALSE);
-    $this->getDispatcher()->dispatch(DateRecurEvents::FIELD_REVISION_DELETE, $event);
+    $this->getDispatcher()->dispatch($event, DateRecurEvents::FIELD_REVISION_DELETE);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/date_recur/tests/src/Kernel/DateRecurViewsOccurrenceFilterTest.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
     $this->installEntitySchema('dr_entity_test');
     ViewTestData::createTestViews(get_class($this), ['date_recur_views_test']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/date_recur/tests/src/Kernel/DateRecurViewsOccurrenceFilterAttachedTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);

     // This is the name of the attached field.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/date_recur/tests/src/Kernel/DateRecurViewsFieldTest.php:63

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
     $this->installEntitySchema('dr_entity_test');
     ViewTestData::createTestViews(get_class($this), ['date_recur_views_test']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/date_recur/tests/src/Kernel/DateRecurViewsFieldAttachedTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);

     // This is the name of the attached field.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/date_recur/tests/src/Kernel/DateRecurFieldItemTest.php:253

    ---------- begin diff ----------
@@ @@
   public function testGenerateSampleValue() {
     $entity = DrEntityTest::create();
     $entity->dr->generateSampleItems();
-    $this->assertRegExp('/^FREQ=DAILY;COUNT=\d{1,2}$/', $entity->dr->rrule);
+    $this->assertMatchesRegularExpression('/^FREQ=DAILY;COUNT=\d{1,2}$/', $entity->dr->rrule);
     $this->assertFalse($entity->dr->infinite);
     $this->assertTrue(in_array($entity->dr->timezone, timezone_identifiers_list(), TRUE));
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * RenameMethodRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

