modules/contrib/daemons/daemons.install
modules/contrib/daemons/src/Command/RunCommand.php
modules/contrib/daemons/daemons.module
modules/contrib/daemons/modules/daemons_example/daemons_example.module
modules/contrib/daemons/modules/daemons_example/src/Plugin/Daemons/ExampleDaemon.php
modules/contrib/daemons/src/Command/StopCommand.php
modules/contrib/daemons/src/Annotation/Daemon.php
modules/contrib/daemons/src/Command/GenerateCommand.php
modules/contrib/daemons/src/Controller/DaemonController.php
modules/contrib/daemons/src/Controller/DaemonsListController.php
modules/contrib/daemons/src/Command/ListCommand.php
modules/contrib/daemons/src/DaemonInterface.php
modules/contrib/daemons/src/DaemonManager.php
modules/contrib/daemons/src/Command/RestartCommand.php
modules/contrib/daemons/src/DaemonPluginBase.php
modules/contrib/daemons/src/Form/DeamonsSettingsForm.php
modules/contrib/daemons/src/Generator/DaemonGenerator.php
modules/contrib/daemons/src/PluginDaemonManager.php

5 files with changes
====================

1) modules/contrib/daemons/src/Command/RestartCommand.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $daemonId = $input->getArgument('daemon-id');
     $daemonManager = $this->daemonManager;

@@ @@
         )
       );
     }
+    return 0;
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/daemons/src/Command/ListCommand.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $plugin_service = $this->pluginDaemonManager;
     foreach ($plugin_service->getDefinitions() as $plugin_id => $plugin) {
       $instance = $plugin_service->createInstance($plugin_id);
@@ @@
       ->setHeaders(['Id', 'Name', 'Status', 'PID', 'Last run'])
       ->setRows($rows);
     $table->render();
+    return 0;
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/daemons/src/Command/GenerateCommand.php:146

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     // @see use Drupal\Console\Command\Shared\ConfirmationTrait::confirmOperation
     if (!$this->confirmOperation()) {
       return 1;
@@ @@
     $this->chainQueue->addCommand('cache:rebuild', ['cache' => 'discovery']);

     $this->getIo()->info($this->trans('commands.daemons.generate.messages.success'));
+    return 0;
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/daemons/src/Command/StopCommand.php:59

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $daemonId = $input->getArgument('daemon-id');

     try {
@@ @@
         )
       );
     }
+    return 0;
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/daemons/src/Command/RunCommand.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $daemonId = $input->getArgument('daemon-id');
     $instance = $this->pluginDaemonManager->createInstance($daemonId);
     $daemonManager = $this->daemonManager;
@@ @@
       $instance->execute($loop);
     }
     $loop->run();
+    return 0;
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

