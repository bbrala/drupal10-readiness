modules/contrib/slack/modules/slack_chatapi/slack_chatapi.module
modules/contrib/slack/modules/slack_userapi/src/Plugin/SlackApi/UserApiPlugin.php
modules/contrib/slack/src/Controller/SlackRequestContentController.php
modules/contrib/slack/src/Entity/SlackSender.php
modules/contrib/slack/modules/slack_chatapi/src/Core/ChatApi/ChatApiBase.php
modules/contrib/slack/src/Form/SlackSenderSettingsForm.php
modules/contrib/slack/src/SlackRequestContentTypeHtmlRouteProvider.php
modules/contrib/slack/modules/slack_chatapi/src/Plugin/SlackApi/ChatApiPlugin.php
modules/contrib/slack/src/Form/WebhooksForm.php
modules/contrib/slack/modules/slack_conversationsapi/slack_conversationsapi.module
modules/contrib/slack/modules/slack_conversationsapi/src/Core/ConversationsApi/ConversationsApiBase.php
modules/contrib/slack/modules/slack_conversationsapi/src/Plugin/SlackApi/ConversationsApiPlugin.php
modules/contrib/slack/modules/slack_rules/src/Plugin/RulesAction/SlackRulesSendMessage.php
modules/contrib/slack/src/SlackRequestContentTypeListBuilder.php
modules/contrib/slack/modules/slack_webapi/slack_webapi.module
modules/contrib/slack/modules/slack_webapi/src/Core/WebApi/WebApiBase.php
modules/contrib/slack/modules/slack_webapi/src/Plugin/SlackApi/WebApiPlugin.php
modules/contrib/slack/modules/slack_rules/src/ProxyClass/UninstallValidator/SlackRulesUninstallValidator.php
modules/contrib/slack/slack.install
modules/contrib/slack/src/SlackSenderAccessControlHandler.php
modules/contrib/slack/modules/slack_rules/src/UninstallValidator/SlackRulesUninstallValidator.php
modules/contrib/slack/slack.module
modules/contrib/slack/src/SlackSenderHtmlRouteProvider.php
modules/contrib/slack/slack_app.page.inc
modules/contrib/slack/slack_request_content.page.inc
modules/contrib/slack/src/Service/SlackFormMethodsBuilder.php
modules/contrib/slack/slack_sender.page.inc
modules/contrib/slack/src/Controller/SlackAppController.php
modules/contrib/slack/src/Entity/SlackSenderInterface.php
modules/contrib/slack/src/SlackSenderListBuilder.php
modules/contrib/slack/src/Entity/SlackSenderViewsData.php
modules/contrib/slack/modules/slack_userapi/slack_userapi.module
modules/contrib/slack/modules/slack_userapi/src/Core/UserApi/UserApiBase.php
modules/contrib/slack/src/Form/SendTestRequestForm.php
modules/contrib/slack/src/Service/SlackSendRequest.php
modules/contrib/slack/src/Form/SlackAppDeleteForm.php
modules/contrib/slack/src/Form/SlackAppForm.php
modules/contrib/slack/src/SlackApiIntegration.php
modules/contrib/slack/src/Core/Annotation/SlackApi.php
modules/contrib/slack/src/Core/EventsApi/EventsApiBase.php
modules/contrib/slack/src/Core/SlackApi.php
modules/contrib/slack/src/Form/SlackAppRevisionDeleteForm.php
modules/contrib/slack/src/Core/SlackApi/SlackApiBase.php
modules/contrib/slack/src/Core/SlackApi/SlackApiBaseInterface.php
modules/contrib/slack/src/Core/SlackApi/SlackApiManager.php
modules/contrib/slack/src/SlackApiIntegrationBase.php
modules/contrib/slack/src/SlackApiIntegrationInterface.php
modules/contrib/slack/src/SlackAppAccessControlHandler.php
modules/contrib/slack/src/SlackAppHtmlRouteProvider.php
modules/contrib/slack/src/Core/SlackApi/SlackApiManagerInterface.php
modules/contrib/slack/src/Entity/SlackApp.php
modules/contrib/slack/src/Form/SlackAppRevisionRevertForm.php
modules/contrib/slack/src/SlackAppListBuilder.php
modules/contrib/slack/src/SlackAppStorage.php
modules/contrib/slack/src/Form/SlackAppRevisionRevertTranslationForm.php
modules/contrib/slack/src/Form/SlackAppSettingsForm.php
modules/contrib/slack/src/Form/SlackRequestContentDeleteForm.php
modules/contrib/slack/src/Form/SlackRequestContentForm.php
modules/contrib/slack/src/SlackAppStorageInterface.php
modules/contrib/slack/src/SlackAppTranslationHandler.php
modules/contrib/slack/src/SlackRequestContentAccessControlHandler.php
modules/contrib/slack/src/Form/SlackRequestContentRevisionDeleteForm.php
modules/contrib/slack/src/SlackRequestContentHtmlRouteProvider.php
modules/contrib/slack/src/Form/SlackRequestContentRevisionRevertForm.php
modules/contrib/slack/src/SlackRequestContentListBuilder.php
modules/contrib/slack/src/Entity/SlackAppInterface.php
modules/contrib/slack/src/Entity/SlackAppViewsData.php
modules/contrib/slack/src/SlackRequestContentPermissions.php
modules/contrib/slack/src/Entity/SlackRequestContent.php
modules/contrib/slack/src/SlackRequestContentStorage.php
modules/contrib/slack/src/Form/SlackRequestContentRevisionRevertTranslationForm.php
modules/contrib/slack/src/SlackRequestContentStorageInterface.php
modules/contrib/slack/src/SlackRequestContentTranslationHandler.php
modules/contrib/slack/src/Form/SlackRequestContentSettingsForm.php
modules/contrib/slack/src/Form/SlackRequestContentTypeDeleteForm.php
modules/contrib/slack/src/Form/SlackRequestContentTypeForm.php
modules/contrib/slack/src/Entity/SlackRequestContentInterface.php
modules/contrib/slack/src/Form/SlackSenderDeleteForm.php
modules/contrib/slack/src/Form/SlackSenderForm.php
modules/contrib/slack/src/Entity/SlackRequestContentType.php
modules/contrib/slack/src/Entity/SlackRequestContentTypeInterface.php
modules/contrib/slack/src/Entity/SlackRequestContentViewsData.php

10 files with changes
=====================

1) modules/contrib/slack/modules/slack_rules/src/ProxyClass/UninstallValidator/SlackRulesUninstallValidator.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\slack_rules\ProxyClass\UninstallValidator {

+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\slack_rules\UninstallValidator\SlackRulesUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class SlackRulesUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class SlackRulesUninstallValidator implements ModuleUninstallValidatorInterface
     {

-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;

         /**
          * The id of the original proxied service.
@@ @@
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ @@
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/slack/src/Controller/SlackAppController.php:123

    ---------- begin diff ----------
@@ @@
           ]));
         }
         else {
-          $link = $slack_app->link($date);
+          $link = $slack_app->toLink($date)->toString();
         }

         $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/slack/src/Service/SlackSendRequest.php:63

    ---------- begin diff ----------
@@ @@
       $response = $this->sendHttpRequest(self::FORM_URL_ENCODED, $webhook_url, $sending_data, $type, NULL, FALSE);
       $logger->info('Message was successfully sent!');
       return $response;
-    } catch (\GuzzleHttp\Exception\ServerException $e) {
+    } catch (ServerException $e) {
       $logger->error('Server error! It may appear if you try to use unexisting chatroom.');
       watchdog_exception('slack', $e);
       return FALSE;
-    } catch (\GuzzleHttp\Exception\ConnectException $e) {
+    } catch (ConnectException $e) {
       $logger->error('Connection error! Something wrong with your connection. Message was\'nt sent.');
       watchdog_exception('slack', $e);
       return FALSE;
-    } catch (\GuzzleHttp\Exception\RequestException $e) {
+    } catch (RequestException $e) {
       $logger->error('Request error! It may appear if you entered the invalid Webhook value.');
       watchdog_exception('slack', $e);
       return FALSE;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/slack/src/Form/SlackRequestContentRevisionRevertTranslationForm.php:88

    ---------- begin diff ----------
@@ @@

     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $latest_revision_translation;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/slack/src/Form/SlackRequestContentRevisionRevertForm.php:128

    ---------- begin diff ----------
@@ @@
   protected function prepareRevertedRevision(SlackRequestContentInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $revision;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/slack/src/Form/SlackRequestContentRevisionDeleteForm.php:56

    ---------- begin diff ----------
@@ @@
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }

@@ @@
     $this->SlackRequestContentStorage->deleteRevision($this->revision->getRevisionId());

     $this->logger('content')->notice('Slack request content: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of Slack request content %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of Slack request content %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.slack_request_content.canonical',
        ['slack_request_content' => $this->revision->id()]
    ----------- end diff -----------

Applied rules:
 * FormatDateRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/slack/src/Form/SlackAppRevisionRevertTranslationForm.php:88

    ---------- begin diff ----------
@@ @@

     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $latest_revision_translation;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/slack/src/Form/SlackAppRevisionRevertForm.php:128

    ---------- begin diff ----------
@@ @@
   protected function prepareRevertedRevision(SlackAppInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $revision;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/slack/src/Form/SlackAppRevisionDeleteForm.php:56

    ---------- begin diff ----------
@@ @@
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }

@@ @@
     $this->SlackAppStorage->deleteRevision($this->revision->getRevisionId());

     $this->logger('content')->notice('Slack App: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of Slack App %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of Slack App %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.slack_app.canonical',
        ['slack_app' => $this->revision->id()]
    ----------- end diff -----------

Applied rules:
 * FormatDateRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/slack/src/Controller/SlackRequestContentController.php:123

    ---------- begin diff ----------
@@ @@
           ]));
         }
         else {
-          $link = $slack_request_content->link($date);
+          $link = $slack_request_content->toLink($date)->toString();
         }

         $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 10 files have been changed by Rector                                      

