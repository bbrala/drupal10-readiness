diff --git a/micro_taxonomy.post_update.php b/micro_taxonomy.post_update.php
index 7394595..687717a 100644
--- a/micro_taxonomy.post_update.php
+++ b/micro_taxonomy.post_update.php
@@ -26,7 +26,7 @@ function micro_taxonomy_post_update_install_view_site_taxonomy_term() {
     return;
   }
 
-  $config_path = drupal_get_path('module', 'micro_taxonomy') . '/' . InstallStorage::CONFIG_OPTIONAL_DIRECTORY;
+  $config_path = \Drupal::service('extension.list.module')->getPath('micro_taxonomy') . '/' . InstallStorage::CONFIG_OPTIONAL_DIRECTORY;
   $config_source = new FileStorage($config_path);
   \Drupal::service('config.installer')->installOptionalConfig($config_source);
 }
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 9e456f2..8240d55 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -39,7 +39,7 @@ class LoadTest extends MicroSiteBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -50,7 +50,7 @@ class LoadTest extends MicroSiteBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
