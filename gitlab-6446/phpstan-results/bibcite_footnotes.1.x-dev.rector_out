modules/contrib/bibcite_footnotes/bibcite_footnotes.module
modules/contrib/bibcite_footnotes/src/CitationTools.php
modules/contrib/bibcite_footnotes/src/Plugin/BibCiteProcessor/CiteprocPhpInline.php
modules/contrib/bibcite_footnotes/src/Plugin/CKEditorPlugin/ReferenceFootnotes.php
modules/contrib/bibcite_footnotes/src/Plugin/Filter/ReferenceFootnotesFilter.php

2 files with changes
====================

1) modules/contrib/bibcite_footnotes/src/Plugin/CKEditorPlugin/ReferenceFootnotes.php:32

    ---------- begin diff ----------
@@ @@
     return [
       'reference_footnotes' => [
         'label' => t('Reference Footnotes'),
-        'image' => drupal_get_path('module', 'bibcite_footnotes') . '/js/plugins/reference_footnotes/images/icon.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('bibcite_footnotes') . '/js/plugins/reference_footnotes/images/icon.png',
       ],
     ];
   }
@@ @@
   public function getFile() {
     // Make sure that the path to the plugin.js matches the file structure of
     // the CKEditor plugin you are implementing.
-    return drupal_get_path('module', 'bibcite_footnotes') . '/js/plugins/reference_footnotes/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('bibcite_footnotes') . '/js/plugins/reference_footnotes/plugin.js';
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bibcite_footnotes/bibcite_footnotes.module:24

    ---------- begin diff ----------
@@ @@
     ],
     'bibcite_footnote_list' => [
       'render element' => 'footnotes',
-      'path' => drupal_get_path('module', 'bibcite_footnotes') . '/templates',
+      'path' => \Drupal::service('extension.list.module')->getPath('bibcite_footnotes') . '/templates',
       'template' => 'bibcite-footnote-list',
       'variables' => [
         'notes' => [],
@@ @@
         $build[] = $citation_build;
       }

-      $render = render($build);
-      $item['sort'] = trim(strip_tags(render($citation_build)));
+      $render = \Drupal::service('renderer')->render($build);
+      $item['sort'] = trim(strip_tags(\Drupal::service('renderer')->render($citation_build)));
     }

 //    $item['#markup'] = $render;
@@ @@
     $class .= '-inline';
   }

-  $title = trim(strip_tags(render($citation_data)));
+  $title = trim(strip_tags(\Drupal::service('renderer')->render($citation_data)));
   $url = Url::fromUserInput('#' . $fn['fn_id'], ['attributes' => ['id' => $fn['ref_id'], 'class' => $class, 'title' => $title]]);


@@ @@

   $data = $serializer->normalize($entity, 'csl');
   $build = ['#theme' => 'bibcite_citation', '#data' => $data];
-  $citation_text = trim(strip_tags(render($build)));
+  $citation_text = trim(strip_tags(\Drupal::service('renderer')->render($build)));
   // Attempt to match up pre-saved entities with the eventual saved ones.
   $citation_key = $entity->id->first()->getValue()['value'];
   return [$citation_text, $citation_key];
@@ @@
         $items[] = [
           'orig_index' => $index,
           'orig_element' => $element,
-          'rendered' => trim(strip_tags(render($renderable))),
+          'rendered' => trim(strip_tags(\Drupal::service('renderer')->render($renderable))),
         ];
       }
     }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * RenderRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

