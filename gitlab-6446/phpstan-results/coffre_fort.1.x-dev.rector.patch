diff --git a/src/Entity/CoffreFortEntity.php b/src/Entity/CoffreFortEntity.php
index 821d6dc..2d80a4c 100644
--- a/src/Entity/CoffreFortEntity.php
+++ b/src/Entity/CoffreFortEntity.php
@@ -376,7 +376,7 @@ class CoffreFortEntity extends ConfigEntityBase implements CoffreFortEntityInter
   /**
    * {@inheritdoc}
    */
-  public static function postLoad(Drupal\Core\Entity\EntityStorageInterface $storage, array &$entities)
+  public static function postLoad(EntityStorageInterface $storage, array &$entities)
   {
     foreach ($entities as $entity) {
       $entity->tryUnlockByProvider();
diff --git a/src/Plugin/CoffreFort/SecretProvider/PasswordSecretProvider.php b/src/Plugin/CoffreFort/SecretProvider/PasswordSecretProvider.php
index 00c8501..fb55417 100644
--- a/src/Plugin/CoffreFort/SecretProvider/PasswordSecretProvider.php
+++ b/src/Plugin/CoffreFort/SecretProvider/PasswordSecretProvider.php
@@ -3,6 +3,7 @@
 namespace Drupal\coffre_fort\Plugin\CoffreFort\SecretProvider;
 
 
+use Drupal\Core\State\State;
 use Drupal;
 use Drupal\coffre_fort\CoffreFortEncryption;
 use Drupal\coffre_fort\Entity\CoffreFortEntity;
@@ -39,7 +40,7 @@ class PasswordSecretProvider extends UserSecretProviderBase
   /**
    * {@inheritdoc}
    */
-  public function __construct(array $configuration, $plugin_id, $plugin_definition, LoggerInterface $logger, TimeInterface $datetime, CoffreFortEncryption $encryption, Drupal\Core\State\State $state)
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, LoggerInterface $logger, TimeInterface $datetime, CoffreFortEncryption $encryption, State $state)
   {
     parent::__construct($configuration, $plugin_id, $plugin_definition, $logger);
     $this->datatime = $datetime;
@@ -120,7 +121,7 @@ class PasswordSecretProvider extends UserSecretProviderBase
       $value = base64_encode($secret);
       $expire = $this->datatime->getCurrentTime() + 60 * 60 * 24; // Expire in 24h
       $response = new RedirectResponse($entity->toUrl('edit-form')->toString());
-      $response->headers->setCookie(new Cookie($name, $value, $expire));
+      $response->headers->setCookie(Cookie::create($name, $value, $expire));
       $form_state->setResponse($response);
     }
   }
@@ -183,7 +184,7 @@ class PasswordSecretProvider extends UserSecretProviderBase
     $value = base64_encode($secret);
     $expire = $this->datatime->getCurrentTime() + 60 * 60 * 24; // Expire in 24h
     $response = new RedirectResponse($entity->toUrl('edit-form')->toString());
-    $response->headers->setCookie(new Cookie($name, $value, $expire));
+    $response->headers->setCookie(Cookie::create($name, $value, $expire));
     $form_state->setResponse($response);
   }
 
@@ -212,7 +213,7 @@ class PasswordSecretProvider extends UserSecretProviderBase
     $name = 'DRUPAL:CFTOKEN:' . $entity->uuid();
     $url = new Url('entity.coffre_fort.collection');
     $response = new RedirectResponse($url->toString());
-    $response->headers->setCookie(new Cookie($name, NULL, 1));
+    $response->headers->setCookie(Cookie::create($name, NULL, 1));
     $form_state->setResponse($response);
   }
 
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 5844aa3..2d79816 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -31,7 +31,7 @@ class LoadTest extends BrowserTestBase
   /**
    * {@inheritdoc}
    */
-  protected function setUp()
+  protected function setUp(): void
   {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
