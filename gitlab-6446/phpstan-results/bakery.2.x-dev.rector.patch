diff --git a/src/BakeryService.php b/src/BakeryService.php
index cc4c17d..ebeb074 100644
--- a/src/BakeryService.php
+++ b/src/BakeryService.php
@@ -116,7 +116,7 @@ class BakeryService {
     $account = User::create([
       'name' => $name,
       // 'mail' => 'email',
-      'pass' => user_password(),
+      'pass' => \Drupal::service('password_generator')->generate(),
       // This username must be unique and accept only a-Z,0-9, - _ @ .
       'init' => 'bakery_temp/' . mt_rand(),
       'langcode', $language,
diff --git a/src/Controller/ChildDeprecatedController.php b/src/Controller/ChildDeprecatedController.php
index f9f60cb..026784e 100644
--- a/src/Controller/ChildDeprecatedController.php
+++ b/src/Controller/ChildDeprecatedController.php
@@ -88,7 +88,7 @@ class ChildDeprecatedController extends ControllerBase {
           $language = $this->languageManager()->getCurrentLanguage()->getId();
           $account = User::create();
           // Mandatory settings.
-          $account->setPassword(user_password());
+          $account->setPassword(\Drupal::service('password_generator')->generate());
           $account->enforceIsNew();
           $account->setEmail($cookie['data']['mail']);
           // This username must be unique and accept only a-Z,0-9, - _ @ .
diff --git a/src/Controller/MainDeprecatedController.php b/src/Controller/MainDeprecatedController.php
index 642a8e8..10a3900 100644
--- a/src/Controller/MainDeprecatedController.php
+++ b/src/Controller/MainDeprecatedController.php
@@ -86,7 +86,7 @@ class MainDeprecatedController extends ControllerBase {
         else {
           // Create user.
           if (!$cookie['data']['pass']) {
-            $pass = user_password();
+            $pass = \Drupal::service('password_generator')->generate();
           }
           else {
             $pass = $cookie['data']['pass'];
diff --git a/src/EventSubscriber/BootSubscriber.php b/src/EventSubscriber/BootSubscriber.php
index f8aa7c5..f337443 100644
--- a/src/EventSubscriber/BootSubscriber.php
+++ b/src/EventSubscriber/BootSubscriber.php
@@ -6,7 +6,7 @@ namespace Drupal\bakery\EventSubscriber;
  * @file
  * For Boot event subscribe.
  */
-
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\bakery\BakeryService;
 use Drupal\bakery\Cookies\ChocolateChip;
 use Drupal\bakery\Exception\MissingKeyException;
@@ -20,7 +20,6 @@ use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -84,7 +83,7 @@ class BootSubscriber implements EventSubscriberInterface {
   /**
    * On boot event we need to test the cookie.
    */
-  public function onEvent(GetResponseEvent $event) {
+  public function onEvent(RequestEvent $event) {
     try {
       $cookie = $this->kitchen->taste(Kitchen::CHOCOLATE_CHIP);
     }
@@ -133,7 +132,7 @@ class BootSubscriber implements EventSubscriberInterface {
     }
   }
 
-  private function somethingAnonymous(GetResponseEvent $event, array $cookie) {
+  private function somethingAnonymous(RequestEvent $event, array $cookie) {
     // User is anonymous. If they do not have an account we'll create one by
     // requesting their information from the master site. If they do have an
     // account we may need to correct some disparant information.
@@ -247,7 +246,7 @@ class BootSubscriber implements EventSubscriberInterface {
     return FALSE;
   }
 
-  private function bootstrapAccount(GetResponseEvent $event, array $cookie) {
+  private function bootstrapAccount(RequestEvent $event, array $cookie) {
     $checks = TRUE;
     /** @var int $mail_count */
     $mail_count = $this->userStorage->getQuery()
diff --git a/tests/src/Functional/BakerySiteTestBase.php b/tests/src/Functional/BakerySiteTestBase.php
index 9f91d3d..182c0b1 100644
--- a/tests/src/Functional/BakerySiteTestBase.php
+++ b/tests/src/Functional/BakerySiteTestBase.php
@@ -12,7 +12,7 @@ class BakerySiteTestBase extends BrowserTestBase {
 
   private $domain;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->domain = preg_replace('/^[^.]+/', '', rtrim($this->baseUrl, '/'));
     $this->config('bakery.settings')
diff --git a/tests/src/Functional/ChildSiteTestBase.php b/tests/src/Functional/ChildSiteTestBase.php
index 3bb2955..f945e67 100644
--- a/tests/src/Functional/ChildSiteTestBase.php
+++ b/tests/src/Functional/ChildSiteTestBase.php
@@ -7,7 +7,7 @@ use Drupal\Core\Url;
 
 class ChildSiteTestBase extends BakerySiteTestBase {
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->config('bakery.settings')
       ->set('bakery_is_master', 0)
diff --git a/tests/src/Functional/DynamicRoutingTest.php b/tests/src/Functional/DynamicRoutingTest.php
index d16f917..000f738 100644
--- a/tests/src/Functional/DynamicRoutingTest.php
+++ b/tests/src/Functional/DynamicRoutingTest.php
@@ -14,7 +14,7 @@ class DynamicRoutingTest extends BakerySiteTestBase {
    */
   private $routeProvider;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->routeProvider = $this->container->get('router.route_provider');
   }
diff --git a/tests/src/Functional/MainSiteCookiesTest.php b/tests/src/Functional/MainSiteCookiesTest.php
index afa9c99..120a7e5 100644
--- a/tests/src/Functional/MainSiteCookiesTest.php
+++ b/tests/src/Functional/MainSiteCookiesTest.php
@@ -51,7 +51,7 @@ class MainSiteCookiesTest extends MainSiteTestBase {
     ], 'Log in');
     $account->sessionId = $this->getSession()->getCookie(\Drupal::service('session_configuration')->getOptions(\Drupal::request())['name']);
     $this->assertFalse($this->drupalUserIsLoggedIn($account), new FormattableMarkup('User %name successfully logged in.', ['%name' => $account->getAccountName()]));
-    $assert_session->assert($this->getSession()->getCookie($cookie_name) === null, 'Cookie is set but should not be.');
+    $this->assertTrue($this->getSession()->getCookie($cookie_name) === null, 'Cookie is set but should not be.');
 
     $this->drupalLogin($account);
     $assert_session->cookieExists($cookie_name);
@@ -71,7 +71,7 @@ class MainSiteCookiesTest extends MainSiteTestBase {
     ], 'Log in');
     $account->sessionId = $this->getSession()->getCookie(\Drupal::service('session_configuration')->getOptions(\Drupal::request())['name']);
     $this->assertFalse($this->drupalUserIsLoggedIn($account), new FormattableMarkup('User %name successfully logged in.', ['%name' => $account->getAccountName()]));
-    $assert_session->assert($this->getSession()->getCookie($cookie_name) === null, 'Cookie is set but should not be.');
+    $this->assertTrue($this->getSession()->getCookie($cookie_name) === null, 'Cookie is set but should not be.');
 
     $this->drupalGet(Url::fromRoute('user.login', [], ['query' => ['bd' => urlencode('https://www.google.org/')]]));
     $this->submitForm([
diff --git a/tests/src/Functional/MainSiteTestBase.php b/tests/src/Functional/MainSiteTestBase.php
index a7ca24e..a7d2fdd 100644
--- a/tests/src/Functional/MainSiteTestBase.php
+++ b/tests/src/Functional/MainSiteTestBase.php
@@ -4,7 +4,7 @@ namespace Drupal\Tests\bakery\Functional;
 
 class MainSiteTestBase extends BakerySiteTestBase {
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->config('bakery.settings')->set('bakery_is_master', 1)->save();
     $this->container->get('router.builder')->rebuild();
diff --git a/tests/src/Unit/BakeryServiceTest.php b/tests/src/Unit/BakeryServiceTest.php
index 8439caf..25106c4 100644
--- a/tests/src/Unit/BakeryServiceTest.php
+++ b/tests/src/Unit/BakeryServiceTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\bakery\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\Config;
 use Drupal\Tests\UnitTestCase;
 
@@ -10,7 +11,8 @@ use Drupal\Tests\UnitTestCase;
  */
 class BakeryServiceTest extends UnitTestCase {
 
-  public function setUp() {
+  use ProphecyTrait;
+  public function setUp(): void {
     parent::setUp();
     $this->config = $this->prophesize(Config::class);
     $this->getConfigFactoryStub();
diff --git a/tests/src/Unit/Cookies/BrowserCookieTraitTest.php b/tests/src/Unit/Cookies/BrowserCookieTraitTest.php
index 983637b..898fd83 100644
--- a/tests/src/Unit/Cookies/BrowserCookieTraitTest.php
+++ b/tests/src/Unit/Cookies/BrowserCookieTraitTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\bakery\Unit\Cookies;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\bakery\BakeryService;
 use Drupal\bakery\Cookies\BrowserCookieTrait;
 use Drupal\bakery\Kitchen;
@@ -13,6 +14,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class BrowserCookieTraitTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * @var \Drupal\bakery\Kitchen|\Prophecy\Prophecy\ObjectProphecy
    */
@@ -23,7 +25,7 @@ class BrowserCookieTraitTest extends UnitTestCase {
    */
   protected $bakeryService;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $container = new Container();
     $this->kitchenService = $this->prophesize(Kitchen::class);
diff --git a/tests/src/Unit/Cookies/ChocolateChipTest.php b/tests/src/Unit/Cookies/ChocolateChipTest.php
index 84ab6aa..4a07995 100644
--- a/tests/src/Unit/Cookies/ChocolateChipTest.php
+++ b/tests/src/Unit/Cookies/ChocolateChipTest.php
@@ -17,7 +17,7 @@ class ChocolateChipTest extends UnitTestCase {
     testGetName as traitGetNameTest;
   }
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = ChocolateChip::class;
     $this->cookieName = 'CHOCOLATECHIP';
diff --git a/tests/src/Unit/Cookies/GingerbreadReturnTest.php b/tests/src/Unit/Cookies/GingerbreadReturnTest.php
index 16dec74..cd94727 100644
--- a/tests/src/Unit/Cookies/GingerbreadReturnTest.php
+++ b/tests/src/Unit/Cookies/GingerbreadReturnTest.php
@@ -13,7 +13,7 @@ class GingerbreadReturnTest extends UnitTestCase {
 
   use CookieTestTrait;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = GingerbreadReturn::class;
     $this->cookieName = 'gingerbread';
diff --git a/tests/src/Unit/Cookies/GingerbreadTest.php b/tests/src/Unit/Cookies/GingerbreadTest.php
index ba5fa4d..1ed0089 100644
--- a/tests/src/Unit/Cookies/GingerbreadTest.php
+++ b/tests/src/Unit/Cookies/GingerbreadTest.php
@@ -13,7 +13,7 @@ class GingerbreadTest extends UnitTestCase {
 
   use RemoteCookieTestTrait;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = Gingerbread::class;
     $this->cookieName = 'gingerbread';
diff --git a/tests/src/Unit/Cookies/OatmealCookieTest.php b/tests/src/Unit/Cookies/OatmealCookieTest.php
index 1979f36..b2da536 100644
--- a/tests/src/Unit/Cookies/OatmealCookieTest.php
+++ b/tests/src/Unit/Cookies/OatmealCookieTest.php
@@ -16,7 +16,7 @@ class OatmealCookieTest extends UnitTestCase {
     testGetName as traitGetNameTest;
   }
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = OatmealCookie::class;
     $this->cookieName = 'OATMEALCOOKIE';
diff --git a/tests/src/Unit/Cookies/StroopwafelTest.php b/tests/src/Unit/Cookies/StroopwafelTest.php
index e9ee44d..38d2427 100644
--- a/tests/src/Unit/Cookies/StroopwafelTest.php
+++ b/tests/src/Unit/Cookies/StroopwafelTest.php
@@ -14,7 +14,7 @@ use Drupal\Tests\UnitTestCase;
 class StroopwafelTest extends UnitTestCase {
   use RemoteCookieTestTrait;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = Stroopwafel::class;
     $this->cookieName = 'stroopwafel';
diff --git a/tests/src/Unit/EventSubscriber/CookieMonsterTest.php b/tests/src/Unit/EventSubscriber/CookieMonsterTest.php
index 387d586..de2903a 100644
--- a/tests/src/Unit/EventSubscriber/CookieMonsterTest.php
+++ b/tests/src/Unit/EventSubscriber/CookieMonsterTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\bakery\Unit\EventSubscriber;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\bakery\EventSubscriber\CookieMonster;
 use Drupal\Component\Datetime\Time;
 use Drupal\Core\Config\Config;
@@ -23,6 +24,7 @@ use Symfony\Component\HttpKernel\HttpKernelInterface;
  */
 class CookieMonsterTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * @var \Drupal\bakery\EventSubscriber\CookieMonster
    */
@@ -43,7 +45,7 @@ class CookieMonsterTest extends UnitTestCase {
    */
   private $time;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->request = new RequestStack();
     $this->request->push(new Request());
@@ -90,8 +92,8 @@ class CookieMonsterTest extends UnitTestCase {
       Cookie::create('cookie1', 'foo', $expire, '/', '.example.com', $secure),
       Cookie::create('cookie2', 'bar', $expire, '/', '.example.com', $secure),
       // This might cause problems with Symfony 5?
-      new Cookie('cookie3', NULL, 1, '/', '.example.com', $secure, TRUE, FALSE, NULL),
-      new Cookie('cookie3', NULL, 1, '/', '', $secure, TRUE, FALSE, NULL),
+      Cookie::create('cookie3', NULL, 1, '/', '.example.com', $secure, TRUE, FALSE, NULL),
+      Cookie::create('cookie3', NULL, 1, '/', '', $secure, TRUE, FALSE, NULL),
     ], $response->headers->getCookies());
   }
 
diff --git a/tests/src/Unit/KitchenTest.php b/tests/src/Unit/KitchenTest.php
index 36c2d24..a5eb1fb 100644
--- a/tests/src/Unit/KitchenTest.php
+++ b/tests/src/Unit/KitchenTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\bakery\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\bakery\Cookies\ChocolateChip;
 use Drupal\bakery\Cookies\Gingerbread;
 use Drupal\bakery\Cookies\Stroopwafel;
@@ -42,6 +43,7 @@ use Symfony\Component\HttpFoundation\Session\Flash\FlashBag;
  */
 class KitchenTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * @var \Drupal\Core\Http\RequestStack
    */
@@ -92,7 +94,7 @@ class KitchenTest extends UnitTestCase {
    */
   private $cookieJar;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->request = new RequestStack();
     $this->request->push(new Request());
