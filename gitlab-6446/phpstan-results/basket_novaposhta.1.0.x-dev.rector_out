modules/contrib/basket_novaposhta/novaposhta.install
modules/contrib/basket_novaposhta/src/NovaPoshta.php
modules/contrib/basket_novaposhta/novaposhta.module
modules/contrib/basket_novaposhta/novaposhta.views.inc
modules/contrib/basket_novaposhta/src/API/NovaPoshtaAPI.php
modules/contrib/basket_novaposhta/src/NovaPoshtaEN.php
modules/contrib/basket_novaposhta/src/API/NovaPoshtaApi2.php
modules/contrib/basket_novaposhta/src/NovaPoshtaView.php
modules/contrib/basket_novaposhta/src/AdminPages.php
modules/contrib/basket_novaposhta/src/Plugin/Basket/Delivery/NovaPoshtaDelivery.php
modules/contrib/basket_novaposhta/src/Commands/NovaPoshtaCommands.php
modules/contrib/basket_novaposhta/src/Form/NovaPoshtaCreateContactPersonForm.php
modules/contrib/basket_novaposhta/src/Form/NovaPoshtaCreateUserForm.php
modules/contrib/basket_novaposhta/src/Plugin/Basket/Delivery/NovaPoshtaDelivery2.php
modules/contrib/basket_novaposhta/src/Form/NovaPoshtaENForm.php
modules/contrib/basket_novaposhta/src/Plugin/Basket/Delivery/NovaPoshtaDeliveryAddress.php
modules/contrib/basket_novaposhta/src/Plugin/views/field/NovaPoshtaEnAddress.php
modules/contrib/basket_novaposhta/src/Plugin/views/field/NovaPoshtaEnCost.php
modules/contrib/basket_novaposhta/src/Plugin/views/field/NovaPoshtaEnSettings.php
modules/contrib/basket_novaposhta/src/Form/NovaPoshtaSettingsForm.php
modules/contrib/basket_novaposhta/src/Plugin/views/field/NovaPoshtaEnWeight.php
modules/contrib/basket_novaposhta/src/Plugin/views/filter/NovaPoshtaEnDate.php
modules/contrib/basket_novaposhta/src/Plugin/views/wizard/NovaPoshta.php
modules/contrib/basket_novaposhta/src/ViewsAlter.php

3 files with changes
====================

1) modules/contrib/basket_novaposhta/src/Plugin/Basket/Delivery/NovaPoshtaDeliveryAddress.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\novaposhta\Plugin\Basket\Delivery;

+use Drupal\novaposhta\AdminPages;
+use Drupal\novaposhta\NovaPoshtaEN;
 use Drupal\basket\Plugins\Delivery\Annotation\BasketDelivery;
 use Drupal\basket\Plugins\Delivery\BasketDeliveryInterface;
 use Drupal\novaposhta\API\NovaPoshtaAPI;
@@ @@
 			$order = \Drupal::service('Basket')->Orders(NULL, $entity->id())->load();
 			$NP = NULL;
 			if(!empty($order)){
-				$AdminPages = new \Drupal\novaposhta\AdminPages();
+				$AdminPages = new AdminPages();
         		$NP = $AdminPages->loadOrderEN($order->id);
 			}
 			$form['enNum'] = [
@@ @@
 			$order = \Drupal::service('Basket')->Orders(NULL, $entity->id())->load();
 			$NP = NULL;
 			if(!empty($order)){
-				$NovaPoshtaEN = new \Drupal\novaposhta\NovaPoshtaEN();
+				$NovaPoshtaEN = new NovaPoshtaEN();
 				$NovaPoshtaEN->updateOrderENNumm($order->id, (!empty($values['enNum']) ? trim($values['enNum']) : NULL));
 			}
 		}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/basket_novaposhta/src/Plugin/Basket/Delivery/NovaPoshtaDelivery.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\novaposhta\Plugin\Basket\Delivery;

+use Drupal\novaposhta\NovaPoshtaEN;
 use Drupal\basket\Plugins\Delivery\Annotation\BasketDelivery;
 use Drupal\basket\Plugins\Delivery\BasketDeliveryInterface;
 use Drupal\novaposhta\API\NovaPoshtaAPI;
@@ @@
 			$order = $this->basket->Orders(NULL, $entity->id())->load();
 			$NP = NULL;
 			if(!empty($order)){
-				$NovaPoshtaEN = new \Drupal\novaposhta\NovaPoshtaEN();
+				$NovaPoshtaEN = new NovaPoshtaEN();
 				$NovaPoshtaEN->updateOrderENNumm($order->id, (!empty($values['enNum']) ? trim($values['enNum']) : NULL));
 			}
 		}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


3) modules/contrib/basket_novaposhta/src/NovaPoshtaEN.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\novaposhta;

+use Drupal\novaposhta\API\NovaPoshtaAPI;
 class NovaPoshtaEN{

 	protected static $NovaPoshta;
@@ @@

 	function __construct($apiKEY = NULL){
 		self::$NovaPoshta = \Drupal::service('NovaPoshta');
-		self::$API = new \Drupal\novaposhta\API\NovaPoshtaAPI($apiKEY);
+		self::$API = new NovaPoshtaAPI($apiKEY);
 	}

 	public function defValues($form_state = NULL, $editEN = NULL, $orderId = NULL){
@@ @@
         if(!empty($getValues)){
           $newValues = array_merge_recursive($newValues, $getValues);
         }
-				
+
 				if(!empty($newValues['sender']['Sender'])) {
 					$senders = self::$API->getCounterparties([
 		        'CounterpartyProperty'	=> 'Sender'
@@ @@
 						$newValues = [];
 					}
 				}
-				
+
         $newValues['DateTime'] = date('Y-m-d');
         $newValues['ServiceType'] = 'WarehouseWarehouse';
         // Order
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 3 files have been changed by Rector                                       

