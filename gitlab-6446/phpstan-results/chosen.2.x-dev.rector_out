modules/contrib/chosen/chosen.install
modules/contrib/chosen/src/ChosenFormRender.php
modules/contrib/chosen/chosen.module
modules/contrib/chosen/modules/chosen_field/src/Plugin/Field/FieldWidget/ChosenFieldWidget.php
modules/contrib/chosen/src/Form/ChosenConfigForm.php
modules/contrib/chosen/modules/chosen_field/tests/src/Functional/ChosenFieldWidgetsTest.php
modules/contrib/chosen/tests/modules/chosen_test/chosen_test.module
modules/contrib/chosen/tests/modules/chosen_test/src/Form/ChosenTestForm.php
modules/contrib/chosen/tests/src/Functional/ChosenFormTest.php
modules/contrib/chosen/tests/src/Functional/MultivalueTest.php
modules/contrib/chosen/modules/chosen_lib/chosen_lib.module
modules/contrib/chosen/modules/chosen_lib/drush/chosen_lib.drush.inc
modules/contrib/chosen/modules/chosen_lib/src/Commands/ChosenLibCommands.php

3 files with changes
====================

1) modules/contrib/chosen/tests/src/Functional/MultivalueTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Enable chosen for all multiselect fields.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/chosen/tests/src/Functional/ChosenFormTest.php:26

    ---------- begin diff ----------
@@ @@
    */
   public function testFormPage() {
     $this->drupalGet('chosen-test');
-    $this->assertText('Select');
+    $this->assertSession()->pageTextContains('Select');
     $this->assertSession()->elementExists('css', 'select#edit-select.chosen-enable');
   }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/chosen/modules/chosen_field/tests/src/Functional/ChosenFieldWidgetsTest.php:48

    ---------- begin diff ----------
@@ @@
   /**
    * Function used to setup before running the test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Field storage with cardinality 1.
@@ @@

     // Submit form: select invalid 'none' option.
     $edit = ['card_1' => '_none'];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->responseContains((string) new FormattableMarkup('@title field is required.', ['@title' => $instance->getName()]));

     // Submit form: select first option.
     $edit = ['card_1' => 0];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertFieldValues($entity_init, 'card_1', [0]);

     // Display form: check that the right options are selected.
@@ @@
     $this->assertSession()->elementExists('xpath', '//select[@id="edit-card-1"]//option[@value="_none" and text()="- None -"]');
     // Submit form: Unselect the option.
     $edit = ['card_1' => '_none'];
-    $this->drupalPostForm('entity_test/manage/' . $entity->id() . '/edit', $edit, 'Save');
+    $this->drupalGet('entity_test/manage/' . $entity->id() . '/edit');
+    $this->submitForm($edit, 'Save');
     $this->assertFieldValues($entity_init, 'card_1', []);

     // Test optgroups.
@@ @@

     // Submit form: select first option.
     $edit = ['card_1' => 0];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertFieldValues($entity_init, 'card_1', [0]);

     // Display form: check that the right options are selected.
@@ @@

     // Submit form: Unselect the option.
     $edit = ['card_1' => '_none'];
-    $this->drupalPostForm('entity_test/manage/' . $entity->id() . '/edit', $edit, 'Save');
+    $this->drupalGet('entity_test/manage/' . $entity->id() . '/edit');
+    $this->submitForm($edit, 'Save');
     $this->assertFieldValues($entity_init, 'card_1', []);
   }

@@ @@

     // Submit form: select first and third options.
     $edit = ['card_2[]' => [0 => 0, 2 => 2]];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertFieldValues($entity_init, 'card_2', [0, 2]);

     // Display form: check that the right options are selected.
@@ @@

     // Submit form: select only first option.
     $edit = ['card_2[]' => [0 => 0]];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertFieldValues($entity_init, 'card_2', [0]);

     // Display form: check that the right options are selected.
@@ @@

     // Submit form: select the three options while the field accepts only 2.
     $edit = ['card_2[]' => [0 => 0, 1 => 1, 2 => 2]];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('this field cannot hold more than 2 values');

     // Submit form: uncheck all options.
     $edit = ['card_2[]' => []];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertFieldValues($entity_init, 'card_2', []);

     // A required select list does not have an empty key.
@@ @@

     // Submit form: select first option.
     $edit = ['card_2[]' => [0 => 0]];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertFieldValues($entity_init, 'card_2', [0]);

     // Display form: check that the right options are selected.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

