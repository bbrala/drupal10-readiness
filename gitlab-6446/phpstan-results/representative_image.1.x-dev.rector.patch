diff --git a/representative_image.info.yml b/representative_image.info.yml
index 161d3bf..3239306 100644
--- a/representative_image.info.yml
+++ b/representative_image.info.yml
@@ -2,5 +2,4 @@ name: Representative Image
 type: module
 description: Allows you to define a representative image per node type and make it available in a token
 package: Media
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
diff --git a/tests/src/FunctionalJavascript/RepresentativeImageEntitiesTest.php b/tests/src/FunctionalJavascript/RepresentativeImageEntitiesTest.php
index 65e2e79..2abc344 100644
--- a/tests/src/FunctionalJavascript/RepresentativeImageEntitiesTest.php
+++ b/tests/src/FunctionalJavascript/RepresentativeImageEntitiesTest.php
@@ -34,7 +34,8 @@ class RepresentativeImageEntitiesTest extends RepresentativeImageTestBase {
     $edit = [
       'settings[representative_image_field_name]' => 'field_image1',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/fields/node.article.field_representative_image', $edit, 'Save settings');
+    $this->drupalGet('admin/structure/types/manage/article/fields/node.article.field_representative_image');
+    $this->submitForm($edit, 'Save settings');
 
     // Create a node with an image in field_image1. Check that it is shown.
     $this->drupalGet('node/add/article');
@@ -51,7 +52,8 @@ class RepresentativeImageEntitiesTest extends RepresentativeImageTestBase {
     $edit = [
       'settings[representative_image_behavior]' => 'first',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/fields/node.article.field_representative_image', $edit, 'Save settings');
+    $this->drupalGet('admin/structure/types/manage/article/fields/node.article.field_representative_image');
+    $this->submitForm($edit, 'Save settings');
 
     // Create a node with an image in the second image field. Check that it is
     // shown.
@@ -68,13 +70,15 @@ class RepresentativeImageEntitiesTest extends RepresentativeImageTestBase {
     $edit = [
       'settings[representative_image_behavior]' => 'first_or_default',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/fields/node.article.field_representative_image', $edit, 'Save settings');
+    $this->drupalGet('admin/structure/types/manage/article/fields/node.article.field_representative_image');
+    $this->submitForm($edit, 'Save settings');
 
     // Create a node without images.
     $edit = [
       'title[0][value]' => $this->randomMachineName(),
     ];
-    $this->drupalPostForm('node/add/article', $edit, 'Save');
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, 'Save');
     $assert_session->responseContains($this->defaultImageFile->name);
   }
 
diff --git a/tests/src/FunctionalJavascript/RepresentativeImageTestBase.php b/tests/src/FunctionalJavascript/RepresentativeImageTestBase.php
index 6b3611b..de71abe 100644
--- a/tests/src/FunctionalJavascript/RepresentativeImageTestBase.php
+++ b/tests/src/FunctionalJavascript/RepresentativeImageTestBase.php
@@ -78,7 +78,7 @@ abstract class RepresentativeImageTestBase extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->fileSystem = \Drupal::service('file_system');
diff --git a/tests/src/FunctionalJavascript/RepresentativeImageTokenTest.php b/tests/src/FunctionalJavascript/RepresentativeImageTokenTest.php
index 9dbefcc..0d8c415 100644
--- a/tests/src/FunctionalJavascript/RepresentativeImageTokenTest.php
+++ b/tests/src/FunctionalJavascript/RepresentativeImageTokenTest.php
@@ -45,7 +45,8 @@ class RepresentativeImageTokenTest extends RepresentativeImageTestBase {
     $edit = [
       'settings[representative_image_field_name]' => 'field_image1',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/fields/node.article.field_representative_image', $edit, 'Save settings');
+    $this->drupalGet('admin/structure/types/manage/article/fields/node.article.field_representative_image');
+    $this->submitForm($edit, 'Save settings');
 
     // Check that the first image is shown in a processed token.
     $node = $this->nodeStorage->load(1);
@@ -57,7 +58,8 @@ class RepresentativeImageTokenTest extends RepresentativeImageTestBase {
     $edit = [
       'settings[representative_image_field_name]' => 'field_image2',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/fields/node.article.field_representative_image', $edit, 'Save settings');
+    $this->drupalGet('admin/structure/types/manage/article/fields/node.article.field_representative_image');
+    $this->submitForm($edit, 'Save settings');
     // @todo Need to do this or
     //   RepresentativeImagePicker::getRepresentativeImageField() will return
     //   ''.
diff --git a/tests/src/FunctionalJavascript/RepresentativeImageViewsTest.php b/tests/src/FunctionalJavascript/RepresentativeImageViewsTest.php
index e20d84a..9573d2c 100644
--- a/tests/src/FunctionalJavascript/RepresentativeImageViewsTest.php
+++ b/tests/src/FunctionalJavascript/RepresentativeImageViewsTest.php
@@ -29,7 +29,7 @@ class RepresentativeImageViewsTest extends RepresentativeImageTestBase {
     $edit = [
       'settings[representative_image_field_name]' => 'field_image3',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save settings');
+    $this->submitForm($edit, 'Save settings');
 
     // Create image files to use for testing.
     $image1 = $this->randomFile('image');
@@ -107,12 +107,14 @@ class RepresentativeImageViewsTest extends RepresentativeImageTestBase {
     $edit = [
       'settings[representative_image_field_name]' => 'field_image2',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/fields/node.article.field_representative_image', $edit, 'Save settings');
+    $this->drupalGet('admin/structure/types/manage/article/fields/node.article.field_representative_image');
+    $this->submitForm($edit, 'Save settings');
     // 2. Set the second image field of Sample content type 2 as representative.
     $edit = [
       'settings[representative_image_field_name]' => 'field_image4',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article2/fields/node.article2.field_representative_image', $edit, 'Save settings');
+    $this->drupalGet('admin/structure/types/manage/article2/fields/node.article2.field_representative_image');
+    $this->submitForm($edit, 'Save settings');
     // @todo Check why clearing caches is needed in order to find
     //   field_representative_image in the node.
     drupal_flush_all_caches();
