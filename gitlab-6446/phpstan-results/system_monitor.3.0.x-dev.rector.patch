diff --git a/modules/sm_status_page/src/EventSubscriber/StatusPageEventSubscriber.php b/modules/sm_status_page/src/EventSubscriber/StatusPageEventSubscriber.php
index ae19922..a6c8a80 100644
--- a/modules/sm_status_page/src/EventSubscriber/StatusPageEventSubscriber.php
+++ b/modules/sm_status_page/src/EventSubscriber/StatusPageEventSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\sm_status_page\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\PageCache\ResponsePolicy\KillSwitch;
@@ -11,7 +12,6 @@ use Drupal\Core\Routing\UrlGeneratorInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\TranslationInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -92,10 +92,10 @@ class StatusPageEventSubscriber implements EventSubscriberInterface {
   /**
    * Returns a system monitor status page.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function onKernelRequestStatusPage(GetResponseEvent $event) {
+  public function onKernelRequestStatusPage(RequestEvent $event) {
     $request = $event->getRequest();
     $route_match = RouteMatch::createFromRequest($request);
     if (strpos($route_match->getRouteName(), 'sm_status_page') === 0) {
diff --git a/src/Event/MonitorEvent.php b/src/Event/MonitorEvent.php
index d8bd761..1ef7fd5 100644
--- a/src/Event/MonitorEvent.php
+++ b/src/Event/MonitorEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\system_monitor\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Wraps a system monitor report event for event subscribers.
diff --git a/src/SystemMonitorUtility.php b/src/SystemMonitorUtility.php
index 1f70b99..e0f2ca0 100644
--- a/src/SystemMonitorUtility.php
+++ b/src/SystemMonitorUtility.php
@@ -231,7 +231,7 @@ class SystemMonitorUtility {
    *   The full server path to the icon file.
    */
   public function getFullIconPath($partial_path) {
-    $module_path = drupal_get_path('module', 'system_monitor');
+    $module_path = \Drupal::service('extension.list.module')->getPath('system_monitor');
     return '/' . $module_path . '/assets/images/icons/' . $partial_path;
   }
 
@@ -265,7 +265,7 @@ class SystemMonitorUtility {
    * Loads the names and strucure of the system monitor icons for status pages.
    */
   public function loadIconData() {
-    $module_path = drupal_get_path('module', 'system_monitor');
+    $module_path = \Drupal::service('extension.list.module')->getPath('system_monitor');
     $icon_files = [];
     $this->findFilePaths($module_path . '/assets/images/icons', $icon_files);
     $icon_files = array_filter($icon_files, function ($a) {
diff --git a/tests/src/Functional/OverviewPageTest.php b/tests/src/Functional/OverviewPageTest.php
index b0df05d..d04a8b8 100644
--- a/tests/src/Functional/OverviewPageTest.php
+++ b/tests/src/Functional/OverviewPageTest.php
@@ -28,7 +28,7 @@ class OverviewPageTest extends SystemMonitorBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create the users used for the tests.
@@ -47,7 +47,7 @@ class OverviewPageTest extends SystemMonitorBrowserTestBase {
     $system_monitor = $this->getTestMonitor();
 
     $this->drupalGet($this->overviewPageUrl);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $url_params = [
       'system_monitor' => $system_monitor->id(),
     ];
@@ -79,11 +79,11 @@ class OverviewPageTest extends SystemMonitorBrowserTestBase {
     $this->assertSession()->pageTextContains('System Monitor');
 
     $this->drupalGet($this->overviewPageUrl);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     $this->drupalLogin($this->unauthorizedUser);
     $this->drupalGet($this->overviewPageUrl);
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
 }
diff --git a/tests/src/Functional/SystemMonitorBrowserTestBase.php b/tests/src/Functional/SystemMonitorBrowserTestBase.php
index d0ef453..4e74925 100644
--- a/tests/src/Functional/SystemMonitorBrowserTestBase.php
+++ b/tests/src/Functional/SystemMonitorBrowserTestBase.php
@@ -74,7 +74,7 @@ abstract class SystemMonitorBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Get the entity type manager class.
diff --git a/tests/src/Unit/Logger/SystemMonitorDbLoggerTest.php b/tests/src/Unit/Logger/SystemMonitorDbLoggerTest.php
index 9217f42..3c5e788 100644
--- a/tests/src/Unit/Logger/SystemMonitorDbLoggerTest.php
+++ b/tests/src/Unit/Logger/SystemMonitorDbLoggerTest.php
@@ -17,7 +17,7 @@ class SystemMonitorDbLoggerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $container = new ContainerBuilder();
@@ -29,13 +29,7 @@ class SystemMonitorDbLoggerTest extends UnitTestCase {
    * Setup the System Monitor DB log to allow varying the query result.
    */
   public function setupMockSystemMonitorDbLogger($query_return_type) {
-    $query = $this->getMockBuilder(Insert::class)
-      ->setMethods([
-        'fields',
-        'execute',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $query = $this->createMock(Insert::class);
     $query->expects($this->any())
       ->method('fields')
       ->willReturnSelf();
