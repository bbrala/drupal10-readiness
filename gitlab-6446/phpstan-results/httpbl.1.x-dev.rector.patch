diff --git a/httpbl.install b/httpbl.install
index 4f045f6..1efeaa4 100644
--- a/httpbl.install
+++ b/httpbl.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Link;
+use Drupal\Core\Url;
 /**
  * @file
  * Install, update and uninstall functions for the httpbl module.
@@ -19,7 +21,7 @@ function httpbl_requirements($phase) {
     if (!\Drupal::state()->get('httpbl.accesskey') ?: NULL || !\Drupal::state()->get('httpbl.check') ?: HTTPBL_CHECK_NONE ) {
 
       // Make Config page link.
-      $config_link = \Drupal\Core\Link::fromTextAndUrl(t('Http:BL config'), \Drupal\Core\Url::fromRoute('httpbl.admin_config'))->toString();
+      $config_link = Link::fromTextAndUrl(t('Http:BL config'), Url::fromRoute('httpbl.admin_config'))->toString();
 
       $requirements['httpbl'] = array(
         'description' => t('IP blacklist lookups are currently disabled; enter your access key on the @settings page and enable checks to enable blacklist lookups.', array('@settings' => $config_link)),
diff --git a/src/Entity/Controller/HostListBuilder.php b/src/Entity/Controller/HostListBuilder.php
index db6a1ad..9618534 100644
--- a/src/Entity/Controller/HostListBuilder.php
+++ b/src/Entity/Controller/HostListBuilder.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\httpbl\Entity\Controller;
 
+use Drupal\Core\Url;
+use Drupal\Core\Link;
 use Drupal\httpbl\HttpblManager;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -95,14 +97,14 @@ class HostListBuilder extends EntityListBuilder {
     // interesting to see there. So override the default link with a link to a
     // profile on Project Honeypot.
     $host_ip = $entity->host_ip->value;
-    $url = \Drupal\Core\Url::fromUri('http://www.projecthoneypot.org/search_ip.php?ip=' . $host_ip);
+    $url = Url::fromUri('http://www.projecthoneypot.org/search_ip.php?ip=' . $host_ip);
     $url_options = [
       'attributes' => [
         'target' => '_blank',
         'title' => 'View this host\'s profile on Project Honeypot.',
       ]];
     $url->setOptions($url_options);
-    $project_link = \Drupal\Core\Link::fromTextAndUrl(t($host_ip), $url )->toString();
+    $project_link = Link::fromTextAndUrl(t($host_ip), $url )->toString();
     $row['name'] = $project_link;
     
     // Status with humanized conversion.
@@ -129,7 +131,7 @@ class HostListBuilder extends EntityListBuilder {
     if ($entity->source->value == t(HTTPBL_ORIGINAL_SOURCE)) {
       // recycle the url from above...
       $url->setOptions($url_options);
-      $project_link = \Drupal\Core\Link::fromTextAndUrl(t($entity->source->value), $url )->toString();
+      $project_link = Link::fromTextAndUrl(t($entity->source->value), $url )->toString();
       $row['source'] = $project_link;
     }
     else {
diff --git a/src/Entity/Host.php b/src/Entity/Host.php
index f28db4a..ea51d95 100644
--- a/src/Entity/Host.php
+++ b/src/Entity/Host.php
@@ -6,6 +6,8 @@
 
 namespace Drupal\httpbl\Entity;
 
+use Drupal\Core\Url;
+use Drupal\Core\Link;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityChangedTrait;
 use Drupal\Core\Field\BaseFieldDefinition;
@@ -128,7 +130,7 @@ class Host extends ContentEntityBase implements ContentEntityInterface, HostInte
    * {@inheritdoc}
    */
   public function projectLink($text = 'Project Honeypot') {
-    $url = \Drupal\Core\Url::fromUri('http://www.projecthoneypot.org/search_ip.php?ip=' . $this->getHostIp());
+    $url = Url::fromUri('http://www.projecthoneypot.org/search_ip.php?ip=' . $this->getHostIp());
     $url_options = [
       'attributes' => [
         'target' => '_blank',
@@ -136,7 +138,7 @@ class Host extends ContentEntityBase implements ContentEntityInterface, HostInte
       ]];
     $url->setOptions($url_options);
 
-    return \Drupal\Core\Link::fromTextAndUrl(t($text), $url )->toString();
+    return Link::fromTextAndUrl(t($text), $url )->toString();
   }
 
   /**
diff --git a/src/Form/HttpblConfigForm.php b/src/Form/HttpblConfigForm.php
index f61506d..d7530b3 100644
--- a/src/Form/HttpblConfigForm.php
+++ b/src/Form/HttpblConfigForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\httpbl\Form;
 
+use Drupal\Core\Url;
+use Drupal\Core\Link;
 use Drupal\Core\Form\ConfigFormBase;
 use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Form\FormStateInterface;
@@ -40,14 +42,14 @@ class HttpblConfigForm extends ConfigFormBase {
     }
 
     // Create link to HttpBL home page.
-    $httpblUrl = \Drupal\Core\Url::fromUri('http://www.projecthoneypot.org/httpbl.php');
+    $httpblUrl = Url::fromUri('http://www.projecthoneypot.org/httpbl.php');
     $httpblUrl_options = [
       'attributes' => [
         'target' => '_blank',
         'title' => t('More info about Project Honey Pot\'s http:BL service.'),
       ]];
     $httpblUrl->setOptions($httpblUrl_options);
-    $httpbl_link = \Drupal\Core\Link::fromTextAndUrl(t('http:BL homepage at projecthoneypot.org'), $httpblUrl )->toString();
+    $httpbl_link = Link::fromTextAndUrl(t('http:BL homepage at projecthoneypot.org'), $httpblUrl )->toString();
 
     $form['core'] = array(
       '#type' => 'details',
@@ -57,14 +59,14 @@ class HttpblConfigForm extends ConfigFormBase {
     );
 
     // Create link for Access Key info.
-    $keyUrl = \Drupal\Core\Url::fromUri('http://www.projecthoneypot.org/faq.php#g');
+    $keyUrl = Url::fromUri('http://www.projecthoneypot.org/faq.php#g');
     $keyUrl_options = [
       'attributes' => [
         'target' => '_blank',
         'title' => t('More info about an access key and how to get one if you do not have one.'),
       ]];
     $keyUrl->setOptions($keyUrl_options);
-    $key_link = \Drupal\Core\Link::fromTextAndUrl(t('Access Key'), $keyUrl )->toString();
+    $key_link = Link::fromTextAndUrl(t('Access Key'), $keyUrl )->toString();
 
     $form['core']['httpbl_accesskey'] = array(
       '#type' => 'textfield',
@@ -95,14 +97,14 @@ class HttpblConfigForm extends ConfigFormBase {
     }
 
     // Create link to Project Honeypot home page.
-    $homeUrl = \Drupal\Core\Url::fromUri('http://www.projecthoneypot.org');
+    $homeUrl = Url::fromUri('http://www.projecthoneypot.org');
     $homeUrl_options = [
       'attributes' => [
         'target' => '_blank',
         'title' => t('More info from Project Honeypot.'),
       ]];
     $homeUrl->setOptions($homeUrl_options);
-    $home_link = \Drupal\Core\Link::fromTextAndUrl(t('Project Honey Pot'), $homeUrl )->toString();
+    $home_link = Link::fromTextAndUrl(t('Project Honey Pot'), $homeUrl )->toString();
 
     $form['honeypot'] = array(
       '#type' => 'details',
@@ -119,23 +121,23 @@ class HttpblConfigForm extends ConfigFormBase {
     );
 
     // Create link to "own Honey Pot."
-    $ownUrl = \Drupal\Core\Url::fromUri('http://www.projecthoneypot.org/manage_honey_pots.php');
+    $ownUrl = Url::fromUri('http://www.projecthoneypot.org/manage_honey_pots.php');
     $ownUrl_options = [
       'attributes' => [
         'target' => '_blank',
         'title' => t('More info about managing you own honey pots.'),
       ]];
     $ownUrl->setOptions($ownUrl_options);
-    $own_link = \Drupal\Core\Link::fromTextAndUrl(t('own Honey Pots'), $ownUrl )->toString();
+    $own_link = Link::fromTextAndUrl(t('own Honey Pots'), $ownUrl )->toString();
     // Create link to "quick Honey Pot."
-    $quickUrl = \Drupal\Core\Url::fromUri('http://www.projecthoneypot.org/manage_quicklink.php');
+    $quickUrl = Url::fromUri('http://www.projecthoneypot.org/manage_quicklink.php');
     $quickUrl_options = [
       'attributes' => [
         'target' => '_blank',
         'title' => t('More info about using a Quick Link (other people\'s honey pots).'),
       ]];
     $quickUrl->setOptions($quickUrl_options);
-    $quick_link = \Drupal\Core\Link::fromTextAndUrl(t('QuickLink'), $quickUrl )->toString();
+    $quick_link = Link::fromTextAndUrl(t('QuickLink'), $quickUrl )->toString();
 
     $form['honeypot']['httpbl_link'] = array(
       '#type' => 'textfield',
@@ -170,7 +172,7 @@ class HttpblConfigForm extends ConfigFormBase {
     );
 
     // Create link to status report.
-    $status_link = \Drupal\Core\Link::fromTextAndUrl(t('Status Report'), \Drupal\Core\Url::fromRoute('system.status'))->toString();
+    $status_link = Link::fromTextAndUrl(t('Status Report'), Url::fromRoute('system.status'))->toString();
 
     $form['advanced']['httpbl_stats'] = array(
       '#type' => 'checkbox',
diff --git a/src/Future/HttpblManager.php b/src/Future/HttpblManager.php
index d381199..8bdfb09 100644
--- a/src/Future/HttpblManager.php
+++ b/src/Future/HttpblManager.php
@@ -37,7 +37,7 @@ class HttpblManager implements HttpblManagerInterface {
    *   TRUE if the IP address is greylisted, FALSE otherwise.
    */
   public function isGreylisted($ip){} // @todo flesh this out.  Could still use in Host entity, perhaps.
-  
+
 
  /**
    * White-lists an IP address.
diff --git a/src/HttpblEvaluator.php b/src/HttpblEvaluator.php
index 68c2d1b..53ee8e2 100644
--- a/src/HttpblEvaluator.php
+++ b/src/HttpblEvaluator.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\httpbl;
 
+use Drupal\Core\Url;
+use Drupal\Core\Link;
 use Drupal\httpbl\Entity\Host;
 use Drupal\ban\BanIpManagerInterface;
 use Drupal\httpbl\Logger\HttpblLogTrapperInterface;
@@ -701,7 +703,7 @@ class HttpblEvaluator implements HttpblEvaluatorInterface {
    *   The formatted link.
    */
   public static function projectLink($ip, $text = 'Project Honeypot') {
-    $url = \Drupal\Core\Url::fromUri('http://www.projecthoneypot.org/search_ip.php?ip=' . $ip);
+    $url = Url::fromUri('http://www.projecthoneypot.org/search_ip.php?ip=' . $ip);
     $url_options = [
       'attributes' => [
         'target' => '_blank',
@@ -711,7 +713,7 @@ class HttpblEvaluator implements HttpblEvaluatorInterface {
 
     // Break this line up for debugging.
     //$operations = \Drupal\Core\Link::fromTextAndUrl(t($text), $url )->toString();
-    $operations = \Drupal\Core\Link::fromTextAndUrl(t($text), $url );
+    $operations = Link::fromTextAndUrl(t($text), $url );
     // Below fails (intermittently) in core url_generator, when page_cache
     // is enabled.
     $operations = $operations->toString();
diff --git a/src/ProxyClass/Logger/HttpblLogTrapper.php b/src/ProxyClass/Logger/HttpblLogTrapper.php
index 4355676..ab89b22 100644
--- a/src/ProxyClass/Logger/HttpblLogTrapper.php
+++ b/src/ProxyClass/Logger/HttpblLogTrapper.php
@@ -12,15 +12,18 @@
 
 namespace Drupal\httpbl\ProxyClass\Logger {
 
+    use Drupal\httpbl\Logger\HttpblLogTrapperInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
     /**
      * Provides a proxy class for \Drupal\httpbl\Logger\HttpblLogTrapper.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class HttpblLogTrapper implements \Drupal\httpbl\Logger\HttpblLogTrapperInterface
+    class HttpblLogTrapper implements HttpblLogTrapperInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -51,7 +54,7 @@ namespace Drupal\httpbl\ProxyClass\Logger {
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
