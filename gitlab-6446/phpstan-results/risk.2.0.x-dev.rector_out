modules/contrib/risk/modules/risk_assessment/risk_assessment.install
modules/contrib/risk/modules/risk_assessment/risk_assessment_hazard.page.inc
modules/contrib/risk/modules/risk_assessment/src/Entity/RiskAssessmentViewsData.php
modules/contrib/risk/modules/risk_assessment/src/RiskAssessmentTypeListBuilder.php
modules/contrib/risk/modules/risk_register/risk_register_risk.page.inc
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterRiskSettingsForm.php
modules/contrib/risk/risk.module
modules/contrib/risk/modules/risk_assessment/src/ActivityListBuilder.php
modules/contrib/risk/modules/risk_register/src/Access/RiskRegisterAccessControlHandler.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterRiskTypeDeleteForm.php
modules/contrib/risk/modules/risk_assessment/src/Form/ActivityInlineForm.php
modules/contrib/risk/modules/risk_assessment/risk_assessment.module
modules/contrib/risk/modules/risk_assessment/src/Form/ActivitySettingsForm.php
modules/contrib/risk/modules/risk_assessment/src/Form/ActivityTypeDeleteForm.php
modules/contrib/risk/modules/risk_assessment/src/Storage/RiskAssessmentStorage.php
modules/contrib/risk/modules/risk_assessment/risk_assessment.page.inc
modules/contrib/risk/modules/risk_assessment/src/ActivityTypeListBuilder.php
modules/contrib/risk/modules/risk_assessment/risk_assessment_activity.page.inc
modules/contrib/risk/modules/risk_assessment/risk_assessment_control.page.inc
modules/contrib/risk/modules/risk_assessment/src/Controller/RiskAssessmentController.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterRiskTypeForm.php
modules/contrib/risk/modules/risk_assessment/src/Form/ActivityTypeForm.php
modules/contrib/risk/modules/risk_register/src/Access/RiskRegisterRiskAccessControlHandler.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterSettingsForm.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterTypeDeleteForm.php
modules/contrib/risk/modules/risk_assessment/src/Form/ControlSettingsForm.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterTypeForm.php
modules/contrib/risk/modules/risk_assessment/src/Form/HazardSettingsForm.php
modules/contrib/risk/modules/risk_assessment/src/Form/HazardTypeDeleteForm.php
modules/contrib/risk/modules/risk_register/src/Controller/RiskRegisterRiskController.php
modules/contrib/risk/modules/risk_assessment/src/Storage/RiskAssessmentStorageInterface.php
modules/contrib/risk/modules/risk_register/src/RiskRegisterListBuilder.php
modules/contrib/risk/modules/risk_register/risk_register.module
modules/contrib/risk/modules/risk_assessment/src/Form/HazardTypeForm.php
modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentDeleteForm.php
modules/contrib/risk/modules/risk_register/src/RiskRegisterPermissions.php
modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentForm.php
modules/contrib/risk/modules/risk_register/risk_register.page.inc
modules/contrib/risk/modules/risk_register/src/RiskRegisterRiskListBuilder.php
modules/contrib/risk/modules/risk_register/src/RiskRegisterRiskPermissions.php
modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentRevisionDeleteForm.php
modules/contrib/risk/modules/risk_register/src/RiskRegisterRiskTypeListBuilder.php
modules/contrib/risk/modules/risk_register/src/RiskRegisterTypeListBuilder.php
modules/contrib/risk/modules/risk_register/src/Routing/RiskRegisterHtmlRouteProvider.php
modules/contrib/risk/modules/risk_register/src/Routing/RiskRegisterRiskHtmlRouteProvider.php
modules/contrib/risk/modules/risk_assessment/src/Entity/Activity.php
modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentRevisionRevertForm.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegister.php
modules/contrib/risk/modules/risk_register/src/Routing/RiskRegisterRiskTypeHtmlRouteProvider.php
modules/contrib/risk/modules/risk_register/src/Routing/RiskRegisterTypeHtmlRouteProvider.php
modules/contrib/risk/modules/risk_register/src/Storage/RiskRegisterRiskStorage.php
modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentRevisionRevertTranslationForm.php
modules/contrib/risk/modules/risk_assessment/src/Entity/ActivityInterface.php
modules/contrib/risk/modules/risk_assessment/src/Entity/ActivityType.php
modules/contrib/risk/modules/risk_assessment/src/Entity/ActivityTypeInterface.php
modules/contrib/risk/modules/risk_register/src/Storage/RiskRegisterRiskStorageInterface.php
modules/contrib/risk/modules/risk_assessment/src/Entity/ActivityViewsData.php
modules/contrib/risk/modules/risk_assessment/src/Entity/Control.php
modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentSettingsForm.php
modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentTypeDeleteForm.php
modules/contrib/risk/modules/risk_assessment/src/Entity/ControlInterface.php
modules/contrib/risk/modules/risk_assessment/src/Entity/Hazard.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegisterInterface.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegisterRisk.php
modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentTypeForm.php
modules/contrib/risk/modules/risk_assessment/src/HazardListBuilder.php
modules/contrib/risk/modules/risk_assessment/src/HazardTypeListBuilder.php
modules/contrib/risk/modules/risk_assessment/src/Entity/HazardInterface.php
modules/contrib/risk/modules/risk_assessment/src/Entity/HazardType.php
modules/contrib/risk/modules/risk_assessment/src/Entity/HazardTypeInterface.php
modules/contrib/risk/modules/risk_assessment/src/Entity/HazardViewsData.php
modules/contrib/risk/modules/risk_assessment/src/RiskAssessmentListBuilder.php
modules/contrib/risk/modules/risk_assessment/src/Entity/RiskAssessment.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegisterRiskInterface.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegisterRiskType.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegisterRiskTypeInterface.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegisterRiskViewsData.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegisterType.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegisterTypeInterface.php
modules/contrib/risk/modules/risk_register/src/Entity/RiskRegisterViewsData.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterDeleteForm.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterForm.php
modules/contrib/risk/modules/risk_assessment/src/Entity/RiskAssessmentInterface.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterRiskDeleteForm.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterRiskForm.php
modules/contrib/risk/modules/risk_assessment/src/Entity/RiskAssessmentType.php
modules/contrib/risk/modules/risk_assessment/src/Entity/RiskAssessmentTypeInterface.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterRiskRevisionDeleteForm.php
modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterRiskRevisionRevertForm.php

8 files with changes
====================

1) modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentRevisionRevertTranslationForm.php:88

    ---------- begin diff ----------
@@ @@

     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $latest_revision_translation;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentRevisionRevertForm.php:128

    ---------- begin diff ----------
@@ @@
   protected function prepareRevertedRevision(RiskAssessmentInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $revision;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/risk/modules/risk_assessment/src/Form/RiskAssessmentRevisionDeleteForm.php:56

    ---------- begin diff ----------
@@ @@
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }

@@ @@
     $this->RiskAssessmentStorage->deleteRevision($this->revision->getRevisionId());

     $this->logger('content')->notice('Risk assessment: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of Risk assessment %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of Risk assessment %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.risk_assessment.canonical',
        ['risk_assessment' => $this->revision->id()]
    ----------- end diff -----------

Applied rules:
 * FormatDateRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/risk/modules/risk_assessment/src/Form/ActivityInlineForm.php:2

    ---------- begin diff ----------
@@ @@

 namespace Drupal\risk_assessment\Form;

-
-class ActivityInlineForm extends \Drupal\inline_entity_form\Form\EntityInlineForm
+use Drupal\inline_entity_form\Form\EntityInlineForm;
+class ActivityInlineForm extends EntityInlineForm
 {

   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/risk/modules/risk_assessment/src/Controller/RiskAssessmentController.php:123

    ---------- begin diff ----------
@@ @@
           ]));
         }
         else {
-          $link = $risk_assessment->link($date);
+          $link = $risk_assessment->toLink($date)->toString();
         }

         $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterRiskRevisionRevertForm.php:128

    ---------- begin diff ----------
@@ @@
   protected function prepareRevertedRevision(RiskRegisterRiskInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());

     return $revision;
   }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/risk/modules/risk_register/src/Form/RiskRegisterRiskRevisionDeleteForm.php:59

    ---------- begin diff ----------
@@ @@
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }

@@ @@
     $this->RiskRegisterRiskStorage->deleteRevision($this->revision->getRevisionId());

     $this->logger('content')->notice('Risk: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of Risk %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of Risk %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.risk_register_risk.canonical',
        [
    ----------- end diff -----------

Applied rules:
 * FormatDateRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/risk/modules/risk_register/src/Controller/RiskRegisterRiskController.php:116

    ---------- begin diff ----------
@@ @@
           ]));
         }
         else {
-          $link = $risk_register_risk->link($date);
+          $link = $risk_register_risk->toLink($date)->toString();
         }

         $row = [];
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

