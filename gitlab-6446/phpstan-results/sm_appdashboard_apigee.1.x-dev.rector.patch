diff --git a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php
index a360916..0d4bce4 100644
--- a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php
+++ b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\sm_appdashboard_apigee_rules\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Apigee\Edge\Api\Management\Entity\App;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Appdashboard event for rules module integration.
diff --git a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php
index 3ec6a1a..32e839f 100644
--- a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php
+++ b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusApprovedEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\sm_appdashboard_apigee_rules\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Apigee\Edge\Api\Management\Entity\App;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * AppdashboardStatusApproved event when apps status getting approved.
diff --git a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php
index 7f4215f..87d7492 100644
--- a/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php
+++ b/modules/sm_appdashboard_apigee_rules/src/Event/AppdashboardStatusRevokedEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\sm_appdashboard_apigee_rules\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Apigee\Edge\Api\Management\Entity\App;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * AppdashboardStatusRevoked event when apps status getting revoked.
diff --git a/src/Form/AppDetailsEditForm.php b/src/Form/AppDetailsEditForm.php
index 6b7007f..85524cd 100644
--- a/src/Form/AppDetailsEditForm.php
+++ b/src/Form/AppDetailsEditForm.php
@@ -349,16 +349,16 @@ class AppDetailsEditForm extends FormBase {
         $app_entity_id = $form_state->getValue('app_id');
         $app_entity = $this->appsDashboardStorage->getAppDetailsById($app_entity_type, $app_entity_id);
         $status_event_change = new AppdashboardEvent($app_entity);
-        $this->eventDispatcher->dispatch(AppdashboardEvent::APP_STATUS_CHANGE, $status_event_change);
+        $this->eventDispatcher->dispatch($status_event_change, AppdashboardEvent::APP_STATUS_CHANGE);
         // Dispatch event if app status is changed from revoked to approved.
         if ($product_previous_status === 'revoked' && $product_status === 'approved') {
           $event_approved = new AppdashboardStatusApprovedEvent($app_entity);
-          $this->eventDispatcher->dispatch(AppdashboardStatusApprovedEvent::APP_STATUS_APPROVED, $event_approved);
+          $this->eventDispatcher->dispatch($event_approved, AppdashboardStatusApprovedEvent::APP_STATUS_APPROVED);
         }
         // Dispatch event if app status is changed from approved to revoked.
         if ($product_previous_status === 'approved' && $product_status === 'revoked') {
           $event_revoked = new AppdashboardStatusRevokedEvent($app_entity);
-          $this->eventDispatcher->dispatch(AppdashboardStatusRevokedEvent::APP_STATUS_REVOKED, $event_revoked);
+          $this->eventDispatcher->dispatch($event_revoked, AppdashboardStatusRevokedEvent::APP_STATUS_REVOKED);
         }
       }
 
diff --git a/tests/src/Unit/Controller/AppsDashboardControllerTest.php b/tests/src/Unit/Controller/AppsDashboardControllerTest.php
index a57ba1d..820eab3 100644
--- a/tests/src/Unit/Controller/AppsDashboardControllerTest.php
+++ b/tests/src/Unit/Controller/AppsDashboardControllerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sm_appdashboard_apigee\Unit\Controller;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\apigee_edge\Entity\DeveloperApp;
 use Drupal\Core\Form\FormBuilder;
 use Drupal\sm_appdashboard_apigee\AppsDashboardStorageService;
@@ -17,6 +18,7 @@ use Symfony\Component\HttpFoundation\RequestStack;
  */
 class AppsDashboardControllerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The AppsDashboardController.
    *
@@ -48,7 +50,7 @@ class AppsDashboardControllerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->appsDashboardStorage = $this->prophesize(AppsDashboardStorageService::class);
     $this->formBuilder = $this->prophesize(FormBuilder::class);
