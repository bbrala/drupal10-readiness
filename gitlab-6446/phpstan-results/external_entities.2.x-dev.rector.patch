diff --git a/src/Event/ExternalEntityExtractRawDataEvent.php b/src/Event/ExternalEntityExtractRawDataEvent.php
index b2ac84a..f20d91e 100755
--- a/src/Event/ExternalEntityExtractRawDataEvent.php
+++ b/src/Event/ExternalEntityExtractRawDataEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\external_entities\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\external_entities\ExternalEntityInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines a, external entity raw data extraction event.
diff --git a/src/Event/ExternalEntityMapRawDataEvent.php b/src/Event/ExternalEntityMapRawDataEvent.php
index 45f715d..e479f9a 100755
--- a/src/Event/ExternalEntityMapRawDataEvent.php
+++ b/src/Event/ExternalEntityMapRawDataEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\external_entities\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Defines an external entity raw data mapping event.
diff --git a/src/ExternalEntityStorage.php b/src/ExternalEntityStorage.php
index 2357605..d72dcf8 100755
--- a/src/ExternalEntityStorage.php
+++ b/src/ExternalEntityStorage.php
@@ -326,7 +326,7 @@ class ExternalEntityStorage extends ContentEntityStorageBase implements External
       }
       // Allow other modules to perform custom mapping logic.
       $event = new ExternalEntityMapRawDataEvent($data[$id], $entity_values);
-      $this->eventDispatcher->dispatch(ExternalEntitiesEvents::MAP_RAW_DATA, $event);
+      $this->eventDispatcher->dispatch($event, ExternalEntitiesEvents::MAP_RAW_DATA);
 
       $entities[$id] = new $this->entityClass($event->getEntityValues(), $this->entityTypeId);
       $entities[$id]->enforceIsNew(FALSE);
diff --git a/src/FieldMapper/ExpressionFieldMapperBase.php b/src/FieldMapper/ExpressionFieldMapperBase.php
index f899c53..b6f63d1 100644
--- a/src/FieldMapper/ExpressionFieldMapperBase.php
+++ b/src/FieldMapper/ExpressionFieldMapperBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\external_entities\FieldMapper;
 
+use Drupal\Core\TypedData\Plugin\DataType\DateTimeIso8601;
 use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManager;
@@ -280,7 +281,7 @@ abstract class ExpressionFieldMapperBase extends FieldMapperBase implements Expr
 
       if ($timestamp !== FALSE) {
         if (get_class($typed_data) === 'Drupal\Core\TypedData\Plugin\DataType\DateTimeIso8601') {
-          assert($typed_data instanceof \Drupal\Core\TypedData\Plugin\DataType\DateTimeIso8601);
+          assert($typed_data instanceof DateTimeIso8601);
           $datetime_type = $field_definition->getFieldStorageDefinition()->getSetting('datetime_type');
 
           if ($datetime_type === DateTimeItem::DATETIME_TYPE_DATE) {
