diff --git a/src/Controller/ConfirmationController.php b/src/Controller/ConfirmationController.php
index 87af291..4849b8a 100644
--- a/src/Controller/ConfirmationController.php
+++ b/src/Controller/ConfirmationController.php
@@ -110,7 +110,7 @@ class ConfirmationController extends ControllerBase {
 
     $url = Url::fromRoute('<front>');
     $event = new GenericEvent(NULL, ['url' => $url]);
-    $this->eventDispatcher->dispatch('cognito.account_confirmed_redirect', $event);
+    $this->eventDispatcher->dispatch($event, 'cognito.account_confirmed_redirect');
 
     return new RedirectResponse($event->getArgument('url')->toString(), 302);
   }
diff --git a/src/Controller/EmailVerificationController.php b/src/Controller/EmailVerificationController.php
index 1961f89..b7a57e1 100644
--- a/src/Controller/EmailVerificationController.php
+++ b/src/Controller/EmailVerificationController.php
@@ -107,9 +107,9 @@ class EmailVerificationController extends ControllerBase {
 
     $url = Url::fromRoute('<front>');
     $event = new GenericEvent(NULL, ['url' => $url]);
-    $this->eventDispatcher->dispatch('cognito.account_verified_redirect', $event);
+    $this->eventDispatcher->dispatch($event, 'cognito.account_verified_redirect');
 
-    $this->eventDispatcher->dispatch('cognito.email_verified', new GenericEvent(NULL, ['email' => $email]));
+    $this->eventDispatcher->dispatch(new GenericEvent(NULL, ['email' => $email]), 'cognito.email_verified');
 
     return new RedirectResponse($event->getArgument('url')->toString(), 302);
   }
diff --git a/src/Event/CognitoFormEvent.php b/src/Event/CognitoFormEvent.php
index ece703c..4374a1a 100644
--- a/src/Event/CognitoFormEvent.php
+++ b/src/Event/CognitoFormEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\cognito\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Form\FormStateInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines an event for when Cognito forms are submitted.
diff --git a/src/Form/Email/RegisterForm.php b/src/Form/Email/RegisterForm.php
index e9ed029..39dcbc1 100644
--- a/src/Form/Email/RegisterForm.php
+++ b/src/Form/Email/RegisterForm.php
@@ -141,7 +141,7 @@ class RegisterForm extends CognitoAccountForm {
     }
 
     $event = new CognitoFormEvent($form_state);
-    $this->eventDispatcher->dispatch(CognitoEvents::REGISTER, $event);
+    $this->eventDispatcher->dispatch($event, CognitoEvents::REGISTER);
     $userAttributes = $event->getUserAttributes();
 
     $result = $this->cognito->signUp($email, $password, $email, $userAttributes);
@@ -216,7 +216,7 @@ class RegisterForm extends CognitoAccountForm {
       }
 
       $event = new GenericEvent(NULL, ['url' => Url::fromRoute('<front>')]);
-      $this->eventDispatcher->dispatch('cognito.registered_click_to_confirm', $event);
+      $this->eventDispatcher->dispatch($event, 'cognito.registered_click_to_confirm');
       $form_state->setRedirectUrl($event->getArgument('url'));
     }
     elseif ($this->usesAutoConfirm() || $this->showConfirmation) {
@@ -235,7 +235,7 @@ class RegisterForm extends CognitoAccountForm {
         $this->cognitoToken->setAuthTokens($result->getResult()['AuthenticationResult']);
       }
       $event = new GenericEvent(NULL, ['url' => Url::fromRoute('<front>')]);
-      $this->eventDispatcher->dispatch('cognito.registered_logged_in', $event);
+      $this->eventDispatcher->dispatch($event, 'cognito.registered_logged_in');
       $form_state->setRedirectUrl($event->getArgument('url'));
     }
     else {
diff --git a/src/Form/Email/UserLoginForm.php b/src/Form/Email/UserLoginForm.php
index df2a388..4062881 100644
--- a/src/Form/Email/UserLoginForm.php
+++ b/src/Form/Email/UserLoginForm.php
@@ -194,7 +194,7 @@ class UserLoginForm extends FormBase {
     $event = new GenericEvent(NULL, [
       'login-context' => \Drupal::request()->get('cognito-login-context') ?: [],
     ]);
-    $this->eventDispatcher->dispatch('cognito.logged_in', $event);
+    $this->eventDispatcher->dispatch($event, 'cognito.logged_in');
 
     // Store authentication tokens.
     if ($form_state->get('authentication_result')) {
diff --git a/src/Form/VerifyEmail.php b/src/Form/VerifyEmail.php
index 766fa00..36a70ae 100644
--- a/src/Form/VerifyEmail.php
+++ b/src/Form/VerifyEmail.php
@@ -172,7 +172,7 @@ class VerifyEmail extends FormBase {
     }
     else {
       $this->getLogger('cognito')->notice('Your email has now been verified');
-      $this->eventDispatcher->dispatch('cognito.email_verified', new GenericEvent());
+      $this->eventDispatcher->dispatch(new GenericEvent(), 'cognito.email_verified');
     }
   }
 
diff --git a/src/Plugin/rest/resource/CognitoUserRegistrationResource.php b/src/Plugin/rest/resource/CognitoUserRegistrationResource.php
index ad34246..93e9900 100644
--- a/src/Plugin/rest/resource/CognitoUserRegistrationResource.php
+++ b/src/Plugin/rest/resource/CognitoUserRegistrationResource.php
@@ -225,10 +225,10 @@ class CognitoUserRegistrationResource extends ResourceBase {
       if ($result instanceof CognitoResult && isset($result->getResult()['AuthenticationResult'])) {
         $this->cognitoToken->setAuthTokens($result->getResult()['AuthenticationResult']);
       }
-      $this->eventDispatcher->dispatch('cognito.registered_logged_in', $event);
+      $this->eventDispatcher->dispatch($event, 'cognito.registered_logged_in');
     }
     else {
-      $this->eventDispatcher->dispatch('cognito.registered_click_to_confirm', $event);
+      $this->eventDispatcher->dispatch($event, 'cognito.registered_click_to_confirm');
     }
 
     return new ModifiedResourceResponse([
diff --git a/tests/src/Functional/CognitoRegistrationResourceTest.php b/tests/src/Functional/CognitoRegistrationResourceTest.php
index 0049125..9f1120d 100644
--- a/tests/src/Functional/CognitoRegistrationResourceTest.php
+++ b/tests/src/Functional/CognitoRegistrationResourceTest.php
@@ -62,7 +62,7 @@ class CognitoRegistrationResourceTest extends ResourceTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     user_role_grant_permissions(AccountInterface::ANONYMOUS_ROLE, ['restful post cognito_user_registration']);
   }
diff --git a/tests/src/Functional/EmailFlowAdminCreateAccountTest.php b/tests/src/Functional/EmailFlowAdminCreateAccountTest.php
index bc26413..9c85ebb 100644
--- a/tests/src/Functional/EmailFlowAdminCreateAccountTest.php
+++ b/tests/src/Functional/EmailFlowAdminCreateAccountTest.php
@@ -19,14 +19,15 @@ class EmailFlowAdminCreateAccountTest extends CognitoTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->admin = $this->createExternalUser([
       'administer permissions',
       'administer users',
     ]);
+    $this->drupalGet('/user/login');
 
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'mail' => $this->admin->getEmail(),
       'pass' => 'letmein',
     ], 'Log in');
@@ -40,7 +41,8 @@ class EmailFlowAdminCreateAccountTest extends CognitoTestBase {
     $this->assertSession()->fieldNotExists('pass[pass1]');
 
     $mail = strtolower($this->randomMachineName() . '@example.com');
-    $this->drupalPostForm('/admin/people/create', [
+    $this->drupalGet('/admin/people/create');
+    $this->submitForm([
       'mail' => $mail,
       'status' => 1,
     ], 'Register');
diff --git a/tests/src/Functional/EmailFlowAdminStatusTest.php b/tests/src/Functional/EmailFlowAdminStatusTest.php
index 822ab86..8314b69 100644
--- a/tests/src/Functional/EmailFlowAdminStatusTest.php
+++ b/tests/src/Functional/EmailFlowAdminStatusTest.php
@@ -19,7 +19,7 @@ class EmailFlowAdminStatusTest extends CognitoTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->userAccount = $this->createExternalUser();
   }
@@ -33,7 +33,8 @@ class EmailFlowAdminStatusTest extends CognitoTestBase {
       'administer users',
       'access user profiles',
     ]);
-    $this->drupalPostForm('/user/login', [
+    $this->drupalGet('/user/login');
+    $this->submitForm([
       'mail' => $adminUser->getEmail(),
       'pass' => 'letmein',
     ], 'Log in');
@@ -42,21 +43,25 @@ class EmailFlowAdminStatusTest extends CognitoTestBase {
 
     $this->drupalGet('<front>');
     $this->drupalGet($this->userAccount->toUrl());
+    $this->drupalGet($user_edit_url);
 
     // Block an active user.
-    $this->drupalPostForm($user_edit_url, ['status' => 0], 'Save');
+    $this->submitForm(['status' => 0], 'Save');
     $this->assertSession()->pageTextContains('Account disabled in Cognito');
+    $this->drupalGet($user_edit_url);
 
     // Save an already blocked user and ensure no API calls.
-    $this->drupalPostForm($user_edit_url, ['status' => 0], 'Save');
+    $this->submitForm(['status' => 0], 'Save');
     $this->assertSession()->pageTextNotContains('Account disabled in Cognito');
+    $this->drupalGet($user_edit_url);
 
     // Activate the user.
-    $this->drupalPostForm($user_edit_url, ['status' => 1], 'Save');
+    $this->submitForm(['status' => 1], 'Save');
     $this->assertSession()->pageTextContains('Account enabled in Cognito');
+    $this->drupalGet($user_edit_url);
 
     // Saving an already active user does not make API calls.
-    $this->drupalPostForm($user_edit_url, ['status' => 1], 'Save');
+    $this->submitForm(['status' => 1], 'Save');
     $this->assertSession()->pageTextNotContains('Account enabled in Cognito');
   }
 
diff --git a/tests/src/Functional/EmailFlowLoginTest.php b/tests/src/Functional/EmailFlowLoginTest.php
index 7016237..2afe9d5 100644
--- a/tests/src/Functional/EmailFlowLoginTest.php
+++ b/tests/src/Functional/EmailFlowLoginTest.php
@@ -31,7 +31,7 @@ class EmailFlowLoginTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->mail = strtolower($this->randomMachineName() . '@example.com');
 
@@ -46,7 +46,8 @@ class EmailFlowLoginTest extends BrowserTestBase {
    * Test the successful login flow.
    */
   public function testCanLoginWithCognitoAccount() {
-    $this->drupalPostForm('/user/login', [
+    $this->drupalGet('/user/login');
+    $this->submitForm([
       'mail' => $this->mail,
       'pass' => 'letmein',
     ], 'Log in');
diff --git a/tests/src/Functional/EmailFlowPasswordResetTest.php b/tests/src/Functional/EmailFlowPasswordResetTest.php
index bcb8c8f..dc36a0c 100644
--- a/tests/src/Functional/EmailFlowPasswordResetTest.php
+++ b/tests/src/Functional/EmailFlowPasswordResetTest.php
@@ -31,7 +31,7 @@ class EmailFlowPasswordResetTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->mail = strtolower($this->randomMachineName() . '@example.com');
 
@@ -48,12 +48,13 @@ class EmailFlowPasswordResetTest extends BrowserTestBase {
   public function testCanResetPassword() {
     // Reset the users password.
     $mail = strtolower($this->randomMachineName() . '@example.com');
-    $this->drupalPostForm('/user/password', [
+    $this->drupalGet('/user/password');
+    $this->submitForm([
       'mail' => $mail,
     ], 'Reset Password');
 
     // Confirm your account.
-    $this->drupalPostForm(NULL, ['confirmation_code' => '12345'], 'Confirm');
+    $this->submitForm(['confirmation_code' => '12345'], 'Confirm');
     $this->assertSession()->pageTextContains('Your password has now been reset.');
     $this->assertSession()->addressEquals('/user/login');
   }
diff --git a/tests/src/Functional/EmailFlowRegistrationTest.php b/tests/src/Functional/EmailFlowRegistrationTest.php
index 09894d0..5edddfc 100644
--- a/tests/src/Functional/EmailFlowRegistrationTest.php
+++ b/tests/src/Functional/EmailFlowRegistrationTest.php
@@ -28,14 +28,15 @@ class EmailFlowRegistrationTest extends BrowserTestBase {
   public function testCanRegister() {
     // Register a new user.
     $mail = strtolower($this->randomMachineName() . '@example.com');
-    $this->drupalPostForm('/user/register', [
+    $this->drupalGet('/user/register');
+    $this->submitForm([
       'mail' => $mail,
       'pass[pass1]' => 'letmein',
       'pass[pass2]' => 'letmein',
     ], 'Register');
 
     // Confirm your account.
-    $this->drupalPostForm(NULL, ['confirmation_code' => '12345'], 'Confirm');
+    $this->submitForm(['confirmation_code' => '12345'], 'Confirm');
     $this->assertSession()->pageTextContains('Your account is now confirmed.');
     $this->assertSession()->addressEquals('/user/2');
 
@@ -62,7 +63,8 @@ class EmailFlowRegistrationTest extends BrowserTestBase {
 
     // Register a new user.
     $mail = strtolower($this->randomMachineName() . '@example.com');
-    $this->drupalPostForm('/user/register', [
+    $this->drupalGet('/user/register');
+    $this->submitForm([
       'mail' => $mail,
       'pass[pass1]' => 'letmein',
       'pass[pass2]' => 'letmein',
diff --git a/tests/src/Functional/EmailFlowUserEditTest.php b/tests/src/Functional/EmailFlowUserEditTest.php
index 30c7e5d..d701959 100644
--- a/tests/src/Functional/EmailFlowUserEditTest.php
+++ b/tests/src/Functional/EmailFlowUserEditTest.php
@@ -31,15 +31,16 @@ class EmailFlowUserEditTest extends CognitoTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->user = $this->createExternalUser([
       'administer permissions',
       'administer users',
     ], ['name' => 'Ben']);
+    $this->drupalGet('/user/login');
 
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'mail' => $this->user->getEmail(),
       'pass' => 'letmein',
     ], 'Log in');
@@ -52,19 +53,21 @@ class EmailFlowUserEditTest extends CognitoTestBase {
     $this->drupalGet($this->user->toUrl('edit-form'));
     $this->assertSession()->fieldValueEquals('mail', $this->user->getEmail());
     $this->assertSession()->fieldNotExists('name');
+    $this->drupalGet($this->user->toUrl('edit-form'));
 
     // Change the users password.
-    $this->drupalPostForm($this->user->toUrl('edit-form'), [
+    $this->submitForm([
       'current_pass' => 'letmein',
       'pass[pass1]' => 'letmein-new',
       'pass[pass2]' => 'letmein-new',
     ], 'Save');
 
     $this->assertSession()->pageTextContains('Your account has been updated');
+    $this->drupalGet($this->user->toUrl('edit-form'));
 
     // If they save the form without providing a new password then nothing
     // changes.
-    $this->drupalPostForm($this->user->toUrl('edit-form'), [
+    $this->submitForm([
       'pass[pass1]' => 'letmein-new',
       'pass[pass2]' => 'letmein-new',
     ], 'Save');
@@ -74,8 +77,9 @@ class EmailFlowUserEditTest extends CognitoTestBase {
    * Test updating the users email from the UI.
    */
   public function testUpdateUserEmail() {
+    $this->drupalGet($this->user->toUrl('edit-form'));
     // Update the users email address.
-    $this->drupalPostForm($this->user->toUrl('edit-form'), [
+    $this->submitForm([
       'current_pass' => 'letmein',
       'mail' => $new_email = 'new-email@example.com',
     ], 'Save');
diff --git a/tests/src/Kernel/CognitoTokenTest.php b/tests/src/Kernel/CognitoTokenTest.php
index 4a699a0..f179cbc 100644
--- a/tests/src/Kernel/CognitoTokenTest.php
+++ b/tests/src/Kernel/CognitoTokenTest.php
@@ -46,7 +46,7 @@ class CognitoTokenTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installSchema('user', ['users_data']);
     $this->userData = $this->container->get('user.data');
diff --git a/tests/src/Kernel/Email/LoginFormTest.php b/tests/src/Kernel/Email/LoginFormTest.php
index 253d692..84d5eac 100644
--- a/tests/src/Kernel/Email/LoginFormTest.php
+++ b/tests/src/Kernel/Email/LoginFormTest.php
@@ -30,7 +30,7 @@ class LoginFormTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
     $this->installSchema('system', ['sequences']);
diff --git a/tests/src/Traits/RegisterFormHelper.php b/tests/src/Traits/RegisterFormHelper.php
index bcfd43a..fdf2a5e 100644
--- a/tests/src/Traits/RegisterFormHelper.php
+++ b/tests/src/Traits/RegisterFormHelper.php
@@ -94,7 +94,7 @@ trait RegisterFormHelper {
   /**
    * Returns a stub translation manager that just returns the passed string.
    *
-   * @return \PHPUnit_Framework_MockObject_MockObject|\Drupal\Core\StringTranslation\TranslationInterface
+   * @return \PHPUnit\Framework\MockObject\MockObject|\Drupal\Core\StringTranslation\TranslationInterface
    *   A mock translation object.
    */
   public function getStringTranslation() {
diff --git a/tests/src/Unit/CognitoFormEventTest.php b/tests/src/Unit/CognitoFormEventTest.php
index 6ef69b0..622c9f6 100644
--- a/tests/src/Unit/CognitoFormEventTest.php
+++ b/tests/src/Unit/CognitoFormEventTest.php
@@ -23,7 +23,7 @@ class CognitoFormEventTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->formState = $this->createMock(FormStateInterface::class);
   }
diff --git a/tests/src/Unit/CognitoTest.php b/tests/src/Unit/CognitoTest.php
index 8462190..a8891c9 100644
--- a/tests/src/Unit/CognitoTest.php
+++ b/tests/src/Unit/CognitoTest.php
@@ -20,10 +20,7 @@ class CognitoTest extends UnitTestCase {
    * Test the authorize method.
    */
   public function testAuthorize() {
-    $client = $this->getMockBuilder(CognitoIdentityProviderClient::class)
-      ->setMethods(['adminInitiateAuth'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $client = $this->createMock(CognitoIdentityProviderClient::class);
     $client
       ->method('adminInitiateAuth')
       ->willReturn(new Result([
@@ -48,10 +45,7 @@ class CognitoTest extends UnitTestCase {
    * Test authorize request that throws an error.
    */
   public function testAuthorizeWithError() {
-    $client = $this->getMockBuilder(CognitoIdentityProviderClient::class)
-      ->setMethods(['adminInitiateAuth'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $client = $this->createMock(CognitoIdentityProviderClient::class);
 
     $client
       ->method('adminInitiateAuth')
@@ -68,10 +62,7 @@ class CognitoTest extends UnitTestCase {
    * Test authorize with invalid token.
    */
   public function testAuthorizeWithInvalidToken() {
-    $client = $this->getMockBuilder(CognitoIdentityProviderClient::class)
-      ->setMethods(['adminInitiateAuth'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $client = $this->createMock(CognitoIdentityProviderClient::class);
     $client
       ->method('adminInitiateAuth')
       ->willReturn(new Result([
@@ -97,10 +88,7 @@ class CognitoTest extends UnitTestCase {
    * Test admin respond to challenge.
    */
   public function testAdminRespondToChallenge() {
-    $client = $this->getMockBuilder(CognitoIdentityProviderClient::class)
-      ->setMethods(['adminRespondToAuthChallenge'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $client = $this->createMock(CognitoIdentityProviderClient::class);
     $client
       ->method('adminRespondToAuthChallenge')
       ->willReturn([]);
@@ -115,10 +103,7 @@ class CognitoTest extends UnitTestCase {
    * Call any method but trigger an exception to ensure it's wrapped correctly.
    */
   public function testWrapPassesThroughException() {
-    $client = $this->getMockBuilder(CognitoIdentityProviderClient::class)
-      ->setMethods(['signUp'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $client = $this->createMock(CognitoIdentityProviderClient::class);
     $client
       ->method('signUp')
       ->willThrowException(new \Exception('Failed to sign up'));
@@ -134,10 +119,7 @@ class CognitoTest extends UnitTestCase {
    * Test admin initiate auth with a challenge.
    */
   public function testWrapHandlesChallenges() {
-    $client = $this->getMockBuilder(CognitoIdentityProviderClient::class)
-      ->setMethods(['adminInitiateAuth'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $client = $this->createMock(CognitoIdentityProviderClient::class);
     $client
       ->method('adminInitiateAuth')
       ->willReturn(new Result([
diff --git a/tests/src/Unit/CognitoTokenTest.php b/tests/src/Unit/CognitoTokenTest.php
index 8d7461d..305c77e 100644
--- a/tests/src/Unit/CognitoTokenTest.php
+++ b/tests/src/Unit/CognitoTokenTest.php
@@ -55,7 +55,7 @@ class CognitoTokenTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->userData = $this->createMock(UserDataInterface::class);
     $this->cognito = $this->createMock(CognitoInterface::class);
