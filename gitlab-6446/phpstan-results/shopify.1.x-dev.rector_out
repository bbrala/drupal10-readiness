modules/contrib/shopify/shopify.install
modules/contrib/shopify/src/Controller/ShopifyBuyButtonController.php
modules/contrib/shopify/src/Form/ShopifyWebhooksAdminForm.php
modules/contrib/shopify/tests/modules/shopify_test/shopify_test.install
modules/contrib/shopify/tests/src/Functional/SmokeTest.php
modules/contrib/shopify/shopify.module
modules/contrib/shopify/tests/src/Functional/SyncTest.php
modules/contrib/shopify/src/Controller/ShopifyRedirect.php
modules/contrib/shopify/tests/src/FunctionalJavascript/ShopifyBuyButtonTest.php
modules/contrib/shopify/src/Plugin/Block/ShopifyCartBlock.php
modules/contrib/shopify/src/Controller/ShopifyWebhook.php
modules/contrib/shopify/src/Plugin/Field/FieldFormatter/ShopifyPriceFormatter.php
modules/contrib/shopify/src/Entity/Form/ShopifyProductDeleteForm.php
modules/contrib/shopify/src/Plugin/Field/FieldFormatter/ShopifyVariantTitleFormatter.php
modules/contrib/shopify/src/Entity/Form/ShopifyProductForm.php
modules/contrib/shopify/src/Plugin/Field/FieldFormatter/ShopifyWeightFormatter.php
modules/contrib/shopify/src/Plugin/views/argument/ShopifyCollectionsArgument.php
modules/contrib/shopify/src/Entity/Form/ShopifyProductSettingsForm.php
modules/contrib/shopify/src/Entity/Form/ShopifyProductVariantDeleteForm.php
modules/contrib/shopify/src/Entity/Form/ShopifyProductVariantForm.php
modules/contrib/shopify/src/Entity/Form/ShopifyProductVariantSettingsForm.php
modules/contrib/shopify/src/Entity/ShopifyEntityTrait.php
modules/contrib/shopify/src/Plugin/views/argument/ShopifyTagsArgument.php
modules/contrib/shopify/src/Entity/ShopifyProduct.php
modules/contrib/shopify/src/Plugin/views/filter/ShopifyCollectionsFilter.php
modules/contrib/shopify/src/Plugin/views/filter/ShopifyTagsFilter.php
modules/contrib/shopify/src/ShopifyProductAccessControlHandler.php
modules/contrib/shopify/src/ShopifyProductInterface.php
modules/contrib/shopify/src/ShopifyProductListBuilder.php
modules/contrib/shopify/src/ShopifyProductVariantAccessControlHandler.php
modules/contrib/shopify/src/ShopifyProductVariantInterface.php
modules/contrib/shopify/src/ShopifyProductVariantListBuilder.php
modules/contrib/shopify/src/ShopifyProductViewBuilder.php
modules/contrib/shopify/src/ShopifyProductViewsData.php
modules/contrib/shopify/src/Utility/ShopifyBuyButtonUtility.php
modules/contrib/shopify/shopify.post_update.php
modules/contrib/shopify/shopify_product.page.inc
modules/contrib/shopify/shopify_product_variant.page.inc
modules/contrib/shopify/src/Batch/ShopifyCollectionBatch.php
modules/contrib/shopify/src/Entity/ShopifyProductVariant.php
modules/contrib/shopify/src/Batch/ShopifyProductBatch.php
modules/contrib/shopify/src/Command/ShopifyCommand.php
modules/contrib/shopify/src/Entity/ShopifyProductVariantViewsData.php
modules/contrib/shopify/src/Entity/ShopifyProductViewsData.php
modules/contrib/shopify/src/Event/ShopifyTermRedirectSubscriber.php
modules/contrib/shopify/src/Event/ShopifyWebhookEvent.php
modules/contrib/shopify/src/Event/ShopifyWebhookSubscriber.php
modules/contrib/shopify/src/Form/ShopifyApiAdminForm.php
modules/contrib/shopify/src/Form/ShopifySettingsAdminForm.php
modules/contrib/shopify/src/Form/ShopifySyncAdminForm.php

6 files with changes
====================

1) modules/contrib/shopify/tests/src/Functional/SyncTest.php:29

    ---------- begin diff ----------
@@ @@
     $this->drupalGet('/admin/config/system/shopify/sync');
     $this->assertSession()->statusCodeEquals(200);

-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'num_per_batch' => 10,
       'delete_products_first' => FALSE,
       'force_update' => TRUE,
     ], 'Start Products Sync');

-    $this->assertText('Synced 2 products');
+    $this->assertSession()->pageTextContains('Synced 2 products');

     $product = \Drupal::entityTypeManager()->getStorage('shopify_product')->load(1);
     $this->assertEquals(
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/shopify/tests/src/Functional/SmokeTest.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Make sure to complete the normal setup steps first.
     parent::setUp();

@@ @@
     $this->assertSession()->statusCodeEquals(200);

     // Confirm that the front page contains the standard text.
-    $this->assertText('Welcome to Drupal');
+    $this->assertSession()->pageTextContains('Welcome to Drupal');
   }

   /**
@@ @@

     $this->drupalGet('/admin/config/system/shopify');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Shopify Store Settings');
+    $this->assertSession()->pageTextContains('Shopify Store Settings');

   }

@@ @@

     $this->drupalGet('/admin/config/system/shopify_api');
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Shopify API Settings');
+    $this->assertSession()->pageTextContains('Shopify API Settings');

   }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/shopify/shopify.module:708

    ---------- begin diff ----------
@@ @@
  *   Remote image URL for the collection image.
  */
 function shopify_collection_save_image(Term $term, $image_url) {
-  $directory = file_build_uri('shopify_images');
+  $directory = \Drupal::service('stream_wrapper_manager')->normalizeUri(\Drupal::config('system.file')->get('default_scheme') . ('://' . 'shopify_images'));
   if (!\Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY)) {
     // If our directory doesn't exist and can't be created, use the default.
     $directory = NULL;
    ----------- end diff -----------

Applied rules:
 * FileBuildUriRector
 * ArgumentRemoverRector


4) modules/contrib/shopify/src/Event/ShopifyWebhookEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shopify\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Class ShopifyWebhookEvent.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/shopify/src/Event/ShopifyTermRedirectSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shopify\Event;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\shopify\Entity\ShopifyProduct;
 use Drupal\taxonomy\Entity\Term;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
    *
    * @todo: Not sure this is the best way of doing things.
    */
-  public function checkForRedirection(GetResponseEvent $event) {
+  public function checkForRedirection(RequestEvent $event) {
     if (!($term = $event->getRequest()->get('taxonomy_term'))) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


6) modules/contrib/shopify/src/Entity/ShopifyEntityTrait.php:23

    ---------- begin diff ----------
@@ @@
    * Sets up product image.
    */
   public static function setupProductImage($image_url) {
-    $directory = file_build_uri('shopify_images');
+    $directory = \Drupal::service('stream_wrapper_manager')->normalizeUri(\Drupal::config('system.file')->get('default_scheme') . ('://' . 'shopify_images'));
     if (!\Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY)) {
       // If our directory doesn't exist and can't be created, use the default.
       $directory = NULL;
    ----------- end diff -----------

Applied rules:
 * FileBuildUriRector
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 6 files have been changed by Rector                                       

