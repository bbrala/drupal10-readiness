modules/contrib/box/box.install
modules/contrib/box/modules/box_clone/box_clone.module
modules/contrib/box/modules/box_clone/src/Plugin/views/field/CloneLink.php
modules/contrib/box/src/Entity/BoxInterface.php
modules/contrib/box/src/Plugin/views/argument/Id.php
modules/contrib/box/src/Plugin/views/wizard/BoxRevision.php
modules/contrib/box/src/Entity/BoxType.php
modules/contrib/box/box.module
modules/contrib/box/box.page.inc
modules/contrib/box/src/Entity/BoxTypeInterface.php
modules/contrib/box/modules/box_clone/box_clone.views.inc
modules/contrib/box/modules/box_clone/src/BoxClonePermissions.php
modules/contrib/box/src/Form/BoxDeleteForm.php
modules/contrib/box/src/Plugin/views/argument/Type.php
modules/contrib/box/src/Routing/BoxRouteProvider.php
modules/contrib/box/modules/insert_box/src/Plugin/Filter/FilterBox.php
modules/contrib/box/src/Form/BoxDeleteMultiple.php
modules/contrib/box/src/Plugin/views/argument/UidRevision.php
modules/contrib/box/src/Form/BoxForm.php
modules/contrib/box/src/Plugin/views/argument/Vid.php
modules/contrib/box/modules/box_clone/src/Controller/BoxCloneAccess.php
modules/contrib/box/modules/box_clone/src/Controller/BoxCloneController.php
modules/contrib/box/src/Plugin/views/field/BioxBulkForm.php
modules/contrib/box/tests/src/Functional/EntityTest.php
modules/contrib/box/modules/box_clone/src/Entity/BoxCloneEntityFormBuilder.php
modules/contrib/box/src/Plugin/views/field/BoxBulkForm.php
modules/contrib/box/src/Plugin/views/field/BoxRevisionLink.php
modules/contrib/box/modules/insert_box/tests/src/Functional/BoxPlacementTest.php
modules/contrib/box/src/Plugin/views/field/BoxRevisionLinkDelete.php
modules/contrib/box/src/Plugin/views/field/BoxRevisionLinkRevert.php
modules/contrib/box/src/Plugin/views/field/RevisionLink.php
modules/contrib/box/src/Form/BoxRevisionDeleteForm.php
modules/contrib/box/src/Plugin/views/field/RevisionLinkDelete.php
modules/contrib/box/src/Plugin/views/field/RevisionLinkRevert.php
modules/contrib/box/src/Plugin/views/filter/BioxStatus.php
modules/contrib/box/src/Plugin/views/filter/BoxStatus.php
modules/contrib/box/src/Plugin/views/filter/BoxUidRevision.php
modules/contrib/box/src/Form/BoxRevisionRevertForm.php
modules/contrib/box/src/Plugin/views/filter/Status.php
modules/contrib/box/tests/src/Functional/LoadTest.php
modules/contrib/box/src/Plugin/views/filter/UidRevision.php
modules/contrib/box/modules/box_clone/src/Form/BoxCloneEntitySettingsForm.php
modules/contrib/box/src/Plugin/views/wizard/Biox.php
modules/contrib/box/src/BioxStorage.php
modules/contrib/box/tests/src/Functional/TypeTest.php
modules/contrib/box/src/BioxViewsData.php
modules/contrib/box/tests/src/Kernel/BoxValidationTest.php
modules/contrib/box/src/Form/BoxRevisionRevertTranslationForm.php
modules/contrib/box/src/Form/BoxTypeDeleteForm.php
modules/contrib/box/src/BoxAccessControlHandler.php
modules/contrib/box/src/Form/BoxTypeForm.php
modules/contrib/box/modules/box_clone/src/Form/BoxCloneEntitySettingsFormInterface.php
modules/contrib/box/modules/box_clone/src/Form/BoxCloneForm.php
modules/contrib/box/src/Plugin/views/wizard/BioxRevision.php
modules/contrib/box/src/BoxListBuilder.php
modules/contrib/box/src/BoxPermissions.php
modules/contrib/box/src/Plugin/views/wizard/Box.php
modules/contrib/box/tests/src/Traits/BoxCreationTrait.php
modules/contrib/box/modules/box_clone/src/Form/BoxCloneParagraphSettingsForm.php
modules/contrib/box/modules/box_clone/src/Form/BoxCloneSettingForm.php
modules/contrib/box/src/BoxStorage.php
modules/contrib/box/tests/src/Traits/BoxTypeCreationTrait.php
modules/contrib/box/src/BoxStorageInterface.php
modules/contrib/box/src/BoxStorageSchema.php
modules/contrib/box/src/Plugin/Block/BoxView.php
modules/contrib/box/src/BoxTranslationHandler.php
modules/contrib/box/src/BoxTypeListBuilder.php
modules/contrib/box/src/BoxViewBuilder.php
modules/contrib/box/src/Plugin/views/argument/BioxId.php
modules/contrib/box/src/BoxViewsData.php
modules/contrib/box/src/Plugin/views/argument/BioxType.php
modules/contrib/box/src/Plugin/views/argument/BioxUidRevision.php
modules/contrib/box/src/Controller/BoxController.php
modules/contrib/box/src/Plugin/views/argument/BioxVid.php
modules/contrib/box/src/Plugin/views/argument/BoxId.php
modules/contrib/box/src/Plugin/views/argument/BoxType.php
modules/contrib/box/src/Plugin/views/argument/BoxUidRevision.php
modules/contrib/box/src/Plugin/views/argument/BoxVid.php
modules/contrib/box/src/Entity/Biox.php
modules/contrib/box/src/Entity/BioxType.php
modules/contrib/box/src/Entity/Box.php

5 files with changes
====================

1) modules/contrib/box/tests/src/Kernel/BoxValidationTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * Set the default field storage backend for fields created during tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

    $this->installEntitySchema('box');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/box/tests/src/Functional/TypeTest.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer box entities']);
   }
@@ @@
     // Add box type.
     $edit = [];
     $edit['label'] = $box_type_label = $this->randomString();
-    $edit['id'] = $box_type_id = Unicode::strtolower($this->randomMachineName());
+    $edit['id'] = $box_type_id = mb_strtolower($this->randomMachineName());
     $edit['title_label'] = $this->randomString();
-    $this->drupalPostForm('admin/structure/box-types/add', $edit, t('Save'));
+    $this->drupalGet('admin/structure/box-types/add');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains(t('Created the %label Box type.', [
       '%label' => $box_type_label,
     ]));
@@ @@
     $this->assertSession()->pageTextContains($box_type_label);
     $this->drupalLogout();
     $this->drupalLogin($this->user);
+    $this->drupalGet("admin/structure/box-types/manage/{$box_type_id}/delete");

     // Delete box type.
-    $this->drupalPostForm("admin/structure/box-types/manage/{$box_type_id}/delete", [], t('Delete'));
+    $this->submitForm([], t('Delete'));
     $this->assertSession()->responseContains(t('The @entity-type %label has been deleted.', [
       '@entity-type' => 'box type',
       '%label' => $box_type_label,
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * UnicodeStrtolowerRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/box/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/box/tests/src/Functional/EntityTest.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->userAdmin = $this->drupalCreateUser([
       'access box overview',
@@ @@
     // Add box entity.
     $edit = [];
     $edit['title[0][value]'] = $box_label = $this->randomString();
-    $edit['machine_name[0][value]'] = $box_machine_name = Unicode::strtolower($this->randomMachineName());
+    $edit['machine_name[0][value]'] = $box_machine_name = mb_strtolower($this->randomMachineName());
     $edit['field_body[0][value]'] = $box_text = $this->randomString(50);
-    $this->drupalPostForm('box/add/default', $edit, t('Save'));
+    $this->drupalGet('box/add/default');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains(t('@type box %title has been created.', [
       '@type' => BoxType::load('default')->label(),
       '%title' => $box_label,
@@ @@
     $edit = [];
     $edit['title[0][value]'] = $box_label_updated = $this->randomString();
     $edit['field_body[0][value]'] = $box_text_new = $this->randomString(50);
-    $this->drupalPostForm("box/{$box_id}", $edit, t('Save'));
+    $this->drupalGet("box/{$box_id}");
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains(t('Box %title has been updated.', [
       '%title' => $box_label_updated,
     ]));
+    $this->drupalGet("box/{$box_id}/delete");

     // Delete box entity.
-    $this->drupalPostForm("box/{$box_id}/delete", [], t('Delete'));
+    $this->submitForm([], t('Delete'));
     $this->assertSession()->responseContains(t('The @entity-type %label has been deleted.', [
       '@entity-type' => 'box',
       '%label' => $box_label_updated,
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * UnicodeStrtolowerRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/box/src/Form/BoxRevisionRevertForm.php:32

    ---------- begin diff ----------
@@ @@
    *
    * @var \Drupal\box\BoxStorageInterface
    */
-  protected \Drupal\box\BoxStorageInterface|EntityStorageInterface $boxStorage;
+  protected BoxStorageInterface|EntityStorageInterface $boxStorage;

   /**
    * The Box type storage.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/box/tests/src/Traits/BoxTypeCreationTrait.php" file,  
         due to:                                                                
         "System error: "Method assertEqual() was not found in reflection of    
         class Drupal\Tests\box\Traits\BoxTypeCreationTrait."                   
         Run Rector with "--debug" option and post the report here:             
         https://github.com/rectorphp/rector/issues/new". On line: 419          

