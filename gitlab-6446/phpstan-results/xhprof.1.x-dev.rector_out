modules/contrib/xhprof/modules/xhprof_mongodb/MongodbXHProfRuns.inc
modules/contrib/xhprof/src/XHProfLib/Aggregator.php
modules/contrib/xhprof/modules/xhprof_mongodb/xhprof_mongodb.install
modules/contrib/xhprof/modules/xhprof_mongodb/xhprof_mongodb.module
modules/contrib/xhprof/src/Compiler/StoragePass.php
modules/contrib/xhprof/src/Controller/XHProfController.php
modules/contrib/xhprof/src/XHProfLib/Parser/BaseParser.php
modules/contrib/xhprof/src/DataCollector/XHProfDataCollector.php
modules/contrib/xhprof/src/EventSubscriber/XHProfEventSubscriber.php
modules/contrib/xhprof/src/XHProfLib/Parser/DiffParser.php
modules/contrib/xhprof/src/XHProfLib/Parser/Parser.php
modules/contrib/xhprof/src/XHProfLib/Parser/ParserInterface.php
modules/contrib/xhprof/src/XHProfLib/Report/DiffReport.php
modules/contrib/xhprof/src/XHProfLib/Report/Report.php
modules/contrib/xhprof/src/Extension/ExtensionInterface.php
modules/contrib/xhprof/src/Extension/TidewaysExtension.php
modules/contrib/xhprof/src/Extension/TidewaysXHProfExtension.php
modules/contrib/xhprof/src/Extension/UprofilerExtension.php
modules/contrib/xhprof/src/Extension/XHProfExtension.php
modules/contrib/xhprof/src/Form/ConfigForm.php
modules/contrib/xhprof/src/XHProfLib/Report/ReportConstants.php
modules/contrib/xhprof/src/XHProfLib/Report/ReportEngine.php
modules/contrib/xhprof/src/XHProfLib/Report/ReportInterface.php
modules/contrib/xhprof/src/XHProfLib/Run.php
modules/contrib/xhprof/src/XHProfLib/Storage/FileStorage.php
modules/contrib/xhprof/src/Profiler.php
modules/contrib/xhprof/src/ProfilerInterface.php
modules/contrib/xhprof/src/RequestMatcher/XHProfRequestMatcher.php
modules/contrib/xhprof/src/XHProfLib/Storage/StorageInterface.php
modules/contrib/xhprof/src/XHProfLib/Storage/StorageManager.php
modules/contrib/xhprof/src/XHProfLib/Symbol/Symbol.php
modules/contrib/xhprof/src/Routing/RunConverter.php
modules/contrib/xhprof/src/StorageFactory.php
modules/contrib/xhprof/src/XhprofServiceProvider.php
modules/contrib/xhprof/tests/src/Functional/RoutingTest.php
modules/contrib/xhprof/tests/src/Kernel/BaseRoutingTest.php
modules/contrib/xhprof/xhprof.drush.inc

1 file with changes
===================

1) modules/contrib/xhprof/src/EventSubscriber/XHProfEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\xhprof\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\xhprof\ProfilerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Enables profiling if allowed.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     if ($this->profiler->canEnable($event->getRequest())) {
       $this->profiler->enable();
     }
@@ @@
   /**
    * Renders link to the finished run.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     if ($this->profiler->isEnabled()) {
       $this->xhprofRunId = $this->profiler->createRunId();

@@ @@
     $pos = mb_strripos($content, '</body>');

     if (FALSE !== $pos) {
-      $output = '<div class="xhprof-ui">' . $this->profiler->link($xhprofRunId) . '</div>';
+      $output = '<div class="xhprof-ui">' . $this->profiler->toLink($xhprofRunId)->toString() . '</div>';
       $content = mb_substr($content, 0, $pos) . $output . mb_substr($content, $pos);
       $response->setContent($content);
     }
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 1 file has been changed by Rector                                         

