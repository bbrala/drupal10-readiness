diff --git a/includes/webform.theme.template.inc b/includes/webform.theme.template.inc
index 9759452ee..fc7fc9e06 100644
--- a/includes/webform.theme.template.inc
+++ b/includes/webform.theme.template.inc
@@ -938,7 +938,7 @@ function template_preprocess_webform_element_managed_file(array &$variables) {
   if (!empty($variables['file'])) {
     /** @var \Drupal\file\FileInterface $file */
     $file = $variables['file'];
-    $variables['uri'] = file_create_url($file->getFileUri());
+    $variables['uri'] = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     $variables['extension'] = strtolower(pathinfo($variables['uri'], PATHINFO_EXTENSION));
     $variables['type'] = \Drupal::service('file.mime_type.guesser')->guess($variables['uri']);
     $variables['file_link'] = [
@@ -1003,7 +1003,7 @@ function template_preprocess_webform_element_image_file(array &$variables) {
     $format = $variables['format'];
 
     $uri = $file->getFileUri();
-    $url = Url::fromUri(file_create_url($uri));
+    $url = \Drupal::service('file_url_generator')->generate($uri);
 
     $extension = pathinfo($uri, PATHINFO_EXTENSION);
     $is_image = in_array($extension, ['gif', 'png', 'jpg', 'jpeg']);
diff --git a/modules/webform_access/tests/src/Functional/WebformAccessBrowserTestBase.php b/modules/webform_access/tests/src/Functional/WebformAccessBrowserTestBase.php
index 57d227fab..72342c462 100644
--- a/modules/webform_access/tests/src/Functional/WebformAccessBrowserTestBase.php
+++ b/modules/webform_access/tests/src/Functional/WebformAccessBrowserTestBase.php
@@ -49,7 +49,7 @@ abstract class WebformAccessBrowserTestBase extends WebformNodeBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create webform nodes.
diff --git a/modules/webform_attachment/src/Element/WebformAttachmentBase.php b/modules/webform_attachment/src/Element/WebformAttachmentBase.php
index 220c45c70..41e7297ab 100644
--- a/modules/webform_attachment/src/Element/WebformAttachmentBase.php
+++ b/modules/webform_attachment/src/Element/WebformAttachmentBase.php
@@ -111,7 +111,7 @@ abstract class WebformAttachmentBase extends RenderElement implements WebformAtt
    * {@inheritdoc}
    */
   public static function getFileMimeType(array $element, WebformSubmissionInterface $webform_submission) {
-    /** @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $file_mime_type_guesser */
+    /** @var \Symfony\Component\Mime\MimeTypesInterface $file_mime_type_guesser */
     $file_mime_type_guesser = \Drupal::service('file.mime_type.guesser');
     $file_name = static::getFileName($element, $webform_submission);
     return $file_mime_type_guesser->guess($file_name);
diff --git a/modules/webform_attachment/src/Element/WebformAttachmentUrl.php b/modules/webform_attachment/src/Element/WebformAttachmentUrl.php
index 2cdd89bb0..3417a975a 100644
--- a/modules/webform_attachment/src/Element/WebformAttachmentUrl.php
+++ b/modules/webform_attachment/src/Element/WebformAttachmentUrl.php
@@ -32,7 +32,7 @@ class WebformAttachmentUrl extends WebformAttachmentBase {
       $token_manager = \Drupal::service('webform.token_manager');
       $url = $token_manager->replace($url, $webform_submission);
       // Url can be a URI.
-      $url = file_create_url($url) ?: $url;
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($url) ?: $url;
       // Prepend scheme and host to root relative path.
       if (strpos($url, '/') === 0) {
         $url = \Drupal::request()->getSchemeAndHttpHost() . $url;
diff --git a/modules/webform_attachment/tests/src/Functional/WebformAttachmentTest.php b/modules/webform_attachment/tests/src/Functional/WebformAttachmentTest.php
index 1f13407d3..6cb54cd6b 100644
--- a/modules/webform_attachment/tests/src/Functional/WebformAttachmentTest.php
+++ b/modules/webform_attachment/tests/src/Functional/WebformAttachmentTest.php
@@ -250,12 +250,12 @@ class WebformAttachmentTest extends WebformBrowserTestBase {
     // Check that attachment is enabled.
     $this->postSubmission($webform_attachment_states, ['attach' => TRUE]);
     $sent_email = $this->getLastEmail();
-    $this->assert(isset($sent_email['params']['attachments'][0]), 'Attachment enabled via #states');
+    $this->assertTrue(isset($sent_email['params']['attachments'][0]), 'Attachment enabled via #states');
 
     // Check that attachment is disabled.
     $this->postSubmission($webform_attachment_states, ['attach' => FALSE]);
     $sent_email = $this->getLastEmail();
-    $this->assert(!isset($sent_email['params']['attachments'][0]), 'Attachment disabled via #states');
+    $this->assertTrue(!isset($sent_email['params']['attachments'][0]), 'Attachment disabled via #states');
   }
 
 }
diff --git a/modules/webform_bootstrap/webform_bootstrap.module b/modules/webform_bootstrap/webform_bootstrap.module
index 87ac8e6c4..6a0de992b 100644
--- a/modules/webform_bootstrap/webform_bootstrap.module
+++ b/modules/webform_bootstrap/webform_bootstrap.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\bootstrap\Bootstrap;
 /**
  * @file
  * Helps support Webform to Bootstrap integration.
@@ -52,7 +53,7 @@ function webform_bootstrap_webform_element_alter(array &$element, FormStateInter
   // @see \Drupal\bootstrap\Utility\Element::smartDescription
   static $smart_description_enabled;
   if (!isset($smart_description_enabled)) {
-    $theme = \Drupal\bootstrap\Bootstrap::getTheme();
+    $theme = Bootstrap::getTheme();
     $smart_description_enabled = $theme->getSetting('tooltip_enabled') && $theme->getSetting('forms_smart_descriptions');
   }
 
@@ -128,11 +129,11 @@ function webform_bootstrap_preprocess_input(&$variables) {
     $element['#icon_only'] = TRUE;
     if (strpos($variables['attributes']['src'], '/webform/images/icons/plus.svg') !== FALSE) {
       $element['#title'] = t('Add');
-      $element['#icon'] = \Drupal\bootstrap\Bootstrap::glyphicon('plus-sign');
+      $element['#icon'] = Bootstrap::glyphicon('plus-sign');
     }
     elseif (strpos($variables['attributes']['src'], '/webform/images/icons/minus.svg') !== FALSE) {
       $element['#title'] = t('Remove');
-      $element['#icon'] = \Drupal\bootstrap\Bootstrap::glyphicon('minus-sign');
+      $element['#icon'] = Bootstrap::glyphicon('minus-sign');
     }
   }
 }
diff --git a/modules/webform_entity_print/src/EventSubscriber/WebformEntityPrintRequestSubscriber.php b/modules/webform_entity_print/src/EventSubscriber/WebformEntityPrintRequestSubscriber.php
index 9373e3f99..723bf46df 100644
--- a/modules/webform_entity_print/src/EventSubscriber/WebformEntityPrintRequestSubscriber.php
+++ b/modules/webform_entity_print/src/EventSubscriber/WebformEntityPrintRequestSubscriber.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\webform_entity_print\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\HttpKernelInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
 
@@ -33,7 +33,7 @@ class WebformEntityPrintRequestSubscriber implements EventSubscriberInterface {
   /**
    * Set custom webform entity print submission view mode.
    */
-  public function requestSetViewMode(GetResponseEvent $event) {
+  public function requestSetViewMode(RequestEvent $event) {
     if ($event->getRequestType() !== HttpKernelInterface::MASTER_REQUEST) {
       return;
     }
diff --git a/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php b/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php
index 4b825040f..3bb8d03f3 100644
--- a/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php
+++ b/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php
@@ -79,12 +79,12 @@ body {
     $assert_session->responseContains('&' . UrlHelper::buildQuery($image_style_token_query));
 
     // Check signature private image.
-    $this->assertRaw('<label>signature_private</label>');
-    $this->assertRaw("/webform/test_entity_print/signature_private/$sid/signature-");
+    $this->assertSession()->responseContains('<label>signature_private</label>');
+    $this->assertSession()->responseContains("/webform/test_entity_print/signature_private/$sid/signature-");
 
     // Check signature public image.
-    $this->assertRaw('<label>signature_public</label>');
-    $this->assertRaw("/webform/test_entity_print/signature_public/$sid/signature-");
+    $this->assertSession()->responseContains('<label>signature_public</label>');
+    $this->assertSession()->responseContains("/webform/test_entity_print/signature_public/$sid/signature-");
 
     // Check image access.
     $this->drupalLogout();
diff --git a/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTestBase.php b/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTestBase.php
index bbc1923b1..29f7e26e0 100644
--- a/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTestBase.php
+++ b/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTestBase.php
@@ -21,7 +21,7 @@ abstract class WebformEntityPrintFunctionalTestBase extends WebformBrowserTestBa
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Use test print engine.
diff --git a/modules/webform_node/src/ProxyClass/WebformNodeUninstallValidator.php b/modules/webform_node/src/ProxyClass/WebformNodeUninstallValidator.php
index 6615f0924..47c42aff2 100644
--- a/modules/webform_node/src/ProxyClass/WebformNodeUninstallValidator.php
+++ b/modules/webform_node/src/ProxyClass/WebformNodeUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\webform_node\ProxyClass {
 
+  use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+  use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+  use Symfony\Component\DependencyInjection\ContainerInterface;
+  use Drupal\Core\StringTranslation\TranslationInterface;
   /**
    * Provides a proxy class for \Drupal\webform_node\WebformNodeUninstallValidator.
    *
    * @see \Drupal\Component\ProxyBuilder
    */
-  class WebformNodeUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+  class WebformNodeUninstallValidator implements ModuleUninstallValidatorInterface
   {
 
-    use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use DependencySerializationTrait;
 
     /**
      * The id of the original proxied service.
@@ -46,7 +50,7 @@ namespace Drupal\webform_node\ProxyClass {
      * @param string $drupal_proxy_original_service_id
      *   The service ID of the original service.
      */
-    public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+    public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
     {
       $this->container = $container;
       $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\webform_node\ProxyClass {
     /**
      * {@inheritdoc}
      */
-    public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+    public function setStringTranslation(TranslationInterface $translation)
     {
       return $this->lazyLoadItself()->setStringTranslation($translation);
     }
diff --git a/modules/webform_node/tests/src/Functional/Access/WebformNodeAccessPermissionsTest.php b/modules/webform_node/tests/src/Functional/Access/WebformNodeAccessPermissionsTest.php
index 4e20d7d82..2520f4278 100644
--- a/modules/webform_node/tests/src/Functional/Access/WebformNodeAccessPermissionsTest.php
+++ b/modules/webform_node/tests/src/Functional/Access/WebformNodeAccessPermissionsTest.php
@@ -265,8 +265,9 @@ class WebformNodeAccessPermissionsTest extends WebformNodeBrowserTestBase {
 
     // Create a wizard submission.
     $this->drupalLogin($submission_own_account);
-    $this->drupalPostForm('/node/' . $wizard_nid, [], 'Next >');
-    $this->drupalPostForm(NULL, [], 'Submit');
+    $this->drupalGet('/node/' . $wizard_nid);
+    $this->submitForm([], 'Next >');
+    $this->submitForm([], 'Submit');
     $wizard_sid = $this->getLastSubmissionId($wizard_webform);
     $this->drupalLogout();
 
diff --git a/modules/webform_node/tests/src/Functional/WebformNodeResultsTest.php b/modules/webform_node/tests/src/Functional/WebformNodeResultsTest.php
index 82761592d..e31e3dd81 100644
--- a/modules/webform_node/tests/src/Functional/WebformNodeResultsTest.php
+++ b/modules/webform_node/tests/src/Functional/WebformNodeResultsTest.php
@@ -24,7 +24,7 @@ class WebformNodeResultsTest extends WebformNodeBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Place blocks.
diff --git a/modules/webform_node/tests/src/Functional/WebformNodeTest.php b/modules/webform_node/tests/src/Functional/WebformNodeTest.php
index b55b51a7b..6089ef01a 100644
--- a/modules/webform_node/tests/src/Functional/WebformNodeTest.php
+++ b/modules/webform_node/tests/src/Functional/WebformNodeTest.php
@@ -31,7 +31,7 @@ class WebformNodeTest extends WebformNodeBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Place webform test blocks.
diff --git a/modules/webform_node/tests/src/Kernel/WebformNodeUninstallTest.php b/modules/webform_node/tests/src/Kernel/WebformNodeUninstallTest.php
index 771d41f4a..7378f9ae8 100644
--- a/modules/webform_node/tests/src/Kernel/WebformNodeUninstallTest.php
+++ b/modules/webform_node/tests/src/Kernel/WebformNodeUninstallTest.php
@@ -26,7 +26,7 @@ class WebformNodeUninstallTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
     $this->installEntitySchema('node');
diff --git a/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php b/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php
index 4a32b436c..a64cf18bb 100644
--- a/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php
+++ b/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php
@@ -13,19 +13,16 @@ class WebformNodeUninstallValidatorTest extends UnitTestCase {
   /**
    * A mock webform node uninstall validator.
    *
-   * @var \Drupal\webform_node\WebformNodeUninstallValidator|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\webform_node\WebformNodeUninstallValidator|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $webformNodeUninstallValidator;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->webformNodeUninstallValidator = $this->getMockBuilder('Drupal\webform_node\WebformNodeUninstallValidator')
-      ->disableOriginalConstructor()
-      ->setMethods(['hasWebformNodes'])
-      ->getMock();
+    $this->webformNodeUninstallValidator = $this->createMock('Drupal\webform_node\WebformNodeUninstallValidator');
     $this->webformNodeUninstallValidator->setStringTranslation($this->getStringTranslationStub());
   }
 
diff --git a/modules/webform_options_limit/tests/src/Functional/WebformOptionsLimitTest.php b/modules/webform_options_limit/tests/src/Functional/WebformOptionsLimitTest.php
index d0c6c4a9e..f28cffd6a 100644
--- a/modules/webform_options_limit/tests/src/Functional/WebformOptionsLimitTest.php
+++ b/modules/webform_options_limit/tests/src/Functional/WebformOptionsLimitTest.php
@@ -90,11 +90,11 @@ class WebformOptionsLimitTest extends WebformBrowserTestBase {
     $assert_session->responseContains('<option value="O">O [0 remaining]</option>');
 
     // Check that table select multiple is NOT available.
-    $this->assertNoFieldById('edit-options-limit-tableselect-multiple-u', 'U');
+    $this->assertSession()->fieldValueNotEquals('edit-options-limit-tableselect-multiple-u', 'U');
     $assert_session->responseContains('<td>U [0 remaining]</td>');
 
     // Check that table select single is available.
-    $this->assertNoFieldById('edit-options-limit-tableselect-multiple-x', 'X');
+    $this->assertSession()->fieldValueNotEquals('edit-options-limit-tableselect-multiple-x', 'X');
     $assert_session->responseContains('<td>X</td>');
     $assert_session->responseContains('<td> [0 remaining]</td>');
 
diff --git a/modules/webform_shortcuts/tests/src/Functional/WebformShortcutsFunctionalTest.php b/modules/webform_shortcuts/tests/src/Functional/WebformShortcutsFunctionalTest.php
index f0c986862..e384fd7e0 100644
--- a/modules/webform_shortcuts/tests/src/Functional/WebformShortcutsFunctionalTest.php
+++ b/modules/webform_shortcuts/tests/src/Functional/WebformShortcutsFunctionalTest.php
@@ -24,7 +24,7 @@ class WebformShortcutsFunctionalTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->placeBlocks();
   }
diff --git a/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php b/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php
index 74eb7faa6..ee4fb4120 100644
--- a/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php
+++ b/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php
@@ -305,7 +305,7 @@ class WebformSubmissionExportImportImporter implements WebformSubmissionExportIm
         $files = $element_plugin->getTargetEntities($element, $webform_submission) ?: [];
         $values = [];
         foreach ($files as $file) {
-          $values[] = file_create_url($file->getFileUri());
+          $values[] = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
         }
         $value = implode(',', $values);
         $record[] = $this->exportValue($value);
@@ -730,7 +730,7 @@ class WebformSubmissionExportImportImporter implements WebformSubmissionExportIm
     $existing_file_uris = [];
     $existing_files = ($webform_submission) ? $element_plugin->getTargetEntities($element, $webform_submission) ?: [] : [];
     foreach ($existing_files as $existing_file) {
-      $existing_file_uri = file_create_url($existing_file->getFileUri());
+      $existing_file_uri = \Drupal::service('file_url_generator')->generateAbsoluteString($existing_file->getFileUri());
       $existing_file_uris[$existing_file_uri] = $existing_file->id();
 
       $existing_file_hash = sha1_file($existing_file->getFileUri());
diff --git a/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.module b/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.module
index 9f513cd01..1340d245d 100644
--- a/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.module
+++ b/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.module
@@ -38,7 +38,7 @@ function webform_submission_export_import_test_form_webform_submission_export_im
       $csv_uri = "public://test_submission_export_import-$file_name.csv";
 
       // Set file URL href as href.
-      $t_args[":href_$file_name"] = file_create_url($csv_uri);
+      $t_args[":href_$file_name"] = \Drupal::service('file_url_generator')->generateAbsoluteString($csv_uri);
 
       // Skip generate test CSV if it exists.
       if (file_exists($csv_uri)) {
@@ -47,7 +47,7 @@ function webform_submission_export_import_test_form_webform_submission_export_im
 
       // Copy CSV file from module to public:// uri.
       $csv_file_path = "$files_path/test_submission_export_import-$file_name.csv";
-      $destination = file_build_uri($file_system->basename($csv_file_path));
+      $destination = \Drupal::service('stream_wrapper_manager')->normalizeUri(\Drupal::config('system.file')->get('default_scheme') . ('://' . $file_system->basename($csv_file_path)));
       $file_system->copy($csv_file_path, $destination, FileSystemInterface::EXISTS_REPLACE);
 
       $contents = file_get_contents($csv_uri);
diff --git a/modules/webform_submission_export_import/tests/src/Functional/WebformSubmissionImportExportFunctionalTest.php b/modules/webform_submission_export_import/tests/src/Functional/WebformSubmissionImportExportFunctionalTest.php
index 3a3cf1a0a..e270bc60b 100644
--- a/modules/webform_submission_export_import/tests/src/Functional/WebformSubmissionImportExportFunctionalTest.php
+++ b/modules/webform_submission_export_import/tests/src/Functional/WebformSubmissionImportExportFunctionalTest.php
@@ -32,7 +32,7 @@ class WebformSubmissionImportExportFunctionalTest extends WebformBrowserTestBase
     $this->drupalLogin($this->rootUser);
 
     $export_csv_uri = 'public://test_submission_export_import-export.csv';
-    $export_csv_url = file_create_url('public://test_submission_export_import-export.csv');
+    $export_csv_url = \Drupal::service('file_url_generator')->generateAbsoluteString('public://test_submission_export_import-export.csv');
 
     $webform = Webform::load('test_submission_export_import');
 
@@ -96,8 +96,8 @@ class WebformSubmissionImportExportFunctionalTest extends WebformBrowserTestBase
     return;
 
     // Deleted the third submission.
-    $file_uri = file_create_url(File::load($submissions[2]->getElementData('file'))->getFileUri());
-    $files_uri = file_create_url(File::load($submissions[2]->getElementData('files')[0])->getFileUri());
+    $file_uri = \Drupal::service('file_url_generator')->generateAbsoluteString(File::load($submissions[2]->getElementData('file'))->getFileUri());
+    $files_uri = \Drupal::service('file_url_generator')->generateAbsoluteString(File::load($submissions[2]->getElementData('files')[0])->getFileUri());
     $submissions[2]->delete();
     unset($submissions[2]);
 
@@ -157,8 +157,8 @@ class WebformSubmissionImportExportFunctionalTest extends WebformBrowserTestBase
 
     $this->drupalLogin($this->rootUser);
 
-    $webform_csv_url = file_create_url('public://test_submission_export_import-webform.csv');
-    $external_csv_url = file_create_url('public://test_submission_export_import-external.csv');
+    $webform_csv_url = \Drupal::service('file_url_generator')->generateAbsoluteString('public://test_submission_export_import-webform.csv');
+    $external_csv_url = \Drupal::service('file_url_generator')->generateAbsoluteString('public://test_submission_export_import-external.csv');
 
     $webform = Webform::load('test_submission_export_import');
 
diff --git a/modules/webform_ui/tests/src/Functional/WebformUiElementPropertiesTest.php b/modules/webform_ui/tests/src/Functional/WebformUiElementPropertiesTest.php
index 49c89316e..84e4fb169 100644
--- a/modules/webform_ui/tests/src/Functional/WebformUiElementPropertiesTest.php
+++ b/modules/webform_ui/tests/src/Functional/WebformUiElementPropertiesTest.php
@@ -37,7 +37,7 @@ class WebformUiElementPropertiesTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create filters.
diff --git a/modules/webform_ui/tests/src/Functional/WebformUiElementTest.php b/modules/webform_ui/tests/src/Functional/WebformUiElementTest.php
index 8005b3db6..7d92c94f3 100644
--- a/modules/webform_ui/tests/src/Functional/WebformUiElementTest.php
+++ b/modules/webform_ui/tests/src/Functional/WebformUiElementTest.php
@@ -29,7 +29,7 @@ class WebformUiElementTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Disable description help icon.
     $this->config('webform.settings')->set('ui.description_help', FALSE)->save();
diff --git a/modules/webform_ui/tests/src/Unit/WebformUiPathProcessorTest.php b/modules/webform_ui/tests/src/Unit/WebformUiPathProcessorTest.php
index d18e309dd..97fc363dc 100644
--- a/modules/webform_ui/tests/src/Unit/WebformUiPathProcessorTest.php
+++ b/modules/webform_ui/tests/src/Unit/WebformUiPathProcessorTest.php
@@ -22,7 +22,7 @@ class WebformUiPathProcessorTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->pathProcessor = new WebformUiPathProcessor();
@@ -44,9 +44,7 @@ class WebformUiPathProcessorTest extends UnitTestCase {
    */
   public function testUnmatchedQueryString() {
     $options = [];
-    $request = $this->getMockBuilder(Request::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $request = $this->createMock(Request::class);
     $request->method('getQueryString')
       ->willReturn('foo');
 
@@ -60,9 +58,7 @@ class WebformUiPathProcessorTest extends UnitTestCase {
    */
   public function testMatchedQueryString() {
     $options = [];
-    $request = $this->getMockBuilder(Request::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $request = $this->createMock(Request::class);
     $request->method('getQueryString')
       ->willReturn('_wrapper_format=drupal_dialog&destination=/admin/structure/webform');
 
diff --git a/src/Controller/WebformResultsExportController.php b/src/Controller/WebformResultsExportController.php
index d7f163fb1..e6cd77e70 100644
--- a/src/Controller/WebformResultsExportController.php
+++ b/src/Controller/WebformResultsExportController.php
@@ -22,7 +22,7 @@ class WebformResultsExportController extends ControllerBase implements Container
   /**
    * The MIME type guesser.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var \Symfony\Component\Mime\MimeTypesInterface
    */
   protected $mimeTypeGuesser;
 
diff --git a/src/Element/WebformEntityTrait.php b/src/Element/WebformEntityTrait.php
index 524be70a2..5e4392507 100644
--- a/src/Element/WebformEntityTrait.php
+++ b/src/Element/WebformEntityTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform\Element;
 
+use Drupal\views\Plugin\EntityReferenceSelection\ViewsSelection;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\OptGroup;
 use Drupal\webform\Utility\WebformOptionsHelper;
@@ -74,7 +75,7 @@ trait WebformEntityTrait {
     // the entity reference's options.
     if (!\Drupal::moduleHandler()->moduleExists('views')
       // phpcs:ignore Drupal.Classes.FullyQualifiedNamespace.UseStatementMissing
-      || !($handler instanceof \Drupal\views\Plugin\EntityReferenceSelection\ViewsSelection)) {
+      || !($handler instanceof ViewsSelection)) {
       $options = static::translateOptions($options, $element);
     }
 
diff --git a/src/Element/WebformHtmlEditor.php b/src/Element/WebformHtmlEditor.php
index a25193f30..f2a9d2710 100644
--- a/src/Element/WebformHtmlEditor.php
+++ b/src/Element/WebformHtmlEditor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform\Element;
 
+use Drupal\imce\Imce;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element\FormElement;
@@ -146,9 +147,9 @@ class WebformHtmlEditor extends FormElement {
     }
 
     // phpcs:ignore Drupal.Classes.FullyQualifiedNamespace.UseStatementMissing
-    if (\Drupal::moduleHandler()->moduleExists('imce') && \Drupal\imce\Imce::access()) {
+    if (\Drupal::moduleHandler()->moduleExists('imce') && Imce::access()) {
       $element['#attached']['library'][] = 'imce/drupal.imce.ckeditor';
-      $element['#attached']['drupalSettings']['webform']['html_editor']['ImceImageIcon'] = file_create_url(\Drupal::service('extension.list.module')->getPath('imce') . '/js/plugins/ckeditor/icons/imceimage.png');
+      $element['#attached']['drupalSettings']['webform']['html_editor']['ImceImageIcon'] = \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('imce') . '/js/plugins/ckeditor/icons/imceimage.png');
     }
 
     if (!empty($element['#states'])) {
diff --git a/src/EventSubscriber/WebformExceptionHtmlSubscriber.php b/src/EventSubscriber/WebformExceptionHtmlSubscriber.php
index 667928d3f..5359a7d76 100644
--- a/src/EventSubscriber/WebformExceptionHtmlSubscriber.php
+++ b/src/EventSubscriber/WebformExceptionHtmlSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -21,7 +22,6 @@ use Psr\Log\LoggerInterface;
 use Symfony\Component\HttpKernel\Exception\HttpExceptionInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\HttpKernelInterface;
 use Symfony\Component\Routing\Matcher\UrlMatcherInterface;
 
@@ -111,10 +111,10 @@ class WebformExceptionHtmlSubscriber extends DefaultExceptionHtmlSubscriber {
   /**
    * Handles a 403 error for HTML.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The event to process.
    */
-  public function on403(GetResponseForExceptionEvent $event) {
+  public function on403(ExceptionEvent $event) {
     if ($event->getRequestType() !== HttpKernelInterface::MASTER_REQUEST) {
       return;
     }
@@ -126,13 +126,13 @@ class WebformExceptionHtmlSubscriber extends DefaultExceptionHtmlSubscriber {
   /**
    * Redirect to user login when access is denied to private webform file.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The event to process.
    *
    * @see webform_file_download()
    * @see \Drupal\webform\Plugin\WebformElement\WebformManagedFileBase::accessFileDownload
    */
-  public function on403RedirectPrivateFileAccess(GetResponseForExceptionEvent $event) {
+  public function on403RedirectPrivateFileAccess(ExceptionEvent $event) {
     $path = $event->getRequest()->getPathInfo();
     // Make sure the user is trying to access a private webform file upload.
     if (strpos($path, '/system/files/webform/') !== 0) {
@@ -157,10 +157,10 @@ class WebformExceptionHtmlSubscriber extends DefaultExceptionHtmlSubscriber {
   /**
    * Redirect to user login when access is denied for webform or submission.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The event to process.
    */
-  public function on403RedirectEntityAccess(GetResponseForExceptionEvent $event) {
+  public function on403RedirectEntityAccess(ExceptionEvent $event) {
     $url = Url::fromUserInput($event->getRequest()->getPathInfo());
     if (!$url) {
       return;
@@ -260,10 +260,10 @@ class WebformExceptionHtmlSubscriber extends DefaultExceptionHtmlSubscriber {
   /**
    * {@inheritdoc}
    */
-  public function onException(GetResponseForExceptionEvent $event) {
+  public function onException(ExceptionEvent $event) {
     // Only handle 403 exception.
     // @see \Drupal\webform\EventSubscriber\WebformExceptionHtmlSubscriber::on403
-    $exception = $event->getException();
+    $exception = $event->getThrowable();
     if ($exception instanceof HttpExceptionInterface && $exception->getStatusCode() === 403) {
       parent::onException($event);
     }
@@ -282,14 +282,14 @@ class WebformExceptionHtmlSubscriber extends DefaultExceptionHtmlSubscriber {
   /**
    * Redirect to user login with destination and display custom message.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The event to process.
    * @param null|string $message
    *   (Optional) Message to be display on user login.
    * @param null|\Drupal\Core\Entity\EntityInterface $entity
    *   (Optional) Entity to be used when replacing tokens.
    */
-  protected function redirectToLogin(GetResponseForExceptionEvent $event, $message = NULL, EntityInterface $entity = NULL) {
+  protected function redirectToLogin(ExceptionEvent $event, $message = NULL, EntityInterface $entity = NULL) {
     // Display message.
     if ($message) {
       $this->setMessage($message, $entity);
diff --git a/src/Plugin/WebformElement/Telephone.php b/src/Plugin/WebformElement/Telephone.php
index b49705b34..d9c91256c 100644
--- a/src/Plugin/WebformElement/Telephone.php
+++ b/src/Plugin/WebformElement/Telephone.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform\Plugin\WebformElement;
 
+use libphonenumber\PhoneNumberFormat;
 use Drupal\Component\Serialization\Json;
 use Drupal\webform\Element\WebformMessage as WebformMessageElement;
 use Drupal\Core\Form\FormStateInterface;
@@ -121,7 +122,7 @@ class Telephone extends TextBase {
     if ($this->moduleHandler->moduleExists('telephone_validation')) {
       $format = $this->getElementProperty($element, 'telephone_validation_format');
       $format = ($format !== '') ? (int) $format : '';
-      if ($format === \libphonenumber\PhoneNumberFormat::NATIONAL) {
+      if ($format === PhoneNumberFormat::NATIONAL) {
         $country = (array) $this->getElementProperty($element, 'telephone_validation_country');
       }
       else {
@@ -192,8 +193,8 @@ class Telephone extends TextBase {
         '#description' => $this->t('For international telephone numbers we suggest using <a href=":href">E164</a> format.', [':href' => 'https://en.wikipedia.org/wiki/E.164']),
         '#empty_option' => $this->t('- None -'),
         '#options' => [
-          \libphonenumber\PhoneNumberFormat::E164 => $this->t('E164'),
-          \libphonenumber\PhoneNumberFormat::NATIONAL => $this->t('National'),
+          PhoneNumberFormat::E164 => $this->t('E164'),
+          PhoneNumberFormat::NATIONAL => $this->t('National'),
         ],
       ];
       $form['telephone']['telephone_validation_country'] = [
@@ -202,10 +203,10 @@ class Telephone extends TextBase {
         '#options' => $this->telephoneValidator->getCountryList(),
         '#states' => [
           'visible' => [
-            ':input[name="properties[telephone_validation_format]"]' => ['value' => \libphonenumber\PhoneNumberFormat::NATIONAL],
+            ':input[name="properties[telephone_validation_format]"]' => ['value' => PhoneNumberFormat::NATIONAL],
           ],
           'required' => [
-            ':input[name="properties[telephone_validation_format]"]' => ['value' => \libphonenumber\PhoneNumberFormat::NATIONAL],
+            ':input[name="properties[telephone_validation_format]"]' => ['value' => PhoneNumberFormat::NATIONAL],
           ],
         ],
       ];
@@ -218,7 +219,7 @@ class Telephone extends TextBase {
         '#multiple' => TRUE,
         '#states' => [
           'visible' => [
-            ':input[name="properties[telephone_validation_format]"]' => ['value' => \libphonenumber\PhoneNumberFormat::E164],
+            ':input[name="properties[telephone_validation_format]"]' => ['value' => PhoneNumberFormat::E164],
           ],
         ],
       ];
diff --git a/src/Plugin/WebformElement/WebformCompositeBase.php b/src/Plugin/WebformElement/WebformCompositeBase.php
index 600e370aa..6cdcd4d69 100644
--- a/src/Plugin/WebformElement/WebformCompositeBase.php
+++ b/src/Plugin/WebformElement/WebformCompositeBase.php
@@ -1539,7 +1539,7 @@ abstract class WebformCompositeBase extends WebformElementBase implements Webfor
         'filepath' => $this->fileSystem->realpath($file->getFileUri()) ?: $file->getFileUri(),
         // URI is used when debugging or resending messages.
         // @see \Drupal\webform\Plugin\WebformHandler\EmailWebformHandler::buildAttachments
-        '_fileurl' => file_create_url($file->getFileUri()),
+        '_fileurl' => \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()),
       ];
     }
     return $attachments;
diff --git a/src/Plugin/WebformElement/WebformImageFile.php b/src/Plugin/WebformElement/WebformImageFile.php
index 4e5b49fdb..9beea7348 100644
--- a/src/Plugin/WebformElement/WebformImageFile.php
+++ b/src/Plugin/WebformElement/WebformImageFile.php
@@ -174,7 +174,7 @@ class WebformImageFile extends WebformManagedFileBase {
       }
       else {
         $file_uri = $file->getFileUri();
-        $file_url = file_create_url($file->getFileUri());
+        $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       }
       $attachments[] = [
         'filecontent' => file_get_contents($file_uri),
diff --git a/src/Plugin/WebformElement/WebformManagedFileBase.php b/src/Plugin/WebformElement/WebformManagedFileBase.php
index 157d84a7e..1e6b275f2 100644
--- a/src/Plugin/WebformElement/WebformManagedFileBase.php
+++ b/src/Plugin/WebformElement/WebformManagedFileBase.php
@@ -408,7 +408,7 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
       case 'value':
       case 'raw':
       default:
-        return file_create_url($file->getFileUri());
+        return \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     }
   }
 
@@ -1452,7 +1452,7 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
         'filepath' => $this->fileSystem->realpath($file->getFileUri()) ?: $file->getFileUri(),
         // URI is used when debugging or resending messages.
         // @see \Drupal\webform\Plugin\WebformHandler\EmailWebformHandler::buildAttachments
-        '_fileurl' => file_create_url($file->getFileUri()),
+        '_fileurl' => \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()),
       ];
     }
     return $attachments;
diff --git a/src/Plugin/WebformElement/WebformSignature.php b/src/Plugin/WebformElement/WebformSignature.php
index 59410fe6e..f58fc8ef1 100644
--- a/src/Plugin/WebformElement/WebformSignature.php
+++ b/src/Plugin/WebformElement/WebformSignature.php
@@ -311,7 +311,7 @@ class WebformSignature extends WebformElementBase implements WebformElementFileD
     $unsafe_image_hash = Crypt::hmacBase64($value, Settings::getHashSalt());
     $unsafe_image_uri = "$image_directory/signature-$unsafe_image_hash.png";
     if (file_exists($unsafe_image_uri)) {
-      return file_create_url($unsafe_image_uri);
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($unsafe_image_uri);
     }
 
     $image_hash = Crypt::hmacBase64('webform-signature-' . $value, Settings::getHashSalt());
@@ -331,7 +331,7 @@ class WebformSignature extends WebformElementBase implements WebformElementFileD
       }
     }
 
-    return file_create_url($image_uri);
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
   }
 
   /**
diff --git a/src/Plugin/WebformSourceEntityManager.php b/src/Plugin/WebformSourceEntityManager.php
index 06721db05..fa02c3f90 100644
--- a/src/Plugin/WebformSourceEntityManager.php
+++ b/src/Plugin/WebformSourceEntityManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform\Plugin;
 
+use Drupal\paragraphs\Entity\Paragraph;
 use Drupal\Component\Utility\SortArray;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -67,7 +68,7 @@ class WebformSourceEntityManager extends DefaultPluginManager implements Webform
   public static function getMainSourceEntity(EntityInterface $source_entity) {
     if (\Drupal::moduleHandler()->moduleExists('paragraphs')) {
       // phpcs:ignore Drupal.Classes.FullyQualifiedNamespace.UseStatementMissing
-      while ($source_entity instanceof \Drupal\paragraphs\Entity\Paragraph) {
+      while ($source_entity instanceof Paragraph) {
         $source_entity = $source_entity->getParentEntity();
       }
     }
diff --git a/src/Utility/WebformDialogHelper.php b/src/Utility/WebformDialogHelper.php
index 5bc498194..ec9158368 100644
--- a/src/Utility/WebformDialogHelper.php
+++ b/src/Utility/WebformDialogHelper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform\Utility;
 
+use Drupal\imce\Imce;
 use Drupal\Component\Serialization\Json;
 
 /**
@@ -66,9 +67,9 @@ class WebformDialogHelper {
     }
     // @see \Drupal\webform\Element\WebformHtmlEditor::preRenderWebformHtmlEditor
     // phpcs:ignore Drupal.Classes.FullyQualifiedNamespace.UseStatementMissing
-    if (\Drupal::moduleHandler()->moduleExists('imce') && \Drupal\imce\Imce::access()) {
+    if (\Drupal::moduleHandler()->moduleExists('imce') && Imce::access()) {
       $build['#attached']['library'][] = 'imce/drupal.imce.ckeditor';
-      $build['#attached']['drupalSettings']['webform']['html_editor']['ImceImageIcon'] = file_create_url(\Drupal::service('extension.list.module')->getPath('imce') . '/js/plugins/ckeditor/icons/imceimage.png');
+      $build['#attached']['drupalSettings']['webform']['html_editor']['ImceImageIcon'] = \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('imce') . '/js/plugins/ckeditor/icons/imceimage.png');
     }
   }
 
diff --git a/src/Utility/WebformMailHelper.php b/src/Utility/WebformMailHelper.php
index 0b05a1fb2..692ee01c3 100644
--- a/src/Utility/WebformMailHelper.php
+++ b/src/Utility/WebformMailHelper.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\webform\Utility;
 
+use Symfony\Component\Mime\Address;
+use Symfony\Component\Mime\Header\MailboxHeader;
+use Drupal\Component\Utility\Mail;
 /**
  * Helper class for webform mail handing.
  */
@@ -20,7 +23,7 @@ class WebformMailHelper {
     if (class_exists('\Symfony\Component\Mime\Address')) {
       try {
         // phpcs:ignore Drupal.Classes.FullyQualifiedNamespace.UseStatementMissing
-        \Symfony\Component\Mime\Address::create($address);
+        Address::create($address);
         return TRUE;
       }
       catch (\Exception $exception) {
@@ -52,15 +55,15 @@ class WebformMailHelper {
     if (class_exists('\Symfony\Component\Mime\Address')
       && class_exists('\Symfony\Component\Mime\Header\MailboxHeader')) {
       // phpcs:disable Drupal.Classes.FullyQualifiedNamespace.UseStatementMissing
-      $mime_address = new \Symfony\Component\Mime\Address($address, $name);
-      $mailbox_header = new \Symfony\Component\Mime\Header\MailboxHeader('Temp', $mime_address);
+      $mime_address = new Address($address, $name);
+      $mailbox_header = new MailboxHeader('Temp', $mime_address);
       return $mailbox_header->getBodyAsString();
       // phpcs:enable
     }
     elseif (class_exists('\Drupal\Component\Utility\Mail')) {
       if ($name) {
         // phpcs:ignore Drupal.Classes.FullyQualifiedNamespace.UseStatementMissing
-        return \Drupal\Component\Utility\Mail::formatDisplayName($name) . ' <' . $address . '>';
+        return Mail::formatDisplayName($name) . ' <' . $address . '>';
       }
       else {
         return $address;
diff --git a/src/WebformHelpManager.php b/src/WebformHelpManager.php
index a23ee977e..96fb04240 100644
--- a/src/WebformHelpManager.php
+++ b/src/WebformHelpManager.php
@@ -5,6 +5,7 @@
 
 namespace Drupal\webform;
 
+use Drush\Drush;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -1788,7 +1789,7 @@ class WebformHelpManager implements WebformHelpManagerInterface {
       '@webform-composer-update' => 'webform-composer-update',
     ];
     // phpcs:ignore Drupal.Classes.FullyQualifiedNamespace.UseStatementMissing
-    $drush_version = (class_exists('\Drush\Drush')) ? \Drush\Drush::getMajorVersion() : 8;
+    $drush_version = (class_exists('\Drush\Drush')) ? Drush::getMajorVersion() : 8;
     if ($drush_version >= 9) {
       foreach ($t_args as $command_name => $command) {
         $t_args[$command_name] = str_replace('-', ':', $command);
diff --git a/tests/modules/webform_test_handler_remote_post/src/WebformTestHandlerRemotePostClientFactory.php b/tests/modules/webform_test_handler_remote_post/src/WebformTestHandlerRemotePostClientFactory.php
index 03bc58a26..8b375fb54 100644
--- a/tests/modules/webform_test_handler_remote_post/src/WebformTestHandlerRemotePostClientFactory.php
+++ b/tests/modules/webform_test_handler_remote_post/src/WebformTestHandlerRemotePostClientFactory.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_test_handler_remote_post;
 
+use function GuzzleHttp\default_user_agent;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Http\ClientFactory;
 use Drupal\Core\Site\Settings;
@@ -21,7 +22,7 @@ class WebformTestHandlerRemotePostClientFactory extends ClientFactory {
       'verify' => TRUE,
       'timeout' => 30,
       'headers' => [
-        'User-Agent' => 'Drupal/' . \Drupal::VERSION . ' (+https://www.drupal.org/) ' . \GuzzleHttp\default_user_agent(),
+        'User-Agent' => 'Drupal/' . \Drupal::VERSION . ' (+https://www.drupal.org/) ' . default_user_agent(),
       ],
       'handler' => $this->stack,
       'proxy' => [
diff --git a/tests/src/Functional/Block/WebformBlockContextTest.php b/tests/src/Functional/Block/WebformBlockContextTest.php
index 842e8c66d..64ec8d2ff 100644
--- a/tests/src/Functional/Block/WebformBlockContextTest.php
+++ b/tests/src/Functional/Block/WebformBlockContextTest.php
@@ -22,7 +22,7 @@ class WebformBlockContextTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Manually install blocks.
diff --git a/tests/src/Functional/Composite/WebformCompositeCustomFileTest.php b/tests/src/Functional/Composite/WebformCompositeCustomFileTest.php
index 386c21fe1..c4f64f4c8 100644
--- a/tests/src/Functional/Composite/WebformCompositeCustomFileTest.php
+++ b/tests/src/Functional/Composite/WebformCompositeCustomFileTest.php
@@ -60,7 +60,7 @@ class WebformCompositeCustomFileTest extends WebformElementManagedFileTestBase {
 
     // Check the composite file is attached to the email.
     $assert_session->responseContains('<label>Attachments</label>');
-    $assert_session->responseContains('<strong><a href="' . file_create_url($file->getFileUri()) . '">' . $file->getFileName() . '</a></strong> (text/plain) - 1 KB');
+    $assert_session->responseContains('<strong><a href="' . \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) . '">' . $file->getFileName() . '</a></strong> (text/plain) - 1 KB');
 
     // Check file permanent.
     $this->assertTrue($file->isPermanent());
diff --git a/tests/src/Functional/Element/WebformElementComputedTest.php b/tests/src/Functional/Element/WebformElementComputedTest.php
index 08a189258..2bc4f1434 100644
--- a/tests/src/Functional/Element/WebformElementComputedTest.php
+++ b/tests/src/Functional/Element/WebformElementComputedTest.php
@@ -33,7 +33,7 @@ class WebformElementComputedTest extends WebformElementBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create filters.
diff --git a/tests/src/Functional/Element/WebformElementFormatCustomTest.php b/tests/src/Functional/Element/WebformElementFormatCustomTest.php
index fa7200f65..3861a1c1a 100644
--- a/tests/src/Functional/Element/WebformElementFormatCustomTest.php
+++ b/tests/src/Functional/Element/WebformElementFormatCustomTest.php
@@ -52,7 +52,7 @@ class WebformElementFormatCustomTest extends WebformElementBrowserTestBase {
     $file = File::load($fid);
     $file_name = $file->getFilename();
     $file_size = $file->getSize();
-    $file_url = file_create_url($file->getFileUri());
+    $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
 
     /* ********************************************************************** */
     // Custom HTML.
diff --git a/tests/src/Functional/Element/WebformElementFormatTest.php b/tests/src/Functional/Element/WebformElementFormatTest.php
index 9eeb88217..b4c8404c8 100644
--- a/tests/src/Functional/Element/WebformElementFormatTest.php
+++ b/tests/src/Functional/Element/WebformElementFormatTest.php
@@ -344,7 +344,7 @@ class WebformElementFormatTest extends WebformElementBrowserTestBase {
     if ($relative) {
       return $file->createFileUrl();
     }
-    return file_create_url($file->getFileUri());
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
   }
 
 }
diff --git a/tests/src/Functional/Element/WebformElementHtmlEditorTest.php b/tests/src/Functional/Element/WebformElementHtmlEditorTest.php
index 28079a602..35555e990 100644
--- a/tests/src/Functional/Element/WebformElementHtmlEditorTest.php
+++ b/tests/src/Functional/Element/WebformElementHtmlEditorTest.php
@@ -29,7 +29,7 @@ class WebformElementHtmlEditorTest extends WebformElementBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create filters.
diff --git a/tests/src/Functional/Element/WebformElementLabelTest.php b/tests/src/Functional/Element/WebformElementLabelTest.php
index de6d0d284..e890c6af0 100644
--- a/tests/src/Functional/Element/WebformElementLabelTest.php
+++ b/tests/src/Functional/Element/WebformElementLabelTest.php
@@ -23,22 +23,23 @@ class WebformElementLabelTest extends WebformElementBrowserTestBase {
     // Get form.
     $this->drupalGet('/webform/test_element_label');
     // Check label display on form.
-    $this->assertRaw('<label data-drupal-selector="edit-label" for="edit-label">This is normal label</label>');
-    $this->assertRaw('<label data-drupal-selector="edit-label-form" for="edit-label-form">This is only displayed on the form view.</label>');
-    $this->assertNoRaw('<label data-drupal-selector="edit-label-view" for="edit-label-view">This is only displayed on the submission view.</label>');
-    $this->assertRaw('<label data-drupal-selector="edit-label-both" for="edit-label-both">This is displayed on the both the form and submission view.</label>');
+    $this->assertSession()->responseContains('<label data-drupal-selector="edit-label" for="edit-label">This is normal label</label>');
+    $this->assertSession()->responseContains('<label data-drupal-selector="edit-label-form" for="edit-label-form">This is only displayed on the form view.</label>');
+    $this->assertSession()->responseNotContains('<label data-drupal-selector="edit-label-view" for="edit-label-view">This is only displayed on the submission view.</label>');
+    $this->assertSession()->responseContains('<label data-drupal-selector="edit-label-both" for="edit-label-both">This is displayed on the both the form and submission view.</label>');
     // Check custom label with required.
-    $this->assertRaw('<label style="color: green" data-drupal-selector="edit-label-custom" for="edit-label-custom" class="js-form-required form-required">This is a customized label</label>');
+    $this->assertSession()->responseContains('<label style="color: green" data-drupal-selector="edit-label-custom" for="edit-label-custom" class="js-form-required form-required">This is a customized label</label>');
+    $this->drupalGet('/webform/test_element_label');
 
     // Get preview.
-    $this->drupalPostForm('/webform/test_element_label', [], 'Preview');
+    $this->submitForm([], 'Preview');
     // Check label display on view.
-    $this->assertNoRaw('<label>This is normal label</label>');
-    $this->assertNoRaw('<label>This is only displayed on the form view.</label>');
-    $this->assertRaw('<label>This is only displayed on the submission view.</label>');
-    $this->assertRaw('<label>This is displayed on the both the form and submission view.</label>');
+    $this->assertSession()->responseNotContains('<label>This is normal label</label>');
+    $this->assertSession()->responseNotContains('<label>This is only displayed on the form view.</label>');
+    $this->assertSession()->responseContains('<label>This is only displayed on the submission view.</label>');
+    $this->assertSession()->responseContains('<label>This is displayed on the both the form and submission view.</label>');
     // Check custom label with required removed.
-    $this->assertRaw('<label style="color: green">This is a customized label</label>');
+    $this->assertSession()->responseContains('<label style="color: green">This is a customized label</label>');
   }
 
 }
diff --git a/tests/src/Functional/Element/WebformElementManagedFilePrivateTest.php b/tests/src/Functional/Element/WebformElementManagedFilePrivateTest.php
index b793606e6..24b408eb8 100644
--- a/tests/src/Functional/Element/WebformElementManagedFilePrivateTest.php
+++ b/tests/src/Functional/Element/WebformElementManagedFilePrivateTest.php
@@ -92,7 +92,7 @@ class WebformElementManagedFilePrivateTest extends WebformElementManagedFileTest
     ];
     $this->submitForm($edit, 'Preview');
 
-    $temp_file_uri = file_create_url('private://webform/test_element_managed_file/_sid_/' . basename($this->files[1]->uri));
+    $temp_file_uri = \Drupal::service('file_url_generator')->generateAbsoluteString('private://webform/test_element_managed_file/_sid_/' . basename($this->files[1]->uri));
 
     // Check that temp file is not linked.
     $assert_session->responseNotContains('<span class="file file--mime-text-plain file--text"><a href="' . $temp_file_uri . '" type="text/plain; length=16384">text-1.txt</a></span>');
diff --git a/tests/src/Functional/Element/WebformElementManagedFilePublicTest.php b/tests/src/Functional/Element/WebformElementManagedFilePublicTest.php
index 68328f8fc..f1523f7ca 100644
--- a/tests/src/Functional/Element/WebformElementManagedFilePublicTest.php
+++ b/tests/src/Functional/Element/WebformElementManagedFilePublicTest.php
@@ -28,7 +28,7 @@ class WebformElementManagedFilePublicTest extends WebformElementBrowserTestBase
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Set public file upload support for testing.
diff --git a/tests/src/Functional/Element/WebformElementManagedFileTest.php b/tests/src/Functional/Element/WebformElementManagedFileTest.php
index b44d83286..c6d9ab9e3 100644
--- a/tests/src/Functional/Element/WebformElementManagedFileTest.php
+++ b/tests/src/Functional/Element/WebformElementManagedFileTest.php
@@ -48,7 +48,7 @@ class WebformElementManagedFileTest extends WebformElementManagedFileTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->webform = Webform::load('test_element_managed_file');
@@ -349,10 +349,10 @@ class WebformElementManagedFileTest extends WebformElementManagedFileTestBase {
       $assert_session->responseContains('<span class="file file--mime-text-plain file--text"><a href="' . $file->createFileUrl() . '" type="text/plain">' . $file->getFilename() . '</a></span>');
     }
     elseif (floatval(\Drupal::VERSION) >= 9.1) {
-      $assert_session->responseContains('<span class="file file--mime-text-plain file--text"><a href="' . file_create_url($file->getFileUri()) . '" type="text/plain">' . $file->getFilename() . '</a></span>');
+      $assert_session->responseContains('<span class="file file--mime-text-plain file--text"><a href="' . \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) . '" type="text/plain">' . $file->getFilename() . '</a></span>');
     }
     else {
-      $assert_session->responseContains('<span class="file file--mime-text-plain file--text"><a href="' . file_create_url($file->getFileUri()) . '" type="text/plain; length=' . $file->getSize() . '">' . $file->getFilename() . '</a></span>');
+      $assert_session->responseContains('<span class="file file--mime-text-plain file--text"><a href="' . \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) . '" type="text/plain; length=' . $file->getSize() . '">' . $file->getFilename() . '</a></span>');
     }
 
     // Remove the uploaded file.
@@ -388,7 +388,7 @@ class WebformElementManagedFileTest extends WebformElementManagedFileTestBase {
     $this->assertEquals($submission->getElementData($key), $second, 'Test new file was upload to the current submission');
 
     // Check that test file was deleted from the disk and database.
-    $this->assertFileNotExists($file->getFileUri(), 'Test file deleted from disk');
+    $this->assertFileDoesNotExist($file->getFileUri(), 'Test file deleted from disk');
     $this->assertEquals(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_managed} WHERE fid = :fid', [':fid' => $fid])->fetchField(), 'Test file 0 deleted from database');
     $this->assertEquals(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_usage} WHERE fid = :fid', [':fid' => $fid])->fetchField(), 'Test file 0 deleted from database');
 
@@ -402,11 +402,11 @@ class WebformElementManagedFileTest extends WebformElementManagedFileTestBase {
     $submission->delete();
 
     // Check that test file 1 was deleted from the disk and database.
-    $this->assertFileNotExists($new_file->getFileUri(), 'Test new file deleted from disk');
+    $this->assertFileDoesNotExist($new_file->getFileUri(), 'Test new file deleted from disk');
     $this->assertEquals(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_managed} WHERE fid = :fid', [':fid' => $new_fid])->fetchField(), 'Test new file deleted from database');
 
     // Check that empty file directory was deleted.
-    $this->assertFileNotExists('private://webform/test_element_managed_file/' . $sid . '/');
+    $this->assertFileDoesNotExist('private://webform/test_element_managed_file/' . $sid . '/');
   }
 
 }
diff --git a/tests/src/Functional/Element/WebformElementManagedFileTestBase.php b/tests/src/Functional/Element/WebformElementManagedFileTestBase.php
index 04482c92b..459a54660 100644
--- a/tests/src/Functional/Element/WebformElementManagedFileTestBase.php
+++ b/tests/src/Functional/Element/WebformElementManagedFileTestBase.php
@@ -36,7 +36,7 @@ abstract class WebformElementManagedFileTestBase extends WebformElementBrowserTe
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->fileUsage = $this->container->get('file.usage');
diff --git a/tests/src/Functional/Element/WebformElementMediaFileTest.php b/tests/src/Functional/Element/WebformElementMediaFileTest.php
index 57f1651bd..eb0e0c2b8 100644
--- a/tests/src/Functional/Element/WebformElementMediaFileTest.php
+++ b/tests/src/Functional/Element/WebformElementMediaFileTest.php
@@ -123,7 +123,7 @@ class WebformElementMediaFileTest extends WebformElementManagedFileTestBase {
       $assert_session->responseContains('<label>managed_file_multiple</label>');
       $assert_session->responseContains('<div class="item-list">');
     }
-    $assert_session->responseContains('<span class="file file--mime-text-plain file--text"> <a href="' . file_create_url($file->getFileUri()) . '" type="text/plain; length=' . $file->getSize() . '">' . $file->getFilename() . '</a></span>');
+    $assert_session->responseContains('<span class="file file--mime-text-plain file--text"> <a href="' . \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) . '" type="text/plain; length=' . $file->getSize() . '">' . $file->getFilename() . '</a></span>');
 
     // Remove the uploaded file.
     $this->drupalGet('/admin/structure/webform/manage/test_element_managed_file/submission/' . $sid . '/edit');
@@ -158,7 +158,7 @@ class WebformElementMediaFileTest extends WebformElementManagedFileTestBase {
     $this->assertEquals($submission->getElementData($key), $second, 'Test new file was upload to the current submission');
 
     // Check that test file was deleted from the disk and database.
-    $this->assertFileNotExists($file->getFileUri(), 'Test file deleted from disk');
+    $this->assertFileDoesNotExist($file->getFileUri(), 'Test file deleted from disk');
     $this->assertEquals(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_managed} WHERE fid = :fid', [':fid' => $fid])->fetchField(), 'Test file 0 deleted from database');
     $this->assertEquals(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_usage} WHERE fid = :fid', [':fid' => $fid])->fetchField(), 'Test file 0 deleted from database');
 
@@ -169,7 +169,7 @@ class WebformElementMediaFileTest extends WebformElementManagedFileTestBase {
     $submission->delete();
 
     // Check that test file 1 was deleted from the disk and database.
-    $this->assertFileNotExists($new_file->getFileUri(), 'Test new file deleted from disk');
+    $this->assertFileDoesNotExist($new_file->getFileUri(), 'Test new file deleted from disk');
     $this->assertEquals(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_managed} WHERE fid = :fid', [':fid' => $new_fid])->fetchField(), 'Test new file deleted from database');
   }
 
diff --git a/tests/src/Functional/Element/WebformElementSignatureTest.php b/tests/src/Functional/Element/WebformElementSignatureTest.php
index d6b0d9925..1725b9b82 100644
--- a/tests/src/Functional/Element/WebformElementSignatureTest.php
+++ b/tests/src/Functional/Element/WebformElementSignatureTest.php
@@ -56,7 +56,7 @@ class WebformElementSignatureTest extends WebformElementBrowserTestBase {
     // Check signature saved image in public directory.
     $public_files = \Drupal::service('file_system')->scanDirectory($signature_public_directory, '/^signature-.*\.png$/');
     $public_file_uri = array_key_first($public_files);
-    $public_file_url = file_create_url($public_file_uri);
+    $public_file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($public_file_uri);
     $assert_session->responseContains("$signature_public_path/$sid/signature-");
     $this->assertFileExists("$signature_public_directory/$sid");
     $this->assertCount(1, $public_files);
@@ -64,7 +64,7 @@ class WebformElementSignatureTest extends WebformElementBrowserTestBase {
     // Check signature saved image in private directory.
     $private_files = \Drupal::service('file_system')->scanDirectory($signature_private_directory, '/^signature-.*\.png$/');
     $private_file_uri = array_key_first($private_files);
-    $private_file_url = file_create_url($private_file_uri);
+    $private_file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($private_file_uri);
     $assert_session->responseContains("$signature_private_path/$sid/signature-");
     $this->assertFileExists("$signature_private_directory/$sid");
     $this->assertCount(1, $private_files);
@@ -76,19 +76,19 @@ class WebformElementSignatureTest extends WebformElementBrowserTestBase {
     // Check public  file access is allowed for root user.
     $this->drupalGet($public_file_url);
     $assert_session->statusCodeEquals(200);
-    $this->assertUrl($public_file_url);
+    $this->assertSession()->addressEquals($public_file_url);
 
     // Check private file access is allowed for root user.
     $this->drupalGet($private_file_url);
     $assert_session->statusCodeEquals(200);
-    $this->assertUrl($private_file_url);
+    $this->assertSession()->addressEquals($private_file_url);
 
     $this->drupalLogout();
 
     // Check public and private file access is denied.
     $this->drupalGet($private_file_url);
     $assert_session->responseContains('Please login to access the uploaded file.');
-    $this->assertUrl('/user/login');
+    $this->assertSession()->addressEquals('/user/login');
 
     /* ********************************************************************** */
     // Validation.
@@ -111,12 +111,12 @@ class WebformElementSignatureTest extends WebformElementBrowserTestBase {
     // Check deleting the submission deletes submission's signature directory.
     $webform_submission->delete();
     $this->assertFileExists("$signature_public_directory");
-    $this->assertFileNotExists("$signature_public_directory/$sid");
+    $this->assertFileDoesNotExist("$signature_public_directory/$sid");
     $this->assertCount(1, \Drupal::service('file_system')->scanDirectory($signature_public_directory, '/^signature-.*\.png$/'));
 
     // Check deleting the webform deletes webform's signature directory.
     $webform->delete();
-    $this->assertFileNotExists("$signature_public_directory");
+    $this->assertFileDoesNotExist("$signature_public_directory");
   }
 
   /**
diff --git a/tests/src/Functional/Element/WebformElementStatesSelectorsTest.php b/tests/src/Functional/Element/WebformElementStatesSelectorsTest.php
index 7f4cda869..69b174634 100644
--- a/tests/src/Functional/Element/WebformElementStatesSelectorsTest.php
+++ b/tests/src/Functional/Element/WebformElementStatesSelectorsTest.php
@@ -30,7 +30,7 @@ class WebformElementStatesSelectorsTest extends WebformElementBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create 'tags' vocabulary.
diff --git a/tests/src/Functional/Element/WebformElementTermReferenceTest.php b/tests/src/Functional/Element/WebformElementTermReferenceTest.php
index 17dc7e069..9dedbb287 100644
--- a/tests/src/Functional/Element/WebformElementTermReferenceTest.php
+++ b/tests/src/Functional/Element/WebformElementTermReferenceTest.php
@@ -29,7 +29,7 @@ class WebformElementTermReferenceTest extends WebformElementBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create 'tags' vocabulary.
diff --git a/tests/src/Functional/Element/WebformElementTextFormatTest.php b/tests/src/Functional/Element/WebformElementTextFormatTest.php
index 5ff086a14..e5c391bce 100644
--- a/tests/src/Functional/Element/WebformElementTextFormatTest.php
+++ b/tests/src/Functional/Element/WebformElementTextFormatTest.php
@@ -40,7 +40,7 @@ class WebformElementTextFormatTest extends WebformElementBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->fileUsage = $this->container->get('file.usage');
diff --git a/tests/src/Functional/Handler/WebformHandlerEmailAdvancedTest.php b/tests/src/Functional/Handler/WebformHandlerEmailAdvancedTest.php
index 3026ad421..5582f9e8f 100644
--- a/tests/src/Functional/Handler/WebformHandlerEmailAdvancedTest.php
+++ b/tests/src/Functional/Handler/WebformHandlerEmailAdvancedTest.php
@@ -29,7 +29,7 @@ class WebformHandlerEmailAdvancedTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create filter.
diff --git a/tests/src/Functional/Handler/WebformHandlerEmailRenderingTest.php b/tests/src/Functional/Handler/WebformHandlerEmailRenderingTest.php
index a92ac86bd..9e4f32192 100644
--- a/tests/src/Functional/Handler/WebformHandlerEmailRenderingTest.php
+++ b/tests/src/Functional/Handler/WebformHandlerEmailRenderingTest.php
@@ -18,7 +18,7 @@ class WebformHandlerEmailRenderingTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Make sure we are using distinct default and administrative themes for
diff --git a/tests/src/Functional/Handler/WebformHandlerExcludedTest.php b/tests/src/Functional/Handler/WebformHandlerExcludedTest.php
index 592eea5ca..a55f0d434 100644
--- a/tests/src/Functional/Handler/WebformHandlerExcludedTest.php
+++ b/tests/src/Functional/Handler/WebformHandlerExcludedTest.php
@@ -21,7 +21,7 @@ class WebformHandlerExcludedTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_actions_block');
   }
diff --git a/tests/src/Functional/Settings/WebformSettingsAccessDeniedTest.php b/tests/src/Functional/Settings/WebformSettingsAccessDeniedTest.php
index 94f1a0bed..a1eab4a2e 100644
--- a/tests/src/Functional/Settings/WebformSettingsAccessDeniedTest.php
+++ b/tests/src/Functional/Settings/WebformSettingsAccessDeniedTest.php
@@ -31,7 +31,7 @@ class WebformSettingsAccessDeniedTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Place blocks.
diff --git a/tests/src/Functional/Settings/WebformSettingsAdminTest.php b/tests/src/Functional/Settings/WebformSettingsAdminTest.php
index a317d07eb..ce71bfd5f 100644
--- a/tests/src/Functional/Settings/WebformSettingsAdminTest.php
+++ b/tests/src/Functional/Settings/WebformSettingsAdminTest.php
@@ -29,7 +29,7 @@ class WebformSettingsAdminTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_actions_block');
   }
diff --git a/tests/src/Functional/Settings/WebformSettingsBehaviorsTest.php b/tests/src/Functional/Settings/WebformSettingsBehaviorsTest.php
index d461ff2e4..79dc95f7a 100644
--- a/tests/src/Functional/Settings/WebformSettingsBehaviorsTest.php
+++ b/tests/src/Functional/Settings/WebformSettingsBehaviorsTest.php
@@ -33,7 +33,7 @@ class WebformSettingsBehaviorsTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Disable description help icon.
     $this->config('webform.settings')->set('ui.description_help', FALSE)->save();
diff --git a/tests/src/Functional/Settings/WebformSettingsConfirmationTest.php b/tests/src/Functional/Settings/WebformSettingsConfirmationTest.php
index f1cf2868a..6bd297bd4 100644
--- a/tests/src/Functional/Settings/WebformSettingsConfirmationTest.php
+++ b/tests/src/Functional/Settings/WebformSettingsConfirmationTest.php
@@ -32,7 +32,7 @@ class WebformSettingsConfirmationTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Set page.front (aka <front>) to /node instead of /user/login.
diff --git a/tests/src/Functional/Settings/WebformSettingsLimitsTest.php b/tests/src/Functional/Settings/WebformSettingsLimitsTest.php
index 31f2defdb..1be54b170 100644
--- a/tests/src/Functional/Settings/WebformSettingsLimitsTest.php
+++ b/tests/src/Functional/Settings/WebformSettingsLimitsTest.php
@@ -30,7 +30,7 @@ class WebformSettingsLimitsTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Place webform test blocks.
diff --git a/tests/src/Functional/Settings/WebformSettingsPrepopulateTest.php b/tests/src/Functional/Settings/WebformSettingsPrepopulateTest.php
index 6becac91e..2aba8800d 100644
--- a/tests/src/Functional/Settings/WebformSettingsPrepopulateTest.php
+++ b/tests/src/Functional/Settings/WebformSettingsPrepopulateTest.php
@@ -31,7 +31,7 @@ class WebformSettingsPrepopulateTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->placeBlocks();
   }
diff --git a/tests/src/Functional/Settings/WebformSettingsPreviewTest.php b/tests/src/Functional/Settings/WebformSettingsPreviewTest.php
index 4ff84d4e3..c1018a19a 100644
--- a/tests/src/Functional/Settings/WebformSettingsPreviewTest.php
+++ b/tests/src/Functional/Settings/WebformSettingsPreviewTest.php
@@ -22,7 +22,7 @@ class WebformSettingsPreviewTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Exclude Progress tracker so that the default progress bar is displayed.
diff --git a/tests/src/Functional/States/WebformStatesHiddenTest.php b/tests/src/Functional/States/WebformStatesHiddenTest.php
index d34c8e93f..2ba685df7 100644
--- a/tests/src/Functional/States/WebformStatesHiddenTest.php
+++ b/tests/src/Functional/States/WebformStatesHiddenTest.php
@@ -28,7 +28,7 @@ class WebformStatesHiddenTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create filters.
diff --git a/tests/src/Functional/States/WebformStatesServerTest.php b/tests/src/Functional/States/WebformStatesServerTest.php
index 5463c98b3..e668aff59 100644
--- a/tests/src/Functional/States/WebformStatesServerTest.php
+++ b/tests/src/Functional/States/WebformStatesServerTest.php
@@ -45,7 +45,7 @@ class WebformStatesServerTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create filters.
diff --git a/tests/src/Functional/Token/WebformTokenSubmissionValueTest.php b/tests/src/Functional/Token/WebformTokenSubmissionValueTest.php
index 5ad15da03..3f1dde983 100644
--- a/tests/src/Functional/Token/WebformTokenSubmissionValueTest.php
+++ b/tests/src/Functional/Token/WebformTokenSubmissionValueTest.php
@@ -29,7 +29,7 @@ class WebformTokenSubmissionValueTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create 'tags' vocabulary.
diff --git a/tests/src/Functional/Variant/WebformVariantElementTest.php b/tests/src/Functional/Variant/WebformVariantElementTest.php
index ce60548b8..21a4d245e 100644
--- a/tests/src/Functional/Variant/WebformVariantElementTest.php
+++ b/tests/src/Functional/Variant/WebformVariantElementTest.php
@@ -29,7 +29,7 @@ class WebformVariantElementTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->placeBlocks();
   }
diff --git a/tests/src/Functional/WebformBlockCacheTest.php b/tests/src/Functional/WebformBlockCacheTest.php
index 889c4e242..577eaa2dc 100644
--- a/tests/src/Functional/WebformBlockCacheTest.php
+++ b/tests/src/Functional/WebformBlockCacheTest.php
@@ -31,7 +31,7 @@ class WebformBlockCacheTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->authenticatedUser = $this->createUser([
diff --git a/tests/src/Functional/WebformBrowserTestBase.php b/tests/src/Functional/WebformBrowserTestBase.php
index e2806896e..795ea5421 100644
--- a/tests/src/Functional/WebformBrowserTestBase.php
+++ b/tests/src/Functional/WebformBrowserTestBase.php
@@ -40,7 +40,7 @@ abstract class WebformBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->loadWebforms(static::$testWebforms);
   }
@@ -48,7 +48,7 @@ abstract class WebformBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     $this->purgeSubmissions();
     parent::tearDown();
   }
diff --git a/tests/src/Functional/WebformBrowserTestBaseTest.php b/tests/src/Functional/WebformBrowserTestBaseTest.php
index 8dd315b9d..604ea5d3f 100644
--- a/tests/src/Functional/WebformBrowserTestBaseTest.php
+++ b/tests/src/Functional/WebformBrowserTestBaseTest.php
@@ -28,7 +28,7 @@ class WebformBrowserTestBaseTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
   }
 
diff --git a/tests/src/Functional/WebformEditorTest.php b/tests/src/Functional/WebformEditorTest.php
index 200c32b18..6510bcb4b 100644
--- a/tests/src/Functional/WebformEditorTest.php
+++ b/tests/src/Functional/WebformEditorTest.php
@@ -31,7 +31,7 @@ class WebformEditorTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create filters.
diff --git a/tests/src/Functional/WebformEntityTest.php b/tests/src/Functional/WebformEntityTest.php
index fdedcbbcf..9a06710c6 100644
--- a/tests/src/Functional/WebformEntityTest.php
+++ b/tests/src/Functional/WebformEntityTest.php
@@ -35,7 +35,7 @@ class WebformEntityTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Storage.
@@ -58,7 +58,7 @@ class WebformEntityTest extends WebformBrowserTestBase {
 
     // Check get elements.
     $elements = $webform_test_submissions->getElementsInitialized();
-    $this->assert(is_array($elements));
+    $this->assertTrue(is_array($elements));
 
     // Check getElements.
     $columns = $webform_test_submissions->getElementsInitializedFlattenedAndHasValue();
diff --git a/tests/src/Functional/WebformEntityTranslationTest.php b/tests/src/Functional/WebformEntityTranslationTest.php
index e7f1833af..3c33c1699 100644
--- a/tests/src/Functional/WebformEntityTranslationTest.php
+++ b/tests/src/Functional/WebformEntityTranslationTest.php
@@ -22,7 +22,7 @@ class WebformEntityTranslationTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Place blocks.
diff --git a/tests/src/Functional/WebformHelpTest.php b/tests/src/Functional/WebformHelpTest.php
index 7d5c0996d..7abffe41f 100644
--- a/tests/src/Functional/WebformHelpTest.php
+++ b/tests/src/Functional/WebformHelpTest.php
@@ -19,7 +19,7 @@ class WebformHelpTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('help_block');
diff --git a/tests/src/Functional/WebformRenderingTest.php b/tests/src/Functional/WebformRenderingTest.php
index 194a74281..9c90d1724 100644
--- a/tests/src/Functional/WebformRenderingTest.php
+++ b/tests/src/Functional/WebformRenderingTest.php
@@ -31,7 +31,7 @@ class WebformRenderingTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create filters.
diff --git a/tests/src/Functional/WebformSubmissionViewTest.php b/tests/src/Functional/WebformSubmissionViewTest.php
index 09bf771a9..03603af11 100644
--- a/tests/src/Functional/WebformSubmissionViewTest.php
+++ b/tests/src/Functional/WebformSubmissionViewTest.php
@@ -31,7 +31,7 @@ class WebformSubmissionViewTest extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create filters.
diff --git a/tests/src/Functional/Wizard/WebformWizardTestBase.php b/tests/src/Functional/Wizard/WebformWizardTestBase.php
index c4a0dcda3..3dc062f75 100644
--- a/tests/src/Functional/Wizard/WebformWizardTestBase.php
+++ b/tests/src/Functional/Wizard/WebformWizardTestBase.php
@@ -12,7 +12,7 @@ abstract class WebformWizardTestBase extends WebformBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Exclude Progress tracker so that the default progress bar is displayed.
diff --git a/tests/src/FunctionalJavascript/WebformWebDriverTestBase.php b/tests/src/FunctionalJavascript/WebformWebDriverTestBase.php
index 979eadb92..d5ca74361 100644
--- a/tests/src/FunctionalJavascript/WebformWebDriverTestBase.php
+++ b/tests/src/FunctionalJavascript/WebformWebDriverTestBase.php
@@ -41,7 +41,7 @@ abstract class WebformWebDriverTestBase extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->loadWebforms(static::$testWebforms);
   }
@@ -49,7 +49,7 @@ abstract class WebformWebDriverTestBase extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     $this->purgeSubmissions();
     parent::tearDown();
   }
diff --git a/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php b/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php
index d84b1acc4..814647244 100644
--- a/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php
+++ b/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php
@@ -107,7 +107,7 @@ class WebformBreadcrumbBuilderTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setUpMockEntities();
@@ -142,9 +142,7 @@ class WebformBreadcrumbBuilderTest extends UnitTestCase {
     // Setup mock cache context container.
     // @see \Drupal\Core\Breadcrumb\Breadcrumb
     // @see \Drupal\Core\Cache\RefinableCacheableDependencyTrait
-    $cache_contexts_manager = $this->getMockBuilder('Drupal\Core\Cache\Context\CacheContextsManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock('Drupal\Core\Cache\Context\CacheContextsManager');
     $cache_contexts_manager->method('assertValidTokens')->willReturn(TRUE);
     $container = new Container();
     $container->set('cache_contexts_manager', $cache_contexts_manager);
@@ -320,9 +318,7 @@ class WebformBreadcrumbBuilderTest extends UnitTestCase {
    */
   public function testBuildSourceEntityUserResults() {
     $this->setSourceEntity($this->node);
-    $webform_submission_access = $this->getMockBuilder('Drupal\webform\WebformSubmissionInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $webform_submission_access = $this->createMock('Drupal\webform\WebformSubmissionInterface');
     $webform_submission_access->expects($this->any())
       ->method('access')
       ->will($this->returnCallback(function ($operation) {
@@ -519,9 +515,7 @@ class WebformBreadcrumbBuilderTest extends UnitTestCase {
 
     /* node entities */
 
-    $this->node = $this->getMockBuilder('Drupal\node\NodeInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->node = $this->createMock('Drupal\node\NodeInterface');
     $this->node->expects($this->any())
       ->method('label')
       ->will($this->returnValue('{node}'));
@@ -542,9 +536,7 @@ class WebformBreadcrumbBuilderTest extends UnitTestCase {
 
     /* webform entities */
 
-    $this->webform = $this->getMockBuilder('Drupal\webform\WebformInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->webform = $this->createMock('Drupal\webform\WebformInterface');
     $this->webform->expects($this->any())
       ->method('label')
       ->will($this->returnValue('{webform}'));
@@ -564,9 +556,7 @@ class WebformBreadcrumbBuilderTest extends UnitTestCase {
 
     /* webform submission entities */
 
-    $this->webformSubmission = $this->getMockBuilder('Drupal\webform\WebformSubmissionInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->webformSubmission = $this->createMock('Drupal\webform\WebformSubmissionInterface');
     $this->webformSubmission->expects($this->any())
       ->method('getWebform')
       ->will($this->returnValue($this->webform));
diff --git a/tests/src/Kernel/Entity/WebformSubmissionEntityTest.php b/tests/src/Kernel/Entity/WebformSubmissionEntityTest.php
index 4a44d73b7..dd76625c4 100644
--- a/tests/src/Kernel/Entity/WebformSubmissionEntityTest.php
+++ b/tests/src/Kernel/Entity/WebformSubmissionEntityTest.php
@@ -24,7 +24,7 @@ class WebformSubmissionEntityTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('webform', ['webform']);
diff --git a/tests/src/Kernel/WebformEntityElementsValidationTest.php b/tests/src/Kernel/WebformEntityElementsValidationTest.php
index f0808b3bc..4a32bd0b1 100644
--- a/tests/src/Kernel/WebformEntityElementsValidationTest.php
+++ b/tests/src/Kernel/WebformEntityElementsValidationTest.php
@@ -29,7 +29,7 @@ class WebformEntityElementsValidationTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->validator = \Drupal::service('webform.elements_validator');
   }
diff --git a/tests/src/Kernel/WebformSubmissionPurgeApiTest.php b/tests/src/Kernel/WebformSubmissionPurgeApiTest.php
index 69c66de88..0c62880a4 100644
--- a/tests/src/Kernel/WebformSubmissionPurgeApiTest.php
+++ b/tests/src/Kernel/WebformSubmissionPurgeApiTest.php
@@ -32,7 +32,7 @@ class WebformSubmissionPurgeApiTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('path_alias');
     $this->installSchema('webform', ['webform']);
diff --git a/tests/src/Kernel/WebformSubmissionStorageTest.php b/tests/src/Kernel/WebformSubmissionStorageTest.php
index fe846b135..134227af8 100644
--- a/tests/src/Kernel/WebformSubmissionStorageTest.php
+++ b/tests/src/Kernel/WebformSubmissionStorageTest.php
@@ -24,7 +24,7 @@ class WebformSubmissionStorageTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('path_alias');
     $this->installSchema('webform', ['webform']);
diff --git a/tests/src/Unit/Access/WebformAccessTestBase.php b/tests/src/Unit/Access/WebformAccessTestBase.php
index c02798a04..a9f06e576 100644
--- a/tests/src/Unit/Access/WebformAccessTestBase.php
+++ b/tests/src/Unit/Access/WebformAccessTestBase.php
@@ -20,7 +20,7 @@ abstract class WebformAccessTestBase extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->container = new ContainerBuilder();
@@ -28,9 +28,7 @@ abstract class WebformAccessTestBase extends UnitTestCase {
 
     // Mock cache context manager and set container.
     // @copied from \Drupal\Tests\Core\Access\AccessResultTest::setUp
-    $cache_contexts_manager = $this->getMockBuilder('Drupal\Core\Cache\Context\CacheContextsManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock('Drupal\Core\Cache\Context\CacheContextsManager');
 
     $cache_contexts_manager->method('assertValidTokens')->willReturn(TRUE);
     $this->container->set('cache_contexts_manager', $cache_contexts_manager);
diff --git a/tests/src/Unit/Access/WebformSourceEntityAccessTest.php b/tests/src/Unit/Access/WebformSourceEntityAccessTest.php
index 1ff428579..d2522a3d8 100644
--- a/tests/src/Unit/Access/WebformSourceEntityAccessTest.php
+++ b/tests/src/Unit/Access/WebformSourceEntityAccessTest.php
@@ -28,9 +28,7 @@ class WebformSourceEntityAccessTest extends WebformAccessTestBase {
     ]);
 
     // Mock node.
-    $node = $this->getMockBuilder('Drupal\node\NodeInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $node = $this->createMock('Drupal\node\NodeInterface');
     $node->expects($this->any())
       ->method('access')
       ->willReturn(AccessResult::neutral());
@@ -39,17 +37,13 @@ class WebformSourceEntityAccessTest extends WebformAccessTestBase {
     $webform = $this->createMock('Drupal\webform\WebformInterface');
 
     // Mock webform node.
-    $webform_node = $this->getMockBuilder('Drupal\node\NodeInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $webform_node = $this->createMock('Drupal\node\NodeInterface');
     $webform_node->expects($this->any())
       ->method('access')
       ->willReturn(AccessResult::allowed());
 
     // Mock entity reference manager.
-    $entity_reference_manager = $this->getMockBuilder('Drupal\webform\WebformEntityReferenceManagerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity_reference_manager = $this->createMock('Drupal\webform\WebformEntityReferenceManagerInterface');
     $entity_reference_manager->expects($this->any())
       ->method('getWebform')
       ->will($this->returnValueMap([
diff --git a/tests/src/Unit/Cache/WebformBubbleableMetadataTest.php b/tests/src/Unit/Cache/WebformBubbleableMetadataTest.php
index 41d8656ec..8b30f2d9b 100644
--- a/tests/src/Unit/Cache/WebformBubbleableMetadataTest.php
+++ b/tests/src/Unit/Cache/WebformBubbleableMetadataTest.php
@@ -32,9 +32,7 @@ class WebformBubbleableMetadataTest extends UnitTestCase {
   public function testAppendTo(WebformBubbleableMetadata $bubbleable_metadata, array $build, array $expected) {
     // Mock CacheContextsManager::assertValidTokens.
     // @see \Drupal\Core\Cache\Cache::mergeContexts
-    $cache_contexts_manager = $this->getMockBuilder('Drupal\Core\Cache\Context\CacheContextsManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock('Drupal\Core\Cache\Context\CacheContextsManager');
     $cache_contexts_manager->method('assertValidTokens')->willReturn(TRUE);
     $container = new ContainerBuilder();
     $container->set('cache_contexts_manager', $cache_contexts_manager);
diff --git a/tests/src/Unit/Plugin/Block/WebformBlockTest.php b/tests/src/Unit/Plugin/Block/WebformBlockTest.php
index 0dd837a7f..09ff0ec4e 100644
--- a/tests/src/Unit/Plugin/Block/WebformBlockTest.php
+++ b/tests/src/Unit/Plugin/Block/WebformBlockTest.php
@@ -29,9 +29,7 @@ class WebformBlockTest extends UnitTestCase {
    */
   public function testCalculateDependencies() {
     // Create mock webform and webform block.
-    $webform = $this->getMockBuilder(WebformInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $webform = $this->createMock(WebformInterface::class);
     $webform->method('id')
       ->willReturn($this->randomMachineName());
     $webform->method('getConfigDependencyKey')
@@ -51,23 +49,17 @@ class WebformBlockTest extends UnitTestCase {
    * Tests the access of a webform block.
    */
   public function testBlockAccess() {
-    $account = $this->getMockBuilder(AccountInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $account = $this->createMock(AccountInterface::class);
 
     $cache_contexts = ['dummy_cache_context'];
 
-    $cache_contexts_manager = $this->getMockBuilder(CacheContextsManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock(CacheContextsManager::class);
     $cache_contexts_manager->method('assertValidTokens')
       ->willReturnMap([
         [$cache_contexts, TRUE],
       ]);
 
-    $container = $this->getMockBuilder(ContainerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $container = $this->createMock(ContainerInterface::class);
     $container->method('get')
       ->willReturnMap([
         ['cache_contexts_manager', ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE, $cache_contexts_manager],
@@ -81,9 +73,7 @@ class WebformBlockTest extends UnitTestCase {
     $access_result->addCacheContexts($cache_contexts);
 
     // Create mock webform and webform block.
-    $webform = $this->getMockBuilder(WebformInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $webform = $this->createMock(WebformInterface::class);
     $webform->method('id')
       ->willReturn($this->randomMachineName());
     $webform->method('access')
@@ -111,17 +101,11 @@ class WebformBlockTest extends UnitTestCase {
    *   A mock webform block.
    */
   protected function mockWebformBlock(WebformInterface $webform) {
-    $request_stack = $this->getMockBuilder(RequestStack::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $request_stack = $this->createMock(RequestStack::class);
 
-    $entity_type_manager = $this->getMockBuilder(EntityTypeManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity_type_manager = $this->createMock(EntityTypeManagerInterface::class);
 
-    $storage = $this->getMockBuilder(EntityStorageInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $storage = $this->createMock(EntityStorageInterface::class);
     $storage->method('load')
       ->willReturnMap([
         [$webform->id(), $webform],
@@ -132,9 +116,7 @@ class WebformBlockTest extends UnitTestCase {
         ['webform', $storage],
       ]);
 
-    $token_manager = $this->getMockBuilder(WebformTokenManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $token_manager = $this->createMock(WebformTokenManagerInterface::class);
 
     // Build container.
     $container = new ContainerBuilder();
diff --git a/tests/src/Unit/Plugin/WebformSourceEntity/QueryStringWebformSourceEntityTest.php b/tests/src/Unit/Plugin/WebformSourceEntity/QueryStringWebformSourceEntityTest.php
index 02e731f8a..502b14dbc 100644
--- a/tests/src/Unit/Plugin/WebformSourceEntity/QueryStringWebformSourceEntityTest.php
+++ b/tests/src/Unit/Plugin/WebformSourceEntity/QueryStringWebformSourceEntityTest.php
@@ -71,17 +71,14 @@ class QueryStringWebformSourceEntityTest extends UnitTestCase {
     [$source_entity, $source_entity_translation] = $this->getMockSourceEntity($options, $webform);
 
     // Mock source entity storage.
-    $source_entity_storage = $this->getMockBuilder(EntityStorageInterface::class)
-      ->getMock();
+    $source_entity_storage = $this->createMock(EntityStorageInterface::class);
     $source_entity_storage->method('load')
       ->willReturnMap([
         [$options['source_entity_id'], $source_entity],
       ]);
 
     // Move entity type manager which returns the mock source entity storage.
-    $entity_type_manager = $this->getMockBuilder(EntityTypeManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity_type_manager = $this->createMock(EntityTypeManagerInterface::class);
     $entity_type_manager->method('hasDefinition')
       ->willReturnMap([
         [$options['source_entity_type'], TRUE],
@@ -92,18 +89,14 @@ class QueryStringWebformSourceEntityTest extends UnitTestCase {
       ]);
 
     // Mock route match.
-    $route_match = $this->getMockBuilder(RouteMatchInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $route_match = $this->createMock(RouteMatchInterface::class);
     $route_match->method('getParameter')
       ->willReturnMap([
         ['webform', $options['route_match_get_parameter_webform'] ? $webform : NULL],
       ]);
 
     // Mock request stack.
-    $request_stack = $this->getMockBuilder(RequestStack::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $request_stack = $this->createMock(RequestStack::class);
     $request_stack->method('getCurrentRequest')
       ->will($this->returnValue(
         new Request([
@@ -113,9 +106,7 @@ class QueryStringWebformSourceEntityTest extends UnitTestCase {
       ));
 
     // Move entity reference manager.
-    $webform_entity_reference_manager = $this->getMockBuilder(WebformEntityReferenceManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $webform_entity_reference_manager = $this->createMock(WebformEntityReferenceManagerInterface::class);
     $webform_entity_reference_manager->method('getFieldNames')
       ->willReturnMap([
         [$source_entity, ['webform_field_name']],
@@ -123,9 +114,7 @@ class QueryStringWebformSourceEntityTest extends UnitTestCase {
       ]);
 
     // Mock language manager.
-    $language_manager = $this->getMockBuilder(LanguageManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $language_manager = $this->createMock(LanguageManagerInterface::class);
     $language_manager->method('getCurrentLanguage')
       ->willReturn(new Language(['id' => 'es']));
 
@@ -161,9 +150,7 @@ class QueryStringWebformSourceEntityTest extends UnitTestCase {
    *   A mocked webform entity.
    */
   protected function getMockWebform(array $options) {
-    $webform = $this->getMockBuilder(WebformInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $webform = $this->createMock(WebformInterface::class);
     $webform->method('getSetting')
       ->willReturnMap([
         ['form_prepopulate_source_entity', FALSE, $options['webform_settings_prepopulate_source_entity']],
@@ -187,8 +174,7 @@ class QueryStringWebformSourceEntityTest extends UnitTestCase {
    */
   protected function getMockSourceEntity(array $options, WebformInterface $webform) {
     // Mock source entity.
-    $source_entity = $this->getMockBuilder(ContentEntityInterface::class)
-      ->getMock();
+    $source_entity = $this->createMock(ContentEntityInterface::class);
     $source_entity->method('access')
       ->willReturnMap([
         ['view', NULL, FALSE, $options['source_entity_view_access_result']],
@@ -198,8 +184,7 @@ class QueryStringWebformSourceEntityTest extends UnitTestCase {
     ];
 
     // Mock source entity translation.
-    $source_entity_translation = $this->getMockBuilder(ContentEntityInterface::class)
-      ->getMock();
+    $source_entity_translation = $this->createMock(ContentEntityInterface::class);
     $source_entity_translation->method('access')
       ->willReturnMap([
         ['view', NULL, FALSE, $options['source_entity_view_access_result']],
diff --git a/tests/src/Unit/Plugin/WebformSourceEntity/RouteParametersWebformSourceEntityTest.php b/tests/src/Unit/Plugin/WebformSourceEntity/RouteParametersWebformSourceEntityTest.php
index bdf601e11..ce5f7f100 100644
--- a/tests/src/Unit/Plugin/WebformSourceEntity/RouteParametersWebformSourceEntityTest.php
+++ b/tests/src/Unit/Plugin/WebformSourceEntity/RouteParametersWebformSourceEntityTest.php
@@ -39,20 +39,16 @@ class RouteParametersWebformSourceEntityTest extends UnitTestCase {
    * @dataProvider providerGetCurrentSourceEntity
    */
   public function testGetCurrentSourceEntity(array $route_parameters, array $ignored_types, $expect_source_entity, $assert_message = '') {
-    $route_match = $this->getMockBuilder(RouteMatchInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $route_match = $this->createMock(RouteMatchInterface::class);
 
-    $source_entity = $this->getMockBuilder(EntityInterface::class)
-      ->getMock();
+    $source_entity = $this->createMock(EntityInterface::class);
 
     // Process $route_parameters to unwrap it with real objects.
     if (isset($route_parameters['source_entity'])) {
       $route_parameters['source_entity'] = $source_entity;
     }
     if (isset($route_parameters['another_entity'])) {
-      $route_parameters['another_entity'] = $this->getMockBuilder(EntityInterface::class)
-        ->getMock();
+      $route_parameters['another_entity'] = $this->createMock(EntityInterface::class);
     }
 
     $route_match->method('getParameters')
diff --git a/tests/src/Unit/Plugin/views/field/WebformSubmissionBulkFormTest.php b/tests/src/Unit/Plugin/views/field/WebformSubmissionBulkFormTest.php
index be9fb45b9..95b74ff06 100644
--- a/tests/src/Unit/Plugin/views/field/WebformSubmissionBulkFormTest.php
+++ b/tests/src/Unit/Plugin/views/field/WebformSubmissionBulkFormTest.php
@@ -21,7 +21,7 @@ class WebformSubmissionBulkFormTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     parent::tearDown();
     $container = new ContainerBuilder();
     \Drupal::setContainer($container);
@@ -68,9 +68,7 @@ class WebformSubmissionBulkFormTest extends UnitTestCase {
 
     $messenger = $this->createMock('\Drupal\Core\Messenger\MessengerInterface');
 
-    $views_data = $this->getMockBuilder('Drupal\views\ViewsData')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $views_data = $this->createMock('Drupal\views\ViewsData');
     $views_data->expects($this->any())
       ->method('get')
       ->with('webform_submission')
@@ -86,14 +84,10 @@ class WebformSubmissionBulkFormTest extends UnitTestCase {
       ->with('base_table')
       ->will($this->returnValue('webform_submission'));
 
-    $executable = $this->getMockBuilder('Drupal\views\ViewExecutable')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $executable = $this->createMock('Drupal\views\ViewExecutable');
     $executable->storage = $storage;
 
-    $display = $this->getMockBuilder('Drupal\views\Plugin\views\display\DisplayPluginBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $display = $this->createMock('Drupal\views\Plugin\views\display\DisplayPluginBase');
 
     $definition['title'] = '';
     $options = [];
diff --git a/tests/src/Unit/WebformEntityAccessControlHandlerTest.php b/tests/src/Unit/WebformEntityAccessControlHandlerTest.php
index e30071d2c..bd5b83687 100644
--- a/tests/src/Unit/WebformEntityAccessControlHandlerTest.php
+++ b/tests/src/Unit/WebformEntityAccessControlHandlerTest.php
@@ -40,7 +40,7 @@ class WebformEntityAccessControlHandlerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->container = new ContainerBuilder();
@@ -48,9 +48,7 @@ class WebformEntityAccessControlHandlerTest extends UnitTestCase {
 
     // Mock cache context manager and set container.
     // @copied from \Drupal\Tests\Core\Access\AccessResultTest::setUp
-    $cache_contexts_manager = $this->getMockBuilder('Drupal\Core\Cache\Context\CacheContextsManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock('Drupal\Core\Cache\Context\CacheContextsManager');
 
     $cache_contexts_manager->method('assertValidTokens')->willReturn(TRUE);
     $this->container->set('cache_contexts_manager', $cache_contexts_manager);
@@ -114,35 +112,29 @@ class WebformEntityAccessControlHandlerTest extends UnitTestCase {
     $entity_type = new ConfigEntityType(['id' => 'webform']);
 
     // Mock request stack.
-    $request_stack = $this->getMockBuilder(RequestStack::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $request_stack = $this->createMock(RequestStack::class);
     $request_stack->method('getCurrentRequest')
       ->willReturn(new Request(['token' => $token], [], ['_format' => $options['request_format']]));
 
     // Mock webform submission storage.
-    $webform_submission_storage = $this->getMockBuilder(WebformSubmissionStorageInterface::class)
-      ->getMock();
+    $webform_submission_storage = $this->createMock(WebformSubmissionStorageInterface::class);
 
     // Mock entity type manager.
-    $entity_type_manager = $this->getMockBuilder(EntityTypeManagerInterface::class)
-      ->getMock();
+    $entity_type_manager = $this->createMock(EntityTypeManagerInterface::class);
     $entity_type_manager->method('getStorage')
       ->willReturnMap([
         ['webform_submission', $webform_submission_storage],
       ]);
 
     // Mock webform source entity manager.
-    $webform_source_entity_manager = $this->getMockBuilder(WebformSourceEntityManagerInterface::class)
-      ->getMock();
+    $webform_source_entity_manager = $this->createMock(WebformSourceEntityManagerInterface::class);
     $webform_source_entity_manager->method('getSourceEntity')
       ->willReturn(NULL);
 
     // Mock account.
     $permissions = $options['permissions'];
     $account_id = 2;
-    $account = $this->getMockBuilder(AccountInterface::class)
-      ->getMock();
+    $account = $this->createMock(AccountInterface::class);
     $account->method('hasPermission')
       ->willReturnCallback(function ($permission) use ($permissions) {
         return in_array($permission, $permissions);
@@ -153,8 +145,7 @@ class WebformEntityAccessControlHandlerTest extends UnitTestCase {
       ->willReturn($account->id() > 0);
 
     // Mock webform.
-    $webform = $this->getMockBuilder(WebformInterface::class)
-      ->getMock();
+    $webform = $this->createMock(WebformInterface::class);
     $webform->method('getOwnerId')
       ->willReturn($account_id);
     $webform->method('isTemplate')
@@ -176,8 +167,7 @@ class WebformEntityAccessControlHandlerTest extends UnitTestCase {
       ->willReturn(['webform_cache_tag']);
 
     // Mock webform submissions.
-    $webform_submission = $this->getMockBuilder(WebformSubmissionInterface::class)
-      ->getMock();
+    $webform_submission = $this->createMock(WebformSubmissionInterface::class);
     $webform_submission->method('getCacheContexts')
       ->willReturn(['webform_submission_cache_context']);
     $webform_submission->method('getCacheTags')
@@ -192,8 +182,7 @@ class WebformEntityAccessControlHandlerTest extends UnitTestCase {
       ]);
 
     // Mock access rules manager.
-    $access_rules_manager = $this->getMockBuilder(WebformAccessRulesManagerInterface::class)
-      ->getMock();
+    $access_rules_manager = $this->createMock(WebformAccessRulesManagerInterface::class);
     $access_rules_manager->method('checkWebformAccess')
       ->will(
         $this->returnCallback(
diff --git a/tests/src/Unit/WebformMessageManagerTest.php b/tests/src/Unit/WebformMessageManagerTest.php
index 2f0feeb5d..cea7f7f54 100644
--- a/tests/src/Unit/WebformMessageManagerTest.php
+++ b/tests/src/Unit/WebformMessageManagerTest.php
@@ -28,9 +28,7 @@ class WebformMessageManagerTest extends UnitTestCase {
    */
   public function testMessageManager() {
     // Mock webform.
-    $webform = $this->getMockBuilder(WebformInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $webform = $this->createMock(WebformInterface::class);
     $webform->method('getSettings')
       ->will($this->returnCallback(function () {
         return [
@@ -40,18 +38,14 @@ class WebformMessageManagerTest extends UnitTestCase {
       }));
 
     // Mock url.
-    $url = $this->getMockBuilder('\Drupal\Core\Url')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock('\Drupal\Core\Url');
     $url->method('toString')
       ->willReturn('http://example.com/');
 
     /* ********************************************************************** */
 
     // Mock current user.
-    $current_user = $this->getMockBuilder(AccountInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $current_user = $this->createMock(AccountInterface::class);
 
     // Mock config factory.
     $config_factory = $this->getConfigFactoryStub(
@@ -65,43 +59,31 @@ class WebformMessageManagerTest extends UnitTestCase {
     );
 
     // Mock webform submission storage.
-    $webform_submission_storage = $this->getMockBuilder(WebformSubmissionStorageInterface::class)
-      ->getMock();
+    $webform_submission_storage = $this->createMock(WebformSubmissionStorageInterface::class);
 
     // Mock entity type manager.
-    $entity_type_manager = $this->getMockBuilder(EntityTypeManagerInterface::class)
-      ->getMock();
+    $entity_type_manager = $this->createMock(EntityTypeManagerInterface::class);
     $entity_type_manager->method('getStorage')
       ->willReturnMap([
         ['webform_submission', $webform_submission_storage],
       ]);
 
     // Mock logger.
-    $logger = $this->getMockBuilder(LoggerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $logger = $this->createMock(LoggerInterface::class);
 
     // Mock renderer.
-    $renderer = $this->getMockBuilder(RendererInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $renderer = $this->createMock(RendererInterface::class);
 
     // Mock messenger.
-    $messenger = $this->getMockBuilder(MessengerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $messenger = $this->createMock(MessengerInterface::class);
 
     // Mock webform request handler.
-    $request_handler = $this->getMockBuilder(WebformRequestInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $request_handler = $this->createMock(WebformRequestInterface::class);
     $request_handler->method('getUrl')
       ->willReturn($url);
 
     // Mock webform token manager.
-    $token_manager = $this->getMockBuilder(WebformTokenManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $token_manager = $this->createMock(WebformTokenManagerInterface::class);
     $token_manager->method('replace')
       ->will($this->returnCallback(function ($text) {
         return $text;
diff --git a/webform.api.php b/webform.api.php
index 5cd6acba0..3c17d21fd 100644
--- a/webform.api.php
+++ b/webform.api.php
@@ -1,5 +1,12 @@
 <?php
 
+use Drupal\Core\Form\FormStateInterface;
+use Drupal\Core\Session\AccountInterface;
+use Drupal\Core\Access\AccessResult;
+use Drupal\webform\Plugin\WebformHandlerInterface;
+use Drupal\webform\Element\WebformMessage;
+use Drupal\webform\WebformSubmissionInterface;
+use Drupal\Core\Database\Query\AlterableInterface;
 /**
  * @file
  * Hooks related to Webform module.
@@ -98,7 +105,7 @@ function hook_webform_element_translatable_properties_alter(array &$properties,
  * @see webform_example_element_properties.module
  * @ingroup form_api
  */
-function hook_webform_element_configuration_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+function hook_webform_element_configuration_form_alter(array &$form, FormStateInterface $form_state) {
   /** @var Drupal\webform_ui\Form\WebformUiElementEditForm $form_object */
   $form_object = $form_state->getFormObject();
   $element_plugin = $form_object->getWebformElementPlugin();
@@ -163,7 +170,7 @@ function hook_webform_element_configuration_form_alter(array &$form, \Drupal\Cor
  * @see \Drupal\webform\WebformSubmissionForm::prepareElements()
  * @see hook_webform_element_ELEMENT_TYPE_alter()
  */
-function hook_webform_element_alter(array &$element, \Drupal\Core\Form\FormStateInterface $form_state, array $context) {
+function hook_webform_element_alter(array &$element, FormStateInterface $form_state, array $context) {
   // Code here acts on all elements included in a webform.
   /** @var \Drupal\webform\WebformSubmissionForm $form_object */
   $form_object = $form_state->getFormObject();
@@ -217,7 +224,7 @@ function hook_webform_element_alter(array &$element, \Drupal\Core\Form\FormState
  * @see \Drupal\webform\WebformSubmissionForm::prepareElements()
  * @see hook_webform_element_alter(()
  */
-function hook_webform_element_ELEMENT_TYPE_alter(array &$element, \Drupal\Core\Form\FormStateInterface $form_state, array $context) {
+function hook_webform_element_ELEMENT_TYPE_alter(array &$element, FormStateInterface $form_state, array $context) {
   // Add custom data attributes to a specific element type.
   $element['#attributes']['data-custom'] = '{custom data goes here}';
 
@@ -266,12 +273,12 @@ function hook_webform_element_ELEMENT_TYPE_alter(array &$element, \Drupal\Core\F
  * @return \Drupal\Core\Access\AccessResult
  *   The access provided. Return neutral if no change.
  */
-function hook_webform_element_access($operation, array &$element, \Drupal\Core\Session\AccountInterface $account = NULL, array $context = []) {
+function hook_webform_element_access($operation, array &$element, AccountInterface $account = NULL, array $context = []) {
   // Load the current webform and submission for element's context.
   $webform = $context['webform'];
   $webform_submission = $context['webform_submission'];
 
-  return !empty($element['#confidential']) ? \Drupal\Core\Access\AccessResult::forbidden() : \Drupal\Core\Access\AccessResult::neutral();
+  return !empty($element['#confidential']) ? AccessResult::forbidden() : AccessResult::neutral();
 }
 
 /**
@@ -377,7 +384,7 @@ function hook_webform_submissions_post_purge(array $webform_submissions) {
  *
  * @ingroup form_api
  */
-function hook_webform_submission_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function hook_webform_submission_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
 
 }
 
@@ -397,7 +404,7 @@ function hook_webform_submission_form_alter(array &$form, \Drupal\Core\Form\Form
  *
  * @ingroup form_api
  */
-function hook_webform_admin_third_party_settings_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+function hook_webform_admin_third_party_settings_form_alter(array &$form, FormStateInterface $form_state) {
 
 }
 
@@ -417,7 +424,7 @@ function hook_webform_admin_third_party_settings_form_alter(array &$form, \Drupa
  *
  * @ingroup form_api
  */
-function hook_webform_third_party_settings_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+function hook_webform_third_party_settings_form_alter(array &$form, FormStateInterface $form_state) {
 
 }
 
@@ -441,7 +448,7 @@ function hook_webform_third_party_settings_form_alter(array &$form, \Drupal\Core
  *
  * @see \Drupal\webform\Plugin\WebformHandlerInterface
  */
-function hook_webform_handler_invoke_alter(\Drupal\webform\Plugin\WebformHandlerInterface $handler, $method_name, array &$args) {
+function hook_webform_handler_invoke_alter(WebformHandlerInterface $handler, $method_name, array &$args) {
   $webform = $handler->getWebform();
   $webform_submission = $handler->getWebformSubmission();
 
@@ -468,7 +475,7 @@ function hook_webform_handler_invoke_alter(\Drupal\webform\Plugin\WebformHandler
  *
  * @see \Drupal\webform\Plugin\WebformHandlerInterface
  */
-function hook_webform_handler_invoke_METHOD_NAME_alter(\Drupal\webform\Plugin\WebformHandlerInterface $handler, array &$args) {
+function hook_webform_handler_invoke_METHOD_NAME_alter(WebformHandlerInterface $handler, array &$args) {
   $webform = $handler->getWebform();
   $webform_submission = $handler->getWebformSubmission();
 
@@ -558,7 +565,7 @@ function hook_webform_help_info() {
     'message_id' => '',
     'message_type' => 'warning',
     'message_close' => TRUE,
-    'message_storage' => \Drupal\webform\Element\WebformMessage::STORAGE_STATE,
+    'message_storage' => WebformMessage::STORAGE_STATE,
   ];
 
   return $help;
@@ -667,20 +674,20 @@ function hook_webform_access_rules_alter(array &$access_rules) {
  *
  * Implements *_any and *_own operations for a module.
  */
-function hook_webform_submission_access(\Drupal\webform\WebformSubmissionInterface $webform_submission, $operation, \Drupal\Core\Session\AccountInterface $account) {
+function hook_webform_submission_access(WebformSubmissionInterface $webform_submission, $operation, AccountInterface $account) {
   /** @var \Drupal\webform\WebformAccessRulesManagerInterface $access_rules_manager */
   $access_rules_manager = \Drupal::service('webform.access_rules_manager');
 
   // Add support for some module *_any and *_own access rules.
   $access_rules = \Drupal::moduleHandler()->invoke('MY_MODULE', 'webform_access_rules');
-  $access_any = isset($access_rules[$operation . '_any']) ? $access_rules_manager->checkWebformSubmissionAccess($operation . '_any', $account, $webform_submission) : \Drupal\Core\Access\AccessResult::forbidden();
-  $access_own = (isset($access_rules[$operation . '_own']) && $webform_submission->isOwner($account)) ? $access_rules_manager->checkWebformSubmissionAccess($operation . '_own', $account, $webform_submission) : \Drupal\Core\Access\AccessResult::forbidden();
+  $access_any = isset($access_rules[$operation . '_any']) ? $access_rules_manager->checkWebformSubmissionAccess($operation . '_any', $account, $webform_submission) : AccessResult::forbidden();
+  $access_own = (isset($access_rules[$operation . '_own']) && $webform_submission->isOwner($account)) ? $access_rules_manager->checkWebformSubmissionAccess($operation . '_own', $account, $webform_submission) : AccessResult::forbidden();
   $access = $access_any->orIf($access_own);
   if ($access->isAllowed()) {
     return $access;
   }
   else {
-    return \Drupal\Core\Access\AccessResult::neutral();
+    return AccessResult::neutral();
   }
 }
 
@@ -734,7 +741,7 @@ function hook_webform_message_custom($operation, $id) {
  *
  * @see webform_query_webform_submission_access_alter()
  */
-function hook_webform_submission_query_access_alter(\Drupal\Core\Database\Query\AlterableInterface $query, array $webform_submission_tables) {
+function hook_webform_submission_query_access_alter(AlterableInterface $query, array $webform_submission_tables) {
   // Always allow the current user access to their submissions.
   foreach ($webform_submission_tables as $table) {
     $table['condition']->condition($table['alias'] . '.uid', \Drupal::currentUser()->id());
