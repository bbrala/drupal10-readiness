modules/contrib/library_management_system/library_management_system.module
modules/contrib/library_management_system/src/Entity/LmsBook.php
modules/contrib/library_management_system/src/Form/IssuedLmsBookDeleteForm.php
modules/contrib/library_management_system/src/LmsBookAccessControlHandler.php
modules/contrib/library_management_system/src/Plugin/views/field/RequestedBookIssuedDate.php
modules/contrib/library_management_system/src/Form/IssuedLmsBookForm.php
modules/contrib/library_management_system/src/LmsBookAuthorAccessControlHandler.php
modules/contrib/library_management_system/src/LmsBookAuthorHtmlRouteProvider.php
modules/contrib/library_management_system/src/Form/IssuedLmsBookSettingsForm.php
modules/contrib/library_management_system/src/Form/LmsBookAuthorDeleteForm.php
modules/contrib/library_management_system/src/Form/LmsBookAuthorForm.php
modules/contrib/library_management_system/src/Form/LmsBookAuthorSettingsForm.php
modules/contrib/library_management_system/src/LmsBookAuthorListBuilder.php
modules/contrib/library_management_system/src/Form/LmsBookDeleteForm.php
modules/contrib/library_management_system/src/Form/LmsBookForm.php
modules/contrib/library_management_system/src/LmsBookAuthorTranslationHandler.php
modules/contrib/library_management_system/src/Form/LmsBookSettingsForm.php
modules/contrib/library_management_system/src/LmsBookAuthorViewBuilder.php
modules/contrib/library_management_system/src/Form/LmsPublicationDeleteForm.php
modules/contrib/library_management_system/src/Form/LmsPublicationForm.php
modules/contrib/library_management_system/src/Form/LmsPublicationSettingsForm.php
modules/contrib/library_management_system/src/Form/RequestedLmsBookDeleteForm.php
modules/contrib/library_management_system/src/Form/RequestedLmsBookForm.php
modules/contrib/library_management_system/src/LmsBookHtmlRouteProvider.php
modules/contrib/library_management_system/src/Form/RequestedLmsBookSettingsForm.php
modules/contrib/library_management_system/src/IssuedLmsBookAccessControlHandler.php
modules/contrib/library_management_system/src/LmsBookListBuilder.php
modules/contrib/library_management_system/src/LmsBookTranslationHandler.php
modules/contrib/library_management_system/src/LmsBookViewBuilder.php
modules/contrib/library_management_system/src/IssuedLmsBookHtmlRouteProvider.php
modules/contrib/library_management_system/src/LmsPublicationAccessControlHandler.php
modules/contrib/library_management_system/src/LmsPublicationHtmlRouteProvider.php
modules/contrib/library_management_system/src/LmsPublicationListBuilder.php
modules/contrib/library_management_system/src/LmsPublicationTranslationHandler.php
modules/contrib/library_management_system/src/LmsPublicationViewBuilder.php
modules/contrib/library_management_system/src/IssuedLmsBookListBuilder.php
modules/contrib/library_management_system/src/Plugin/Action/BulkExportExcel.php
modules/contrib/library_management_system/src/IssuedLmsBookTranslationHandler.php
modules/contrib/library_management_system/src/IssuedLmsBookViewBuilder.php
modules/contrib/library_management_system/src/Plugin/views/field/RequestedBookReturnedDate.php
modules/contrib/library_management_system/src/Plugin/Action/BulkIssue.php
modules/contrib/library_management_system/src/Plugin/ExcelReader.php
modules/contrib/library_management_system/src/Entity/LmsBookAuthor.php
modules/contrib/library_management_system/src/Plugin/views/field/TotalFineAmount.php
modules/contrib/library_management_system/library_management_system.views.inc
modules/contrib/library_management_system/src/Plugin/views/field/TotalIssuedBooks.php
modules/contrib/library_management_system/src/Controller/IssuedLmsBookController.php
modules/contrib/library_management_system/src/Plugin/views/field/TotalPublicationBooks.php
modules/contrib/library_management_system/src/RequestedBookTranslationHandler.php
modules/contrib/library_management_system/src/RequestedLmsBookAccessControlHandler.php
modules/contrib/library_management_system/src/Controller/LmsBookAuthorController.php
modules/contrib/library_management_system/src/Controller/LmsBookController.php
modules/contrib/library_management_system/src/RequestedLmsBookHtmlRouteProvider.php
modules/contrib/library_management_system/src/Controller/LmsPublicationController.php
modules/contrib/library_management_system/src/Controller/ProjectController.php
modules/contrib/library_management_system/src/Controller/QuoteController.php
modules/contrib/library_management_system/src/Controller/ReportController.php
modules/contrib/library_management_system/src/Controller/RequestedLmsBookController.php
modules/contrib/library_management_system/src/RequestedLmsBookListBuilder.php
modules/contrib/library_management_system/src/Entity/IssuedLmsBook.php
modules/contrib/library_management_system/src/RequestedLmsBookViewBuilder.php
modules/contrib/library_management_system/src/Entity/LmsBookAuthorInterface.php
modules/contrib/library_management_system/src/Entity/LmsBookAuthorViewsData.php
modules/contrib/library_management_system/src/Entity/LmsBookInterface.php
modules/contrib/library_management_system/src/Entity/LmsBookViewsData.php
modules/contrib/library_management_system/src/Entity/LmsPublication.php
modules/contrib/library_management_system/src/Entity/LmsPublicationInterface.php
modules/contrib/library_management_system/src/Entity/LmsPublicationViewsData.php
modules/contrib/library_management_system/src/Entity/RequestedLmsBook.php
modules/contrib/library_management_system/src/Entity/IssuedLmsBookInterface.php
modules/contrib/library_management_system/src/Entity/IssuedLmsBookViewsData.php
modules/contrib/library_management_system/src/Entity/RequestedLmsBookInterface.php
modules/contrib/library_management_system/src/Entity/RequestedLmsBookViewsData.php
modules/contrib/library_management_system/src/FeaturedImageListBuilder.php
modules/contrib/library_management_system/src/Form/ConfirmDeleteMultipleBlog.php
modules/contrib/library_management_system/src/Form/ConfirmDeleteMultipleIssuedLmsBook.php
modules/contrib/library_management_system/src/Form/ConfirmDeleteMultipleProject.php
modules/contrib/library_management_system/src/Form/ConfirmDeleteMultipleService.php
modules/contrib/library_management_system/src/Form/EntitiesSearchForm.php
modules/contrib/library_management_system/src/Form/FineAmountSettingsForm.php
modules/contrib/library_management_system/src/Form/ImportDataForm.php
modules/contrib/library_management_system/src/Plugin/views/field/AuthorBooksCount.php
modules/contrib/library_management_system/src/Plugin/views/field/BookAuthors.php

9 files with changes
====================

1) modules/contrib/library_management_system/src/Plugin/views/field/RequestedBookReturnedDate.php:111

    ---------- begin diff ----------
@@ @@

     $date_formats = [];
     foreach ($this->dateFormatStorage->loadMultiple() as $machine_name => $value) {
-      $date_formats[$machine_name] = $this->t('@name format: @date', ['@name' => $value->label(), '@date' => $this->dateFormatter->format(REQUEST_TIME, $machine_name)]);
+      $date_formats[$machine_name] = $this->t('@name format: @date', ['@name' => $value->label(), '@date' => $this->dateFormatter->format(\Drupal::time()->getRequestTime(), $machine_name)]);
     }

     $form['date_format'] = [
@@ @@
             $timezone = !empty($this->options['timezone']) ? $this->options['timezone'] : NULL;
       // Will be positive for a datetime in the past (ago), and negative for a
       // datetime in the future (hence).
-            $time_diff = REQUEST_TIME - $returned_timestamp;
+            $time_diff = \Drupal::time()->getRequestTime() - $returned_timestamp;
             switch ($format) {
               case 'raw time ago':
               return $this->dateFormatter->formatTimeDiffSince($returned_timestamp, ['granularity' => is_numeric($custom_format) ? $custom_format : 2]);
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/library_management_system/src/Plugin/views/field/RequestedBookIssuedDate.php:111

    ---------- begin diff ----------
@@ @@

     $date_formats = [];
     foreach ($this->dateFormatStorage->loadMultiple() as $machine_name => $value) {
-      $date_formats[$machine_name] = $this->t('@name format: @date', ['@name' => $value->label(), '@date' => $this->dateFormatter->format(REQUEST_TIME, $machine_name)]);
+      $date_formats[$machine_name] = $this->t('@name format: @date', ['@name' => $value->label(), '@date' => $this->dateFormatter->format(\Drupal::time()->getRequestTime(), $machine_name)]);
     }

     $form['date_format'] = [
@@ @@
           $timezone = !empty($this->options['timezone']) ? $this->options['timezone'] : NULL;
       // Will be positive for a datetime in the past (ago), and negative for a
       // datetime in the future (hence).
-          $time_diff = REQUEST_TIME - $issued_timestamp;
+          $time_diff = \Drupal::time()->getRequestTime() - $issued_timestamp;
           switch ($format) {
             case 'raw time ago':
             return $this->dateFormatter->formatTimeDiffSince($issued_timestamp, ['granularity' => is_numeric($custom_format) ? $custom_format : 2]);
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/library_management_system/src/Entity/IssuedLmsBook.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\library_management_system\Entity;

+use Drupal\image\Entity\ImageStyle;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ @@
     $path = '';
     if($this->get('image')) {
       $uri = $this->get('image')->entity->getFileUri();
-      $path = \Drupal\image\Entity\ImageStyle::load('medium')->buildUrl($uri);
+      $path = ImageStyle::load('medium')->buildUrl($uri);
     }
     return $path;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/library_management_system/library_management_system.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\taxonomy\Entity\Vocabulary;
+use Drupal\Core\Entity\EntityFormInterface;
 /**
  * @file
  * Contains library_management_system.module.
@@ @@
     )
   );
   foreach ($vocabularies_array as $key => $vocabulary_array) {
-    $vocabularies = \Drupal\taxonomy\Entity\Vocabulary::loadMultiple();
+    $vocabularies = Vocabulary::loadMultiple();
     if (!isset($vocabularies[$vocabulary_array['vid']])) {
-      $vocabulary = \Drupal\taxonomy\Entity\Vocabulary::create(array(
+      $vocabulary = Vocabulary::create(array(
         'vid' => $vocabulary_array['vid'],
         'description' => '',
         'name' => $vocabulary_array['name'],
@@ @@
 /**
  * Implements hook_entity_presave().
  */
-function library_management_system_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
+function library_management_system_entity_presave(EntityInterface $entity) {

   switch ($entity->bundle()) {
     // Here you modify only your day content type
@@ @@
     $returned_date_value = $returned_date[0]['value']??null;

     if($returned_date_value) {
-     if ($form_state->getFormObject() instanceof \Drupal\Core\Entity\EntityFormInterface) {
+     if ($form_state->getFormObject() instanceof EntityFormInterface) {
       $entity = $form_state->getFormObject()->getEntity();
       $entity_type = $entity->bundle();

@@ @@
 /**
  * Implements hook_form_views_exposed_form_alter()
  */
-function library_management_system_form_views_exposed_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
+function library_management_system_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id)
 {
   $view = $form_state->get('view');

@@ @@
   $text = trim($text);
   $text = preg_replace('!\s+!', '', $text);
   return $text;
-}
+}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


5) modules/contrib/library_management_system/src/Form/ImportDataForm.php:100

    ---------- begin diff ----------
@@ @@
     global $base_root, $base_path;
     $valid_formats = array('xlsx', 'json', 'csv');
     foreach ($valid_formats as $valid_format) {
-      $file_path = $base_root . $base_path .drupal_get_path('module', 'library_management_system') . "/assets/sample-files/".$import_data_to.'.'.$valid_format;
+      $file_path = $base_root . $base_path .\Drupal::service('extension.list.module')->getPath('library_management_system') . "/assets/sample-files/".$import_data_to.'.'.$valid_format;

       $markup = "Download sample {$import_data_to} <em>{$valid_format}</em> file from <a href='".$file_path."' download>here </a><br/>";
       $form['wrapper']['download_samples']['download'.$valid_format] = [
@@ @@
         $file_data = array();

         if(!file_exists($full_path) || !is_readable($full_path)) {
-          drupal_set_message($this->t('File could not be uploaded.'), 'error');
+          $this->messenger()->addError($this->t('File could not be uploaded.'));
         } else {
           $file_data = call_user_func(array($this, 'get_'.$file_extension.'_import_data'), $full_path);
           if(isset($file_data['error'])) {
-            drupal_set_message($this->t('Error Response: '.$file_data['message']), 'error');
+            $this->messenger()->addError($this->t('Error Response: '.$file_data['message']));
           }
         }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/library_management_system/src/Entity/LmsPublication.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\library_management_system\Entity;

+use Drupal\image\Entity\ImageStyle;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ @@
     $path = '';
     if($this->get('image')) {
       $uri = $this->get('image')->entity->getFileUri();
-      $path = \Drupal\image\Entity\ImageStyle::load('medium')->buildUrl($uri);
+      $path = ImageStyle::load('medium')->buildUrl($uri);
     }
     return $path;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/library_management_system/src/Entity/LmsBookAuthor.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\library_management_system\Entity;

+use Drupal\image\Entity\ImageStyle;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ @@
     $path = '';
     if($this->get('image')) {
       $uri = $this->get('image')->entity->getFileUri();
-      $path = \Drupal\image\Entity\ImageStyle::load('medium')->buildUrl($uri);
+      $path = ImageStyle::load('medium')->buildUrl($uri);
     }
     return $path;
   }
@@ @@
    */
   public function getRequestedLmsBookAuthor() {

-    return file_create_url($this->get('requestedlmsbookauthor')->entity->image->entity->getFileUri());
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($this->get('requestedlmsbookauthor')->entity->image->entity->getFileUri());
   }

       /**
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/library_management_system/src/Entity/LmsBook.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\library_management_system\Entity;

+use Drupal\image\Entity\ImageStyle;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ @@
     $path = '';
     if($this->get('image')) {
       $uri = $this->get('image')->entity->getFileUri();
-      $path = \Drupal\image\Entity\ImageStyle::load('medium')->buildUrl($uri);
+      $path = ImageStyle::load('medium')->buildUrl($uri);
     }
     return $path;
   }
@@ @@
    */
   public function getRequestedLmsBook() {

-    return file_create_url($this->get('requestedlmsbook')->entity->image->entity->getFileUri());
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($this->get('requestedlmsbook')->entity->image->entity->getFileUri());
   }

     /**
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/library_management_system/src/Plugin/Action/BulkExportExcel.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\library_management_system\Plugin\Action;

+use Drupal\Core\Render\Markup;
 use Drupal\views_bulk_operations\Action\ViewsBulkOperationsActionBase;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@

     $file->save();

-    $url = file_create_url($file->getFileUri());
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());

     $message = 'click here to download the excel file <a href='.$url.'>Download</a>';
-    $rendered_message = \Drupal\Core\Render\Markup::create($message);
+    $rendered_message = Markup::create($message);
     \Drupal::messenger()->addMessage($rendered_message);

   }
 }
 }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 9 files have been changed by Rector                                       

