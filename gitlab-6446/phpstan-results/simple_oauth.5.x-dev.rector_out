modules/contrib/simple_oauth/simple_oauth.api.php
modules/contrib/simple_oauth/src/Authentication/Provider/SimpleOauthAuthenticationProvider.php
modules/contrib/simple_oauth/src/Entities/UserEntity.php
modules/contrib/simple_oauth/src/Normalizer/TokenEntityNormalizerInterface.php
modules/contrib/simple_oauth/src/Repositories/RefreshTokenRepository.php
modules/contrib/simple_oauth/tests/src/Functional/RequestHelperTrait.php
modules/contrib/simple_oauth/src/Normalizer/UserClaimsNormalizer.php
modules/contrib/simple_oauth/src/Entities/UserEntityWithClaims.php
modules/contrib/simple_oauth/src/Entity/ConfigEntityLockableInterface.php
modules/contrib/simple_oauth/src/Entity/ConfigEntityLockableTrait.php
modules/contrib/simple_oauth/src/Entity/Form/Oauth2GenerateKeyForm.php
modules/contrib/simple_oauth/src/Repositories/RevocableTokenRepositoryTrait.php
modules/contrib/simple_oauth/tests/src/Functional/RolesNegotiationFunctionalTest.php
modules/contrib/simple_oauth/simple_oauth.install
modules/contrib/simple_oauth/src/Oauth2TokenListBuilder.php
modules/contrib/simple_oauth/src/Repositories/ScopeRepository.php
modules/contrib/simple_oauth/src/Entity/Form/Oauth2TokenDeleteForm.php
modules/contrib/simple_oauth/src/OpenIdConnect/OpenIdConnectScopeRepository.php
modules/contrib/simple_oauth/src/Authentication/TokenAuthUser.php
modules/contrib/simple_oauth/src/Entity/Form/Oauth2TokenSettingsForm.php
modules/contrib/simple_oauth/src/OpenIdConnect/UserIdentityProvider.php
modules/contrib/simple_oauth/simple_oauth.module
modules/contrib/simple_oauth/src/Repositories/UserRepository.php
modules/contrib/simple_oauth/src/Server/ResourceServer.php
modules/contrib/simple_oauth/src/PageCache/DisallowSimpleOauthRequests.php
modules/contrib/simple_oauth/src/PageCache/SimpleOauthRequestPolicyInterface.php
modules/contrib/simple_oauth/src/Plugin/Oauth2Grant/AuthorizationCode.php
modules/contrib/simple_oauth/src/Server/ResourceServerInterface.php
modules/contrib/simple_oauth/src/Service/Exception/ExtensionNotLoadedException.php
modules/contrib/simple_oauth/src/Service/Exception/FilesystemValidationException.php
modules/contrib/simple_oauth/src/Service/Filesystem/FileSystemChecker.php
modules/contrib/simple_oauth/src/Service/Filesystem/FilesystemValidator.php
modules/contrib/simple_oauth/src/Plugin/Oauth2Grant/ClientCredentials.php
modules/contrib/simple_oauth/src/Entity/Oauth2Token.php
modules/contrib/simple_oauth/src/Plugin/Oauth2Grant/Code.php
modules/contrib/simple_oauth/src/Plugin/Oauth2Grant/Implicit.php
modules/contrib/simple_oauth/src/Service/KeyGenerator.php
modules/contrib/simple_oauth/src/AccessTokenAccessControlHandler.php
modules/contrib/simple_oauth/src/Plugin/Oauth2Grant/Password.php
modules/contrib/simple_oauth/src/Service/KeyGeneratorService.php
modules/contrib/simple_oauth/src/Plugin/Oauth2Grant/RefreshToken.php
modules/contrib/simple_oauth/src/Annotation/Oauth2Grant.php
modules/contrib/simple_oauth/tests/simple_oauth_test/src/Controller/RedirectDebug.php
modules/contrib/simple_oauth/src/Plugin/Oauth2GrantBase.php
modules/contrib/simple_oauth/src/Plugin/Oauth2GrantInterface.php
modules/contrib/simple_oauth/src/Plugin/Oauth2GrantManager.php
modules/contrib/simple_oauth/tests/src/Functional/AuthCodeFunctionalTest.php
modules/contrib/simple_oauth/tests/src/Functional/SimpleOauthTestTrait.php
modules/contrib/simple_oauth/tests/src/Functional/TokenBearerFunctionalTestBase.php
modules/contrib/simple_oauth/src/Entity/Oauth2TokenInterface.php
modules/contrib/simple_oauth/src/Entity/Oauth2TokenType.php
modules/contrib/simple_oauth/src/Entity/Oauth2TokenTypeInterface.php
modules/contrib/simple_oauth/src/ExpiredCollector.php
modules/contrib/simple_oauth/src/Plugin/Oauth2GrantManagerInterface.php
modules/contrib/simple_oauth/src/Repositories/AccessTokenRepository.php
modules/contrib/simple_oauth/src/Repositories/AuthCodeRepository.php
modules/contrib/simple_oauth/src/Repositories/ClientRepository.php
modules/contrib/simple_oauth/tests/src/Unit/Authentication/Provider/SimpleOauthAuthenticationTest.php
modules/contrib/simple_oauth/src/Form/OpenIdConnectSettingsForm.php
modules/contrib/simple_oauth/src/Grant/ClientCredentialsOverrideGrant.php
modules/contrib/simple_oauth/tests/src/Unit/EntityCollectorTest.php
modules/contrib/simple_oauth/src/HttpMiddleware/BasicAuthSwap.php
modules/contrib/simple_oauth/src/KnownClientsRepository.php
modules/contrib/simple_oauth/src/KnownClientsRepositoryInterface.php
modules/contrib/simple_oauth/src/LockableConfigEntityAccessControlHandler.php
modules/contrib/simple_oauth/src/Normalizer/RefreshTokenEntityNormalizer.php
modules/contrib/simple_oauth/src/Normalizer/TokenEntityNormalizer.php
modules/contrib/simple_oauth/tests/src/Functional/ClientCredentialsFunctionalTest.php
modules/contrib/simple_oauth/src/Authentication/TokenAuthUserInterface.php
modules/contrib/simple_oauth/src/Commands/SimpleOauthCommands.php
modules/contrib/simple_oauth/tests/src/Functional/ImplicitFunctionalTest.php
modules/contrib/simple_oauth/src/Controller/DebugController.php
modules/contrib/simple_oauth/src/Controller/Jwks.php
modules/contrib/simple_oauth/tests/src/Functional/PasswordFunctionalTest.php
modules/contrib/simple_oauth/src/Controller/Oauth2AuthorizeController.php
modules/contrib/simple_oauth/tests/src/Functional/RefreshFunctionalTest.php
modules/contrib/simple_oauth/src/Controller/Oauth2AuthorizeForm.php
modules/contrib/simple_oauth/src/Controller/Oauth2GenerateKey.php
modules/contrib/simple_oauth/src/Controller/Oauth2Token.php
modules/contrib/simple_oauth/src/Controller/UserInfo.php
modules/contrib/simple_oauth/src/Entities/AccessTokenEntity.php
modules/contrib/simple_oauth/src/Entities/AuthCodeEntity.php
modules/contrib/simple_oauth/src/Entities/ClientEntity.php
modules/contrib/simple_oauth/src/Entities/ClientEntityInterface.php
modules/contrib/simple_oauth/src/Entities/JwksEntity.php
modules/contrib/simple_oauth/src/Entities/OpenIdConnectScopeEntity.php
modules/contrib/simple_oauth/src/Entities/RefreshTokenEntity.php
modules/contrib/simple_oauth/src/Entities/ScopeEntity.php
modules/contrib/simple_oauth/src/Entities/ScopeEntityNameInterface.php

11 files with changes
=====================

1) modules/contrib/simple_oauth/simple_oauth.install:52

    ---------- begin diff ----------
@@ @@
 function simple_oauth_update_8404() {
   $use_implicit = \Drupal::config('simple_oauth_extras.settings')->get('use_implicit');
   if ($use_implicit === NULL) {
-    $config_path = drupal_get_path('module', 'simple_oauth') . '/config/install';
+    $config_path = \Drupal::service('extension.list.module')->getPath('simple_oauth') . '/config/install';
     // Because of custom config_path, we don't call service here.
     $source = new FileStorage($config_path);
     $config_default = $source->read('simple_oauth.settings');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


2) modules/contrib/simple_oauth/simple_oauth.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\simple_oauth\Entities\AccessTokenEntity;
+use Drupal\user\Entity\User;
 /**
  * @file
  * Hooks specific to the Simple OAuth module.
@@ @@
  *
  * @see \Drupal\simple_oauth\Entities\AccessTokenEntity::convertToJWT()
  */
-function hook_simple_oauth_private_claims_alter(&$private_claims, \Drupal\simple_oauth\Entities\AccessTokenEntity $access_token_entity) {
+function hook_simple_oauth_private_claims_alter(&$private_claims, AccessTokenEntity $access_token_entity) {
   $user_id = $access_token_entity->getUserIdentifier();
-  $user = \Drupal\user\Entity\User::load($user_id);
+  $user = User::load($user_id);
   $private_claims = [
     'mail' => $user->getEmail(),
     'username' => $user->getAccountName(),
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


3) modules/contrib/simple_oauth/tests/src/Unit/EntityCollectorTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\simple_oauth\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
  */
 class EntityCollectorTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * @covers ::collect
    */
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/simple_oauth/tests/src/Unit/Authentication/Provider/SimpleOauthAuthenticationTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\simple_oauth\Unit\Authentication\Provider;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\PageCache\RequestPolicyInterface;
 use Drupal\simple_oauth\Authentication\Provider\SimpleOauthAuthenticationProvider;
@@ @@
  */
 class SimpleOauthAuthenticationTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The authentication provider.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $resource_server = $this->prophesize(ResourceServerInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/simple_oauth/tests/src/Functional/TokenBearerFunctionalTestBase.php:90

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->url = Url::fromRoute('oauth2_token.token');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/simple_oauth/tests/src/Functional/RolesNegotiationFunctionalTest.php:81

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->htmlOutputEnabled = FALSE;
     $this->tokenTestUrl = Url::fromRoute('oauth2_token.user_debug');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/simple_oauth/tests/src/Functional/RefreshFunctionalTest.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->scope = 'authenticated';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/simple_oauth/tests/src/Functional/ImplicitFunctionalTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->redirectUri = Url::fromRoute('oauth2_token.test_token', [], [
       'absolute' => TRUE,
@@ @@
     $assert_session->titleEquals('Grant Access to Client | Drupal');
     $assert_session->buttonExists('Grant');
     $assert_session->responseContains('Permissions');
+    $this->drupalGet($this->authorizeUrl, [
+      'query' => $valid_params,
+    ]);

     // 3. Grant access by submitting the form and get the token back.
-    $this->drupalPostForm($this->authorizeUrl, [], 'Grant', [
-      'query' => $valid_params,
-    ]);
+    $this->submitForm([], 'Grant');
     $assert_session = $this->assertSession();
     $assert_session->statusCodeEquals(200);
     $assert_session->addressMatches('/\/oauth\/test#access_token=.*&token_type=Bearer&expires_in=\d*/');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/simple_oauth/tests/src/Functional/ClientCredentialsFunctionalTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * @inheritDoc
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Client credentials also need a valid default user set.
     $this->client->set('user_id', $this->user)->save();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/simple_oauth/tests/src/Functional/AuthCodeFunctionalTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\simple_oauth\Functional;

+use function GuzzleHttp\Psr7\parse_query;
 use Drupal\Core\Url;
 use Drupal\user\Entity\Role;
 use Drupal\user\RoleInterface;
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->redirectUri = Url::fromRoute('oauth2_token.test_token', [], [
       'absolute' => TRUE,
@@ @@
       'query' => $valid_params,
     ]);
     $this->assertGrantForm();
+    $this->drupalGet($this->authorizeUrl, [
+      'query' => $valid_params,
+    ]);

     // 3. Grant access by submitting the form and get the code back.
-    $this->drupalPostForm($this->authorizeUrl, [], 'Grant', [
-      'query' => $valid_params,
-    ]);
+    $this->submitForm([], 'Grant');
     // Store the code for the second part of the flow.
     $code = $this->getAndValidateCodeFromResponse();

@@ @@
     $this->assertGrantForm();

     // 3. Grant access by submitting the form and get the token back.
-    $this->drupalPostForm(NULL, [], 'Grant');
+    $this->submitForm([], 'Grant');

     // Store the code for the second part of the flow.
     $code = $this->getAndValidateCodeFromResponse();
@@ @@

     $this->assertGrantForm();
     $this->assertSession()->pageTextContains($this->extraRole->label());
-    $this->drupalPostForm(NULL, [], 'Grant');
+    $this->submitForm([], 'Grant');

     $code = $this->getAndValidateCodeFromResponse();

@@ @@
     $this->assertGrantForm();

     // 3. Grant access by submitting the form.
-    $this->drupalPostForm(NULL, [], 'Grant');
+    $this->submitForm([], 'Grant');

     // Store the code for the second part of the flow.
     $code = $this->getAndValidateCodeFromResponse();
@@ @@
     $session = $this->getSession();
     $assert_session->statusCodeEquals(200);
     $parsed_url = parse_url($session->getCurrentUrl());
-    $parsed_query = \GuzzleHttp\Psr7\parse_query($parsed_url['query']);
+    $parsed_query = parse_query($parsed_url['query']);
     $this->assertArrayHasKey('code', $parsed_query);
     return $parsed_query['code'];
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/simple_oauth/src/Authentication/TokenAuthUser.php:313

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function urlInfo($rel = 'canonical', array $options = []) {
-    return $this->subject->urlInfo($rel, $options);
+    return $this->subject->toUrl($rel, $options);
   }

   /**
@@ @@
    * {@inheritdoc}
    */
   public function link($text = NULL, $rel = 'canonical', array $options = []) {
-    return $this->subject->link($text, $rel, $options);
+    return $this->subject->toLink($text, $rel, $options)->toString();
   }

   /**
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceLinkRector
 * EntityInterfaceUrlInfoRector
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 11 files have been changed by Rector                                      

