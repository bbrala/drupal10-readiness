modules/contrib/wse/modules/wse_config/src/Cache/WseCacheBackend.php
modules/contrib/wse/modules/wse_config/src/WseConfigMatcher.php
modules/contrib/wse/modules/wse_group_access/src/Access/WseGroupAccess.php
modules/contrib/wse/src/Diff/WseDiffEntityParser.php
modules/contrib/wse/src/WorkspaceReverter.php
modules/contrib/wse/modules/wse_group_access/src/Routing/RouteSubscriber.php
modules/contrib/wse/src/Event/WorkspaceEvents.php
modules/contrib/wse/src/Event/WorkspacePublishEvent.php
modules/contrib/wse/modules/wse_group_access/wse_group_access.module
modules/contrib/wse/src/Event/WorkspaceRevertEvent.php
modules/contrib/wse/modules/wse_config/src/Cache/WseCacheBackendFactory.php
modules/contrib/wse/src/EventSubscriber/WorkspacePublishingEventSubscriber.php
modules/contrib/wse/modules/wse_config/src/Cache/WseChainedFastBackend.php
modules/contrib/wse/modules/wse_config/src/WseConfigServiceProvider.php
modules/contrib/wse/modules/wse_config/src/Cache/WseChainedFastBackendFactory.php
modules/contrib/wse/modules/wse_config/src/WseConfigViewBuilder.php
modules/contrib/wse/modules/wse_config/wse_config.module
modules/contrib/wse/modules/wse_config/src/DecorateCacheFactoriesPass.php
modules/contrib/wse/modules/wse_scheduler/src/Commands/WseSchedulerCommands.php
modules/contrib/wse/modules/wse_deploy/src/Event/WorkspaceDeployEvents.php
modules/contrib/wse/modules/wse_deploy/src/Event/WorkspaceExportEvent.php
modules/contrib/wse/modules/wse_scheduler/src/Event/WorkspaceScheduledPublishEvent.php
modules/contrib/wse/modules/wse_scheduler/src/Event/WorkspaceSchedulerEvents.php
modules/contrib/wse/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php
modules/contrib/wse/modules/wse_deploy/src/EventSubscriber/WseResourceObjectNormalizationCacher.php
modules/contrib/wse/modules/wse_deploy/src/Form/WorkspaceExportForm.php
modules/contrib/wse/src/Form/DiscardEntityForm.php
modules/contrib/wse/modules/wse_config/src/Entity/WseConfig.php
modules/contrib/wse/modules/wse_scheduler/wse_scheduler.module
modules/contrib/wse/src/Form/MoveEntityForm.php
modules/contrib/wse/modules/wse_deploy/src/JsonApiWorkspaceNegotiator.php
modules/contrib/wse/src/Access/WorkspaceStateTypeAccess.php
modules/contrib/wse/src/Controller/RevisionDiffController.php
modules/contrib/wse/src/WseEntityOperations.php
modules/contrib/wse/src/WseServiceProvider.php
modules/contrib/wse/modules/wse_deploy/src/WorkspaceExporter.php
modules/contrib/wse/src/WseWorkspaceAssociation.php
modules/contrib/wse/src/Controller/SwitchToLiveController.php
modules/contrib/wse/src/Form/SettingsForm.php
modules/contrib/wse/modules/wse_config/src/Event/WseConfigEvents.php
modules/contrib/wse/modules/wse_config/src/Event/WseConfigOptOutEvent.php
modules/contrib/wse/modules/wse_config/src/EventSubscriber/WseConfigSubscriber.php
modules/contrib/wse/src/Form/WorkspaceRevertForm.php
modules/contrib/wse/modules/wse_config/src/Form/WseConfigForm.php
modules/contrib/wse/src/Form/WseWorkspacePublishForm.php
modules/contrib/wse/modules/wse_deploy/src/WseDeployServiceProvider.php
modules/contrib/wse/src/WseWorkspaceListBuilder.php
modules/contrib/wse/src/Form/WseWorkspaceSwitcherForm.php
modules/contrib/wse/modules/wse_config/src/WorkspaceIdDetector.php
modules/contrib/wse/modules/wse_config/src/WseConfigAccessControlHandler.php
modules/contrib/wse/modules/wse_config/src/WseConfigCachedStorage.php
modules/contrib/wse/modules/wse_config/src/WseConfigDatabaseStorage.php
modules/contrib/wse/src/WseWorkspaceManager.php
modules/contrib/wse/src/WseWorkspaceOperationFactory.php
modules/contrib/wse/src/PathProcessor/WsePathProcessor.php
modules/contrib/wse/src/WseWorkspacePublisher.php
modules/contrib/wse/src/Plugin/Block/SwitchToLiveBlock.php
modules/contrib/wse/src/Plugin/QueueWorker/WorkspaceRevisionCleaner.php
modules/contrib/wse/src/Plugin/Validation/Constraint/WseEntityReferenceSupportedNewEntitiesConstraint.php
modules/contrib/wse/src/Plugin/Validation/Constraint/WseEntityReferenceSupportedNewEntitiesConstraintValidator.php
modules/contrib/wse/modules/wse_config/src/WseConfigInterface.php
modules/contrib/wse/modules/wse_config/src/WseConfigListBuilder.php
modules/contrib/wse/src/Plugin/diff/Field/PathFieldBuilder.php
modules/contrib/wse/src/Plugin/diff/Layout/WseUnifiedFieldsDiffLayout.php
modules/contrib/wse/src/PublishedRevisionStorage.php
modules/contrib/wse/src/Routing/RouteSubscriber.php
modules/contrib/wse/src/WseWorkspaceRepository.php
modules/contrib/wse/wse.install
modules/contrib/wse/wse.module

8 files with changes
====================

1) modules/contrib/wse/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php:73

    ---------- begin diff ----------
@@ @@

         /** @var WorkspaceScheduledPublishEvent $event */
         $event = $this->eventDispatcher->dispatch(
-          WorkspaceSchedulerEvents::SCHEDULED_PUBLISHING_ELIGIBLE,
-          new WorkspaceScheduledPublishEvent($workspace)
+          new WorkspaceScheduledPublishEvent($workspace),
+          WorkspaceSchedulerEvents::SCHEDULED_PUBLISHING_ELIGIBLE
         );

         if ($event->isPublishingEligible()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


2) modules/contrib/wse/modules/wse_deploy/src/Event/WorkspaceExportEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wse_deploy\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\workspaces\WorkspaceInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the workspace export event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/wse/modules/wse_config/src/Form/WseConfigForm.php:19

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New wse config %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/wse/modules/wse_config/src/Event/WseConfigOptOutEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wse_config\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Defines the wse_config opt out event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/wse/src/Event/WorkspaceRevertEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wse\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\workspaces\WorkspaceInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the workspace revert event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/wse/src/Event/WorkspacePublishEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wse\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\workspaces\WorkspaceInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines the workspace publish event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/wse/src/WseWorkspacePublisher.php:52

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function publish() {
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_PRE_PUBLISH, new WorkspacePublishEvent($this->sourceWorkspace));
+    $this->eventDispatcher->dispatch(new WorkspacePublishEvent($this->sourceWorkspace), WorkspaceEvents::WORKSPACE_PRE_PUBLISH);

     // This code is copied from the parent method, but it doesn't use access
     // checks in order to allow workspaces to be published from a CLI process.
@@ @@
     // Notify the workspace association that a workspace has been published.
     $this->workspaceAssociation->postPublish($this->sourceWorkspace);

-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_POST_PUBLISH, new WorkspacePublishEvent($this->sourceWorkspace));
+    $this->eventDispatcher->dispatch(new WorkspacePublishEvent($this->sourceWorkspace), WorkspaceEvents::WORKSPACE_POST_PUBLISH);
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/wse/src/WorkspaceReverter.php:89

    ---------- begin diff ----------
@@ @@
   public function revert(WorkspaceInterface $workspace) {
     $revert_to_revisions = $this->publishedRevisionStorage->getRevertRevisions($workspace->id());
     $revert_from_revisions = $this->publishedRevisionStorage->getPublishedRevisions($workspace->id());
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_PRE_REVERT, new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions));
+    $this->eventDispatcher->dispatch(new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions), WorkspaceEvents::WORKSPACE_PRE_REVERT);

     $transaction = $this->database->startTransaction();
     try {
@@ @@
       throw $e;
     }

-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_POST_REVERT, new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions));
+    $this->eventDispatcher->dispatch(new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions), WorkspaceEvents::WORKSPACE_POST_REVERT);
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


 [OK] 8 files have been changed by Rector                                       

