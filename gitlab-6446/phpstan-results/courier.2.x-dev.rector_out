modules/contrib/courier/courier.install
modules/contrib/courier/courier_message_composer/src/Form/MessageForm.php
modules/contrib/courier/src/Entity/CourierContext.php
modules/contrib/courier/src/ProxyClass/ParamConverter/CourierChannelConverter.php
modules/contrib/courier/tests/src/Kernel/CourierGlobalCollectionEntityTest.php
modules/contrib/courier/src/Entity/Email.php
modules/contrib/courier/courier.module
modules/contrib/courier/src/Service/CourierManager.php
modules/contrib/courier/courier.tokens.inc
modules/contrib/courier/courier_message_composer/src/Access/ComposeAccessCheck.php
modules/contrib/courier/tests/src/Kernel/CourierGlobalCollectionInvalidTemplateTest.php
modules/contrib/courier/courier_message_composer/src/Controller/CourierMessageController.php
modules/contrib/courier/tests/src/Kernel/CourierGlobalCollectionTest.php
modules/contrib/courier/src/Service/CourierManagerInterface.php
modules/contrib/courier/src/Service/GlobalTemplateCollectionManager.php
modules/contrib/courier/src/Entity/GlobalTemplateCollection.php
modules/contrib/courier/courier_message_composer/src/Permissions.php
modules/contrib/courier/src/Entity/GlobalTemplateCollectionInterface.php
modules/contrib/courier/src/Entity/MessageQueueItem.php
modules/contrib/courier/courier_system/courier_system.install
modules/contrib/courier/courier_system/courier_system.module
modules/contrib/courier/src/Service/GlobalTemplateCollectionManagerInterface.php
modules/contrib/courier/src/Service/IdentityChannelManager.php
modules/contrib/courier/tests/src/Kernel/CourierKernelTestBase.php
modules/contrib/courier/tests/src/Kernel/CourierManagerTest.php
modules/contrib/courier/courier_system/src/Form/Settings.php
modules/contrib/courier/src/Entity/TemplateCollection.php
modules/contrib/courier/src/Service/IdentityChannelManagerInterface.php
modules/contrib/courier/src/Service/MessageQueueManager.php
modules/contrib/courier/src/Service/MessageQueueManagerInterface.php
modules/contrib/courier/src/TemplateCollectionInterface.php
modules/contrib/courier/src/Tests/CourierMaintenanceFormTest.php
modules/contrib/courier/tests/src/Kernel/CourierMessageQueueManagerTest.php
modules/contrib/courier/src/Exception/ChannelFailure.php
modules/contrib/courier/src/Exception/GlobalTemplateCollectionException.php
modules/contrib/courier/src/Exception/IdentityException.php
modules/contrib/courier/src/Form/CourierMaintenanceForm.php
modules/contrib/courier/src/Form/EmailDeleteForm.php
modules/contrib/courier/src/Tests/CourierTest.php
modules/contrib/courier/src/Form/EmailForm.php
modules/contrib/courier/src/Form/Settings.php
modules/contrib/courier/courier_system/tests/src/Kernel/CourierSystemTest.php
modules/contrib/courier/src/Form/TemplateEditForm.php
modules/contrib/courier/src/TokenInterface.php
modules/contrib/courier/src/TokenTrait.php
modules/contrib/courier/tests/bootstrap.php
modules/contrib/courier/src/Ajax/CourierTemplate.php
modules/contrib/courier/src/Annotation/IdentityChannel.php
modules/contrib/courier/src/ChannelBase.php
modules/contrib/courier/tests/modules/courier_test_message/src/Entity/TestMessage.php
modules/contrib/courier/src/ChannelInterface.php
modules/contrib/courier/src/Controller/ChannelFormController.php
modules/contrib/courier/src/MessageQueueItemInterface.php
modules/contrib/courier/src/ParamConverter/CourierChannelConverter.php
modules/contrib/courier/src/Plugin/IdentityChannel/Broken.php
modules/contrib/courier/src/Plugin/IdentityChannel/CourierEmail/User.php
modules/contrib/courier/src/CourierContextInterface.php
modules/contrib/courier/src/Plugin/IdentityChannel/IdentityChannelPluginInterface.php
modules/contrib/courier/src/CourierTokenElementTrait.php
modules/contrib/courier/src/Plugin/QueueWorker/MessageWorker.php
modules/contrib/courier/tests/modules/courier_test_message/src/Entity/TestMessageInterface.php
modules/contrib/courier/tests/modules/courier_test_message/src/Plugin/IdentityChannel/TestMessage/User.php
modules/contrib/courier/src/Element/TemplateCollectionList.php
modules/contrib/courier/src/EmailInterface.php

9 files with changes
====================

1) modules/contrib/courier/tests/src/Kernel/CourierMessageQueueManagerTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['courier']);
     $this->installEntitySchema('courier_message_queue_item');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/courier/tests/src/Kernel/CourierManagerTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['courier']);
     $this->installEntitySchema('courier_message_queue_item');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/courier/tests/src/Kernel/CourierGlobalCollectionTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('courier_template_collection');
     $this->installEntitySchema('courier_test_message');
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/courier/tests/src/Kernel/CourierGlobalCollectionInvalidTemplateTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('courier_template_collection');
     $this->installEntitySchema('courier_email');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/courier/tests/src/Kernel/CourierGlobalCollectionEntityTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('courier_template_collection');
     $this->installEntitySchema('courier_email');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/courier/src/Tests/CourierTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * Sets up the test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->courierManager = \Drupal::service('courier.manager');
     $this->installEntitySchema('user');
@@ @@
     // See DynamicEntityReferenceItem::preSave().
     $templates = $template_collection->getTemplates();
     $this->assertTrue($templates[0]->isNew(), 'Template is not saved.');
-    $this->assertEqual($template_collection->save(), SAVED_NEW, 'Saved template collection');
+    $this->assertEquals($template_collection->save(), SAVED_NEW, 'Saved template collection');
     $templates = $template_collection->getTemplates();

     /** @var \Drupal\courier\Entity\Email $courier_email */
@@ @@
     $courier_email->save();

     // MQI.
-    $this->assertEqual(count(MessageQueueItem::loadMultiple()), 0, 'There are no message queue items.');
+    $this->assertEquals(count(MessageQueueItem::loadMultiple()), 0, 'There are no message queue items.');

     $options = [];
     $this->courierManager->sendMessage($template_collection, $this->identity, $options);
@@ @@

     /** @var \Drupal\courier\MessageQueueItemInterface[] $mqi */
     $mqi = MessageQueueItem::loadMultiple();
-    $this->assertEqual(count($mqi), 1, 'There is one message queue item.');
+    $this->assertEquals(count($mqi), 1, 'There is one message queue item.');
     /** @var \Drupal\courier\ChannelInterface[] $messages */
     $this->assertTrue($mqi[1]->getIdentity()->id() == $this->identity->id(), 'Identity is identical.');
     $this->assertTrue($mqi[1]->getOptions() == $options, 'Options are identical.');
@@ @@
     $courier_email = $messages[0];
     $this->assertTrue($courier_email instanceof Email, 'Message 0 is a courier_email.');
     // Token replacement.
-    $this->assertEqual($courier_email->getBody(), 'Greetings, ' . $this->identity->label());
+    $this->assertEquals($courier_email->getBody(), 'Greetings, ' . $this->identity->label());

     $this->assertTrue(empty(\Drupal::state()->get('system.test_mail_collector')), 'There are no mails.');

@@ @@
     $cron->run();

     $mail_collector = \Drupal::state()->get('system.test_mail_collector');
-    $this->assertEqual(count($mail_collector), 1, 'There is a mail.');
-    $this->assertEqual($mail_collector[0]['to'], $this->identity->label() . ' <' . $this->identity->getEmail() . '>');
-    $this->assertEqual($mail_collector[0]['subject'], $courier_email->getSubject());
-    $this->assertEqual(trim($mail_collector[0]['body']), $courier_email->getBody());
+    $this->assertEquals(count($mail_collector), 1, 'There is a mail.');
+    $this->assertEquals($mail_collector[0]['to'], $this->identity->label() . ' <' . $this->identity->getEmail() . '>');
+    $this->assertEquals($mail_collector[0]['subject'], $courier_email->getSubject());
+    $this->assertEquals(trim($mail_collector[0]['body']), $courier_email->getBody());

-    $this->assertEqual(count(MessageQueueItem::loadMultiple()), 0, 'There are no message queue items.');
+    $this->assertEquals(count(MessageQueueItem::loadMultiple()), 0, 'There are no message queue items.');
     $this->assertNull(Email::load($courier_email->id()), 'courier_email is deleted.');

     // Deleting owner entity deletes template collections.
     $owner_entity->delete();
-    $this->assertEqual(count(TemplateCollection::loadMultiple()), 0, 'Deleted template collection.');
+    $this->assertEquals(count(TemplateCollection::loadMultiple()), 0, 'Deleted template collection.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/courier/src/Tests/CourierMaintenanceFormTest.php:40

    ---------- begin diff ----------
@@ @@
     $edit = [
       'delete_age' => 60,
     ];
-    $this->drupalPostForm(Url::fromRoute('courier.admin.maintenance'), $edit, t('Delete messages'));
-    $this->assertRaw('2 messages deleted.');
+    $this->drupalGet(Url::fromRoute('courier.admin.maintenance'));
+    $this->submitForm($edit, t('Delete messages'));
+    $this->assertSession()->responseContains('2 messages deleted.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertRawRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/courier/src/ProxyClass/ParamConverter/CourierChannelConverter.php:10

    ---------- begin diff ----------
@@ @@

 namespace Drupal\courier\ProxyClass\ParamConverter {

+  use Drupal\Core\ParamConverter\ParamConverterInterface;
+  use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+  use Symfony\Component\DependencyInjection\ContainerInterface;
+  use Symfony\Component\Routing\Route;
   /**
    * Provides a proxy class for \Drupal\courier\ParamConverter\CourierChannelConverter.
    *
    * @see \Drupal\Component\ProxyBuilder
    */
-  class CourierChannelConverter implements \Drupal\Core\ParamConverter\ParamConverterInterface {
+  class CourierChannelConverter implements ParamConverterInterface {

-    use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use DependencySerializationTrait;

     /**
      * The id of the original proxied service.
@@ @@
      * @param string $drupal_proxy_original_service_id
      *   The service ID of the original service.
      */
-    public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id) {
+    public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id) {

       $this->container = $container;
       $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ @@
     /**
      * {@inheritdoc}
      */
-    public function applies($definition, $name, \Symfony\Component\Routing\Route $route) {
+    public function applies($definition, $name, Route $route) {

       return $this->lazyLoadItself()->applies($definition, $name, $route);
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


9) modules/contrib/courier/courier_system/tests/src/Kernel/CourierSystemTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['courier', 'courier_system']);
     $this->installSchema('system', ['sequences']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 9 files have been changed by Rector                                       

