diff --git a/modules/freelinking_prepopulate/tests/src/Functional/FreelinkingPrepopulateTest.php b/modules/freelinking_prepopulate/tests/src/Functional/FreelinkingPrepopulateTest.php
index 45ef172..b02bc2e 100644
--- a/modules/freelinking_prepopulate/tests/src/Functional/FreelinkingPrepopulateTest.php
+++ b/modules/freelinking_prepopulate/tests/src/Functional/FreelinkingPrepopulateTest.php
@@ -35,7 +35,7 @@ class FreelinkingPrepopulateTest extends FreelinkingBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Creates a content type to act as default prepopulate content type.
@@ -132,7 +132,8 @@ class FreelinkingPrepopulateTest extends FreelinkingBrowserTestBase {
         <li>Restricted: [[create:Secret|Secret|Create New Restricted|type=restricted]]</li>
       </ul>
 EOF;
-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->drupalGet('node/add/page');
+    $this->submitForm($edit, t('Save'));
 
     // This is the most ridiculous developer-unfriendly way to test hrefs ever.
     // DrupalWTF. MinkWTF.
diff --git a/modules/freelinking_prepopulate/tests/src/Unit/Plugin/freelinking/FreelinkingPrepopulateTest.php b/modules/freelinking_prepopulate/tests/src/Unit/Plugin/freelinking/FreelinkingPrepopulateTest.php
index 054f752..0f58b27 100644
--- a/modules/freelinking_prepopulate/tests/src/Unit/Plugin/freelinking/FreelinkingPrepopulateTest.php
+++ b/modules/freelinking_prepopulate/tests/src/Unit/Plugin/freelinking/FreelinkingPrepopulateTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking_prepopulate\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\freelinking_prepopulate\Plugin\freelinking\FreelinkingPrepopulate;
 use Drupal\Tests\UnitTestCase;
@@ -13,10 +14,11 @@ use Drupal\Tests\UnitTestCase;
  */
 class FreelinkingPrepopulateTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mocks returning content types.
     $nodeTypeProphet = $this->prophesize('\Drupal\Core\Entity\EntityInterface');
     $nodeTypeProphet->id()->willReturn('page');
diff --git a/tests/src/Functional/FreelinkingBrowserTestBase.php b/tests/src/Functional/FreelinkingBrowserTestBase.php
index 3bc4452..b910406 100644
--- a/tests/src/Functional/FreelinkingBrowserTestBase.php
+++ b/tests/src/Functional/FreelinkingBrowserTestBase.php
@@ -37,7 +37,7 @@ abstract class FreelinkingBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a content type.
@@ -97,8 +97,9 @@ abstract class FreelinkingBrowserTestBase extends BrowserTestBase {
         'filters[filter_htmlcorrector][weight]' => 4,
       ];
     }
+    $this->drupalGet('/admin/config/content/formats/manage/' . $name);
 
-    $this->drupalPostForm('/admin/config/content/formats/manage/' . $name, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()
       ->pageTextContains(t('The text format @label has been updated.', ['@label' => $label]));
     $this->drupalGet('admin/config/content/formats/manage/' . $name);
diff --git a/tests/src/Functional/FreelinkingFilterTest.php b/tests/src/Functional/FreelinkingFilterTest.php
index be1d223..6a82e3f 100644
--- a/tests/src/Functional/FreelinkingFilterTest.php
+++ b/tests/src/Functional/FreelinkingFilterTest.php
@@ -17,7 +17,7 @@ class FreelinkingFilterTest extends FreelinkingBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\Core\File\FileSystemInterface $filesystem */
@@ -56,8 +56,9 @@ class FreelinkingFilterTest extends FreelinkingBrowserTestBase {
     $edit = [];
     $edit['title[0][value]'] = t('Testing all freelinking plugins');
     $edit['body[0][value]'] = $this->getNodeBodyValue();
+    $this->drupalGet('node/add/page');
 
-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()
       ->pageTextContains(t('Basic page @title has been created.', ['@title' => $edit['title[0][value]']]));
 
diff --git a/tests/src/Functional/FreelinkingMultilingualTest.php b/tests/src/Functional/FreelinkingMultilingualTest.php
index 4c15863..c100106 100644
--- a/tests/src/Functional/FreelinkingMultilingualTest.php
+++ b/tests/src/Functional/FreelinkingMultilingualTest.php
@@ -35,7 +35,7 @@ class FreelinkingMultilingualTest extends FreelinkingBrowserTestBase {
    * @throws \Drupal\Core\Entity\EntityStorageException
    * @throws \Behat\Mink\Exception\ExpectationException
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->updateFilterSettings();
@@ -65,12 +65,14 @@ class FreelinkingMultilingualTest extends FreelinkingBrowserTestBase {
       'language_interface[enabled][language-url]' => '1',
       'language_interface[enabled][language-user]' => '1',
     ];
-    $this->drupalPostForm('admin/config/regional/language/detection', $edit, t('Save settings'));
+    $this->drupalGet('admin/config/regional/language/detection');
+    $this->submitForm($edit, t('Save settings'));
 
     // Enable multilingual support for "Basic page" content type.
     $edit = ['language_configuration[language_alterable]' => TRUE];
     $edit = ['language_configuration[content_translation]' => TRUE];
-    $this->drupalPostForm('admin/structure/types/manage/page', $edit, t('Save content type'));
+    $this->drupalGet('admin/structure/types/manage/page');
+    $this->submitForm($edit, t('Save content type'));
     $this->assertSession()
       ->pageTextContains('The content type Basic page has been updated.');
 
@@ -79,7 +81,8 @@ class FreelinkingMultilingualTest extends FreelinkingBrowserTestBase {
       'title[0][value]' => 'Primera pÃ¡gina',
       'body[0][value]' => 'Contenido traducido.',
     ];
-    $this->drupalPostForm('node/1/translations/add/en/es', $edit, t('Save'));
+    $this->drupalGet('node/1/translations/add/en/es');
+    $this->submitForm($edit, t('Save'));
   }
 
   /**
@@ -98,7 +101,8 @@ class FreelinkingMultilingualTest extends FreelinkingBrowserTestBase {
         <li>Nid: [[nid:1]]</li>
       </ul>
 EOF;
-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->drupalGet('node/add/page');
+    $this->submitForm($edit, t('Save'));
 
     $this->assertSession()
       ->linkExists('First page', 0, 'Generate default plugin (nodetitle) freelink.');
diff --git a/tests/src/Functional/FreelinkingPrefixAffixTest.php b/tests/src/Functional/FreelinkingPrefixAffixTest.php
index 58c030d..11142e4 100644
--- a/tests/src/Functional/FreelinkingPrefixAffixTest.php
+++ b/tests/src/Functional/FreelinkingPrefixAffixTest.php
@@ -12,7 +12,7 @@ class FreelinkingPrefixAffixTest extends FreelinkingBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Make sure that freelinking filter is activated.
@@ -30,8 +30,9 @@ class FreelinkingPrefixAffixTest extends FreelinkingBrowserTestBase {
     $edit = [];
     $edit['title[0][value]'] = $this->getRandomGenerator()->sentences(2);
     $edit['body[0][value]'] = $this->getNodeBodyValue();
+    $this->drupalGet('node/add/page');
 
-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()
       ->pageTextContains(t('Basic page @title has been created.', ['@title' => $edit['title[0][value]']]));
 
diff --git a/tests/src/Functional/NodeTitleBuiltinFailoverTest.php b/tests/src/Functional/NodeTitleBuiltinFailoverTest.php
index b06141a..2f95ad9 100644
--- a/tests/src/Functional/NodeTitleBuiltinFailoverTest.php
+++ b/tests/src/Functional/NodeTitleBuiltinFailoverTest.php
@@ -12,7 +12,7 @@ class NodeTitleBuiltinFailoverTest extends FreelinkingBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $edit = [
       'filters[freelinking][status]' => 1,
@@ -38,8 +38,9 @@ class NodeTitleBuiltinFailoverTest extends FreelinkingBrowserTestBase {
     $edit = [];
     $edit['title[0][value]'] = t('Testing all freelinking plugins');
     $edit['body[0][value]'] = $this->getNodeBodyValue();
+    $this->drupalGet('node/add/page');
 
-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()
       ->pageTextContains(t('Basic page @title has been created.', ['@title' => $edit['title[0][value]']]));
 
diff --git a/tests/src/Kernel/AdvancedHelpHintTest.php b/tests/src/Kernel/AdvancedHelpHintTest.php
index 79995e4..85eec83 100644
--- a/tests/src/Kernel/AdvancedHelpHintTest.php
+++ b/tests/src/Kernel/AdvancedHelpHintTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Extension\ExtensionDiscovery;
 use Drupal\KernelTests\KernelTestBase;
 
@@ -13,6 +14,7 @@ use Drupal\KernelTests\KernelTestBase;
  */
 class AdvancedHelpHintTest extends KernelTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/tests/src/Unit/FreelinkingManagerTest.php b/tests/src/Unit/FreelinkingManagerTest.php
index 1881923..2a5276e 100644
--- a/tests/src/Unit/FreelinkingManagerTest.php
+++ b/tests/src/Unit/FreelinkingManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Cache\NullBackend;
 use Drupal\freelinking\FreelinkingManager;
 use Drupal\Tests\UnitTestCase;
@@ -13,6 +14,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class FreelinkingManagerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Freelinking Manager object to run tests on.
    *
@@ -32,7 +34,7 @@ class FreelinkingManagerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Use a null cache backend to prevent caching.
     $cacheBackend = new NullBackend('freelinking');
 
diff --git a/tests/src/Unit/Plugin/Filter/FreelinkingTest.php b/tests/src/Unit/Plugin/Filter/FreelinkingTest.php
index 5d638d4..28a5b19 100644
--- a/tests/src/Unit/Plugin/Filter/FreelinkingTest.php
+++ b/tests/src/Unit/Plugin/Filter/FreelinkingTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\Filter;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\filter\Plugin\FilterInterface;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
@@ -16,6 +17,7 @@ use Prophecy\Argument;
  */
 class FreelinkingTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Freelinking filter plugin.
    *
@@ -33,7 +35,7 @@ class FreelinkingTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet
diff --git a/tests/src/Unit/Plugin/freelinking/BuiltinTest.php b/tests/src/Unit/Plugin/freelinking/BuiltinTest.php
index 451f02a..b87da5e 100644
--- a/tests/src/Unit/Plugin/freelinking/BuiltinTest.php
+++ b/tests/src/Unit/Plugin/freelinking/BuiltinTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\freelinking\Plugin\freelinking\Builtin;
 use Drupal\Tests\UnitTestCase;
@@ -14,6 +15,7 @@ use Prophecy\Argument;
  */
 class BuiltinTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Translation Interface mock.
    *
@@ -51,7 +53,7 @@ class BuiltinTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Redact, show text only, or display the indicator');
diff --git a/tests/src/Unit/Plugin/freelinking/DrupalOrgTest.php b/tests/src/Unit/Plugin/freelinking/DrupalOrgTest.php
index 882c1c4..231bda0 100644
--- a/tests/src/Unit/Plugin/freelinking/DrupalOrgTest.php
+++ b/tests/src/Unit/Plugin/freelinking/DrupalOrgTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ -20,6 +21,7 @@ use Prophecy\Argument;
  */
 class DrupalOrgTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The container.
    *
@@ -37,7 +39,7 @@ class DrupalOrgTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view on drupal.org.');
diff --git a/tests/src/Unit/Plugin/freelinking/ExternalTest.php b/tests/src/Unit/Plugin/freelinking/ExternalTest.php
index a71206c..7de69c9 100644
--- a/tests/src/Unit/Plugin/freelinking/ExternalTest.php
+++ b/tests/src/Unit/Plugin/freelinking/ExternalTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ -22,6 +23,7 @@ use Prophecy\Argument;
  */
 class ExternalTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The container.
    *
@@ -39,7 +41,7 @@ class ExternalTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to visit an external URL.');
diff --git a/tests/src/Unit/Plugin/freelinking/FileTest.php b/tests/src/Unit/Plugin/freelinking/FileTest.php
index 127a586..edcd0aa 100644
--- a/tests/src/Unit/Plugin/freelinking/FileTest.php
+++ b/tests/src/Unit/Plugin/freelinking/FileTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ -16,6 +17,7 @@ use Prophecy\Argument;
  */
 class FileTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Translation interface mock.
    *
@@ -33,7 +35,7 @@ class FileTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a local file.');
diff --git a/tests/src/Unit/Plugin/freelinking/GoogleSearchTest.php b/tests/src/Unit/Plugin/freelinking/GoogleSearchTest.php
index 873f117..aeaa749 100644
--- a/tests/src/Unit/Plugin/freelinking/GoogleSearchTest.php
+++ b/tests/src/Unit/Plugin/freelinking/GoogleSearchTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ -16,6 +17,7 @@ use Prophecy\Argument;
  */
 class GoogleSearchTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Search plugin.
    *
@@ -33,7 +35,7 @@ class GoogleSearchTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock the string translation.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet
diff --git a/tests/src/Unit/Plugin/freelinking/NodeTest.php b/tests/src/Unit/Plugin/freelinking/NodeTest.php
index 987d440..aa5e27a 100644
--- a/tests/src/Unit/Plugin/freelinking/NodeTest.php
+++ b/tests/src/Unit/Plugin/freelinking/NodeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
 use Drupal\freelinking\Plugin\freelinking\Node;
@@ -15,6 +16,7 @@ use Symfony\Component\DependencyInjection\ContainerBuilder;
  */
 class NodeTest extends NodeTestBase {
 
+  use ProphecyTrait;
   /**
    * The translation interface.
    *
@@ -39,7 +41,7 @@ class NodeTest extends NodeTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation interface.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a local node.');
diff --git a/tests/src/Unit/Plugin/freelinking/NodeTitleFailoverTest.php b/tests/src/Unit/Plugin/freelinking/NodeTitleFailoverTest.php
index 018d6d3..8da0a67 100644
--- a/tests/src/Unit/Plugin/freelinking/NodeTitleFailoverTest.php
+++ b/tests/src/Unit/Plugin/freelinking/NodeTitleFailoverTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\freelinking\Plugin\freelinking\NodeTitle;
@@ -14,6 +15,7 @@ use Prophecy\Argument;
  */
 class NodeTitleFailoverTest extends NodeTestBase {
 
+  use ProphecyTrait;
   /**
    * Mock container.
    *
@@ -31,7 +33,7 @@ class NodeTitleFailoverTest extends NodeTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
 
     // Mock the translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
@@ -44,9 +46,7 @@ class NodeTitleFailoverTest extends NodeTestBase {
     $entityManagerProphet = $this->prophesize('\Drupal\Core\Entity\EntityTypeManagerInterface');
 
     // Mock Entity Query via Mock Builder to support chaining.
-    $entityQuery = $this->getMockBuilder('\Drupal\Core\Entity\Query\QueryInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityQuery = $this->createMock('\Drupal\Core\Entity\Query\QueryInterface');
     $entityQuery->expects($this->any())->method('condition')->willReturnSelf();
     $entityQuery->expects($this->any())
       ->method('accessCheck')
diff --git a/tests/src/Unit/Plugin/freelinking/NodeTitleTest.php b/tests/src/Unit/Plugin/freelinking/NodeTitleTest.php
index 166faab..267bdb5 100644
--- a/tests/src/Unit/Plugin/freelinking/NodeTitleTest.php
+++ b/tests/src/Unit/Plugin/freelinking/NodeTitleTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Url;
 use Drupal\freelinking\Plugin\freelinking\NodeTitle;
@@ -14,6 +15,7 @@ use Prophecy\Argument;
  */
 class NodeTitleTest extends NodeTestBase {
 
+  use ProphecyTrait;
   /**
    * Freelinking plugin.
    *
@@ -24,7 +26,7 @@ class NodeTitleTest extends NodeTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
 
     // Mock the translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
@@ -36,9 +38,7 @@ class NodeTitleTest extends NodeTestBase {
     $entityManagerProphet = $this->prophesize('\Drupal\Core\Entity\EntityTypeManagerInterface');
 
     // Mock Entity Query via Mock Builder to support chaining.
-    $entityQuery = $this->getMockBuilder('\Drupal\Core\Entity\Query\QueryInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityQuery = $this->createMock('\Drupal\Core\Entity\Query\QueryInterface');
     $entityQuery->expects($this->any())->method('condition')->willReturnSelf();
     $entityQuery->expects($this->any())->method('accessCheck')->willReturnSelf();
     $entityQuery->expects($this->any())->method('execute')->willReturn([1 => 1, 2 => 2]);
diff --git a/tests/src/Unit/Plugin/freelinking/PathAliasSearchTest.php b/tests/src/Unit/Plugin/freelinking/PathAliasSearchTest.php
index fca010b..515f0d4 100644
--- a/tests/src/Unit/Plugin/freelinking/PathAliasSearchTest.php
+++ b/tests/src/Unit/Plugin/freelinking/PathAliasSearchTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ -16,6 +17,7 @@ use Prophecy\Argument;
  */
 class PathAliasSearchTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The container.
    *
@@ -33,7 +35,7 @@ class PathAliasSearchTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a local node.');
diff --git a/tests/src/Unit/Plugin/freelinking/PathAliasTest.php b/tests/src/Unit/Plugin/freelinking/PathAliasTest.php
index 3ce78f3..a88c64a 100644
--- a/tests/src/Unit/Plugin/freelinking/PathAliasTest.php
+++ b/tests/src/Unit/Plugin/freelinking/PathAliasTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ -16,6 +17,7 @@ use Prophecy\Argument;
  */
 class PathAliasTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The container.
    *
@@ -33,7 +35,7 @@ class PathAliasTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a local node.');
diff --git a/tests/src/Unit/Plugin/freelinking/SearchFailoverTest.php b/tests/src/Unit/Plugin/freelinking/SearchFailoverTest.php
index c9bf5c5..1359a45 100644
--- a/tests/src/Unit/Plugin/freelinking/SearchFailoverTest.php
+++ b/tests/src/Unit/Plugin/freelinking/SearchFailoverTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ -16,6 +17,7 @@ use Prophecy\Argument;
  */
 class SearchFailoverTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The container.
    *
@@ -33,7 +35,7 @@ class SearchFailoverTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock the string translation.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet
diff --git a/tests/src/Unit/Plugin/freelinking/SearchTest.php b/tests/src/Unit/Plugin/freelinking/SearchTest.php
index 5c7da06..2f002d1 100644
--- a/tests/src/Unit/Plugin/freelinking/SearchTest.php
+++ b/tests/src/Unit/Plugin/freelinking/SearchTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ -16,6 +17,7 @@ use Prophecy\Argument;
  */
 class SearchTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Search plugin.
    *
@@ -33,7 +35,7 @@ class SearchTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock the string translation.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet
diff --git a/tests/src/Unit/Plugin/freelinking/UserTest.php b/tests/src/Unit/Plugin/freelinking/UserTest.php
index e0168e6..76f78cf 100644
--- a/tests/src/Unit/Plugin/freelinking/UserTest.php
+++ b/tests/src/Unit/Plugin/freelinking/UserTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
 use Drupal\freelinking\Plugin\freelinking\User;
@@ -16,6 +17,7 @@ use Symfony\Component\DependencyInjection\ContainerBuilder;
  */
 class UserTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The translation interface.
    *
@@ -33,7 +35,7 @@ class UserTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation interface.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view user profile.');
diff --git a/tests/src/Unit/Plugin/freelinking/UserUnauthorizedTest.php b/tests/src/Unit/Plugin/freelinking/UserUnauthorizedTest.php
index 8444dc6..804acad 100644
--- a/tests/src/Unit/Plugin/freelinking/UserUnauthorizedTest.php
+++ b/tests/src/Unit/Plugin/freelinking/UserUnauthorizedTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\freelinking\Plugin\freelinking\User;
 use Drupal\Tests\UnitTestCase;
@@ -15,6 +16,7 @@ use Symfony\Component\DependencyInjection\ContainerBuilder;
  */
 class UserUnauthorizedTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The translation interface.
    *
@@ -32,7 +34,7 @@ class UserUnauthorizedTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation interface.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Unauthorized to view user profile.');
diff --git a/tests/src/Unit/Plugin/freelinking/WikiTest.php b/tests/src/Unit/Plugin/freelinking/WikiTest.php
index 5e15af7..a02dc56 100644
--- a/tests/src/Unit/Plugin/freelinking/WikiTest.php
+++ b/tests/src/Unit/Plugin/freelinking/WikiTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Language\Language;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
@@ -17,6 +18,7 @@ use Prophecy\Argument;
  */
 class WikiTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The translation interface.
    *
@@ -34,7 +36,7 @@ class WikiTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock the translation interface.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a wiki page.');
