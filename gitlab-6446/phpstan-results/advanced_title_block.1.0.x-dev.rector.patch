diff --git a/src/Plugin/Block/AdvancedTitleBlock.php b/src/Plugin/Block/AdvancedTitleBlock.php
index c7d9814..f010409 100644
--- a/src/Plugin/Block/AdvancedTitleBlock.php
+++ b/src/Plugin/Block/AdvancedTitleBlock.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\advanced_title_block\Plugin\Block;
 
+use Drupal\node\NodeInterface;
+use Symfony\Cmf\Component\Routing\RouteObjectInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\file\Entity\File;
@@ -136,7 +138,7 @@ class AdvancedTitleBlock extends BlockBase {
   public function build() {
     $node = \Drupal::routeMatch()->getParameter('node');
     $uri = '';
-    if (isset($this->configuration['entity_image']) && $node instanceof \Drupal\node\NodeInterface) {
+    if (isset($this->configuration['entity_image']) && $node instanceof NodeInterface) {
       $field_name = $this->configuration['entity_image'];
       if ($node->hasField($field_name) && $node->$field_name->entity != null) {
         $type = $field_type = $node->get($field_name)->getFieldDefinition()->getType();
@@ -171,7 +173,7 @@ class AdvancedTitleBlock extends BlockBase {
       }
     }
     $text = '';
-    if (isset($this->configuration['entity_text']) && $node instanceof \Drupal\node\NodeInterface) {
+    if (isset($this->configuration['entity_text']) && $node instanceof NodeInterface) {
       $field_name = $this->configuration['entity_text'];
       if ($node->hasField($field_name)) {
         $text = $node->$field_name->value();
@@ -185,7 +187,7 @@ class AdvancedTitleBlock extends BlockBase {
     }
 
     $request = \Drupal::request();
-    if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
+    if ($route = $request->attributes->get(RouteObjectInterface::ROUTE_OBJECT)) {
       $title = \Drupal::service('title_resolver')->getTitle($request, $route);
     }
     $build = [];
@@ -194,7 +196,7 @@ class AdvancedTitleBlock extends BlockBase {
       '#title' => $title,
       '#text' => $text,
       '#color' => $this->configuration['color'],
-      '#image' => file_url_transform_relative(file_create_url($uri)),
+      '#image' => \Drupal::service('file_url_generator')->generateString($uri),
       '#image_title' => $image_title,
     ];
 
