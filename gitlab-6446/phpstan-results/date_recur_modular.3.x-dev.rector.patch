diff --git a/tests/src/Functional/DateRecurModularAlphaTest.php b/tests/src/Functional/DateRecurModularAlphaTest.php
index 4c88838..1f85b08 100644
--- a/tests/src/Functional/DateRecurModularAlphaTest.php
+++ b/tests/src/Functional/DateRecurModularAlphaTest.php
@@ -70,7 +70,7 @@ class DateRecurModularAlphaTest extends WebDriverTestBase {
     $entity->save();
     $this->drupalGet($entity->toUrl('edit-form'));
 
-    $this->drupalPostForm(NULL, $values, 'Save');
+    $this->submitForm($values, 'Save');
     $this->assertSession()->pageTextContains('has been updated.');
 
     $entity = DrEntityTest::load($entity->id());
@@ -434,7 +434,7 @@ class DateRecurModularAlphaTest extends WebDriverTestBase {
       // Change to UTC+4.
       'dr[0][time_zone]' => 'Indian/Mauritius',
     ];
-    $this->drupalPostForm(NULL, $values, 'Save');
+    $this->submitForm($values, 'Save');
     $this->assertSession()->pageTextContains('has been updated.');
 
     // All values should be updated to account for different time zone, all
diff --git a/tests/src/Functional/DateRecurModularOscarTest.php b/tests/src/Functional/DateRecurModularOscarTest.php
index a6cc98e..05c5e3c 100644
--- a/tests/src/Functional/DateRecurModularOscarTest.php
+++ b/tests/src/Functional/DateRecurModularOscarTest.php
@@ -76,7 +76,7 @@ class DateRecurModularOscarTest extends WebDriverTestBase {
       $this->getSession()->getPage()->find('css', '.parts--is-all-day .form-radios> *:nth-child(1) label')->click();
     }
 
-    $this->drupalPostForm(NULL, $values, 'Save');
+    $this->submitForm($values, 'Save');
     $this->assertSession()->pageTextContains('has been updated.');
 
     $entity = DrEntityTest::load($entity->id());
@@ -396,7 +396,8 @@ class DateRecurModularOscarTest extends WebDriverTestBase {
       'dr[0][times][time_end]' => '08:00:00am',
       'dr[0][weekdays][MO]' => TRUE,
     ];
-    $this->drupalPostForm($entity->toUrl('edit-form'), $edit, 'Save');
+    $this->drupalGet($entity->toUrl('edit-form'));
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('End time must be after start time.');
   }
 
@@ -414,7 +415,8 @@ class DateRecurModularOscarTest extends WebDriverTestBase {
       'dr[0][times][time_end]' => '09:00:00am',
       'dr[0][weekdays][MO]' => TRUE,
     ];
-    $this->drupalPostForm($entity->toUrl('edit-form'), $edit, 'Save');
+    $this->drupalGet($entity->toUrl('edit-form'));
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('has been updated.');
   }
 
@@ -432,7 +434,8 @@ class DateRecurModularOscarTest extends WebDriverTestBase {
       'dr[0][times][time_end]' => '10:00:00am',
       'dr[0][weekdays][MO]' => TRUE,
     ];
-    $this->drupalPostForm($entity->toUrl('edit-form'), $edit, 'Save');
+    $this->drupalGet($entity->toUrl('edit-form'));
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('has been updated.');
   }
 
@@ -449,7 +452,8 @@ class DateRecurModularOscarTest extends WebDriverTestBase {
       'dr[0][times][time_end]' => '09:00:00am',
       'dr[0][weekdays][MO]' => TRUE,
     ];
-    $this->drupalPostForm($entity->toUrl('edit-form'), $edit, 'Save');
+    $this->drupalGet($entity->toUrl('edit-form'));
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('Invalid start time.');
   }
 
@@ -466,7 +470,8 @@ class DateRecurModularOscarTest extends WebDriverTestBase {
       'dr[0][times][time_start]' => '09:00:00am',
       'dr[0][weekdays][MO]' => TRUE,
     ];
-    $this->drupalPostForm($entity->toUrl('edit-form'), $edit, 'Save');
+    $this->drupalGet($entity->toUrl('edit-form'));
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('Invalid end time.');
   }
 
@@ -483,7 +488,8 @@ class DateRecurModularOscarTest extends WebDriverTestBase {
       'dr[0][times][time_end]' => '09:00:00am',
       'dr[0][weekdays][MO]' => TRUE,
     ];
-    $this->drupalPostForm($entity->toUrl('edit-form'), $edit, 'Save');
+    $this->drupalGet($entity->toUrl('edit-form'));
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('Invalid start day.');
   }
 
