diff --git a/src/EasyEmailStorage.php b/src/EasyEmailStorage.php
index 27c2e06..47b1282 100644
--- a/src/EasyEmailStorage.php
+++ b/src/EasyEmailStorage.php
@@ -134,7 +134,7 @@ class EasyEmailStorage extends SqlContentEntityStorage implements EasyEmailStora
 
     $event_class = $this->entityType->getHandlerClass('event');
     if ($event_class) {
-      $this->eventDispatcher->dispatch($this->getEventName($hook), new $event_class($entity));
+      $this->eventDispatcher->dispatch(new $event_class($entity), $this->getEventName($hook));
     }
   }
 
diff --git a/src/Event/EasyEmailEvent.php b/src/Event/EasyEmailEvent.php
index fe499a8..446224e 100644
--- a/src/Event/EasyEmailEvent.php
+++ b/src/Event/EasyEmailEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\easy_email\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\easy_email\Entity\EasyEmailInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the Entity Email event.
diff --git a/src/Service/EmailAttachmentEvaluator.php b/src/Service/EmailAttachmentEvaluator.php
index e61d47e..8d2c000 100644
--- a/src/Service/EmailAttachmentEvaluator.php
+++ b/src/Service/EmailAttachmentEvaluator.php
@@ -46,7 +46,7 @@ class EmailAttachmentEvaluator implements EmailAttachmentEvaluatorInterface {
    * @inheritDoc
    */
   public function evaluateAttachments(EasyEmailInterface $email, $save_attachments_to = FALSE) {
-    $this->eventDispatcher->dispatch(EasyEmailEvents::EMAIL_PREATTACHMENTEVAL, new EasyEmailEvent($email));
+    $this->eventDispatcher->dispatch(new EasyEmailEvent($email), EasyEmailEvents::EMAIL_PREATTACHMENTEVAL);
     $files = $email->getEvaluatedAttachments();
 
     // If save attachments has been enabled, check for any programmatically added files and save them.
@@ -100,7 +100,7 @@ class EmailAttachmentEvaluator implements EmailAttachmentEvaluatorInterface {
 
     $email->setEvaluatedAttachments($files);
 
-    $this->eventDispatcher->dispatch(EasyEmailEvents::EMAIL_ATTACHMENTEVAL, new EasyEmailEvent($email));
+    $this->eventDispatcher->dispatch(new EasyEmailEvent($email), EasyEmailEvents::EMAIL_ATTACHMENTEVAL);
   }
 
   /**
@@ -109,7 +109,7 @@ class EmailAttachmentEvaluator implements EmailAttachmentEvaluatorInterface {
    */
   protected function saveAttachment(EasyEmailInterface $email, $source, $dest_directory) {
     \Drupal::service('file_system')->prepareDirectory($dest_directory, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
-    $file_entity = file_save_data(file_get_contents($source), $dest_directory . '/' . $this->fileSystem->basename($source));
+    $file_entity = \Drupal::service('file.repository')->writeData(file_get_contents($source), $dest_directory . '/' . $this->fileSystem->basename($source));
     $email->addAttachment($file_entity->id());
   }
 
diff --git a/src/Service/EmailHandler.php b/src/Service/EmailHandler.php
index 99f892f..3e4eda9 100644
--- a/src/Service/EmailHandler.php
+++ b/src/Service/EmailHandler.php
@@ -198,11 +198,11 @@ class EmailHandler implements EmailHandlerInterface {
 
     foreach ($emails_to_send as $email_info) {
       if (!empty($email_info['to'])) {
-        $this->eventDispatcher->dispatch(EasyEmailEvents::EMAIL_PRESEND, new EasyEmailEvent($email));
+        $this->eventDispatcher->dispatch(new EasyEmailEvent($email), EasyEmailEvents::EMAIL_PRESEND);
         $message = $this->mailManager->mail('easy_email', $email_info['email']->bundle(), $email_info['to'], $default_langcode, $email_info['params'], $reply, TRUE);
       }
       if(!empty($message['result'])){
-        $this->eventDispatcher->dispatch(EasyEmailEvents::EMAIL_SENT, new EasyEmailEvent($email));
+        $this->eventDispatcher->dispatch(new EasyEmailEvent($email), EasyEmailEvents::EMAIL_SENT);
         $email_info['email']->setSentTime($this->time->getCurrentTime())
           ->save();
       }
diff --git a/src/Service/EmailTokenEvaluator.php b/src/Service/EmailTokenEvaluator.php
index e5d541d..4630d6f 100644
--- a/src/Service/EmailTokenEvaluator.php
+++ b/src/Service/EmailTokenEvaluator.php
@@ -38,7 +38,7 @@ class EmailTokenEvaluator implements EmailTokenEvaluatorInterface {
    * @inheritDoc
    */
   public function evaluateTokens(EasyEmailInterface $email) {
-    $this->eventDispatcher->dispatch(EasyEmailEvents::EMAIL_PRETOKENEVAL, new EasyEmailEvent($email));
+    $this->eventDispatcher->dispatch(new EasyEmailEvent($email), EasyEmailEvents::EMAIL_PRETOKENEVAL);
 
     if ($email->hasField('key')) {
       $email->setKey($this->replaceTokens($email, $email->getKey()));
@@ -64,7 +64,7 @@ class EmailTokenEvaluator implements EmailTokenEvaluatorInterface {
       $email->setAttachmentPaths($this->replaceTokens($email, $email->getAttachmentPaths()));
     }
 
-    $this->eventDispatcher->dispatch(EasyEmailEvents::EMAIL_TOKENEVAL, new EasyEmailEvent($email));
+    $this->eventDispatcher->dispatch(new EasyEmailEvent($email), EasyEmailEvents::EMAIL_TOKENEVAL);
   }
 
   public function containsUnsafeTokens(EasyEmailInterface $email) {
diff --git a/src/Service/EmailUserEvaluator.php b/src/Service/EmailUserEvaluator.php
index f2e6d45..645e022 100644
--- a/src/Service/EmailUserEvaluator.php
+++ b/src/Service/EmailUserEvaluator.php
@@ -45,7 +45,7 @@ class EmailUserEvaluator implements EmailUserEvaluatorInterface {
    * @inheritDoc
    */
   public function evaluateUsers(EasyEmailInterface $email) {
-    $this->eventDispatcher->dispatch(EasyEmailEvents::EMAIL_PREUSEREVAL, new EasyEmailEvent($email));
+    $this->eventDispatcher->dispatch(new EasyEmailEvent($email), EasyEmailEvents::EMAIL_PREUSEREVAL);
 
     if ($email->hasField('recipient_uid')) {
       $recipients = $email->getRecipientAddresses();
@@ -83,7 +83,7 @@ class EmailUserEvaluator implements EmailUserEvaluatorInterface {
       }
     }
 
-    $this->eventDispatcher->dispatch(EasyEmailEvents::EMAIL_USEREVAL, new EasyEmailEvent($email));
+    $this->eventDispatcher->dispatch(new EasyEmailEvent($email), EasyEmailEvents::EMAIL_USEREVAL);
   }
 
 
diff --git a/tests/src/Functional/EasyEmailTestBase.php b/tests/src/Functional/EasyEmailTestBase.php
index 3b3db0a..4bd9809 100644
--- a/tests/src/Functional/EasyEmailTestBase.php
+++ b/tests/src/Functional/EasyEmailTestBase.php
@@ -52,7 +52,7 @@ abstract class EasyEmailTestBase extends BrowserTestBase {
    */
   protected $defaultTheme = 'stark';
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Redirect all emails to the test_mail_collector.
@@ -79,7 +79,8 @@ abstract class EasyEmailTestBase extends BrowserTestBase {
       'format' => 'html',
       'name' => 'HTML',
     ];
-    $this->drupalPostForm('admin/config/content/formats/add', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/content/formats/add');
+    $this->submitForm($edit, t('Save configuration'));
     filter_formats_reset();
     $this->htmlFormat = FilterFormat::load($edit['format']);
   }
