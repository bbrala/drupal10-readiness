diff --git a/modules/rh_commerce/tests/src/Functional/ProductBehaviorSettingsFormTest.php b/modules/rh_commerce/tests/src/Functional/ProductBehaviorSettingsFormTest.php
index 99814cc..ffebc4c 100644
--- a/modules/rh_commerce/tests/src/Functional/ProductBehaviorSettingsFormTest.php
+++ b/modules/rh_commerce/tests/src/Functional/ProductBehaviorSettingsFormTest.php
@@ -49,7 +49,7 @@ class ProductBehaviorSettingsFormTest extends RabbitHoleBehaviorSettingsFormTest
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->store = $this->createStore();
   }
diff --git a/rabbit_hole.api.php b/rabbit_hole.api.php
index 545c66f..a856c2c 100644
--- a/rabbit_hole.api.php
+++ b/rabbit_hole.api.php
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityInterface;
 /**
  * @file
  * Hooks provided by the Rabbit Hole module.
@@ -17,7 +18,7 @@ use Symfony\Component\HttpFoundation\Response;
  * @param \Drupal\Core\Entity\ContentEntityInterface $entity
  *   The entity to apply rabbit hole behavior on.
  */
-function hook_rabbit_hole_values_alter(array &$values, \Drupal\Core\Entity\ContentEntityInterface $entity) {
+function hook_rabbit_hole_values_alter(array &$values, ContentEntityInterface $entity) {
   // Disable bypassing access for everyone (including administrators).
   $values['bypass_access'] = FALSE;
 
@@ -35,7 +36,7 @@ function hook_rabbit_hole_values_alter(array &$values, \Drupal\Core\Entity\Conte
  * @param \Drupal\Core\Entity\ContentEntityInterface $entity
  *   The entity to apply rabbit hole behavior on.
  */
-function hook_rabbit_hole_response_alter(Response &$response, \Drupal\Core\Entity\ContentEntityInterface $entity) {
+function hook_rabbit_hole_response_alter(Response &$response, ContentEntityInterface $entity) {
   if ($response instanceof RedirectResponse) {
     $response = new TrustedRedirectResponse('https://example.com');
   }
diff --git a/tests/src/Functional/RabbitHoleBehaviorInvocationTestBase.php b/tests/src/Functional/RabbitHoleBehaviorInvocationTestBase.php
index caaf4ec..23d57ac 100644
--- a/tests/src/Functional/RabbitHoleBehaviorInvocationTestBase.php
+++ b/tests/src/Functional/RabbitHoleBehaviorInvocationTestBase.php
@@ -29,7 +29,7 @@ abstract class RabbitHoleBehaviorInvocationTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->behaviorSettingsManager = $this->container->get('rabbit_hole.behavior_settings_manager');
     $this->drupalLogin($this->drupalCreateUser($this->getViewPermissions()));
diff --git a/tests/src/Functional/RabbitHoleBehaviorPluginTest.php b/tests/src/Functional/RabbitHoleBehaviorPluginTest.php
index 84c7cdb..a8fe44a 100644
--- a/tests/src/Functional/RabbitHoleBehaviorPluginTest.php
+++ b/tests/src/Functional/RabbitHoleBehaviorPluginTest.php
@@ -51,7 +51,7 @@ class RabbitHoleBehaviorPluginTest extends ViewTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp(FALSE);
     $this->manager = $this->container->get('plugin.manager.rabbit_hole_behavior_plugin');
 
diff --git a/tests/src/Functional/RabbitHoleBehaviorSettingsEntityMethodsTest.php b/tests/src/Functional/RabbitHoleBehaviorSettingsEntityMethodsTest.php
index 761b151..e760271 100644
--- a/tests/src/Functional/RabbitHoleBehaviorSettingsEntityMethodsTest.php
+++ b/tests/src/Functional/RabbitHoleBehaviorSettingsEntityMethodsTest.php
@@ -40,7 +40,7 @@ class RabbitHoleBehaviorSettingsEntityMethodsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->configFactory = $this->container->get('config.factory');
   }
diff --git a/tests/src/Functional/RabbitHoleBehaviorSettingsFormTestBase.php b/tests/src/Functional/RabbitHoleBehaviorSettingsFormTestBase.php
index 9c36d9b..a7dc304 100644
--- a/tests/src/Functional/RabbitHoleBehaviorSettingsFormTestBase.php
+++ b/tests/src/Functional/RabbitHoleBehaviorSettingsFormTestBase.php
@@ -48,7 +48,7 @@ abstract class RabbitHoleBehaviorSettingsFormTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->behaviorSettingsManager = $this->container->get('rabbit_hole.behavior_settings_manager');
diff --git a/tests/src/Functional/RabbitHoleBehaviorSettingsTest.php b/tests/src/Functional/RabbitHoleBehaviorSettingsTest.php
index 0f1753e..2a7eca6 100644
--- a/tests/src/Functional/RabbitHoleBehaviorSettingsTest.php
+++ b/tests/src/Functional/RabbitHoleBehaviorSettingsTest.php
@@ -57,7 +57,7 @@ class RabbitHoleBehaviorSettingsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->configFactory = $this->container->get('config.factory');
     $this->behaviorSettingsManager = $this->container
diff --git a/tests/src/Functional/RabbitHolePageRedirectActionTest.php b/tests/src/Functional/RabbitHolePageRedirectActionTest.php
index c42d1c0..440ef56 100644
--- a/tests/src/Functional/RabbitHolePageRedirectActionTest.php
+++ b/tests/src/Functional/RabbitHolePageRedirectActionTest.php
@@ -43,7 +43,7 @@ class RabbitHolePageRedirectActionTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->behaviorSettingsManager = $this->container->get('rabbit_hole.behavior_settings_manager');
     $this->behaviorSettingsManager->saveBehaviorSettings([
@@ -147,7 +147,7 @@ class RabbitHolePageRedirectActionTest extends BrowserTestBase {
     $node->save();
 
     $this->drupalGet($node->toUrl());
-    $expected_url = file_create_url($file->getFileUri());
+    $expected_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     $this->assertSession()->addressEquals($expected_url);
     $this->assertSession()->responseContains('first');
 
@@ -157,7 +157,7 @@ class RabbitHolePageRedirectActionTest extends BrowserTestBase {
     $media->save();
 
     $this->drupalGet($node->toUrl());
-    $expected_url = file_create_url($file2->getFileUri());
+    $expected_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file2->getFileUri());
     $this->assertSession()->addressEquals($expected_url);
     $this->assertSession()->responseContains('second');
   }
