modules/contrib/spectra/modules/spectra_expire/spectra_expire.install
modules/contrib/spectra/modules/spectra_flat/src/Plugin/views/field/SpectraFlatDataViewerField.php
modules/contrib/spectra/src/Entity/SpectraDataInterface.php
modules/contrib/spectra/src/Form/SpectraStatementForm.php
modules/contrib/spectra/src/Entity/SpectraNoun.php
modules/contrib/spectra/modules/spectra_expire/spectra_expire.module
modules/contrib/spectra/modules/spectra_expire/src/Plugin/EntityExpiration/SpectraExpirationMethod.php
modules/contrib/spectra/src/Form/SpectraStatementSettingsForm.php
modules/contrib/spectra/src/Form/SpectraVerbDeleteForm.php
modules/contrib/spectra/src/Form/SpectraVerbForm.php
modules/contrib/spectra/modules/spectra_flat/src/SpectraFlatStatementAccessControlHandler.php
modules/contrib/spectra/src/Form/SpectraVerbSettingsForm.php
modules/contrib/spectra/modules/spectra_flat/src/SpectraFlatStatementInterface.php
modules/contrib/spectra/spectra.install
modules/contrib/spectra/src/Plugin/Spectra/ConnectTest.php
modules/contrib/spectra/src/Plugin/Spectra/DefaultSpectraPlugin.php
modules/contrib/spectra/src/Entity/SpectraNounInterface.php
modules/contrib/spectra/src/Entity/SpectraStatement.php
modules/contrib/spectra/modules/spectra_flat/spectra_flat.install
modules/contrib/spectra/modules/spectra_flat/spectra_flat.module
modules/contrib/spectra/modules/spectra_flat/spectra_flat.views.inc
modules/contrib/spectra/modules/spectra_flat/src/Entity/Controller/SpectraFlatStatementListBuilder.php
modules/contrib/spectra/modules/spectra_flat/src/Entity/SpectraFlatStatement.php
modules/contrib/spectra/modules/spectra_flat/src/Entity/Views/SpectraFlatStatementViewsData.php
modules/contrib/spectra/modules/spectra_flat/src/Form/SpectraFlatStatementDeleteForm.php
modules/contrib/spectra/modules/spectra_flat/src/Form/SpectraFlatStatementForm.php
modules/contrib/spectra/modules/spectra_flat/src/Form/SpectraFlatStatementSettingsForm.php
modules/contrib/spectra/src/Entity/SpectraStatementInterface.php
modules/contrib/spectra/src/Entity/SpectraVerb.php
modules/contrib/spectra/modules/spectra_flat/src/Plugin/Spectra/SpectraFlatPlugin.php
modules/contrib/spectra/spectra.module
modules/contrib/spectra/spectra.views.inc
modules/contrib/spectra/src/Annotation/SpectraPlugin.php
modules/contrib/spectra/src/Controller/SpectraController.php
modules/contrib/spectra/src/Entity/SpectraVerbInterface.php
modules/contrib/spectra/src/Entity/Views/SpectraDataViewsData.php
modules/contrib/spectra/src/Entity/Controller/SpectraDataListBuilder.php
modules/contrib/spectra/src/Entity/Views/SpectraNounViewsData.php
modules/contrib/spectra/src/Entity/Views/SpectraStatementViewsData.php
modules/contrib/spectra/src/Entity/Views/SpectraVerbViewsData.php
modules/contrib/spectra/src/Form/SpectraContentForm.php
modules/contrib/spectra/src/Form/SpectraDataDeleteForm.php
modules/contrib/spectra/src/Entity/Controller/SpectraNounListBuilder.php
modules/contrib/spectra/src/Entity/Controller/SpectraStatementListBuilder.php
modules/contrib/spectra/src/Entity/Controller/SpectraVerbListBuilder.php
modules/contrib/spectra/src/Form/SpectraDataForm.php
modules/contrib/spectra/src/Entity/SpectraData.php
modules/contrib/spectra/src/Form/SpectraDataSettingsForm.php
modules/contrib/spectra/src/Form/SpectraNounDeleteForm.php
modules/contrib/spectra/src/Form/SpectraNounForm.php
modules/contrib/spectra/src/Form/SpectraNounSettingsForm.php
modules/contrib/spectra/src/Plugin/views/field/SpectraDataViewerField.php
modules/contrib/spectra/src/Form/SpectraSettingsForm.php
modules/contrib/spectra/src/Form/SpectraStatementDeleteForm.php
modules/contrib/spectra/src/Plugin/views/field/SpectraNounViewerField.php
modules/contrib/spectra/src/Plugin/views/field/SpectraVerbViewerField.php
modules/contrib/spectra/src/SpectraDataAccessControlHandler.php
modules/contrib/spectra/src/SpectraNounAccessControlHandler.php
modules/contrib/spectra/src/SpectraNounHtmlRouteProvider.php
modules/contrib/spectra/src/SpectraPluginInterface.php
modules/contrib/spectra/src/SpectraPluginManager.php
modules/contrib/spectra/src/SpectraStatementAccessControlHandler.php
modules/contrib/spectra/src/SpectraUtilities/SpectraDataFields.php
modules/contrib/spectra/src/SpectraVerbAccessControlHandler.php
modules/contrib/spectra/src/SpectraVerbHtmlRouteProvider.php

1 file with changes
===================

1) modules/contrib/spectra/spectra.install:0

    ---------- begin diff ----------
@@ @@
 <?php
+use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\Core\Database\Database;
+use Drupal\spectra\Entity\SpectraAction;
+use Drupal\spectra\Entity\SpectraVerb;
+use Drupal\spectra\Entity\SpectraNoun;
 /**
  * @file
  */
@@ @@


 // Create a new field definition.
-  $new_status_field = \Drupal\Core\Field\BaseFieldDefinition::create('entity_reference')
+  $new_status_field = BaseFieldDefinition::create('entity_reference')
     ->setLabel(t('Parent Statement'))
     ->setDescription(t('The Parent statement, to which this item is a sub-statement'))
     ->setSetting('target_type', 'spectra_statement')
@@ @@
   );
   foreach ($types as $key => $value) {
     // Uninstall the old definition
-    $schema = \Drupal\Core\Database\Database::getConnection()->schema();
+    $schema = Database::getConnection()->schema();
     $schema->dropField($key, $value);
     // Set up new definition
     $bundle_of = $key;
     $definition_manager = \Drupal::entityDefinitionUpdateManager();
     // Create a new field definition.
-    $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('jsonb')
+    $new_field = BaseFieldDefinition::create('jsonb')
       ->setLabel(t('JSON Data'))
       ->setDescription(t('The stored JSON data for this data object.'));
     // Install the new definition.
@@ @@
  */
 function spectra_update_8103 ()
 {
-  $schema = \Drupal\Core\Database\Database::getConnection()->schema();
+  $schema = Database::getConnection()->schema();

   /**
    * Verbs
@@ @@
   $definition_manager = \Drupal::entityDefinitionUpdateManager();
   // Create a new field definition.
   try {
-    $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('jsonb')
+    $new_field = BaseFieldDefinition::create('jsonb')
       ->setLabel(t('JSON Data'))
       ->setDescription(t('Stored JSON data with further information.'));
     // Install the new definition.
@@ @@
   $definition_manager = \Drupal::entityDefinitionUpdateManager();
   // Create a new field definition.
   try {
-    $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('jsonb')
+    $new_field = BaseFieldDefinition::create('jsonb')
       ->setLabel(t('JSON Data'))
       ->setDescription(t('Stored JSON data with further information.'));
     // Install the new definition.
@@ @@
     'action_data' => 'data',
   ];
   foreach ($actions as $action_id) {
-    $act = \Drupal\spectra\Entity\SpectraAction::load($action_id);
+    $act = SpectraAction::load($action_id);
     $vals = [];
     foreach ($action_props as $key => $val) {
       $vals[$val] = $act->get($key)->getValue();
@@ @@
       $vals[$val] = isset($vals[$val][0]['value']) ? $vals[$val][0]['value'] : $vals[$val];
     }

-    $verb = \Drupal\spectra\Entity\SpectraVerb::create($vals);
+    $verb = SpectraVerb::create($vals);
     $verb->save();
     $act->delete();
   }
@@ @@
         $vals[$val] = $bnoun->get($key)->getValue();
         $vals[$val] = isset($vals[$val][0]['value']) ? $vals[$val][0]['value'] : $vals[$val];
       }
-      $noun = \Drupal\spectra\Entity\SpectraNoun::create($vals);
+      $noun = SpectraNoun::create($vals);
       $noun->save();
       $bnoun->delete();
     }
@@ @@
  * Remove Actors, Actions, Objects, and Contexts, as these were replaced in update 8104
  */
 function spectra_update_8105 () {
-  $schema = \Drupal\Core\Database\Database::getConnection()->schema();
+  $schema = Database::getConnection()->schema();
   $schema->dropTable('spectra_actor');
   $schema->dropTable('spectra_action');
   $schema->dropTable('spectra_object');
@@ @@
   try {
     // Actor
     $definition = $definition_manager->getFieldStorageDefinition('actor_id','spectra_statement');
-    $new_definition = \Drupal\Core\Field\BaseFieldDefinition::createFromFieldStorageDefinition($definition)
+    $new_definition = BaseFieldDefinition::createFromFieldStorageDefinition($definition)
       ->setSetting('target_type', 'spectra_noun');
     $definition_manager->updateFieldStorageDefinition($new_definition);

     // Action
     $definition = $definition_manager->getFieldStorageDefinition('action_id','spectra_statement');
-    $new_definition = \Drupal\Core\Field\BaseFieldDefinition::createFromFieldStorageDefinition($definition)
+    $new_definition = BaseFieldDefinition::createFromFieldStorageDefinition($definition)
       ->setSetting('target_type', 'spectra_verb');
     $definition_manager->updateFieldStorageDefinition($new_definition);

     // Object
     $definition = $definition_manager->getFieldStorageDefinition('object_id','spectra_statement');
-    $new_definition = \Drupal\Core\Field\BaseFieldDefinition::createFromFieldStorageDefinition($definition)
+    $new_definition = BaseFieldDefinition::createFromFieldStorageDefinition($definition)
       ->setSetting('target_type', 'spectra_noun');
     $definition_manager->updateFieldStorageDefinition($new_definition);

     // Context
     $definition = $definition_manager->getFieldStorageDefinition('context_id','spectra_statement');
-    $new_definition = \Drupal\Core\Field\BaseFieldDefinition::createFromFieldStorageDefinition($definition)
+    $new_definition = BaseFieldDefinition::createFromFieldStorageDefinition($definition)
       ->setSetting('target_type', 'spectra_noun');
     $definition_manager->updateFieldStorageDefinition($new_definition);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 1 file has been changed by Rector                                         

