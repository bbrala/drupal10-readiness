diff --git a/field_tools.admin.inc b/field_tools.admin.inc
index 834a914..cc53dc5 100644
--- a/field_tools.admin.inc
+++ b/field_tools.admin.inc
@@ -69,7 +69,7 @@ function field_tools_field_overview() {
     'header' => $header,
   ));
 
-  drupal_add_css(drupal_get_path('module', 'field_tools') . '/field_tools.css');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('field_tools') . '/field_tools.css');
 
   return $output;
 }
diff --git a/field_tools.module b/field_tools.module
index 10faea5..c47b9ee 100644
--- a/field_tools.module
+++ b/field_tools.module
@@ -1,4 +1,10 @@
 <?php
+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\field_tools\Form\FieldStorageConfigDeleteForm;
+use Drupal\field_tools\EntityHandler\FieldStorageConfigAccess;
+use Drupal\Core\Entity\Routing\AdminHtmlRouteProvider;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Url;
 /**
  * @file field_tools.module
  * Contains useful tools for working with fields.
@@ -7,7 +13,7 @@
 /**
  * Implements hook_help().
  */
-function field_tools_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
+function field_tools_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     // Main module help.
     case 'help.page.field_tools':
@@ -58,16 +64,16 @@ function field_tools_entity_type_build(array &$entity_types) {
   // FieldConfig::linkTemplates(), but we can't hack into that.
 
   // Add a delete form and link to field storage config.
-  $entity_types['field_storage_config']->setFormClass('delete', Drupal\field_tools\Form\FieldStorageConfigDeleteForm::class);
+  $entity_types['field_storage_config']->setFormClass('delete', FieldStorageConfigDeleteForm::class);
   $entity_types['field_storage_config']->setLinkTemplate('delete-form', '/admin/reports/fields/tools/{field_storage_config}/delete');
-  $entity_types['field_storage_config']->setHandlerClass('access', Drupal\field_tools\EntityHandler\FieldStorageConfigAccess::class);
+  $entity_types['field_storage_config']->setHandlerClass('access', FieldStorageConfigAccess::class);
   // @todo Core forgot to add a direct way to manipulate route_provider, so
   // we have to do it the sloppy way for now.
   $route_providers = $entity_types['field_storage_config']->getRouteProviderClasses() ?: [];
   if (empty($route_providers['field_tools'])) {
     // This will only provide the delete route, as all the other link templates
     // aren't defined.
-    $route_providers['field_tools'] = \Drupal\Core\Entity\Routing\AdminHtmlRouteProvider::class;
+    $route_providers['field_tools'] = AdminHtmlRouteProvider::class;
     $entity_types['field_storage_config']->setHandlerClass('route_provider', $route_providers);
   }
 }
@@ -75,7 +81,7 @@ function field_tools_entity_type_build(array &$entity_types) {
 /**
  * Implements hook_entity_operation().
  */
-function field_tools_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
+function field_tools_entity_operation(EntityInterface $entity) {
   $operations = [];
 
   if ($entity->getEntityTypeId() == 'field_config' && $entity->access('update')) {
@@ -95,7 +101,7 @@ function field_tools_entity_operation(\Drupal\Core\Entity\EntityInterface $entit
     // Field clone operation.
     $operations['clone'] = array(
       'title' => t('Clone'),
-      'url' => \Drupal\Core\Url::fromRoute("entity.field_config.{$target_entity_type_id}_field_tools_clone_form", $parameters),
+      'url' => Url::fromRoute("entity.field_config.{$target_entity_type_id}_field_tools_clone_form", $parameters),
       'weight' => 50,
     );
   }
@@ -115,7 +121,7 @@ function field_tools_entity_operation(\Drupal\Core\Entity\EntityInterface $entit
 
       $operations['clone_fields'] = array(
         'title' => t('Clone fields'),
-        'url' => \Drupal\Core\Url::fromRoute("field_tools.field_bulk_clone_{$bundle_of_entity_type_id}", $parameters),
+        'url' => Url::fromRoute("field_tools.field_bulk_clone_{$bundle_of_entity_type_id}", $parameters),
         'weight' => 50,
       );
     }
diff --git a/src/Form/ConfigFieldsExportToCodeForm.php b/src/Form/ConfigFieldsExportToCodeForm.php
index 8424a53..4f9a800 100644
--- a/src/Form/ConfigFieldsExportToCodeForm.php
+++ b/src/Form/ConfigFieldsExportToCodeForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\field_tools\Form;
 
+use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormBase;
@@ -132,7 +133,7 @@ class ConfigFieldsExportToCodeForm extends FormBase {
       $code[] = "  ->setRequired(TRUE)";
     }
 
-    if ($field instanceof \Drupal\Core\Field\FieldStorageDefinitionInterface) {
+    if ($field instanceof FieldStorageDefinitionInterface) {
       if ($field->isRevisionable()) {
         $code[] = "  ->setRevisionable(TRUE)";
       }
