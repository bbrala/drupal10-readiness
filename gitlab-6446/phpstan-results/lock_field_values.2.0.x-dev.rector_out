modules/contrib/lock_field_values/lock_field_values.install
modules/contrib/lock_field_values/lock_field_values.module
modules/contrib/lock_field_values/tests/src/Functional/BasicUsageTest.php

1 file with changes
===================

1) modules/contrib/lock_field_values/tests/src/Functional/BasicUsageTest.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create user 1.
@@ @@
     $edit = [
       'third_party_settings[lock_field_values][lockable]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, $this->t('Save settings'));
+    $this->submitForm($edit, $this->t('Save settings'));
     $this->drupalGet('admin/structure/types/manage/page/fields/node.page.field_locky');
-    $this->assertNoFieldChecked('edit-third-party-settings-lock-field-values-lockable');
+    $this->assertSession()->checkboxNotChecked('edit-third-party-settings-lock-field-values-lockable');

     // Check that admin users can make a field lockable.
     $edit = [
       'third_party_settings[lock_field_values][lockable]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, $this->t('Save settings'));
+    $this->submitForm($edit, $this->t('Save settings'));
     $this->drupalGet('admin/structure/types/manage/page/fields/node.page.field_locky');
-    $this->assertFieldChecked('edit-third-party-settings-lock-field-values-lockable');
+    $this->assertSession()->checkboxChecked('edit-third-party-settings-lock-field-values-lockable');
   }

   /**
@@ @@
     $edit = [
       'lock_field_values[field_locky]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->drupalGet('node/' . $this->node->id() . '/edit');
-    $this->assertFieldChecked('edit-lock-field-values-field-locky');
+    $this->assertSession()->checkboxChecked('edit-lock-field-values-field-locky');

     // Check that non-privileged editors cannot lock a field value.
     $this->drupalLogin($this->editor_user2);
@@ @@
     $edit = [
       'field_locky[0][value]' => 'Bruce Wayne',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet('node/' . $this->node->id());
     $this->assertSession()->pageTextNotContains('Bruce Wayne');
@@ @@
     $edit = [
       'lock_field_values[field_locky]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->drupalGet('node/' . $this->node->id() . '/edit');
-    $this->assertNoFieldChecked('edit-lock-field-values-field-locky');
+    $this->assertSession()->checkboxNotChecked('edit-lock-field-values-field-locky');

     // Check that non-privileged editors can edit an unlocked field value.
     $this->drupalGet('node/' . $this->node->id() . '/edit');
@@ @@
     $edit = [
       'field_locky[0][value]' => 'Bruce Wayne',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet('node/' . $this->node->id());
     $this->assertSession()->pageTextContains('Bruce Wayne');
    ----------- end diff -----------

Applied rules:
 * AssertFieldCheckedRector
 * AssertNoFieldCheckedRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

