modules/contrib/acsf/acsf.api.php
modules/contrib/acsf/acsf_init/lib/sites/g/settings.php
modules/contrib/acsf/acsf_theme/acsf_theme.module
modules/contrib/acsf/src/AcsfException.php
modules/contrib/acsf/src/Event/AcsfDuplicationScrubCommentStorage.php
modules/contrib/acsf/tests/AcsfConfigUnitTestMissingPassword.inc
modules/contrib/acsf/src/AcsfInitException.php
modules/contrib/acsf/src/AcsfInitHtaccessException.php
modules/contrib/acsf/src/AcsfLog.php
modules/contrib/acsf/tests/AcsfConfigUnitTestMissingUrl.inc
modules/contrib/acsf/tests/AcsfConfigUnitTestMissingUsername.inc
modules/contrib/acsf/tests/AcsfEventsTest.php
modules/contrib/acsf/acsf_theme/src/Commands/AcsfThemeCommands.php
modules/contrib/acsf/acsf.install
modules/contrib/acsf/acsf.module
modules/contrib/acsf/acsf_duplication/acsf_duplication.api.php
modules/contrib/acsf/acsf_init/lib/sites/g/sites.inc
modules/contrib/acsf/acsf_duplication/acsf_duplication.module
modules/contrib/acsf/src/AcsfMessage.php
modules/contrib/acsf/acsf_duplication/src/Commands/AcsfDuplicationCommands.php
modules/contrib/acsf/acsf_variables/acsf_variables.install
modules/contrib/acsf/acsf_variables/src/Commands/AcsfVariablesCommands.php
modules/contrib/acsf/src/AcsfMessageEmptyResponseException.php
modules/contrib/acsf/src/AcsfMessageFailedResponseException.php
modules/contrib/acsf/src/AcsfMessageFailureException.php
modules/contrib/acsf/src/AcsfMessageMalformedResponseException.php
modules/contrib/acsf/src/AcsfMessageMissingCredsException.php
modules/contrib/acsf/src/AcsfMessageResponse.php
modules/contrib/acsf/src/AcsfMessageResponseRest.php
modules/contrib/acsf/src/AcsfMessageRest.php
modules/contrib/acsf/tests/AcsfMessageResponseUnitTest.inc
modules/contrib/acsf/tests/AcsfMessageTest.php
modules/contrib/acsf/src/AcsfConfig.php
modules/contrib/acsf/acsf_init/lib/cloud_hooks/acquia/db_connect.php
modules/contrib/acsf/src/AcsfConfigDefault.php
modules/contrib/acsf/tests/AcsfMessageUnitTestFailure.inc
modules/contrib/acsf/tests/AcsfMessageUnitTestFailureException.inc
modules/contrib/acsf/tests/AcsfMessageUnitTestMissingEndpoint.inc
modules/contrib/acsf/tests/AcsfMessageUnitTestMissingResponse.inc
modules/contrib/acsf/src/AcsfSite.php
modules/contrib/acsf/tests/AcsfMessageUnitTestSuccess.inc
modules/contrib/acsf/tests/AcsfSiteTest.php
modules/contrib/acsf/src/Event/AcsfDuplicationScrubConfigurationHandler.php
modules/contrib/acsf/src/AcsfConfigIncompleteException.php
modules/contrib/acsf/src/AcsfConfigMissingCredsException.php
modules/contrib/acsf/src/AcsfConfigRest.php
modules/contrib/acsf/src/Event/AcsfDuplicationScrubEntityHandler.php
modules/contrib/acsf/acsf_init/lib/cloud_hooks/acquia/uri.php
modules/contrib/acsf/acsf_init/lib/cloud_hooks/common/post-db-copy/000-acquia_required_scrub.php
modules/contrib/acsf/src/AcsfSiteMissingIdentifierException.php
modules/contrib/acsf/src/AcsfThemeNotify.php
modules/contrib/acsf/acsf_init/lib/cloud_hooks/common/pre-web-activate/000-acquia-deployment.php
modules/contrib/acsf/src/Event/AcsfDuplicationScrubFinalizeHandler.php
modules/contrib/acsf/tests/AcsfVariableStorageMock.php
modules/contrib/acsf/acsf_init/lib/sites/sites.php
modules/contrib/acsf/src/Event/AcsfDuplicationScrubInitializeHandler.php
modules/contrib/acsf/tests/UnitTestDummyHandler1.php
modules/contrib/acsf/acsf_init/src/Commands/AcsfInitCommands.php
modules/contrib/acsf/tests/UnitTestDummyHandler2.php
modules/contrib/acsf/tests/UnitTestDummyHandler3.php
modules/contrib/acsf/tests/UnitTestDummyHandlerIncompatible.php
modules/contrib/acsf/tests/UnitTestDummyHandlerInterrupt.php
modules/contrib/acsf/src/Event/AcsfDuplicationScrubNodeHandler.php
modules/contrib/acsf/src/AcsfVariableStorage.php
modules/contrib/acsf/src/Event/AcsfDuplicationScrubTemporaryFilesHandler.php
modules/contrib/acsf/src/Event/AcsfDuplicationScrubTruncateTablesHandler.php
modules/contrib/acsf/acsf_init/lib/sites/default/acsf.legacy.default.settings.php
modules/contrib/acsf/acsf_init/lib/sites/default/acsf.settings.php
modules/contrib/acsf/acsf_init/lib/sites/g/SimpleRest.php
modules/contrib/acsf/src/Commands/AcsfCommands.php
modules/contrib/acsf/src/Event/AcsfDuplicationScrubUserHandler.php
modules/contrib/acsf/src/Event/AcsfEvent.php
modules/contrib/acsf/acsf_init/lib/sites/g/apc_rebuild.php
modules/contrib/acsf/src/Event/AcsfEventDispatcher.php
modules/contrib/acsf/src/Event/AcsfEventHandler.php
modules/contrib/acsf/src/Event/AcsfEventHandlerIncompatibleException.php
modules/contrib/acsf/src/Event/AcsfSiteInfoHandler.php
modules/contrib/acsf/src/Event/AcsfThemeDuplicationScrubbingHandler.php
modules/contrib/acsf/src/EventSubscriber/AcsfMaintenanceModeSubscriber.php
modules/contrib/acsf/src/Routing/RouteSubscriber.php
modules/contrib/acsf/src/Commands/AcsfExtraCommands.php
modules/contrib/acsf/tests/AcsfConfigTest.php
modules/contrib/acsf/tests/AcsfConfigUnitTest.inc
modules/contrib/acsf/tests/AcsfConfigUnitTestIncompatible.inc
modules/contrib/acsf/src/Event/AcsfDuplicationScrubCommentHandler.php
modules/contrib/acsf/acsf_sj/acsf_sj.install
modules/contrib/acsf/acsf_sj/acsf_sj.module
modules/contrib/acsf/acsf_sj/src/Api/SjApiClient.php
modules/contrib/acsf/acsf_sj/src/Api/SjClientInterface.php
modules/contrib/acsf/acsf_sj/src/Api/SjLocalDevClient.php
modules/contrib/acsf/acsf_sso/acsf_sso.install
modules/contrib/acsf/acsf_sso/src/EventSubscriber/SamlauthRequestSubscriber.php
modules/contrib/acsf/acsf_sso/src/EventSubscriber/SamlauthUserSyncSubscriber.php
modules/contrib/acsf/acsf_theme/acsf_theme.install

8 files with changes
====================

1) modules/contrib/acsf/tests/AcsfSiteTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * Setup.
    */
-  public function setUp() {
+  public function setUp(): void {
     // Simulate the sites.json configuration.
     $GLOBALS['gardens_site_settings']['conf']['acsf_site_id'] = $this->site_id;

@@ @@
   /**
    * Cleanup Mockery on each test. (PHPUnit 5 does not support listeners.)
    */
-  public function tearDown() {
+  public function tearDown(): void {
     Mockery::close();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/acsf/tests/AcsfMessageTest.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * Setup.
    */
-  public function setUp() {
+  public function setUp(): void {
     // The files in this directory can't be autoloaded as long as they don't
     // match their classes' namespaces.
     $files = [
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/acsf/tests/AcsfEventsTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * Setup.
    */
-  public function setUp() {
+  public function setUp(): void {
     // The files in this directory can't be autoloaded as long as they don't
     // match their classes' namespaces.
     $files = [
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/acsf/acsf.api.php:19

    ---------- begin diff ----------
@@ @@
         // contain a namespace declaration.
         'class' => '\Drupal\your_module\YourClassName',
         // 'path' is necessary only if the location is non-standard:
-        'path' => drupal_get_path('module', 'your_module') . '/classes',
+        'path' => \Drupal::service('extension.list.module')->getPath('your_module') . '/classes',
       ],
     ],
   ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


5) modules/contrib/acsf/tests/AcsfConfigTest.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Setup.
    */
-  public function setUp() {
+  public function setUp(): void {
     // The files in this directory can't be autoloaded as long as they don't
     // match their classes' namespaces.
     $files = [
    ----------- end diff -----------

Applied rules:
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/acsf/src/EventSubscriber/AcsfMaintenanceModeSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\acsf\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\State\StateInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Sets SF maintenance mode header (on successful responses).
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


7) modules/contrib/acsf/acsf_sj/src/Api/SjApiClient.php:188

    ---------- begin diff ----------
@@ @@

     $exit_code = -1;
     if (!$error) {
-      $command = sprintf('%s %s', $this->binary, $command_arguments);
+      $command = [$this->binary, $command_arguments];
       // Possibly one retry.
       for ($retry = 0; $retry < 2 && $exit_code !== 0; $retry++) {
         if ($retry) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * StringToArrayArgumentProcessRector
 * WrapReturnRector


8) modules/contrib/acsf/acsf_init/src/Commands/AcsfInitCommands.php:462

    ---------- begin diff ----------
@@ @@
     $admin_account->setLastLoginTime(1)
       ->setUsername('Site Factory admin')
       ->setEmail($site_admin_mail)
-      ->setPassword(user_password())
+      ->setPassword(\Drupal::service('password_generator')->generate())
       ->activate()
       ->save();

@@ @@
     $site_owner_account->setLastLoginTime(1)
       ->setUsername($site_owner_name)
       ->setEmail($site_owner_mail)
-      ->setPassword(user_password())
+      ->setPassword(\Drupal::service('password_generator')->generate())
       ->activate()
       ->save();
    ----------- end diff -----------

Applied rules:
 * UserPasswordRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

