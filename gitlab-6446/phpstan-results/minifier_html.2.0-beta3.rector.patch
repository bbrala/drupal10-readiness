diff --git a/src/EventSubscriber/MinifierHtmlSubscriber.php b/src/EventSubscriber/MinifierHtmlSubscriber.php
index 84172cb..c9dba84 100644
--- a/src/EventSubscriber/MinifierHtmlSubscriber.php
+++ b/src/EventSubscriber/MinifierHtmlSubscriber.php
@@ -2,11 +2,10 @@
 
 namespace Drupal\minifier_html\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Drupal\Core\Render\HtmlResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 
 /**
  * Class MinifierHtmlSubscriber.
@@ -32,10 +31,10 @@ class MinifierHtmlSubscriber implements EventSubscriberInterface {
   /**
    * This method is called whenever the kernel.response event is dispatched.
    *
-   * @param \FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   Event object have response full HTML String.
    */
-  public function minifilterHtmlResponse(FilterResponseEvent $event) {
+  public function minifilterHtmlResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     if ($response instanceof HtmlResponse) {
       $event->getResponse()->setContent($this->minifierHtmlOutput($event->getResponse()->getContent()));
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index e22d6b3..13c5b04 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -40,7 +40,7 @@ class LoadTest extends BrowserTestBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
