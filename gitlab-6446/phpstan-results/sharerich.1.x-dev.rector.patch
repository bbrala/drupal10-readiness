diff --git a/sharerich.module b/sharerich.module
index 7f5ca54..a71cd60 100644
--- a/sharerich.module
+++ b/sharerich.module
@@ -68,7 +68,7 @@ function sharerich_sharerich_buttons_alter(&$buttons) {
  * @return A list of file names.
  */
 function sharerich_get_default_services() {
-  $dir = drupal_get_path('module', 'sharerich') . '/services';
+  $dir = \Drupal::service('extension.list.module')->getPath('sharerich') . '/services';
   $list = \Drupal::service('file_system')->scanDirectory($dir, '/.inc/', array(), 0);
   return array_map(function ($service) {
     return $service->name;
@@ -79,7 +79,7 @@ function sharerich_get_default_services() {
  * Helper to load services from the disk.
  */
 function sharerich_load_default_service($service_name) {
-  $dir = drupal_get_path('module', 'sharerich') . '/services';
+  $dir = \Drupal::service('extension.list.module')->getPath('sharerich') . '/services';
   $service_name = $dir . '/' . $service_name . '.inc';
   if (file_exists($service_name)) {
     return file_get_contents($service_name);
diff --git a/src/Plugin/Block/SharerichBlock.php b/src/Plugin/Block/SharerichBlock.php
index 0962b28..c0af755 100644
--- a/src/Plugin/Block/SharerichBlock.php
+++ b/src/Plugin/Block/SharerichBlock.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\sharerich\Plugin\Block;
 
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Routing\RedirectDestinationTrait;
 /**
@@ -22,7 +23,7 @@ class SharerichBlock extends BlockBase {
   /**
    * {@inheritdoc}
    */
-  public function blockForm($form, \Drupal\Core\Form\FormStateInterface $form_state) {
+  public function blockForm($form, FormStateInterface $form_state) {
     $form = parent::blockForm($form, $form_state);
     $configuration = $this->configuration;
 
@@ -66,7 +67,7 @@ class SharerichBlock extends BlockBase {
   /**
    * Overrides \Drupal\block\BlockBase::blockSubmit().
    */
-  public function blockSubmit($form, \Drupal\Core\Form\FormStateInterface $form_state) {
+  public function blockSubmit($form, FormStateInterface $form_state) {
     $this->configuration['sharerich_set'] = $form_state->getValue('sharerich_set');
     $this->configuration['orientation'] = $form_state->getValue('orientation');
     $this->configuration['sticky'] = $form_state->getValue('sticky');
diff --git a/tests/src/Functional/SharerichTests.php b/tests/src/Functional/SharerichTests.php
index e0cd66b..b0ea20d 100644
--- a/tests/src/Functional/SharerichTests.php
+++ b/tests/src/Functional/SharerichTests.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sharerich\Functional;
 
+use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\node\Entity\Node;
 use Drupal\node\Entity\NodeType;
@@ -52,7 +53,7 @@ class SharerichTests extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Services to test.
@@ -144,18 +145,18 @@ class SharerichTests extends BrowserTestBase {
     $page->save();
 
     // Visit node.
-    $url = \Drupal\Core\Url::fromRoute('entity.node.canonical', ['node' => $page->id()]);
+    $url = Url::fromRoute('entity.node.canonical', ['node' => $page->id()]);
     $this->drupalGet($url->toString());
 
     $text = $this->xpath('//div[@id="block-sharerich-block"]//h2');
-    $this->assertEqual($text[0]->getText(), $this->t('Share this'), t("The title of sharerich block is correct"));
+    $this->assertEquals($text[0]->getText(), $this->t('Share this'), t("The title of sharerich block is correct"));
 
     $elements = $this->xpath('//ul[contains(@class, :class)]/li', [':class' => 'sharerich-buttons']);
     $this->assertTrue(!empty($elements), 'Found a sticky sharerich block');
 
     foreach ($this->services as $item) {
       $text = $this->xpath('//div[@id="block-sharerich-block"]//ul/li[@class="rrssb-' . $item . '"]//span[@class="rrssb-text"]');
-      $this->assertEqual($text[0]->getText(), $item, $this->t('The text of :item button is correct', [':item' => $item]));
+      $this->assertEquals($text[0]->getText(), $item, $this->t('The text of :item button is correct', [':item' => $item]));
     }
 
     // Test that tokens were rendered correctly.
