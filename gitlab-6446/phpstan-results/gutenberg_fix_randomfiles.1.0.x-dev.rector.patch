diff --git a/gutenberg_fix_randomfiles.info.yml b/gutenberg_fix_randomfiles.info.yml
index 3f949b4..82e1a16 100644
--- a/gutenberg_fix_randomfiles.info.yml
+++ b/gutenberg_fix_randomfiles.info.yml
@@ -2,7 +2,7 @@ name: 'Gutenberg Random Filename Fix'
 type: module
 description: 'Module for updating content affected by the #3208407 Gutenberg issue.'
 package: Gutenberg
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:editor
   - drupal:file
diff --git a/gutenberg_fix_randomfiles.install b/gutenberg_fix_randomfiles.install
index f919b1c..01f76cc 100644
--- a/gutenberg_fix_randomfiles.install
+++ b/gutenberg_fix_randomfiles.install
@@ -23,7 +23,7 @@ function gutenberg_fix_randomfiles_requirements($phase) {
       // its own. Load it manually.
       try {
         if (!class_exists(FileUpdateService::class)) {
-          $module_path = drupal_get_path('module', 'file_update');
+          $module_path = \Drupal::service('extension.list.module')->getPath('file_update');
           require_once $module_path . '/src/FileUpdateService.php';
           require_once $module_path . '/src/Plugin/FileUpdate/FileUpdateBase.php';
           require_once $module_path . '/src/Plugin/FileUpdate/FileUpdateInterface.php';
diff --git a/src/Commands/GutenbergFixRandomFilesCommands.php b/src/Commands/GutenbergFixRandomFilesCommands.php
index cd5d6a9..b06f0d9 100644
--- a/src/Commands/GutenbergFixRandomFilesCommands.php
+++ b/src/Commands/GutenbergFixRandomFilesCommands.php
@@ -185,8 +185,8 @@ class GutenbergFixRandomFilesCommands extends DrushCommands {
     $affected = \Drupal::state()->get(static::STATE_KEY, []);
     $result = array_map(static function ($entry) {
       return $entry + [
-        'src_path' => file_url_transform_relative(file_create_url($entry['src'])),
-        'dest_path' => file_url_transform_relative(file_create_url($entry['dest'])),
+        'src_path' => \Drupal::service('file_url_generator')->generateString($entry['src']),
+        'dest_path' => \Drupal::service('file_url_generator')->generateString($entry['dest']),
       ];
     }, $affected);
 
@@ -269,7 +269,7 @@ class GutenbergFixRandomFilesCommands extends DrushCommands {
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
   protected function updateAffectedNodes($src, Connection $database, $destination, $fid) {
-    $source_url = file_url_transform_relative(file_create_url($src));
+    $source_url = \Drupal::service('file_url_generator')->generateString($src);
     // Attempt to pick up files which were created without reference to
     // the uuid. e.g. core/file.
     // https://www.drupal.org/project/gutenberg/issues/3106598
@@ -281,7 +281,7 @@ class GutenbergFixRandomFilesCommands extends DrushCommands {
     if ($node_ids) {
       /** @var \Drupal\node\NodeInterface[] $nodes */
       $nodes = Node::loadMultiple($node_ids);
-      $dest = file_url_transform_relative(file_create_url($destination));
+      $dest = \Drupal::service('file_url_generator')->generateString($destination);
       foreach ($nodes as $node) {
         $this->logger()->info(
           dt(
