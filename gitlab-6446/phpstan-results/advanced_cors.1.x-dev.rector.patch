diff --git a/advanced_cors.info.yml b/advanced_cors.info.yml
index 21bdd53..b0e3a2c 100644
--- a/advanced_cors.info.yml
+++ b/advanced_cors.info.yml
@@ -2,7 +2,7 @@ name: Advanced CORS
 type: module
 description: Advanced CORS - Provides possibility to customize settings CORS by path patterns.
 package: Other
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 configure: entity.route_config.collection
 
 dependencies:
diff --git a/src/EventSubscriber/AdvancedCorsEventSubscriber.php b/src/EventSubscriber/AdvancedCorsEventSubscriber.php
index 82c4017..d3198b7 100644
--- a/src/EventSubscriber/AdvancedCorsEventSubscriber.php
+++ b/src/EventSubscriber/AdvancedCorsEventSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advanced_cors\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\advanced_cors\Entity\RouteConfigEntityInterface;
 use Drupal\advanced_cors\PatternsCache;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -9,7 +10,6 @@ use Drupal\Core\Path\PathMatcherInterface;
 use Drupal\path_alias\AliasManagerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -80,7 +80,7 @@ class AdvancedCorsEventSubscriber implements EventSubscriberInterface {
   /**
    * Adds headers to the response.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(ResponseEvent $event) {
     $request = $event->getRequest();
     $path_info = $request->getPathInfo();
     $current_path = $this->aliasManager->getPathByAlias($path_info);
@@ -102,12 +102,12 @@ class AdvancedCorsEventSubscriber implements EventSubscriberInterface {
   /**
    * Adds CORS headers to the response.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The response event from Drupal core (contains request and response).
    * @param \Drupal\advanced_cors\Entity\RouteConfigEntityInterface $config
    *   The configuration for this module.
    */
-  protected function addCorsHeaders(FilterResponseEvent $event,
+  protected function addCorsHeaders(ResponseEvent $event,
                                     RouteConfigEntityInterface $config) {
     $mapping_headers = [
       'allowed_headers' => 'Access-Control-Allow-Headers',
