diff --git a/entitree.install b/entitree.install
index 6b2de1f..1f65953 100644
--- a/entitree.install
+++ b/entitree.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\entitree\Entity\EmptyLocation;
+use Drupal\entitree\Entity\EntitreeLocation;
 use \Drupal\entitree\NestedSetFactory;
 
 function entitree_install(){
@@ -15,12 +17,12 @@ function entitree_install(){
   $nestedSetFactory->createRootNode();
 
   // Create empty location for root node
-  $emptyLocation = \Drupal\entitree\Entity\EmptyLocation::create(
+  $emptyLocation = EmptyLocation::create(
     ['label' => t("Entitree Root")]);
   $emptyLocation->save();
 
   // Create entitree location location for root node
-  $rootLocation = \Drupal\entitree\Entity\EntitreeLocation::create([
+  $rootLocation = EntitreeLocation::create([
     "label" => t("Entitree Root"),
     "path_segment" => "",
     "ref_entity_type" => "empty_location",
@@ -40,12 +42,12 @@ function entitree_install(){
         ->execute();
 
   // Create site root node
-  $emptyLocation = \Drupal\entitree\Entity\EmptyLocation::create(
+  $emptyLocation = EmptyLocation::create(
     ['label' => t("Entitree Site Root")]);
   $emptyLocation->save();
 
   // Create entitree location location for site root node
-  $siteRootLocation = \Drupal\entitree\Entity\EntitreeLocation::create([
+  $siteRootLocation = EntitreeLocation::create([
     "label" => t("Entitree Site Root"),
     "path_segment" => "/",
     "ref_entity_type" => "empty_location",
diff --git a/entitree.module b/entitree.module
index b3c2d47..d3f66cf 100644
--- a/entitree.module
+++ b/entitree.module
@@ -71,21 +71,21 @@ function entitree_entity_operation(EntityInterface $entity): array{
         $operations['open_url'] = [
           'title' => t('Open URL'),
           'label' => t('Open URL'),
-          'url' => \Drupal\Core\Url::fromUri("base:" . $entity->getPath()),
+          'url' => Url::fromUri("base:" . $entity->getPath()),
           'weight' => 10,
         ];
       }
       $operations['edit_location'] = [
         'title' => t('Edit Location'),
         'label' => t('Edit'),
-        'url' => \Drupal\Core\Url::fromRoute('entitree.location.edit',
+        'url' => Url::fromRoute('entitree.location.edit',
           ['location' => $entity->getId()]),
         'weight' => 50
       ];
       $operations['create_empty_child'] = [
         'title' => t('Add Empty Child Location'),
         'label' => t('Add Child'),
-        'url' => \Drupal\Core\Url::fromRoute('entitree.location.add_empty',[
+        'url' => Url::fromRoute('entitree.location.add_empty',[
           'parent' => $entity->getId(),
         ]),
         'weight' => 60,
@@ -93,7 +93,7 @@ function entitree_entity_operation(EntityInterface $entity): array{
       $operations['delete_location'] = [
         'title' => t('Delete Location'),
         'label' => 'Delete',
-        'url' => \Drupal\Core\Url::fromRoute('entitree.location.delete',
+        'url' => Url::fromRoute('entitree.location.delete',
           ['location' => $entity->getId()]
         ),
         'weight' => 99
diff --git a/modules/entitree_location_rules/tests/src/Functional/LoadTest.php b/modules/entitree_location_rules/tests/src/Functional/LoadTest.php
index 4a30594..3586a62 100644
--- a/modules/entitree_location_rules/tests/src/Functional/LoadTest.php
+++ b/modules/entitree_location_rules/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/entitree_node/entitree_node.module b/modules/entitree_node/entitree_node.module
index 2f0859b..d81907a 100644
--- a/modules/entitree_node/entitree_node.module
+++ b/modules/entitree_node/entitree_node.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Contains entitree_node.module.
@@ -27,7 +28,7 @@ function entitree_node_help($route_name, RouteMatchInterface $route_match) {
 /**
  * Implements hook_entity_operation_alter().
  */
-function entitree_node_entity_operation_alter(array &$operations, \Drupal\Core\Entity\EntityInterface $entity) {
+function entitree_node_entity_operation_alter(array &$operations, EntityInterface $entity) {
   /**
    * @todo implement proper access check
    */
diff --git a/modules/entitree_node/tests/src/Functional/LoadTest.php b/modules/entitree_node/tests/src/Functional/LoadTest.php
index b5beb34..8b44066 100644
--- a/modules/entitree_node/tests/src/Functional/LoadTest.php
+++ b/modules/entitree_node/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/entitree_permissions/entitree_permissions.module b/modules/entitree_permissions/entitree_permissions.module
index f003baf..840adc4 100644
--- a/modules/entitree_permissions/entitree_permissions.module
+++ b/modules/entitree_permissions/entitree_permissions.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Url;
 function entitree_permissions_theme($existing, $type, $theme, $path) {
   return [
     'entitree_permissions__location' => [
@@ -18,7 +20,7 @@ function entitree_permissions_theme($existing, $type, $theme, $path) {
 }
 
 function entitree_permissions_entity_operation(
-  \Drupal\Core\Entity\EntityInterface $entity
+  EntityInterface $entity
 ) {
   $operations = [];
 
@@ -27,7 +29,7 @@ function entitree_permissions_entity_operation(
     $operations['manage_permissions'] = [
       'title' => t('Manage Permissions'),
       'label' => 'Permissions',
-      'url' => \Drupal\Core\Url::fromRoute(
+      'url' => Url::fromRoute(
         'entitree_permissions.location_permissions_controller_render',
         ['location' => $entity->getId()]),
       'weight' => 51
diff --git a/modules/entitree_permissions/src/EventSubscriber/EntitreePermissionsEventsSubscriber.php b/modules/entitree_permissions/src/EventSubscriber/EntitreePermissionsEventsSubscriber.php
index 5c269c6..4b6c5f6 100644
--- a/modules/entitree_permissions/src/EventSubscriber/EntitreePermissionsEventsSubscriber.php
+++ b/modules/entitree_permissions/src/EventSubscriber/EntitreePermissionsEventsSubscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entitree_permissions\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Event subscriber to update the operations array for Entitree Permissions.
@@ -29,7 +29,7 @@ class EntitreePermissionsEventsSubscriber implements EventSubscriberInterface {
   /**
    * This method is called when the entitree_operations is dispatched.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The dispatched event.
    */
   public function entitreeOperations(Event $event) {
diff --git a/modules/entitree_permissions/src/Plugin/EntitreePermissionsType/EntitreePermissionsTypeUser.php b/modules/entitree_permissions/src/Plugin/EntitreePermissionsType/EntitreePermissionsTypeUser.php
index ff3b3a7..c385bd0 100644
--- a/modules/entitree_permissions/src/Plugin/EntitreePermissionsType/EntitreePermissionsTypeUser.php
+++ b/modules/entitree_permissions/src/Plugin/EntitreePermissionsType/EntitreePermissionsTypeUser.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entitree_permissions\Plugin\EntitreePermissionsType;
 
+use Drupal\user\Entity\User;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\entitree_permissions\Plugin\EntitreePermissionsTypeBase;
 use Drupal\entitree\EntitreeLocationInterface;
@@ -30,7 +31,7 @@ class EntitreePermissionsTypeUser extends EntitreePermissionsTypeBase
   }
 
   public function formatAccessValue($userId): string{
-    $user = \Drupal\user\Entity\User::load($userId);
+    $user = User::load($userId);
     return $user->getUsername();
   }
 
diff --git a/modules/entitree_taxonomy_term/entitree_taxonomy_term.module b/modules/entitree_taxonomy_term/entitree_taxonomy_term.module
index 95e99ae..52bb6fb 100644
--- a/modules/entitree_taxonomy_term/entitree_taxonomy_term.module
+++ b/modules/entitree_taxonomy_term/entitree_taxonomy_term.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Url;
 
 /**
@@ -7,7 +8,7 @@ use Drupal\Core\Url;
  */
 function entitree_taxonomy_term_entity_operation_alter(
   array &$operations,
-  \Drupal\Core\Entity\EntityInterface $entity
+  EntityInterface $entity
 ) {
   /**
    * @todo implement proper access check
diff --git a/modules/entitree_taxonomy_term/src/Plugin/EntitreeEntityType/EntitreeTaxonomyTerm.php b/modules/entitree_taxonomy_term/src/Plugin/EntitreeEntityType/EntitreeTaxonomyTerm.php
index 853ca92..b2a2a8f 100644
--- a/modules/entitree_taxonomy_term/src/Plugin/EntitreeEntityType/EntitreeTaxonomyTerm.php
+++ b/modules/entitree_taxonomy_term/src/Plugin/EntitreeEntityType/EntitreeTaxonomyTerm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\entitree_taxonomy_term\Plugin\EntitreeEntityType;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\taxonomy\Entity\Term;
+use Drupal\Core\Url;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Entity\Entity;
 use Drupal\entitree\Plugin\EntitreeEntityTypeBase;
@@ -49,12 +52,12 @@ class EntitreeTaxonomyTerm extends EntitreeEntityTypeBase {
 
   public function loadEntityByRouteParams(
     array $params
-  ): \Drupal\Core\Entity\EntityInterface {
-    return \Drupal\taxonomy\Entity\Term::load($params['taxonomy_term']);
+  ): EntityInterface {
+    return Term::load($params['taxonomy_term']);
   }
 
-  public function getLocationsPathById(int $tid): \Drupal\Core\Url{
-    return \Drupal\Core\Url::fromRoute('entitree.locations.taxonomy_term', [
+  public function getLocationsPathById(int $tid): Url{
+    return Url::fromRoute('entitree.locations.taxonomy_term', [
       "taxonomy_term" => $tid
     ]);
   }
diff --git a/src/Event/EntitreeOperationsEvent.php b/src/Event/EntitreeOperationsEvent.php
index bf779c3..360aa74 100644
--- a/src/Event/EntitreeOperationsEvent.php
+++ b/src/Event/EntitreeOperationsEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\entitree\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Event definition for the entitree operations event.
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index bfeaa6c..14d524e 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
