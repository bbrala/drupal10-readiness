modules/contrib/graphql/examples/graphql_composable/src/GraphQL/Response/ArticleResponse.php
modules/contrib/graphql/graphql.module
modules/contrib/graphql/src/Controller/ServerListBuilder.php
modules/contrib/graphql/src/GraphQL/Execution/ResolveContext.php
modules/contrib/graphql/src/GraphQL/Utility/DeferredUtility.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityCreated.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/DefaultValue.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/XML/XMLXpath.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Menu/MenuLink/MenuLinkDescription.php
modules/contrib/graphql/tests/modules/graphql_persisted_queries_test/src/Plugin/GraphQL/PersistedQuery/PersistedQueryPluginOne.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/XML/XMLParseTest.php
modules/contrib/graphql/tests/src/Kernel/ValidatorTest.php
modules/contrib/graphql/src/Access/ExplorerAccessCheck.php
modules/contrib/graphql/examples/graphql_composable/src/Plugin/GraphQL/DataProducer/CreateArticle.php
modules/contrib/graphql/tests/modules/graphql_persisted_queries_test/src/Plugin/GraphQL/PersistedQuery/PersistedQueryPluginThree.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Menu/MenuLink/MenuLinkExpanded.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Description.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Menu/MenuLink/MenuLinkLabel.php
modules/contrib/graphql/tests/modules/graphql_persisted_queries_test/src/Plugin/GraphQL/PersistedQuery/PersistedQueryPluginTwo.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Menu/MenuLink/MenuLinkUrl.php
modules/contrib/graphql/src/Access/QueryAccessCheck.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Hidden.php
modules/contrib/graphql/tests/modules/graphql_resolver_builder_test/src/Plugin/DataType/Tree.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Menu/MenuLinks.php
modules/contrib/graphql/tests/modules/graphql_resolver_builder_test/src/TypedData/Definition/TreeDefinition.php
modules/contrib/graphql/src/GraphQL/Utility/DocumentSerializer.php
modules/contrib/graphql/src/Controller/SubrequestExtractionController.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityDescription.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityId.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityLabel.php
modules/contrib/graphql/src/Plugin/GraphQL/Schema/ComposableSchema.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityLanguage.php
modules/contrib/graphql/src/GraphQL/Utility/FileUpload.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageDerivativeTest.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityLoad.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Id.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/XML/XMLTestBase.php
modules/contrib/graphql/examples/graphql_composable/src/Plugin/GraphQL/Schema/ComposableSchemaExample.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Label.php
modules/contrib/graphql/examples/graphql_composable/src/Plugin/GraphQL/SchemaExtension/ComposableSchemaExampleExtension.php
modules/contrib/graphql/src/GraphQL/Resolver/Argument.php
modules/contrib/graphql/src/Access/VoyagerAccessCheck.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/MaxNumItems.php
modules/contrib/graphql/src/GraphQL/Resolver/Callback.php
modules/contrib/graphql/src/Annotation/DataProducer.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Menu/MenuTree/MenuTreeLink.php
modules/contrib/graphql/src/GraphQL/Resolver/Composite.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Menu/MenuTree/MenuTreeSubtree.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Routing/RouteEntity.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Multiple.php
modules/contrib/graphql/src/Annotation/PersistedQuery.php
modules/contrib/graphql/src/Annotation/Schema.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Reference.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Required.php
modules/contrib/graphql/src/Controller/ValidationController.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/XML/XMLXpathTest.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Settings.php
modules/contrib/graphql/src/GraphQL/Resolver/Condition.php
modules/contrib/graphql/src/Annotation/SchemaExtension.php
modules/contrib/graphql/src/Plugin/GraphQL/Schema/SdlSchemaPluginBase.php
modules/contrib/graphql/src/Cache/Context/StaticCacheContext.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Status.php
modules/contrib/graphql/examples/graphql_composable/src/Wrappers/Response/ArticleResponse.php
modules/contrib/graphql/src/Cache/RequestPolicy/GetOnly.php
modules/contrib/graphql/examples/graphql_example/src/Plugin/GraphQL/DataProducer/QueryArticles.php
modules/contrib/graphql/src/Config/LanguageConfigOverride.php
modules/contrib/graphql/src/GraphQL/Resolver/Context.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Type.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityLoadByUuid.php
modules/contrib/graphql/tests/src/Traits/DataProducerExecutionTrait.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields/Weight.php
modules/contrib/graphql/tests/src/Kernel/EntityBufferTest.php
modules/contrib/graphql/src/GraphQL/Resolver/DefaultValue.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Label.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Field/EntityReference.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Routing/RouteLoad.php
modules/contrib/graphql/src/GraphQL/Resolver/Map.php
modules/contrib/graphql/src/Controller/ExplorerController.php
modules/contrib/graphql/examples/graphql_example/src/Plugin/GraphQL/Schema/ExampleSchema.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Routing/Url/UrlPath.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityLoadMultiple.php
modules/contrib/graphql/tests/src/Traits/HttpRequestTrait.php
modules/contrib/graphql/src/GraphQL/Resolver/ParentValue.php
modules/contrib/graphql/src/Controller/RequestController.php
modules/contrib/graphql/src/GraphQL/Resolver/Path.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/String/Uppercase.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Taxonomy/TaxonomyLoadTree.php
modules/contrib/graphql/src/Controller/VoyagerController.php
modules/contrib/graphql/src/Entity/Server.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Field/EntityReferenceLayoutRevisions.php
modules/contrib/graphql/examples/graphql_example/src/Plugin/GraphQL/SchemaExtension/ExampleSchemaExtension.php
modules/contrib/graphql/src/GraphQL/Resolver/ResolverInterface.php
modules/contrib/graphql/src/GraphQL/Resolver/SourceContext.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageUrlTest.php
modules/contrib/graphql/src/GraphQL/Resolver/Tap.php
modules/contrib/graphql/tests/src/Kernel/EntityUuidBufferTest.php
modules/contrib/graphql/examples/graphql_example/src/Wrappers/QueryConnection.php
modules/contrib/graphql/src/GraphQL/Resolver/Value.php
modules/contrib/graphql/src/GraphQL/ResolverBuilder.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Field/EntityReferenceRevisions.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityOwner.php
modules/contrib/graphql/tests/src/Traits/MockingTrait.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Taxonomy/TermFieldAutocomplete.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityPublished.php
modules/contrib/graphql/graphql.api.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityRendered.php
modules/contrib/graphql/tests/src/Kernel/Framework/BufferedFieldTest.php
modules/contrib/graphql/graphql.install
modules/contrib/graphql/src/GraphQL/ResolverRegistry.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Field/EntityReferenceTrait.php
modules/contrib/graphql/src/Plugin/GraphQL/SchemaExtension/SdlSchemaExtensionPluginBase.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/EntityDefinitionTest.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityTranslation.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Images/ImageResourceUrl.php
modules/contrib/graphql/src/Plugin/LanguageNegotiation/OperationLanguageNegotiation.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Menu/MenuLink/MenuLinkAttribute.php
modules/contrib/graphql/src/Plugin/MenuLink/Deriver/ExplorerMenuLinkDeriver.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityTranslations.php
modules/contrib/graphql/src/GraphQL/Utility/Introspection.php
modules/contrib/graphql/src/GraphQL/ResolverRegistryInterface.php
modules/contrib/graphql/src/GraphQL/Utility/JsonHelper.php
modules/contrib/graphql/src/Plugin/MenuLink/Deriver/VoyagerMenuLinkDeriver.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityType.php
modules/contrib/graphql/src/GraphQL/Response/FileUploadResponse.php
modules/contrib/graphql/tests/src/Traits/QueryFileTrait.php
modules/contrib/graphql/tests/src/Kernel/Framework/DisabledResultCacheTest.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityUrl.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/TypedData/PropertyPath.php
modules/contrib/graphql/src/Plugin/PersistedQueryPluginInterface.php
modules/contrib/graphql/src/GraphQL/Validator.php
modules/contrib/graphql/src/GraphQL/Response/Response.php
modules/contrib/graphql/src/Plugin/PersistedQueryPluginManager.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityUuid.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/Fields/Image/ImageDerivative.php
modules/contrib/graphql/src/Plugin/SchemaExtensionPluginInterface.php
modules/contrib/graphql/src/GraphQL/Response/ResponseInterface.php
modules/contrib/graphql/src/Plugin/SchemaExtensionPluginManager.php
modules/contrib/graphql/tests/src/Traits/QueryResultAssertionTrait.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/User/CurrentUser.php
modules/contrib/graphql/src/Plugin/SchemaPluginInterface.php
modules/contrib/graphql/src/Plugin/SchemaPluginManager.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/User/PasswordReset.php
modules/contrib/graphql/src/RouteProvider.php
modules/contrib/graphql/src/Routing/QueryRouteEnhancer.php
modules/contrib/graphql/tests/src/Kernel/Framework/InvalidPayloadTest.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/Fields/Image/ImageUrl.php
modules/contrib/graphql/tests/src/Kernel/Framework/LoggerTest.php
modules/contrib/graphql/src/Entity/ServerInterface.php
modules/contrib/graphql/src/Event/OperationEvent.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/EntityDefinition.php
modules/contrib/graphql/src/EventSubscriber/CurrentLanguageResetTrait.php
modules/contrib/graphql/src/GraphQL/ValidatorInterface.php
modules/contrib/graphql/src/GraphqlServiceProvider.php
modules/contrib/graphql/src/EventSubscriber/OperationSubscriber.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Utility/Seek.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/EntityMultipleTest.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/EntityDefinition/Fields.php
modules/contrib/graphql/src/Language/LanguageNegotiator.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/XML/XMLAttribute.php
modules/contrib/graphql/src/PermissionProvider.php
modules/contrib/graphql/src/EventSubscriber/SubrequestSubscriber.php
modules/contrib/graphql/tests/src/Kernel/Framework/PermissionsTest.php
modules/contrib/graphql/src/SubRequestResponse.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/XML/XMLContent.php
modules/contrib/graphql/tests/src/Traits/SchemaPrinterTrait.php
modules/contrib/graphql/src/Form/PersistedQueriesForm.php
modules/contrib/graphql/src/PersistedQuery/PersistedQueryPluginBase.php
modules/contrib/graphql/tests/modules/graphql_file_validate/graphql_file_validate.module
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/XML/XMLParse.php
modules/contrib/graphql/src/Plugin/DataProducerPluginCachingInterface.php
modules/contrib/graphql/tests/src/Kernel/Framework/PersistedQueriesTest.php
modules/contrib/graphql/src/Plugin/DataProducerPluginInterface.php
modules/contrib/graphql/src/Plugin/DataProducerPluginManager.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/DataProducerPluginBase.php
modules/contrib/graphql/tests/src/Kernel/Framework/ResultCacheTest.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/EntityReferenceTest.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/DataProducerPluginCachingTrait.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/DataProducerProxy.php
modules/contrib/graphql/src/Form/ServerForm.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/EntityTest.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityAccess.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityBundle.php
modules/contrib/graphql/src/Plugin/GraphQL/DataProducer/Entity/EntityChanged.php
modules/contrib/graphql/src/GraphQL/Buffers/BufferBase.php
modules/contrib/graphql/src/GraphQL/Buffers/EntityBuffer.php
modules/contrib/graphql/src/GraphQL/Buffers/EntityRevisionBuffer.php
modules/contrib/graphql/src/GraphQL/Buffers/EntityUuidBuffer.php
modules/contrib/graphql/tests/src/Kernel/Framework/ResultTest.php
modules/contrib/graphql/src/GraphQL/Execution/ExecutionResult.php
modules/contrib/graphql/src/GraphQL/Execution/Executor.php
modules/contrib/graphql/tests/src/Kernel/Framework/TestFrameworkTest.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/Images/ImageResourceUrlTest.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/MenuTest.php
modules/contrib/graphql/tests/src/Kernel/Framework/UploadFileServiceTest.php
modules/contrib/graphql/src/GraphQL/Execution/ExecutorFactory.php
modules/contrib/graphql/src/GraphQL/Execution/FieldContext.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/Routing/RouteEntityTest.php
modules/contrib/graphql/tests/src/Kernel/Framework/UploadMutationTest.php
modules/contrib/graphql/tests/src/Kernel/Framework/UserPermissionsContextTest.php
modules/contrib/graphql/tests/src/Kernel/GraphQLTestBase.php
modules/contrib/graphql/tests/src/Kernel/ResolverBuilderTest.php
modules/contrib/graphql/tests/src/Kernel/ResolverRegistryTest.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/RoutingTest.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/SeekTest.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/StringTest.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/XML/XMLAttributeTest.php
modules/contrib/graphql/tests/src/Kernel/DataProducer/XML/XMLContentTest.php

12 files with changes
=====================

1) modules/contrib/graphql/graphql.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Database\Query\SelectInterface;
+use Drupal\Core\Database\Query\ConditionInterface;
 /**
  * @file
  * Hooks provided by GraphQL module.
  */
-
 /**
  * Alter the query built by the term autocomplete data producer.
  *
@@ @@
  *   as OR condition group which allows to cover a match in term name OR in some
  *   other fields.
  */
-function hook_graphql_term_autocomplete_query_alter(array $args, \Drupal\Core\Database\Query\SelectInterface $query, \Drupal\Core\Database\Query\ConditionInterface $name_condition_group): void {
+function hook_graphql_term_autocomplete_query_alter(array $args, SelectInterface $query, ConditionInterface $name_condition_group): void {
   // Custom field on profile entity type of bundle resume has a reference to
   // synonyms field. Extend a query so it matches the string in term names OR in
   // synonyms.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/graphql/tests/src/Traits/MockingTrait.php:124

    ---------- begin diff ----------
@@ @@
    */
   protected function mockSchema($id, $schema, array $extensions = []): void {
     /** @var \PHPUnit\Framework\MockObject\MockObject $extensionManager */
-    $extensionManager = $this->getMockBuilder(SchemaExtensionPluginManager::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['getExtensions'])
-      ->getMock();
+    $extensionManager = $this->createMock(SchemaExtensionPluginManager::class);

     $extensionManager->expects(static::any())
       ->method('getExtensions')
@@ @@
    * @param string $id
    */
   protected function mockSchemaPluginManager($id): void {
-    $this->schemaPluginManager = $this->getMockBuilder(SchemaPluginManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->schemaPluginManager = $this->createMock(SchemaPluginManager::class);

     $this->schemaPluginManager->expects($this->any())
       ->method('getDefinitions')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector


3) modules/contrib/graphql/tests/src/Kernel/Framework/UploadFileServiceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\graphql\Kernel\Framework;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Lock\LockBackendInterface;
 use Drupal\graphql\GraphQL\Utility\FileUpload;
 use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
@@ @@
  */
 class UploadFileServiceTest extends GraphQLTestBase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/graphql/tests/src/Kernel/Framework/TestFrameworkTest.php:24

    ---------- begin diff ----------
@@ @@

     $this->setUpSchema($schema);

-    $cacheable = $this->getMockBuilder(CacheableDependencyInterface::class)
-      ->setMethods(['getCacheTags', 'getCacheMaxAge', 'getCacheContexts'])
-      ->getMock();
+    $cacheable = $this->createMock(CacheableDependencyInterface::class);

     $cacheable->expects($this->any())
       ->method('getCacheTags')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/graphql/tests/src/Kernel/Framework/ResultCacheTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\graphql\Kernel\Framework;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Cache\Context\CacheContextsManager;
 use Drupal\Core\Cache\Context\ContextCacheKeys;
 use Drupal\Core\Render\RenderContext;
@@ @@
  */
 class ResultCacheTest extends GraphQLTestBase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ @@
    * Check basic result caching.
    */
   public function testCacheableResult(): void {
-    $dummy = $this->getMockBuilder(Server::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['id'])
-      ->getMock();
+    $dummy = $this->createMock(Server::class);

     $dummy->expects($this->once())
       ->method('id')
@@ @@
    * Verify that uncacheable results are not cached.
    */
   public function testUncacheableResult(): void {
-    $cacheable = $this->getMockBuilder(CacheableDependencyInterface::class)
-      ->setMethods(['getCacheTags', 'getCacheMaxAge', 'getCacheContexts'])
-      ->getMock();
+    $cacheable = $this->createMock(CacheableDependencyInterface::class);

     $cacheable->expects($this->any())
       ->method('getCacheTags')
@@ @@
       ->method('getCacheContexts')
       ->willReturn([]);

-    $dummy = $this->getMockBuilder(Server::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['id'])
-      ->getMock();
+    $dummy = $this->createMock(Server::class);

     $dummy->expects($this->exactly(2))
       ->method('id')
@@ @@
    * Verify that fields with uncacheable annotations are not cached.
    */
   public function testUncacheableResultAnnotation(): void {
-    $cacheable = $this->getMockBuilder(CacheableDependencyInterface::class)
-      ->setMethods(['getCacheTags', 'getCacheMaxAge', 'getCacheContexts'])
-      ->getMock();
+    $cacheable = $this->createMock(CacheableDependencyInterface::class);

     $cacheable->expects($this->any())
       ->method('getCacheTags')
@@ @@
       ->method('getCacheContexts')
       ->willReturn([]);

-    $dummy = $this->getMockBuilder(Server::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['id'])
-      ->getMock();
+    $dummy = $this->createMock(Server::class);

     $dummy->expects($this->exactly(2))
       ->method('id')
@@ @@
    * Test if caching properly handles variables.
    */
   public function testVariables(): void {
-    $dummy = $this->getMockBuilder(Server::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['id'])
-      ->getMock();
+    $dummy = $this->createMock(Server::class);

     $dummy->expects($this->exactly(2))
       ->method('id')
@@ @@
    * Test if changing test context's trigger re-evaluations.
    */
   public function testContext(): void {
-    $cacheable = $this->getMockBuilder(CacheableDependencyInterface::class)
-      ->setMethods(['getCacheTags', 'getCacheMaxAge', 'getCacheContexts'])
-      ->getMock();
+    $cacheable = $this->createMock(CacheableDependencyInterface::class);

     $cacheable->expects($this->any())
       ->method('getCacheTags')
@@ @@
       ->method('getCacheContexts')
       ->willReturn(['context']);

-    $dummy = $this->getMockBuilder(Server::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['id'])
-      ->getMock();
+    $dummy = $this->createMock(Server::class);

     $dummy->expects($this->exactly(2))
       ->method('id')
@@ @@
    * Test if results cache properly acts on cache tag clears.
    */
   public function testTags(): void {
-    $cacheable = $this->getMockBuilder(CacheableDependencyInterface::class)
-      ->setMethods(['getCacheTags', 'getCacheMaxAge', 'getCacheContexts'])
-      ->getMock();
+    $cacheable = $this->createMock(CacheableDependencyInterface::class);

     $cacheable->expects($this->any())
       ->method('getCacheTags')
@@ @@
       ->method('getCacheContexts')
       ->willReturn([]);

-    $dummy = $this->getMockBuilder(Server::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['id'])
-      ->getMock();
+    $dummy = $this->createMock(Server::class);

     $dummy->expects($this->exactly(2))
       ->method('id')
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/graphql/tests/src/Kernel/Framework/DisabledResultCacheTest.php:46

    ---------- begin diff ----------
@@ @@
       'caching' => FALSE,
     ]);

-    $object = $this->getMockBuilder(Server::class)
-      ->disableOriginalConstructor()
-      ->setMethods(['id'])
-      ->getMock();
+    $object = $this->createMock(Server::class);

     $object->expects($this->exactly(2))
       ->method('id')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/graphql/tests/src/Kernel/Framework/BufferedFieldTest.php:41

    ---------- begin diff ----------
@@ @@
    * Test if the schema is created properly.
    */
   public function testBatchedFields(): void {
-    $buffer = $this->getMockBuilder(BufferBase::class)
-      ->setMethods(['resolveBufferArray'])
-      ->getMock();
+    $buffer = $this->createMock(BufferBase::class);

     $users = [
       'a' => [
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/graphql/tests/src/Kernel/DataProducer/EntityTest.php:29

    ---------- begin diff ----------
@@ @@
   public function setUp(): void {
     parent::setUp();

-    $this->entity = $this->getMockBuilder(NodeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity = $this->createMock(NodeInterface::class);

-    $this->entity_interface = $this->getMockBuilder(EntityInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity_interface = $this->createMock(EntityInterface::class);

-    $this->user = $this->getMockBuilder(UserInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->user = $this->createMock(UserInterface::class);

     $content_type = NodeType::create([
       'type' => 'lorem',
@@ @@
    * @covers \Drupal\graphql\Plugin\GraphQL\DataProducer\Entity\EntityDescription::resolve
    */
   public function testResolveDescription(): void {
-    $entity = $this->getMockBuilder(EntityTestBundle::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity = $this->createMock(EntityTestBundle::class);

     $entity->expects($this->once())
       ->method('getDescription')
@@ @@
    * @covers \Drupal\graphql\Plugin\GraphQL\DataProducer\Entity\EntityLanguage::resolve
    */
   public function testResolveLanguage(): void {
-    $language = $this->getMockBuilder(LanguageInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $language = $this->createMock(LanguageInterface::class);

     $this->entity->expects($this->once())
       ->method('language')
@@ @@
    * @covers \Drupal\graphql\Plugin\GraphQL\DataProducer\Entity\EntityUrl::resolve
    */
   public function testResolveUrl(): void {
-    $url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock(Url::class);

     $this->entity->expects($this->once())
       ->method('toUrl')
@@ @@
    * @covers \Drupal\graphql\Plugin\GraphQL\DataProducer\Entity\EntityUrl::resolve
    */
   public function testResolveAbsoluteUrl(): void {
-    $url = $this->getMockBuilder(Url::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url = $this->createMock(Url::class);

     $this->entity->expects($this->once())
       ->method('toUrl')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/graphql/tests/src/Kernel/DataProducer/EntityReferenceTest.php:24

    ---------- begin diff ----------
@@ @@
   public function setUp(): void {
     parent::setUp();

-    $this->entity = $this->getMockBuilder(NodeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity = $this->createMock(NodeInterface::class);

-    $this->entity_interface = $this->getMockBuilder(EntityInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity_interface = $this->createMock(EntityInterface::class);

-    $this->user = $this->getMockBuilder(UserInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->user = $this->createMock(UserInterface::class);

     $content_type1 = NodeType::create([
       'type' => 'test1',
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/graphql/tests/src/Kernel/DataProducer/EntityMultipleTest.php:41

    ---------- begin diff ----------
@@ @@
   public function setUp(): void {
     parent::setUp();

-    $this->entity = $this->getMockBuilder(NodeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity = $this->createMock(NodeInterface::class);

-    $this->entity_interface = $this->getMockBuilder(EntityInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entity_interface = $this->createMock(EntityInterface::class);

-    $this->user = $this->getMockBuilder(UserInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->user = $this->createMock(UserInterface::class);

     $content_type = NodeType::create([
       'type' => 'lorem',
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/graphql/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageUrlTest.php:22

    ---------- begin diff ----------
@@ @@

     $this->fileUri = \Drupal::service('file_url_generator')->generateAbsoluteString('public://test.jpg');

-    $this->file = $this->getMockBuilder(FileInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->file = $this->createMock(FileInterface::class);

     $this->file->method('getFileUri')->willReturn($this->fileUri);
     $this->file->method('access')->willReturn((new AccessResultAllowed())->addCacheTags(['test_tag']));

-    $this->file_not_accessible = $this->getMockBuilder(FileInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->file_not_accessible = $this->createMock(FileInterface::class);

     $this->file_not_accessible->method('access')->willReturn((new AccessResultForbidden())->addCacheTags(['test_tag_forbidden']));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/graphql/tests/src/Kernel/DataProducer/Entity/Fields/Image/ImageDerivativeTest.php:27

    ---------- begin diff ----------
@@ @@

     $this->file_uri = 'public://test.jpg';

-    $this->file = $this->getMockBuilder(FileInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->file = $this->createMock(FileInterface::class);

     $this->file->method('getFileUri')->willReturn($this->file_uri);
     $this->file->method('access')->willReturn((new AccessResultAllowed())->addCacheTags(['test_tag']));
@@ @@
     $this->style->addImageEffect($effect);
     $this->style->save();

-    $this->file_not_accessible = $this->getMockBuilder(FileInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->file_not_accessible = $this->createMock(FileInterface::class);

     $this->file_not_accessible->method('access')->willReturn((new AccessResultForbidden())->addCacheTags(['test_tag_forbidden']));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 12 files have been changed by Rector                                      

