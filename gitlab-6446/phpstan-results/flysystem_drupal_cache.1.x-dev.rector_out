modules/contrib/flysystem_drupal_cache/src/DrupalCacheAdapter.php
modules/contrib/flysystem_drupal_cache/src/Flysystem/DrupalCachePlugin.php
modules/contrib/flysystem_drupal_cache/src/FlysystemDrupalCacheServiceProvider.php
modules/contrib/flysystem_drupal_cache/src/StackMiddleware/Flysystem.php

3 files with changes
====================

1) modules/contrib/flysystem_drupal_cache/src/StackMiddleware/Flysystem.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\flysystem_drupal_cache\StackMiddleware;

+use Symfony\Component\Mime\MimeTypesInterface;
 use DateTime;
 use Drupal\Component\Datetime\DateTimePlus;
 use Drupal\Component\Utility\UrlHelper;
@@ @@
 use Drupal\Core\File\FileSystem;
 use Drupal\Core\PageCache\RequestPolicyInterface;
 use Drupal\flysystem\FlysystemFactory;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\HttpFoundation\ResponseHeaderBag;
@@ @@
     /**
      * Mime Type Guesser.
      *
-     * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+     * @var \Symfony\Component\Mime\MimeTypesInterface
      */
     protected $mimeTypeGuesser;

@@ @@
      *   The cache bin.
      * @param \Drupal\Core\PageCache\RequestPolicyInterface $request_policy
      *   A policy rule determining the cacheability of a request.
-     * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mimeTypeGuesser
+     * @param \Symfony\Component\Mime\MimeTypesInterface $mimeTypeGuesser
      *   Mime Type Guesser.
      * @param \Drupal\flysystem\FlysystemFactory $flysystemFactory
      *   Flysystem Factory.
@@ @@
      * @param \Drupal\Core\File\FileSystem $filesystem
      *   Filesystem.
      */
-    public function __construct(HttpKernelInterface $http_kernel, CacheFactoryInterface $cacheFactory, RequestPolicyInterface $request_policy, MimeTypeGuesserInterface $mimeTypeGuesser, FlysystemFactory $flysystemFactory, FileSystem $filesystem) {
+    public function __construct(HttpKernelInterface $http_kernel, CacheFactoryInterface $cacheFactory, RequestPolicyInterface $request_policy, MimeTypesInterface $mimeTypeGuesser, FlysystemFactory $flysystemFactory, FileSystem $filesystem) {
         $this->httpKernel = $http_kernel;
         $this->cacheFactory = $cacheFactory;
         $this->requestPolicy = $request_policy;
    ----------- end diff -----------

Applied rules:
 * PassRector
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/flysystem_drupal_cache/src/Flysystem/DrupalCachePlugin.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\flysystem_drupal_cache\Flysystem;

+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Cache\CacheFactoryInterface;
 use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
@@ @@
 use Drupal\flysystem\Plugin\FlysystemUrlTrait;
 use Drupal\flysystem_drupal_cache\DrupalCacheAdapter;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;

 /**
  * Drupal plugin for the "Drupal Cache" Flysystem adapter.
@@ @@
   /**
    * Mime Type Guesser.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var \Symfony\Component\Mime\MimeTypesInterface
    */
   protected $mimeTypeGuesser;

@@ @@
    * @param $tags
    *   List of cache tags.
    */
-  public function __construct(CacheFactoryInterface $cacheFactory, CacheTagsInvalidatorInterface $cacheTagsInvalidator, MimeTypeGuesserInterface $mimeTypeGuesser, $bin, $tags) {
+  public function __construct(CacheFactoryInterface $cacheFactory, CacheTagsInvalidatorInterface $cacheTagsInvalidator, MimeTypesInterface $mimeTypeGuesser, $bin, $tags) {
     $this->cacheBackend = $cacheFactory->get(self::getCacheBin($bin));
     $this->cacheTagsInvalidator = $cacheTagsInvalidator;
     $this->mimeTypeGuesser = $mimeTypeGuesser;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


3) modules/contrib/flysystem_drupal_cache/src/DrupalCacheAdapter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\flysystem_drupal_cache;

+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
@@ @@
 use League\Flysystem\AdapterInterface;
 use League\Flysystem\Config;
 use League\Flysystem\Util;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;

 /**
  * Class DrupalCacheAdapter
@@ @@
   /**
    * Mime type guesser.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var \Symfony\Component\Mime\MimeTypesInterface
    */
   protected $mimeTypeGuesser;

@@ @@
    *   Cache backend.
    * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cacheTagsInvalidator
    *   Cache tags invalidator.
-   * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mimeTypeGuesser
+   * @param \Symfony\Component\Mime\MimeTypesInterface $mimeTypeGuesser
    *   Mime type guesser.
    * @param array $tags
    *   Default cache tags.
    */
-  public function __construct(CacheBackendInterface $cache, CacheTagsInvalidatorInterface $cacheTagsInvalidator, MimeTypeGuesserInterface $mimeTypeGuesser, array $tags) {
+  public function __construct(CacheBackendInterface $cache, CacheTagsInvalidatorInterface $cacheTagsInvalidator, MimeTypesInterface $mimeTypeGuesser, array $tags) {
     $this->cacheBackend = $cache;
     $this->cacheTagsInvalidator = $cacheTagsInvalidator;
     $this->mimeTypeGuesser = $mimeTypeGuesser;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

