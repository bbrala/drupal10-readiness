diff --git a/tests/src/Functional/PanelizerUserFunctionalTest.php b/tests/src/Functional/PanelizerUserFunctionalTest.php
index 75c4276..a905095 100644
--- a/tests/src/Functional/PanelizerUserFunctionalTest.php
+++ b/tests/src/Functional/PanelizerUserFunctionalTest.php
@@ -41,7 +41,7 @@ class PanelizerUserFunctionalTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_tasks_block');
 
diff --git a/tests/src/Functional/Update/PanelizerLayoutIDUpdateTest.php b/tests/src/Functional/Update/PanelizerLayoutIDUpdateTest.php
index 06e5932..8b9f56c 100644
--- a/tests/src/Functional/Update/PanelizerLayoutIDUpdateTest.php
+++ b/tests/src/Functional/Update/PanelizerLayoutIDUpdateTest.php
@@ -41,13 +41,13 @@ class PanelizerLayoutIDUpdateTest extends UpdatePathTestBase {
     // Defaults are not editable in Panelizer 5.x.
     $this->drupalGet('admin/structure/types/manage/article/display');
     $this->clickLink('Edit', 1);
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     $this->drupalGet('node/1');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     $this->drupalGet('node/2');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
diff --git a/tests/src/FunctionalJavascript/PanelizerIntegrationTest.php b/tests/src/FunctionalJavascript/PanelizerIntegrationTest.php
index 3a98b2e..703f7d0 100644
--- a/tests/src/FunctionalJavascript/PanelizerIntegrationTest.php
+++ b/tests/src/FunctionalJavascript/PanelizerIntegrationTest.php
@@ -33,7 +33,7 @@ class PanelizerIntegrationTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a user with appropriate permissions to use Panels IPE.
diff --git a/tests/src/Kernel/LayoutBuilderMigrationTest.php b/tests/src/Kernel/LayoutBuilderMigrationTest.php
index 7f8fb67..0942e01 100644
--- a/tests/src/Kernel/LayoutBuilderMigrationTest.php
+++ b/tests/src/Kernel/LayoutBuilderMigrationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\panelizer\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\Core\Entity\Query\Sql\QueryFactory;
 use Drupal\KernelTests\KernelTestBase;
@@ -18,6 +19,7 @@ use Drupal\Tests\node\Traits\ContentTypeCreationTrait;
  */
 class LayoutBuilderMigrationTest extends KernelTestBase {
 
+  use ProphecyTrait;
   use ContentTypeCreationTrait;
 
   /**
@@ -42,7 +44,7 @@ class LayoutBuilderMigrationTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('system', ['key_value_expire']);
     $this->installConfig('node');
diff --git a/tests/src/Unit/PanelizerDefaultPanelsStorageTest.php b/tests/src/Unit/PanelizerDefaultPanelsStorageTest.php
index f0424de..468ff46 100644
--- a/tests/src/Unit/PanelizerDefaultPanelsStorageTest.php
+++ b/tests/src/Unit/PanelizerDefaultPanelsStorageTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\panelizer\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -23,6 +24,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class PanelizerDefaultPanelsStorageTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * @var \Drupal\Core\Entity\EntityStorageInterface|\Prophecy\Prophecy\ProphecyInterface
    */
@@ -46,7 +48,7 @@ class PanelizerDefaultPanelsStorageTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->storage = $this->prophesize(EntityStorageInterface::class);
diff --git a/tests/src/Unit/PanelizerEntityViewBuilderTest.php b/tests/src/Unit/PanelizerEntityViewBuilderTest.php
index b934da9..e0f8392 100644
--- a/tests/src/Unit/PanelizerEntityViewBuilderTest.php
+++ b/tests/src/Unit/PanelizerEntityViewBuilderTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\panelizer\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -29,6 +30,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class PanelizerEntityViewBuilderTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Information about the entity type.
    *
@@ -74,7 +76,7 @@ class PanelizerEntityViewBuilderTest extends UnitTestCase {
   /**
    * The Panelizer entity view builder.
    *
-   * @var \Drupal\panelizer\PanelizerEntityViewBuilder|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\panelizer\PanelizerEntityViewBuilder|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $entityViewBuilder;
 
@@ -95,7 +97,7 @@ class PanelizerEntityViewBuilderTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->entityType = $this->prophesize(EntityTypeInterface::class);
diff --git a/tests/src/Unit/PanelizerFieldPanelsStorageTest.php b/tests/src/Unit/PanelizerFieldPanelsStorageTest.php
index 427998c..cba0207 100644
--- a/tests/src/Unit/PanelizerFieldPanelsStorageTest.php
+++ b/tests/src/Unit/PanelizerFieldPanelsStorageTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\panelizer\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -23,6 +24,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class PanelizerFieldPanelsStorageTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * @var \Drupal\Core\Entity\EntityStorageInterface|\Prophecy\Prophecy\ProphecyInterface
    */
@@ -46,7 +48,7 @@ class PanelizerFieldPanelsStorageTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->storage = $this->prophesize(EntityStorageInterface::class);
