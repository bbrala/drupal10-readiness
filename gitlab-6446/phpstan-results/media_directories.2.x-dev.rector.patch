diff --git a/modules/media_directories_editor/src/Plugin/Field/FieldFormatter/MediaDirectoriesImageDimensionsFormatter.php b/modules/media_directories_editor/src/Plugin/Field/FieldFormatter/MediaDirectoriesImageDimensionsFormatter.php
index 80647ac..26cbb06 100644
--- a/modules/media_directories_editor/src/Plugin/Field/FieldFormatter/MediaDirectoriesImageDimensionsFormatter.php
+++ b/modules/media_directories_editor/src/Plugin/Field/FieldFormatter/MediaDirectoriesImageDimensionsFormatter.php
@@ -213,7 +213,7 @@ class MediaDirectoriesImageDimensionsFormatter extends MediaThumbnailFormatter {
           'height' => $this->getSetting('dimensions')['image_height'],
           'class' => [],
         ],
-        '#uri' => file_create_url($file->getFileUri()),
+        '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()),
       ];
 
       // Add cacheability of each item in the field.
diff --git a/modules/media_directories_ui/media_directories_ui.module b/modules/media_directories_ui/media_directories_ui.module
index 2f7decc..97c8b8e 100644
--- a/modules/media_directories_ui/media_directories_ui.module
+++ b/modules/media_directories_ui/media_directories_ui.module
@@ -50,7 +50,7 @@ function media_directories_ui_css_alter(&$css, AttachedAssetsInterface $assets)
   $route = 'entity_browser.media_directories_overview';
 
   if (Drupal::routeMatch()->getRouteName() === $route) {
-    unset($css[drupal_get_path('module', 'entity_browser') . '/css/entity_browser.entity_browser.css']);
+    unset($css[\Drupal::service('extension.list.module')->getPath('entity_browser') . '/css/entity_browser.entity_browser.css']);
   }
 }
 
diff --git a/modules/media_directories_ui/src/Form/MediaCombinedUploadForm.php b/modules/media_directories_ui/src/Form/MediaCombinedUploadForm.php
index 2dbc194..88d306a 100644
--- a/modules/media_directories_ui/src/Form/MediaCombinedUploadForm.php
+++ b/modules/media_directories_ui/src/Form/MediaCombinedUploadForm.php
@@ -138,7 +138,7 @@ class MediaCombinedUploadForm extends FileUploadForm {
       $field_config = $this->entityTypeManager->getStorage('field_config')->load('media.' . $media_type->id() . '.' . $source_field_name);
       $destination = $this->getUploadLocation($field_config->getSettings());
       if ($this->fileSystem->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY)) {
-        $source_field_value = file_move($source_field_value, $destination);
+        $source_field_value = \Drupal::service('file.repository')->move($source_field_value, $destination);
       }
 
       $media[] = $this->createMediaFromValue($media_type, $media_storage, $source_field_name, $source_field_value, $form_state);
