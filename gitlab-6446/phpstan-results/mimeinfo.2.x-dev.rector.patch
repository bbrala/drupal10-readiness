diff --git a/mimeinfo.info.yml b/mimeinfo.info.yml
index 1cbf85e..958577a 100755
--- a/mimeinfo.info.yml
+++ b/mimeinfo.info.yml
@@ -4,4 +4,4 @@ package: Media
 type: module
 php: 7.3
 
-core_version_requirement: ^8.8 || ^9.0
+core_version_requirement: ^8.8 || ^9.0 || ^10
diff --git a/src/File/MimeType/MimeTypeGuesser.php b/src/File/MimeType/MimeTypeGuesser.php
index da185a7..42b4ee4 100755
--- a/src/File/MimeType/MimeTypeGuesser.php
+++ b/src/File/MimeType/MimeTypeGuesser.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\mimeinfo\File\MimeType;
 
+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Core\File\MimeType\MimeTypeGuesser as BaseMimeTypeGuesser;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 
 /**
  * The MIME type guesser.
@@ -13,7 +13,7 @@ class MimeTypeGuesser extends BaseMimeTypeGuesser {
   /**
    * {@inheritdoc}
    */
-  public function addGuesser(MimeTypeGuesserInterface $guesser, $priority = 0) {
+  public function addGuesser(MimeTypesInterface $guesser, $priority = 0) {
     // Symfony's guessers has non-interfaced "isSupported" method to check that
     // environment supports guessing mechanism. Allow all guessers define same
     // the method for same purposes. Otherwise consider that guesser is allowed
diff --git a/src/MimeInfoServiceProvider.php b/src/MimeInfoServiceProvider.php
index 894665d..529fb27 100755
--- a/src/MimeInfoServiceProvider.php
+++ b/src/MimeInfoServiceProvider.php
@@ -2,13 +2,13 @@
 
 namespace Drupal\mimeinfo;
 
+use Symfony\Component\Mime\FileinfoMimeTypeGuesser;
+use Symfony\Component\Mime\FileBinaryMimeTypeGuesser;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\DependencyInjection\ServiceProviderBase;
 use Drupal\Core\File\MimeType\MimeTypeGuesser as MimeTypeGuesserCore;
 use Drupal\mimeinfo\File\MimeType\MimeTypeGuesser;
 use Symfony\Component\DependencyInjection\Definition;
-use Symfony\Component\HttpFoundation\File\MimeType\FileinfoMimeTypeGuesser;
-use Symfony\Component\HttpFoundation\File\MimeType\FileBinaryMimeTypeGuesser;
 
 /**
  * Class MimeInfoServiceProvider.
diff --git a/src/ProxyClass/File/MimeType/MimeTypeGuesser.php b/src/ProxyClass/File/MimeType/MimeTypeGuesser.php
index b1435dc..c0cfd58 100644
--- a/src/ProxyClass/File/MimeType/MimeTypeGuesser.php
+++ b/src/ProxyClass/File/MimeType/MimeTypeGuesser.php
@@ -7,15 +7,18 @@
 
 namespace Drupal\mimeinfo\ProxyClass\File\MimeType {
 
+    use Symfony\Component\Mime\MimeTypesInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
     /**
      * Provides a proxy class for \Drupal\mimeinfo\File\MimeType\MimeTypeGuesser.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class MimeTypeGuesser implements \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+    class MimeTypeGuesser implements MimeTypesInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -46,7 +49,7 @@ namespace Drupal\mimeinfo\ProxyClass\File\MimeType {
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -70,7 +73,7 @@ namespace Drupal\mimeinfo\ProxyClass\File\MimeType {
         /**
          * {@inheritdoc}
          */
-        public function addGuesser(\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $guesser, $priority = 0)
+        public function addGuesser(MimeTypesInterface $guesser, $priority = 0)
         {
             return $this->lazyLoadItself()->addGuesser($guesser, $priority);
         }
@@ -86,7 +89,7 @@ namespace Drupal\mimeinfo\ProxyClass\File\MimeType {
         /**
          * {@inheritdoc}
          */
-        public static function registerWithSymfonyGuesser(\Symfony\Component\DependencyInjection\ContainerInterface $container)
+        public static function registerWithSymfonyGuesser(ContainerInterface $container)
         {
             \Drupal\Core\File\MimeType\MimeTypeGuesser::registerWithSymfonyGuesser($container);
         }
diff --git a/tests/src/Unit/File/MimeType/UnsupportedMimeTypeGuesser.php b/tests/src/Unit/File/MimeType/UnsupportedMimeTypeGuesser.php
index ac3a600..3b3cb37 100644
--- a/tests/src/Unit/File/MimeType/UnsupportedMimeTypeGuesser.php
+++ b/tests/src/Unit/File/MimeType/UnsupportedMimeTypeGuesser.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\Tests\mimeinfo\Unit\File\MimeType;
 
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
+use Symfony\Component\Mime\MimeTypesInterface;
 
 /**
  * Class UnsupportedMimeTypeGuesser.
@@ -10,7 +10,7 @@ use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
  * Dummy guesser implementation to test that unsupported guesser will not
  * be used for guessing the MIME type of file.
  */
-class UnsupportedMimeTypeGuesser implements MimeTypeGuesserInterface {
+class UnsupportedMimeTypeGuesser implements MimeTypesInterface {
 
   /**
    * Check that environment supports guessing mechanism.
