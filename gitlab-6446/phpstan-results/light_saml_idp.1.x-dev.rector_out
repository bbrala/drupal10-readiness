modules/contrib/light_saml_idp/src/LightSaml/Model/Metadata/KeyDescriptor.php
modules/contrib/light_saml_idp/light_saml_idp.module
modules/contrib/light_saml_idp/src/Controller/LightSamlIdpController.php
modules/contrib/light_saml_idp/src/SamlGenerator.php
modules/contrib/light_saml_idp/src/SamlGeneratorInterface.php
modules/contrib/light_saml_idp/src/SamlParser.php
modules/contrib/light_saml_idp/src/ServiceProviderListBuilder.php
modules/contrib/light_saml_idp/src/Entity/ServiceProvider.php
modules/contrib/light_saml_idp/src/Entity/ServiceProviderInterface.php
modules/contrib/light_saml_idp/src/Entity/ServiceProviderRepository.php
modules/contrib/light_saml_idp/src/EventSubscriber/StoreAnonymousSAMLRequestSubscriber.php
modules/contrib/light_saml_idp/src/Form/LightSAMLIdpConfigForm.php
modules/contrib/light_saml_idp/src/Form/ServiceProviderDeleteForm.php
modules/contrib/light_saml_idp/src/Form/ServiceProviderForm.php
modules/contrib/light_saml_idp/src/IdentityProvider.php

2 files with changes
====================

1) modules/contrib/light_saml_idp/src/EventSubscriber/StoreAnonymousSAMLRequestSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\light_saml_idp\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Core\Routing\RouteMatch;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Symfony\Component\HttpKernel\KernelEvents;

@@ @@
   /**
    * Store the SAML request data in the user's session.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    */
-  public function storeSAMLRequest(GetResponseForExceptionEvent $event) {
-    if ($event->getException() instanceof AccessDeniedHttpException && $this->account->isAnonymous()) {
+  public function storeSAMLRequest(ExceptionEvent $event) {
+    if ($event->getThrowable() instanceof AccessDeniedHttpException && $this->account->isAnonymous()) {
       $request = $event->getRequest();
       $routeName = RouteMatch::createFromRequest($request)->getRouteName();
       $samlRequest = $request->get('SAMLRequest');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameMethodRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/light_saml_idp/src/Controller/LightSamlIdpController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\light_saml_idp\Controller;

+use LightSaml\Binding\BindingFactory;
+use LightSaml\Context\Profile\MessageContext;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Session\AccountProxy;
@@ @@
     }
     $assertion = $this->samlGenerator->buildAssertion($serviceProvider, $this->currentUser, $requestId);
     $this->samlGenerator->addAssertionToResponse($serviceProvider, $samlMessage, $assertion);
-    $bindingFactory = new \LightSaml\Binding\BindingFactory();
+    $bindingFactory = new BindingFactory();

-    $messageContext = new \LightSaml\Context\Profile\MessageContext();
+    $messageContext = new MessageContext();
     $messageContext->setMessage($samlMessage)->asResponse();

     // We only support SAML 2.0 HTTP POST binding for now.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

