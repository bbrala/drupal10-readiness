diff --git a/field_formatter.info.yml b/field_formatter.info.yml
index 17fbf6b..18b0a07 100644
--- a/field_formatter.info.yml
+++ b/field_formatter.info.yml
@@ -1,4 +1,4 @@
 name: 'Field formatter'
 description: 'Collection of general formatters that display a single field from the referenced entity.'
 type: module
-core_version_requirement: ^8.9 || ^9
+core_version_requirement: ^9.1 || ^10
diff --git a/src/Tests/FieldFormatterFromViewDisplayUITest.php b/src/Tests/FieldFormatterFromViewDisplayUITest.php
index f63538a..3c33989 100644
--- a/src/Tests/FieldFormatterFromViewDisplayUITest.php
+++ b/src/Tests/FieldFormatterFromViewDisplayUITest.php
@@ -36,7 +36,7 @@ class FieldFormatterFromViewDisplayUITest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
@@ -58,8 +58,8 @@ class FieldFormatterFromViewDisplayUITest extends BrowserTestBase {
       'name[0][value]' => $term_name,
       'field_test_field[0][value]' => $field,
     ];
-    $this->drupalPostForm(NULL, $edit_term, $this->t('Save'));
-    $this->assertText("Created new term $term_name.", 'Created term.');
+    $this->submitForm($edit_term, $this->t('Save'));
+    $this->assertSession()->pageTextContains("Created new term $term_name.");
 
     // Add content.
     $this->drupalGet('node/add/test_content_type');
@@ -68,9 +68,9 @@ class FieldFormatterFromViewDisplayUITest extends BrowserTestBase {
       'title[0][value]' => $content_name,
       'field_field_test_ref[0][target_id]' => $term_name,
     ];
-    $this->drupalPostForm(NULL, $edit_content, $this->t('Save'));
-    $this->assertRaw('<div class="field__label">test_field</div>', 'Field is correctly displayed on node page.');
-    $this->assertRaw('<div class="field__item">' . $field . '</div>', "Field's content was found.");
+    $this->submitForm($edit_content, $this->t('Save'));
+    $this->assertSession()->responseContains('<div class="field__label">test_field</div>');
+    $this->assertSession()->responseContains('<div class="field__item">' . $field . '</div>');
   }
 
   /**
@@ -81,10 +81,10 @@ class FieldFormatterFromViewDisplayUITest extends BrowserTestBase {
     $this->drupalLogin($account);
 
     $this->drupalGet('admin/structure/types/manage/test_content_type/display');
-    $this->drupalPostForm(NULL, [], 'field_field_test_ref_settings_edit');
-    $this->assertFieldByName('fields[field_field_test_ref][settings_edit_form][settings][view_mode]', NULL, 'Field to select the view mode is available.');
-    $this->assertRaw('<option value="default">Default</option>', 'Default view mode can be selected.');
-    $this->assertFieldByName('fields[field_field_test_ref][settings_edit_form][settings][field_name]', NULL, 'Field to select the field name is available.');
+    $this->submitForm([], 'field_field_test_ref_settings_edit');
+    $this->assertSession()->fieldExists('fields[field_field_test_ref][settings_edit_form][settings][view_mode]');
+    $this->assertSession()->responseContains('<option value="default">Default</option>');
+    $this->assertSession()->fieldExists('fields[field_field_test_ref][settings_edit_form][settings][field_name]');
   }
 
 }
diff --git a/src/Tests/FieldFormatterWithInlineSettingsUITest.php b/src/Tests/FieldFormatterWithInlineSettingsUITest.php
index 1463b10..1c1d9aa 100644
--- a/src/Tests/FieldFormatterWithInlineSettingsUITest.php
+++ b/src/Tests/FieldFormatterWithInlineSettingsUITest.php
@@ -36,7 +36,7 @@ class FieldFormatterWithInlineSettingsUITest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
@@ -60,8 +60,8 @@ class FieldFormatterWithInlineSettingsUITest extends BrowserTestBase {
       'name[0][value]' => $term_name,
       'field_test_field[0][value]' => $field,
     ];
-    $this->drupalPostForm(NULL, $edit_term, $this->t('Save'));
-    $this->assertText("Created new term $term_name.", 'Created term.');
+    $this->submitForm($edit_term, $this->t('Save'));
+    $this->assertSession()->pageTextContains("Created new term $term_name.");
 
     // Add content.
     $this->drupalGet('node/add/test_content_type');
@@ -70,21 +70,21 @@ class FieldFormatterWithInlineSettingsUITest extends BrowserTestBase {
       'title[0][value]' => $content_name,
       'field_field_test_ref_inline[0][target_id]' => $term_name,
     ];
-    $this->drupalPostForm(NULL, $edit_content, $this->t('Save'));
-    $this->assertRaw('<div class="field__label">test_field</div>', 'Field is correctly displayed on node page.');
-    $this->assertRaw('<div class="field__item">' . $field . '</div>', "Field's content was found.");
+    $this->submitForm($edit_content, $this->t('Save'));
+    $this->assertSession()->responseContains('<div class="field__label">test_field</div>');
+    $this->assertSession()->responseContains('<div class="field__item">' . $field . '</div>');
 
     // Check that on display management all fields of the destination entity
     // are available (all bundles).
     $this->drupalGet('admin/structure/types/manage/test_content_type/display');
     // Open the formatter settings.
-    $this->drupalPostForm(NULL, [], 'field_field_test_ref_inline_settings_edit');
-    $this->assertFieldByName('fields[field_field_test_ref_inline][settings_edit_form][settings][field_name]', NULL, 'Destination fields dropdown element found.');
+    $this->submitForm([], 'field_field_test_ref_inline_settings_edit');
+    $this->assertSession()->fieldExists('fields[field_field_test_ref_inline][settings_edit_form][settings][field_name]');
     $field_select_element = $this->xpath('//*[@name="fields[field_field_test_ref_inline][settings_edit_form][settings][field_name]"]');
     $field_select_id = $field_select_element[0]->getAttribute('id');
-    $this->assertOption($field_select_id, 'field_test_field', 'First target field is an available option.');
-    $this->assertOption($field_select_id, 'field_test_field2', 'Second target field is an available option.');
-    $this->assertFieldByName('fields[field_field_test_ref_inline][settings_edit_form][settings][label]', 'above', 'The "Label" dropdown element exists and is set to "Above".');
+    $this->assertSession()->optionExists($field_select_id, 'field_test_field', 'First target field is an available option.');
+    $this->assertSession()->optionExists($field_select_id, 'field_test_field2', 'Second target field is an available option.');
+    $this->assertSession()->fieldValueEquals('fields[field_field_test_ref_inline][settings_edit_form][settings][label]', 'above');
 
   }
 
diff --git a/tests/src/Kernel/Plugin/Field/FieldFormatter/FieldLinkTest.php b/tests/src/Kernel/Plugin/Field/FieldFormatter/FieldLinkTest.php
index 8505893..5190c5a 100644
--- a/tests/src/Kernel/Plugin/Field/FieldFormatter/FieldLinkTest.php
+++ b/tests/src/Kernel/Plugin/Field/FieldFormatter/FieldLinkTest.php
@@ -19,7 +19,7 @@ class FieldLinkTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('entity_test');
