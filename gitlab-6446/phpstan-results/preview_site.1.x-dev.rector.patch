diff --git a/modules/preview_site_s3/tests/src/Kernel/S3DeployPluginTest.php b/modules/preview_site_s3/tests/src/Kernel/S3DeployPluginTest.php
index a6e9bc0..5da86a5 100644
--- a/modules/preview_site_s3/tests/src/Kernel/S3DeployPluginTest.php
+++ b/modules/preview_site_s3/tests/src/Kernel/S3DeployPluginTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\preview_site_s3\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Aws\S3\S3Client;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\preview_site\Entity\PreviewSiteBuild;
@@ -19,6 +20,7 @@ use Prophecy\Argument;
  */
 class S3DeployPluginTest extends PreviewSiteKernelTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/src/Plugin/PreviewSite/Deploy/PublicFiles.php b/src/Plugin/PreviewSite/Deploy/PublicFiles.php
index 5ac5023..1baa3ce 100644
--- a/src/Plugin/PreviewSite/Deploy/PublicFiles.php
+++ b/src/Plugin/PreviewSite/Deploy/PublicFiles.php
@@ -94,7 +94,7 @@ class PublicFiles extends DeployPluginBase {
     $destination = sprintf('public://%s', trim($this->token->replace($this->configuration['naming'], [
       'preview_site_build' => $build,
     ], ['clean' => TRUE]), '/'));
-    return file_create_url($destination);
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($destination);
   }
 
   /**
diff --git a/tests/src/Functional/PreviewSiteBuildDeployFormTest.php b/tests/src/Functional/PreviewSiteBuildDeployFormTest.php
index f370a2a..a6cd2c2 100644
--- a/tests/src/Functional/PreviewSiteBuildDeployFormTest.php
+++ b/tests/src/Functional/PreviewSiteBuildDeployFormTest.php
@@ -165,7 +165,7 @@ class PreviewSiteBuildDeployFormTest extends BrowserTestBase {
     $node_static_file = $this->getGeneratedFileForEntity($node, $build);
     $this->assertTrue(file_exists($node_static_file));
 
-    $path = file_create_url($node_static_file);
+    $path = \Drupal::service('file_url_generator')->generateAbsoluteString($node_static_file);
     $this->drupalGet($path);
     $assert->statusCodeEquals(200);
     $assert->pageTextContains($draft_text);
diff --git a/tests/src/Kernel/PreviewSiteBuildEntityTest.php b/tests/src/Kernel/PreviewSiteBuildEntityTest.php
index 670ef66..31960ea 100644
--- a/tests/src/Kernel/PreviewSiteBuildEntityTest.php
+++ b/tests/src/Kernel/PreviewSiteBuildEntityTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\preview_site\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Url;
 use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;
@@ -30,6 +31,7 @@ use Drupal\Tests\taxonomy\Traits\TaxonomyTestTrait;
  */
 class PreviewSiteBuildEntityTest extends PreviewSiteKernelTestBase {
 
+  use ProphecyTrait;
   use TaxonomyTestTrait;
 
   /**
diff --git a/tests/src/Kernel/PublicFilesDeployPluginTest.php b/tests/src/Kernel/PublicFilesDeployPluginTest.php
index 7afaecf..5ce1b33 100644
--- a/tests/src/Kernel/PublicFilesDeployPluginTest.php
+++ b/tests/src/Kernel/PublicFilesDeployPluginTest.php
@@ -102,7 +102,7 @@ class PublicFilesDeployPluginTest extends PreviewSiteKernelTestBase {
     $build->{$operation}();
     foreach ($build->get('artifacts') as $item) {
       $file = $item->entity;
-      $this->assertFileNotExists(sprintf('public://preview-site/%s/%s', $build->uuid(), FileHelper::getFilePathWithoutSchema($file, $build)));
+      $this->assertFileDoesNotExist(sprintf('public://preview-site/%s/%s', $build->uuid(), FileHelper::getFilePathWithoutSchema($file, $build)));
     }
   }
 
diff --git a/tests/src/Unit/FileHelperTest.php b/tests/src/Unit/FileHelperTest.php
index b28faf5..82b54ce 100644
--- a/tests/src/Unit/FileHelperTest.php
+++ b/tests/src/Unit/FileHelperTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\preview_site\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\file\FileInterface;
 use Drupal\preview_site\Entity\PreviewSiteBuildInterface;
 use Drupal\preview_site\Generate\FileHelper;
@@ -15,6 +16,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class FileHelperTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Tests ::getFilePathWithoutSchema.
    *
