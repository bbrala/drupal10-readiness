diff --git a/disable_language.info.yml b/disable_language.info.yml
index 125e241..6657960 100644
--- a/disable_language.info.yml
+++ b/disable_language.info.yml
@@ -5,6 +5,6 @@ dependencies:
   - drupal:language
 
 type: module
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 
 configure: disable_language.disable_language_settings
diff --git a/src/EventSubscriber/DisabledLanguagesEventSubscriber.php b/src/EventSubscriber/DisabledLanguagesEventSubscriber.php
index 34d681d..afbe8a0 100644
--- a/src/EventSubscriber/DisabledLanguagesEventSubscriber.php
+++ b/src/EventSubscriber/DisabledLanguagesEventSubscriber.php
@@ -3,6 +3,7 @@
 namespace Drupal\disable_language\EventSubscriber;
 
 // This is the interface we are going to implement.
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Condition\ConditionManager;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Routing\RouteMatch;
@@ -10,8 +11,6 @@ use Drupal\Core\Routing\TrustedRedirectResponse;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\StreamWrapper\StreamWrapperManager;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-// This class contains the event we want to subscribe to.
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Core\Url;
 use Drupal\disable_language\DisableLanguageManager;
@@ -95,7 +94,7 @@ class DisabledLanguagesEventSubscriber implements EventSubscriberInterface {
   /**
    * {@inheritdoc}
    */
-  public function checkForDisabledLanguageAndRedirect(GetResponseEvent $event) {
+  public function checkForDisabledLanguageAndRedirect(RequestEvent $event) {
     // Do not redirect if this is a file.
     $params = $event->getRequest()->attributes->all();
     if (isset($params['scheme']) && in_array($params['scheme'], $this->schemes)) {
diff --git a/tests/src/Functional/DisableLanguageRedirectTest.php b/tests/src/Functional/DisableLanguageRedirectTest.php
index 0742ca5..3724655 100644
--- a/tests/src/Functional/DisableLanguageRedirectTest.php
+++ b/tests/src/Functional/DisableLanguageRedirectTest.php
@@ -35,7 +35,7 @@ class DisableLanguageRedirectTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     ConfigurableLanguage::load('en')
diff --git a/tests/src/Functional/DisableLanguageSettingsFormTest.php b/tests/src/Functional/DisableLanguageSettingsFormTest.php
index 3953813..d8702b2 100644
--- a/tests/src/Functional/DisableLanguageSettingsFormTest.php
+++ b/tests/src/Functional/DisableLanguageSettingsFormTest.php
@@ -31,7 +31,7 @@ class DisableLanguageSettingsFormTest extends BrowserTestBase {
    */
   protected $adminUser;
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['access administration pages']);
@@ -43,7 +43,7 @@ class DisableLanguageSettingsFormTest extends BrowserTestBase {
    */
   public function testSettingsValidation() {
     $this->drupalGet('admin/config/regional/language/disable_language');
-    $this->assertField('redirect_override_routes');
+    $this->assertSession()->fieldExists('redirect_override_routes');
     $edit = ['redirect_override_routes' => 'foo.bar',];
     $this->submitForm($edit,t('Save configuration'));
     $this->assertSession()->pageTextContains('Route "foo.bar" does not exist.');
diff --git a/tests/src/Kernel/DisableLanguageManagerTest.php b/tests/src/Kernel/DisableLanguageManagerTest.php
index 90f2ee4..1a63211 100644
--- a/tests/src/Kernel/DisableLanguageManagerTest.php
+++ b/tests/src/Kernel/DisableLanguageManagerTest.php
@@ -28,7 +28,7 @@ class DisableLanguageManagerTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->disableLanguageManager = \Drupal::service('disable_language.disable_language_manager');
