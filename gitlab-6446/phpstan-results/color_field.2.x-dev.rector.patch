diff --git a/color_field.info.yml b/color_field.info.yml
index 14a21f5..72064db 100644
--- a/color_field.info.yml
+++ b/color_field.info.yml
@@ -1,8 +1,7 @@
 name: Color Field
 type: module
 description: 'Provides a color field type to store the color value and opacity.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Field types
 dependencies:
   - drupal:field
diff --git a/composer.json b/composer.json
index 0c1eae8..a6d38f3 100644
--- a/composer.json
+++ b/composer.json
@@ -1,7 +1,7 @@
 {
   "name": "drupal/color_field",
   "require": {
-    "drupal/core": "^8 || ^9"
+    "drupal/core": "^9.1 || ^10"
   },
   "require-dev": {
     "drupal/token": "~1.3",
diff --git a/tests/src/Functional/ColorFieldFormatterTest.php b/tests/src/Functional/ColorFieldFormatterTest.php
index 8d8c4d6..add8e9b 100644
--- a/tests/src/Functional/ColorFieldFormatterTest.php
+++ b/tests/src/Functional/ColorFieldFormatterTest.php
@@ -44,7 +44,7 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
       'field_color[0][opacity]' => 1,
     ];
 
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('#E70000 1</div>');
 
     // Ensure alternate hex format works.
@@ -62,8 +62,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
         'opacity' => FALSE,
       ],
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('#FF8C00</div>');
 
     // Test rgba Render mode.
@@ -80,8 +81,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
         'opacity' => TRUE,
       ],
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('rgba(255,239,0,0.9)');
 
     // Test RGB render mode.
@@ -98,8 +100,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
         'opacity' => FALSE,
       ],
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('rgb(0,129,31)');
   }
 
@@ -126,8 +129,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
       'field_color[0][color]' => "#0044FF",
       'field_color[0][opacity]' => 0.9,
     ];
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('background-color: rgba(0,68,255,0.9)');
     $this->assertSession()->responseContains('color_field__swatch--square');
 
@@ -145,8 +149,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
         'opacity' => FALSE,
       ],
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('background-color: rgb(118,0,137)');
     $this->assertSession()->responseContains('color_field__swatch--circle');
   }
@@ -174,8 +179,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
       'field_color[0][color]' => "#FFF430",
       'field_color[0][opacity]' => 0.9,
     ];
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('body { background-color: rgba(255,244,48,0.9) !important; }');
 
     // Test without opacity and not important.
@@ -195,8 +201,9 @@ class ColorFieldFormatterTest extends ColorFieldFunctionalTestBase {
       ],
       'label' => 'hidden',
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('body { background-color: rgb(255,255,255); }');
   }
 
diff --git a/tests/src/Functional/ColorFieldFormatterTokenTest.php b/tests/src/Functional/ColorFieldFormatterTokenTest.php
index b89daee..a2ed0cf 100644
--- a/tests/src/Functional/ColorFieldFormatterTokenTest.php
+++ b/tests/src/Functional/ColorFieldFormatterTokenTest.php
@@ -48,8 +48,9 @@ class ColorFieldFormatterTokenTest extends ColorFieldFunctionalTestBase {
       ],
       'label' => 'hidden',
     ])->save();
+    $this->drupalGet('node/add/article');
 
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('.node-article { background-color: rgba(156,89,209,0.95); }');
 
     // Ensure 2 fields on the same entity are both rendered properly.
@@ -87,7 +88,8 @@ class ColorFieldFormatterTokenTest extends ColorFieldFunctionalTestBase {
       'field_text_color[0][color]' => "#000000",
       'field_text_color[0][opacity]' => 1,
     ];
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('.node-article { background-color: rgba(0,0,0,0.1); }');
     $this->assertSession()->responseContains('.node-article { color: rgba(0,0,0,1); }');
   }
diff --git a/tests/src/Functional/ColorFieldFunctionalTestBase.php b/tests/src/Functional/ColorFieldFunctionalTestBase.php
index efe1027..d832535 100644
--- a/tests/src/Functional/ColorFieldFunctionalTestBase.php
+++ b/tests/src/Functional/ColorFieldFunctionalTestBase.php
@@ -46,7 +46,7 @@ abstract class ColorFieldFunctionalTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'article']);
diff --git a/tests/src/Functional/ColorFieldWidgetTest.php b/tests/src/Functional/ColorFieldWidgetTest.php
index fad5bbb..cdcf390 100644
--- a/tests/src/Functional/ColorFieldWidgetTest.php
+++ b/tests/src/Functional/ColorFieldWidgetTest.php
@@ -38,7 +38,7 @@ class ColorFieldWidgetTest extends ColorFieldFunctionalTestBase {
       'field_color[0][opacity]' => 1,
     ];
 
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $session->responseContains('#E70000 1</div>');
   }
 
diff --git a/tests/src/FunctionalJavascript/ColorFieldWidgetJavascriptTests.php b/tests/src/FunctionalJavascript/ColorFieldWidgetJavascriptTests.php
index 024a333..6399c29 100644
--- a/tests/src/FunctionalJavascript/ColorFieldWidgetJavascriptTests.php
+++ b/tests/src/FunctionalJavascript/ColorFieldWidgetJavascriptTests.php
@@ -46,7 +46,7 @@ class ColorFieldWidgetJavascriptTests extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'article']);
diff --git a/tests/src/Kernel/ColorFieldTypeTest.php b/tests/src/Kernel/ColorFieldTypeTest.php
index 7b5f109..20aaa40 100644
--- a/tests/src/Kernel/ColorFieldTypeTest.php
+++ b/tests/src/Kernel/ColorFieldTypeTest.php
@@ -26,7 +26,7 @@ class ColorFieldTypeTest extends FieldKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a color field storage and field for validation.
