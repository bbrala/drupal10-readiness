diff --git a/modules/rocketship_blocks/rocketship_blocks.install b/modules/rocketship_blocks/rocketship_blocks.install
index c6e570c..296187c 100644
--- a/modules/rocketship_blocks/rocketship_blocks.install
+++ b/modules/rocketship_blocks/rocketship_blocks.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\migrate\MigrateExecutable;
 /**
  * @file
  * Install file.
@@ -40,7 +41,7 @@ function rocketship_blocks_install() {
     foreach ($migrations as $name) {
       $migration = $migrationManager->createInstance($name);
       if ($migration) {
-        $executable = new \Drupal\migrate\MigrateExecutable($migration);
+        $executable = new MigrateExecutable($migration);
         $executable->import();
       }
     }
@@ -66,7 +67,7 @@ function rocketship_blocks_uninstall() {
     foreach ($migrations as $name) {
       $migration = $migrationManager->createInstance($name);
       if ($migration) {
-        $executable = new \Drupal\migrate\MigrateExecutable($migration);
+        $executable = new MigrateExecutable($migration);
         $executable->rollback();
       }
       \Drupal::configFactory()
diff --git a/modules/rocketship_blocks/rocketship_blocks.module b/modules/rocketship_blocks/rocketship_blocks.module
index fc2a3a7..706b1f1 100644
--- a/modules/rocketship_blocks/rocketship_blocks.module
+++ b/modules/rocketship_blocks/rocketship_blocks.module
@@ -315,7 +315,7 @@ function rocketship_blocks_theme($existing, $type, $theme, $path) {
  * Implements hook_migration_plugins_alter().
  */
 function rocketship_blocks_migration_plugins_alter(&$definitions) {
-  $path = drupal_get_path('module', 'rocketship_blocks');
+  $path = \Drupal::service('extension.list.module')->getPath('rocketship_blocks');
   $definitions['rs_blocks_images']['source']['path'] = $path . $definitions['rs_blocks_images']['source']['path'];
   $definitions['rs_blocks_image_media']['source']['path'] = $path . $definitions['rs_blocks_image_media']['source']['path'];
   $definitions['rs_blocks_image_blocks']['source']['path'] = $path . $definitions['rs_blocks_image_blocks']['source']['path'];
diff --git a/modules/rocketship_blocks/src/Controller/ChooseBlockController.php b/modules/rocketship_blocks/src/Controller/ChooseBlockController.php
index c97e12f..094e5a3 100644
--- a/modules/rocketship_blocks/src/Controller/ChooseBlockController.php
+++ b/modules/rocketship_blocks/src/Controller/ChooseBlockController.php
@@ -55,8 +55,8 @@ class ChooseBlockController extends ChooseBlockControllerCore {
    */
   protected function getBlockLinks(SectionStorageInterface $section_storage, int $delta, $region, array $blocks) {
     $links = [];
-    $icons_folder_path = drupal_get_path('module', 'rocketship_blocks') . '/assets/images/';
-    $default_icon_path = file_create_url($icons_folder_path . 'default-block.svg');
+    $icons_folder_path = \Drupal::service('extension.list.module')->getPath('rocketship_blocks') . '/assets/images/';
+    $default_icon_path = \Drupal::service('file_url_generator')->generateAbsoluteString($icons_folder_path . 'default-block.svg');
     foreach ($blocks as $block_id => $block) {
       $description = '';
       $icon_path = $default_icon_path;
diff --git a/modules/rocketship_blocks_content/rocketship_blocks_content.module b/modules/rocketship_blocks_content/rocketship_blocks_content.module
index cc8c520..0403a4d 100644
--- a/modules/rocketship_blocks_content/rocketship_blocks_content.module
+++ b/modules/rocketship_blocks_content/rocketship_blocks_content.module
@@ -4,7 +4,7 @@
  * Implements hook_migration_plugins_alter().
  */
 function rocketship_blocks_content_migration_plugins_alter(&$definitions) {
-  $path = drupal_get_path('module', 'rocketship_blocks_content');
+  $path = \Drupal::service('extension.list.module')->getPath('rocketship_blocks_content');
   $migrations = _rocketship_blocks_content_content_migrates();
 
   foreach ($migrations as $migration) {
diff --git a/modules/rocketship_blocks_content/src/EventSubscriber/MigrateSubscriber.php b/modules/rocketship_blocks_content/src/EventSubscriber/MigrateSubscriber.php
index 4b3de2e..c0171d0 100644
--- a/modules/rocketship_blocks_content/src/EventSubscriber/MigrateSubscriber.php
+++ b/modules/rocketship_blocks_content/src/EventSubscriber/MigrateSubscriber.php
@@ -88,7 +88,7 @@ class MigrateSubscriber implements EventSubscriberInterface {
     $entity_type_id = 'node';
     $entity_type_storage = $this->entityTypeManager->getStorage($entity_type_id);
 
-    $path = drupal_get_path('module', 'rocketship_blocks_content');
+    $path = \Drupal::service('extension.list.module')->getPath('rocketship_blocks_content');
     $handle = fopen("$path/assets/csv/rocketship_blocks_content_node_page.csv", "r");
     // skip first line
     fgetcsv($handle);
diff --git a/modules/rocketship_content/rocketship_content.module b/modules/rocketship_content/rocketship_content.module
index 31f3fd1..680ea20 100644
--- a/modules/rocketship_content/rocketship_content.module
+++ b/modules/rocketship_content/rocketship_content.module
@@ -4,7 +4,7 @@
  * Implements hook_migration_plugins_alter().
  */
 function rocketship_content_migration_plugins_alter(&$definitions) {
-  $path = drupal_get_path('module', 'rocketship_content');
+  $path = \Drupal::service('extension.list.module')->getPath('rocketship_content');
   $migrations = _rocketship_content_content_migrates();
 
   foreach ($migrations as $migration) {
diff --git a/rocketship_core.module b/rocketship_core.module
index 27693ac..b59eda7 100644
--- a/rocketship_core.module
+++ b/rocketship_core.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\rocketship_core\MigrateGenerator;
 define('ROCKETSHIP_FEATURES_MENU_LINK', '48a98eba-72c7-4e43-9f99-58af7623ce2d');
 
 use Drupal\block\Entity\Block;
@@ -175,7 +176,7 @@ function rocketship_core_path_alias_update(PathAliasInterface $path_alias) {
 
   // Dispatch the path alias update event.
   $event = new PathAliasUpdateEvent($path_alias);
-  $event_dispatcher->dispatch(PathAliasUpdateEvent::PATH_ALIAS_UPDATE, $event);
+  $event_dispatcher->dispatch($event, PathAliasUpdateEvent::PATH_ALIAS_UPDATE);
 }
 
 /**
@@ -451,7 +452,7 @@ function rocketship_core_get_default_content_default_language() {
  * Implements hook_language_switch_links_alter().
  *
  */
-function rocketship_core_language_switch_links_alter(array &$links, $type, \Drupal\Core\Url $url) {
+function rocketship_core_language_switch_links_alter(array &$links, $type, Url $url) {
   // if a theme setting exists (and is true) to set an abbreviated language as text, do it
   $lang_abbr = theme_get_setting('language_abbr');
 
@@ -470,7 +471,7 @@ function rocketship_core_language_switch_links_alter(array &$links, $type, \Drup
 class Rocketship {
 
   public static function generateMigrate($entity_type_id, $ids = [], $bundles = [], $module_name = 'rs_generated_migrate', $default_content_mode = FALSE) {
-    $generator = new \Drupal\rocketship_core\MigrateGenerator($entity_type_id, $bundles, $ids, $module_name, $default_content_mode);
+    $generator = new MigrateGenerator($entity_type_id, $bundles, $ids, $module_name, $default_content_mode);
     return $generator->generateMigrate();
   }
 
@@ -961,7 +962,7 @@ function rocketship_core_module_implements_alter(&$implementations, $hook) {
 /**
  * Implements hook_form_BASE_FORM_ID_alter().
  */
-function rocketship_core_form_node_layout_builder_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function rocketship_core_form_node_layout_builder_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $form['actions']['submit']['#value'] = t('Save content');
 
   rocketship_core_form_entity_view_display_layout_builder_form_alter($form, $form_state, $form_id);
@@ -970,7 +971,7 @@ function rocketship_core_form_node_layout_builder_form_alter(&$form, \Drupal\Cor
 /**
  * Implements hook_form_BASE_FORM_ID_alter().
  */
-function rocketship_core_form_entity_view_display_layout_builder_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function rocketship_core_form_entity_view_display_layout_builder_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $form['actions']['preview_toggle']['toggle_content_preview'] = [
     '#type' => 'select',
     '#title' => t('Change content preview'),
@@ -1034,7 +1035,7 @@ function rocketship_core_form_layout_builder_add_block_alter(&$form, FormStateIn
  * Implements hook_form_FORM_ID_alter().
  * @see https://www.drupal.org/project/rocketship_core/issues/3222425
  */
-function rocketship_core_form_search_api_fulltext_facet_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function rocketship_core_form_search_api_fulltext_facet_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $form_state->setRequestMethod('POST');
   $form_state->setCached(TRUE);
 }
diff --git a/src/Event/PathAliasUpdateEvent.php b/src/Event/PathAliasUpdateEvent.php
index d4337e8..63e6416 100644
--- a/src/Event/PathAliasUpdateEvent.php
+++ b/src/Event/PathAliasUpdateEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\rocketship_core\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\path_alias\PathAliasInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class PathAliasUpdateEvent.
diff --git a/src/MigrateGenerator.php b/src/MigrateGenerator.php
index 0d60ff6..fa2d5b9 100644
--- a/src/MigrateGenerator.php
+++ b/src/MigrateGenerator.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rocketship_core;
 
+use Drupal\file\Entity\File;
 use Drupal\block_content\Plugin\Block\BlockContentBlock;
 use Drupal\Core\Archiver\ArchiveTar;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -144,7 +145,7 @@ class MigrateGenerator {
       $this->created_migrates[$this->module_name . '_menu_link_content_menu_link_content'] = $this->module_name . '_menu_link_content_menu_link_content';
     }
 
-    $path = drupal_get_path('module', 'rocketship_core');
+    $path = \Drupal::service('extension.list.module')->getPath('rocketship_core');
     $files = [
       $path . '/assets/templates/generated_migrate_info_file.yml.twig' => "$dir/$this->module_name.info.yml",
       $path . '/assets/templates/generated_migrate_install_file.php.twig' => "$dir/$this->module_name.install",
@@ -874,7 +875,7 @@ class MigrateGenerator {
     $entities = [];
     if (!empty($ids)) {
       /** @var \Drupal\file\Entity\File[] $entities */
-      $entities = \Drupal\file\Entity\File::loadMultiple($ids);
+      $entities = File::loadMultiple($ids);
     }
     $rows = [];
     foreach ($entities as $idx => $entity) {
diff --git a/src/Plugin/Field/FieldFormatter/ImageDescriptionTitleDefaultFormatter.php b/src/Plugin/Field/FieldFormatter/ImageDescriptionTitleDefaultFormatter.php
index 9daea77..25a44c0 100644
--- a/src/Plugin/Field/FieldFormatter/ImageDescriptionTitleDefaultFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageDescriptionTitleDefaultFormatter.php
@@ -188,7 +188,7 @@ class ImageDescriptionTitleDefaultFormatter extends ImageFormatter {
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
diff --git a/src/Plugin/Field/FieldFormatter/PositionBasedImageFormatter.php b/src/Plugin/Field/FieldFormatter/PositionBasedImageFormatter.php
index fc8f17b..6dc2dc8 100755
--- a/src/Plugin/Field/FieldFormatter/PositionBasedImageFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/PositionBasedImageFormatter.php
@@ -224,7 +224,7 @@ class PositionBasedImageFormatter extends ImageFormatterBase implements Containe
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
diff --git a/src/Plugin/Layout/RocketshipCoreBaseLayout.php b/src/Plugin/Layout/RocketshipCoreBaseLayout.php
index d1eff9d..cc9279d 100644
--- a/src/Plugin/Layout/RocketshipCoreBaseLayout.php
+++ b/src/Plugin/Layout/RocketshipCoreBaseLayout.php
@@ -338,7 +338,7 @@ abstract class RocketshipCoreBaseLayout extends LayoutDefault implements PluginF
     }
 
     $theme = \Drupal::configFactory()->get('system.theme')->get('default');
-    $path = drupal_get_path('theme', $theme) . '/' . "$theme.theme";
+    $path = \Drupal::service('extension.list.theme')->getPath($theme) . '/' . "$theme.theme";
     if (is_file($path)) {
       require_once $path;
     }
@@ -393,7 +393,7 @@ abstract class RocketshipCoreBaseLayout extends LayoutDefault implements PluginF
     $settings = \Drupal::config('rocketship_core.settings');
     $variants = $settings->get('color_variants');
     $cssPath = 'public://css';
-    $cssTemplatePath = drupal_get_path('module', 'rocketship_core') . '/css/style.content-blocks.colors.min.css';
+    $cssTemplatePath = \Drupal::service('extension.list.module')->getPath('rocketship_core') . '/css/style.content-blocks.colors.min.css';
     // Make an array of the Changed CSS to save.
     $finalCSS = '';
 
diff --git a/tests/src/Kernel/PathAliasUpdateTest.php b/tests/src/Kernel/PathAliasUpdateTest.php
index 42bd367..c6cac40 100644
--- a/tests/src/Kernel/PathAliasUpdateTest.php
+++ b/tests/src/Kernel/PathAliasUpdateTest.php
@@ -70,7 +70,7 @@ class PathAliasUpdateTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->entityTypeManager = $this->container->get('entity_type.manager');
@@ -225,7 +225,7 @@ class PathAliasUpdateTest extends KernelTestBase {
 
     // Make sure current language has been changed.
     $current_language = $this->languageManager->getCurrentLanguage()->getId();
-    $this->assertEqual($current_language, $language->getId());
+    $this->assertEquals($current_language, $language->getId());
   }
 
   /**
