modules/contrib/viewfield/viewfield.module
modules/contrib/viewfield/src/Normalizer/ViewfieldNormalizer.php
modules/contrib/viewfield/src/Plugin/Field/FieldFormatter/ViewfieldFormatterDefault.php
modules/contrib/viewfield/src/Plugin/Field/FieldFormatter/ViewfieldFormatterTitle.php
modules/contrib/viewfield/src/Plugin/Field/FieldType/ViewfieldItem.php
modules/contrib/viewfield/src/Plugin/Field/FieldWidget/ViewfieldWidgetSelect.php
modules/contrib/viewfield/src/Plugin/migrate/field/d7/ViewField.php
modules/contrib/viewfield/src/ViewfieldServiceProvider.php
modules/contrib/viewfield/tests/src/FunctionalJavascript/ViewfieldFormatterTest.php
modules/contrib/viewfield/tests/src/FunctionalJavascript/ViewfieldFunctionalTestBase.php
modules/contrib/viewfield/tests/src/FunctionalJavascript/ViewfieldWidgetTest.php
modules/contrib/viewfield/tests/src/Kernel/ViewfieldKernelTest.php
modules/contrib/viewfield/viewfield.install

5 files with changes
====================

1) modules/contrib/viewfield/tests/src/Kernel/ViewfieldKernelTest.php:27

    ---------- begin diff ----------
@@ @@
    */
   protected $defaultTheme = 'stark';

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp(); // TODO: Change the autogenerated stub

     FieldStorageConfig::create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/viewfield/tests/src/FunctionalJavascript/ViewfieldWidgetTest.php:46

    ---------- begin diff ----------
@@ @@
     $viewfield_display = $session->fieldExists('field_view_test[0][display_id]');
     $viewfield_display->setValue('block_1');

-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Test response.
     $session->responseContains('content_test');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/viewfield/tests/src/FunctionalJavascript/ViewfieldFunctionalTestBase.php:55

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalCreateContentType(['type' => 'article_test']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/viewfield/tests/src/FunctionalJavascript/ViewfieldFormatterTest.php:42

    ---------- begin diff ----------
@@ @@
     $viewfield_display->setValue('block_1');

     // Submit node form.
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('Article 1');
     $this->assertSession()->responseContains('Page 1');
   }
@@ @@
     $viewfield_display->setValue('block_1');

     // Submit node form.
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->pageTextContains('View: (content_test)');
     $this->assertSession()->pageTextContains('Display: Block (block_1)');
   }
@@ @@
     ];

     // Submit node form.
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Test results to verify that only page nodes are shown.
     $this->assertSession()->responseContains('Page 1');
@@ @@
     ];

     // Submit node form.
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Test results to verify that only page nodes are shown.
     $rows = $page->findAll('css', '.views-element-container div .views-row');
@@ @@
     ];

     // Submit node form.
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Test results to verify that only page nodes are shown.
     $this->assertSession()->elementNotExists('css', 'div.field--name-field-view-test');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/viewfield/src/Plugin/Field/FieldFormatter/ViewfieldFormatterDefault.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\viewfield\Plugin\Field\FieldFormatter;

+use Drupal\views\Plugin\views\pager\None;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@

         // Disable pager, if items_to_display was set.
         if (!empty($items_to_display)) {
-          $view->pager = new \Drupal\views\Plugin\views\pager\None([], '', []);
+          $view->pager = new None([], '', []);
           $view->pager->init($view, $view->display_handler);
           $view->pager->setItemsPerPage($items_to_display);
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

