modules/contrib/nodeviewcount/nodeviewcount.api.php
modules/contrib/nodeviewcount/src/Plugin/views/field/NodeViewCountUserIP.php
modules/contrib/nodeviewcount/nodeviewcount.install
modules/contrib/nodeviewcount/src/Tests/NodeViewCountBaseFunctionalityTest.php
modules/contrib/nodeviewcount/nodeviewcount.module
modules/contrib/nodeviewcount/nodeviewcount.views.inc
modules/contrib/nodeviewcount/src/Controller/NodeViewCountController.php
modules/contrib/nodeviewcount/src/Form/NodeViewCountSettingsForm.php
modules/contrib/nodeviewcount/src/Tests/NodeViewCountHooksTest.php
modules/contrib/nodeviewcount/src/NodeViewCountRecordsManager.php
modules/contrib/nodeviewcount/src/Tests/NodeViewCountSettingsFormTest.php
modules/contrib/nodeviewcount/src/NodeViewCountRecordsManagerInterface.php
modules/contrib/nodeviewcount/src/Tests/NodeViewCountTestBase.php
modules/contrib/nodeviewcount/src/Plugin/views/field/NodeViewCountId.php
modules/contrib/nodeviewcount/src/Plugin/views/field/NodeViewCountNodeId.php
modules/contrib/nodeviewcount/src/Tests/NodeViewCountViewsTest.php
modules/contrib/nodeviewcount/tests/modules/nodeviewcount_hooks_test/nodeviewcount_hooks_test.module

5 files with changes
====================

1) modules/contrib/nodeviewcount/src/Tests/NodeViewCountViewsTest.php:71

    ---------- begin diff ----------
@@ @@
   private function assertStatisticsViewRowExists($title, $count) {
     $value = $this->xpath("//td[normalize-space(../td[@class='views-field views-field-title']/text()) = '{$title}'][2]");
     $value = (string) reset($value);
-    $this->assertEqual($value, $count);
+    $this->assertEquals($value, $count);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/nodeviewcount/src/Tests/NodeViewCountTestBase.php:78

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->createRole([
@@ @@
     // Create a user assigned to that role.
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $edit['pass'] = user_password();
+    $edit['pass'] = \Drupal::service('password_generator')->generate();
     $edit['status'] = 1;
     $edit['roles'] = [$user_role_name];
    ----------- end diff -----------

Applied rules:
 * UserPasswordRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/nodeviewcount/src/Tests/NodeViewCountSettingsFormTest.php:26

    ---------- begin diff ----------
@@ @@
     $this->assertFieldChecked('edit-user-roles-anonymous');
     $this->assertFieldChecked('edit-user-roles-logged');
     $this->assertNoFieldChecked('edit-user-roles-authenticated');
-    $this->assertNoFieldById('edit-user-roles-administrator');
-    $this->assertNoFieldById('edit-excluded-user-roles-anonymous');
-    $this->assertNoFieldById('edit-excluded-user-roles-logged');
+    $this->assertSession()->fieldValueNotEquals('edit-user-roles-administrator', '');
+    $this->assertSession()->fieldValueNotEquals('edit-excluded-user-roles-anonymous', '');
+    $this->assertSession()->fieldValueNotEquals('edit-excluded-user-roles-logged', '');
     $this->assertNoFieldChecked('edit-excluded-user-roles-authenticated');
     $this->assertFieldChecked('edit-excluded-user-roles-administrator');
-    $this->assertOptionSelected('edit-logs-life-time', 0);
+    $this->assertTrue($this->assertSession()->optionExists('edit-logs-life-time', 0)->hasAttribute('selected'));

     $this->drupalLogout();
   }
@@ @@
       'logs_life_time' => 604800,
       'user_roles[authenticated]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, $this->t('Save configuration'));
+    $this->submitForm($edit, $this->t('Save configuration'));
     $this->assertFieldChecked('edit-user-roles-authenticated');
-    $this->assertNoFieldById('edit-excluded-user-roles-authenticated');
-    $this->assertOptionSelected('edit-logs-life-time', 604800);
+    $this->assertSession()->fieldValueNotEquals('edit-excluded-user-roles-authenticated', '');
+    $this->assertTrue($this->assertSession()->optionExists('edit-logs-life-time', 604800)->hasAttribute('selected'));

     $this->drupalLogout();
   }
    ----------- end diff -----------

Applied rules:
 * AssertNoFieldByIdRector
 * AssertOptionSelectedRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/nodeviewcount/src/Tests/NodeViewCountHooksTest.php:25

    ---------- begin diff ----------
@@ @@
       ->condition('type', 'nodeviewcount')
       ->execute()
       ->fetchField();
-    $this->assertEqual($message, $this->firstTestTrackedNode->getTitle(), 'Nodeviewcount hook is called.');
+    $this->assertEquals($message, $this->firstTestTrackedNode->getTitle(), 'Nodeviewcount hook is called.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/nodeviewcount/src/Tests/NodeViewCountBaseFunctionalityTest.php:35

    ---------- begin diff ----------
@@ @@
     $query = $this->connection->select('nodeviewcount', 'nvc')
       ->fields('nvc', ['id']);
     $result = $query->execute()->fetchAll();
-    $this->assertEqual(count($result), 2, ' Nodeviewcount statistics is not deleted after cron run.');
+    $this->assertEquals(count($result), 2, ' Nodeviewcount statistics is not deleted after cron run.');

     $node_view_count_settings = $this->config('nodeviewcount.settings');
     $node_view_count_settings->set('logs_life_time', 1)->save();
@@ @@
     sleep(2);
     $this->cronRun();
     $result = $query->execute()->fetchAll();
-    $this->assertEqual(count($result), 0, ' Nodeviewcount statistics is deleted after cron run.');
+    $this->assertEquals(count($result), 0, ' Nodeviewcount statistics is deleted after cron run.');
   }

   /**
@@ @@
     $this->checkTeaserViewMode('administrator', FALSE);
     $this->drupalLogin($this->adminUser);
     $edit['view_modes[teaser]'] = FALSE;
-    $this->drupalPostForm('admin/config/content/nodeviewcount', $edit, $this->t('Save configuration'));
     $this->drupalGet('admin/config/content/nodeviewcount');
+    $this->submitForm($edit, $this->t('Save configuration'));
+    $this->drupalGet('admin/config/content/nodeviewcount');
     $this->drupalLogout();
     $this->checkTeaserViewMode('anonymous', FALSE);
     $this->checkTeaserViewMode('logged', FALSE);
@@ @@
       ->condition('nvc.nid', $this->firstTestTrackedNode->id())
       ->execute()
       ->fetchAll();
-    $this->assertEqual(count($result), 2, 'Verifying that the node counter is incremented.');
+    $this->assertEquals(count($result), 2, 'Verifying that the node counter is incremented.');
   }

   /**
@@ @@
           'view_mode' => 'full',
         ],
       ];
-      $this->assertEqual($expectedSettings, $settings['nodeviewcount']['data'], 'drupalSettings has right node information.');
+      $this->assertEquals($expectedSettings, $settings['nodeviewcount']['data'], 'drupalSettings has right node information.');
     }
     else {
       $this->assertNoRaw('nodeviewcount.js', 'Nodeviewcount statistics library is not included.');
@@ @@
           'view_mode' => 'teaser',
         ],
       ];
-      $this->assertEqual($expectedSettings, $settings['nodeviewcount']['data'], 'drupalSettings to mark node as read are present.');
+      $this->assertEquals($expectedSettings, $settings['nodeviewcount']['data'], 'drupalSettings to mark node as read are present.');
     }
     else {
       $this->assertNoRaw('nodeviewcount.js', 'Nodeviewcount statistics library is not included.');
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

