diff --git a/field_image_link.info.yml b/field_image_link.info.yml
index 5b076b2..25591ce 100644
--- a/field_image_link.info.yml
+++ b/field_image_link.info.yml
@@ -2,8 +2,7 @@ name: 'Linked image field'
 type: module
 description: 'Provides the ability to create images linked to any URL.'
 package : Fields
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:image
   - drupal:link
diff --git a/field_image_link.module b/field_image_link.module
index d9a3784..36644e0 100644
--- a/field_image_link.module
+++ b/field_image_link.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\file\Entity\File;
 use Drupal\Component\Utility\Unicode;
 
 /**
@@ -80,7 +81,7 @@ function template_preprocess_image_link_formatter(&$variables) {
  * @return array
  *   Dimensions array.
  */
-function field_image_link_get_image_file_dimensions(\Drupal\file\Entity\File $file) {
+function field_image_link_get_image_file_dimensions(File $file) {
   $image = \Drupal::getContainer()->get('image.factory')->get($file->getFileUri());
 
   $variables = [];
@@ -127,6 +128,6 @@ function field_image_link_get_image_file_dimensions(\Drupal\file\Entity\File $fi
  * @return bool
  *   TRUE if is SVG, FALSE otherwise.
  */
-function field_image_link_is_file_svg(\Drupal\file\Entity\File $file) {
+function field_image_link_is_file_svg(File $file) {
   return $file->getMimeType() === 'image/svg+xml';
 }
diff --git a/src/Plugin/Field/FieldFormatter/ImageLinkFormatter.php b/src/Plugin/Field/FieldFormatter/ImageLinkFormatter.php
index a3b9d99..bd4a950 100644
--- a/src/Plugin/Field/FieldFormatter/ImageLinkFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageLinkFormatter.php
@@ -322,7 +322,7 @@ class ImageLinkFormatter extends ImageFormatter {
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $image_url = Url::fromUri(file_create_url($image_uri));
+        $image_url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       if (isset($link_link)) {
@@ -392,7 +392,7 @@ class ImageLinkFormatter extends ImageFormatter {
         }
         elseif ($values['link_display_settings']['image_link'] == 'file') {
           $file = File::load($values['target_id']);
-          $elements[$delta]['#image']['#url'] = Url::fromUri(file_create_url($file->getFileUri()));
+          $elements[$delta]['#image']['#url'] = \Drupal::service('file_url_generator')->generate($file->getFileUri());
         }
         elseif ($values['link_display_settings']['image_link'] == 'content') {
           $entity = $items->getEntity();
