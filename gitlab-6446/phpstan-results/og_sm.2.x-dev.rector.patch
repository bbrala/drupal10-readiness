diff --git a/og_sm.api.php b/og_sm.api.php
index 9c0366b..aa8b4c3 100644
--- a/og_sm.api.php
+++ b/og_sm.api.php
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\node\NodeInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 /**
  * @file
  * API documentation about the og_sm module.
@@ -34,7 +36,7 @@
  *
  * @see hook_node_view()
  */
-function hook_og_sm_site_view(array &$build, \Drupal\node\NodeInterface $site, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
+function hook_og_sm_site_view(array &$build, NodeInterface $site, EntityViewDisplayInterface $display, $view_mode) {
 
 }
 
@@ -57,7 +59,7 @@ function hook_og_sm_site_view(array &$build, \Drupal\node\NodeInterface $site, \
  * @param array $route_parameters
  *   The route parameters.
  */
-function hook_og_sm_site_homepage_alter(\Drupal\node\NodeInterface $site, &$route_name, array &$route_parameters) {
+function hook_og_sm_site_homepage_alter(NodeInterface $site, &$route_name, array &$route_parameters) {
   $route_name = 'og_sm.site.dashboard';
 }
 
diff --git a/og_sm_config/tests/src/Kernel/ConfigDefaultsTest.php b/og_sm_config/tests/src/Kernel/ConfigDefaultsTest.php
index 9d66320..8bda6ff 100644
--- a/og_sm_config/tests/src/Kernel/ConfigDefaultsTest.php
+++ b/og_sm_config/tests/src/Kernel/ConfigDefaultsTest.php
@@ -23,7 +23,7 @@ class ConfigDefaultsTest extends OgSmKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['og_sm_config_test']);
   }
diff --git a/og_sm_config/tests/src/Kernel/ConfigTest.php b/og_sm_config/tests/src/Kernel/ConfigTest.php
index bffa10a..f7b0274 100644
--- a/og_sm_config/tests/src/Kernel/ConfigTest.php
+++ b/og_sm_config/tests/src/Kernel/ConfigTest.php
@@ -44,7 +44,7 @@ class ConfigTest extends OgSmKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->configFactoryOverride = $this->container->get('og_sm.config_factory_override');
diff --git a/og_sm_content/tests/src/Functional/SiteContentTest.php b/og_sm_content/tests/src/Functional/SiteContentTest.php
index 9180e83..3290c19 100644
--- a/og_sm_content/tests/src/Functional/SiteContentTest.php
+++ b/og_sm_content/tests/src/Functional/SiteContentTest.php
@@ -72,7 +72,7 @@ class SiteContentTest extends OgSmWebTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create Sites.
@@ -227,15 +227,17 @@ class SiteContentTest extends OgSmWebTestBase {
 
     // Login as admin.
     $this->drupalLogin($this->userAdministrator);
+    $this->drupalGet($site2_path . '/content/add');
     // Create a node as admin on site 2.
-    $this->drupalPostForm($site2_path . '/content/add', [
+    $this->submitForm([
       'title[0][value]' => 'test site 2 content by admin',
     ], 'Save');
     $site2_node = $this->getNodeByTitle('test site 2 content by admin');
     // Verify that the newly created node is linked to site 2.
     $this->assertEquals($this->site2->id(), $site_manager->getSiteFromEntity($site2_node)->id());
+    $this->drupalGet($site1_path . '/content/add');
 
-    $this->drupalPostForm($site1_path . '/content/add', [
+    $this->submitForm([
       'title[0][value]' => 'test site 1 content by admin',
     ], 'Save');
     $site1_node = $this->getNodeByTitle('test site 1 content by admin');
@@ -251,8 +253,9 @@ class SiteContentTest extends OgSmWebTestBase {
     $this->assertSession()->statusCodeEquals(200);
     // Verify that the site manager can access the promote checkbox.
     $this->assertSession()->fieldExists('promote[value]');
+    $this->drupalGet($site1_path . '/content/add');
 
-    $this->drupalPostForm($site1_path . '/content/add', [
+    $this->submitForm([
       'title[0][value]' => 'test site 1 content by site manager',
     ], 'Save');
     $site1_node2 = $this->getNodeByTitle('test site 1 content by site manager');
@@ -264,7 +267,8 @@ class SiteContentTest extends OgSmWebTestBase {
     $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet('node/' . $site1_node2->id() . '/edit');
     $this->assertSession()->statusCodeEquals(403);
-    $this->drupalPostForm($site1_path . '/content/add', [
+    $this->drupalGet($site1_path . '/content/add');
+    $this->submitForm([
       'title[0][value]' => 'test site 1 content by site editor',
     ], 'Save');
     $site1_node3 = $this->getNodeByTitle('test site 1 content by site editor');
diff --git a/og_sm_content/tests/src/Unit/SiteContentPathProcessorTest.php b/og_sm_content/tests/src/Unit/SiteContentPathProcessorTest.php
index 2509485..2018344 100644
--- a/og_sm_content/tests/src/Unit/SiteContentPathProcessorTest.php
+++ b/og_sm_content/tests/src/Unit/SiteContentPathProcessorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\og_sm_content\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Render\BubbleableMetadata;
 use Drupal\node\NodeInterface;
 use Drupal\og_sm\SiteManagerInterface;
@@ -19,6 +20,7 @@ use Symfony\Component\HttpFoundation\Request;
  */
 class SiteContentPathProcessorTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The mocked request stack.
    *
@@ -51,7 +53,7 @@ class SiteContentPathProcessorTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     /** @var \Drupal\og_sm_path\SitePathManagerInterface $site_path_manager */
     $site_path_manager = $this->prophesize(SitePathManagerInterface::class);
diff --git a/og_sm_context/tests/src/Unit/GroupPathGroupResolverTest.php b/og_sm_context/tests/src/Unit/GroupPathGroupResolverTest.php
index c5a7ced..7067d5b 100644
--- a/og_sm_context/tests/src/Unit/GroupPathGroupResolverTest.php
+++ b/og_sm_context/tests/src/Unit/GroupPathGroupResolverTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\og_sm_context\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\og_sm_context\Plugin\OgGroupResolver\GroupPathGroupResolver;
 
@@ -13,6 +14,7 @@ use Drupal\og_sm_context\Plugin\OgGroupResolver\GroupPathGroupResolver;
  */
 class GroupPathGroupResolverTest extends OgSmGroupResolverTestBase {
 
+  use ProphecyTrait;
   use RouteTrait;
 
   /**
diff --git a/og_sm_context/tests/src/Unit/NodeGroupResolverTest.php b/og_sm_context/tests/src/Unit/NodeGroupResolverTest.php
index ed7377e..b3c467d 100644
--- a/og_sm_context/tests/src/Unit/NodeGroupResolverTest.php
+++ b/og_sm_context/tests/src/Unit/NodeGroupResolverTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\og_sm_context\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\og_sm_context\Plugin\OgGroupResolver\NodeGroupResolver;
@@ -14,6 +15,7 @@ use Drupal\og_sm_context\Plugin\OgGroupResolver\NodeGroupResolver;
  */
 class NodeGroupResolverTest extends OgSmGroupResolverTestBase {
 
+  use ProphecyTrait;
   use RouteTrait;
 
   /**
diff --git a/og_sm_context/tests/src/Unit/OgSmGroupResolverTestBase.php b/og_sm_context/tests/src/Unit/OgSmGroupResolverTestBase.php
index 0fa8f1b..6bbeaa1 100644
--- a/og_sm_context/tests/src/Unit/OgSmGroupResolverTestBase.php
+++ b/og_sm_context/tests/src/Unit/OgSmGroupResolverTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\og_sm_context\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\node\NodeInterface;
 use Drupal\og\OgResolvedGroupCollectionInterface;
 use Drupal\og_sm\SiteManager;
@@ -12,6 +13,7 @@ use Drupal\Tests\og\Unit\Plugin\OgGroupResolver\OgGroupResolverTestBase;
  */
 abstract class OgSmGroupResolverTestBase extends OgGroupResolverTestBase {
 
+  use ProphecyTrait;
   /**
    * The mocked site manager.
    *
diff --git a/og_sm_context/tests/src/Unit/QueryParamGroupResolverTest.php b/og_sm_context/tests/src/Unit/QueryParamGroupResolverTest.php
index 6d58a80..3e18b48 100644
--- a/og_sm_context/tests/src/Unit/QueryParamGroupResolverTest.php
+++ b/og_sm_context/tests/src/Unit/QueryParamGroupResolverTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\og_sm_context\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\og_sm_context\Plugin\OgGroupResolver\QueryParamGroupResolver;
 use Symfony\Component\HttpFoundation\ParameterBag;
 use Symfony\Component\HttpFoundation\Request;
@@ -14,6 +15,7 @@ use Symfony\Component\HttpFoundation\Request;
  */
 class QueryParamGroupResolverTest extends OgSmGroupResolverTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/og_sm_menu/tests/src/Kernel/SiteMenuManagerTest.php b/og_sm_menu/tests/src/Kernel/SiteMenuManagerTest.php
index 567a6d3..a9b454a 100644
--- a/og_sm_menu/tests/src/Kernel/SiteMenuManagerTest.php
+++ b/og_sm_menu/tests/src/Kernel/SiteMenuManagerTest.php
@@ -23,7 +23,7 @@ class SiteMenuManagerTest extends OgSmKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['og_menu', 'og_sm_menu']);
     $this->installEntitySchema('ogmenu');
diff --git a/og_sm_path/og_sm_path.batch.inc b/og_sm_path/og_sm_path.batch.inc
index d72648c..4b35d4e 100644
--- a/og_sm_path/og_sm_path.batch.inc
+++ b/og_sm_path/og_sm_path.batch.inc
@@ -18,7 +18,7 @@ use Drupal\field\Entity\FieldStorageConfig;
  *   The Site to create the batch for.
  */
 function og_sm_path_site_alias_update_batch(NodeInterface $site) {
-  $file = drupal_get_path('module', 'og_sm_path') . '/og_sm_path.batch.inc';
+  $file = \Drupal::service('extension.list.module')->getPath('og_sm_path') . '/og_sm_path.batch.inc';
 
   $batch = [
     'title' => t('Update Site content aliases'),
diff --git a/og_sm_path/tests/src/Functional/SitePathFormTest.php b/og_sm_path/tests/src/Functional/SitePathFormTest.php
index b331f78..b72ec48 100644
--- a/og_sm_path/tests/src/Functional/SitePathFormTest.php
+++ b/og_sm_path/tests/src/Functional/SitePathFormTest.php
@@ -37,7 +37,7 @@ class SitePathFormTest extends OgSmWebTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->userAdministrator = $this->drupalCreateUser([], NULL, TRUE);
@@ -76,7 +76,8 @@ class SitePathFormTest extends OgSmWebTestBase {
       'title[0][value]' => 'Site node test 1',
       'site_path' => '/site-node-test-me',
     ];
-    $this->drupalPostForm('node/add/is_site_type', $edit, 'Save');
+    $this->drupalGet('node/add/is_site_type');
+    $this->submitForm($edit, 'Save');
     $site_node = $this->getNodeByTitle('Site node test 1');
     $this->assertEquals($edit['site_path'], OgSmPath::sitePathManager()->getPathFromSite($site_node), 'Site path is saved as Site variable');
 
@@ -85,7 +86,8 @@ class SitePathFormTest extends OgSmWebTestBase {
       'title[0][value]' => 'Site node test 2',
       'site_path' => '/site-node-test-me',
     ];
-    $this->drupalPostForm('node/add/is_site_type', $edit, 'Save');
+    $this->drupalGet('node/add/is_site_type');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('The Site path /site-node-test-me is already in use.');
 
     // Creating a new Site with an invalid path should result in a form error.
@@ -93,13 +95,15 @@ class SitePathFormTest extends OgSmWebTestBase {
       'title[0][value]' => 'Site node test 2',
       'site_path' => '/site path not valid',
     ];
-    $this->drupalPostForm('node/add/is_site_type', $edit, 'Save');
+    $this->drupalGet('node/add/is_site_type');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('The Site path may contain only lowercase letters, numbers and dashes.');
     $edit = [
       'title[0][value]' => 'Site node test 2',
       'site_path' => 'site-path-not-valid',
     ];
-    $this->drupalPostForm('node/add/is_site_type', $edit, 'Save');
+    $this->drupalGet('node/add/is_site_type');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('The alias needs to start with a slash.');
 
     // The site path should be in the edit form for users with the proper
diff --git a/og_sm_path/tests/src/Kernel/ChangeAccessTest.php b/og_sm_path/tests/src/Kernel/ChangeAccessTest.php
index f794792..b115dcc 100644
--- a/og_sm_path/tests/src/Kernel/ChangeAccessTest.php
+++ b/og_sm_path/tests/src/Kernel/ChangeAccessTest.php
@@ -105,7 +105,7 @@ class ChangeAccessTest extends OgSmKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('og_membership');
 
diff --git a/og_sm_path/tests/src/Kernel/PathTokensTest.php b/og_sm_path/tests/src/Kernel/PathTokensTest.php
index ab1a266..2ef8b69 100644
--- a/og_sm_path/tests/src/Kernel/PathTokensTest.php
+++ b/og_sm_path/tests/src/Kernel/PathTokensTest.php
@@ -52,7 +52,7 @@ class PathTokensTest extends OgSmKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create the Site node.
diff --git a/og_sm_path/tests/src/Kernel/SitePathTest.php b/og_sm_path/tests/src/Kernel/SitePathTest.php
index f5041c6..0eada53 100644
--- a/og_sm_path/tests/src/Kernel/SitePathTest.php
+++ b/og_sm_path/tests/src/Kernel/SitePathTest.php
@@ -35,7 +35,7 @@ class SitePathTest extends OgSmKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $type = $this->createGroupNodeType(OgSmKernelTestBase::TYPE_IS_GROUP);
diff --git a/og_sm_path/tests/src/Unit/PathGroupResolverTest.php b/og_sm_path/tests/src/Unit/PathGroupResolverTest.php
index 35b8ceb..4ea8865 100644
--- a/og_sm_path/tests/src/Unit/PathGroupResolverTest.php
+++ b/og_sm_path/tests/src/Unit/PathGroupResolverTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\og_sm_path\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\og_sm_path\Plugin\OgGroupResolver\PathGroupResolver;
 use Drupal\og_sm_path\SitePathManagerInterface;
 use Drupal\Tests\og_sm_context\Unit\OgSmGroupResolverTestBase;
@@ -16,6 +17,7 @@ use Symfony\Component\HttpFoundation\Request;
  */
 class PathGroupResolverTest extends OgSmGroupResolverTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/og_sm_path/tests/src/Unit/SitePathProcessorTest.php b/og_sm_path/tests/src/Unit/SitePathProcessorTest.php
index fcb4e38..137aa82 100644
--- a/og_sm_path/tests/src/Unit/SitePathProcessorTest.php
+++ b/og_sm_path/tests/src/Unit/SitePathProcessorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\og_sm_path\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Path\PathValidatorInterface;
 use Drupal\Core\Render\BubbleableMetadata;
@@ -25,6 +26,7 @@ use Symfony\Component\HttpFoundation\Request;
  */
 class SitePathProcessorTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The mocked request stack.
    *
@@ -78,7 +80,7 @@ class SitePathProcessorTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->sitePathManager = $this->prophesize(SitePathManagerInterface::class);
     $this->siteManager = $this->prophesize(SiteManagerInterface::class);
diff --git a/og_sm_routing/tests/src/Kernel/SiteRoutingTest.php b/og_sm_routing/tests/src/Kernel/SiteRoutingTest.php
index 103d319..cafa9c6 100644
--- a/og_sm_routing/tests/src/Kernel/SiteRoutingTest.php
+++ b/og_sm_routing/tests/src/Kernel/SiteRoutingTest.php
@@ -26,7 +26,7 @@ class SiteRoutingTest extends OgSmKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installSchema('node', ['node_access']);
   }
diff --git a/og_sm_routing/tests/src/Unit/SiteRouteGroupResolverTest.php b/og_sm_routing/tests/src/Unit/SiteRouteGroupResolverTest.php
index 37e7303..882eb9a 100644
--- a/og_sm_routing/tests/src/Unit/SiteRouteGroupResolverTest.php
+++ b/og_sm_routing/tests/src/Unit/SiteRouteGroupResolverTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\og_sm_routing\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\og_sm_routing\Plugin\OgGroupResolver\SiteRouteGroupResolver;
 use Drupal\Tests\og_sm_context\Unit\OgSmGroupResolverTestBase;
@@ -14,6 +15,7 @@ use Drupal\Tests\og_sm_context\Unit\OgSmGroupResolverTestBase;
  */
 class SiteRouteGroupResolverTest extends OgSmGroupResolverTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/src/ProxyClass/ParamConverter/SiteConverter.php b/src/ProxyClass/ParamConverter/SiteConverter.php
index 46d990b..0478022 100644
--- a/src/ProxyClass/ParamConverter/SiteConverter.php
+++ b/src/ProxyClass/ParamConverter/SiteConverter.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\og_sm\ProxyClass\ParamConverter {
 
+    use Drupal\Core\ParamConverter\ParamConverterInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Symfony\Component\Routing\Route;
     /**
      * Provides a proxy class for \Drupal\og_sm\ParamConverter\SiteConverter.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class SiteConverter implements \Drupal\Core\ParamConverter\ParamConverterInterface
+    class SiteConverter implements ParamConverterInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -48,7 +52,7 @@ namespace Drupal\og_sm\ProxyClass\ParamConverter {
          *
          * @SuppressWarnings(PHPMD.LongVariable)
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $originalServiceId)
+        public function __construct(ContainerInterface $container, $originalServiceId)
         {
             $this->container = $container;
             $this->originalServiceId = $originalServiceId;
@@ -80,7 +84,7 @@ namespace Drupal\og_sm\ProxyClass\ParamConverter {
         /**
          * {@inheritdoc}
          */
-        public function applies($definition, $name, \Symfony\Component\Routing\Route $route)
+        public function applies($definition, $name, Route $route)
         {
             return $this->lazyLoadItself()->applies($definition, $name, $route);
         }
diff --git a/tests/src/Functional/NodeTypeTest.php b/tests/src/Functional/NodeTypeTest.php
index 7a64246..f6f2961 100644
--- a/tests/src/Functional/NodeTypeTest.php
+++ b/tests/src/Functional/NodeTypeTest.php
@@ -16,7 +16,7 @@ class NodeTypeTest extends OgSmWebTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $user = $this->drupalCreateUser(['administer content types']);
@@ -43,15 +43,17 @@ class NodeTypeTest extends OgSmWebTestBase {
     // Check if the Site Manager field is in the form.
     $this->drupalGet($url_not_group);
     $this->assertSession()->fieldExists('edit-og-sm-site-type');
+    $this->drupalGet($url_not_group);
 
     // Post the form with Site settings enabled for a non Group, this should
     // result in an error on screen.
-    $this->drupalPostForm($url_not_group, ['og_sm_site_type' => TRUE], $submit);
+    $this->submitForm(['og_sm_site_type' => TRUE], $submit);
     $this->assertSession()->pageTextContains(new TranslatableMarkup('A content type can only be a Site if it also a Group type.'));
     $this->assertEquals([], $site_type_manager->getSiteTypes());
+    $this->drupalGet($url_is_group);
 
     // Post it for a Group node should be successful.
-    $this->drupalPostForm($url_is_group, ['og_sm_site_type' => TRUE], $submit);
+    $this->submitForm(['og_sm_site_type' => TRUE], $submit);
     $this->assertSession()->responseContains(new TranslatableMarkup('The content type %type has been updated.', ['%type' => $type_is_group->label()]));
     $type_is_group = NodeType::load($type_is_group->id());
     $this->assertEquals([$type_is_group->id() => $type_is_group], $site_type_manager->getSiteTypes());
@@ -59,9 +61,10 @@ class NodeTypeTest extends OgSmWebTestBase {
     // Check if the checkbox is active.
     $this->drupalGet($url_is_group);
     $this->assertSession()->fieldExists('edit-og-sm-site-type');
+    $this->drupalGet($url_is_group);
 
     // Remove a node type from the Site types.
-    $this->drupalPostForm($url_is_group, ['og_sm_site_type' => FALSE], $submit);
+    $this->submitForm(['og_sm_site_type' => FALSE], $submit);
     $this->assertSession()->responseContains(new TranslatableMarkup('The content type %type has been updated.', ['%type' => $type_is_group->label()]));
     $this->assertEquals([], $site_type_manager->getSiteTypes());
 
@@ -82,7 +85,8 @@ class NodeTypeTest extends OgSmWebTestBase {
     $this->assertEquals([$type_is_group->id() => $type_is_group], $site_type_manager->getSiteTypes());
 
     $url_delete = 'admin/structure/types/manage/' . $type_is_group->id() . '/delete';
-    $this->drupalPostForm($url_delete, [], new TranslatableMarkup('Delete'));
+    $this->drupalGet($url_delete);
+    $this->submitForm([], new TranslatableMarkup('Delete'));
     $this->assertEquals([], $site_type_manager->getSiteTypes());
   }
 
diff --git a/tests/src/Kernel/OgSmKernelTestBase.php b/tests/src/Kernel/OgSmKernelTestBase.php
index 69d0fd6..5ce3123 100644
--- a/tests/src/Kernel/OgSmKernelTestBase.php
+++ b/tests/src/Kernel/OgSmKernelTestBase.php
@@ -39,14 +39,14 @@ abstract class OgSmKernelTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public static function setUpBeforeClass() {
+  public static function setUpBeforeClass(): void {
 
   }
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['field', 'og', 'og_sm']);
     $this->installSchema('system', ['sequences']);
diff --git a/tests/src/Kernel/SiteApiTest.php b/tests/src/Kernel/SiteApiTest.php
index 8bc46cd..228220b 100644
--- a/tests/src/Kernel/SiteApiTest.php
+++ b/tests/src/Kernel/SiteApiTest.php
@@ -17,7 +17,7 @@ class SiteApiTest extends OgSmKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('og_membership');
   }
diff --git a/tests/src/Kernel/SiteUserTest.php b/tests/src/Kernel/SiteUserTest.php
index 860664d..e22ede9 100644
--- a/tests/src/Kernel/SiteUserTest.php
+++ b/tests/src/Kernel/SiteUserTest.php
@@ -14,7 +14,7 @@ class SiteUserTest extends OgSmKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('og_membership');
   }
