modules/contrib/bt_crm/bt_crm.install
modules/contrib/bt_crm/modules/bt_crm_client/bt_crm_client.install
modules/contrib/bt_crm/modules/bt_crm_client/tests/src/Functional/LoadTest.php
modules/contrib/bt_crm/modules/bt_crm_company/tests/src/Functional/LoadTest.php
modules/contrib/bt_crm/modules/bt_crm_contact/tests/src/Functional/LoadTest.php
modules/contrib/bt_crm/modules/bt_crm_potential_client/tests/src/Functional/LoadTest.php
modules/contrib/bt_crm/modules/bt_crm_supplier/tests/src/Functional/LoadTest.php
modules/contrib/bt_crm/src/Plugin/WebformHandler/EmailWithContactIdTracking.php
modules/contrib/bt_crm/bt_crm.module
modules/contrib/bt_crm/modules/bt_crm_client/bt_crm_client.module
modules/contrib/bt_crm/modules/bt_crm_company/bt_crm_company.install
modules/contrib/bt_crm/modules/bt_crm_contact/bt_crm_contact.install
modules/contrib/bt_crm/modules/bt_crm_supplier/bt_crm_supplier.install
modules/contrib/bt_crm/src/Breadcrumb/ContactsBreadcrumbBuilder.php
modules/contrib/bt_crm/modules/bt_crm_potential_client/bt_crm_potential_client.install
modules/contrib/bt_crm/modules/bt_crm_company/bt_crm_company.module
modules/contrib/bt_crm/modules/bt_crm_contact/bt_crm_contact.module
modules/contrib/bt_crm/modules/bt_crm_supplier/bt_crm_supplier.module
modules/contrib/bt_crm/modules/bt_crm_potential_client/bt_crm_potential_client.module
modules/contrib/bt_crm/src/Breadcrumb/OpportunitiesBreadcrumbBuilder.php
modules/contrib/bt_crm/src/RedhenContactTypeAccessControlHandler.php
modules/contrib/bt_crm/src/BtOpportunityAccessControlHandler.php
modules/contrib/bt_crm/src/RedhenOrgTypeAccessControlHandler.php
modules/contrib/bt_crm/src/Routing/RouteSubscriber.php
modules/contrib/bt_crm/src/BtOpportunityInterface.php
modules/contrib/bt_crm/src/BtOpportunityListBuilder.php
modules/contrib/bt_crm/src/ContactViewsData.php
modules/contrib/bt_crm/src/Entity/BtOpportunity.php
modules/contrib/bt_crm/src/Form/BtOpportunityForm.php
modules/contrib/bt_crm/src/Form/BtOpportunitySettingsForm.php
modules/contrib/bt_crm/src/Form/ContactsDeleteForm.php
modules/contrib/bt_crm/src/Form/ConvertPotentialToClientConfirm.php
modules/contrib/bt_crm/src/Form/OrganizationsDeleteForm.php
modules/contrib/bt_crm/src/Plugin/Menu/LocalAction/CreateOpportunityLocalAction.php
modules/contrib/bt_crm/src/Plugin/WebformHandler/CreateRedhenContact.php

8 files with changes
====================

1) modules/contrib/bt_crm/modules/bt_crm_client/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ @@
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bt_crm/modules/bt_crm_company/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ @@
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/bt_crm/modules/bt_crm_potential_client/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ @@
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/bt_crm/modules/bt_crm_contact/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ @@
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/bt_crm/src/Form/OrganizationsDeleteForm.php:41

    ---------- begin diff ----------
@@ @@
       $untranslated_entity = $entity->getUntranslated();
       $untranslated_entity->removeTranslation($entity->language()->getId());
       $untranslated_entity->save();
-      $form_state->setRedirectUrl($untranslated_entity->urlInfo('canonical'));
+      $form_state->setRedirectUrl($untranslated_entity->toUrl('canonical'));
     }
     else {
       $entity->delete();
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceUrlInfoRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/bt_crm/src/Form/ContactsDeleteForm.php:41

    ---------- begin diff ----------
@@ @@
       $untranslated_entity = $entity->getUntranslated();
       $untranslated_entity->removeTranslation($entity->language()->getId());
       $untranslated_entity->save();
-      $form_state->setRedirectUrl($untranslated_entity->urlInfo('canonical'));
+      $form_state->setRedirectUrl($untranslated_entity->toUrl('canonical'));
     }
     else {
       $entity->delete();
    ----------- end diff -----------

Applied rules:
 * EntityInterfaceUrlInfoRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/bt_crm/src/Form/BtOpportunityForm.php:19

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New opportunity %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/bt_crm/modules/bt_crm_supplier/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ @@
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

