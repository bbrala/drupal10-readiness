diff --git a/maestro.install b/maestro.install
index 00dd77d..fafbbd1 100644
--- a/maestro.install
+++ b/maestro.install
@@ -115,7 +115,7 @@ function maestro_update_8003() {
 function maestro_update_8004() {
   $message = NULL;
   if (\Drupal::moduleHandler()->moduleExists('views') && !View::load('maestro_completed_tasks')) {
-    $config_path = drupal_get_path('module', 'maestro') . '/config/install/views.view.maestro_completed_tasks.yml';
+    $config_path = \Drupal::service('extension.list.module')->getPath('maestro') . '/config/install/views.view.maestro_completed_tasks.yml';
     $data = Yaml::parse(file_get_contents($config_path));
     \Drupal::configFactory()->getEditable('views.view.maestro_completed_tasks')->setData($data)->save(TRUE);
     $message = 'The new Maestro Completed Tasks view has been created.';
@@ -132,7 +132,7 @@ function maestro_update_8004() {
 function maestro_update_8005() {
   $message = NULL;
   if (\Drupal::moduleHandler()->moduleExists('views') && !View::load('maestro_entity_identifiers')) {
-    $config_path = drupal_get_path('module', 'maestro') . '/config/install/views.view.maestro_entity_identifiers.yml';
+    $config_path = \Drupal::service('extension.list.module')->getPath('maestro') . '/config/install/views.view.maestro_entity_identifiers.yml';
     $data = Yaml::parse(file_get_contents($config_path));
     \Drupal::configFactory()->getEditable('views.view.maestro_entity_identifiers')->setData($data)->save(TRUE);
     $message = 'The new Maestro Entity Identifiers view for the Task Console has been created.';
diff --git a/maestro.module b/maestro.module
index e472236..5eef991 100644
--- a/maestro.module
+++ b/maestro.module
@@ -759,7 +759,7 @@ function maestro_theme_registry_alter(&$theme_registry) {
 
   // Now, we actually want to use our own template, which is inside of our Maestro module templates folder.
   $theme_registry['maestro_views_view_table']['template'] = 'maestro-views-view-table';
-  $path = drupal_get_path('module', 'maestro');
+  $path = \Drupal::service('extension.list.module')->getPath('maestro');
   $theme_registry['maestro_views_view_table']['path'] = $path . '/templates';
 }
 
diff --git a/modules/examples/maestro_form_approval_example/src/ProxyClass/MaestroFormApprovalExampleUninstallValidator.php b/modules/examples/maestro_form_approval_example/src/ProxyClass/MaestroFormApprovalExampleUninstallValidator.php
index c821bfb..985a4f4 100644
--- a/modules/examples/maestro_form_approval_example/src/ProxyClass/MaestroFormApprovalExampleUninstallValidator.php
+++ b/modules/examples/maestro_form_approval_example/src/ProxyClass/MaestroFormApprovalExampleUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\maestro_form_approval_example\ProxyClass {
 
+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\maestro_form_approval_example\MaestroFormApprovalExampleUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class MaestroFormApprovalExampleUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class MaestroFormApprovalExampleUninstallValidator implements ModuleUninstallValidatorInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -46,7 +50,7 @@ namespace Drupal\maestro_form_approval_example\ProxyClass {
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\maestro_form_approval_example\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
diff --git a/modules/examples/maestro_interactive_task_plugin_example/src/ProxyClass/MaestroInteractiveExampleTaskUninstallValidator.php b/modules/examples/maestro_interactive_task_plugin_example/src/ProxyClass/MaestroInteractiveExampleTaskUninstallValidator.php
index 93c145a..adac896 100644
--- a/modules/examples/maestro_interactive_task_plugin_example/src/ProxyClass/MaestroInteractiveExampleTaskUninstallValidator.php
+++ b/modules/examples/maestro_interactive_task_plugin_example/src/ProxyClass/MaestroInteractiveExampleTaskUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\maestro_interactive_task_plugin_example\ProxyClass {
 
+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\maestro_interactive_task_plugin_example\MaestroInteractiveExampleTaskUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class MaestroInteractiveExampleTaskUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class MaestroInteractiveExampleTaskUninstallValidator implements ModuleUninstallValidatorInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -46,7 +50,7 @@ namespace Drupal\maestro_interactive_task_plugin_example\ProxyClass {
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\maestro_interactive_task_plugin_example\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
diff --git a/modules/examples/maestro_noninteractive_task_plugin_example/src/ProxyClass/MaestroNonInteractiveExampleTaskUninstallValidator.php b/modules/examples/maestro_noninteractive_task_plugin_example/src/ProxyClass/MaestroNonInteractiveExampleTaskUninstallValidator.php
index 957b1cb..2293ec1 100644
--- a/modules/examples/maestro_noninteractive_task_plugin_example/src/ProxyClass/MaestroNonInteractiveExampleTaskUninstallValidator.php
+++ b/modules/examples/maestro_noninteractive_task_plugin_example/src/ProxyClass/MaestroNonInteractiveExampleTaskUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\maestro_noninteractive_task_plugin_example\ProxyClass {
 
+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\maestro_noninteractive_task_plugin_example\MaestroNonInteractiveExampleTaskUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class MaestroNonInteractiveExampleTaskUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class MaestroNonInteractiveExampleTaskUninstallValidator implements ModuleUninstallValidatorInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -46,7 +50,7 @@ namespace Drupal\maestro_noninteractive_task_plugin_example\ProxyClass {
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\maestro_noninteractive_task_plugin_example\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
diff --git a/modules/maestro_webform/tests/src/Functional/LoadTest.php b/modules/maestro_webform/tests/src/Functional/LoadTest.php
index b480115..b86204e 100644
--- a/modules/maestro_webform/tests/src/Functional/LoadTest.php
+++ b/modules/maestro_webform/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -40,7 +40,7 @@ class LoadTest extends BrowserTestBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
