diff --git a/domain/src/EventSubscriber/DomainSubscriber.php b/domain/src/EventSubscriber/DomainSubscriber.php
index a170d3bc..1c43f0f6 100644
--- a/domain/src/EventSubscriber/DomainSubscriber.php
+++ b/domain/src/EventSubscriber/DomainSubscriber.php
@@ -82,12 +82,12 @@ class DomainSubscriber implements EventSubscriberInterface {
    * in one of two cases: an unauthorized request to an inactive domain is made;
    * a domain alias is set to redirect to its primary domain record.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The Event to process.
    *
    * @see domain_alias_domain_request_alter
    */
-  public function onKernelRequestDomain(GetResponseEvent $event) {
+  public function onKernelRequestDomain(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     // Negotiate the request and set domain context.
     /** @var \Drupal\domain\DomainInterface $domain */
     if ($domain = $this->domainNegotiator->getActiveDomain(TRUE)) {
diff --git a/domain_config_ui/tests/src/Traits/DomainConfigUITestTrait.php b/domain_config_ui/tests/src/Traits/DomainConfigUITestTrait.php
index 0f688176..38cb9c6d 100644
--- a/domain_config_ui/tests/src/Traits/DomainConfigUITestTrait.php
+++ b/domain_config_ui/tests/src/Traits/DomainConfigUITestTrait.php
@@ -106,11 +106,13 @@ trait DomainConfigUITestTrait {
     $edit = [
       'predefined_langcode' => 'es',
     ];
-    $this->drupalPostForm('admin/config/regional/language/add', $edit, t('Add language'));
+    $this->drupalGet('admin/config/regional/language/add');
+    $this->submitForm($edit, t('Add language'));
 
     // Enable URL language detection and selection.
     $edit = ['language_interface[enabled][language-url]' => '1'];
-    $this->drupalPostForm('admin/config/regional/language/detection', $edit, t('Save settings'));
+    $this->drupalGet('admin/config/regional/language/detection');
+    $this->submitForm($edit, t('Save settings'));
 
     $this->drupalLogout();
 
diff --git a/domain_source/src/EventSubscriber/DomainSourceRedirectResponseSubscriberD8.php b/domain_source/src/EventSubscriber/DomainSourceRedirectResponseSubscriberD8.php
index fad5e270..e9af9510 100644
--- a/domain_source/src/EventSubscriber/DomainSourceRedirectResponseSubscriberD8.php
+++ b/domain_source/src/EventSubscriber/DomainSourceRedirectResponseSubscriberD8.php
@@ -17,10 +17,10 @@ class DomainSourceRedirectResponseSubscriberD8 extends RedirectResponseSubscribe
   /**
    * Allows manipulation of the response object when performing a redirect.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The Event to process.
    */
-  public function checkRedirectUrl(FilterResponseEvent $event) {
+  public function checkRedirectUrl(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();
     if ($response instanceof RedirectResponse) {
       $request = $event->getRequest();
