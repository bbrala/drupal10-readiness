[parsing] modules/contrib/jsonapi_views/jsonapi_views.install
[refactoring] modules/contrib/jsonapi_views/jsonapi_views.install
[post rectors] modules/contrib/jsonapi_views/jsonapi_views.install
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/jsonapi_views/jsonapi_views.install
[parsing] modules/contrib/jsonapi_views/jsonapi_views.module
[refactoring] modules/contrib/jsonapi_views/jsonapi_views.module
[post rectors] modules/contrib/jsonapi_views/jsonapi_views.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/jsonapi_views/jsonapi_views.module
[parsing] modules/contrib/jsonapi_views/src/Plugin/views/display_extender/JsonapiViews.php
[refactoring] modules/contrib/jsonapi_views/src/Plugin/views/display_extender/JsonapiViews.php
[post rectors] modules/contrib/jsonapi_views/src/Plugin/views/display_extender/JsonapiViews.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/jsonapi_views/src/Plugin/views/display_extender/JsonapiViews.php
[parsing] modules/contrib/jsonapi_views/src/Resource/ViewsResource.php
[refactoring] modules/contrib/jsonapi_views/src/Resource/ViewsResource.php
[post rectors] modules/contrib/jsonapi_views/src/Resource/ViewsResource.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/jsonapi_views/src/Resource/ViewsResource.php
[parsing] modules/contrib/jsonapi_views/src/Routing/Routes.php
[refactoring] modules/contrib/jsonapi_views/src/Routing/Routes.php
[post rectors] modules/contrib/jsonapi_views/src/Routing/Routes.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/jsonapi_views/src/Routing/Routes.php
[parsing] modules/contrib/jsonapi_views/tests/src/Functional/JsonapiViewsResourceTest.php
[refactoring] modules/contrib/jsonapi_views/tests/src/Functional/JsonapiViewsResourceTest.php
[post rectors] modules/contrib/jsonapi_views/tests/src/Functional/JsonapiViewsResourceTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/jsonapi_views/tests/src/Functional/JsonapiViewsResourceTest.php
[refactoring] modules/contrib/jsonapi_views/tests/src/Functional/JsonapiViewsResourceTest.php
[post rectors] modules/contrib/jsonapi_views/tests/src/Functional/JsonapiViewsResourceTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/jsonapi_views/tests/src/Functional/JsonapiViewsResourceTest.php

1 file with changes
===================

1) modules/contrib/jsonapi_views/tests/src/Functional/JsonapiViewsResourceTest.php:137

    ---------- begin diff ----------
@@ @@
     $this->assertIsArray($response_document['data']);
     $this->assertArrayNotHasKey('errors', $response_document);
     $this->assertCount(2, $response_document['data']);
-    $this->assertEqual(2, $response_document['meta']['count']);
+    $this->assertEquals(2, $response_document['meta']['count']);
     $this->assertCacheContext($headers, 'url.query_args:page');
     $this->assertCacheTags($headers, [
       'config:views.view.jsonapi_views_test_node_view',
@@ @@
     $this->assertIsArray($response_document['data']);
     $this->assertArrayNotHasKey('errors', $response_document);
     $this->assertCount(1, $response_document['data']);
-    $this->assertEqual(1, $response_document['meta']['count']);
+    $this->assertEquals(1, $response_document['meta']['count']);
     $this->assertSame($room->uuid(), $response_document['data'][0]['id']);
     $this->assertCacheContext($headers, 'url.query_args:page');

@@ @@
     $this->assertIsArray($response_document['data']);
     $this->assertArrayNotHasKey('errors', $response_document);
     $this->assertCount(1, $response_document['data']);
-    $this->assertEqual(1, $response_document['meta']['count']);
+    $this->assertEquals(1, $response_document['meta']['count']);
     $this->assertSame($location->uuid(), $response_document['data'][0]['id']);
     $this->assertCacheContext($headers, 'url.query_args:page');

@@ @@
     );

     $this->assertCount(5, $response_document['data']);
-    $this->assertEqual(9, $response_document['meta']['count']);
+    $this->assertEquals(9, $response_document['meta']['count']);
     $this->assertArrayHasKey('next', $response_document['links']);
     $this->assertSame(array_slice(array_keys($nodes['all']), 0, 5), array_map(static function (array $data) {
       return $data['id'];
@@ @@
     );

     $this->assertCount(5, $response_document['data']);
-    $this->assertEqual(9, $response_document['meta']['count']);
+    $this->assertEquals(9, $response_document['meta']['count']);
     $this->assertArrayHasKey('next', $response_document['links']);
     $this->assertSame(array_slice(array_keys($nodes['all']), 0, 5), array_map(static function (array $data) {
       return $data['id'];
@@ @@
     );

     $this->assertCount(5, $response_document['data']);
-    $this->assertEqual(5, $response_document['meta']['count']);
+    $this->assertEquals(5, $response_document['meta']['count']);
     $this->assertSame(array_keys($nodes['paged'][0]), array_map(static function (array $data) {
       return $data['id'];
     }, $response_document['data']));
@@ @@
     );

     $this->assertCount(5, $response_document['data']);
-    $this->assertEqual(12, $response_document['meta']['count']);
+    $this->assertEquals(12, $response_document['meta']['count']);
     $this->assertSame(array_keys($nodes['paged'][0]), array_map(static function (array $data) {
       return $data['id'];
     }, $response_document['data']));
@@ @@
     );

     $this->assertCount(5, $response_document['data']);
-    $this->assertEqual(12, $response_document['meta']['count']);
+    $this->assertEquals(12, $response_document['meta']['count']);
     $this->assertSame(array_keys($nodes['paged'][1]), array_map(static function (array $data) {
       return $data['id'];
     }, $response_document['data']));
@@ @@
     );

     $this->assertCount(2, $response_document['data']);
-    $this->assertEqual(12, $response_document['meta']['count']);
+    $this->assertEquals(12, $response_document['meta']['count']);
     $this->assertSame(array_keys($nodes['paged'][2]), array_map(static function (array $data) {
       return $data['id'];
     }, $response_document['data']));
@@ @@
     );

     $this->assertCount(0, $response_document['data']);
-    $this->assertEqual(12, $response_document['meta']['count']);
+    $this->assertEquals(12, $response_document['meta']['count']);
     $this->assertArrayNotHasKey('next', $response_document['links']);
     $this->assertCacheContext($headers, 'url.query_args:page');
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector


 [OK] 1 file has been changed by Rector                                         

