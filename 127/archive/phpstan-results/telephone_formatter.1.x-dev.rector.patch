diff --git a/tests/src/Functional/FieldFormatterTest.php b/tests/src/Functional/FieldFormatterTest.php
index 827427a..88ed74b 100644
--- a/tests/src/Functional/FieldFormatterTest.php
+++ b/tests/src/Functional/FieldFormatterTest.php
@@ -36,7 +36,7 @@ class FieldFormatterTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'page']);
diff --git a/tests/src/Unit/FormatterTest.php b/tests/src/Unit/FormatterTest.php
index 72e82c7..fed98ee 100644
--- a/tests/src/Unit/FormatterTest.php
+++ b/tests/src/Unit/FormatterTest.php
@@ -32,7 +32,7 @@ class FormatterTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->languageManager = $this->createMock('\Drupal\Core\Language\LanguageManagerInterface');
     $this->formatterService = new Formatter($this->languageManager);
@@ -57,10 +57,9 @@ class FormatterTest extends UnitTestCase {
    * Valid national number but missing region code.
    *
    * ::covers format.
-   *
-   * @expectedException \libphonenumber\NumberParseException
    */
   public function testUnparsableNumber() {
+    $this->expectException(\libphonenumber\NumberParseException::class);
     $this->formatterService->format('98765432', PhoneNumberFormat::NATIONAL);
   }
 
@@ -68,11 +67,10 @@ class FormatterTest extends UnitTestCase {
    * Number was successfully parsed but invalid.
    *
    * ::covers format.
-   *
-   * @expectedException \InvalidArgumentException
-   * @expectedExceptionMessage Number is invalid.
    */
   public function testInvalidNumber() {
+    $this->expectException(\InvalidArgumentException::class);
+    $this->expectExceptionMessage('Number is invalid.');
     $this->formatterService->format('987654320', PhoneNumberFormat::NATIONAL, 'NO');
   }
 
