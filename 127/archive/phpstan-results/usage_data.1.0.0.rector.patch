diff --git a/src/EntityStatisticsStorage.php b/src/EntityStatisticsStorage.php
index acb627f..dbfbe87 100644
--- a/src/EntityStatisticsStorage.php
+++ b/src/EntityStatisticsStorage.php
@@ -82,7 +82,7 @@ class EntityStatisticsStorage implements EntityStatisticsStorageInterface {
      * assign it to the proper column.
      */
     $event = new RecordingViewEvent($data);
-    $this->eventDispatcher->dispatch(UsageDataEvents::RECORD_VIEW, $event);
+    $this->eventDispatcher->dispatch($event, UsageDataEvents::RECORD_VIEW);
     $data = $event->getData();
 
     // Removing extra data.
diff --git a/src/Event/CollectExtraDataEvent.php b/src/Event/CollectExtraDataEvent.php
index e26c110..6b8d471 100644
--- a/src/Event/CollectExtraDataEvent.php
+++ b/src/Event/CollectExtraDataEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event fired when collecting extra data to be passed to the ajax call.
  */
-class CollectExtraDataEvent extends Event {
+class CollectExtraDataEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The data to be recorded.
diff --git a/src/Event/RecordingViewEvent.php b/src/Event/RecordingViewEvent.php
index dee4b32..f39065f 100644
--- a/src/Event/RecordingViewEvent.php
+++ b/src/Event/RecordingViewEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event fired when a view record data is about to be stored.
  */
-final class RecordingViewEvent extends Event {
+final class RecordingViewEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The data to be recorded.
