diff --git a/tests/src/Functional/DeprecationStatusSmokeTest.php b/tests/src/Functional/DeprecationStatusSmokeTest.php
index cbdcc4d..24c1d87 100644
--- a/tests/src/Functional/DeprecationStatusSmokeTest.php
+++ b/tests/src/Functional/DeprecationStatusSmokeTest.php
@@ -33,42 +33,87 @@ class DeprecationStatusSmokeTest extends BrowserTestBase {
 
     $this->drupalGet(Url::fromRoute('deprecation_status.projects_form'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter projects');
-    $this->assertText('Covered by rector');
-    $this->assertText('pathauto');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Filter projects');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Covered by rector');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('pathauto');
 
     $this->drupalGet(Url::fromRoute('deprecation_status.projects_form10'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter projects');
-    $this->assertText('Covered by rector');
-    $this->assertText('pathauto');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Filter projects');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Covered by rector');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('pathauto');
 
     $this->drupalGet(Url::fromRoute('deprecation_status.errors_form'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter errors');
-    $this->assertText('Covered by rector');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Filter errors');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Covered by rector');
 
     $this->drupalGet(Url::fromRoute('deprecation_status.errors_form10'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter errors');
-    $this->assertText('Covered by rector');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Filter errors');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Covered by rector');
 
     $this->drupalGet(Url::fromRoute('deprecation_status.error', ['error_index' => 1]));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Deprecation error details');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Deprecation error details');
 
     $this->drupalGet(Url::fromRoute('deprecation_status.error10', ['error_index' => 1]));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Deprecation error details');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Deprecation error details');
 
     $this->drupalGet(Url::fromRoute('deprecation_status.graphs'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Percentage of contributed projects by status in usage groups');
-    $this->assertText('All drupal.org contributed projects by status over time');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Percentage of contributed projects by status in usage groups');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('All drupal.org contributed projects by status over time');
 
     $this->drupalGet(Url::fromRoute('deprecation_status.graphs10'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Tracking based on @deprecated and E_USER_DEPRECATED mentions in Drupal 9 core.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Tracking based on @deprecated and E_USER_DEPRECATED mentions in Drupal 9 core.');
 
     $this->drupalGet(Url::fromRoute('deprecation_status.update'));
     $this->assertSession()->statusCodeEquals(403);
@@ -81,9 +126,18 @@ class DeprecationStatusSmokeTest extends BrowserTestBase {
     $this->drupalLogin($this->drupalCreateUser(['access administration pages']));
     $this->drupalGet(Url::fromRoute('deprecation_status.update'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Shipped dataset');
-    $this->assertText('Current live dataset');
-    $this->assertText('Online dataset');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Shipped dataset');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Current live dataset');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Online dataset');
   }
 
 }
