diff --git a/src/Plugin/FilefieldSource/Clipboard.php b/src/Plugin/FilefieldSource/Clipboard.php
index ad04968..fe6d54a 100644
--- a/src/Plugin/FilefieldSource/Clipboard.php
+++ b/src/Plugin/FilefieldSource/Clipboard.php
@@ -58,7 +58,7 @@ class Clipboard implements FilefieldSourceInterface {
 
       $filename = trim($input['filefield_clipboard']['filename']);
       $filename = preg_replace('/\.[a-z0-9]{3,4}$/', '', $filename);
-      $filename = (empty($filename) ? 'paste_' . REQUEST_TIME : $filename) . '.' . $extension;
+      $filename = (empty($filename) ? 'paste_' . \Drupal::time()->getRequestTime() : $filename) . '.' . $extension;
       $filepath = \Drupal::service('file_system')->createFilename($filename, $temporary_directory);
 
       $copy_success = FALSE;
diff --git a/src/ProxyClass/File/MimeType/ExtensionMimeTypeGuesser.php b/src/ProxyClass/File/MimeType/ExtensionMimeTypeGuesser.php
index 241f728..7efe08f 100644
--- a/src/ProxyClass/File/MimeType/ExtensionMimeTypeGuesser.php
+++ b/src/ProxyClass/File/MimeType/ExtensionMimeTypeGuesser.php
@@ -12,7 +12,7 @@ namespace Drupal\filefield_sources\ProxyClass\File\MimeType {
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class ExtensionMimeTypeGuesser implements \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+    class ExtensionMimeTypeGuesser implements \Symfony\Component\Mime\MimeTypesInterface
     {
 
         use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
diff --git a/tests/src/Functional/AttachSourceTest.php b/tests/src/Functional/AttachSourceTest.php
index 22b1911..dee80cd 100644
--- a/tests/src/Functional/AttachSourceTest.php
+++ b/tests/src/Functional/AttachSourceTest.php
@@ -15,6 +15,7 @@ class AttachSourceTest extends FileFieldSourcesTestBase {
    * Tests move relative files with different names.
    *
    * Default settings: Move file from 'public://file_attach' to 'public://'.
+   * @doesNotPerformAssertions
    */
   public function testMoveFilesFromRelativePath() {
     $uri_scheme = $this->getFieldSetting('uri_scheme');
@@ -96,7 +97,10 @@ class AttachSourceTest extends FileFieldSourcesTestBase {
     $this->assertTrue($this->isOptionPresent($file->uri), 'File option is present.');
 
     // Ensure empty message is not present.
-    $this->assertNoText('There currently are no files to attach.', "Empty message is not present.");
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('There currently are no files to attach.');
 
     // Attach button is always present.
     $this->assertFieldByXpath('//input[@type="submit"]', t('Attach'), 'Attach button is present.');
@@ -130,7 +134,10 @@ class AttachSourceTest extends FileFieldSourcesTestBase {
     $this->assertFalse($this->isOptionPresent($file->uri), 'File option is not present.');
 
     // Ensure empty message is present.
-    $this->assertText('There currently are no files to attach.', "Empty message is present.");
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('There currently are no files to attach.');
 
     // Attach button is always present.
     $this->assertFieldByXpath('//input[@type="submit"]', t('Attach'), 'Attach button is present.');
