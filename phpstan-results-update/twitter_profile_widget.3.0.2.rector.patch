diff --git a/src/Authorization.php b/src/Authorization.php
index 3084062..e688495 100644
--- a/src/Authorization.php
+++ b/src/Authorization.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\twitter_profile_widget;
 
+use function GuzzleHttp\Psr7\str;
 use Drupal\Core\Cache\Cache;
 use GuzzleHttp\Client;
 use GuzzleHttp\Psr7;
@@ -50,7 +51,7 @@ class Authorization {
       if ($e->hasResponse()) {
         $messenger = \Drupal::messenger();
         $messenger->addMessage($e->getResponse()->getBody()->getContents(), 'error');
-        \Drupal::logger('twitter_profile_widget')->error(Psr7\str($e->getResponse()));
+        \Drupal::logger('twitter_profile_widget')->error(str($e->getResponse()));
         return FALSE;
       }
     }
diff --git a/src/EventSubscriber/TwitterWidgetSubscriber.php b/src/EventSubscriber/TwitterWidgetSubscriber.php
index f27b241..f692fe8 100644
--- a/src/EventSubscriber/TwitterWidgetSubscriber.php
+++ b/src/EventSubscriber/TwitterWidgetSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\twitter_profile_widget\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\Core\Cache\Context\CacheContextsManager;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -9,7 +10,6 @@ use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\PageCache\RequestPolicyInterface;
 use Drupal\Core\PageCache\ResponsePolicyInterface;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
@@ -90,10 +90,10 @@ class TwitterWidgetSubscriber implements EventSubscriberInterface {
   /**
    * Sets extra headers on successful responses.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
 
     $request = $event->getRequest();
     $response = $event->getResponse();
