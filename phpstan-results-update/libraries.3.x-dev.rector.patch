diff --git a/libraries.api.php b/libraries.api.php
index 7e127ae..ec4a3e8 100644
--- a/libraries.api.php
+++ b/libraries.api.php
@@ -605,5 +605,5 @@ function hook_libraries_info_alter(&$libraries) {
 function hook_libraries_info_file_paths() {
   // Taken from the Libraries test module, which needs to specify the path to
   // the test library.
-  return [drupal_get_path('module', 'libraries_test') . '/example'];
+  return [\Drupal::service('extension.list.module')->getPath('libraries_test') . '/example'];
 }
diff --git a/libraries.module b/libraries.module
index a4b0d89..647a1ee 100644
--- a/libraries.module
+++ b/libraries.module
@@ -117,7 +117,7 @@ function libraries_get_libraries() {
   // profile, installation profiles may want to place libraries into a
   // 'libraries' directory.
   if ($profile = \Drupal::installProfile()) {
-    $profile_path = drupal_get_path('profile', $profile);
+    $profile_path = \Drupal::service('extension.list.profile')->getPath($profile);
     $searchdir[] = "$profile_path/libraries";
   };
 
@@ -168,7 +168,7 @@ function libraries_get_libraries() {
  * https://www.drupal.org/node/2170763
  */
 function libraries_scan_info_files() {
-  $profile = drupal_get_path('profile', \Drupal::installProfile());
+  $profile = \Drupal::service('extension.list.profile')->getPath(\Drupal::installProfile());
   $config = DrupalKernel::findSitePath(\Drupal::request());
 
   // Build a list of directories.
@@ -808,7 +808,7 @@ function libraries_load_files($library) {
       libraries_load_files([
         'files' => $files,
         'path' => '',
-        'library path' => drupal_get_path('module', $module),
+        'library path' => \Drupal::service('extension.list.module')->getPath($module),
       ]);
     }
   }
diff --git a/src/Plugin/libraries/Locator/UriLocator.php b/src/Plugin/libraries/Locator/UriLocator.php
index 2732505..aa53183 100644
--- a/src/Plugin/libraries/Locator/UriLocator.php
+++ b/src/Plugin/libraries/Locator/UriLocator.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\libraries\Plugin\libraries\Locator;
 
+use Drupal\Core\StreamWrapper\LocalStream;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
@@ -73,7 +74,7 @@ class UriLocator implements LocatorInterface, ContainerFactoryPluginInterface {
   public function locate(LocalLibraryInterface $library) {
     /** @var \Drupal\Core\StreamWrapper\LocalStream $stream_wrapper */
     $stream_wrapper = $this->streamWrapperManager->getViaUri($this->uri);
-    assert($stream_wrapper instanceof \Drupal\Core\StreamWrapper\LocalStream);
+    assert($stream_wrapper instanceof LocalStream);
     // Calling LocalStream::getDirectoryPath() explicitly avoids the realpath()
     // usage in LocalStream::getLocalPath(), which breaks if Libraries API is
     // symbolically linked into the Drupal installation.
diff --git a/src/Plugin/libraries/Type/AssetLibraryType.php b/src/Plugin/libraries/Type/AssetLibraryType.php
index a92f27d..9cd5b52 100644
--- a/src/Plugin/libraries/Type/AssetLibraryType.php
+++ b/src/Plugin/libraries/Type/AssetLibraryType.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\libraries\Plugin\libraries\Type;
 
+use Drupal\libraries\ExternalLibrary\Asset\AssetLibraryInterface;
 use Drupal\libraries\ExternalLibrary\Asset\AssetLibrary;
 use Drupal\libraries\ExternalLibrary\Asset\AttachableAssetLibraryRegistrationInterface;
 use Drupal\libraries\ExternalLibrary\LibraryInterface;
@@ -24,7 +25,7 @@ class AssetLibraryType extends LibraryTypeBase implements AttachableAssetLibrary
    * {@inheritdoc}
    */
   public function getAttachableAssetLibraries(LibraryInterface $library, LibraryManagerInterface $library_manager) {
-    assert($library instanceof \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryInterface);
+    assert($library instanceof AssetLibraryInterface);
     /** @var \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryInterface $library */
     return [$library->getId() => $library->getAttachableAssetLibrary($library_manager)];
   }
diff --git a/src/Plugin/libraries/Type/MultipleAssetLibraryType.php b/src/Plugin/libraries/Type/MultipleAssetLibraryType.php
index f73887e..b1b8984 100644
--- a/src/Plugin/libraries/Type/MultipleAssetLibraryType.php
+++ b/src/Plugin/libraries/Type/MultipleAssetLibraryType.php
@@ -25,7 +25,7 @@ class MultipleAssetLibraryType extends LibraryTypeBase implements AttachableAsse
    * {@inheritdoc}
    */
   public function getAttachableAssetLibraries(LibraryInterface $external_library, LibraryManagerInterface $library_manager) {
-    assert($external_library instanceof \Drupal\libraries\ExternalLibrary\Asset\MultipleAssetLibraryInterface);
+    assert($external_library instanceof MultipleAssetLibraryInterface);
     /** @var \Drupal\libraries\ExternalLibrary\Asset\MultipleAssetLibraryInterface $external_library */
     $attachable_libraries = [];
     foreach ($external_library->getAttachableAssetLibraries($library_manager) as $component_name => $attachable_library) {
diff --git a/tests/modules/libraries_test/libraries_test.module b/tests/modules/libraries_test/libraries_test.module
index 2f6ee0e..89b0eca 100644
--- a/tests/modules/libraries_test/libraries_test.module
+++ b/tests/modules/libraries_test/libraries_test.module
@@ -15,17 +15,17 @@ function libraries_test_libraries_info() {
   // Test library detection.
   $libraries['example_missing'] = [
     'name' => 'Example missing',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/missing',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/missing',
   ];
   $libraries['example_undetected_version'] = [
     'name' => 'Example undetected version',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests',
     'version callback' => '_libraries_test_return_version',
     'version arguments' => [FALSE],
   ];
   $libraries['example_unsupported_version'] = [
     'name' => 'Example unsupported version',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests',
     'version callback' => '_libraries_test_return_version',
     'version arguments' => ['1'],
     'versions' => [
@@ -35,7 +35,7 @@ function libraries_test_libraries_info() {
 
   $libraries['example_supported_version'] = [
     'name' => 'Example supported version',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests',
     'version callback' => '_libraries_test_return_version',
     'version arguments' => ['1'],
     'versions' => [
@@ -46,7 +46,7 @@ function libraries_test_libraries_info() {
   // Test the default version callback.
   $libraries['example_default_version_callback'] = [
     'name' => 'Example default version callback',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version arguments' => [
       'file' => 'README.txt',
       // Version 1
@@ -58,7 +58,7 @@ function libraries_test_libraries_info() {
   // Test a multiple-parameter version callback.
   $libraries['example_multiple_parameter_version_callback'] = [
     'name' => 'Example multiple parameter version callback',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     // Version 1
     'version callback' => '_libraries_test_get_version',
     'version arguments' => ['README.txt', '/Version (\d+)/', 5],
@@ -67,7 +67,7 @@ function libraries_test_libraries_info() {
   // Test a top-level files property.
   $libraries['example_files'] = [
     'name' => 'Example files',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '1',
     'files' => [
       'js' => ['example_1.js'],
@@ -81,7 +81,7 @@ function libraries_test_libraries_info() {
   // these files should be automatically loaded when the library is loaded.
   $libraries['example_integration_files'] = [
     'name' => 'Example integration files',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '1',
     'integration files' => [
       'libraries_test' => [
@@ -95,7 +95,7 @@ function libraries_test_libraries_info() {
   // Test version overloading.
   $libraries['example_versions'] = [
     'name' => 'Example versions',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '2',
     'versions' => [
       '1' => [
@@ -118,7 +118,7 @@ function libraries_test_libraries_info() {
   // Test variant detection.
   $libraries['example_variant_missing'] = [
     'name' => 'Example variant missing',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '1',
     'variants' => [
       'example_variant' => [
@@ -135,7 +135,7 @@ function libraries_test_libraries_info() {
 
   $libraries['example_variant'] = [
     'name' => 'Example variant',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '1',
     'variants' => [
       'example_variant' => [
@@ -153,7 +153,7 @@ function libraries_test_libraries_info() {
   // Test correct behaviour with multiple versions and multiple variants.
   $libraries['example_versions_and_variants'] = [
     'name' => 'Example versions and variants',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '2',
     'versions' => [
       '1' => [
@@ -209,27 +209,27 @@ function libraries_test_libraries_info() {
   // This library acts as a dependency for the libraries below.
   $libraries['example_dependency'] = [
     'name' => 'Example dependency',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '1.1',
     'files' => ['js' => ['example_1.js']],
   ];
   $libraries['example_dependency_missing'] = [
     'name' => 'Example dependency missing',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '1',
     'dependencies' => ['example_missing'],
     'files' => ['js' => ['example_1.js']],
   ];
   $libraries['example_dependency_incompatible'] = [
     'name' => 'Example dependency incompatible',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '1',
     'dependencies' => ['example_dependency (>1.1)'],
     'files' => ['js' => ['example_1.js']],
   ];
   $libraries['example_dependency_compatible'] = [
     'name' => 'Example dependency compatible',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '1',
     'dependencies' => ['example_dependency (>=1.1)'],
     'files' => ['js' => ['example_1.js']],
@@ -238,7 +238,7 @@ function libraries_test_libraries_info() {
   // Test the applying of callbacks.
   $libraries['example_callback'] = [
     'name' => 'Example callback',
-    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+    'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
     'version' => '1',
     'versions' => [
       '1' => [
@@ -292,7 +292,7 @@ function libraries_test_libraries_info() {
  * Implements hook_libraries_info_file_paths()
  */
 function libraries_test_libraries_info_file_paths() {
-  return [drupal_get_path('module', 'libraries') . '/tests/example'];
+  return [\Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example'];
 }
 
 /**
diff --git a/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php b/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php
index 0fee23e..47efb3a 100644
--- a/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php
+++ b/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php
@@ -44,7 +44,7 @@ class DefinitionDiscoveryFactoryTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
@@ -115,9 +115,9 @@ class DefinitionDiscoveryFactoryTest extends BrowserTestBase {
     /** @var \Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface $discovery */
     $discovery = $this->container->get($discovery_service_id);
     $definition_file = "$definitions_directory/$library_id.json";
-    $this->assertFileNotExists($definition_file);
+    $this->assertFileDoesNotExist($definition_file);
     $this->assertTrue($discovery->hasDefinition($library_id));
-    $this->assertFileNotExists($definition_file);
+    $this->assertFileDoesNotExist($definition_file);
     $this->assertEquals($discovery->getDefinition($library_id), $expected_definition);
     $this->assertFileExists($definition_file);
   }
diff --git a/tests/src/Functional/LibrariesWebTest.php b/tests/src/Functional/LibrariesWebTest.php
index c109094..c52b9a6 100644
--- a/tests/src/Functional/LibrariesWebTest.php
+++ b/tests/src/Functional/LibrariesWebTest.php
@@ -48,7 +48,7 @@ class LibrariesWebTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->urlAssembler = $this->container->get('unrouted_url_assembler');
@@ -138,7 +138,7 @@ class LibrariesWebTest extends BrowserTestBase {
   public function testLibrariesScanInfoFiles() {
     $expected = [
       'example_info_file' => (object) [
-        'uri' => drupal_get_path('module', 'libraries') . '/tests/example/example_info_file.libraries.info.yml',
+        'uri' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example/example_info_file.libraries.info.yml',
         'filename' => 'example_info_file.libraries.info.yml',
         'name' => 'example_info_file.libraries.info',
       ],
@@ -157,7 +157,7 @@ class LibrariesWebTest extends BrowserTestBase {
     // Test that library information is found correctly.
     $expected = [
       'name' => 'Example files',
-      'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+      'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
       'version' => '1',
       'files' => [
         'js' => ['example_1.js' => []],
@@ -175,7 +175,7 @@ class LibrariesWebTest extends BrowserTestBase {
     // Test a library specified with an .info file gets detected.
     $expected = [
       'name' => 'Example info file',
-      'info file' => drupal_get_path('module', 'libraries') . '/tests/example/example_info_file.libraries.info.yml',
+      'info file' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example/example_info_file.libraries.info.yml',
     ];
     libraries_info_defaults($expected, 'example_info_file');
     $library = libraries_info('example_info_file');
@@ -298,7 +298,7 @@ class LibrariesWebTest extends BrowserTestBase {
   public function testCallbacks() {
     $expected = [
       'name' => 'Example callback',
-      'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
+      'library path' => \Drupal::service('extension.list.module')->getPath('libraries') . '/tests/example',
       'version' => '1',
       'versions' => [
         '1' => [
@@ -414,9 +414,9 @@ class LibrariesWebTest extends BrowserTestBase {
 
     // Test loading of integration files.
     $this->drupalGet('libraries_test/integration_files');
-    $this->assertRaw('libraries_test.js', 'Integration file loading: libraries_test.js found');
-    $this->assertRaw('libraries_test.css', 'Integration file loading: libraries_test.css found');
-    $this->assertRaw('libraries_test.inc', 'Integration file loading: libraries_test.inc found');
+    $this->assertSession()->responseContains('libraries_test.js');
+    $this->assertSession()->responseContains('libraries_test.css');
+    $this->assertSession()->responseContains('libraries_test.inc');
 
     // Test version overloading.
     $this->drupalGet('libraries_test/versions');
@@ -436,19 +436,19 @@ class LibrariesWebTest extends BrowserTestBase {
     // When the library information is not cached, all callback groups should be
     // invoked.
     $this->drupalGet('libraries_test/cache');
-    $this->assertRaw('The <em>info</em> callback group was invoked.', 'Info callback invoked for uncached libraries.');
-    $this->assertRaw('The <em>pre-detect</em> callback group was invoked.', 'Pre-detect callback invoked for uncached libraries.');
-    $this->assertRaw('The <em>post-detect</em> callback group was invoked.', 'Post-detect callback invoked for uncached libraries.');
-    $this->assertRaw('The <em>pre-load</em> callback group was invoked.', 'Pre-load callback invoked for uncached libraries.');
-    $this->assertRaw('The <em>post-load</em> callback group was invoked.', 'Post-load callback invoked for uncached libraries.');
+    $this->assertSession()->responseContains('The <em>info</em> callback group was invoked.');
+    $this->assertSession()->responseContains('The <em>pre-detect</em> callback group was invoked.');
+    $this->assertSession()->responseContains('The <em>post-detect</em> callback group was invoked.');
+    $this->assertSession()->responseContains('The <em>pre-load</em> callback group was invoked.');
+    $this->assertSession()->responseContains('The <em>post-load</em> callback group was invoked.');
     // When the library information is cached only the 'pre-load' and
     // 'post-load' callback groups should be invoked.
     $this->drupalGet('libraries_test/cache');
-    $this->assertNoRaw('The <em>info</em> callback group was not invoked.', 'Info callback not invoked for cached libraries.');
-    $this->assertNoRaw('The <em>pre-detect</em> callback group was not invoked.', 'Pre-detect callback not invoked for cached libraries.');
-    $this->assertNoRaw('The <em>post-detect</em> callback group was not invoked.', 'Post-detect callback not invoked for cached libraries.');
-    $this->assertRaw('The <em>pre-load</em> callback group was invoked.', 'Pre-load callback invoked for cached libraries.');
-    $this->assertRaw('The <em>post-load</em> callback group was invoked.', 'Post-load callback invoked for cached libraries.');
+    $this->assertSession()->responseNotContains('The <em>info</em> callback group was not invoked.');
+    $this->assertSession()->responseNotContains('The <em>pre-detect</em> callback group was not invoked.');
+    $this->assertSession()->responseNotContains('The <em>post-detect</em> callback group was not invoked.');
+    $this->assertSession()->responseContains('The <em>pre-load</em> callback group was invoked.');
+    $this->assertSession()->responseContains('The <em>post-load</em> callback group was invoked.');
     \Drupal::state()->set('libraries_test.cache', FALSE);
   }
 
@@ -500,7 +500,7 @@ class LibrariesWebTest extends BrowserTestBase {
 
     foreach ($names as $name => $expected) {
       foreach ($extensions as $extension) {
-        $filepath = drupal_get_path('module', 'libraries') . "/tests/example/$name.$extension";
+        $filepath = \Drupal::service('extension.list.module')->getPath('libraries') . "/tests/example/$name.$extension";
         // JavaScript and CSS files appear as full URLs and with an appended
         // query string.
         if (in_array($extension, ['js', 'css'])) {
@@ -517,11 +517,11 @@ class LibrariesWebTest extends BrowserTestBase {
         $raw = $prefix . $filepath . $suffix;
         if ($expected) {
           $html_expected[] = Html::escape($raw);
-          $this->assertRaw($raw, "$label$name.$extension found.");
+          $this->assertSession()->responseContains($raw);
         }
         else {
           $html_not_expected[] = Html::escape($raw);
-          $this->assertNoRaw($raw, "$label$name.$extension not found.");
+          $this->assertSession()->responseNotContains($raw);
         }
       }
     }
diff --git a/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTestBase.php b/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTestBase.php
index 4f835b7..59a2382 100644
--- a/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTestBase.php
+++ b/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTestBase.php
@@ -28,7 +28,7 @@ abstract class AssetLibraryTestBase extends LibraryTypeKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->coreLibraryDiscovery = $this->container->get('library.discovery');
   }
diff --git a/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php b/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php
index 84eb86e..39a361d 100644
--- a/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php
+++ b/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php
@@ -15,7 +15,7 @@ class GlobalLocatorTest extends LibraryTypeKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Assign our test stream (which points to the test php lib) to the asset
     // scheme. This gives us a scheme to work with in the test that is not
diff --git a/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php b/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php
index 10c1d2c..75098e7 100644
--- a/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php
+++ b/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php
@@ -15,7 +15,7 @@ class PhpFileLibraryTest extends LibraryTypeKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->container->set('stream_wrapper.php_file_libraries', new TestLibraryFilesStream(
diff --git a/tests/src/Kernel/LibraryTypeKernelTestBase.php b/tests/src/Kernel/LibraryTypeKernelTestBase.php
index 8185794..37cd54d 100644
--- a/tests/src/Kernel/LibraryTypeKernelTestBase.php
+++ b/tests/src/Kernel/LibraryTypeKernelTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\libraries\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException;
@@ -14,6 +15,7 @@ use Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface;
  */
 abstract class LibraryTypeKernelTestBase extends KernelTestBase {
 
+  use ProphecyTrait;
   /**
    * The external library manager.
    *
@@ -50,7 +52,7 @@ abstract class LibraryTypeKernelTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
diff --git a/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php b/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php
index 9f60071..ab9ed61 100644
--- a/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php
+++ b/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\libraries\Unit\Plugin\libraries\VersionDetector;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
 use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface;
 use Drupal\libraries\Plugin\libraries\VersionDetector\LinePatternDetector;
@@ -18,6 +19,7 @@ use org\bovigo\vfs\vfsStream;
  */
 class LinePatternDetectorTest extends UnitTestCase {
 
+  use ProphecyTrait;
   protected $libraryId = 'test_library';
 
   /**
