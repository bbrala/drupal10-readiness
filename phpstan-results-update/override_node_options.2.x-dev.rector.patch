diff --git a/composer.json b/composer.json
index 039feee..cea8fde 100644
--- a/composer.json
+++ b/composer.json
@@ -11,7 +11,7 @@
   ],
   "minimum-stability": "dev",
   "require": {
-    "drupal/core": "^8 || ^9"
+    "drupal/core": "^9.1 || ^10"
   },
   "prefer-stable": true
 }
diff --git a/override_node_options.info.yml b/override_node_options.info.yml
index 92fc850..2c72915 100644
--- a/override_node_options.info.yml
+++ b/override_node_options.info.yml
@@ -1,8 +1,7 @@
 name: Override Node Options
 description: Allow non-admins to override the default publishing options for nodes they can edit.
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Permissions
 configure: override_node_options.settings
 dependencies:
diff --git a/tests/src/Functional/BulkFormTest.php b/tests/src/Functional/BulkFormTest.php
index 2fbca49..4acc234 100644
--- a/tests/src/Functional/BulkFormTest.php
+++ b/tests/src/Functional/BulkFormTest.php
@@ -55,7 +55,7 @@ class BulkFormTest extends BrowserTestBase {
       'node_bulk_form[0]' => TRUE,
     ];
 
-    $this->drupalPostForm(NULL, $edit, t('Apply to selected items'));
+    $this->submitForm($edit, t('Apply to selected items'));
 
     $this->assertSession()->pageTextContains('Unpublish content was applied to 1 item.');
     $this->assertSession()->pageTextNotContains('No access to execute Unpublish content');
diff --git a/tests/src/Functional/NodeFormTest.php b/tests/src/Functional/NodeFormTest.php
index 7de1199..8768fe6 100644
--- a/tests/src/Functional/NodeFormTest.php
+++ b/tests/src/Functional/NodeFormTest.php
@@ -41,7 +41,7 @@ class NodeFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $types = NodeType::loadMultiple();
@@ -141,16 +141,13 @@ class NodeFormTest extends BrowserTestBase {
 
     foreach ([$specific_user, $general_user] as $user) {
       $this->drupalLogin($user);
+      $this->drupalGet("node/{$this->node->id()}/edit");
 
-      $this->drupalPostForm(
-        "node/{$this->node->id()}/edit",
-        [
-          'promote[value]' => TRUE,
-          'status[value]' => TRUE,
-          'sticky[value]' => TRUE,
-        ],
-        t('Save')
-      );
+      $this->submitForm([
+        'promote[value]' => TRUE,
+        'status[value]' => TRUE,
+        'sticky[value]' => TRUE,
+      ], t('Save'));
 
       $this->assertNodeFieldsUpdated($this->node, $fields);
     }
@@ -185,8 +182,9 @@ class NodeFormTest extends BrowserTestBase {
 
     foreach ([$specific_user, $general_user] as $user) {
       $this->drupalLogin($user);
+      $this->drupalGet('node/' . $this->node->id() . '/edit');
 
-      $this->drupalPostForm('node/' . $this->node->id() . '/edit', [
+      $this->submitForm([
         'revision' => TRUE,
         'revision_log[0][value]' => '',
       ], t('Save'));
@@ -228,16 +226,19 @@ class NodeFormTest extends BrowserTestBase {
 
     foreach ([$specific_user, $general_user] as $user) {
       $this->drupalLogin($user);
+      $this->drupalGet('node/' . $this->node->id() . '/edit');
 
-      $this->drupalPostForm('node/' . $this->node->id() . '/edit', ['uid[0][target_id]' => 'invalid-user'], t('Save'));
+      $this->submitForm(['uid[0][target_id]' => 'invalid-user'], t('Save'));
 
       $this->assertSession()->pageTextContains('There are no entities matching "invalid-user".');
+      $this->drupalGet('node/' . $this->node->id() . '/edit');
 
-      $this->drupalPostForm('node/' . $this->node->id() . '/edit', ['created[0][value][date]' => 'invalid-date'], t('Save'));
+      $this->submitForm(['created[0][value][date]' => 'invalid-date'], t('Save'));
 
       $this->assertSession()->pageTextContains('The Authored on date is invalid.');
+      $this->drupalGet('node/' . $this->node->id() . '/edit');
 
-      $this->drupalPostForm('node/' . $this->node->id() . '/edit', $fields, t('Save'));
+      $this->submitForm($fields, t('Save'));
 
       $this->assertNodeFieldsUpdated($this->node, [
         'created' => $time,
