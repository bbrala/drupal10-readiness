diff --git a/healthcheck.tokens.inc b/healthcheck.tokens.inc
index e6b1676..99d75f0 100644
--- a/healthcheck.tokens.inc
+++ b/healthcheck.tokens.inc
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Render\BubbleableMetadata;
+use Drupal\Core\Url;
 /**
  * @file
  * Provides tokens support for Healthcheck.
@@ -85,7 +87,7 @@ function healthcheck_token_info() {
 /**
  * Implements hook_tokens().
  */
-function healthcheck_tokens($type, $tokens, array $data, array $options, \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata) {
+function healthcheck_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
   $replacements = [];
 
   if ($type = 'healthcheck_report' && !empty($data['healthcheck_report'])) {
@@ -101,7 +103,7 @@ function healthcheck_tokens($type, $tokens, array $data, array $options, \Drupal
     foreach ($tokens as $name => $original) {
       switch ($name) {
         case 'adhoc_url':
-          $url = \Drupal\Core\Url::fromRoute('healthcheck.report_controller_runReport', [], ['absolute' => TRUE]);
+          $url = Url::fromRoute('healthcheck.report_controller_runReport', [], ['absolute' => TRUE]);
           $replacements[$original] = $url->toString();
           break;
 
diff --git a/modules/healthcheck_email/healthcheck_email.module b/modules/healthcheck_email/healthcheck_email.module
index f14a721..86db47e 100755
--- a/modules/healthcheck_email/healthcheck_email.module
+++ b/modules/healthcheck_email/healthcheck_email.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Form\FormStateInterface;
 /**
  * @file
  * Contains healthcheck_email.module.
@@ -39,7 +40,7 @@ function healthcheck_email_mail($key, &$message, $params) {
 /**
  * Implements hook_form_FORM_ID_alter().
  */
-function healthcheck_email_form_healthcheck_settings_form_alter(&$form,  \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function healthcheck_email_form_healthcheck_settings_form_alter(&$form,  FormStateInterface $form_state, $form_id) {
   // Get the site's default email address.
   $site_email = \Drupal::config('system.site')->get('mail');
 
@@ -140,7 +141,7 @@ function healthcheck_email_form_healthcheck_settings_form_alter(&$form,  \Drupal
 /**
  * Submit handler for Healthcheck settings form.
  */
-function healthcheck_email_healthcheck_settings_form_submit($form, \Drupal\Core\Form\FormStateInterface $form_state) {
+function healthcheck_email_healthcheck_settings_form_submit($form, FormStateInterface $form_state) {
   /** @var \Drupal\Core\Config\Config $config */
   $config = \Drupal::service('config.factory')->getEditable('healthcheck_email.settings');
 
diff --git a/modules/healthcheck_email/src/EventSubscriber/EmailCheckSubscriber.php b/modules/healthcheck_email/src/EventSubscriber/EmailCheckSubscriber.php
index 7ab21a7..cb86936 100755
--- a/modules/healthcheck_email/src/EventSubscriber/EmailCheckSubscriber.php
+++ b/modules/healthcheck_email/src/EventSubscriber/EmailCheckSubscriber.php
@@ -7,7 +7,6 @@ use Drupal\healthcheck\Event\HealthcheckCriticalEvent;
 use Drupal\healthcheck\Event\HealthcheckCronEvent;
 use Drupal\healthcheck\Event\HealthcheckEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\Core\Mail\MailManagerInterface;
 use Drupal\Core\Utility\Token;
 use Drupal\Core\Language\LanguageInterface;
diff --git a/modules/healthcheck_email/tests/src/Functional/EmailSettingsFormTest.php b/modules/healthcheck_email/tests/src/Functional/EmailSettingsFormTest.php
index 2dec749..2ebff84 100755
--- a/modules/healthcheck_email/tests/src/Functional/EmailSettingsFormTest.php
+++ b/modules/healthcheck_email/tests/src/Functional/EmailSettingsFormTest.php
@@ -32,7 +32,7 @@ class EmailSettingsFormTest extends BrowserTestBase {
     'healthcheck_email',
   ];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Get the settings form path.
@@ -78,7 +78,8 @@ class EmailSettingsFormTest extends BrowserTestBase {
       'email_critical_subject' => 'Test Critical!',
       'email_critical_body' => 'Bad stuff happened.',
     ];
-    $this->drupalPostForm($this->settings_form_path, $edit, 'Save configuration');
+    $this->drupalGet($this->settings_form_path);
+    $this->submitForm($edit, 'Save configuration');
 
     // Reload the page.
     $this->drupalGet($this->settings_form_path);
@@ -124,7 +125,8 @@ class EmailSettingsFormTest extends BrowserTestBase {
       'email_cron_subject' => 'Test cron!',
       'email_cron_body' => 'Stuff happened.',
     ];
-    $this->drupalPostForm($this->settings_form_path, $edit, 'Save configuration');
+    $this->drupalGet($this->settings_form_path);
+    $this->submitForm($edit, 'Save configuration');
 
     // Reload the page.
     $this->drupalGet($this->settings_form_path);
diff --git a/modules/healthcheck_historical/healthcheck_historical.install b/modules/healthcheck_historical/healthcheck_historical.install
index 76ae07f..18de9f8 100755
--- a/modules/healthcheck_historical/healthcheck_historical.install
+++ b/modules/healthcheck_historical/healthcheck_historical.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\Entity\ConfigEntityStorage;
 /**
  * Implements hook_schema().
  */
@@ -47,7 +48,7 @@ function healthcheck_historical_schema() {
       'finding_key' => [
         'description' => '',
         'type' => 'varchar_ascii',
-        'length' => \Drupal\Core\Config\Entity\ConfigEntityStorage::MAX_ID_LENGTH,
+        'length' => ConfigEntityStorage::MAX_ID_LENGTH,
       ],
       'status' => [
         'description' => '',
diff --git a/modules/healthcheck_historical/healthcheck_historical.module b/modules/healthcheck_historical/healthcheck_historical.module
index a29d007..e6fd1db 100755
--- a/modules/healthcheck_historical/healthcheck_historical.module
+++ b/modules/healthcheck_historical/healthcheck_historical.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Form\FormStateInterface;
 /**
  * @file
  * Contains healthcheck_historical.module.
@@ -33,7 +34,7 @@ function healthcheck_historical_cron() {
 /**
  * Implements hook_form_FORM_ID_alter().
  */
-function healthcheck_historical_form_healthcheck_settings_form_alter(&$form,  \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function healthcheck_historical_form_healthcheck_settings_form_alter(&$form,  FormStateInterface $form_state, $form_id) {
   $config = \Drupal::config('healthcheck_historical.settings');
 
   $form['history'] = [
@@ -68,7 +69,7 @@ function healthcheck_historical_form_healthcheck_settings_form_alter(&$form,  \D
 /**
  * Submit handler for Healthcheck settings form.
  */
-function healthcheck_historical_healthcheck_settings_form_submit($form, \Drupal\Core\Form\FormStateInterface $form_state) {
+function healthcheck_historical_healthcheck_settings_form_submit($form, FormStateInterface $form_state) {
   /** @var \Drupal\Core\Config\Config $config */
   $config = \Drupal::service('config.factory')->getEditable('healthcheck_historical.settings');
 
diff --git a/modules/healthcheck_historical/src/EventSubscriber/HistoricalCheckSubscriber.php b/modules/healthcheck_historical/src/EventSubscriber/HistoricalCheckSubscriber.php
index ef59efb..03af5c3 100755
--- a/modules/healthcheck_historical/src/EventSubscriber/HistoricalCheckSubscriber.php
+++ b/modules/healthcheck_historical/src/EventSubscriber/HistoricalCheckSubscriber.php
@@ -6,7 +6,6 @@ use Drupal\healthcheck\Event\HealthcheckCronEvent;
 use Drupal\healthcheck\Event\HealthcheckEvents;
 use Drupal\healthcheck_historical\HistoricalServiceInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Records reports that were performed in the background to the database.
diff --git a/modules/healthcheck_historical/tests/src/Functional/HistoricalSettingsFormTest.php b/modules/healthcheck_historical/tests/src/Functional/HistoricalSettingsFormTest.php
index 2166390..ebe1d23 100755
--- a/modules/healthcheck_historical/tests/src/Functional/HistoricalSettingsFormTest.php
+++ b/modules/healthcheck_historical/tests/src/Functional/HistoricalSettingsFormTest.php
@@ -33,7 +33,7 @@ class HistoricalSettingsFormTest extends BrowserTestBase {
     'healthcheck_historical',
   ];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Get the settings form path.
@@ -70,7 +70,8 @@ class HistoricalSettingsFormTest extends BrowserTestBase {
     $edit = [
       'keep_reports_for' => -1,
     ];
-    $this->drupalPostForm($this->settings_form_path, $edit, 'Save configuration');
+    $this->drupalGet($this->settings_form_path);
+    $this->submitForm($edit, 'Save configuration');
 
     // Reload the page.
     $this->drupalGet($this->settings_form_path);
diff --git a/modules/healthcheck_webhooks/tests/src/Functional/WebhooksSettingsFormTest.php b/modules/healthcheck_webhooks/tests/src/Functional/WebhooksSettingsFormTest.php
index bbd8a2a..64b68d2 100755
--- a/modules/healthcheck_webhooks/tests/src/Functional/WebhooksSettingsFormTest.php
+++ b/modules/healthcheck_webhooks/tests/src/Functional/WebhooksSettingsFormTest.php
@@ -32,7 +32,7 @@ class WebhooksSettingsFormTest extends BrowserTestBase {
     'healthcheck_webhooks',
   ];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Get the settings form path.
@@ -70,7 +70,8 @@ class WebhooksSettingsFormTest extends BrowserTestBase {
     $edit = [
       'zapier' => 'http://example.com',
     ];
-    $this->drupalPostForm($this->settings_form_path, $edit, 'Save configuration');
+    $this->drupalGet($this->settings_form_path);
+    $this->submitForm($edit, 'Save configuration');
 
     // Reload the page.
     $this->drupalGet($this->settings_form_path);
diff --git a/src/Event/HealthcheckEventBase.php b/src/Event/HealthcheckEventBase.php
index 217812f..056b468 100644
--- a/src/Event/HealthcheckEventBase.php
+++ b/src/Event/HealthcheckEventBase.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\healthcheck\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\healthcheck\Report\ReportInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 class HealthcheckEventBase extends Event implements HealthcheckEventInterface {
 
diff --git a/src/EventSubscriber/WatchdogCheckSubscriber.php b/src/EventSubscriber/WatchdogCheckSubscriber.php
index 7529bb9..3aad453 100644
--- a/src/EventSubscriber/WatchdogCheckSubscriber.php
+++ b/src/EventSubscriber/WatchdogCheckSubscriber.php
@@ -9,7 +9,6 @@ use Drupal\healthcheck\Event\HealthcheckEvents;
 use Drupal\healthcheck\Event\HealthcheckRunEvent;
 use Drupal\healthcheck\Finding\FindingStatus;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * A simple check subscriber to record when a check was run to the Drupal log.
diff --git a/src/HealthcheckService.php b/src/HealthcheckService.php
index f07cb1a..f688949 100644
--- a/src/HealthcheckService.php
+++ b/src/HealthcheckService.php
@@ -123,10 +123,10 @@ class HealthcheckService implements HealthcheckServiceInterface {
       $report->addFindings($findings);
     }
 
-    $this->event_dispatcher->dispatch(HealthcheckEvents::CHECK_RUN, new HealthcheckRunEvent($report));
+    $this->event_dispatcher->dispatch(new HealthcheckRunEvent($report), HealthcheckEvents::CHECK_RUN);
 
     if ($report->getHighestStatus() == FindingStatus::CRITICAL) {
-      $this->event_dispatcher->dispatch(HealthcheckEvents::CHECK_CRITICAL, new HealthcheckCriticalEvent($report));
+      $this->event_dispatcher->dispatch(new HealthcheckCriticalEvent($report), HealthcheckEvents::CHECK_CRITICAL);
     }
 
     return $report;
diff --git a/src/Plugin/QueueWorker/HealthcheckCronWorker.php b/src/Plugin/QueueWorker/HealthcheckCronWorker.php
index cc7ac11..1cadb0a 100644
--- a/src/Plugin/QueueWorker/HealthcheckCronWorker.php
+++ b/src/Plugin/QueueWorker/HealthcheckCronWorker.php
@@ -69,7 +69,7 @@ class HealthcheckCronWorker extends QueueWorkerBase implements ContainerFactoryP
     $event = new HealthcheckCronEvent($report);
 
     // Dispatch it.
-    $this->event_dispatcher->dispatch(HealthcheckEvents::CHECK_CRON, $event);
+    $this->event_dispatcher->dispatch($event, HealthcheckEvents::CHECK_CRON);
   }
 
 }
diff --git a/tests/modules/healthcheck_events_test/src/EventSubscriber/EventTestSubscriber.php b/tests/modules/healthcheck_events_test/src/EventSubscriber/EventTestSubscriber.php
index 0002b85..478f21a 100644
--- a/tests/modules/healthcheck_events_test/src/EventSubscriber/EventTestSubscriber.php
+++ b/tests/modules/healthcheck_events_test/src/EventSubscriber/EventTestSubscriber.php
@@ -7,7 +7,6 @@ use Drupal\healthcheck\Event\HealthcheckCronEvent;
 use Drupal\healthcheck\Event\HealthcheckEvents;
 use Drupal\healthcheck\Event\HealthcheckRunEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\Core\State\StateInterface;
 
 class EventTestSubscriber implements EventSubscriberInterface {
diff --git a/tests/src/Functional/AdhocTest.php b/tests/src/Functional/AdhocTest.php
index fd2576c..8aea0dd 100644
--- a/tests/src/Functional/AdhocTest.php
+++ b/tests/src/Functional/AdhocTest.php
@@ -34,7 +34,7 @@ class AdhocTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Set the Healthcheck to only check the 'testing' category.
diff --git a/tests/src/Functional/CheckConfigTest.php b/tests/src/Functional/CheckConfigTest.php
index fd12272..63da2c2 100644
--- a/tests/src/Functional/CheckConfigTest.php
+++ b/tests/src/Functional/CheckConfigTest.php
@@ -48,7 +48,7 @@ class CheckConfigTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Get the settings form path.
@@ -112,7 +112,8 @@ class CheckConfigTest extends BrowserTestBase {
     $edit = [
       'status' => '15',
     ];
-    $this->drupalPostForm($check_form_path, $edit, 'Save');
+    $this->drupalGet($check_form_path);
+    $this->submitForm($edit, 'Save');
 
     // Go back to the check config form
     $this->drupalGet($check_form_path);
diff --git a/tests/src/Functional/EventsTest.php b/tests/src/Functional/EventsTest.php
index 20b210a..4e9cc2b 100644
--- a/tests/src/Functional/EventsTest.php
+++ b/tests/src/Functional/EventsTest.php
@@ -39,7 +39,7 @@ class EventsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Configure Healthcheck to:
diff --git a/tests/src/Functional/SettingsFormTest.php b/tests/src/Functional/SettingsFormTest.php
index c37bccd..2e6b3f5 100644
--- a/tests/src/Functional/SettingsFormTest.php
+++ b/tests/src/Functional/SettingsFormTest.php
@@ -42,7 +42,7 @@ class SettingsFormTest extends BrowserTestBase {
     'healthcheck_findings_test',
   ];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Get the settings form path.
@@ -77,7 +77,8 @@ class SettingsFormTest extends BrowserTestBase {
     $edit = [
       'categories[testing]' => TRUE,
     ];
-    $this->drupalPostForm($this->settings_form_path, $edit, 'Save configuration');
+    $this->drupalGet($this->settings_form_path);
+    $this->submitForm($edit, 'Save configuration');
 
     // Reload the page.
     $this->drupalGet($this->settings_form_path);
@@ -109,7 +110,8 @@ class SettingsFormTest extends BrowserTestBase {
     $edit = [
       'run_every' => 1,
     ];
-    $this->drupalPostForm($this->settings_form_path, $edit, 'Save configuration');
+    $this->drupalGet($this->settings_form_path);
+    $this->submitForm($edit, 'Save configuration');
 
     // Reload the page.
     $this->drupalGet($this->settings_form_path);
@@ -146,7 +148,8 @@ class SettingsFormTest extends BrowserTestBase {
         'all_findings'
       ],
     ];
-    $this->drupalPostForm($this->settings_form_path, $edit, 'Save configuration');
+    $this->drupalGet($this->settings_form_path);
+    $this->submitForm($edit, 'Save configuration');
 
     // Reload the page.
     $this->drupalGet($this->settings_form_path);
diff --git a/tests/src/Functional/StatusPageTest.php b/tests/src/Functional/StatusPageTest.php
index de5df4c..b01bbb9 100644
--- a/tests/src/Functional/StatusPageTest.php
+++ b/tests/src/Functional/StatusPageTest.php
@@ -47,7 +47,7 @@ class StatusPageTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Get the status page path.
diff --git a/tests/src/Kernel/FindingServiceTest.php b/tests/src/Kernel/FindingServiceTest.php
index d3e5ef8..a06f06c 100644
--- a/tests/src/Kernel/FindingServiceTest.php
+++ b/tests/src/Kernel/FindingServiceTest.php
@@ -33,7 +33,7 @@ class FindingServiceTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('checkconfig');
diff --git a/tests/src/Unit/FindingStatusTest.php b/tests/src/Unit/FindingStatusTest.php
index cea6a90..59ffba0 100644
--- a/tests/src/Unit/FindingStatusTest.php
+++ b/tests/src/Unit/FindingStatusTest.php
@@ -17,7 +17,7 @@ class FindingStatusTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     // Nothing to do here.
     parent::setUp();
   }
