diff --git a/src/Command/GenerateCommand.php b/src/Command/GenerateCommand.php
index a9b17f9..d89d361 100644
--- a/src/Command/GenerateCommand.php
+++ b/src/Command/GenerateCommand.php
@@ -147,7 +147,7 @@ class GenerateCommand extends ContainerAwareCommand {
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     // @see use Drupal\Console\Command\Shared\ConfirmationTrait::confirmOperation
     if (!$this->confirmOperation()) {
       return 1;
@@ -170,6 +170,7 @@ class GenerateCommand extends ContainerAwareCommand {
     $this->chainQueue->addCommand('cache:rebuild', ['cache' => 'discovery']);
 
     $this->getIo()->info($this->trans('commands.daemons.generate.messages.success'));
+    return 0;
   }
 
 }
diff --git a/src/Command/ListCommand.php b/src/Command/ListCommand.php
index 7193e5b..8c8bee8 100644
--- a/src/Command/ListCommand.php
+++ b/src/Command/ListCommand.php
@@ -54,7 +54,7 @@ class ListCommand extends Command {
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $plugin_service = $this->pluginDaemonManager;
     foreach ($plugin_service->getDefinitions() as $plugin_id => $plugin) {
       $instance = $plugin_service->createInstance($plugin_id);
@@ -92,6 +92,7 @@ class ListCommand extends Command {
       ->setHeaders(['Id', 'Name', 'Status', 'PID', 'Last run'])
       ->setRows($rows);
     $table->render();
+    return 0;
   }
 
 }
diff --git a/src/Command/RestartCommand.php b/src/Command/RestartCommand.php
index 7aa914d..f06392e 100644
--- a/src/Command/RestartCommand.php
+++ b/src/Command/RestartCommand.php
@@ -54,7 +54,7 @@ class RestartCommand extends Command {
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $daemonId = $input->getArgument('daemon-id');
     $daemonManager = $this->daemonManager;
 
@@ -123,6 +123,7 @@ class RestartCommand extends Command {
         )
       );
     }
+    return 0;
   }
 
 }
diff --git a/src/Command/RunCommand.php b/src/Command/RunCommand.php
index 745b77b..b7acfb8 100644
--- a/src/Command/RunCommand.php
+++ b/src/Command/RunCommand.php
@@ -54,7 +54,7 @@ class RunCommand extends Command {
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $daemonId = $input->getArgument('daemon-id');
     $instance = $this->pluginDaemonManager->createInstance($daemonId);
     $daemonManager = $this->daemonManager;
@@ -88,6 +88,7 @@ class RunCommand extends Command {
       $instance->execute($loop);
     }
     $loop->run();
+    return 0;
   }
 
 }
diff --git a/src/Command/StopCommand.php b/src/Command/StopCommand.php
index e26585c..17f7d33 100644
--- a/src/Command/StopCommand.php
+++ b/src/Command/StopCommand.php
@@ -60,7 +60,7 @@ class StopCommand extends Command {
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     $daemonId = $input->getArgument('daemon-id');
 
     try {
@@ -108,6 +108,7 @@ class StopCommand extends Command {
         )
       );
     }
+    return 0;
   }
 
 }
