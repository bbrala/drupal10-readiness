modules/contrib/blog/blog.module
modules/contrib/blog/src/Plugin/Menu/MyBlogLink.php
modules/contrib/blog/tests/src/Functional/BasicBlogTest.php
modules/contrib/blog/src/BlogBreadcrumbBuilder.php
modules/contrib/blog/src/BlogLister.php
modules/contrib/blog/tests/src/Functional/BlogTestBase.php
modules/contrib/blog/src/BlogListerInterface.php
modules/contrib/blog/src/Controller/BlogController.php
modules/contrib/blog/tests/src/Functional/BreadcrumbTest.php
modules/contrib/blog/tests/src/Functional/EmptyBlogTest.php
modules/contrib/blog/tests/src/Functional/MyBlogLinkTest.php

3 files with changes
====================

1) modules/contrib/blog/tests/src/Functional/MyBlogLinkTest.php:43

    ---------- begin diff ----------
@@ @@
    */
   public function testMyBlogLinkWithRegularUser() {
     $this->drupalLogin($this->regularUser);
-    $this->assertLink('My blog');
-    $this->assertLinkByHref('/blog/' . $this->regularUser->id());
+    $this->assertSession()->linkExists('My blog');
+    $this->assertSession()->linkByHrefExists('/blog/' . $this->regularUser->id());
   }

   /**
@@ @@
    * Test "My blog" link with anonymous user.
    */
   public function testMyBlogLinkWithAnonUser() {
-    $this->assertNoLink('My blog');
+    $this->assertSession()->linkNotExists('My blog');
   }

   /**
@@ @@
     $this->drupalLogin($this->regularUser);
     // Add "Personal blog link" psuedo-field.
     $this->drupalGet('admin/config/people/accounts/display');
-    $this->assertText('Personal blog link');
+    $this->assertSession()->pageTextContains('Personal blog link');
     $edit = [
       'fields[blog__personal_blog_link][region]' => 'content',
       'display_modes_custom[compact]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->drupalLogout();
     // Test "Personal blog link" on user profile page.
     $this->drupalLogin($this->blogger1);
     $this->drupalGet('user/' . $this->blogger1->id());
-    $this->assertLink('View recent blog entries');
-    $this->assertLinkByHref('blog/' . $this->blogger1->id());
+    $this->assertSession()->linkExists('View recent blog entries');
+    $this->assertSession()->linkByHrefExists('blog/' . $this->blogger1->id());
     // Test "Personal blog link" on content.
     $node = array_shift($this->blogNodes1);
     $this->drupalGet('node/' . $node->id());
-    $this->assertNoLink('View recent blog entries');
+    $this->assertSession()->linkNotExists('View recent blog entries');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertLinkByHrefRector
 * AssertLinkRector
 * AssertNoLinkRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/blog/tests/src/Functional/EmptyBlogTest.php:46

    ---------- begin diff ----------
@@ @@
   public function testAllBlogEmptyLists() {
     $this->drupalLogin($this->bloggerNoEntries);
     $this->drupalGet('blog');
-    $this->assertText('No blog entries have been created.');
+    $this->assertSession()->pageTextContains('No blog entries have been created.');
   }

   /**
@@ @@
   public function testEmptyPersonalBlog() {
     $this->drupalLogin($this->bloggerNoEntries);
     $this->drupalGet('blog/' . $this->bloggerNoEntries->id());
-    $this->assertText($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
+    $this->assertSession()->pageTextContains($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/blog/tests/src/Functional/BasicBlogTest.php:44

    ---------- begin diff ----------
@@ @@
   public function testPersonalBlogTitle() {
     $this->drupalLogin($this->regularUser);
     $this->drupalGet('blog/' . $this->blogger1->id());
-    $this->assertResponse(200);
-    $this->assertTitle($this->blogger1->getDisplayName() . "'s blog | Drupal");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->titleEquals($this->blogger1->getDisplayName() . "'s blog | Drupal");
   }

   /**
@@ @@
   public function testBlogPageNoEntries() {
     $this->drupalLogin($this->regularUser);
     $this->drupalGet('blog/' . $this->bloggerNoEntries->id());
-    $this->assertResponse(200);
-    $this->assertTitle($this->bloggerNoEntries->getDisplayName() . "'s blog | Drupal");
-    $this->assertText($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->titleEquals($this->bloggerNoEntries->getDisplayName() . "'s blog | Drupal");
+    $this->assertSession()->pageTextContains($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * AssertTextRector
 * AssertTitleRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

