diff --git a/blockify.info.yml b/blockify.info.yml
index 76e386a..253d169 100644
--- a/blockify.info.yml
+++ b/blockify.info.yml
@@ -1,5 +1,5 @@
 name: Blockify
 description: "Exposes a number of core Drupal elements as blocks."
 type: module
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 
diff --git a/blockify.module b/blockify.module
index 88c0120..2da28dd 100644
--- a/blockify.module
+++ b/blockify.module
@@ -114,7 +114,7 @@ function blockify_get_content($delta) {
       if (empty($variables['logo_path'])) {
         $variables['logo_path'] = theme_get_setting('logo_path');
         if (empty($variables['logo_path']) || theme_get_setting('default_logo')) {
-          $variables['logo_path'] = drupal_get_path('theme', $theme_key) . '/logo.png';
+          $variables['logo_path'] = \Drupal::service('extension.list.theme')->getPath($theme_key) . '/logo.png';
         }
       }
       return theme('blockify_logo', $variables);
diff --git a/blockify.theme.inc b/blockify.theme.inc
index 026e187..6f14118 100644
--- a/blockify.theme.inc
+++ b/blockify.theme.inc
@@ -13,7 +13,7 @@ function theme_blockify_logo($variables) {
   $site_name = filter_xss_admin(variable_get('site_name', 'Drupal'));
 
   // We only need the path.
-  $path = file_create_url($variables['logo_path']);
+  $path = \Drupal::service('file_url_generator')->generateAbsoluteString($variables['logo_path']);
 
   $image = array(
     '#theme' => 'image',
@@ -23,7 +23,7 @@ function theme_blockify_logo($variables) {
     ))
   );
 
-  return l(render($image), '<front>', array(
+  return l(\Drupal::service('renderer')->render($image), '<front>', array(
     'html' => TRUE,
     'attributes' => array(
       'id' => 'logo',
@@ -64,7 +64,7 @@ function theme_blockify_site_name($variables) {
     ),
   );
 
-  return render($link);
+  return \Drupal::service('renderer')->render($link);
 }
 
 /**
@@ -108,7 +108,7 @@ function theme_blockify_breadcrumb($variables) {
  * @ingroup themeable
  */
 function theme_blockify_local_actions($variables) {
-  $actions = render($variables['menu_local_actions']);
+  $actions = \Drupal::service('renderer')->render($variables['menu_local_actions']);
   if (!empty($actions)) {
     return '<ul class="action-links" class="clearfix">' . $actions . '</ul>';
   }
