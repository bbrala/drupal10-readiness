diff --git a/modules/recurlyjs/src/Event/Subscription.php b/modules/recurlyjs/src/Event/Subscription.php
index 60f4f1c..5468eb6 100644
--- a/modules/recurlyjs/src/Event/Subscription.php
+++ b/modules/recurlyjs/src/Event/Subscription.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\recurlyjs\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Entity\EntityInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Recurly subscription event.
diff --git a/modules/recurlyjs/src/Form/RecurlyJsSubscribeForm.php b/modules/recurlyjs/src/Form/RecurlyJsSubscribeForm.php
index 3fe9352..f29802b 100644
--- a/modules/recurlyjs/src/Form/RecurlyJsSubscribeForm.php
+++ b/modules/recurlyjs/src/Form/RecurlyJsSubscribeForm.php
@@ -89,7 +89,7 @@ class RecurlyJsSubscribeForm extends RecurlyJsFormBase {
     // Allow other modules the chance to alter the new Recurly Subscription
     // object before it is saved.
     $event = new SubscriptionAlter($subscription, $entity, $plan_code);
-    $this->eventDispatcher->dispatch(RecurlyJsEvents::SUBSCRIPTION_ALTER, $event);
+    $this->eventDispatcher->dispatch($event, RecurlyJsEvents::SUBSCRIPTION_ALTER);
     $subscription = $event->getSubscription();
 
     // Billing info is based on the token we retrieved from the Recurly JS API
@@ -125,7 +125,7 @@ class RecurlyJsSubscribeForm extends RecurlyJsFormBase {
 
     // Allow other modules to react to the new subscription being created.
     $event = new SubscriptionCreated($subscription, $entity, $plan_code);
-    $this->eventDispatcher->dispatch(RecurlyJsEvents::SUBSCRIPTION_CREATED, $event);
+    $this->eventDispatcher->dispatch($event, RecurlyJsEvents::SUBSCRIPTION_CREATED);
     $subscription = $event->getSubscription();
 
     $this->messenger()->addMessage($this->t('Account upgraded to @plan!', ['@plan' => $subscription->plan->name]));
diff --git a/modules/recurlyjs/tests/src/Functional/SettingsFormTest.php b/modules/recurlyjs/tests/src/Functional/SettingsFormTest.php
index e192383..9d53dce 100644
--- a/modules/recurlyjs/tests/src/Functional/SettingsFormTest.php
+++ b/modules/recurlyjs/tests/src/Functional/SettingsFormTest.php
@@ -31,7 +31,7 @@ class SettingsFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/tests/src/Functional/SubscriptionPlansFormTest.php b/tests/src/Functional/SubscriptionPlansFormTest.php
index 8acae59..48ced1f 100644
--- a/tests/src/Functional/SubscriptionPlansFormTest.php
+++ b/tests/src/Functional/SubscriptionPlansFormTest.php
@@ -32,7 +32,7 @@ class SubscriptionPlansFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
@@ -47,8 +47,8 @@ class SubscriptionPlansFormTest extends BrowserTestBase {
    */
   public function testPlanFormWithoutCredentials() {
     $this->drupalGet('/admin/config/services/recurly/subscription-plans');
-    $this->assertResponse(200);
-    $this->assertText(RecurlyClientFactory::ERROR_MESSAGE_MISSING_API_KEY);
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->pageTextContains(RecurlyClientFactory::ERROR_MESSAGE_MISSING_API_KEY);
   }
 
 }
diff --git a/tests/src/Functional/SubscriptionSignupTest.php b/tests/src/Functional/SubscriptionSignupTest.php
index a859e2a..5d17e3e 100644
--- a/tests/src/Functional/SubscriptionSignupTest.php
+++ b/tests/src/Functional/SubscriptionSignupTest.php
@@ -25,7 +25,7 @@ class SubscriptionSignupTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Associate Recurly subscriptions with user entities. And enable the
     // "silver" mock plan.
@@ -48,10 +48,10 @@ class SubscriptionSignupTest extends BrowserTestBase {
     $this->drupalLogin($account);
 
     $this->drupalGet('user/' . $account->id() . '/subscription/signup');
-    $this->assertText('Silver Plan');
+    $this->assertSession()->pageTextContains('Silver Plan');
     // Without enabling either recurlyjs or recurly_host_pages you can't
     // get any further than this.
-    $this->assertText('Contact us to sign up');
+    $this->assertSession()->pageTextContains('Contact us to sign up');
   }
 
 }
diff --git a/tests/src/Functional/UserRegistrationTest.php b/tests/src/Functional/UserRegistrationTest.php
index f6bf1b3..89252ff 100644
--- a/tests/src/Functional/UserRegistrationTest.php
+++ b/tests/src/Functional/UserRegistrationTest.php
@@ -31,7 +31,7 @@ class UserRegistrationTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $config = $this->config('user.settings');
@@ -71,7 +71,8 @@ class UserRegistrationTest extends BrowserTestBase {
     $edit['mail'] = $mail = $edit['name'] . '@example.com';
     $edit['pass[pass1]'] = $new_pass = $this->randomMachineName();
     $edit['pass[pass2]'] = $new_pass;
-    $this->drupalPostForm('user/register', $edit, t('Create new account'));
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, t('Create new account'));
     $this->container->get('entity_type.manager')
       ->getStorage('user')
       ->resetCache();
@@ -88,7 +89,7 @@ class UserRegistrationTest extends BrowserTestBase {
     // registration.
     // @see recurly_user_edit_form_submit_redirect()
     $url = $new_user->toUrl('recurly-signup');
-    $this->assertUrl($url);
+    $this->assertSession()->addressEquals($url);
     $this->assertSession()->pageTextContains('Silver Plan');
 
     $this->drupalLogout();
diff --git a/tests/src/Kernel/RecurlyInvoicesControllerTest.php b/tests/src/Kernel/RecurlyInvoicesControllerTest.php
index 5b3f590..ca893c9 100644
--- a/tests/src/Kernel/RecurlyInvoicesControllerTest.php
+++ b/tests/src/Kernel/RecurlyInvoicesControllerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\recurly\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Render\HtmlResponse;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\KernelTests\KernelTestBase;
@@ -18,6 +19,7 @@ use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
  */
 class RecurlyInvoicesControllerTest extends KernelTestBase {
 
+  use ProphecyTrait;
   use UserCreationTrait;
 
   /**
@@ -42,7 +44,7 @@ class RecurlyInvoicesControllerTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['recurly', 'user', 'system']);
@@ -84,7 +86,7 @@ class RecurlyInvoicesControllerTest extends KernelTestBase {
     $response = $this->controller->invoicesList($routeMatch->reveal());
     $this->assertArrayHasKey('#theme', $response);
     $this->assertArrayHasKey('#invoices', $response);
-    $this->assertEqual($response['#total'], count($response['#invoices']));
+    $this->assertEquals($response['#total'], count($response['#invoices']));
   }
 
   /**
@@ -100,15 +102,15 @@ class RecurlyInvoicesControllerTest extends KernelTestBase {
     $routeMatch->getParameter('user')->willReturn($this->drupalUser);
 
     $response = $this->controller->getInvoice($routeMatch->reveal(), '1000');
-    $this->assertEqual($response['#theme'], 'recurly_invoice');
+    $this->assertEquals($response['#theme'], 'recurly_invoice');
     $this->assertArrayHasKey('#invoice', $response);
-    $this->assertEqual($response['#error_message'], NULL);
+    $this->assertEquals($response['#error_message'], NULL);
 
     // Verify #error_message if invoice state is not 'paid'.
     RecurlyMockClient::addResponse('GET', '/invoices/1001', 'invoices/show-200-past_due.xml');
 
     $response = $this->controller->getInvoice($routeMatch->reveal(), '1001');
-    $this->assertEqual($response['#theme'], 'recurly_invoice');
+    $this->assertEquals($response['#theme'], 'recurly_invoice');
     $this->assertStringContainsString('This invoice is past due!', $response['#error_message']);
 
     // Can't find invoice with that ID.
@@ -142,7 +144,7 @@ class RecurlyInvoicesControllerTest extends KernelTestBase {
     $buffer = ob_get_contents();
     ob_end_clean();
 
-    $this->assertEqual($buffer, 'Here is that PDF you asked for');
+    $this->assertEquals($buffer, 'Here is that PDF you asked for');
     $this->assertInstanceOf(HtmlResponse::class, $response);
     $this->assertEquals(200, $response->getStatusCode());
 
diff --git a/tests/src/Kernel/RecurlyManageSubscriptionControllerTest.php b/tests/src/Kernel/RecurlyManageSubscriptionControllerTest.php
index 3c76b8f..607f5f5 100644
--- a/tests/src/Kernel/RecurlyManageSubscriptionControllerTest.php
+++ b/tests/src/Kernel/RecurlyManageSubscriptionControllerTest.php
@@ -32,7 +32,7 @@ class RecurlyManageSubscriptionControllerTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['recurly', 'user', 'system']);
diff --git a/tests/src/Kernel/RecurlyPagerManagerTest.php b/tests/src/Kernel/RecurlyPagerManagerTest.php
index 8dacf10..0d7606d 100644
--- a/tests/src/Kernel/RecurlyPagerManagerTest.php
+++ b/tests/src/Kernel/RecurlyPagerManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\recurly\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Pager\PagerManagerInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\recurly\RecurlyPagerManager;
@@ -15,6 +16,7 @@ use Prophecy\Argument;
  */
 class RecurlyPagerManagerTest extends KernelTestBase {
 
+  use ProphecyTrait;
   /**
    * Recurly pager object that mocks some features.
    *
@@ -30,7 +32,7 @@ class RecurlyPagerManagerTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->mockRecurlyPager = new class extends \Recurly_Pager {
diff --git a/tests/src/Kernel/RecurlySubscriptionSelectPlanControllerTest.php b/tests/src/Kernel/RecurlySubscriptionSelectPlanControllerTest.php
index 2cad393..bf0bd4e 100644
--- a/tests/src/Kernel/RecurlySubscriptionSelectPlanControllerTest.php
+++ b/tests/src/Kernel/RecurlySubscriptionSelectPlanControllerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\recurly\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\recurly\Controller\RecurlySubscriptionSelectPlanController;
@@ -17,6 +18,7 @@ use Symfony\Component\HttpFoundation\ParameterBag;
  */
 class RecurlySubscriptionSelectPlanControllerTest extends KernelTestBase {
 
+  use ProphecyTrait;
   use UserCreationTrait;
 
   /**
@@ -27,7 +29,7 @@ class RecurlySubscriptionSelectPlanControllerTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['recurly', 'user', 'system']);
@@ -73,7 +75,7 @@ class RecurlySubscriptionSelectPlanControllerTest extends KernelTestBase {
     $controller = RecurlySubscriptionSelectPlanController::create(\Drupal::getContainer());
     $response = $controller->planSelect(\Drupal::routeMatch());
     $this->assertArrayHasKey('#theme', $response);
-    $this->assertEqual($response['#mode'], RecurlySubscriptionSelectPlanController::SELECT_PLAN_MODE_SIGNUP);
+    $this->assertEquals($response['#mode'], RecurlySubscriptionSelectPlanController::SELECT_PLAN_MODE_SIGNUP);
   }
 
   /**
@@ -118,7 +120,7 @@ class RecurlySubscriptionSelectPlanControllerTest extends KernelTestBase {
     $routeMatch->getParameter('user')->willReturn($user);
     $response = $controller->planSelect($routeMatch->reveal(), NULL, 'latest');
     $this->assertArrayHasKey('#theme', $response);
-    $this->assertEqual($response['#mode'], 'change');
+    $this->assertEquals($response['#mode'], 'change');
 
     $subscription_id = '32558dd8a07eec471fbe6642d3a422f4';
     $routeMatch = $this->prophesize(RouteMatchInterface::class);
@@ -130,7 +132,7 @@ class RecurlySubscriptionSelectPlanControllerTest extends KernelTestBase {
     $routeMatch->getParameter('user')->willReturn($user);
     $response = $controller->planSelect($routeMatch->reveal(), NULL, $subscription_id);
     $this->assertArrayHasKey('#theme', $response);
-    $this->assertEqual($response['#mode'], 'change');
+    $this->assertEquals($response['#mode'], 'change');
   }
 
 }
diff --git a/tests/src/Unit/RecurlyUrlManagerTest.php b/tests/src/Unit/RecurlyUrlManagerTest.php
index f8e35a4..3879eee 100644
--- a/tests/src/Unit/RecurlyUrlManagerTest.php
+++ b/tests/src/Unit/RecurlyUrlManagerTest.php
@@ -23,7 +23,7 @@ class RecurlyUrlManagerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $config_factory = $this->getConfigFactoryStub(['recurly.settings' => ['verbose' => TRUE]]);
 
     $this->recurlyUrlManager = new RecurlyUrlManager($config_factory);
