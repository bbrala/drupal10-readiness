diff --git a/src/EventSubscriber/DomainRedirectSubscriber.php b/src/EventSubscriber/DomainRedirectSubscriber.php
index 5063252..502a0fd 100644
--- a/src/EventSubscriber/DomainRedirectSubscriber.php
+++ b/src/EventSubscriber/DomainRedirectSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\domain_route_redirect\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ControllerEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 use Drupal\domain\DomainNegotiatorInterface;
@@ -10,8 +11,6 @@ use Drupal\Core\Routing\CurrentRouteMatch;
 use Drupal\domain_route_redirect\DomainRouteRedirectMatcherService;
 
 use Symfony\Component\HttpKernel\KernelEvents;
-
-use Symfony\Component\HttpKernel\Event\FilterControllerEvent;
 use Drupal\Core\Routing\TrustedRedirectResponse;
 use Symfony\Component\HttpFoundation\Response;
 
@@ -71,10 +70,10 @@ class DomainRedirectSubscriber implements EventSubscriberInterface {
   /**
    * Decides whether to redirect depending on the identified route.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterControllerEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ControllerEvent $event
    *   The Event to process.
    */
-  public function onKernelRouteDeterminedDomain(FilterControllerEvent $event) {
+  public function onKernelRouteDeterminedDomain(ControllerEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
