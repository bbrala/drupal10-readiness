modules/contrib/podcast_publisher/podcast_publisher.module
modules/contrib/podcast_publisher/podcast_publisher.install
modules/contrib/podcast_publisher/src/Entity/Podcast.php
modules/contrib/podcast_publisher/src/Form/PodcastForm.php
modules/contrib/podcast_publisher/src/Form/PodcastSettingsForm.php
modules/contrib/podcast_publisher/src/Plugin/Field/FieldFormatter/FileLength.php
modules/contrib/podcast_publisher/src/Plugin/Field/FieldFormatter/FileMimeType.php
modules/contrib/podcast_publisher/src/Plugin/views/row/PodcastEpisodeFields.php
modules/contrib/podcast_publisher/src/Plugin/views/style/PodcastFeed.php
modules/contrib/podcast_publisher/src/PodcastAccessControlHandler.php
modules/contrib/podcast_publisher/src/PodcastAudioService.php
modules/contrib/podcast_publisher/src/PodcastAudioServiceInterface.php
modules/contrib/podcast_publisher/src/PodcastInterface.php
modules/contrib/podcast_publisher/src/PodcastListBuilder.php

2 files with changes
====================

1) modules/contrib/podcast_publisher/podcast_publisher.install:7

    ---------- begin diff ----------
@@ @@
 function podcast_publisher_install() {
   // Create itunes category terms.
   $file_path = \Drupal::service('module_handler')->getModule('podcast_publisher')->getPath() . '/itunes-categories.yml';
-  $categories = Symfony\Component\Yaml\Yaml::parse(file_get_contents($file_path));
+  $categories = Yaml::parse(file_get_contents($file_path));
   $term_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
   $vid = 'pp_itunes_categories';
   foreach ($categories as $category => $sub_categories) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/podcast_publisher/src/Form/PodcastForm.php:19

    ---------- begin diff ----------
@@ @@
     $link = $entity->toLink($this->t('View'))->toRenderable();

     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];

     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New podcast %label has been created.', $message_arguments));
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

