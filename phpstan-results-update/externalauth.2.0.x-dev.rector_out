modules/contrib/externalauth/externalauth.install
modules/contrib/externalauth/src/ExternalAuth.php
modules/contrib/externalauth/externalauth.module
modules/contrib/externalauth/externalauth.post_update.php
modules/contrib/externalauth/externalauth.views.inc
modules/contrib/externalauth/src/Authmap.php
modules/contrib/externalauth/src/ExternalAuthInterface.php
modules/contrib/externalauth/src/Form/AuthmapDeleteForm.php
modules/contrib/externalauth/src/AuthmapInterface.php
modules/contrib/externalauth/src/Event/ExternalAuthAuthmapAlterEvent.php
modules/contrib/externalauth/src/Event/ExternalAuthEvents.php
modules/contrib/externalauth/src/Event/ExternalAuthLoginEvent.php
modules/contrib/externalauth/src/Event/ExternalAuthRegisterEvent.php
modules/contrib/externalauth/src/Exception/ExternalAuthRegisterException.php
modules/contrib/externalauth/src/Plugin/migrate/destination/Authmap.php
modules/contrib/externalauth/src/Plugin/migrate/source/Authmap.php
modules/contrib/externalauth/src/Plugin/views/field/AuthmapDeleteLink.php
modules/contrib/externalauth/tests/src/Kernel/AuthmapTest.php
modules/contrib/externalauth/tests/src/Kernel/ExternalAuthTest.php
modules/contrib/externalauth/tests/src/Unit/AuthmapTest.php
modules/contrib/externalauth/tests/src/Unit/ExternalAuthTest.php

2 files with changes
====================

1) modules/contrib/externalauth/tests/src/Unit/ExternalAuthTest.php:55

    ---------- begin diff ----------
@@ @@
     $this->entityTypeManager = $this->createMock(EntityTypeManagerInterface::class);

     // Create a Mock Logger object.
-    $this->logger = $this->getMockBuilder('\Psr\Log\LoggerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->logger = $this->createMock('\Psr\Log\LoggerInterface');

     // Create a Mock EventDispatcher object.
-    $this->eventDispatcher = $this->getMockBuilder('\Symfony\Component\EventDispatcher\EventDispatcherInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->eventDispatcher = $this->createMock('\Symfony\Component\EventDispatcher\EventDispatcherInterface');

     // Create a Mock Authmap object.
-    $this->authmap = $this->getMockBuilder('\Drupal\externalauth\Authmap')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->authmap = $this->createMock('\Drupal\externalauth\Authmap');
   }

   /**
@@ @@
   public function testLoad() {
     // Set up a mock for Authmap class,
     // mocking getUid() method.
-    $authmap = $this->getMockBuilder('\Drupal\externalauth\Authmap')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['getUid'])
-      ->getMock();
+    $authmap = $this->createMock('\Drupal\externalauth\Authmap');

     $authmap->expects($this->once())
       ->method('getUid')
@@ @@

     // Set up a mock for Authmap class,
     // mocking getUid() method.
-    $authmap = $this->getMockBuilder('\Drupal\externalauth\Authmap')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['save'])
-      ->getMock();
+    $authmap = $this->createMock('\Drupal\externalauth\Authmap');

     $authmap->expects($this->once())
       ->method('save');

-    $dispatched_event = $this->getMockBuilder('\Drupal\externalauth\Event\ExternalAuthAuthmapAlterEvent')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $dispatched_event = $this->createMock('\Drupal\externalauth\Event\ExternalAuthAuthmapAlterEvent');

     $dispatched_event->expects($this->any())
       ->method('getUsername')
@@ @@

     // Set up a mock for Authmap class,
     // mocking get() & save() methods.
-    $authmap = $this->getMockBuilder('\Drupal\externalauth\Authmap')
-      ->disableOriginalConstructor()
-      ->onlyMethods(['save', 'get'])
-      ->getMock();
+    $authmap = $this->createMock('\Drupal\externalauth\Authmap');

     $authmap->expects($this->once())
       ->method('get')
@@ @@
     $authmap->expects($this->once())
       ->method('save');

-    $dispatched_event = $this->getMockBuilder('\Drupal\externalauth\Event\ExternalAuthAuthmapAlterEvent')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $dispatched_event = $this->createMock('\Drupal\externalauth\Event\ExternalAuthAuthmapAlterEvent');

     $dispatched_event->expects($this->any())
       ->method('getUsername')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/externalauth/tests/src/Unit/AuthmapTest.php:50

    ---------- begin diff ----------
@@ @@
     parent::setUp();

     // Create a Mock database connection object.
-    $this->connection = $this->getMockBuilder('Drupal\Core\Database\Connection')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->connection = $this->createMock('Drupal\Core\Database\Connection');

     // Create a Mock Statement object.
-    $this->statement = $this->getMockBuilder('Drupal\Core\Database\Driver\sqlite\Statement')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->statement = $this->createMock('Drupal\Core\Database\Driver\sqlite\Statement');

     // Create a Mock Select object and set expectations.
-    $this->select = $this->getMockBuilder('Drupal\Core\Database\Query\Select')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->select = $this->createMock('Drupal\Core\Database\Query\Select');

     $this->select->expects($this->any())
       ->method('fields')
@@ @@
       ->will($this->returnValue($this->select));

     // Create a Mock Delete object and set expectations.
-    $this->delete = $this->getMockBuilder('Drupal\Core\Database\Query\Delete')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->delete = $this->createMock('Drupal\Core\Database\Query\Delete');

     $this->delete->expects($this->any())
       ->method('condition')
@@ @@
   public function testSave() {
     $account = $this->createMock('Drupal\user\UserInterface');

-    $merge = $this->getMockBuilder('Drupal\Core\Database\Query\Merge')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $merge = $this->createMock('Drupal\Core\Database\Query\Merge');

     $merge->expects($this->any())
       ->method('keys')
@@ @@
    */
   public function testDeleteWithProvider() {
     // Create a Mock Delete object and set expectations.
-    $this->delete = $this->getMockBuilder('Drupal\Core\Database\Query\Delete')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->delete = $this->createMock('Drupal\Core\Database\Query\Delete');

     $this->delete->expects($this->exactly(2))
       ->method('condition')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

