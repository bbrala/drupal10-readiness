modules/contrib/entity_hierarchy/entity_hierarchy.drush.inc
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/MicrositeMenuItemOverrideStorageSchema.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Traits/MediaTrait.php
modules/contrib/entity_hierarchy/src/Plugin/views/relationship/HierarchyRoot.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/entity_hierarchy_microsite.module
modules/contrib/entity_hierarchy/src/Information/ParentCandidate.php
modules/contrib/entity_hierarchy/tests/src/Functional/DeleteParentWarningTest.php
modules/contrib/entity_hierarchy/tests/src/Kernel/ViewsRevisionableIntegrationTest.php
modules/contrib/entity_hierarchy/entity_hierarchy.module
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Cache/MicrositeCacheContext.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_workbench_access/entity_hierarchy_workbench_access.install
modules/contrib/entity_hierarchy/modules/entity_hierarchy_workbench_access/entity_hierarchy_workbench_access.module
modules/contrib/entity_hierarchy/modules/entity_hierarchy_workbench_access/src/Plugin/AccessControlHierarchy/EntityHierarchy.php
modules/contrib/entity_hierarchy/src/Information/ParentCandidateInterface.php
modules/contrib/entity_hierarchy/src/Plugin/Derivative/DynamicLocalTasks.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/MicrositeMenuLinkDiscovery.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/ChildOfMicrositeLookup.php
modules/contrib/entity_hierarchy/tests/src/Traits/EntityHierarchyTestTrait.php
modules/contrib/entity_hierarchy/src/Routing/EntityHierarchyRouteProvider.php
modules/contrib/entity_hierarchy/src/Plugin/Derivative/EntityHierarchySelectionDeriver.php
modules/contrib/entity_hierarchy/entity_hierarchy.views.inc
modules/contrib/entity_hierarchy/tests/src/Functional/ForwardRevisionNodeValidationTest.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/ChildOfMicrositeLookupInterface.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Controller/AddMenuOverride.php
modules/contrib/entity_hierarchy/src/Routing/ReorderChildrenAccess.php
modules/contrib/entity_hierarchy/src/Plugin/EntityReferenceSelection/EntityHierarchy.php
modules/contrib/entity_hierarchy/tests/src/Unit/TreeRebuilderUnitTest.php
modules/contrib/entity_hierarchy/src/Storage/EntityTreeNodeMapper.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Entity/Microsite.php
modules/contrib/entity_hierarchy/src/Plugin/Field/FieldFormatter/EntityReferenceHierarchyLabelFormatter.php
modules/contrib/entity_hierarchy/tests/src/Functional/HideWeightFieldFunctionalTest.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_breadcrumb/src/HierarchyBasedBreadcrumbBuilder.php
modules/contrib/entity_hierarchy/src/Storage/EntityTreeNodeMapperInterface.php
modules/contrib/entity_hierarchy/src/Storage/InsertPosition.php
modules/contrib/entity_hierarchy/src/Storage/NestedSetNodeKeyFactory.php
modules/contrib/entity_hierarchy/src/Storage/NestedSetStorage.php
modules/contrib/entity_hierarchy/src/Plugin/Field/FieldType/EntityReferenceHierarchy.php
modules/contrib/entity_hierarchy/src/Storage/NestedSetStorageFactory.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Entity/MicrositeInterface.php
modules/contrib/entity_hierarchy/src/Storage/ParentEntityDeleteUpdater.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Entity/MicrositeMenuItemOverride.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/MicrositeMenuLinkDiscoveryInterface.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Plugin/Block/MicrositeLogoBranding.php
modules/contrib/entity_hierarchy/tests/src/Functional/ManageDisplayTest.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_breadcrumb/tests/src/Functional/BreadcrumbFunctionalTest.php
modules/contrib/entity_hierarchy/src/Storage/ParentEntityReactionBase.php
modules/contrib/entity_hierarchy/tests/src/Functional/ReorderChildrenContentModerationFunctionalTest.php
modules/contrib/entity_hierarchy/src/Storage/ParentEntityRevisionUpdater.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Plugin/Block/MicrositeMenu.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_workbench_access/src/Plugin/Derivative/WorkbenchAccessControlDeriver.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_breadcrumb/tests/src/Kernel/BreadcrumbTest.php
modules/contrib/entity_hierarchy/src/Storage/TreeLockTrait.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_workbench_access/src/Plugin/Validation/Constraint/ValidEntityHierarchySection.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_workbench_access/src/Plugin/Validation/Constraint/ValidEntityHierarchySectionValidator.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Entity/MicrositeMenuItemOverrideInterface.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/EntityHooks.php
modules/contrib/entity_hierarchy/src/Storage/TreeRebuilder.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Plugin/Condition/ChildOfMicrosite.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Plugin/Deriver/MicrositeMenuItemDeriver.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Plugin/Menu/MicrositeMenuItem.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_workbench_access/tests/src/Functional/UpdatePathTest.php
modules/contrib/entity_hierarchy/tests/src/Functional/ReorderChildrenFunctionalTest.php
modules/contrib/entity_hierarchy/src/Plugin/Field/FieldType/EntityReferenceHierarchyFieldItemList.php
modules/contrib/entity_hierarchy/tests/modules/entity_hierarchy_test_base_field/entity_hierarchy_test_base_field.module
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Form/MicrositeForm.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/entity_hierarchy_microsite.api.php
modules/contrib/entity_hierarchy/src/Plugin/Field/FieldWidget/EntityReferenceHierarchyAutocomplete.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Plugin/MicrositePluginTrait.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Form/MicrositeMenuItemDeleteForm.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_workbench_access/tests/src/Kernel/EntityHierarchyWorkbenchAccessTest.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/Form/MicrositeMenuItemForm.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/modules/entity_hierarchy_microsite_test/entity_hierarchy_microsite_test.module
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Functional/MicrositeAdminTest.php
modules/contrib/entity_hierarchy/src/Plugin/Field/FieldWidget/EntityReferenceHierarchySelect.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/src/MicrositeListBuilder.php
modules/contrib/entity_hierarchy/src/Plugin/Validation/Constraint/ValidHierarchyReferenceConstraint.php
modules/contrib/entity_hierarchy/src/Plugin/Validation/Constraint/ValidHierarchyReferenceConstraintValidator.php
modules/contrib/entity_hierarchy/tests/src/Functional/ReorderChildrenWithRevisionsFunctionalTest.php
modules/contrib/entity_hierarchy/src/Plugin/views/argument/EntityHierarchyArgumentPluginBase.php
modules/contrib/entity_hierarchy/tests/src/Kernel/AutocompleteHandlerTest.php
modules/contrib/entity_hierarchy/src/Commands/EntityHierarchyCommands.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Functional/MicrositeFunctionalTestBase.php
modules/contrib/entity_hierarchy/src/Form/HierarchyChildrenForm.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Functional/MicrositeLogoBrandingBlockTest.php
modules/contrib/entity_hierarchy/src/Plugin/views/argument/HierarchyIsChildOfEntity.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Functional/MicrositeMenuBlockTest.php
modules/contrib/entity_hierarchy/src/Plugin/views/argument/HierarchyIsChildOfEntityRevision.php
modules/contrib/entity_hierarchy/src/Plugin/views/argument/HierarchyIsParentOfEntity.php
modules/contrib/entity_hierarchy/tests/src/Kernel/BaseFieldTest.php
modules/contrib/entity_hierarchy/tests/src/Kernel/EntityHierarchyKernelTestBase.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Kernel/ChildOfMicrositeConditionTest.php
modules/contrib/entity_hierarchy/tests/src/Kernel/EntityHierarchyValidationTest.php
modules/contrib/entity_hierarchy/src/Plugin/views/argument/HierarchyIsParentOfEntityRevision.php
modules/contrib/entity_hierarchy/src/Plugin/views/argument/HierarchyIsSiblingOfEntity.php
modules/contrib/entity_hierarchy/tests/src/Kernel/HierarchyNestedSetIntegrationTest.php
modules/contrib/entity_hierarchy/src/Plugin/views/argument/HierarchyIsSiblingOfEntityRevision.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Kernel/EntityHierarchyMicrositeKernelTestBase.php
modules/contrib/entity_hierarchy/src/Plugin/views/field/HierarchyTreeSummary.php
modules/contrib/entity_hierarchy/src/Handler/EntityHierarchyHandler.php
modules/contrib/entity_hierarchy/src/Handler/EntityHierarchyHandlerInterface.php
modules/contrib/entity_hierarchy/src/Handler/NodeEntityHierarchyHandler.php
modules/contrib/entity_hierarchy/src/Information/AncestryLabelTrait.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Kernel/MicrositeMenuItemsTest.php
modules/contrib/entity_hierarchy/src/Information/ChildEntityWarning.php
modules/contrib/entity_hierarchy/src/Information/ChildEntityWarningBuilder.php
modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Kernel/MicrositeTest.php
modules/contrib/entity_hierarchy/tests/src/Kernel/HierarchyNestedSetRevisionIntegrationTest.php
modules/contrib/entity_hierarchy/tests/src/Kernel/ParentCandidateTest.php
modules/contrib/entity_hierarchy/tests/src/Kernel/RebuildTest.php
modules/contrib/entity_hierarchy/tests/src/Kernel/ViewsIntegrationTest.php

18 files with changes
=====================

1) modules/contrib/entity_hierarchy/tests/src/Unit/TreeRebuilderUnitTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_hierarchy\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\EntityFieldManager;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\entity_hierarchy\Storage\TreeRebuilder;
@@ @@
  */
 class TreeRebuilderUnitTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Tests tree sort.
    *
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/entity_hierarchy_microsite.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Url;
+use Drupal\entity_hierarchy_microsite\Entity\MicrositeMenuItemOverrideInterface;
+use Drupal\entity_hierarchy_microsite\Plugin\Menu\MicrositeMenuItem;
+use Drupal\node\NodeInterface;
 /**
  * @file
  * Contains documentation for module APIs.
@@ @@
  * @param \Drupal\entity_hierarchy_microsite\Plugin\Menu\MicrositeMenuItem $menu_link
  *   The menu link plugin instance.
  */
-function hook_entity_hierarchy_microsite_menu_item_url_alter(\Drupal\Core\Url $url, \Drupal\entity_hierarchy_microsite\Entity\MicrositeMenuItemOverrideInterface $override, \Drupal\entity_hierarchy_microsite\Plugin\Menu\MicrositeMenuItem $menu_link) {
+function hook_entity_hierarchy_microsite_menu_item_url_alter(Url $url, MicrositeMenuItemOverrideInterface $override, MicrositeMenuItem $menu_link) {
   $attributes = $url->getOption('attributes');
   $attributes['class'] = [$override->some_field->value];
   $url->setOption('attributes', $attributes);
@@ @@
     }
     if (empty($link['options']['entity']) ||
       (!$node = $link['options']['entity']) ||
-      !$node instanceof \Drupal\node\NodeInterface ||
+      !$node instanceof NodeInterface ||
       $node->bundle() !== 'test') {
       continue;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


3) modules/contrib/entity_hierarchy/modules/entity_hierarchy_breadcrumb/tests/src/Kernel/BreadcrumbTest.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $user = $this->createUser([], ['view test entity']);
     $this->container->get('account_switcher')->switchTo($user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_hierarchy/modules/entity_hierarchy_breadcrumb/tests/src/Functional/BreadcrumbFunctionalTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityHierarchyField(static::ENTITY_TYPE, static::ENTITY_TYPE, static::FIELD_NAME);
     $this->additionalSetup();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_hierarchy/modules/entity_hierarchy_workbench_access/tests/src/Kernel/EntityHierarchyWorkbenchAccessTest.php:66

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     EntityKernelTestBase::setUp();
     $this->installEntitySchema(static::ENTITY_TYPE);
     $this->installEntitySchema('section_association');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Kernel/EntityHierarchyMicrositeKernelTestBase.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installEntitySchema('file');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Functional/MicrositeMenuBlockTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('entity_hierarchy_microsite_menu', [
       'field' => self::FIELD_NAME,
@@ @@
     foreach ($children as $child) {
       $this->assertNotEmpty($menu->find('named', ['link', $child->label()]));
       $assert->linkExists($child->label());
-      $xpath = $this->buildXPathQuery('//a[contains(@href, :href)]', [':href' => $child->toUrl()->toString()]);
+      $xpath = $this->assertSession()->buildXPathQuery('//a[contains(@href, :href)]', [':href' => $child->toUrl()->toString()]);
       $this->assertNotEmpty($menu->find('xpath', $xpath));
     }
   }
    ----------- end diff -----------

Applied rules:
 * BuildXPathQueryRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Functional/MicrositeLogoBrandingBlockTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('entity_hierarchy_microsite_branding', [
       'field' => self::FIELD_NAME,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/entity_hierarchy/modules/entity_hierarchy_microsite/tests/src/Functional/MicrositeFunctionalTestBase.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_actions_block');
     $this->drupalPlaceBlock('page_title_block', ['region' => 'content']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/entity_hierarchy/tests/src/Kernel/EntityHierarchyKernelTestBase.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema(static::ENTITY_TYPE);
     $this->setupEntityHierarchyField(static::ENTITY_TYPE, static::ENTITY_TYPE, static::FIELD_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/entity_hierarchy/tests/src/Kernel/AutocompleteHandlerTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $user = $this->createUser([], ['view test entity']);
     $this->container->get('account_switcher')->switchTo($user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/entity_hierarchy/tests/src/Functional/ReorderChildrenWithRevisionsFunctionalTest.php:78

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityHierarchyField(static::ENTITY_TYPE, static::ENTITY_TYPE, static::FIELD_NAME);
     $this->additionalSetup();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/entity_hierarchy/tests/src/Functional/ReorderChildrenFunctionalTest.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityHierarchyField(static::ENTITY_TYPE, static::ENTITY_TYPE, static::FIELD_NAME);
     $this->additionalSetup();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/entity_hierarchy/tests/src/Functional/ReorderChildrenContentModerationFunctionalTest.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->placeBlock('local_tasks_block');
     $this->placeBlock('page_title_block');
@@ @@
     }, $children));

     $this->drupalGet($this->parent->toUrl('edit-form'));
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'name[0][value]' => 'Parent - draft',
       'revision' => TRUE,
       'moderation_state[0][state]' => 'draft',
@@ @@
     // Publish the draft and confirm we see same children.
     $this->drupalGet($this->parent->toUrl('edit-form'));
     $this->assertEquals('Current state Draft', $this->cssSelect('#edit-moderation-state-0-current')[0]->getText());
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'name[0][value]' => 'Parent - published',
       'revision' => TRUE,
       'moderation_state[0][state]' => 'published',
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/entity_hierarchy/tests/src/Functional/ManageDisplayTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityHierarchyField(static::ENTITY_TYPE, static::ENTITY_TYPE, static::FIELD_NAME);
     $this->additionalSetup();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/entity_hierarchy/tests/src/Functional/HideWeightFieldFunctionalTest.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityHierarchyField(static::ENTITY_TYPE, static::ENTITY_TYPE, static::FIELD_NAME);
     $this->additionalSetup();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/entity_hierarchy/tests/src/Functional/ForwardRevisionNodeValidationTest.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $content_type = $this->drupalCreateContentType([
       'type' => 'article',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/entity_hierarchy/tests/src/Functional/DeleteParentWarningTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityHierarchyField(static::ENTITY_TYPE, static::ENTITY_TYPE, static::FIELD_NAME);
     $this->additionalSetup();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 18 files have been changed by Rector                                      

