diff --git a/composer.json b/composer.json
index 03d15d0..e61f36f 100644
--- a/composer.json
+++ b/composer.json
@@ -22,8 +22,8 @@
     "source": "https://git.drupalcode.org/project/entity_sync"
   },
   "require": {
-    "drupal/core": "^8.8 | ^9",
-    "drupal/ultimate_cron": "^2.0@alpha"
+    "drupal/ultimate_cron": "^2.0@alpha",
+    "drupal/core": "^8.8 | ^9 || ^10"
   },
   "require-dev": {
     "symfony/yaml": "^2.0.0|^3.0.0|^4.0.0|^5.0.0",
diff --git a/entity_sync.info.yml b/entity_sync.info.yml
index a96b594..729e42b 100644
--- a/entity_sync.info.yml
+++ b/entity_sync.info.yml
@@ -2,4 +2,4 @@ name: Entity Synchronization
 description: Provides a framework for synchronizing Drupal entities to and from remote systems.
 type: module
 package: Sync
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
diff --git a/src/Event/InitiateOperationEvent.php b/src/Event/InitiateOperationEvent.php
index 758ed7c..611c8fa 100644
--- a/src/Event/InitiateOperationEvent.php
+++ b/src/Event/InitiateOperationEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_sync\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the operation initiate event.
diff --git a/src/Event/PostTerminateOperationEvent.php b/src/Event/PostTerminateOperationEvent.php
index d22bc0a..29d3be6 100644
--- a/src/Event/PostTerminateOperationEvent.php
+++ b/src/Event/PostTerminateOperationEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_sync\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the operation post-terminate event.
diff --git a/src/Event/PreInitiateOperationEvent.php b/src/Event/PreInitiateOperationEvent.php
index 6860f9e..2a56d34 100644
--- a/src/Event/PreInitiateOperationEvent.php
+++ b/src/Event/PreInitiateOperationEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_sync\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the operation pre-initiate event.
diff --git a/src/Event/TerminateOperationEvent.php b/src/Event/TerminateOperationEvent.php
index b01fcf0..54feb88 100644
--- a/src/Event/TerminateOperationEvent.php
+++ b/src/Event/TerminateOperationEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_sync\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the operation terminate event.
diff --git a/src/Export/EntityManager.php b/src/Export/EntityManager.php
index db6e062..7469562 100644
--- a/src/Export/EntityManager.php
+++ b/src/Export/EntityManager.php
@@ -792,7 +792,7 @@ class EntityManager extends EntityManagerBase implements EntityManagerInterface
       $local_entity,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::LOCAL_ENTITY_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::LOCAL_ENTITY_MAPPING);
 
     // Return the final mapping.
     return $event->getEntityMapping();
diff --git a/src/Export/Event/FieldMappingEvent.php b/src/Export/Event/FieldMappingEvent.php
index e1a973a..699421a 100644
--- a/src/Export/Event/FieldMappingEvent.php
+++ b/src/Export/Event/FieldMappingEvent.php
@@ -2,11 +2,10 @@
 
 namespace Drupal\entity_sync\Export\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
 
-use Symfony\Component\EventDispatcher\Event;
-
 /**
  * Defines the export field mapping event.
  *
diff --git a/src/Export/Event/LocalEntityMappingEvent.php b/src/Export/Event/LocalEntityMappingEvent.php
index 5e92b91..0ea514c 100644
--- a/src/Export/Event/LocalEntityMappingEvent.php
+++ b/src/Export/Event/LocalEntityMappingEvent.php
@@ -2,11 +2,10 @@
 
 namespace Drupal\entity_sync\Export\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
 
-use Symfony\Component\EventDispatcher\Event;
-
 /**
  * Defines the export local entity mapping event.
  *
diff --git a/src/Export/FieldManager.php b/src/Export/FieldManager.php
index 56c9392..241309b 100644
--- a/src/Export/FieldManager.php
+++ b/src/Export/FieldManager.php
@@ -219,7 +219,7 @@ class FieldManager implements FieldManagerInterface {
       $remote_entity_id,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::FIELD_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::FIELD_MAPPING);
 
     // Return the final mappings.
     return $event->getFieldMapping();
diff --git a/src/Import/Event/FieldMappingEvent.php b/src/Import/Event/FieldMappingEvent.php
index f945097..6a8cbbf 100644
--- a/src/Import/Event/FieldMappingEvent.php
+++ b/src/Import/Event/FieldMappingEvent.php
@@ -2,11 +2,10 @@
 
 namespace Drupal\entity_sync\Import\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
 
-use Symfony\Component\EventDispatcher\Event;
-
 /**
  * Defines the import field mapping event.
  *
diff --git a/src/Import/Event/ListFiltersEvent.php b/src/Import/Event/ListFiltersEvent.php
index 4863a88..c1be42c 100644
--- a/src/Import/Event/ListFiltersEvent.php
+++ b/src/Import/Event/ListFiltersEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_sync\Import\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the import list filters event.
diff --git a/src/Import/Event/LocalEntityMappingEvent.php b/src/Import/Event/LocalEntityMappingEvent.php
index 75bb47c..c5f5fb7 100644
--- a/src/Import/Event/LocalEntityMappingEvent.php
+++ b/src/Import/Event/LocalEntityMappingEvent.php
@@ -2,11 +2,10 @@
 
 namespace Drupal\entity_sync\Import\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
 
-use Symfony\Component\EventDispatcher\Event;
-
 /**
  * Defines the import local entity mapping event.
  *
diff --git a/src/Import/Event/RemoteEntityMappingEvent.php b/src/Import/Event/RemoteEntityMappingEvent.php
index 9646958..5ef2507 100644
--- a/src/Import/Event/RemoteEntityMappingEvent.php
+++ b/src/Import/Event/RemoteEntityMappingEvent.php
@@ -2,10 +2,9 @@
 
 namespace Drupal\entity_sync\Import\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
 
-use Symfony\Component\EventDispatcher\Event;
-
 /**
  * Defines the import remote entity mapping event.
  *
diff --git a/src/Import/FieldManager.php b/src/Import/FieldManager.php
index 6225ad6..5180879 100644
--- a/src/Import/FieldManager.php
+++ b/src/Import/FieldManager.php
@@ -262,7 +262,7 @@ class FieldManager implements FieldManagerInterface {
       $local_entity,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::FIELD_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::FIELD_MAPPING);
 
     // Return the final mappings.
     return $event->getFieldMapping();
diff --git a/src/Import/Manager.php b/src/Import/Manager.php
index 9fe3d56..0f248c4 100644
--- a/src/Import/Manager.php
+++ b/src/Import/Manager.php
@@ -956,7 +956,7 @@ class Manager extends EntityManagerBase implements ManagerInterface {
     ImmutableConfig $sync
   ) {
     $event = new RemoteEntityMappingEvent($remote_entity, $sync);
-    $this->eventDispatcher->dispatch(Events::REMOTE_ENTITY_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::REMOTE_ENTITY_MAPPING);
 
     // Return the final mapping.
     return $event->getEntityMapping();
@@ -995,7 +995,7 @@ class Manager extends EntityManagerBase implements ManagerInterface {
       $local_entity,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::LOCAL_ENTITY_MAPPING, $event);
+    $this->eventDispatcher->dispatch($event, Events::LOCAL_ENTITY_MAPPING);
 
     // Return the final mapping.
     return $event->getEntityMapping();
@@ -1028,7 +1028,7 @@ class Manager extends EntityManagerBase implements ManagerInterface {
       $context,
       $sync
     );
-    $this->eventDispatcher->dispatch(Events::REMOTE_LIST_FILTERS, $event);
+    $this->eventDispatcher->dispatch($event, Events::REMOTE_LIST_FILTERS);
 
     // Return the final filters.
     return $event->getFilters();
diff --git a/tests/src/Unit/Config/SyncManagerTest.php b/tests/src/Unit/Config/SyncManagerTest.php
index fdcdbaa..3bffe01 100644
--- a/tests/src/Unit/Config/SyncManagerTest.php
+++ b/tests/src/Unit/Config/SyncManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\entity_sync\Unit\Config;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Config\Manager;
 
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -28,6 +29,7 @@ require_once __DIR__ . '/../../TestTrait/FixturesTrait.php';
  */
 class SyncManagerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   use FixturesTrait;
 
   /**
diff --git a/tests/src/Unit/Export/FieldManagerGetNamesTest.php b/tests/src/Unit/Export/FieldManagerGetNamesTest.php
index c463f7a..eae53be 100644
--- a/tests/src/Unit/Export/FieldManagerGetNamesTest.php
+++ b/tests/src/Unit/Export/FieldManagerGetNamesTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\entity_sync\Unit\Export;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Config\ManagerInterface as ConfigManagerInterface;
 use Drupal\entity_sync\Export\FieldManager;
 
@@ -31,6 +32,7 @@ require_once __DIR__ . '/../../TestTrait/FixturesTrait.php';
  */
 class FieldManagerGetNamesTest extends UnitTestCase {
 
+  use ProphecyTrait;
   use FixturesTrait;
 
   /**
diff --git a/tests/src/Unit/Export/FieldManagerTest.php b/tests/src/Unit/Export/FieldManagerTest.php
index 6757961..5f6f0e1 100644
--- a/tests/src/Unit/Export/FieldManagerTest.php
+++ b/tests/src/Unit/Export/FieldManagerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\entity_sync\Unit\Export;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use phpmock\phpunit\PHPMock;
 use Drupal\entity_sync\Config\ManagerInterface as ConfigManagerInterface;
 use Drupal\entity_sync\Exception\FieldExportException;
 use Drupal\entity_sync\Export\Event\Events;
@@ -45,10 +47,11 @@ require_once __DIR__ . '/../../Mock/Export/FieldManager.php';
  */
 class FieldManagerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   use DataProviderTrait;
   use FixturesTrait;
 
-  use \phpmock\phpunit\PHPMock;
+  use PHPMock;
 
   /**
    * Holds the return value of the field manager for each test case.
@@ -62,7 +65,7 @@ class FieldManagerTest extends UnitTestCase {
    *
    * We set the expected value where appropriate in the branching methods.
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->expectedFields = [];
   }
 
diff --git a/tests/src/Unit/Import/CommandsTest.php b/tests/src/Unit/Import/CommandsTest.php
index 2d5900d..7203c0d 100644
--- a/tests/src/Unit/Import/CommandsTest.php
+++ b/tests/src/Unit/Import/CommandsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\entity_sync\Unit\Import;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Commands\Import as Command;
 use Drupal\entity_sync\Import\ManagerInterface;
 use Drupal\Tests\UnitTestCase;
@@ -15,6 +16,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class CommandsTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Different values for the datetime filters.
    *
diff --git a/tests/src/Unit/Import/EntityManagerTest.php b/tests/src/Unit/Import/EntityManagerTest.php
index 7e83c83..0b5efaa 100644
--- a/tests/src/Unit/Import/EntityManagerTest.php
+++ b/tests/src/Unit/Import/EntityManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\entity_sync\Unit\Import;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Client\ClientFactory;
 use Drupal\entity_sync\Client\ClientInterface;
 use Drupal\entity_sync\Exception\FieldImportException;
@@ -41,6 +42,7 @@ require_once __DIR__ . '/../../Exception/TestRuntimeException.php';
  */
 class EntityManagerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   use DataProviderTrait;
   use FixturesTrait;
 
diff --git a/tests/src/Unit/Import/FieldManagerTest.php b/tests/src/Unit/Import/FieldManagerTest.php
index cc34950..ac756d3 100644
--- a/tests/src/Unit/Import/FieldManagerTest.php
+++ b/tests/src/Unit/Import/FieldManagerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\entity_sync\Unit\Import;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use phpmock\phpunit\PHPMock;
 use Drupal\entity_sync\Config\ManagerInterface as ConfigManagerInterface;
 use Drupal\entity_sync\Exception\FieldImportException;
 use Drupal\entity_sync\Import\FieldManager;
@@ -40,10 +42,11 @@ require_once __DIR__ . '/../../Exception/TestRuntimeException.php';
  */
 class FieldManagerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   use DataProviderTrait;
   use FixturesTrait;
 
-  use \phpmock\phpunit\PHPMock;
+  use PHPMock;
 
   /**
    * Different values for the remote changed field.
diff --git a/tests/src/Unit/Import/ImportListQueueWorkerTest.php b/tests/src/Unit/Import/ImportListQueueWorkerTest.php
index 39a2ff2..235d5d9 100644
--- a/tests/src/Unit/Import/ImportListQueueWorkerTest.php
+++ b/tests/src/Unit/Import/ImportListQueueWorkerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\entity_sync\Unit\Import;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Import\ManagerInterface;
 use Drupal\entity_sync\Plugin\QueueWorker\ImportList as QueueWorker;
 use Drupal\Tests\UnitTestCase;
@@ -17,6 +18,7 @@ use Prophecy\Argument;
  */
 class ImportListQueueWorkerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Different values for the datetime filters.
    */
diff --git a/tests/src/Unit/State/CommandsTest.php b/tests/src/Unit/State/CommandsTest.php
index ab89f82..daebca6 100644
--- a/tests/src/Unit/State/CommandsTest.php
+++ b/tests/src/Unit/State/CommandsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\entity_sync\Unit\State;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\entity_sync\Commands\State as Command;
 use Drupal\entity_sync\StateManagerInterface;
 use Drupal\Tests\UnitTestCase;
@@ -15,6 +16,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class CommandsTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Tests that the state manager is properly called to unset the state.
    *
