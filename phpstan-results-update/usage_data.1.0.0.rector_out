modules/contrib/usage_data/src/EntityStatisticsStorage.php
modules/contrib/usage_data/src/EntityStatisticsStorageInterface.php
modules/contrib/usage_data/src/Event/CollectExtraDataEvent.php
modules/contrib/usage_data/src/Event/RecordingViewEvent.php
modules/contrib/usage_data/src/Event/UsageDataEvents.php
modules/contrib/usage_data/usage_data.install
modules/contrib/usage_data/usage_data.module
modules/contrib/usage_data/usage_data.php

4 files with changes
====================

1) modules/contrib/usage_data/usage_data.module:103

    ---------- begin diff ----------
@@ @@
 }

 function _usage_data_default_settings($entity_id, $entity_type_id): array {
-  $path = drupal_get_path('module', 'usage_data');
+  $path = \Drupal::service('extension.list.module')->getPath('usage_data');
   $current_user = \Drupal::currentUser();
   $roles = $current_user->getRoles(TRUE);
   $data = [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


2) modules/contrib/usage_data/src/Event/RecordingViewEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\usage_data\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Event fired when a view record data is about to be stored.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/usage_data/src/Event/CollectExtraDataEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\usage_data\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Event fired when collecting extra data to be passed to the ajax call.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/usage_data/src/EntityStatisticsStorage.php:81

    ---------- begin diff ----------
@@ @@
      * assign it to the proper column.
      */
     $event = new RecordingViewEvent($data);
-    $this->eventDispatcher->dispatch(UsageDataEvents::RECORD_VIEW, $event);
+    $this->eventDispatcher->dispatch($event, UsageDataEvents::RECORD_VIEW);
     $data = $event->getData();

     // Removing extra data.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


 [OK] 4 files have been changed by Rector                                       

