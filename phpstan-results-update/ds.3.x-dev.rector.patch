diff --git a/ds.module b/ds.module
index dd9765c6..34a5cb77 100644
--- a/ds.module
+++ b/ds.module
@@ -58,7 +58,7 @@ function ds_theme() {
           'render element' => 'elements',
           'template' => strtr($plugin['theme'], '_', '-'),
           'base hook' => 'field',
-          'path' => drupal_get_path('module', $plugin['provider']) . '/templates',
+          'path' => \Drupal::service('extension.list.module')->getPath($plugin['provider']) . '/templates',
         ];
 
         if (!empty($plugin['path'])) {
diff --git a/includes/field_ui.inc b/includes/field_ui.inc
index e3036bbf..db2aeb34 100644
--- a/includes/field_ui.inc
+++ b/includes/field_ui.inc
@@ -987,7 +987,7 @@ function _ds_field_ui_table_layouts_preview(array &$form, FormStateInterface $fo
     }
 
     if ($form_state->hasValue('ds_layout') || (!empty($layout) && isset($layout['regions'])) && (!empty($chosen_layout))) {
-      $fallback_image = drupal_get_path('module', 'ds') . '/images/preview.png';
+      $fallback_image = \Drupal::service('extension.list.module')->getPath('ds') . '/images/preview.png';
       $current_layout = $form_state->hasValue('ds_layout') && (!isset($layout->layout) || $form_state->getValue('ds_layout') != $layout->layout) ? t('Current layout (after save)') : t('Current layout');
       $image = $chosen_layout->getIconPath();
       if (empty($image)) {
diff --git a/modules/ds_switch_view_mode/ds_switch_view_mode.module b/modules/ds_switch_view_mode/ds_switch_view_mode.module
index be8cafc6..b1f5902a 100644
--- a/modules/ds_switch_view_mode/ds_switch_view_mode.module
+++ b/modules/ds_switch_view_mode/ds_switch_view_mode.module
@@ -121,7 +121,7 @@ function ds_switch_view_mode_form_node_form_alter(&$form, FormStateInterface $fo
       $layout_settings = $chosen_layout->getThirdPartySettings('ds');
 
       $ds_layouts = Ds::getLayouts();
-      $fallback_image = drupal_get_path('module', 'ds') . '/images/preview.png';
+      $fallback_image = \Drupal::service('extension.list.module')->getPath('ds') . '/images/preview.png';
 
       if (isset($layout_settings['layout'])) {
         /** @var \Drupal\Core\Layout\LayoutDefinition $chosen_layout */
diff --git a/src/Form/ChangeLayoutForm.php b/src/Form/ChangeLayoutForm.php
index 25341803..08bf0606 100644
--- a/src/Form/ChangeLayoutForm.php
+++ b/src/Form/ChangeLayoutForm.php
@@ -162,10 +162,10 @@ class ChangeLayoutForm extends FormBase {
         '#suffix' => '</div>',
       ];
 
-      $fallback_image = drupal_get_path('module', 'ds') . '/images/preview.png';
+      $fallback_image = \Drupal::service('extension.list.module')->getPath('ds') . '/images/preview.png';
       $old_image = $old_layout_info->getIconPath() ?: $fallback_image;
       $new_image = $new_layout->getIconPath() ?: $fallback_image;
-      $arrow = drupal_get_path('module', 'ds') . '/images/arrow.png';
+      $arrow = \Drupal::service('extension.list.module')->getPath('ds') . '/images/arrow.png';
 
       $form['preview']['old_layout'] = [
         '#markup' => '<div class="ds-layout-preview-image"><img src="' . base_path() . $old_image . '"/></div>',
diff --git a/tests/src/Functional/BlockFieldPluginTest.php b/tests/src/Functional/BlockFieldPluginTest.php
index 3fae3ded..babb2dac 100644
--- a/tests/src/Functional/BlockFieldPluginTest.php
+++ b/tests/src/Functional/BlockFieldPluginTest.php
@@ -37,7 +37,7 @@ class BlockFieldPluginTest extends TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Ensure that the plugin definitions are cleared.
@@ -89,7 +89,8 @@ class BlockFieldPluginTest extends TestBase {
     $edit = [
       'use_block_title' => '1',
     ];
-    $this->drupalPostForm('admin/structure/ds/fields/manage_block/test_block_title_field', $edit, t('Save'));
+    $this->drupalGet('admin/structure/ds/fields/manage_block/test_block_title_field');
+    $this->submitForm($edit, t('Save'));
     $text = t('The field %name has been saved', ['%name' => 'Test block title field']);
     $this->assertSession()->responseContains((string) $text);
 
@@ -201,7 +202,8 @@ class BlockFieldPluginTest extends TestBase {
     $edit = [
       'add_block_wrappers' => '1',
     ];
-    $this->drupalPostForm('admin/structure/ds/fields/manage_block/test_block_title_field', $edit, t('Save'));
+    $this->drupalGet('admin/structure/ds/fields/manage_block/test_block_title_field');
+    $this->submitForm($edit, t('Save'));
 
     // Verify block wrappers do exist.
     $this->drupalGet('node/' . $node->id());
diff --git a/tests/src/Functional/BlockTest.php b/tests/src/Functional/BlockTest.php
index 79b4d04f..4457910f 100644
--- a/tests/src/Functional/BlockTest.php
+++ b/tests/src/Functional/BlockTest.php
@@ -39,7 +39,7 @@ class BlockTest extends TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a test user.
@@ -63,14 +63,16 @@ class BlockTest extends TestBase {
       'label' => 'Basic Block',
       'id' => 'basic',
     ];
-    $this->drupalPostForm('admin/structure/block/block-content/types/add', $edit,'Save', []);
+    $this->drupalGet('admin/structure/block/block-content/types/add', []);
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('Custom block type Basic Block has been added.');
 
     // Create a basic block.
     $edit = [];
     $edit['info[0][value]'] = 'Test Block';
     $edit['body[0][value]'] = $this->randomMachineName(16);
-    $this->drupalPostForm('block/add/basic', $edit, t('Save'), []);
+    $this->drupalGet('block/add/basic', []);
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->pageTextContains('Basic Block Test Block has been created.');
 
     // Place the block.
@@ -81,12 +83,14 @@ class BlockTest extends TestBase {
     ];
     $block = BlockContent::load(1);
     $url = 'admin/structure/block/add/block_content:' . $block->uuid() . '/' . $this->config('system.theme')->get('default');
-    $this->drupalPostForm($url, $instance, t('Save block'));
+    $this->drupalGet($url);
+    $this->submitForm($instance, t('Save block'));
 
     // Change to a DS layout.
     $url = 'admin/structure/block/block-content/manage/basic/display';
     $edit = ['ds_layout' => 'ds_2col'];
-    $this->drupalPostForm($url, $edit, t('Save'), []);
+    $this->drupalGet($url, []);
+    $this->submitForm($edit, t('Save'));
 
     $fields = [
       'fields[block_description][region]' => 'left',
diff --git a/tests/src/Functional/CacheTagsTest.php b/tests/src/Functional/CacheTagsTest.php
index 61a51afd..19934785 100644
--- a/tests/src/Functional/CacheTagsTest.php
+++ b/tests/src/Functional/CacheTagsTest.php
@@ -19,7 +19,8 @@ class CacheTagsTest extends TestBase {
 
     // Create field CSS classes.
     $edit = ['fields' => "test_field_class\ntest_field_class_2|Field class 2"];
-    $this->drupalPostForm('admin/structure/ds/classes', $edit, t('Save configuration'));
+    $this->drupalGet('admin/structure/ds/classes');
+    $this->submitForm($edit, t('Save configuration'));
 
     // Create a token field.
     $token_field = [
diff --git a/tests/src/Functional/CommentTest.php b/tests/src/Functional/CommentTest.php
index a56adb5d..15b2c124 100644
--- a/tests/src/Functional/CommentTest.php
+++ b/tests/src/Functional/CommentTest.php
@@ -40,7 +40,7 @@ class CommentTest extends CommentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a test user.
diff --git a/tests/src/Functional/DsFieldCacheTest.php b/tests/src/Functional/DsFieldCacheTest.php
index 23bbc66f..7d654bbf 100644
--- a/tests/src/Functional/DsFieldCacheTest.php
+++ b/tests/src/Functional/DsFieldCacheTest.php
@@ -20,7 +20,7 @@ class DsFieldCacheTest extends TestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->adminUser);
   }
@@ -36,7 +36,8 @@ class DsFieldCacheTest extends TestBase {
       'fields[test_caching_field][region]' => 'left',
       'fields[test_caching_field][label]' => 'above',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/display', ['ds_layout' => 'ds_2col'], t('Save'));
+    $this->drupalGet('admin/structure/types/manage/article/display');
+    $this->submitForm(['ds_layout' => 'ds_2col'], t('Save'));
     $this->dsConfigureUi($fields);
 
     // Create and visit the node so that it is cached as empty, ensure the title
diff --git a/tests/src/Functional/DsTestTrait.php b/tests/src/Functional/DsTestTrait.php
index c8532aa8..5f98c7f5 100644
--- a/tests/src/Functional/DsTestTrait.php
+++ b/tests/src/Functional/DsTestTrait.php
@@ -14,8 +14,9 @@ trait DsTestTrait {
     $edit += [
       'ds_layout' => 'ds_2col_stacked',
     ];
+    $this->drupalGet($url, $options);
 
-    $this->drupalPostForm($url, $edit, t('Save'), $options);
+    $this->submitForm($edit, t('Save'));
 
     $assert += [
       'regions' => [
@@ -39,8 +40,9 @@ trait DsTestTrait {
     $edit += [
       'regions' => "class_name_1\nclass_name_2|Friendly name",
     ];
+    $this->drupalGet('admin/structure/ds/classes');
 
-    $this->drupalPostForm('admin/structure/ds/classes', $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
     $this->assertSession()->responseContains('class_name_1', 'Class name 1 found');
     $this->assertSession()->responseContains('class_name_2', 'Class name 1 found');
@@ -55,15 +57,17 @@ trait DsTestTrait {
       "layout_configuration[ds_classes][header][]" => 'class_name_1',
       "layout_configuration[ds_classes][footer][]" => 'class_name_2',
     ];
+    $this->drupalGet($url);
 
-    $this->drupalPostForm($url, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
   }
 
   /**
    * Configure Field UI.
    */
   public function dsConfigureUi($edit, $url = 'admin/structure/types/manage/article/display') {
-    $this->drupalPostForm($url, $edit,'Save');
+    $this->drupalGet($url);
+    $this->submitForm($edit, 'Save');
   }
 
   /**
@@ -71,16 +75,17 @@ trait DsTestTrait {
    */
   public function dsEditFormatterSettings($edit, $field_name = 'body', $url = 'admin/structure/types/manage/article/display') {
     $element_value = 'edit ' . $field_name;
-    $this->drupalPostForm($url, [], $element_value);
+    $this->drupalGet($url);
+    $this->submitForm([], $element_value);
 
     if (isset($edit['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ft][id]'])) {
-      $this->drupalPostForm(NULL, ['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ft][id]' => $edit['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ft][id]']], t('Update'));
-      $this->drupalPostForm(NULL, [], $element_value);
+      $this->submitForm(['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ft][id]' => $edit['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ft][id]']], t('Update'));
+      $this->submitForm([], $element_value);
       unset($edit['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ft][id]']);
     }
 
-    $this->drupalPostForm(NULL, $edit, t('Update'));
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->submitForm($edit, t('Update'));
+    $this->submitForm([], t('Save'));
   }
 
   /**
@@ -88,16 +93,17 @@ trait DsTestTrait {
    */
   public function dsEditLimitSettings($edit, $field_name = 'body', $url = 'admin/structure/types/manage/article/display') {
     $element_value = 'edit ' . $field_name;
-    $this->drupalPostForm($url, [], $element_value);
+    $this->drupalGet($url);
+    $this->submitForm([], $element_value);
 
     if (isset($edit['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ft][id]'])) {
-      $this->drupalPostForm(NULL, ['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ds_limit]' => $edit['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ds_limit]']], t('Update'));
-      $this->drupalPostForm(NULL, [], $element_value);
+      $this->submitForm(['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ds_limit]' => $edit['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ds_limit]']], t('Update'));
+      $this->submitForm([], $element_value);
       unset($edit['fields[' . $field_name . '][settings_edit_form][third_party_settings][ds][ds_limit]']);
     }
 
-    $this->drupalPostForm(NULL, $edit, t('Update'));
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->submitForm($edit, t('Update'));
+    $this->submitForm([], t('Save'));
   }
 
   /**
@@ -115,8 +121,9 @@ trait DsTestTrait {
       'entities[node]' => '1',
       'content[value]' => 'Test field',
     ];
+    $this->drupalGet($url);
 
-    $this->drupalPostForm($url, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $text = t('The field %name has been saved', ['%name' => $edit['name']]);
     $this->assertSession()->responseContains((string) $text);
   }
@@ -136,8 +143,9 @@ trait DsTestTrait {
       'entities[node]' => '1',
       'block' => 'system_powered_by_block',
     ];
+    $this->drupalGet($url);
 
-    $this->drupalPostForm($url, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $text = t('The field %name has been saved', ['%name' => $edit['name']]);
     $this->assertSession()->responseContains((string) $text);
   }
@@ -156,7 +164,8 @@ trait DsTestTrait {
 
     // Create field CSS classes.
     $edit = ['fields' => "test_field_class\ntest_field_class_2|Field class 2\n[node:nid]"];
-    $this->drupalPostForm('admin/structure/ds/classes', $edit,'Save configuration');
+    $this->drupalGet('admin/structure/ds/classes');
+    $this->submitForm($edit, 'Save configuration');
 
     // Create a token field.
     $token_field = [
diff --git a/tests/src/Functional/DynamicFieldPluginTest.php b/tests/src/Functional/DynamicFieldPluginTest.php
index 56c16870..6e007e92 100644
--- a/tests/src/Functional/DynamicFieldPluginTest.php
+++ b/tests/src/Functional/DynamicFieldPluginTest.php
@@ -22,9 +22,10 @@ class DynamicFieldPluginTest extends TestBase {
     ];
 
     $this->dsCreateTokenField($edit);
+    $this->drupalGet('admin/structure/ds/fields/manage_token');
 
     // Create the same and assert it already exists.
-    $this->drupalPostForm('admin/structure/ds/fields/manage_token', $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('The machine-readable name is already in use. It must be unique.');
 
     $this->dsSelectLayout();
@@ -41,7 +42,8 @@ class DynamicFieldPluginTest extends TestBase {
     $edit = [
       'name' => 'Test field 2',
     ];
-    $this->drupalPostForm('admin/structure/ds/fields/manage_token/test_field', $edit,'Save');
+    $this->drupalGet('admin/structure/ds/fields/manage_token/test_field');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('The field Test field 2 has been saved');
 
     // Use the Field UI limit option.
@@ -50,7 +52,8 @@ class DynamicFieldPluginTest extends TestBase {
     $edit = [
       'ui_limit' => 'article|default',
     ];
-    $this->drupalPostForm('admin/structure/ds/fields/manage_token/test_field', $edit,'Save');
+    $this->drupalGet('admin/structure/ds/fields/manage_token/test_field');
+    $this->submitForm($edit, 'Save');
 
     $this->drupalGet('admin/structure/types/manage/article/display');
     $this->assertSession()->responseContains('fields[dynamic_token_field:node-test_field][weight]');
@@ -62,14 +65,16 @@ class DynamicFieldPluginTest extends TestBase {
     $edit = [
       'ui_limit' => 'article|*',
     ];
-    $this->drupalPostForm('admin/structure/ds/fields/manage_token/test_field', $edit,'Save');
+    $this->drupalGet('admin/structure/ds/fields/manage_token/test_field');
+    $this->submitForm($edit, 'Save');
     $this->drupalGet('admin/structure/types/manage/article/display');
     $this->assertSession()->responseContains('fields[dynamic_token_field:node-test_field][weight]');
     $this->drupalGet('admin/structure/types/manage/article/display/teaser');
     $this->assertSession()->responseContains('fields[dynamic_token_field:node-test_field][weight]');
+    $this->drupalGet('admin/structure/ds/fields/delete/test_field');
 
     // Remove the field.
-    $this->drupalPostForm('admin/structure/ds/fields/delete/test_field', [],'Confirm');
+    $this->submitForm([], 'Confirm');
     $this->assertSession()->pageTextContains('The field Test field 2 has been deleted');
 
     // Assert the field is gone at the manage display screen.
@@ -85,9 +90,10 @@ class DynamicFieldPluginTest extends TestBase {
     ];
 
     $this->dsCreateBlockField($edit);
+    $this->drupalGet('admin/structure/ds/fields/manage_block');
 
     // Create the same and assert it already exists.
-    $this->drupalPostForm('admin/structure/ds/fields/manage_block', $edit,'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('The machine-readable name is already in use. It must be unique.');
 
     $this->dsSelectLayout();
@@ -104,11 +110,13 @@ class DynamicFieldPluginTest extends TestBase {
     $edit = [
       'name' => 'Test block field 2',
     ];
-    $this->drupalPostForm('admin/structure/ds/fields/manage_block/test_block_field', $edit,'Save');
+    $this->drupalGet('admin/structure/ds/fields/manage_block/test_block_field');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('The field Test block field 2 has been saved');
+    $this->drupalGet('admin/structure/ds/fields/delete/test_block_field');
 
     // Remove the block field.
-    $this->drupalPostForm('admin/structure/ds/fields/delete/test_block_field', [],'Confirm');
+    $this->submitForm([], 'Confirm');
     $this->assertSession()->pageTextContains('The field Test block field 2 has been deleted');
 
     // Assert the block field is gone at the manage display screen.
@@ -129,7 +137,8 @@ class DynamicFieldPluginTest extends TestBase {
     $edit = [
       'depth' => '3',
     ];
-    $this->drupalPostForm('admin/structure/ds/fields/manage_block/test_block_configurable/block_config', $edit,'Save');
+    $this->drupalGet('admin/structure/ds/fields/manage_block/test_block_configurable/block_config');
+    $this->submitForm($edit, 'Save');
 
     // Assert it's found on the Field UI for article.
     $this->drupalGet('admin/structure/types/manage/article/display');
@@ -160,7 +169,8 @@ class DynamicFieldPluginTest extends TestBase {
     $edit = [
       'level' => '2',
     ];
-    $this->drupalPostForm('admin/structure/ds/fields/manage_block/test_block_configurable/block_config', $edit,'Save');
+    $this->drupalGet('admin/structure/ds/fields/manage_block/test_block_configurable/block_config');
+    $this->submitForm($edit, 'Save');
 
     // Look at node and verify the menu is not visible.
     $this->drupalGet('node/' . $node->id());
diff --git a/tests/src/Functional/EntitiesTest.php b/tests/src/Functional/EntitiesTest.php
index 25216dc9..de3a089a 100644
--- a/tests/src/Functional/EntitiesTest.php
+++ b/tests/src/Functional/EntitiesTest.php
@@ -27,7 +27,7 @@ class EntitiesTest extends TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setup() {
+  protected function setup(): void {
     parent::setup();
 
     // Enable field templates.
@@ -101,7 +101,8 @@ class EntitiesTest extends TestBase {
 
     // Switch view mode on full node page.
     $edit = ['ds_switch' => 'teaser'];
-    $this->drupalPostForm('node/' . $node->id() . '/edit', $edit,'Save');
+    $this->drupalGet('node/' . $node->id() . '/edit');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->responseContains('node--view-mode-teaser', 'Switched to teaser mode');
     $this->assertSession()->responseContains('group-left');
     $this->assertSession()->responseContains('group-right');
@@ -109,7 +110,8 @@ class EntitiesTest extends TestBase {
     $this->assertSession()->responseNotContains('group-footer');
 
     $edit = ['ds_switch' => ''];
-    $this->drupalPostForm('node/' . $node->id() . '/edit', $edit,'Save');
+    $this->drupalGet('node/' . $node->id() . '/edit');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->responseContains('node--view-mode-full');
 
     // Test all options of a block field.
diff --git a/tests/src/Functional/FieldPermissionsTest.php b/tests/src/Functional/FieldPermissionsTest.php
index 37e4d009..fd994f5f 100644
--- a/tests/src/Functional/FieldPermissionsTest.php
+++ b/tests/src/Functional/FieldPermissionsTest.php
@@ -54,7 +54,8 @@ class FieldPermissionsTest extends TestBase {
       'authenticated[view node_author on node]' => 1,
       'authenticated[view test_field on node]' => 1,
     ];
-    $this->drupalPostForm('admin/people/permissions', $edit,'Save permissions');
+    $this->drupalGet('admin/people/permissions');
+    $this->submitForm($edit, 'Save permissions');
     $this->drupalGet('node/' . $node->id());
     $this->assertSession()->responseContains('group-left');
     $this->assertSession()->pageTextContains('Test field plugin on node ' . $node->id());
diff --git a/tests/src/Functional/FieldPluginTest.php b/tests/src/Functional/FieldPluginTest.php
index 78a8552f..8ff7bda9 100644
--- a/tests/src/Functional/FieldPluginTest.php
+++ b/tests/src/Functional/FieldPluginTest.php
@@ -17,7 +17,8 @@ class FieldPluginTest extends TestBase {
     $edit = [
       'title_label' => 'alternative article title',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article', $edit, t('Save content type'));
+    $this->drupalGet('admin/structure/types/manage/article');
+    $this->submitForm($edit, t('Save content type'));
 
     $this->dsSelectLayout();
 
diff --git a/tests/src/Functional/FieldTemplateLayoutBuilderTest.php b/tests/src/Functional/FieldTemplateLayoutBuilderTest.php
index 371514d0..17426e64 100644
--- a/tests/src/Functional/FieldTemplateLayoutBuilderTest.php
+++ b/tests/src/Functional/FieldTemplateLayoutBuilderTest.php
@@ -33,7 +33,7 @@ class FieldTemplateLayoutBuilderTest extends TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setup() {
+  protected function setup(): void {
     parent::setup();
 
     // Enable field templates.
@@ -78,7 +78,7 @@ class FieldTemplateLayoutBuilderTest extends TestBase {
 
     // From the manage display page, go to manage the layout.
     $this->drupalGet("$field_ui_prefix/display/default");
-    $this->drupalPostForm(NULL, ['layout[enabled]' => TRUE], 'Save');
+    $this->submitForm(['layout[enabled]' => TRUE], 'Save');
     $this->clickLink('Manage layout');
 
     // Add the title field_block.
diff --git a/tests/src/Functional/FieldTemplateTest.php b/tests/src/Functional/FieldTemplateTest.php
index 158e1550..8d3a0ca3 100644
--- a/tests/src/Functional/FieldTemplateTest.php
+++ b/tests/src/Functional/FieldTemplateTest.php
@@ -14,7 +14,7 @@ class FieldTemplateTest extends TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setup() {
+  protected function setup(): void {
     parent::setup();
 
     // Enable field templates.
@@ -73,7 +73,8 @@ class FieldTemplateTest extends TestBase {
     $edit = [
       'fs1[ft-default]' => 'reset',
     ];
-    $this->drupalPostForm('admin/structure/ds/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/structure/ds/settings');
+    $this->submitForm($edit, t('Save configuration'));
 
     // As long as we don't change anything in the UI, the default template will
     // be used.
@@ -112,7 +113,8 @@ class FieldTemplateTest extends TestBase {
     $edit = [
       'fs1[ft-show-colon]' => 'reset',
     ];
-    $this->drupalPostForm('admin/structure/ds/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/structure/ds/settings');
+    $this->submitForm($edit, t('Save configuration'));
     // Clear node cache to get the colon.
     $tags = $node->getCacheTags();
     Cache::invalidateTags($tags);
@@ -539,7 +541,8 @@ class FieldTemplateTest extends TestBase {
       'field_tags[0][target_id]' => 'Tag 1',
       'field_tags[1][target_id]' => 'Tag 2',
     ];
-    $this->drupalPostForm('node/' . $node->id() . '/edit', $edit, 'Save');
+    $this->drupalGet('node/' . $node->id() . '/edit');
+    $this->submitForm($edit, 'Save');
 
     // Count the found tags.
     $this->drupalGet('node/' . $node->id());
diff --git a/tests/src/Functional/HiddenRegionTest.php b/tests/src/Functional/HiddenRegionTest.php
index 0f7d0c2c..a15519b7 100644
--- a/tests/src/Functional/HiddenRegionTest.php
+++ b/tests/src/Functional/HiddenRegionTest.php
@@ -17,7 +17,8 @@ class HiddenRegionTest extends TestBase {
     $edit = [
       'fs3[hidden_region]' => TRUE,
     ];
-    $this->drupalPostForm('admin/structure/ds/settings', $edit, t('Save configuration'));
+    $this->drupalGet('admin/structure/ds/settings');
+    $this->submitForm($edit, t('Save configuration'));
 
     $this->dsSelectLayout();
 
diff --git a/tests/src/Functional/LayoutClassesTest.php b/tests/src/Functional/LayoutClassesTest.php
index 12ea4c79..09587e1e 100644
--- a/tests/src/Functional/LayoutClassesTest.php
+++ b/tests/src/Functional/LayoutClassesTest.php
@@ -14,7 +14,7 @@ class LayoutClassesTest extends TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setup() {
+  protected function setup(): void {
     parent::setup();
 
     // Set extra fields.
@@ -144,7 +144,8 @@ class LayoutClassesTest extends TestBase {
 
     // Remove all the node classes.
     $edit = ['entity_classes' => 'no_classes'];
-    $this->drupalPostForm('admin/structure/types/manage/article/display', $edit, t('Save'));
+    $this->drupalGet('admin/structure/types/manage/article/display');
+    $this->submitForm($edit, t('Save'));
     $this->drupalGet('node/' . $node->id());
 
     // Assert that there are no entity classes.
@@ -152,7 +153,8 @@ class LayoutClassesTest extends TestBase {
 
     // Only show view mode (deprecated).
     $edit = ['entity_classes' => 'old_view_mode'];
-    $this->drupalPostForm('admin/structure/types/manage/article/display', $edit, t('Save'));
+    $this->drupalGet('admin/structure/types/manage/article/display');
+    $this->submitForm($edit, t('Save'));
     $this->drupalGet('node/' . $node->id());
 
     // Assert that the old view mode class name is added (deprecated).
@@ -160,7 +162,8 @@ class LayoutClassesTest extends TestBase {
 
     // Let's create a block field, enable the full mode first.
     $edit = ['display_modes_custom[full]' => '1'];
-    $this->drupalPostForm('admin/structure/types/manage/article/display', $edit, t('Save'));
+    $this->drupalGet('admin/structure/types/manage/article/display');
+    $this->submitForm($edit, t('Save'));
 
     // Select layout.
     $layout = [
@@ -180,7 +183,8 @@ class LayoutClassesTest extends TestBase {
       'new_block_region' => 'Block region',
       'new_block_region_key' => 'block_region',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/display/full', $edit, t('Save'));
+    $this->drupalGet('admin/structure/types/manage/article/display/full');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->responseContains('<td colspan="9">' . t('Block region') . '</td>');
 
     // Configure fields.
@@ -204,7 +208,8 @@ class LayoutClassesTest extends TestBase {
       'ds_right' => 'footer',
       'ds_block_region' => 'footer',
     ];
-    $this->drupalPostForm('admin/structure/ds/change-layout/node/article/full/ds_2col_stacked', $edit, t('Save'));
+    $this->drupalGet('admin/structure/ds/change-layout/node/article/full/ds_2col_stacked');
+    $this->submitForm($edit, t('Save'));
     $this->drupalGet('admin/structure/types/manage/article/display/full');
 
     // Verify new regions.
@@ -233,7 +238,8 @@ class LayoutClassesTest extends TestBase {
       'ds_layout' => '_none',
       'display_modes_custom[full]' => FALSE,
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/display', $edit, 'Save');
+    $this->drupalGet('admin/structure/types/manage/article/display');
+    $this->submitForm($edit, 'Save');
 
     $elements = $this->xpath('//*[@id="edit-fields-body-region"]');
 
diff --git a/tests/src/Functional/TestBase.php b/tests/src/Functional/TestBase.php
index 50f4bc34..9b94e919 100644
--- a/tests/src/Functional/TestBase.php
+++ b/tests/src/Functional/TestBase.php
@@ -83,7 +83,7 @@ abstract class TestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_breadcrumb_block');
     $this->drupalPlaceBlock('local_tasks_block');
diff --git a/tests/src/Functional/TwigRenderTest.php b/tests/src/Functional/TwigRenderTest.php
index b3c6c88e..e928c8f5 100644
--- a/tests/src/Functional/TwigRenderTest.php
+++ b/tests/src/Functional/TwigRenderTest.php
@@ -45,7 +45,8 @@ class TwigRenderTest extends TestBase {
     $edit = [
       'fs3[use_field_names]' => FALSE,
     ];
-    $this->drupalPostForm('admin/structure/ds/settings', $edit, 'Save configuration');
+    $this->drupalGet('admin/structure/ds/settings');
+    $this->submitForm($edit, 'Save configuration');
 
     $this->drupalGet('node/' . $node->id());
 
diff --git a/tests/src/Functional/ViewsTest.php b/tests/src/Functional/ViewsTest.php
index 4a5a1282..9101d049 100644
--- a/tests/src/Functional/ViewsTest.php
+++ b/tests/src/Functional/ViewsTest.php
@@ -38,7 +38,7 @@ class ViewsTest extends TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Ensure that the plugin definitions are cleared.
@@ -70,21 +70,24 @@ class ViewsTest extends TestBase {
       'created' => \Drupal::time()->getRequestTime(),
     ];
     $node_1 = $this->drupalCreateNode($settings_1);
-    $this->drupalPostForm('node/' . $node_1->id() . '/edit', $edit_tag_1, t('Save'));
+    $this->drupalGet('node/' . $node_1->id() . '/edit');
+    $this->submitForm($edit_tag_1, t('Save'));
     $settings_2 = [
       'type' => 'article',
       'title' => 'Article 2',
       'created' => \Drupal::time()->getRequestTime() + 3600,
     ];
     $node_2 = $this->drupalCreateNode($settings_2);
-    $this->drupalPostForm('node/' . $node_2->id() . '/edit', $edit_tag_1, t('Save'));
+    $this->drupalGet('node/' . $node_2->id() . '/edit');
+    $this->submitForm($edit_tag_1, t('Save'));
     $settings_3 = [
       'type' => 'article',
       'title' => 'Article 3',
       'created' => \Drupal::time()->getRequestTime() + 7200,
     ];
     $node_3 = $this->drupalCreateNode($settings_3);
-    $this->drupalPostForm('node/' . $node_3->id() . '/edit', $edit_tag_2, t('Save'));
+    $this->drupalGet('node/' . $node_3->id() . '/edit');
+    $this->submitForm($edit_tag_2, t('Save'));
 
     // Configure teaser and full layout.
     $layout = [
diff --git a/tests/src/FunctionalJavascript/JavascriptTest.php b/tests/src/FunctionalJavascript/JavascriptTest.php
index a23db295..850b1423 100644
--- a/tests/src/FunctionalJavascript/JavascriptTest.php
+++ b/tests/src/FunctionalJavascript/JavascriptTest.php
@@ -34,7 +34,7 @@ class JavascriptTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a test user.
