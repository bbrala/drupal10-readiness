diff --git a/tests/src/Functional/CckSelectOtherEmptyTest.php b/tests/src/Functional/CckSelectOtherEmptyTest.php
index c410798..f964a09 100644
--- a/tests/src/Functional/CckSelectOtherEmptyTest.php
+++ b/tests/src/Functional/CckSelectOtherEmptyTest.php
@@ -30,14 +30,16 @@ class CckSelectOtherEmptyTest extends CckSelectOtherTestBase {
       $field_name . '[0][select_other_list]' => 'other',
       $field_name . '[0][select_other_text_input]' => '',
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->responseNotContains('<div class="field__item"></div>');
 
     $edit = [
       $field_name . '[0][select_other_list]' => '_none',
     ];
-    $this->drupalPostForm('/node/1/edit', $edit, 'Save');
+    $this->drupalGet('/node/1/edit');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->responseNotContains('<div class="field__item"></div>');
   }
diff --git a/tests/src/Functional/CckSelectOtherFieldTypeTest.php b/tests/src/Functional/CckSelectOtherFieldTypeTest.php
index 2a3de70..d6d6888 100644
--- a/tests/src/Functional/CckSelectOtherFieldTypeTest.php
+++ b/tests/src/Functional/CckSelectOtherFieldTypeTest.php
@@ -30,7 +30,7 @@ class CckSelectOtherFieldTypeTest extends CckSelectOtherTestBase {
     ];
     $config_values = ['required' => 0];
     $field = $this->createSelectOtherListField($field_type, $storage_values, $config_values);
-    $this->assertEqual(5, count($field->getSettings()['allowed_values']));
+    $this->assertEquals(5, count($field->getSettings()['allowed_values']));
     $field_name = $field->getName();
 
     // Create a new node with other value after logging in.
@@ -40,7 +40,8 @@ class CckSelectOtherFieldTypeTest extends CckSelectOtherTestBase {
       $field_name . '[0][select_other_list]' => 'other',
       $field_name . '[0][select_other_text_input]' => $other_value,
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->elementTextContains('css', 'div', $other_value);
 
@@ -50,7 +51,8 @@ class CckSelectOtherFieldTypeTest extends CckSelectOtherTestBase {
       $field_name . '[0][select_other_list]' => $value,
       $field_name . '[0][select_other_text_input]' => '',
     ];
-    $this->drupalPostForm('/node/1/edit', $edit, 'Save');
+    $this->drupalGet('/node/1/edit');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->elementTextContains('css', 'div', $label);
   }
diff --git a/tests/src/Functional/CckSelectOtherHtmlEntitiesTest.php b/tests/src/Functional/CckSelectOtherHtmlEntitiesTest.php
index 5381f3a..349081e 100644
--- a/tests/src/Functional/CckSelectOtherHtmlEntitiesTest.php
+++ b/tests/src/Functional/CckSelectOtherHtmlEntitiesTest.php
@@ -34,7 +34,8 @@ class CckSelectOtherHtmlEntitiesTest extends CckSelectOtherTestBase {
       $field_name . '[0][select_other_list]' => 'other',
       $field_name . '[0][select_other_text_input]' => '&',
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     // Decode entities in the page so that we can assert that there are no other
     // raw entities in there. MinkWTF. Still not sure if this is going to work
     // the same way even getting the raw session.
diff --git a/tests/src/Functional/CckSelectOtherMultipleFieldTest.php b/tests/src/Functional/CckSelectOtherMultipleFieldTest.php
index 286fa81..0bce65d 100644
--- a/tests/src/Functional/CckSelectOtherMultipleFieldTest.php
+++ b/tests/src/Functional/CckSelectOtherMultipleFieldTest.php
@@ -40,7 +40,7 @@ class CckSelectOtherMultipleFieldTest extends CckSelectOtherTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create the first field.
@@ -83,7 +83,8 @@ class CckSelectOtherMultipleFieldTest extends CckSelectOtherTestBase {
       $field_two . '[0][select_other_list]' => 'other',
       $field_two . '[0][select_other_text_input]' => $value_two,
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->elementTextContains('css', 'div', $this->firstOptions[$value_one]);
     $this->assertSession()
diff --git a/tests/src/Functional/CckSelectOtherRequiredTest.php b/tests/src/Functional/CckSelectOtherRequiredTest.php
index 806ee5d..6803d3a 100644
--- a/tests/src/Functional/CckSelectOtherRequiredTest.php
+++ b/tests/src/Functional/CckSelectOtherRequiredTest.php
@@ -50,7 +50,8 @@ class CckSelectOtherRequiredTest extends CckSelectOtherTestBase {
       $field_name . '[0][select_other_list]' => $list_value,
       $field_name . '[0][select_other_text_input]' => $other_value,
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     $selector = '//input[@name="' . $field_name . '[0][select_other_text_input]" and contains(@class, "error")]';
     $this->assertSession()->responseContains($expectedMessage);
     if ($isValid) {
@@ -62,7 +63,7 @@ class CckSelectOtherRequiredTest extends CckSelectOtherTestBase {
       $value = $this->getRandomGenerator()->word(25);
       $edit[$field_name . '[0][select_other_list]'] = 'other';
       $edit[$field_name . '[0][select_other_text_input]'] = $value;
-      $this->drupalPostForm(NULL, $edit, 'Save');
+      $this->submitForm($edit, 'Save');
       $this->assertSession()->pageTextContains($value);
     }
   }
diff --git a/tests/src/Functional/CckSelectOtherTestBase.php b/tests/src/Functional/CckSelectOtherTestBase.php
index c613d2d..71c7c11 100644
--- a/tests/src/Functional/CckSelectOtherTestBase.php
+++ b/tests/src/Functional/CckSelectOtherTestBase.php
@@ -46,7 +46,7 @@ abstract class CckSelectOtherTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->contentType = $this->createContentType();
diff --git a/tests/src/Unit/EntityDisplayTraitTest.php b/tests/src/Unit/EntityDisplayTraitTest.php
index 43276b4..bdd90cf 100644
--- a/tests/src/Unit/EntityDisplayTraitTest.php
+++ b/tests/src/Unit/EntityDisplayTraitTest.php
@@ -27,13 +27,11 @@ class EntityDisplayTraitTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->mock = $this->getMockForTrait('Drupal\cck_select_other\EntityDisplayTrait');
 
     // Mock the entity manager.
-    $this->entityManager = $this->getMockBuilder('\Drupal\Core\Entity\EntityTypeManagerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entityManager = $this->createMock('\Drupal\Core\Entity\EntityTypeManagerInterface');
 
     $container = new ContainerBuilder();
     $container->set('entity_type.manager', $this->entityManager);
@@ -52,18 +50,14 @@ class EntityDisplayTraitTest extends UnitTestCase {
    */
   public function testHasSelectOtherWidget($plugin_id, $expected) {
     // Mock Field plugin settings.
-    $fieldSettings = $this->getMockBuilder('\Drupal\Core\Field\PluginSettingsInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $fieldSettings = $this->createMock('\Drupal\Core\Field\PluginSettingsInterface');
     $fieldSettings
       ->expects($this->any())
       ->method('getPluginId')
       ->willReturn($plugin_id);
 
     // Mock Entity Form Display.
-    $entityDisplay = $this->getMockBuilder('\Drupal\Core\Entity\Display\EntityDisplayInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityDisplay = $this->createMock('\Drupal\Core\Entity\Display\EntityDisplayInterface');
     $entityDisplay
       ->expects($this->any())
       ->method('getRenderer')
@@ -71,9 +65,7 @@ class EntityDisplayTraitTest extends UnitTestCase {
       ->willReturn($fieldSettings);
 
     // Mock the entity storage interface.
-    $entityStorage = $this->getMockBuilder('\Drupal\Core\Entity\EntityStorageInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityStorage = $this->createMock('\Drupal\Core\Entity\EntityStorageInterface');
     $entityStorage
       ->expects($this->any())
       ->method('loadByProperties')
@@ -88,9 +80,7 @@ class EntityDisplayTraitTest extends UnitTestCase {
       ->willReturn($entityStorage);
 
     // Mock the definition.
-    $definition = $this->getMockBuilder('\Drupal\Core\Field\FieldDefinitionInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $definition = $this->createMock('\Drupal\Core\Field\FieldDefinitionInterface');
     $definition
       ->expects($this->any())
       ->method('getTargetEntityTypeId')
@@ -128,9 +118,7 @@ class EntityDisplayTraitTest extends UnitTestCase {
    */
   public function testGetWidgetSettings($plugin_id, array $expected) {
     // Mock Field plugin settings.
-    $fieldSettings = $this->getMockBuilder('\Drupal\Core\Field\PluginSettingsInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $fieldSettings = $this->createMock('\Drupal\Core\Field\PluginSettingsInterface');
     $fieldSettings
       ->expects($this->any())
       ->method('getPluginId')
@@ -141,9 +129,7 @@ class EntityDisplayTraitTest extends UnitTestCase {
       ->willReturn($expected);
 
     // Mock Entity Form Display.
-    $entityDisplay = $this->getMockBuilder('\Drupal\Core\Entity\Display\EntityDisplayInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityDisplay = $this->createMock('\Drupal\Core\Entity\Display\EntityDisplayInterface');
     $entityDisplay
       ->expects($this->any())
       ->method('getRenderer')
@@ -151,9 +137,7 @@ class EntityDisplayTraitTest extends UnitTestCase {
       ->willReturn($fieldSettings);
 
     // Mock the entity storage interface.
-    $entityStorage = $this->getMockBuilder('\Drupal\Core\Entity\EntityStorageInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityStorage = $this->createMock('\Drupal\Core\Entity\EntityStorageInterface');
     $entityStorage
       ->expects($this->any())
       ->method('loadByProperties')
@@ -168,9 +152,7 @@ class EntityDisplayTraitTest extends UnitTestCase {
       ->willReturn($entityStorage);
 
     // Mock the definition.
-    $definition = $this->getMockBuilder('\Drupal\Core\Field\FieldDefinitionInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $definition = $this->createMock('\Drupal\Core\Field\FieldDefinitionInterface');
     $definition
       ->expects($this->any())
       ->method('getTargetEntityTypeId')
