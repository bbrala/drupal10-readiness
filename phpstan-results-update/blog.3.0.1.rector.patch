diff --git a/blog.info.yml b/blog.info.yml
index 1915a47..95fbd44 100644
--- a/blog.info.yml
+++ b/blog.info.yml
@@ -1,6 +1,6 @@
 name: Blog
 description: "Enables multi-user blogs."
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.1 || ^10
 type: module
 dependencies:
   - drupal:comment
diff --git a/composer.json b/composer.json
index 2209ee6..c833a2c 100644
--- a/composer.json
+++ b/composer.json
@@ -26,7 +26,7 @@
         "source": "https://git.drupalcode.org/project/blog"
     },
     "require": {
-        "drupal/core": "^8.8 || ^9"
+        "drupal/core": "^9.1 || ^10"
     },
     "license": "GPL-2.0+",
     "minimum-stability": "dev"
diff --git a/tests/src/Functional/BasicBlogTest.php b/tests/src/Functional/BasicBlogTest.php
index d1c17c4..f5b7d3d 100644
--- a/tests/src/Functional/BasicBlogTest.php
+++ b/tests/src/Functional/BasicBlogTest.php
@@ -45,8 +45,8 @@ class BasicBlogTest extends BlogTestBase {
   public function testPersonalBlogTitle() {
     $this->drupalLogin($this->regularUser);
     $this->drupalGet('blog/' . $this->blogger1->id());
-    $this->assertResponse(200);
-    $this->assertTitle($this->blogger1->getDisplayName() . "'s blog | Drupal");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->titleEquals($this->blogger1->getDisplayName() . "'s blog | Drupal");
   }
 
   /**
@@ -55,9 +55,9 @@ class BasicBlogTest extends BlogTestBase {
   public function testBlogPageNoEntries() {
     $this->drupalLogin($this->regularUser);
     $this->drupalGet('blog/' . $this->bloggerNoEntries->id());
-    $this->assertResponse(200);
-    $this->assertTitle($this->bloggerNoEntries->getDisplayName() . "'s blog | Drupal");
-    $this->assertText($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->titleEquals($this->bloggerNoEntries->getDisplayName() . "'s blog | Drupal");
+    $this->assertSession()->pageTextContains($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
   }
 
   /**
diff --git a/tests/src/Functional/EmptyBlogTest.php b/tests/src/Functional/EmptyBlogTest.php
index caf1458..fa0adf3 100644
--- a/tests/src/Functional/EmptyBlogTest.php
+++ b/tests/src/Functional/EmptyBlogTest.php
@@ -47,7 +47,7 @@ class EmptyBlogTest extends BrowserTestBase {
   public function testAllBlogEmptyLists() {
     $this->drupalLogin($this->bloggerNoEntries);
     $this->drupalGet('blog');
-    $this->assertText('No blog entries have been created.');
+    $this->assertSession()->pageTextContains('No blog entries have been created.');
   }
 
   /**
@@ -56,7 +56,7 @@ class EmptyBlogTest extends BrowserTestBase {
   public function testEmptyPersonalBlog() {
     $this->drupalLogin($this->bloggerNoEntries);
     $this->drupalGet('blog/' . $this->bloggerNoEntries->id());
-    $this->assertText($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
+    $this->assertSession()->pageTextContains($this->bloggerNoEntries->getDisplayName() . ' has not created any blog entries.');
   }
 
 }
diff --git a/tests/src/Functional/MyBlogLinkTest.php b/tests/src/Functional/MyBlogLinkTest.php
index c8711b1..e0374d2 100644
--- a/tests/src/Functional/MyBlogLinkTest.php
+++ b/tests/src/Functional/MyBlogLinkTest.php
@@ -44,15 +44,15 @@ class MyBlogLinkTest extends BlogTestBase {
    */
   public function testMyBlogLinkWithRegularUser() {
     $this->drupalLogin($this->regularUser);
-    $this->assertLink('My blog');
-    $this->assertLinkByHref('/blog/' . $this->regularUser->id());
+    $this->assertSession()->linkExists('My blog');
+    $this->assertSession()->linkByHrefExists('/blog/' . $this->regularUser->id());
   }
 
   /**
    * Test "My blog" link with anonymous user.
    */
   public function testMyBlogLinkWithAnonUser() {
-    $this->assertNoLink('My blog');
+    $this->assertSession()->linkNotExists('My blog');
   }
 
   /**
@@ -62,22 +62,22 @@ class MyBlogLinkTest extends BlogTestBase {
     $this->drupalLogin($this->regularUser);
     // Add "Personal blog link" psuedo-field.
     $this->drupalGet('admin/config/people/accounts/display');
-    $this->assertText('Personal blog link');
+    $this->assertSession()->pageTextContains('Personal blog link');
     $edit = [
       'fields[blog__personal_blog_link][region]' => 'content',
       'display_modes_custom[compact]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->drupalLogout();
     // Test "Personal blog link" on user profile page.
     $this->drupalLogin($this->blogger1);
     $this->drupalGet('user/' . $this->blogger1->id());
-    $this->assertLink('View recent blog entries');
-    $this->assertLinkByHref('blog/' . $this->blogger1->id());
+    $this->assertSession()->linkExists('View recent blog entries');
+    $this->assertSession()->linkByHrefExists('blog/' . $this->blogger1->id());
     // Test "Personal blog link" on content.
     $node = array_shift($this->blogNodes1);
     $this->drupalGet('node/' . $node->id());
-    $this->assertNoLink('View recent blog entries');
+    $this->assertSession()->linkNotExists('View recent blog entries');
   }
 
 }
