diff --git a/src/BillableUser.php b/src/BillableUser.php
index ff9206f..cf59e4e 100644
--- a/src/BillableUser.php
+++ b/src/BillableUser.php
@@ -162,7 +162,7 @@ class BillableUser {
     if (!$result->success) {
       $this->logger->error('Error creating payment method: ' . $result->message);
       $event = new BraintreeErrorEvent($user, $result->message, $result);
-      $this->eventDispatcher->dispatch(BraintreeCashierEvents::BRAINTREE_ERROR, $event);
+      $this->eventDispatcher->dispatch($event, BraintreeCashierEvents::BRAINTREE_ERROR);
       if (!empty($result->creditCardVerification)) {
         $credit_card_verification = $result->creditCardVerification;
         if ($credit_card_verification->status == 'processor_declined') {
@@ -188,7 +188,7 @@ class BillableUser {
     $payment_method_type = get_class($result->paymentMethod);
 
     $event = new PaymentMethodUpdatedEvent($user, $payment_method_type);
-    $this->eventDispatcher->dispatch(BraintreeCashierEvents::PAYMENT_METHOD_UPDATED, $event);
+    $this->eventDispatcher->dispatch($event, BraintreeCashierEvents::PAYMENT_METHOD_UPDATED);
 
     return TRUE;
   }
@@ -333,7 +333,7 @@ class BillableUser {
     if (!$result->success) {
       $this->logger->error('Error creating Braintree customer: ' . $result->message);
       $event = new BraintreeErrorEvent($user, $result->message, $result);
-      $this->eventDispatcher->dispatch(BraintreeCashierEvents::BRAINTREE_ERROR, $event);
+      $this->eventDispatcher->dispatch($event, BraintreeCashierEvents::BRAINTREE_ERROR);
       if (!empty($result->creditCardVerification)) {
         $credit_card_verification = $result->creditCardVerification;
         if ($credit_card_verification->status == 'processor_declined') {
@@ -366,7 +366,7 @@ class BillableUser {
     $user->save();
 
     $event = new BraintreeCustomerCreatedEvent($user);
-    $this->eventDispatcher->dispatch(BraintreeCashierEvents::BRAINTREE_CUSTOMER_CREATED, $event);
+    $this->eventDispatcher->dispatch($event, BraintreeCashierEvents::BRAINTREE_CUSTOMER_CREATED);
 
     // Invalidate the local tasks cache to make the "Invoices" task appear when
     // viewed by other users such as administrators.
diff --git a/src/Event/BraintreeCustomerCreatedEvent.php b/src/Event/BraintreeCustomerCreatedEvent.php
index 4940d8e..7997344 100644
--- a/src/Event/BraintreeCustomerCreatedEvent.php
+++ b/src/Event/BraintreeCustomerCreatedEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\braintree_cashier\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\Entity\User;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * A Braintree customer has been created for a user.
diff --git a/src/Event/BraintreeErrorEvent.php b/src/Event/BraintreeErrorEvent.php
index 154b912..37ca2e2 100644
--- a/src/Event/BraintreeErrorEvent.php
+++ b/src/Event/BraintreeErrorEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\braintree_cashier\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\Entity\User;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Event dispatched when there's an error interacting with the Braintree API.
diff --git a/src/Event/NewAccountAfterPlan.php b/src/Event/NewAccountAfterPlan.php
index c3646f8..c4ff8c4 100644
--- a/src/Event/NewAccountAfterPlan.php
+++ b/src/Event/NewAccountAfterPlan.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\braintree_cashier\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\braintree_cashier\Entity\BraintreeCashierBillingPlanInterface;
 use Drupal\user\Entity\User;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Creates an event when a new user account is created after selecting a plan.
diff --git a/src/Event/NewSubscriptionEvent.php b/src/Event/NewSubscriptionEvent.php
index e5727b7..e67923f 100644
--- a/src/Event/NewSubscriptionEvent.php
+++ b/src/Event/NewSubscriptionEvent.php
@@ -2,11 +2,11 @@
 
 namespace Drupal\braintree_cashier\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Braintree\Subscription;
 use Drupal\braintree_cashier\Entity\BraintreeCashierBillingPlanInterface;
 use Drupal\braintree_cashier\Entity\BraintreeCashierSubscriptionInterface;
 use Drupal\Core\Form\FormStateInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Creates an Event when a new subscription is created after signup.
diff --git a/src/Event/PaymentMethodUpdatedEvent.php b/src/Event/PaymentMethodUpdatedEvent.php
index a5c80d0..65893f0 100644
--- a/src/Event/PaymentMethodUpdatedEvent.php
+++ b/src/Event/PaymentMethodUpdatedEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\braintree_cashier\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\Entity\User;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * A user has updated their payment method.
diff --git a/src/Event/SubscriptionCanceledByUserEvent.php b/src/Event/SubscriptionCanceledByUserEvent.php
index 689f508..8c12217 100644
--- a/src/Event/SubscriptionCanceledByUserEvent.php
+++ b/src/Event/SubscriptionCanceledByUserEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\braintree_cashier\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\braintree_cashier\Entity\BraintreeCashierSubscriptionInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * A subscription was canceled by a user.
diff --git a/src/EventSubscriber/KernelRequestSubscriber.php b/src/EventSubscriber/KernelRequestSubscriber.php
index 4e942ac..49b46f0 100644
--- a/src/EventSubscriber/KernelRequestSubscriber.php
+++ b/src/EventSubscriber/KernelRequestSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\braintree_cashier\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\braintree_cashier\BillableUser;
 use Drupal\braintree_cashier\SubscriptionService;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -12,7 +13,6 @@ use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 
 /**
  * Class KernelRequestSubscriber.
@@ -104,10 +104,10 @@ class KernelRequestSubscriber implements EventSubscriberInterface {
    * This method is called whenever the kernel.request event is
    * dispatched.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The symfony event.
    */
-  public function kernelRequest(GetResponseEvent $event) {
+  public function kernelRequest(RequestEvent $event) {
 
     if ($this->routeMatch->getRouteName() == 'braintree_cashier.signup_form') {
       // Don't cache this page even when anonymous page caching is enabled.
diff --git a/src/Form/CancelForm.php b/src/Form/CancelForm.php
index 247ece6..6a9bbde 100644
--- a/src/Form/CancelForm.php
+++ b/src/Form/CancelForm.php
@@ -177,7 +177,7 @@ class CancelForm extends ConfirmFormBase {
       $subscription->setCanceledAtDate(time());
       $subscription->save();
       $event = new SubscriptionCanceledByUserEvent($subscription);
-      $this->eventDispatcher->dispatch(BraintreeCashierEvents::SUBSCRIPTION_CANCELED_BY_USER, $event);
+      $this->eventDispatcher->dispatch($event, BraintreeCashierEvents::SUBSCRIPTION_CANCELED_BY_USER);
     }
     $form_state->setRedirect('braintree_cashier.my_subscription', [
       'user' => $values['uid'],
diff --git a/src/Form/SignupForm.php b/src/Form/SignupForm.php
index 888d88d..0966297 100644
--- a/src/Form/SignupForm.php
+++ b/src/Form/SignupForm.php
@@ -273,7 +273,7 @@ class SignupForm extends PlanSelectFormBase {
     }
 
     $new_subscription_event = new NewSubscriptionEvent($braintree_subscription, $billing_plan, $subscription_entity, $form_state);
-    $this->eventDispatcher->dispatch(BraintreeCashierEvents::NEW_SUBSCRIPTION, $new_subscription_event);
+    $this->eventDispatcher->dispatch($new_subscription_event, BraintreeCashierEvents::NEW_SUBSCRIPTION);
 
     $form_state->setRedirect('braintree_cashier.thank_you', [
       'subscription' => $subscription_entity->id(),
diff --git a/src/Form/UpdateSubscriptionFormConfirm.php b/src/Form/UpdateSubscriptionFormConfirm.php
index a6b8c39..84961a8 100644
--- a/src/Form/UpdateSubscriptionFormConfirm.php
+++ b/src/Form/UpdateSubscriptionFormConfirm.php
@@ -286,7 +286,7 @@ class UpdateSubscriptionFormConfirm extends ConfirmFormBase {
     }
 
     $new_subscription_event = new NewSubscriptionEvent($braintree_subscription, $this->billingPlan, $subscription_entity, $form_state);
-    $this->eventDispatcher->dispatch(BraintreeCashierEvents::NEW_SUBSCRIPTION, $new_subscription_event);
+    $this->eventDispatcher->dispatch($new_subscription_event, BraintreeCashierEvents::NEW_SUBSCRIPTION);
     $form_state->setRedirect('braintree_cashier.thank_you', [
       'subscription' => $subscription_entity->id(),
     ]);
diff --git a/src/SubscriptionService.php b/src/SubscriptionService.php
index ecf46bb..a6f4314 100644
--- a/src/SubscriptionService.php
+++ b/src/SubscriptionService.php
@@ -316,7 +316,7 @@ class SubscriptionService {
     }
     else {
       $event = new BraintreeErrorEvent($user, $result->message, $result);
-      $this->eventDispatcher->dispatch(BraintreeCashierEvents::BRAINTREE_ERROR, $event);
+      $this->eventDispatcher->dispatch($event, BraintreeCashierEvents::BRAINTREE_ERROR);
     }
   }
 
@@ -499,7 +499,7 @@ class SubscriptionService {
     if (!$result->success) {
       $this->processBraintreeSubscriptionCreateFailure($result);
       $event = new BraintreeErrorEvent($user, $result->message, $result);
-      $this->eventDispatcher->dispatch(BraintreeCashierEvents::BRAINTREE_ERROR, $event);
+      $this->eventDispatcher->dispatch($event, BraintreeCashierEvents::BRAINTREE_ERROR);
       return FALSE;
     }
 
diff --git a/tests/src/Functional/AdminPagesTest.php b/tests/src/Functional/AdminPagesTest.php
index 54202a4..0c0c9fc 100644
--- a/tests/src/Functional/AdminPagesTest.php
+++ b/tests/src/Functional/AdminPagesTest.php
@@ -34,7 +34,7 @@ class AdminPagesTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $billing_plan = $this->createMonthlyBillingPlan();
     $account = $this->createUser([], NULL, TRUE);
diff --git a/tests/src/Functional/WebhookTest.php b/tests/src/Functional/WebhookTest.php
index 6a2b176..8a0e8b0 100644
--- a/tests/src/Functional/WebhookTest.php
+++ b/tests/src/Functional/WebhookTest.php
@@ -69,7 +69,7 @@ class WebhookTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupBraintreeApi();
     $this->braintreeApi = \Drupal::service('braintree_api.braintree_api');
@@ -129,7 +129,8 @@ class WebhookTest extends BrowserTestBase {
     // Create a sample webhook and submit it. The form will POST to the webhook
     // url /braintree/webhooks, simulating the same POST request from Braintree.
     $sample_notification = $this->braintreeApi->getGateway()->webhookTesting()->sampleNotification(WebhookNotification::SUBSCRIPTION_CANCELED, '123');
-    $this->drupalPostForm(Url::fromRoute('braintree_api_test.webhook_notification_test_form'), [
+    $this->drupalGet(Url::fromRoute('braintree_api_test.webhook_notification_test_form'));
+    $this->submitForm([
       'bt_signature' => $sample_notification['bt_signature'],
       'bt_payload' => $sample_notification['bt_payload'],
     ], 'Submit');
@@ -176,7 +177,8 @@ class WebhookTest extends BrowserTestBase {
     // Create a sample webhook and submit it. The form will POST to the webhook
     // url /braintree/webhooks, simulating the same POST request from Braintree.
     $sample_notification = $this->braintreeApi->getGateway()->webhookTesting()->sampleNotification(WebhookNotification::SUBSCRIPTION_EXPIRED, '321');
-    $this->drupalPostForm(Url::fromRoute('braintree_api_test.webhook_notification_test_form'), [
+    $this->drupalGet(Url::fromRoute('braintree_api_test.webhook_notification_test_form'));
+    $this->submitForm([
       'bt_signature' => $sample_notification['bt_signature'],
       'bt_payload' => $sample_notification['bt_payload'],
     ], 'Submit');
diff --git a/tests/src/FunctionalJavascript/CancelUserTest.php b/tests/src/FunctionalJavascript/CancelUserTest.php
index d3a4c7f..a0f9bed 100644
--- a/tests/src/FunctionalJavascript/CancelUserTest.php
+++ b/tests/src/FunctionalJavascript/CancelUserTest.php
@@ -53,7 +53,7 @@ class CancelUserTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupBraintreeApi();
     $this->billingPlan = $this->createMonthlyBillingPlan();
@@ -94,9 +94,9 @@ class CancelUserTest extends WebDriverTestBase {
     $this->config('user.settings')->set('cancel_method', 'user_cancel_block')->save();
 
     $this->drupalGet('user/' . $this->subscriberAccount->id() . '/edit');
-    $this->drupalPostForm(NULL, NULL, t('Cancel account'));
+    $this->submitForm(NULL, t('Cancel account'));
     // Confirm blocking the subscriber.
-    $this->drupalPostForm(NULL, NULL, t('Cancel account'));
+    $this->submitForm(NULL, t('Cancel account'));
 
     // Confirm no subscription.
     $this->drupalGet(Url::fromRoute('braintree_cashier.my_subscription', [
@@ -140,10 +140,10 @@ class CancelUserTest extends WebDriverTestBase {
     // They are deleted instead.
     $this->config('user.settings')->set('cancel_method', 'user_cancel_reassign')->save();
     $this->drupalGet('user/' . $this->subscriberAccount->id() . '/edit');
-    $this->drupalPostForm(NULL, NULL, t('Cancel account'));
+    $this->submitForm(NULL, t('Cancel account'));
 
     // Confirm deleting the subscriber.
-    $this->drupalPostForm(NULL, NULL, t('Cancel account'));
+    $this->submitForm(NULL, t('Cancel account'));
 
     $this->assertSession()->waitForElementVisible('css', '.messages--status', 20000);
 
diff --git a/tests/src/FunctionalJavascript/CouponTest.php b/tests/src/FunctionalJavascript/CouponTest.php
index 6cc02b0..c93a2db 100644
--- a/tests/src/FunctionalJavascript/CouponTest.php
+++ b/tests/src/FunctionalJavascript/CouponTest.php
@@ -40,7 +40,7 @@ class CouponTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupBraintreeApi();
     $billing_plan = $this->createMonthlyBillingPlan();
diff --git a/tests/src/FunctionalJavascript/CreateMessagesTest.php b/tests/src/FunctionalJavascript/CreateMessagesTest.php
index 952c136..4c3991e 100644
--- a/tests/src/FunctionalJavascript/CreateMessagesTest.php
+++ b/tests/src/FunctionalJavascript/CreateMessagesTest.php
@@ -59,7 +59,7 @@ class CreateMessagesTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->container->get('config.factory')
       ->getEditable('user.settings')
diff --git a/tests/src/FunctionalJavascript/FreeTrialTest.php b/tests/src/FunctionalJavascript/FreeTrialTest.php
index d4a005f..b1a0304 100644
--- a/tests/src/FunctionalJavascript/FreeTrialTest.php
+++ b/tests/src/FunctionalJavascript/FreeTrialTest.php
@@ -53,7 +53,7 @@ class FreeTrialTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupBraintreeApi();
     $this->freeTrialPlanEntity = $this->createMonthlyFreeTrialBillingPlan();
diff --git a/tests/src/FunctionalJavascript/RolesTest.php b/tests/src/FunctionalJavascript/RolesTest.php
index 6432ee4..a560cfe 100644
--- a/tests/src/FunctionalJavascript/RolesTest.php
+++ b/tests/src/FunctionalJavascript/RolesTest.php
@@ -55,7 +55,7 @@ class RolesTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupBraintreeApi();
     $this->billingPlan = $this->createMonthlyBillingPlan();
diff --git a/tests/src/FunctionalJavascript/SignupTest.php b/tests/src/FunctionalJavascript/SignupTest.php
index 1b45584..05ac334 100644
--- a/tests/src/FunctionalJavascript/SignupTest.php
+++ b/tests/src/FunctionalJavascript/SignupTest.php
@@ -48,7 +48,7 @@ class SignupTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupBraintreeApi();
     $this->createMonthlyBillingPlan();
diff --git a/tests/src/FunctionalJavascript/UpdatePlanTest.php b/tests/src/FunctionalJavascript/UpdatePlanTest.php
index e4aabac..89b3cc1 100644
--- a/tests/src/FunctionalJavascript/UpdatePlanTest.php
+++ b/tests/src/FunctionalJavascript/UpdatePlanTest.php
@@ -44,7 +44,7 @@ class UpdatePlanTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupBraintreeApi();
     $this->createMonthlyBillingPlan();
