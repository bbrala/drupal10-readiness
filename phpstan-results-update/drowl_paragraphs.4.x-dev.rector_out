modules/contrib/drowl_paragraphs/modules/drowl_paragraphs_type_countdown/drowl_paragraphs_type_countdown.install
modules/contrib/drowl_paragraphs/modules/drowl_paragraphs_type_markup/drowl_paragraphs_type_markup.module
modules/contrib/drowl_paragraphs/drowl_paragraphs.api.php
modules/contrib/drowl_paragraphs/modules/drowl_paragraphs_type_score/drowl_paragraphs_type_score.install
modules/contrib/drowl_paragraphs/modules/drowl_paragraphs_type_score/drowl_paragraphs_type_score.module
modules/contrib/drowl_paragraphs/modules/drowl_paragraphs_types/drowl_paragraphs_types.install
modules/contrib/drowl_paragraphs/src/Form/DrowlParagraphsSettingsForm.php
modules/contrib/drowl_paragraphs/drowl_paragraphs.install
modules/contrib/drowl_paragraphs/modules/drowl_paragraphs_type_countdown/drowl_paragraphs_type_countdown.module
modules/contrib/drowl_paragraphs/modules/drowl_paragraphs_types/drowl_paragraphs_types.module
modules/contrib/drowl_paragraphs/drowl_paragraphs.module
modules/contrib/drowl_paragraphs/src/Plugin/Field/FieldFormatter/DrowlParagraphsSettingsDefaultFormatter.php
modules/contrib/drowl_paragraphs/src/Plugin/Field/FieldType/DrowlParagraphsSettingsItem.php
modules/contrib/drowl_paragraphs/src/Plugin/Field/FieldWidget/DrowlParagraphsSettingsDefaultWidget.php

4 files with changes
====================

1) modules/contrib/drowl_paragraphs/drowl_paragraphs.module:0

    ---------- begin diff ----------
@@ @@
 <?php
+use Drupal\Component\Serialization\Json;
+use Drupal\paragraphs\Entity\Paragraph;
 /**
  * @file
  * DROWL paragraphs enhancements.
@@ @@
           }
           if (!empty($animations)) {
             $variables['attributes']->addClass('has-animation');
-            $variables['attributes']->setAttribute('data-animations', \Drupal\Component\Serialization\Json::encode($animations));
+            $variables['attributes']->setAttribute('data-animations', Json::encode($animations));
           }
           if (!empty($ps['layout_min_height'])) {
             $variables['attributes']->addClass('min-height-' . $ps['layout_min_height']);
@@ @@

     // Indicate subparagraph and type of parent paragraph for twig:
     $parentEntity = $paragraph->getParentEntity();
-    if($parentEntity instanceof \Drupal\paragraphs\Entity\Paragraph){
+    if($parentEntity instanceof Paragraph){
       $bundle = $parentEntity->bundle();
       $variables['attributes']->addClass('is-subparagraph');
       $variables['is_subparagraph'] = TRUE;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/drowl_paragraphs/drowl_paragraphs.api.php:0

    ---------- begin diff ----------
@@ @@
 #Warning: Strings contain different line endings!
-<?php
-
-
-// ---- Other hook / manipulation examples
+<?php
+
+use Drupal\Core\Form\FormStateInterface;
+// ---- Other hook / manipulation examples
 /**
  * Implements hook_field_widget_form_alter.
- */
-function MYMODULE_field_widget_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context){
+ */
+function MYMODULE_field_widget_form_alter(&$element, FormStateInterface $form_state, $context){
   // Add custom styles:
   if (get_class($context['widget']) === 'Drupal\drowl_paragraphs\Plugin\Field\FieldWidget\DrowlParagraphsSettingsDefaultWidget' && !empty($element['style']['style_boxstyle']['style_boxstyle'])) {
     $element['style']['style_boxstyle']['style_boxstyle']['#options']['drowl_customer_XYZ'] = 'Customer: XYZ';
   }
-}
+}
    ----------- end diff -----------

3) modules/contrib/drowl_paragraphs/src/Plugin/Field/FieldType/DrowlParagraphsSettingsItem.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\drowl_paragraphs\Plugin\Field\FieldType;

+use Drupal\Component\Utility\Html;
 use Drupal\Core\TypedData\DataDefinition;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Field\FieldItemInterface;
@@ @@
     if(!empty($classes_additional)){
       $classes_additional_array = explode(' ', trim($classes_additional));
       foreach($classes_additional_array as $class){
-        $classes_additional_sanitized .= ' ' . trim(\Drupal\Component\Utility\Html::getClass(trim($class)));
+        $classes_additional_sanitized .= ' ' . trim(Html::getClass(trim($class)));
       }
     }
     $this->get('classes_additional')->setValue(trim($classes_additional_sanitized));
@@ @@
     // Sanitize ID:
     $id_attr = $this->get('id_attr')->getValue();
     if(!empty($id_attr)){
-      $this->get('id_attr')->setValue(\Drupal\Component\Utility\Html::cleanCssIdentifier(trim($id_attr)));
+      $this->get('id_attr')->setValue(Html::cleanCssIdentifier(trim($id_attr)));
     }
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/drowl_paragraphs/src/Plugin/Field/FieldFormatter/DrowlParagraphsSettingsDefaultFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\drowl_paragraphs\Plugin\Field\FieldFormatter;

+use Drupal\Component\Utility\Html;
 use Drupal\Core\Field\FormatterBase;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
             '#type' => 'container',
             '#title' => $value->getName(),
             '#attributes' => array(
-              'class' => \Drupal\Component\Utility\Html::cleanCssIdentifier($value->getName()),
+              'class' => Html::cleanCssIdentifier($value->getName()),
             ),
             '#plain_text' => $value->getValue(),
             // '#markup' => t('Name'),
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

