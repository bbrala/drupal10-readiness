modules/contrib/admin_menu_search/admin_menu_search.module
modules/contrib/admin_menu_search/src/Controller/AutoCompleteController.php
modules/contrib/admin_menu_search/src/Form/AdminMenuSearchForm.php
modules/contrib/admin_menu_search/src/MenuTree.php
modules/contrib/admin_menu_search/src/ToolbarHandler.php
modules/contrib/admin_menu_search/tests/src/Unit/AutoCompleteControllerTest.php
modules/contrib/admin_menu_search/tests/src/Unit/MenuTreeTest.php
modules/contrib/admin_menu_search/tests/src/Unit/ToolbarHandlerTest.php

4 files with changes
====================

1) modules/contrib/admin_menu_search/tests/src/Unit/ToolbarHandlerTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Unit test setup.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->toolbar_handler = $this->getMockBuilder('Drupal\admin_menu_search\ToolbarHandler')
-      ->disableOriginalConstructor()
-      ->setMethods(['checkAccess', 'getMenuSearchForm', 't'])
-      ->getMock();
+    $this->toolbar_handler = $this->createMock('Drupal\admin_menu_search\ToolbarHandler');
     $this->toolbar_handler->expects($this->any())
       ->method('t')
       ->will($this->returnCallback([$this, 'returnCallbackT']));
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/admin_menu_search/tests/src/Unit/MenuTreeTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Unit test setup.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->menu_tree = $this->getMockBuilder('Drupal\admin_menu_search\MenuTree')
-      ->setMethods(['getCache', 'setCache', 'getToolbarMenuTree', 't'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->menu_tree = $this->createMock('Drupal\admin_menu_search\MenuTree');
     $this->menu_tree->expects($this->any())
       ->method('getCurrentLanguageId')
       ->willReturn('en');
@@ @@
         'parameters' => [],
       ],
     ];
-    $this->menu_links = $this->getMockBuilder('Drupal\Core\Menu\MenuLinkTreeElement')
-      ->disableOriginalConstructor()
-      ->setMethods(['getPluginDefinition'])
-      ->getMock();
+    $this->menu_links = $this->createMock('Drupal\Core\Menu\MenuLinkTreeElement');
     $this->menu_links->expects($this->at(0))
       ->method('getPluginDefinition')
       ->willReturn([
@@ @@
         'parameters' => [],
       ],
     ];
-    $this->menu_links = $this->getMockBuilder('Drupal\Core\Menu\MenuLinkTreeElement')
-      ->disableOriginalConstructor()
-      ->setMethods(['getPluginDefinition'])
-      ->getMock();
-    $translatable_title = $this->getMockBuilder('Drupal\Core\StringTranslation\TranslatableMarkup')
-      ->disableOriginalConstructor()
-      ->setMethods(['render'])
-      ->getMock();
+    $this->menu_links = $this->createMock('Drupal\Core\Menu\MenuLinkTreeElement');
+    $translatable_title = $this->createMock('Drupal\Core\StringTranslation\TranslatableMarkup');
     $translatable_title->expects($this->at(0))
       ->method('render')
       ->willReturn('Menu One');
@@ @@
         'parameters' => [],
       ],
     ];
-    $this->menu_links = $this->getMockBuilder('Drupal\Core\Menu\MenuLinkTreeElement')
-      ->disableOriginalConstructor()
-      ->setMethods(['getPluginDefinition'])
-      ->getMock();
+    $this->menu_links = $this->createMock('Drupal\Core\Menu\MenuLinkTreeElement');
     $this->menu_links->expects($this->at(0))
       ->method('getPluginDefinition')
       ->willReturn([
@@ @@
    * @covers Drupal\admin_menu_search\MenuTree
    */
   public function testMenuTreeWithoutCache() {
-    $this->menu_tree = $this->getMockBuilder('Drupal\admin_menu_search\MenuTree')
-      ->setMethods(['getCache', 'setCache', 'getToolbarMenuTree', 'buildMenuTreeIndex', 't'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->menu_tree = $this->createMock('Drupal\admin_menu_search\MenuTree');
     $expected_array = [
       [
         'name' => 'menu.one',
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/admin_menu_search/tests/src/Unit/AutoCompleteControllerTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Unit test setup.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->controller = $this->getMockBuilder('Drupal\admin_menu_search\Controller\AutoCompleteController')
-      ->setMethods(['getAdminMenuTreeIndex', 'getMenuUrl'])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->controller = $this->createMock('Drupal\admin_menu_search\Controller\AutoCompleteController');
     $this->controller->expects($this->any())
       ->method('getMenuUrl')
       ->will($this->returnCallback([$this, 'returnCallbackMenuUrl']));
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/admin_menu_search/src/ToolbarHandler.php:112

    ---------- begin diff ----------
@@ @@
    */
   protected function getMenuSearchForm() {
     $form = $this->formBuilder->getForm('Drupal\admin_menu_search\Form\AdminMenuSearchForm');
-    return render($form);
+    return \Drupal::service('renderer')->render($form);
   }

 }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 4 files have been changed by Rector                                       

