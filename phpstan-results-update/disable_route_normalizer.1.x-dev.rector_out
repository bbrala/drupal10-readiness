modules/contrib/disable_route_normalizer/disable_route_normalizer.module
modules/contrib/disable_route_normalizer/src/DisableRouteNormalizer/DisableRouteNormalizer.php
modules/contrib/disable_route_normalizer/src/DisableRouteNormalizerServiceProvider.php
modules/contrib/disable_route_normalizer/tests/src/Functional/NodeRedirectTest.php

2 files with changes
====================

1) modules/contrib/disable_route_normalizer/tests/src/Functional/NodeRedirectTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create additional language.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/disable_route_normalizer/src/DisableRouteNormalizer/DisableRouteNormalizer.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\disable_route_normalizer\DisableRouteNormalizer;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Drupal\node\Entity\Node;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Drupal\redirect\EventSubscriber\RouteNormalizerRequestSubscriber;

 /**
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function onKernelRequestRedirect(GetResponseEvent $event) {
+  public function onKernelRequestRedirect(RequestEvent $event) {

     if (!$this->config->get('route_normalizer_enabled') || !$event->isMasterRequest()) {
       return;
@@ @@
     /** @var \Drupal\node\Entity\Node $node */
     $node = $request->attributes->get('node');
     $languages = \Drupal::languageManager()->getLanguages();
-    if ($node instanceof \Drupal\node\Entity\Node && \Drupal::config('disable_route_normalizer.settings')->get('route_ignore_neutral_nodes') && (!$node->getEntityType()->isTranslatable() || !array_key_exists($node->language()->getId(), $languages))) {
+    if ($node instanceof Node && \Drupal::config('disable_route_normalizer.settings')->get('route_ignore_neutral_nodes') && (!$node->getEntityType()->isTranslatable() || !array_key_exists($node->language()->getId(), $languages))) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

