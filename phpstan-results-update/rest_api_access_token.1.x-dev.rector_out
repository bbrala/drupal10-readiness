modules/contrib/rest_api_access_token/rest_api_access_token.install
modules/contrib/rest_api_access_token/src/PageCache/RequestPolicy/DisallowXAuthTokenRequests.php
modules/contrib/rest_api_access_token/rest_api_access_token.module
modules/contrib/rest_api_access_token/src/Authentication/Event/AccessTokenEvents.php
modules/contrib/rest_api_access_token/src/Authentication/Event/LogoutEvent.php
modules/contrib/rest_api_access_token/src/Repository/TokenRepository.php
modules/contrib/rest_api_access_token/src/Authentication/Event/TokenResponseEvent.php
modules/contrib/rest_api_access_token/src/Authentication/Provider/AccessTokenProvider.php
modules/contrib/rest_api_access_token/src/Service/LoginService.php
modules/contrib/rest_api_access_token/src/Controller/AuthController.php
modules/contrib/rest_api_access_token/src/Service/TokenGenerator.php
modules/contrib/rest_api_access_token/src/EventSubscriber/CacheEndpointSubscriber.php
modules/contrib/rest_api_access_token/src/Exception/AccessDeniedException.php
modules/contrib/rest_api_access_token/src/Exception/AuthenticationException.php
modules/contrib/rest_api_access_token/src/Exception/EntityNotFoundException.php
modules/contrib/rest_api_access_token/src/Exception/InvalidRequestIdException.php
modules/contrib/rest_api_access_token/src/Exception/TokenGeneratorException.php
modules/contrib/rest_api_access_token/src/Exception/TokenNotFoundException.php
modules/contrib/rest_api_access_token/src/Form/ConfigForm.php
modules/contrib/rest_api_access_token/src/Model/Token.php

4 files with changes
====================

1) modules/contrib/rest_api_access_token/src/EventSubscriber/CacheEndpointSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rest_api_access_token\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ @@
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\rest_api_access_token\Authentication\Provider\AccessTokenProvider;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

 /**
@@ @@
   /**
    * Get cached request.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   Response event.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
@@ @@
   /**
    * Store request response in cache.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   Response event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     $request = $event->getRequest();
     $requestId = (string) $request->headers->get(AccessTokenProvider::REQUEST_ID);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/rest_api_access_token/src/Controller/AuthController.php:114

    ---------- begin diff ----------
@@ @@
     $token = $this->loginService->login($login, $password);

     $event = new TokenResponseEvent($token, $data);
-    $this->eventDispatcher->dispatch(AccessTokenEvents::TOKEN_RESPONSE, $event);
+    $this->eventDispatcher->dispatch($event, AccessTokenEvents::TOKEN_RESPONSE);

     if (!$event->hasAccess()) {
       throw new AuthenticationException($event->getErrorMessage());
@@ @@
     $status = $this->loginService->logout($publicToken);

     $event = new LogoutEvent($request, $user);
-    $this->eventDispatcher->dispatch(AccessTokenEvents::LOGOUT, $event);
+    $this->eventDispatcher->dispatch($event, AccessTokenEvents::LOGOUT);

     $response = [
       self::FIELD_LOGOUT => $status,
@@ @@
     $status = $this->loginService->logoutFromAllDevices($user);

     $event = new LogoutEvent($request, $user);
-    $this->eventDispatcher->dispatch(AccessTokenEvents::LOGOUT, $event);
+    $this->eventDispatcher->dispatch($event, AccessTokenEvents::LOGOUT);

     $response = [
       self::FIELD_LOGOUT => $status,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/rest_api_access_token/src/Authentication/Event/TokenResponseEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rest_api_access_token\Authentication\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\rest_api_access_token\Model\Token;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Class TokenResponseEvent extends Event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/rest_api_access_token/src/Authentication/Event/LogoutEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rest_api_access_token\Authentication\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\Entity\User;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\HttpFoundation\Request;

 /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

