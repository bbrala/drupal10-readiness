modules/contrib/deprecation_status/deprecation_status.module
modules/contrib/deprecation_status/src/Controller/GraphController.php
modules/contrib/deprecation_status/src/DataSource.php
modules/contrib/deprecation_status/src/Form/ErrorsForm.php
modules/contrib/deprecation_status/src/Form/ProjectsForm.php
modules/contrib/deprecation_status/src/Form/SingleErrorForm.php
modules/contrib/deprecation_status/src/Form/UpdateForm.php
modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php

2 files with changes
====================

1) modules/contrib/deprecation_status/tests/src/Functional/DeprecationStatusSmokeTest.php:32

    ---------- begin diff ----------
@@ @@

     $this->drupalGet(Url::fromRoute('deprecation_status.projects_form'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter projects');
-    $this->assertText('Covered by rector');
-    $this->assertText('pathauto');
+    $this->assertSession()->pageTextContains('Filter projects');
+    $this->assertSession()->pageTextContains('Covered by rector');
+    $this->assertSession()->pageTextContains('pathauto');

     $this->drupalGet(Url::fromRoute('deprecation_status.projects_form10'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter projects');
-    $this->assertText('Covered by rector');
-    $this->assertText('pathauto');
+    $this->assertSession()->pageTextContains('Filter projects');
+    $this->assertSession()->pageTextContains('Covered by rector');
+    $this->assertSession()->pageTextContains('pathauto');

     $this->drupalGet(Url::fromRoute('deprecation_status.errors_form'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter errors');
-    $this->assertText('Covered by rector');
+    $this->assertSession()->pageTextContains('Filter errors');
+    $this->assertSession()->pageTextContains('Covered by rector');

     $this->drupalGet(Url::fromRoute('deprecation_status.errors_form10'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Filter errors');
-    $this->assertText('Covered by rector');
+    $this->assertSession()->pageTextContains('Filter errors');
+    $this->assertSession()->pageTextContains('Covered by rector');

     $this->drupalGet(Url::fromRoute('deprecation_status.error', ['error_index' => 1]));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Deprecation error details');
+    $this->assertSession()->pageTextContains('Deprecation error details');

     $this->drupalGet(Url::fromRoute('deprecation_status.error10', ['error_index' => 1]));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Deprecation error details');
+    $this->assertSession()->pageTextContains('Deprecation error details');

     $this->drupalGet(Url::fromRoute('deprecation_status.graphs'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Percentage of contributed projects by status in usage groups');
-    $this->assertText('All drupal.org contributed projects by status over time');
+    $this->assertSession()->pageTextContains('Percentage of contributed projects by status in usage groups');
+    $this->assertSession()->pageTextContains('All drupal.org contributed projects by status over time');

     $this->drupalGet(Url::fromRoute('deprecation_status.graphs10'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Tracking based on @deprecated and E_USER_DEPRECATED mentions in Drupal 9 core.');
+    $this->assertSession()->pageTextContains('Tracking based on @deprecated and E_USER_DEPRECATED mentions in Drupal 9 core.');

     $this->drupalGet(Url::fromRoute('deprecation_status.update'));
     $this->assertSession()->statusCodeEquals(403);
@@ @@
     $this->drupalLogin($this->drupalCreateUser(['access administration pages']));
     $this->drupalGet(Url::fromRoute('deprecation_status.update'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('Shipped dataset');
-    $this->assertText('Current live dataset');
-    $this->assertText('Online dataset');
+    $this->assertSession()->pageTextContains('Shipped dataset');
+    $this->assertSession()->pageTextContains('Current live dataset');
+    $this->assertSession()->pageTextContains('Online dataset');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/deprecation_status/src/DataSource.php:62

    ---------- begin diff ----------
@@ @@

     // If that fails, we still have shipped files locally.
     else {
-      return drupal_get_path('module', 'deprecation_status') . '/data/' . $target_version_prefix . $filename;
+      return \Drupal::service('extension.list.module')->getPath('deprecation_status') . '/data/' . $target_version_prefix . $filename;
     }
   }

@@ @@
    */
   public static function getShippedMetaData($target_version = 9) {
     $target_version_prefix = ($target_version == 10) ? '10_' : '';
-    $path = drupal_get_path('module', 'deprecation_status') . '/data/' . $target_version_prefix . 'metadata.csv';
+    $path = \Drupal::service('extension.list.module')->getPath('deprecation_status') . '/data/' . $target_version_prefix . 'metadata.csv';
     $metadata = file_get_contents($path);
     return explode(';', trim($metadata));
   }
@@ @@

     // Save updated files locally as private files.
     foreach($datastore as $filename => $data) {
-      if (!file_save_data($data, 'private://deprecation_status_' . $filename, FileSystemInterface::EXISTS_REPLACE)) {
+      if (!\Drupal::service('file.repository')->writeData($data, 'private://deprecation_status_' . $filename, FileSystemInterface::EXISTS_REPLACE)) {
         return 'Error while saving updated ' . $filename . ' locally.';
       }
     }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileSaveDataRector
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

