diff --git a/src/AgreementHandler.php b/src/AgreementHandler.php
index 39848b2..63cea4a 100644
--- a/src/AgreementHandler.php
+++ b/src/AgreementHandler.php
@@ -226,7 +226,7 @@ class AgreementHandler implements AgreementHandlerInterface {
     elseif ($agreement->agreeOnce()) {
       $expire = new \DateTime('+10 years');
     }
-    return new Cookie($cookieName, $agreed, $expire, '/', NULL, NULL, 'lax');
+    return Cookie::create($cookieName, $agreed, $expire, '/', NULL, NULL, 'lax');
   }
 
   /**
diff --git a/src/EventSubscriber/AgreementSubscriber.php b/src/EventSubscriber/AgreementSubscriber.php
index 6a36b00..0bd1fc3 100644
--- a/src/EventSubscriber/AgreementSubscriber.php
+++ b/src/EventSubscriber/AgreementSubscriber.php
@@ -8,11 +8,9 @@ use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Session\SessionManagerInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpKernel\Event\ExceptionEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\Exception\HttpExceptionInterface;
 
 /**
diff --git a/tests/src/Unit/AgreementHandlerTest.php b/tests/src/Unit/AgreementHandlerTest.php
index 1692d7c..c57a6fa 100644
--- a/tests/src/Unit/AgreementHandlerTest.php
+++ b/tests/src/Unit/AgreementHandlerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\agreement\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\agreement\AgreementHandler;
 use Drupal\agreement\Entity\Agreement;
 use Drupal\Core\Database\DatabaseExceptionWrapper;
@@ -17,6 +18,7 @@ use Symfony\Component\HttpFoundation\RequestStack;
  */
 class AgreementHandlerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Asserts that database operation errors are handled.
    *
@@ -45,9 +47,7 @@ class AgreementHandlerTest extends UnitTestCase {
       ->willReturn($transactionProphet->reveal());
 
     // Prophecy does not allow mocking objects that return $this because.
-    $delete = $this->getMockBuilder('\Drupal\Core\Database\Query\Delete')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $delete = $this->createMock('\Drupal\Core\Database\Query\Delete');
     $delete->expects($this->any())
       ->method('condition')
       ->willReturnSelf();
@@ -61,9 +61,7 @@ class AgreementHandlerTest extends UnitTestCase {
         return 3;
       });
 
-    $insert = $this->getMockBuilder('\Drupal\Core\Database\Query\Insert')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $insert = $this->createMock('\Drupal\Core\Database\Query\Insert');
     $insert->expects($this->any())
       ->method('fields')
       ->willReturnSelf();
@@ -146,9 +144,7 @@ class AgreementHandlerTest extends UnitTestCase {
     $statementProphet->fetchField()->willReturn($agreed);
 
     // Mocks select query using mock object because prophecy.
-    $select = $this->getMockBuilder('\Drupal\Core\Database\Query\SelectInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $select = $this->createMock('\Drupal\Core\Database\Query\SelectInterface');
     $select->expects($this->any())
       ->method('fields')
       ->willReturnSelf();
diff --git a/tests/src/Unit/EventSubscriber/AgreementSubscriberTest.php b/tests/src/Unit/EventSubscriber/AgreementSubscriberTest.php
index da40497..d669f61 100644
--- a/tests/src/Unit/EventSubscriber/AgreementSubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/AgreementSubscriberTest.php
@@ -2,12 +2,12 @@
 
 namespace Drupal\Tests\agreement\Unit\EventSubscriber;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\agreement\EventSubscriber\AgreementSubscriber;
 use Drupal\Tests\UnitTestCase;
 use Prophecy\Argument;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\HttpKernelInterface;
 
@@ -18,6 +18,7 @@ use Symfony\Component\HttpKernel\HttpKernelInterface;
  */
 class AgreementSubscriberTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Asserts that check for redirection method is functional.
    *
diff --git a/tests/src/Unit/Plugin/views/field/AgreementEntityTest.php b/tests/src/Unit/Plugin/views/field/AgreementEntityTest.php
index 1589613..50aa710 100644
--- a/tests/src/Unit/Plugin/views/field/AgreementEntityTest.php
+++ b/tests/src/Unit/Plugin/views/field/AgreementEntityTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\agreement\Unit\Plugin\views\field;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\agreement\Entity\Agreement;
 use Drupal\agreement\Plugin\views\field\AgreementEntity;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
@@ -15,6 +16,7 @@ use Drupal\views\ResultRow;
  */
 class AgreementEntityTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Agreement entity plugin.
    *
