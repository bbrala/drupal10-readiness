diff --git a/src/Controller/LingotekBatchController.php b/src/Controller/LingotekBatchController.php
index 36fd3315..9bcac203 100644
--- a/src/Controller/LingotekBatchController.php
+++ b/src/Controller/LingotekBatchController.php
@@ -41,7 +41,7 @@ class LingotekBatchController extends LingotekControllerBase {
       'operations' => $this->getUploadOperations($entity_type, [$entity_id]),
       'error_message' => t('An error happened.'),
       'finished' => 'lingotek_operation_content_upload_finished',
-      'file' => drupal_get_path('module', 'lingotek') . '/lingotek.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('lingotek') . '/lingotek.batch.inc',
     ];
     $redirect_url = \Drupal::urlGenerator()->generate("entity.$entity_type.content_translation_overview",
       [$entity_type => $entity_id], UrlGeneratorInterface::ABSOLUTE_URL);
@@ -54,7 +54,7 @@ class LingotekBatchController extends LingotekControllerBase {
       'title' => $this->t('Downloading translations from Lingotek'),
       'operations' => $this->getDownloadOperations($entity_type, [$entity_id], $locales),
       'finished' => 'lingotek_operation_content_download_finished',
-      'file' => drupal_get_path('module', 'lingotek') . '/lingotek.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('lingotek') . '/lingotek.batch.inc',
     ];
     $entity = \Drupal::entityTypeManager()->getStorage($entity_type)->load($entity_id);
     $redirect_url = \Drupal::urlGenerator()->generate("entity.$entity_type.content_translation_overview",
diff --git a/src/Tests/Kernel/LingotekConfigImportTest.php b/src/Tests/Kernel/LingotekConfigImportTest.php
index 3a2b2f2f..df18a93d 100644
--- a/src/Tests/Kernel/LingotekConfigImportTest.php
+++ b/src/Tests/Kernel/LingotekConfigImportTest.php
@@ -70,7 +70,7 @@ class LingotekConfigImportTest extends KernelTestBase {
     \Drupal::service('content_translation.manager')->setEnabled($entity_type_id, $entity_type_id, TRUE);
 
     // Verify the configuration to create does not exist yet.
-    $this->assertIdentical($storage->exists($config_name), FALSE, $config_name . ' not found.');
+    $this->assertSame($storage->exists($config_name), FALSE, $config_name . ' not found.');
 
     // Create new config entity for content language translation.
     $data = [
@@ -109,18 +109,18 @@ class LingotekConfigImportTest extends KernelTestBase {
       ],
     ];
     $sync->write($config_name, $data);
-    $this->assertIdentical($sync->exists($config_name), TRUE, $config_name . ' found.');
+    $this->assertSame($sync->exists($config_name), TRUE, $config_name . ' found.');
 
     // Import.
     $this->configImporter()->import();
 
     // Verify the values appeared.
     $config = $this->config($config_name);
-    $this->assertIdentical($config->get('translate.entity.entity_test_mul.entity_test_mul.field.field_test_text'), TRUE);
+    $this->assertSame($config->get('translate.entity.entity_test_mul.entity_test_mul.field.field_test_text'), TRUE);
 
     /** @var \Drupal\lingotek\LingotekConfigurationServiceInterface $lingotek_config */
     $lingotek_config = \Drupal::service('lingotek.configuration');
-    $this->assertIdentical($lingotek_config->isEnabled($entity_type_id), TRUE);
+    $this->assertSame($lingotek_config->isEnabled($entity_type_id), TRUE);
   }
 
 }
diff --git a/tests/modules/lingotek_test/src/LingotekFake.php b/tests/modules/lingotek_test/src/LingotekFake.php
index 5b8c7e18..6543f8ec 100644
--- a/tests/modules/lingotek_test/src/LingotekFake.php
+++ b/tests/modules/lingotek_test/src/LingotekFake.php
@@ -359,10 +359,10 @@ class LingotekFake implements LingotekInterface {
     \Drupal::state()->set('lingotek.downloaded_locale', $locale);
     $type = \Drupal::state()->get('lingotek.uploaded_content_type', 'node');
     $typeWithLocale = $type . '.' . $locale;
-    $path = drupal_get_path('module', 'lingotek') . '/tests/modules/lingotek_test/document_responses/' . $typeWithLocale . '.json';
+    $path = \Drupal::service('extension.list.module')->getPath('lingotek') . '/tests/modules/lingotek_test/document_responses/' . $typeWithLocale . '.json';
 
     if (!file_exists($path)) {
-      $path = drupal_get_path('module', 'lingotek') . '/tests/modules/lingotek_test/document_responses/' . $type . '.json';
+      $path = \Drupal::service('extension.list.module')->getPath('lingotek') . '/tests/modules/lingotek_test/document_responses/' . $type . '.json';
     }
 
     $input = file_get_contents($path);
diff --git a/tests/src/Functional/ChineseBulkTranslationTest.php b/tests/src/Functional/ChineseBulkTranslationTest.php
index d3492c40..4f799316 100644
--- a/tests/src/Functional/ChineseBulkTranslationTest.php
+++ b/tests/src/Functional/ChineseBulkTranslationTest.php
@@ -87,24 +87,24 @@ class ChineseBulkTranslationTest extends LingotekTestBase {
     // And we can already request a translation.
     $this->assertLingotekRequestTranslationLink('zh_CN');
     $this->clickLink('EN');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request the German (AT) translation.
     $this->assertLingotekRequestTranslationLink('zh_CN');
     $this->clickLink('ZH');
-    $this->assertText("Locale 'zh_CN' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'zh_CN' was added as a translation target for node Llamas are cool.");
     // Check that the requested locale is the right one.
-    $this->assertIdentical('zh_CN', \Drupal::state()->get('lingotek.added_target_locale'));
+    $this->assertSame('zh_CN', \Drupal::state()->get('lingotek.added_target_locale'));
 
     // Check status of the Spanish translation.
     $this->assertLingotekCheckTargetStatusLink('zh_CN');
     $this->clickLink('ZH');
-    $this->assertText('The zh_CN translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The zh_CN translation for node Llamas are cool is ready for download.');
 
     // Download the Spanish translation.
     $this->assertLingotekDownloadTargetLink('zh_CN');
     $this->clickLink('ZH');
-    $this->assertText('The translation of node Llamas are cool into zh_CN has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into zh_CN has been downloaded.');
 
     // Now the link is to the workbench, and it opens in a new tab.
     $this->assertLingotekWorkbenchLink('zh_CN', 'dummy-document-hash-id', 'ZH-HANS');
@@ -133,34 +133,34 @@ class ChineseBulkTranslationTest extends LingotekTestBase {
     $assert_session->linkByHrefNotExists($basepath . '/admin/lingotek/config/request/system.site_information_settings/system.site_information_settings/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
 
     $this->clickLink('EN', 1);
-    $this->assertText(t('System information uploaded successfully'));
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->assertSession()->pageTextContains(t('System information uploaded successfully'));
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // There is a link for checking status.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/check_upload/system.site_information_settings/system.site_information_settings?destination=' . $basepath . '/admin/lingotek/config/manage');
     // And we can already request a translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/request/system.site_information_settings/system.site_information_settings/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('EN', 1);
-    $this->assertText('System information status checked successfully');
+    $this->assertSession()->pageTextContains('System information status checked successfully');
 
     // Request the Chinese translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/request/system.site_information_settings/system.site_information_settings/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('ZH');
-    $this->assertText("Translation to zh_CN requested successfully");
+    $this->assertSession()->pageTextContains("Translation to zh_CN requested successfully");
     // Check that the requested locale is the right one.
-    $this->assertIdentical('zh_CN', \Drupal::state()->get('lingotek.added_target_locale'));
+    $this->assertSame('zh_CN', \Drupal::state()->get('lingotek.added_target_locale'));
 
     // Check status of the Chinese translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/check_download/system.site_information_settings/system.site_information_settings/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('ZH');
-    $this->assertIdentical('zh_CN', \Drupal::state()->get('lingotek.checked_target_locale'));
-    $this->assertText("Translation to zh_CN checked successfully");
+    $this->assertSame('zh_CN', \Drupal::state()->get('lingotek.checked_target_locale'));
+    $this->assertSession()->pageTextContains("Translation to zh_CN checked successfully");
 
     // Download the Chinese translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/download/system.site_information_settings/system.site_information_settings/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('ZH');
-    $this->assertText('Translation to zh_CN downloaded successfully');
-    $this->assertIdentical('zh_CN', \Drupal::state()->get('lingotek.downloaded_locale'));
+    $this->assertSession()->pageTextContains('Translation to zh_CN downloaded successfully');
+    $this->assertSame('zh_CN', \Drupal::state()->get('lingotek.downloaded_locale'));
 
     // Now the link is to the workbench, and it opens in a new tab.
     $this->assertLingotekWorkbenchLink('zh_CN', 'dummy-document-hash-id', 'ZH-HANS');
@@ -188,33 +188,33 @@ class ChineseBulkTranslationTest extends LingotekTestBase {
     // And we cannot request yet a translation.
     $assert_session->linkByHrefNotExists($basepath . '/admin/lingotek/config/request/node_type/article/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('EN');
-    $this->assertText(t('Article uploaded successfully'));
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->assertSession()->pageTextContains(t('Article uploaded successfully'));
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // There is a link for checking status.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/check_upload/node_type/article?destination=' . $basepath . '/admin/lingotek/config/manage');
     // And we can already request a translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/request/node_type/article/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('EN');
-    $this->assertText('Article status checked successfully');
+    $this->assertSession()->pageTextContains('Article status checked successfully');
 
     // Request the Spanish translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/request/node_type/article/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('ZH');
-    $this->assertText("Translation to zh_CN requested successfully");
-    $this->assertIdentical('zh_CN', \Drupal::state()->get('lingotek.added_target_locale'));
+    $this->assertSession()->pageTextContains("Translation to zh_CN requested successfully");
+    $this->assertSame('zh_CN', \Drupal::state()->get('lingotek.added_target_locale'));
 
     // Check status of the Spanish translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/check_download/node_type/article/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('ZH');
-    $this->assertIdentical('zh_CN', \Drupal::state()->get('lingotek.checked_target_locale'));
-    $this->assertText("Translation to zh_CN status checked successfully");
+    $this->assertSame('zh_CN', \Drupal::state()->get('lingotek.checked_target_locale'));
+    $this->assertSession()->pageTextContains("Translation to zh_CN status checked successfully");
 
     // Download the Spanish translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/download/node_type/article/zh_CN?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('ZH');
-    $this->assertText('Translation to zh_CN downloaded successfully');
-    $this->assertIdentical('zh_CN', \Drupal::state()->get('lingotek.downloaded_locale'));
+    $this->assertSession()->pageTextContains('Translation to zh_CN downloaded successfully');
+    $this->assertSame('zh_CN', \Drupal::state()->get('lingotek.downloaded_locale'));
 
     // Now the link is to the workbench, and it opens in a new tab.
     $this->assertLingotekWorkbenchLink('zh_CN', 'dummy-document-hash-id', 'ZH-HANS');
diff --git a/tests/src/Functional/Controller/LingotekNotificationControllerTest.php b/tests/src/Functional/Controller/LingotekNotificationControllerTest.php
index 5f8e1bf4..79c53b06 100644
--- a/tests/src/Functional/Controller/LingotekNotificationControllerTest.php
+++ b/tests/src/Functional/Controller/LingotekNotificationControllerTest.php
@@ -81,7 +81,7 @@ class LingotekNotificationControllerTest extends LingotekTestBase {
     $content_translation_service = \Drupal::service('lingotek.content_translation');
 
     // Assert the content is importing.
-    $this->assertIdentical(Lingotek::STATUS_IMPORTING, $content_translation_service->getSourceStatus($node));
+    $this->assertSame(Lingotek::STATUS_IMPORTING, $content_translation_service->getSourceStatus($node));
 
     $this->goToContentBulkManagementForm();
 
@@ -107,7 +107,7 @@ class LingotekNotificationControllerTest extends LingotekTestBase {
 
     $response = json_decode($request->getBody(), TRUE);
     $this->verbose($request);
-    $this->assertIdentical(['es'], $response['result']['request_translations'], 'Spanish language has been requested after notification automatically.');
+    $this->assertSame(['es'], $response['result']['request_translations'], 'Spanish language has been requested after notification automatically.');
 
     // Simulate again the notification of content successfully uploaded.
     $request = $this->client->get($url, [
@@ -122,7 +122,7 @@ class LingotekNotificationControllerTest extends LingotekTestBase {
 
     $response = json_decode($request->getBody(), TRUE);
     $this->verbose($request);
-    $this->assertIdentical(['es'], $response['result']['request_translations'], 'Spanish language has been requested after notification automatically.');
+    $this->assertSame(['es'], $response['result']['request_translations'], 'Spanish language has been requested after notification automatically.');
   }
 
   /**
@@ -147,7 +147,7 @@ class LingotekNotificationControllerTest extends LingotekTestBase {
     $this->assertStringContainsString('max-age=0', $cache_control_header[0]);
 
     $response = (string) $request->getBody();
-    $this->assertIdentical($response, 'It works, but nothing to look here.');
+    $this->assertSame($response, 'It works, but nothing to look here.');
 
     // Simulate again the notification of content successfully uploaded.
     $request = $this->client->get($url, [
@@ -161,7 +161,7 @@ class LingotekNotificationControllerTest extends LingotekTestBase {
     $this->assertStringContainsString('max-age=0', $cache_control_header[0]);
 
     $response = (string) $request->getBody();
-    $this->assertIdentical($response, 'It works, but nothing to look here.');
+    $this->assertSame($response, 'It works, but nothing to look here.');
   }
 
 }
diff --git a/tests/src/Functional/Controller/LingotekSupportedLocalesControllerTest.php b/tests/src/Functional/Controller/LingotekSupportedLocalesControllerTest.php
index 76a4b3e1..d696d7aa 100644
--- a/tests/src/Functional/Controller/LingotekSupportedLocalesControllerTest.php
+++ b/tests/src/Functional/Controller/LingotekSupportedLocalesControllerTest.php
@@ -16,9 +16,9 @@ class LingotekSupportedLocalesControllerTest extends LingotekTestBase {
    */
   public function testSupportedLocales() {
     $this->drupalGet('/admin/lingotek/supported-locales');
-    $this->assertText('German (Austria)');
-    $this->assertText('German (Germany)');
-    $this->assertText('Spanish (Spain)');
+    $this->assertSession()->pageTextContains('German (Austria)');
+    $this->assertSession()->pageTextContains('German (Germany)');
+    $this->assertSession()->pageTextContains('Spanish (Spain)');
   }
 
 }
diff --git a/tests/src/Functional/Controller/LingotekWorkbenchRedirectControllerTest.php b/tests/src/Functional/Controller/LingotekWorkbenchRedirectControllerTest.php
index 32025597..c18b9e0d 100644
--- a/tests/src/Functional/Controller/LingotekWorkbenchRedirectControllerTest.php
+++ b/tests/src/Functional/Controller/LingotekWorkbenchRedirectControllerTest.php
@@ -76,15 +76,15 @@ class LingotekWorkbenchRedirectControllerTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('EN');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $this->clickLink('ES');
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('ES');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Download the Spanish translation.
     $this->assertLingotekDownloadTargetLink('es_AR');
@@ -97,7 +97,7 @@ class LingotekWorkbenchRedirectControllerTest extends LingotekTestBase {
     $this->clickLink('ES');
 
     $basepath = \Drupal::request()->getSchemeAndHttpHost();
-    $this->assertUrl($basepath . '/workbench/document/dummy-document-hash-id/locale/es_AR');
+    $this->assertSession()->addressEquals($basepath . '/workbench/document/dummy-document-hash-id/locale/es_AR');
   }
 
 }
diff --git a/tests/src/Functional/FieldFormatters/LingotekTranslationStatusFormatterTest.php b/tests/src/Functional/FieldFormatters/LingotekTranslationStatusFormatterTest.php
index d2eb7156..7dfd739c 100644
--- a/tests/src/Functional/FieldFormatters/LingotekTranslationStatusFormatterTest.php
+++ b/tests/src/Functional/FieldFormatters/LingotekTranslationStatusFormatterTest.php
@@ -68,7 +68,7 @@ class LingotekTranslationStatusFormatterTest extends LingotekTestBase {
     $assert_session->responseContains('Lingotek translation status');
 
     $link = $this->xpath("//a[@href='$basepath/admin/lingotek/entity/add_target/dummy-document-hash-id/es_MX?destination=" . $basepath . "/metadata/1' and @class='language-icon target-request' and @title='Spanish - Request translation' and text()='ES']");
-    $this->assertEqual(count($link), 1, 'Link exists.');
+    $this->assertEquals(count($link), 1, 'Link exists.');
   }
 
   public function testStatusForMissingLanguage() {
@@ -94,7 +94,7 @@ class LingotekTranslationStatusFormatterTest extends LingotekTestBase {
     $assert_session->responseContains('Lingotek translation status');
 
     $link = $this->xpath("//a[@href='$basepath/admin/lingotek/entity/add_target/dummy-document-hash-id/es_MX?destination=" . $basepath . "/metadata/1' and @class='language-icon target-request' and @title='Spanish - Request translation' and text()='ES']");
-    $this->assertEqual(count($link), 1, 'Link exists.');
+    $this->assertEquals(count($link), 1, 'Link exists.');
   }
 
 }
diff --git a/tests/src/Functional/FieldFormatters/LingotekTranslationStatusesFormatterTest.php b/tests/src/Functional/FieldFormatters/LingotekTranslationStatusesFormatterTest.php
index 102afad5..188a41c4 100644
--- a/tests/src/Functional/FieldFormatters/LingotekTranslationStatusesFormatterTest.php
+++ b/tests/src/Functional/FieldFormatters/LingotekTranslationStatusesFormatterTest.php
@@ -67,10 +67,10 @@ class LingotekTranslationStatusesFormatterTest extends LingotekTestBase {
     $this->assertSession()->responseNotContains('Lingotek translation status');
 
     $link = $this->xpath("//a[@href='$basepath/admin/lingotek/entity/add_target/dummy-document-hash-id/de_DE?destination=" . $basepath . "/metadata/1' and @class='language-icon target-request' and @title='German - Request translation' and text()='DE']");
-    $this->assertEqual(count($link), 1, 'Link exists.');
+    $this->assertEquals(count($link), 1, 'Link exists.');
 
     $link = $this->xpath("//a[@href='$basepath/admin/lingotek/entity/add_target/dummy-document-hash-id/es_MX?destination=" . $basepath . "/metadata/1' and @class='language-icon target-request' and @title='Spanish - Request translation' and text()='ES']");
-    $this->assertEqual(count($link), 1, 'Link exists.');
+    $this->assertEquals(count($link), 1, 'Link exists.');
   }
 
   public function testStatusForMissingLanguage() {
@@ -94,10 +94,10 @@ class LingotekTranslationStatusesFormatterTest extends LingotekTestBase {
     $this->assertSession()->responseNotContains('Lingotek translation status');
 
     $link = $this->xpath("//a[@href='$basepath/admin/lingotek/entity/add_target/dummy-document-hash-id/de_DE?destination=" . $basepath . "/metadata/1' and @class='language-icon target-request' and @title='German - Request translation' and text()='DE']");
-    $this->assertEqual(count($link), 1, 'Link exists.');
+    $this->assertEquals(count($link), 1, 'Link exists.');
 
     $link = $this->xpath("//a[@href='$basepath/admin/lingotek/entity/add_target/dummy-document-hash-id/es_MX?destination=" . $basepath . "/metadata/1' and @class='language-icon target-request' and @title='Spanish - Request translation' and text()='ES']");
-    $this->assertEqual(count($link), 1, 'Link exists.');
+    $this->assertEquals(count($link), 1, 'Link exists.');
   }
 
 }
diff --git a/tests/src/Functional/Form/LanguageFormTest.php b/tests/src/Functional/Form/LanguageFormTest.php
index b3a61b05..094aee8f 100644
--- a/tests/src/Functional/Form/LanguageFormTest.php
+++ b/tests/src/Functional/Form/LanguageFormTest.php
@@ -48,13 +48,13 @@ class LanguageFormTest extends BrowserTestBase {
     $edit = [
       'predefined_langcode' => 'de',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Add language');
+    $this->submitForm($edit, 'Add language');
 
     // Click on edit for German.
     $this->clickLink('Edit', 1);
 
     // Assert that the locale is correct.
-    $this->assertFieldByName('lingotek_locale', 'de-DE', 'The Lingotek locale is set correctly.');
+    $this->assertSession()->fieldValueEquals('lingotek_locale', 'de-DE');
   }
 
   /**
@@ -67,9 +67,9 @@ class LanguageFormTest extends BrowserTestBase {
     $this->clickLink('Edit', 1);
 
     // Assert that the locale is correct.
-    $this->assertFieldByName('lingotek_locale', 'de-DE', 'The Lingotek locale is set correctly.');
-    $this->drupalPostForm(NULL, ['name' => 'German (Germany)'], 'Save language');
-    $this->assertText('German (Germany)');
+    $this->assertSession()->fieldValueEquals('lingotek_locale', 'de-DE');
+    $this->submitForm(['name' => 'German (Germany)'], 'Save language');
+    $this->assertSession()->pageTextContains('German (Germany)');
   }
 
   /**
@@ -85,10 +85,10 @@ class LanguageFormTest extends BrowserTestBase {
     $this->clickLink('Edit', 1);
 
     // Assert that the locale is correct.
-    $this->assertFieldByName('lingotek_locale', 'de-DE', 'The Lingotek locale is set correctly.');
-    $this->drupalPostForm(NULL, ['name' => 'German (Germany)'], 'Save language');
-    $this->assertText('German (Germany)');
-    $this->assertText("The Lingotek locale has not been validated.");
+    $this->assertSession()->fieldValueEquals('lingotek_locale', 'de-DE');
+    $this->submitForm(['name' => 'German (Germany)'], 'Save language');
+    $this->assertSession()->pageTextContains('German (Germany)');
+    $this->assertSession()->pageTextContains("The Lingotek locale has not been validated.");
   }
 
   /**
@@ -97,10 +97,10 @@ class LanguageFormTest extends BrowserTestBase {
   public function testAddingCustomLanguage() {
     // Check that there is a select for locales.
     $this->drupalGet('admin/config/regional/language/add');
-    $this->assertField('lingotek_locale', 'There is a field for adding the Lingotek locale.');
+    $this->assertSession()->fieldExists('lingotek_locale', 'There is a field for adding the Lingotek locale.');
 
     // Assert that the locale is empty.
-    $this->assertFieldByName('lingotek_locale', '', 'The Lingotek locale is empty by default.');
+    $this->assertSession()->fieldValueEquals('lingotek_locale', '');
     // The Lingotek locale is enabled by default.
     $this->getSession()->getPage()->hasUncheckedField('lingotek_disabled');
 
@@ -111,18 +111,18 @@ class LanguageFormTest extends BrowserTestBase {
       'direction' => 'ltr',
       'lingotek_locale' => 'es-ES',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Add custom language');
-    $this->assertText('The language Spanish (Germany) has been created and can now be used.');
+    $this->submitForm($edit, 'Add custom language');
+    $this->assertSession()->pageTextContains('The language Spanish (Germany) has been created and can now be used.');
 
     // Ensure the language is created and with the right locale.
     $language = ConfigurableLanguage::load('es-DE');
-    $this->assertEqual('es_ES', $language->getThirdPartySetting('lingotek', 'locale'), 'The Lingotek locale has been saved successfully.');
+    $this->assertEquals('es_ES', $language->getThirdPartySetting('lingotek', 'locale'), 'The Lingotek locale has been saved successfully.');
 
     // Ensure the locale and langcode are correctly mapped.
     /** @var LanguageLocaleMapperInterface $locale_mapper */
     $locale_mapper = \Drupal::service('lingotek.language_locale_mapper');
-    $this->assertEqual('es_ES', $locale_mapper->getLocaleForLangcode('es-DE'), 'The language locale mapper correctly guesses the locale.');
-    $this->assertEqual('es-DE', $locale_mapper->getConfigurableLanguageForLocale('es_ES')->getId(), 'The language locale mapper correctly guesses the langcode.');
+    $this->assertEquals('es_ES', $locale_mapper->getLocaleForLangcode('es-DE'), 'The language locale mapper correctly guesses the locale.');
+    $this->assertEquals('es-DE', $locale_mapper->getConfigurableLanguageForLocale('es_ES')->getId(), 'The language locale mapper correctly guesses the langcode.');
   }
 
   /**
@@ -142,7 +142,7 @@ class LanguageFormTest extends BrowserTestBase {
     $edit = [
       'lingotek_disabled' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save language');
+    $this->submitForm($edit, 'Save language');
 
     // Ensure the language is disabled.
     $language = ConfigurableLanguage::load('es-DE');
@@ -175,7 +175,7 @@ class LanguageFormTest extends BrowserTestBase {
     $edit = [
       'lingotek_disabled' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save language');
+    $this->submitForm($edit, 'Save language');
 
     // Ensure the language is disabled.
     $language = ConfigurableLanguage::load('de-at');
@@ -200,16 +200,16 @@ class LanguageFormTest extends BrowserTestBase {
     $this->clickLink('Edit', 1);
 
     // Assert that the locale is correct.
-    $this->assertFieldByName('lingotek_locale', 'de-AT', 'The Lingotek locale is set to the right language.');
+    $this->assertSession()->fieldValueEquals('lingotek_locale', 'de-AT');
 
     // Edit the locale.
     $edit = ['lingotek_locale' => 'de-DE'];
-    $this->drupalPostForm(NULL, $edit, 'Save language');
+    $this->submitForm($edit, 'Save language');
 
     // Click again on edit for German (AT).
     $this->clickLink('Edit', 1);
     // Assert that the locale is correct.
-    $this->assertFieldByName('lingotek_locale', 'de-DE', 'The Lingotek locale is set to the right language after editing.');
+    $this->assertSession()->fieldValueEquals('lingotek_locale', 'de-DE');
   }
 
   /**
@@ -223,12 +223,12 @@ class LanguageFormTest extends BrowserTestBase {
     $this->clickLink('Edit', 1);
 
     // Assert that the locale is correct.
-    $this->assertFieldByName('lingotek_locale', 'de-AT', 'The Lingotek locale is set to the right language.');
+    $this->assertSession()->fieldValueEquals('lingotek_locale', 'de-AT');
 
     // Edit the locale.
     $edit = ['lingotek_locale' => 'de-IN'];
-    $this->drupalPostForm(NULL, $edit, 'Save language');
-    $this->assertText('The Lingotek locale de-IN does not exist.');
+    $this->submitForm($edit, 'Save language');
+    $this->assertSession()->pageTextContains('The Lingotek locale de-IN does not exist.');
   }
 
   /**
@@ -242,17 +242,17 @@ class LanguageFormTest extends BrowserTestBase {
     $this->clickLink('Edit', 1);
 
     // Assert that the locale is correct.
-    $this->assertFieldByName('lingotek_locale', 'de-AT', 'The Lingotek locale is set to the right language.');
+    $this->assertSession()->fieldValueEquals('lingotek_locale', 'de-AT');
 
     // Edit the locale.
     $edit = ['lingotek_locale' => 'de_AT'];
-    $this->drupalPostForm(NULL, $edit, 'Save language');
+    $this->submitForm($edit, 'Save language');
 
     // Click on edit for German (AT).
     $this->clickLink('Edit', 1);
 
     // Assert that the locale is correct.
-    $this->assertFieldByName('lingotek_locale', 'de-AT', 'The Lingotek locale is set to the right language.');
+    $this->assertSession()->fieldValueEquals('lingotek_locale', 'de-AT');
   }
 
   /**
@@ -267,10 +267,10 @@ class LanguageFormTest extends BrowserTestBase {
     $this->clickLink('Edit', 1);
 
     // Make sure that the autocomplete library is added.
-    $this->assertRaw('core/misc/autocomplete.js');
+    $this->assertSession()->responseContains('core/misc/autocomplete.js');
 
     // Assert that the locale is correct.
-    $this->assertFieldByName('lingotek_locale', 'de-DE', 'The Lingotek locale is set correctly.');
+    $this->assertSession()->fieldValueEquals('lingotek_locale', 'de-DE');
 
     // Check the autocomplete route.
     $result = $this->xpath('//input[@name="lingotek_locale" and contains(@data-autocomplete-path, "admin/lingotek/supported-locales-autocomplete")]');
diff --git a/tests/src/Functional/Form/LingotekAccountDisconnectFormTest.php b/tests/src/Functional/Form/LingotekAccountDisconnectFormTest.php
index fc52c1ee..83f69cad 100644
--- a/tests/src/Functional/Form/LingotekAccountDisconnectFormTest.php
+++ b/tests/src/Functional/Form/LingotekAccountDisconnectFormTest.php
@@ -17,15 +17,15 @@ class LingotekAccountDisconnectFormTest extends LingotekTestBase {
   public function testAccountDisconnect() {
     // We try to disconnect from an already connected account.
     $this->drupalGet('admin/lingotek/settings');
-    $this->drupalPostForm(NULL, [], t('Disconnect'), [], 'lingoteksettings-tab-account-form');
+    $this->submitForm([], t('Disconnect'), 'lingoteksettings-tab-account-form');
 
     \Drupal::state()->set('must_remain_disconnected', TRUE);
 
     // We need to confirm disconnection.
-    $this->drupalPostForm(NULL, [], t('Disconnect'));
+    $this->submitForm([], t('Disconnect'));
 
     // We have been redirected to the account connection form.
-    $this->assertUrl('/admin/lingotek/setup/account');
+    $this->assertSession()->addressEquals('/admin/lingotek/setup/account');
 
     // We don't have an account anymore.
     $lingotek_config = \Drupal::config('lingotek.settings');
diff --git a/tests/src/Functional/Form/LingotekAccountFormTest.php b/tests/src/Functional/Form/LingotekAccountFormTest.php
index cd6c97e2..b024b9fa 100644
--- a/tests/src/Functional/Form/LingotekAccountFormTest.php
+++ b/tests/src/Functional/Form/LingotekAccountFormTest.php
@@ -18,13 +18,13 @@ class LingotekAccountFormTest extends LingotekTestBase {
     $this->drupalGet('admin/lingotek/settings');
 
     $xpath = $this->xpath('//details[@data-drupal-selector="edit-account"]//tr[@data-drupal-selector="edit-account-table-status-row"]//td[text()="Active"]');
-    $this->assertIdentical(1, count($xpath), 'Status indicator found');
+    $this->assertSame(1, count($xpath), 'Status indicator found');
 
     $xpath = $this->xpath('//details[@data-drupal-selector="edit-account"]//tr[@data-drupal-selector="edit-account-table-plan-row"]//td[text()="No"]');
-    $this->assertIdentical(1, count($xpath), 'Enterprise plan indicator found');
+    $this->assertSame(1, count($xpath), 'Enterprise plan indicator found');
 
     $xpath = $this->xpath('//details[@data-drupal-selector="edit-account"]//tr[@data-drupal-selector="edit-account-table-activation-row"]//td[text()="testUser@example.com"]');
-    $this->assertIdentical(1, count($xpath), 'Activation Name found');
+    $this->assertSame(1, count($xpath), 'Activation Name found');
   }
 
 }
diff --git a/tests/src/Functional/Form/LingotekSettingsTabConfigurationFormTest.php b/tests/src/Functional/Form/LingotekSettingsTabConfigurationFormTest.php
index f7c87f90..d86e1a74 100644
--- a/tests/src/Functional/Form/LingotekSettingsTabConfigurationFormTest.php
+++ b/tests/src/Functional/Form/LingotekSettingsTabConfigurationFormTest.php
@@ -17,17 +17,17 @@ class LingotekSettingsTabConfigurationFormTest extends LingotekTestBase {
   public function testConfigurationForm() {
     $this->drupalGet('admin/lingotek/settings');
     // Nothing is selected.
-    $this->assertNoFieldChecked('edit-table-configurable-language-enabled');
+    $this->assertSession()->checkboxNotChecked('edit-table-configurable-language-enabled');
     // Check the configurable language and set the manual profile.
     $edit = [
       'table[configurable_language][enabled]' => 1,
       'table[configurable_language][profile]' => 'manual',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-configuration-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-configuration-form');
 
     // The values shown are correct.
-    $this->assertFieldChecked('edit-table-configurable-language-enabled');
-    $this->assertFieldByName('table[configurable_language][profile]', 'manual');
+    $this->assertSession()->checkboxChecked('edit-table-configurable-language-enabled');
+    $this->assertSession()->fieldValueEquals('table[configurable_language][profile]', 'manual');
 
     /** @var \Drupal\lingotek\LingotekConfigTranslationServiceInterface $config_translation */
     $config_translation = \Drupal::service('lingotek.config_translation');
@@ -35,8 +35,8 @@ class LingotekSettingsTabConfigurationFormTest extends LingotekTestBase {
     $lingotek_config = \Drupal::service('lingotek.configuration');
 
     $this->assertTrue($config_translation->isEnabled('configurable_language'));
-    $this->assertEqual('manual', $lingotek_config->getConfigEntityDefaultProfileId('configurable_language'));
-    $this->assertEqual(['configurable_language'], $config_translation->getEnabledConfigTypes());
+    $this->assertEquals('manual', $lingotek_config->getConfigEntityDefaultProfileId('configurable_language'));
+    $this->assertEquals(['configurable_language'], $config_translation->getEnabledConfigTypes());
   }
 
 }
diff --git a/tests/src/Functional/Form/LingotekSettingsTabContentFormTest.php b/tests/src/Functional/Form/LingotekSettingsTabContentFormTest.php
index 241fe00d..e906673f 100644
--- a/tests/src/Functional/Form/LingotekSettingsTabContentFormTest.php
+++ b/tests/src/Functional/Form/LingotekSettingsTabContentFormTest.php
@@ -61,7 +61,7 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
    */
   public function testNoUntranslatableEntitiesAreShown() {
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertText('There are no translatable content entities specified');
+    $this->assertSession()->pageTextContains('There are no translatable content entities specified');
   }
 
   /**
@@ -86,12 +86,12 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
 
     // Check the form contains the article type and only its text-based fields.
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertNoText('There are no translatable content types specified');
-    $this->assertNoField('node[article][fields][langcode]');
-    $this->assertField('node[article][enabled]');
-    $this->assertField('node[article][profiles]');
-    $this->assertField('node[article][fields][title]');
-    $this->assertField('node[article][fields][body]');
+    $this->assertSession()->pageTextNotContains('There are no translatable content types specified');
+    $this->assertSession()->fieldNotExists('node[article][fields][langcode]');
+    $this->assertSession()->fieldExists('node[article][enabled]');
+    $this->assertSession()->fieldExists('node[article][profiles]');
+    $this->assertSession()->fieldExists('node[article][fields][title]');
+    $this->assertSession()->fieldExists('node[article][fields][body]');
 
     // Check the title and body fields.
     $edit = [
@@ -105,16 +105,16 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'user[user][fields][user_picture]' => 1,
       'user[user][fields][user_picture:properties][alt]' => 'alt',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
     // Check that values are kept in the form.
-    $this->assertFieldChecked('edit-node-article-enabled');
-    $this->assertFieldByName('node[article][profiles]', 'automatic');
-    $this->assertFieldChecked('edit-node-article-fields-title');
-    $this->assertFieldChecked('edit-node-article-fields-body');
-    $this->assertFieldChecked('edit-node-article-fields-field-image');
-    $this->assertFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxChecked('edit-node-article-enabled');
+    $this->assertSession()->fieldValueEquals('node[article][profiles]', 'automatic');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-title');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-image');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
 
     // Check that the config is correctly saved.
     $config_data = $this->config('lingotek.settings')->getRawData();
@@ -123,10 +123,10 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
     $this->assertTrue($config_data['translate']['entity']['node']['article']['field']['body']);
     $this->assertTrue($config_data['translate']['entity']['node']['article']['field']['field_image']);
     // As the schema here is sequence:ignore, there is no boolean casting.
-    $this->assertEqual($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['alt'], '1');
-    $this->assertEqual($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['title'], '0');
+    $this->assertEquals($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['alt'], '1');
+    $this->assertEquals($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['title'], '0');
     $this->assertFalse(array_key_exists('revision_log', $config_data['translate']['entity']['node']['article']['field']));
-    $this->assertEqual('automatic', $config_data['translate']['entity']['node']['article']['profile']);
+    $this->assertEquals('automatic', $config_data['translate']['entity']['node']['article']['profile']);
   }
 
   /**
@@ -149,16 +149,16 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'user[user][fields][user_picture:properties][alt]' => FALSE,
       'user[user][fields][user_picture:properties][title]' => 'title',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
     // Check that values are kept in the form.
-    $this->assertFieldChecked('edit-node-article-enabled');
-    $this->assertFieldByName('node[article][profiles]', 'automatic');
-    $this->assertFieldChecked('edit-node-article-fields-title');
-    $this->assertFieldChecked('edit-node-article-fields-body');
-    $this->assertFieldChecked('edit-node-article-fields-field-image');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertFieldChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxChecked('edit-node-article-enabled');
+    $this->assertSession()->fieldValueEquals('node[article][profiles]', 'automatic');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-title');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-image');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-imageproperties-title');
 
     // Check that the config is correctly saved.
     $config_data = $this->config('lingotek.settings')->getRawData();
@@ -167,10 +167,10 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
     $this->assertTrue($config_data['translate']['entity']['node']['article']['field']['body']);
     $this->assertTrue($config_data['translate']['entity']['node']['article']['field']['field_image']);
     // As the schema here is sequence:ignore, there is no boolean casting.
-    $this->assertEqual($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['alt'], '0');
-    $this->assertEqual($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['title'], '1');
+    $this->assertEquals($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['alt'], '0');
+    $this->assertEquals($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['title'], '1');
     $this->assertFalse(array_key_exists('revision_log', $config_data['translate']['entity']['node']['article']['field']));
-    $this->assertEqual('automatic', $config_data['translate']['entity']['node']['article']['profile']);
+    $this->assertEquals('automatic', $config_data['translate']['entity']['node']['article']['profile']);
 
     // Uncheck a couple of fields: body and image from node.
     $edit = [
@@ -186,16 +186,16 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'user[user][fields][user_picture:properties][alt]' => FALSE,
       'user[user][fields][user_picture:properties][title]' => 'title',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
     // Check that values are kept in the form.
-    $this->assertFieldChecked('edit-node-article-enabled');
-    $this->assertFieldByName('node[article][profiles]', 'automatic');
-    $this->assertFieldChecked('edit-node-article-fields-title');
-    $this->assertNoFieldChecked('edit-node-article-fields-body');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-image');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxChecked('edit-node-article-enabled');
+    $this->assertSession()->fieldValueEquals('node[article][profiles]', 'automatic');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-title');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-image');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
 
     // Check that the config is correctly saved.
     $config_data = $this->config('lingotek.settings')->getRawData();
@@ -206,9 +206,9 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
     // As the schema here is sequence:ignore, there is no boolean casting.
     // This should probably just be deleted.
     $this->assertFalse(array_key_exists('alt', $config_data['translate']['entity']['node']['article']['field']['field_image:properties']));
-    $this->assertEqual($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['title'], '0');
+    $this->assertEquals($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['title'], '0');
     $this->assertFalse(array_key_exists('revision_log', $config_data['translate']['entity']['node']['article']['field']));
-    $this->assertEqual('automatic', $config_data['translate']['entity']['node']['article']['profile']);
+    $this->assertEquals('automatic', $config_data['translate']['entity']['node']['article']['profile']);
 
     // Uncheck user for translation.
     $edit = [
@@ -221,21 +221,21 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'node[article][fields][field_image:properties][title]' => 'title',
       'user[user][enabled]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
     // Check that values are kept in the form.
-    $this->assertFieldChecked('edit-node-article-enabled');
-    $this->assertFieldByName('node[article][profiles]', 'automatic');
-    $this->assertFieldChecked('edit-node-article-fields-title');
-    $this->assertNoFieldChecked('edit-node-article-fields-body');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-image');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
-
-    $this->assertNoFieldChecked('edit-user-user-enabled');
-    $this->assertFieldByName('user[user][profiles]', 'automatic');
-    $this->assertFieldChecked('edit-user-user-fields-user-picture');
-    $this->assertFieldChecked('edit-user-user-fields-user-pictureproperties-title');
+    $this->assertSession()->checkboxChecked('edit-node-article-enabled');
+    $this->assertSession()->fieldValueEquals('node[article][profiles]', 'automatic');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-title');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-image');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
+
+    $this->assertSession()->checkboxNotChecked('edit-user-user-enabled');
+    $this->assertSession()->fieldValueEquals('user[user][profiles]', 'automatic');
+    $this->assertSession()->checkboxChecked('edit-user-user-fields-user-picture');
+    $this->assertSession()->checkboxChecked('edit-user-user-fields-user-pictureproperties-title');
 
     // Check that the config is correctly saved.
     $config_data = $this->config('lingotek.settings')->getRawData();
@@ -246,13 +246,13 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
     // As the schema here is sequence:ignore, there is no boolean casting.
     // This should probably just be deleted.
     $this->assertFalse(array_key_exists('alt', $config_data['translate']['entity']['node']['article']['field']['field_image:properties']));
-    $this->assertEqual($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['title'], '0');
+    $this->assertEquals($config_data['translate']['entity']['node']['article']['field']['field_image:properties']['title'], '0');
     $this->assertFalse(array_key_exists('revision_log', $config_data['translate']['entity']['node']['article']['field']));
-    $this->assertEqual('automatic', $config_data['translate']['entity']['node']['article']['profile']);
+    $this->assertEquals('automatic', $config_data['translate']['entity']['node']['article']['profile']);
 
     $this->assertFalse($config_data['translate']['entity']['user']['user']['enabled']);
     $this->assertTrue($config_data['translate']['entity']['user']['user']['field']['user_picture']);
-    $this->assertEqual($config_data['translate']['entity']['user']['user']['field']['user_picture:properties']['title'], '1');
+    $this->assertEquals($config_data['translate']['entity']['user']['user']['field']['user_picture:properties']['title'], '1');
   }
 
   public function testICanDisableFields() {
@@ -281,10 +281,10 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'node[article][fields][field_image]' => 1,
       'node[article][fields][field_image:properties][alt]' => 'alt',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
     // Assert that body translation is enabled.
-    $this->assertFieldChecked('edit-node-article-fields-body');
-    $this->assertFieldChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-imageproperties-alt');
 
     // Submit again unchecking body and image including subfields.
     $edit = [
@@ -295,11 +295,11 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'node[article][fields][field_image]' => FALSE,
       'node[article][fields][field_image:properties][alt]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
     // Those checkboxes should not be checked anymore.
-    $this->assertNoFieldChecked('edit-node-article-fields-body');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
 
   }
 
@@ -335,12 +335,12 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'node[article][fields][field_image]' => 1,
       'node[article][fields][field_image:properties][alt]' => 'alt',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
     // Assert that body translation is enabled.
-    $this->assertFieldChecked('edit-node-article-fields-title', 'The title field is enabled after enabled for Lingotek translation');
-    $this->assertFieldChecked('edit-node-article-fields-body', 'The body field is enabled after enabled for Lingotek translation');
-    $this->assertFieldChecked('edit-node-article-fields-field-image', 'The image field is enabled after enabled for Lingotek translation');
-    $this->assertFieldChecked('edit-node-article-fields-field-imageproperties-alt', 'The image alt property is enabled after enabled for Lingotek translation');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-title', 'The title field is enabled after enabled for Lingotek translation');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-body', 'The body field is enabled after enabled for Lingotek translation');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-image', 'The image field is enabled after enabled for Lingotek translation');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-imageproperties-alt', 'The image alt property is enabled after enabled for Lingotek translation');
 
     // Go to the content language settings, and disable the body field.
     // It should result that the field is disabled in Lingotek too.
@@ -352,14 +352,15 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'settings[node][article][fields][body]' => FALSE,
       'settings[node][article][fields][field_image]' => FALSE,
     ];
-    $this->drupalPostForm('admin/config/regional/content-language', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/regional/content-language');
+    $this->submitForm($edit, t('Save configuration'));
 
     // Get the form and check the fields are not available, because they cannot be translated.
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertFieldChecked('edit-node-article-fields-title', 'The title field is enabled after other fields were disabled for content translation');
-    $this->assertNoFieldById('edit-node-article-fields-body', 'The body field is not present after disabled for content translation');
-    $this->assertNoFieldById('edit-node-article-fields-field-image', 'The image field is not present after disabled for content translation');
-    $this->assertNoFieldById('edit-node-article-fields-field-imageproperties-alt', 'The image alt property is not present after image was disabled for content translation');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-title', 'The title field is enabled after other fields were disabled for content translation');
+    $this->assertSession()->fieldValueNotEquals('edit-node-article-fields-body', 'The body field is not present after disabled for content translation');
+    $this->assertSession()->fieldValueNotEquals('edit-node-article-fields-field-image', 'The image field is not present after disabled for content translation');
+    $this->assertSession()->fieldValueNotEquals('edit-node-article-fields-field-imageproperties-alt', 'The image alt property is not present after image was disabled for content translation');
 
     // But also check that the fields are not enabled.
     /** @var \Drupal\lingotek\LingotekConfigurationServiceInterface $lingotek_config */
@@ -405,23 +406,23 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
     // Get the form and check the field is not available, even if the storage
     // is translatable.
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertNoFieldById('edit-node-article-fields-field-image', '', 'The image field is not present after marked as not translatable.');
+    $this->assertSession()->fieldValueNotEquals('edit-node-article-fields-field-image', '');
 
     // Make the field translatable again.
     $field->setTranslatable(TRUE)->save();
 
     // If the field is translatable, the field is available again.
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertFieldById('edit-node-article-fields-field-image', '', 'The image field is present after marked as translatable.');
+    $this->assertSession()->fieldValueEquals('edit-node-article-fields-field-image', '');
   }
 
   public function testAddContentTypeAndConfigureLingotekToTranslate() {
     // Check the form contains the article type and only its text-based fields.
     $this->drupalGet('admin/structure/types');
     $this->clickLink('Add content type');
-    $this->assertNoFieldChecked('language_configuration[language_alterable]');
-    $this->assertNoFieldChecked('language_configuration[content_translation]');
-    $this->assertNoFieldChecked('language_configuration[content_translation_for_lingotek]');
+    $this->assertSession()->checkboxNotChecked('language_configuration[language_alterable]');
+    $this->assertSession()->checkboxNotChecked('language_configuration[content_translation]');
+    $this->assertSession()->checkboxNotChecked('language_configuration[content_translation_for_lingotek]');
 
     $edit = [
       'name' => 'Test',
@@ -430,17 +431,17 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'language_configuration[content_translation]' => TRUE,
       'language_configuration[content_translation_for_lingotek]' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save and manage fields');
-    $this->assertText('The content type Test has been added.');
+    $this->submitForm($edit, 'Save and manage fields');
+    $this->assertSession()->pageTextContains('The content type Test has been added.');
 
     // It should result that the field is enabled in Lingotek settings.
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertFieldChecked('edit-node-test-enabled');
+    $this->assertSession()->checkboxChecked('edit-node-test-enabled');
 
     // We automatically enabled sensible defaults fields according to their type.
-    $this->assertFieldChecked('edit-node-test-fields-title');
-    $this->assertFieldChecked('edit-node-test-fields-body');
-    $this->assertNoFieldChecked('edit-node-test-fields-uid');
+    $this->assertSession()->checkboxChecked('edit-node-test-fields-title');
+    $this->assertSession()->checkboxChecked('edit-node-test-fields-body');
+    $this->assertSession()->checkboxNotChecked('edit-node-test-fields-uid');
   }
 
   /**
@@ -470,13 +471,14 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'language_configuration[content_translation]' => FALSE,
       'language_configuration[content_translation_for_lingotek]' => FALSE,
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article', $edit, t('Save content type'));
+    $this->drupalGet('admin/structure/types/manage/article');
+    $this->submitForm($edit, t('Save content type'));
 
     // Check the form contains the article type and only its text-based fields.
     $this->drupalGet('admin/structure/types/manage/article');
 
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertText('There are no translatable content entities specified');
+    $this->assertSession()->pageTextContains('There are no translatable content entities specified');
 
     // It should result that the field is enabled in Lingotek.
     $edit = [
@@ -484,19 +486,20 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'language_configuration[content_translation]' => TRUE,
       'language_configuration[content_translation_for_lingotek]' => TRUE,
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article', $edit, t('Save content type'));
+    $this->drupalGet('admin/structure/types/manage/article');
+    $this->submitForm($edit, t('Save content type'));
     $this->applyEntityUpdates();
 
     // Check the form contains the article type and only its text-based fields.
     $this->drupalGet('admin/structure/types/manage/article');
 
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertFieldChecked('edit-node-article-enabled');
+    $this->assertSession()->checkboxChecked('edit-node-article-enabled');
 
     // We automatically enabled sensible defaults fields according to their type.
-    $this->assertFieldChecked('edit-node-article-fields-title');
-    $this->assertFieldChecked('edit-node-article-fields-body');
-    $this->assertNoFieldChecked('edit-node-article-fields-uid');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-title');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-uid');
   }
 
   /**
@@ -523,7 +526,7 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
     $this->drupalGet('admin/lingotek/settings');
 
     // Check the form contains the fields but they are disabled.
-    $this->assertNoFieldChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-body');
 
     // Check body field.
     $edit = [
@@ -531,28 +534,28 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'node[article][profiles]' => 'automatic',
       'node[article][fields][body]' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
-    $this->assertFieldChecked('edit-node-article-fields-body');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-body');
 
     $this->drupalGet('/admin/config/regional/config-translation/node_fields');
     $this->clickLink(t('Translate'), 0);
     $this->clickLink('Edit');
 
-    $this->assertFieldChecked('edit-translatable-for-lingotek');
+    $this->assertSession()->checkboxChecked('edit-translatable-for-lingotek');
     // There are no properties to show.
-    $this->assertNoRaw('Lingotek translation');
+    $this->assertSession()->responseNotContains('Lingotek translation');
 
     $edit = [
       'translatable_for_lingotek' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save settings');
+    $this->submitForm($edit, 'Save settings');
     $this->clickLink('Edit');
 
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek');
 
     $this->drupalGet('/admin/lingotek/settings');
 
-    $this->assertNoFieldChecked("edit-node-article-fields-body");
+    $this->assertSession()->checkboxNotChecked("edit-node-article-fields-body");
 
     $this->drupalGet('/admin/config/regional/config-translation/node_fields');
     $this->clickLink(t('Translate'), 0);
@@ -561,13 +564,13 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
     $edit = [
       'translatable_for_lingotek' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save settings');
+    $this->submitForm($edit, 'Save settings');
     $this->clickLink('Edit');
 
-    $this->assertFieldChecked('edit-translatable-for-lingotek');
+    $this->assertSession()->checkboxChecked('edit-translatable-for-lingotek');
 
     $this->drupalGet('/admin/lingotek/settings');
-    $this->assertFieldChecked("edit-node-article-fields-body");
+    $this->assertSession()->checkboxChecked("edit-node-article-fields-body");
   }
 
   /**
@@ -594,9 +597,9 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
     $this->drupalGet('admin/lingotek/settings');
 
     // Check the form contains the fields but they are disabled.
-    $this->assertNoFieldChecked('edit-node-article-fields-body');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-image');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-image');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
 
     // Check image and alt subfield.
     $edit = [
@@ -607,62 +610,62 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'node[article][fields][field_image]' => 1,
       'node[article][fields][field_image:properties][alt]' => 'alt',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
-    $this->assertFieldChecked('edit-node-article-fields-body');
-    $this->assertFieldChecked('edit-node-article-fields-field-image');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-file');
-    $this->assertFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-image');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-file');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
 
     // Submit again unchecking image including subfields.
     $edit = [
       'node[article][fields][field_image]' => FALSE,
       'node[article][fields][field_image:properties][alt]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
     // Those checkboxes should not be checked anymore.
-    $this->assertFieldChecked('edit-node-article-fields-body');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-image');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-file');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-body');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-image');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-file');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
 
     $this->drupalGet('/admin/config/regional/config-translation/node_fields');
     $this->clickLink(t('Translate'), 1);
     $this->clickLink('Edit');
 
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek');
-    $this->assertNoFieldChecked('edit-third-party-settings-content-translation-translation-sync-file');
-    $this->assertFieldChecked('edit-third-party-settings-content-translation-translation-sync-alt');
-    $this->assertFieldChecked('edit-third-party-settings-content-translation-translation-sync-title');
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek-properties-file');
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek-properties-alt');
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek-properties-title');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek');
+    $this->assertSession()->checkboxNotChecked('edit-third-party-settings-content-translation-translation-sync-file');
+    $this->assertSession()->checkboxChecked('edit-third-party-settings-content-translation-translation-sync-alt');
+    $this->assertSession()->checkboxChecked('edit-third-party-settings-content-translation-translation-sync-title');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek-properties-file');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek-properties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek-properties-title');
 
     $edit = [
       'translatable_for_lingotek' => 1,
       'third_party_settings[content_translation][translation_sync][alt]' => 'alt',
       'translatable_for_lingotek_properties_alt' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save settings');
+    $this->submitForm($edit, 'Save settings');
     $this->clickLink('Edit');
 
-    $this->assertFieldChecked('edit-translatable-for-lingotek');
-    $this->assertNoFieldChecked('edit-third-party-settings-content-translation-translation-sync-file');
-    $this->assertFieldChecked('edit-third-party-settings-content-translation-translation-sync-alt');
-    $this->assertFieldChecked('edit-third-party-settings-content-translation-translation-sync-title');
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek-properties-file');
-    $this->assertFieldChecked('edit-translatable-for-lingotek-properties-alt');
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek-properties-title');
+    $this->assertSession()->checkboxChecked('edit-translatable-for-lingotek');
+    $this->assertSession()->checkboxNotChecked('edit-third-party-settings-content-translation-translation-sync-file');
+    $this->assertSession()->checkboxChecked('edit-third-party-settings-content-translation-translation-sync-alt');
+    $this->assertSession()->checkboxChecked('edit-third-party-settings-content-translation-translation-sync-title');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek-properties-file');
+    $this->assertSession()->checkboxChecked('edit-translatable-for-lingotek-properties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek-properties-title');
 
     $this->drupalGet('/admin/lingotek/settings');
 
-    $this->assertFieldChecked("edit-node-article-fields-field-image");
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-file');
-    $this->assertFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxChecked("edit-node-article-fields-field-image");
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-file');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
 
     $edit = [
       'node[article][fields][field_image]' => 1,
@@ -670,11 +673,11 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'node[article][fields][field_image:properties][alt]' => FALSE,
       'node[article][fields][field_image:properties][title]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-file');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-file');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
 
     $this->drupalGet('/admin/config/regional/config-translation/node_fields');
     $this->clickLink(t('Translate'), 1);
@@ -689,23 +692,23 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'translatable_for_lingotek_properties_title' => 1,
       'translatable_for_lingotek_properties_file' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save settings');
+    $this->submitForm($edit, 'Save settings');
     $this->clickLink('Edit');
 
-    $this->assertFieldChecked('edit-translatable-for-lingotek');
-    $this->assertFieldChecked('edit-third-party-settings-content-translation-translation-sync-file');
-    $this->assertFieldChecked('edit-third-party-settings-content-translation-translation-sync-alt');
-    $this->assertFieldChecked('edit-third-party-settings-content-translation-translation-sync-title');
-    $this->assertFieldChecked('edit-translatable-for-lingotek-properties-file');
-    $this->assertFieldChecked('edit-translatable-for-lingotek-properties-alt');
-    $this->assertFieldChecked('edit-translatable-for-lingotek-properties-title');
+    $this->assertSession()->checkboxChecked('edit-translatable-for-lingotek');
+    $this->assertSession()->checkboxChecked('edit-third-party-settings-content-translation-translation-sync-file');
+    $this->assertSession()->checkboxChecked('edit-third-party-settings-content-translation-translation-sync-alt');
+    $this->assertSession()->checkboxChecked('edit-third-party-settings-content-translation-translation-sync-title');
+    $this->assertSession()->checkboxChecked('edit-translatable-for-lingotek-properties-file');
+    $this->assertSession()->checkboxChecked('edit-translatable-for-lingotek-properties-alt');
+    $this->assertSession()->checkboxChecked('edit-translatable-for-lingotek-properties-title');
 
     $this->drupalGet('/admin/lingotek/settings');
 
-    $this->assertFieldChecked("edit-node-article-fields-field-image");
-    $this->assertFieldChecked('edit-node-article-fields-field-imageproperties-file');
-    $this->assertFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertFieldChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxChecked("edit-node-article-fields-field-image");
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-imageproperties-file');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxChecked('edit-node-article-fields-field-imageproperties-title');
 
     $edit = [
       'node[article][fields][field_image]' => 1,
@@ -713,12 +716,12 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'node[article][fields][field_image:properties][alt]' => FALSE,
       'node[article][fields][field_image:properties][title]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
-    $this->assertFieldChecked("edit-node-article-fields-field-image");
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-file');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxChecked("edit-node-article-fields-field-image");
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-file');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
 
     $this->drupalGet('/admin/config/regional/config-translation/node_fields');
     $this->clickLink(t('Translate'), 1);
@@ -733,23 +736,23 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'translatable_for_lingotek_properties_title' => 1,
       'translatable_for_lingotek_properties_file' => 1,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save settings');
+    $this->submitForm($edit, 'Save settings');
     $this->clickLink('Edit');
 
-    $this->assertFieldChecked('edit-translatable-for-lingotek');
-    $this->assertNoFieldChecked('edit-third-party-settings-content-translation-translation-sync-file');
-    $this->assertNoFieldChecked('edit-third-party-settings-content-translation-translation-sync-alt');
-    $this->assertNoFieldChecked('edit-third-party-settings-content-translation-translation-sync-title');
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek-properties-file');
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek-properties-alt');
-    $this->assertNoFieldChecked('edit-translatable-for-lingotek-properties-title');
+    $this->assertSession()->checkboxChecked('edit-translatable-for-lingotek');
+    $this->assertSession()->checkboxNotChecked('edit-third-party-settings-content-translation-translation-sync-file');
+    $this->assertSession()->checkboxNotChecked('edit-third-party-settings-content-translation-translation-sync-alt');
+    $this->assertSession()->checkboxNotChecked('edit-third-party-settings-content-translation-translation-sync-title');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek-properties-file');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek-properties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-translatable-for-lingotek-properties-title');
 
     $this->drupalGet('/admin/lingotek/settings');
 
-    $this->assertFieldChecked("edit-node-article-fields-field-image");
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-file');
+    $this->assertSession()->checkboxChecked("edit-node-article-fields-field-image");
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-file');
 
     $edit = [
       'node[article][fields][field_image]' => 1,
@@ -757,11 +760,11 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
       'node[article][fields][field_image:properties][title]' => FALSE,
       'node[article][fields][field_image:properties][file]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-alt');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-title');
-    $this->assertNoFieldChecked('edit-node-article-fields-field-imageproperties-file');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-alt');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-title');
+    $this->assertSession()->checkboxNotChecked('edit-node-article-fields-field-imageproperties-file');
   }
 
   public function testContentTypesAreNotDisabledIfThereAreLotsOfContentTypes() {
@@ -813,16 +816,16 @@ class LingotekSettingsTabContentFormTest extends LingotekTestBase {
 
     // Check the form contains the fields, and have the proper values,
     // but they are disabled.
-    $this->assertFieldChecked('edit-node-article-readonly-enabled');
-    $this->assertFieldByName('node[article][profiles]', 'automatic');
+    $this->assertSession()->checkboxChecked('edit-node-article-readonly-enabled');
+    $this->assertSession()->fieldValueEquals('node[article][profiles]', 'automatic');
 
     $edit = ['node[article][profiles]' => 'manual'];
-    $this->drupalPostForm(NULL, $edit, 'Save', [], 'lingoteksettings-tab-content-form');
+    $this->submitForm($edit, 'Save', 'lingoteksettings-tab-content-form');
 
     // Check the form contains the fields, and have the proper values,
     // but they are disabled.
-    $this->assertFieldChecked('edit-node-article-readonly-enabled');
-    $this->assertFieldByName('node[article][profiles]', 'manual');
+    $this->assertSession()->checkboxChecked('edit-node-article-readonly-enabled');
+    $this->assertSession()->fieldValueEquals('node[article][profiles]', 'manual');
   }
 
 }
diff --git a/tests/src/Functional/Form/LingotekSettingsTabIntegrationFormTest.php b/tests/src/Functional/Form/LingotekSettingsTabIntegrationFormTest.php
index 0167d445..8804cc6c 100644
--- a/tests/src/Functional/Form/LingotekSettingsTabIntegrationFormTest.php
+++ b/tests/src/Functional/Form/LingotekSettingsTabIntegrationFormTest.php
@@ -26,7 +26,7 @@ class LingotekSettingsTabIntegrationFormTest extends LingotekTestBase {
    */
   public function testTabNotShownIfThereAreNoSettings() {
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertNoText('Integrations Settings');
+    $this->assertSession()->pageTextNotContains('Integrations Settings');
   }
 
 }
diff --git a/tests/src/Functional/Form/LingotekSettingsTabIntelligenceMetadataFormTest.php b/tests/src/Functional/Form/LingotekSettingsTabIntelligenceMetadataFormTest.php
index 6b1ad43b..be461508 100644
--- a/tests/src/Functional/Form/LingotekSettingsTabIntelligenceMetadataFormTest.php
+++ b/tests/src/Functional/Form/LingotekSettingsTabIntelligenceMetadataFormTest.php
@@ -19,8 +19,7 @@ class LingotekSettingsTabIntelligenceMetadataFormTest extends LingotekTestBase {
   public function testIntelligenceMetadataIsSaved() {
     $this->drupalGet('admin/lingotek/settings');
 
-    $this->assertRaw('<summary role="button" aria-controls="edit-intelligence-metadata" aria-expanded="false" aria-pressed="false">Lingotek Intelligence Metadata</summary>',
-      'Lingotek Intelligence Metadata tab is present.');
+    $this->assertSession()->responseContains('<summary role="button" aria-controls="edit-intelligence-metadata" aria-expanded="false" aria-pressed="false">Lingotek Intelligence Metadata</summary>');
 
     // Assert defaults are correct.
     $this->assertIntelligenceFieldDefaults();
@@ -59,22 +58,22 @@ class LingotekSettingsTabIntelligenceMetadataFormTest extends LingotekTestBase {
     ];
     $this->submitForm($edit, 'Save Lingotek Intelligence Metadata', 'lingotekintelligence-metadata-form');
 
-    $this->assertText('Lingotek Intelligence Metadata saved correctly.');
+    $this->assertSession()->pageTextContains('Lingotek Intelligence Metadata saved correctly.');
 
     // The values shown are correct.
-    $this->assertNoFieldChecked('edit-intelligence-metadata-use-contact-email-for-author');
-    $this->assertFieldByName('intelligence_metadata[default_author_email]', 'test@example.com');
-    $this->assertFieldByName('intelligence_metadata[business_unit]', 'Test Business Unit');
-    $this->assertFieldByName('intelligence_metadata[business_division]', 'Test Business Division');
-    $this->assertFieldByName('intelligence_metadata[campaign_id]', 'Campaign ID');
-    $this->assertFieldByName('intelligence_metadata[campaign_rating]', 5);
-    $this->assertFieldByName('intelligence_metadata[channel]', 'Channel Test');
-    $this->assertFieldByName('intelligence_metadata[contact_name]', 'Test Contact Name');
-    $this->assertFieldByName('intelligence_metadata[contact_email]', 'contact@example.com');
-    $this->assertFieldByName('intelligence_metadata[content_description]', 'Content description');
-    $this->assertFieldByName('intelligence_metadata[external_style_id]', 'my-style-id');
-    $this->assertFieldByName('intelligence_metadata[purchase_order]', 'PO32');
-    $this->assertFieldByName('intelligence_metadata[region]', 'region2');
+    $this->assertSession()->checkboxNotChecked('edit-intelligence-metadata-use-contact-email-for-author');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[default_author_email]', 'test@example.com');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[business_unit]', 'Test Business Unit');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[business_division]', 'Test Business Division');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[campaign_id]', 'Campaign ID');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[campaign_rating]', 5);
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[channel]', 'Channel Test');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[contact_name]', 'Test Contact Name');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[contact_email]', 'contact@example.com');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[content_description]', 'Content description');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[external_style_id]', 'my-style-id');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[purchase_order]', 'PO32');
+    $this->assertSession()->fieldValueEquals('intelligence_metadata[region]', 'region2');
 
     /** @var \Drupal\lingotek\LingotekIntelligenceMetadataInterface $intelligence */
     $intelligence = \Drupal::service('lingotek.intelligence');
@@ -95,18 +94,18 @@ class LingotekSettingsTabIntelligenceMetadataFormTest extends LingotekTestBase {
     $this->assertTrue($intelligence->getBaseDomainPermission());
     $this->assertTrue($intelligence->getReferenceUrlPermission());
 
-    $this->assertIdentical($intelligence->getDefaultAuthorEmail(), 'test@example.com');
-    $this->assertIdentical($intelligence->getBusinessUnit(), 'Test Business Unit');
-    $this->assertIdentical($intelligence->getBusinessDivision(), 'Test Business Division');
-    $this->assertIdentical($intelligence->getCampaignId(), 'Campaign ID');
-    $this->assertIdentical($intelligence->getCampaignRating(), 5);
-    $this->assertIdentical($intelligence->getChannel(), 'Channel Test');
-    $this->assertIdentical($intelligence->getContactName(), 'Test Contact Name');
-    $this->assertIdentical($intelligence->getContactEmail(), 'contact@example.com');
-    $this->assertIdentical($intelligence->getContentDescription(), 'Content description');
-    $this->assertIdentical($intelligence->getExternalStyleId(), 'my-style-id');
-    $this->assertIdentical($intelligence->getPurchaseOrder(), 'PO32');
-    $this->assertIdentical($intelligence->getRegion(), 'region2');
+    $this->assertSame($intelligence->getDefaultAuthorEmail(), 'test@example.com');
+    $this->assertSame($intelligence->getBusinessUnit(), 'Test Business Unit');
+    $this->assertSame($intelligence->getBusinessDivision(), 'Test Business Division');
+    $this->assertSame($intelligence->getCampaignId(), 'Campaign ID');
+    $this->assertSame($intelligence->getCampaignRating(), 5);
+    $this->assertSame($intelligence->getChannel(), 'Channel Test');
+    $this->assertSame($intelligence->getContactName(), 'Test Contact Name');
+    $this->assertSame($intelligence->getContactEmail(), 'contact@example.com');
+    $this->assertSame($intelligence->getContentDescription(), 'Content description');
+    $this->assertSame($intelligence->getExternalStyleId(), 'my-style-id');
+    $this->assertSame($intelligence->getPurchaseOrder(), 'PO32');
+    $this->assertSame($intelligence->getRegion(), 'region2');
   }
 
 }
diff --git a/tests/src/Functional/Form/LingotekSettingsTabParagraphsIntegrationFormTest.php b/tests/src/Functional/Form/LingotekSettingsTabParagraphsIntegrationFormTest.php
index 1850a6c5..add613c5 100644
--- a/tests/src/Functional/Form/LingotekSettingsTabParagraphsIntegrationFormTest.php
+++ b/tests/src/Functional/Form/LingotekSettingsTabParagraphsIntegrationFormTest.php
@@ -113,9 +113,9 @@ class LingotekSettingsTabParagraphsIntegrationFormTest extends LingotekTestBase
    */
   public function testTabShownIfThereAreSettings() {
     $this->drupalGet('admin/lingotek/settings');
-    $this->assertText('Integrations Settings');
-    $this->assertText('Paragraphs');
-    $this->assertText('Enable paragraphs to be managed individually instead of embedded in their parent entity.');
+    $this->assertSession()->pageTextContains('Integrations Settings');
+    $this->assertSession()->pageTextContains('Paragraphs');
+    $this->assertSession()->pageTextContains('Enable paragraphs to be managed individually instead of embedded in their parent entity.');
   }
 
   /**
@@ -137,16 +137,16 @@ class LingotekSettingsTabParagraphsIntegrationFormTest extends LingotekTestBase
     // Activate the settings tab.
     $this->drupalGet('admin/lingotek/settings');
     $edit = ['contrib[paragraphs][enable_bulk_management]' => 1];
-    $this->drupalPostForm(NULL, $edit, 'Save settings', [], 'lingoteksettings-integrations-form');
-    $this->assertText('The configuration options have been saved.');
+    $this->submitForm($edit, 'Save settings', 'lingoteksettings-integrations-form');
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     // Now the tab is active.
     $this->goToContentBulkManagementForm();
     $assert_session->linkExists('Paragraph');
 
     $this->clickLink('Paragraph');
-    $this->assertText('Manage Translations');
-    $this->assertText('No content available');
+    $this->assertSession()->pageTextContains('Manage Translations');
+    $this->assertSession()->pageTextContains('No content available');
   }
 
   /**
@@ -161,8 +161,8 @@ class LingotekSettingsTabParagraphsIntegrationFormTest extends LingotekTestBase
     // Disable the settings tab.
     $this->drupalGet('admin/lingotek/settings');
     $edit = ['contrib[paragraphs][enable_bulk_management]' => FALSE];
-    $this->drupalPostForm(NULL, $edit, 'Save settings', [], 'lingoteksettings-integrations-form');
-    $this->assertText('The configuration options have been saved.');
+    $this->submitForm($edit, 'Save settings', 'lingoteksettings-integrations-form');
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     // Now the tab is not shown.
     $this->goToContentBulkManagementForm();
@@ -208,14 +208,14 @@ class LingotekSettingsTabParagraphsIntegrationFormTest extends LingotekTestBase
 
     $this->drupalGet('admin/lingotek/settings');
 
-    $this->assertNoFieldByName('paragraph[image_text][profiles]', NULL, 'The profile is not selectable for paragraphs by default.');
+    $this->assertSession()->fieldNotExists('paragraph[image_text][profiles]');
 
     $edit = ['contrib[paragraphs][enable_bulk_management]' => 1];
-    $this->drupalPostForm(NULL, $edit, 'Save settings', [], 'lingoteksettings-integrations-form');
-    $this->assertText('The configuration options have been saved.');
+    $this->submitForm($edit, 'Save settings', 'lingoteksettings-integrations-form');
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
-    $this->assertFieldByName('paragraph[image_text][profiles]', NULL, 'The profile can be assigned to a paragraph if they are managed individually.');
-    $this->assertFieldByName('paragraph[image_text][profiles]', Lingotek::PROFILE_DISABLED, 'The default profile is disabled for paragraphs if they are managed individually.');
+    $this->assertSession()->fieldExists('paragraph[image_text][profiles]');
+    $this->assertSession()->fieldValueEquals('paragraph[image_text][profiles]', Lingotek::PROFILE_DISABLED);
   }
 
 }
diff --git a/tests/src/Functional/Form/LingotekSettingsTabUtilitiesFormTest.php b/tests/src/Functional/Form/LingotekSettingsTabUtilitiesFormTest.php
index ee23508e..ffad3cab 100644
--- a/tests/src/Functional/Form/LingotekSettingsTabUtilitiesFormTest.php
+++ b/tests/src/Functional/Form/LingotekSettingsTabUtilitiesFormTest.php
@@ -36,7 +36,7 @@ class LingotekSettingsTabUtilitiesFormTest extends LingotekTestBase {
 
     // Activate the settings tab.
     $this->drupalGet('admin/lingotek/settings');
-    $this->drupalPostForm(NULL, [], 'Refresh', [], 'lingoteksettings-tab-utilities-form');
+    $this->submitForm([], 'Refresh', 'lingoteksettings-tab-utilities-form');
     $assert_session->responseContains('Project, workflow, vault, and filter information have been refreshed.');
 
     $config = \Drupal::configFactory()->getEditable('lingotek.settings');
diff --git a/tests/src/Functional/LingotekAccountTest.php b/tests/src/Functional/LingotekAccountTest.php
index 7fa227de..8d8c05c1 100644
--- a/tests/src/Functional/LingotekAccountTest.php
+++ b/tests/src/Functional/LingotekAccountTest.php
@@ -37,19 +37,19 @@ class LingotekAccountTest extends BrowserTestBase {
     $this->clickLink('Connect Lingotek Account');
     // Our fake backend generates a token, returns to the site, completes the
     // handshake and return some fake data.
-    $this->assertText('Your account settings have been saved.');
+    $this->assertSession()->pageTextContains('Your account settings have been saved.');
     // Then we can select the defaults for the different fields.
-    $this->drupalPostForm(NULL, ['community' => 'test_community'], 'Next');
-    $this->assertText('The configuration options have been saved.');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm(['community' => 'test_community'], 'Next');
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
+    $this->submitForm([
       'project' => 'test_project',
       'vault' => 'test_vault',
       'workflow' => 'test_workflow',
     ], 'Save configuration');
-    $this->assertText('The configuration options have been saved.');
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
     // We are done with the defaults, we should be redirected to the dashboard.
-    $this->assertText('Dashboard');
-    $this->assertUrl('admin/lingotek');
+    $this->assertSession()->pageTextContains('Dashboard');
+    $this->assertSession()->addressEquals('admin/lingotek');
   }
 
   /**
@@ -63,7 +63,7 @@ class LingotekAccountTest extends BrowserTestBase {
 
     // Try to navigate to the Dashboard page, and assert we are redirected.
     $this->drupalGet('admin/lingotek');
-    $this->assertUrl('admin/lingotek/setup/account');
+    $this->assertSession()->addressEquals('admin/lingotek/setup/account');
     $assert_session->linkExists('Connect Lingotek Account');
   }
 
@@ -99,7 +99,7 @@ class LingotekAccountTest extends BrowserTestBase {
     // This will simulate a "cancel" click, so we need to ensure we are back
     // at the same page. We cannot test that we will be redirected, as it's done
     // via js. There is no way on the server to know the hash part of the url.
-    $this->assertUrl('/admin/lingotek/setup/account');
+    $this->assertSession()->addressEquals('/admin/lingotek/setup/account');
   }
 
 }
diff --git a/tests/src/Functional/LingotekConfigTranslationEditedToPendingTest.php b/tests/src/Functional/LingotekConfigTranslationEditedToPendingTest.php
index e0070df4..5543cabe 100644
--- a/tests/src/Functional/LingotekConfigTranslationEditedToPendingTest.php
+++ b/tests/src/Functional/LingotekConfigTranslationEditedToPendingTest.php
@@ -65,8 +65,8 @@ class LingotekConfigTranslationEditedToPendingTest extends LingotekTestBase {
       'table[system.site_information_settings]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('config'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // There is a link for checking status.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/check_upload/system.site_information_settings/system.site_information_settings?destination=' . $basepath . '/admin/lingotek/config/manage');
@@ -77,26 +77,26 @@ class LingotekConfigTranslationEditedToPendingTest extends LingotekTestBase {
       'table[system.site_information_settings]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckUpload('config'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // Request the Spanish translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/request/system.site_information_settings/system.site_information_settings/es_MX?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('ES');
-    $this->assertText('Translation to es_MX requested successfully');
-    $this->assertIdentical('es_MX', \Drupal::state()->get('lingotek.added_target_locale'));
+    $this->assertSession()->pageTextContains('Translation to es_MX requested successfully');
+    $this->assertSame('es_MX', \Drupal::state()->get('lingotek.added_target_locale'));
 
     // Check status of the Spanish translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/check_download/system.site_information_settings/system.site_information_settings/es_MX?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('ES');
-    $this->assertIdentical('es_MX', \Drupal::state()->get('lingotek.checked_target_locale'));
-    $this->assertText('Translation to es_MX checked successfully');
+    $this->assertSame('es_MX', \Drupal::state()->get('lingotek.checked_target_locale'));
+    $this->assertSession()->pageTextContains('Translation to es_MX checked successfully');
 
     // Download the Spanish translation.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/download/system.site_information_settings/system.site_information_settings/es_MX?destination=' . $basepath . '/admin/lingotek/config/manage');
     $this->clickLink('ES');
-    $this->assertIdentical('es_MX', \Drupal::state()->get('lingotek.checked_target_locale'));
-    $this->assertText('Translation to es_MX downloaded successfully');
+    $this->assertSame('es_MX', \Drupal::state()->get('lingotek.checked_target_locale'));
+    $this->assertSession()->pageTextContains('Translation to es_MX downloaded successfully');
 
     // Edit the object
     $config2 = \Drupal::service('config.factory')->getEditable('system.site');
@@ -121,8 +121,8 @@ class LingotekConfigTranslationEditedToPendingTest extends LingotekTestBase {
       'table[system.site_information_settings]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('config'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // There is a link for checking status.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/check_upload/system.site_information_settings/system.site_information_settings?destination=' . $basepath . '/admin/lingotek/config/manage');
@@ -130,8 +130,8 @@ class LingotekConfigTranslationEditedToPendingTest extends LingotekTestBase {
       'table[system.site_information_settings]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckUpload('config'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // Check the status is pending for Spanish.
     $this->assertTargetStatus('ES', Lingotek::STATUS_PENDING);
diff --git a/tests/src/Functional/LingotekConfigTranslationPreSaveHookTest.php b/tests/src/Functional/LingotekConfigTranslationPreSaveHookTest.php
index b17b78b1..d5bbef94 100644
--- a/tests/src/Functional/LingotekConfigTranslationPreSaveHookTest.php
+++ b/tests/src/Functional/LingotekConfigTranslationPreSaveHookTest.php
@@ -54,7 +54,7 @@ class LingotekConfigTranslationPreSaveHookTest extends LingotekTestBase {
     // @see lingotek_test_lingotek_config_entity_document_upload()
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->verbose(var_export($data, TRUE));
-    $this->assertEqual($data['settings.label'], 'Title with [***SITE:NAME***]');
+    $this->assertEquals($data['settings.label'], 'Title with [***SITE:NAME***]');
 
     // Translate the block using the Lingotek translate config admin form.
     $this->drupalGet("admin/structure/block/manage/$block_id/translate");
@@ -67,10 +67,10 @@ class LingotekConfigTranslationPreSaveHookTest extends LingotekTestBase {
     // Check that [token] is decoded via hook_lingotek_config_entity_translation_presave().
     // @see lingotek_test_lingotek_config_entity_translation_presave()
     $this->drupalGet("admin/structure/block/manage/$block_id/translate/es/edit");
-    $this->assertFieldByName("translation[config_names][block.block.$block_id][settings][label]", 'Título con [site:name]');
+    $this->assertSession()->fieldValueEquals("translation[config_names][block.block.$block_id][settings][label]", 'Título con [site:name]');
 
     $this->drupalGet('es/user');
-    $this->assertText('Título con [site:name]');
+    $this->assertSession()->pageTextContains('Título con [site:name]');
   }
 
 }
diff --git a/tests/src/Functional/LingotekContactMessageBodyTranslationTest.php b/tests/src/Functional/LingotekContactMessageBodyTranslationTest.php
index ae15e175..c00f8c29 100644
--- a/tests/src/Functional/LingotekContactMessageBodyTranslationTest.php
+++ b/tests/src/Functional/LingotekContactMessageBodyTranslationTest.php
@@ -74,7 +74,7 @@ class LingotekContactMessageBodyTranslationTest extends LingotekTestBase {
     $this->clickLink(t('Translate'));
 
     $this->clickLink(t('Upload'));
-    $this->assertText(t('field_test uploaded successfully'));
+    $this->assertSession()->pageTextContains(t('field_test uploaded successfully'));
 
     // Check that only the translatable fields have been uploaded.
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
@@ -84,20 +84,20 @@ class LingotekContactMessageBodyTranslationTest extends LingotekTestBase {
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     $this->clickLink(t('Check upload status'));
-    $this->assertText('field_test status checked successfully');
+    $this->assertSession()->pageTextContains('field_test status checked successfully');
 
     $this->clickLink(t('Request translation'));
-    $this->assertText(t('Translation to es_MX requested successfully'));
-    $this->assertIdentical('es_MX', \Drupal::state()->get('lingotek.added_target_locale'));
+    $this->assertSession()->pageTextContains(t('Translation to es_MX requested successfully'));
+    $this->assertSame('es_MX', \Drupal::state()->get('lingotek.added_target_locale'));
 
     $this->clickLink(t('Check Download'));
-    $this->assertText(t('Translation to es_MX status checked successfully'));
+    $this->assertSession()->pageTextContains(t('Translation to es_MX status checked successfully'));
 
     $this->clickLink('Download');
-    $this->assertText(t('Translation to es_MX downloaded successfully'));
+    $this->assertSession()->pageTextContains(t('Translation to es_MX downloaded successfully'));
 
     // Check that the edit link is there.
     $basepath = \Drupal::request()->getBasePath();
diff --git a/tests/src/Functional/LingotekContentEntityGetProfileHookTest.php b/tests/src/Functional/LingotekContentEntityGetProfileHookTest.php
index e8a2f4b3..cb8fb21d 100644
--- a/tests/src/Functional/LingotekContentEntityGetProfileHookTest.php
+++ b/tests/src/Functional/LingotekContentEntityGetProfileHookTest.php
@@ -140,7 +140,7 @@ class LingotekContentEntityGetProfileHookTest extends LingotekTestBase {
     $edit = [];
     $edit['subject[0][value]'] = 'Group 1 test';
     $edit['comment_body[0][value]'] = 'Group 1 test body';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
 
     // Check that the configured fields have been uploaded, but also the one
     // added via the hook.
@@ -161,7 +161,7 @@ class LingotekContentEntityGetProfileHookTest extends LingotekTestBase {
     $edit = [];
     $edit['subject[0][value]'] = 'Group 2 test';
     $edit['comment_body[0][value]'] = 'Group 2 test body';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
 
     // Check that the configured fields have been uploaded, but also the one
     // added via the hook.
@@ -186,7 +186,7 @@ class LingotekContentEntityGetProfileHookTest extends LingotekTestBase {
     $edit = [];
     $edit['subject[0][value]'] = 'First test';
     $edit['comment_body[0][value]'] = 'First test body';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
 
     $this->saveLingotekContentTranslationSettings([
       'node' => [
@@ -216,7 +216,7 @@ class LingotekContentEntityGetProfileHookTest extends LingotekTestBase {
     $edit = [];
     $edit['subject[0][value]'] = 'Second test';
     $edit['comment_body[0][value]'] = 'Second test body';
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
 
     $this->goToContentBulkManagementForm('comment');
   }
diff --git a/tests/src/Functional/LingotekContentModerationSettingsTest.php b/tests/src/Functional/LingotekContentModerationSettingsTest.php
index f4a0219d..4fc743ae 100644
--- a/tests/src/Functional/LingotekContentModerationSettingsTest.php
+++ b/tests/src/Functional/LingotekContentModerationSettingsTest.php
@@ -77,8 +77,7 @@ class LingotekContentModerationSettingsTest extends LingotekTestBase {
 
     $this->drupalGet('admin/lingotek/settings');
 
-    $this->assertNoField('content_moderation_state[content_moderation_state][enabled]',
-      'The content moderation state entity should not be available for Lingotek translation.');
+    $this->assertSession()->fieldNotExists('content_moderation_state[content_moderation_state][enabled]', 'The content moderation state entity should not be available for Lingotek translation.');
 
     // See content_moderation_entity_bundle_info_alter().
     $this->enableModerationThroughUI('article', ['draft', 'needs_review', 'published'], 'draft');
@@ -86,8 +85,7 @@ class LingotekContentModerationSettingsTest extends LingotekTestBase {
 
     $this->drupalGet('admin/lingotek/settings');
 
-    $this->assertNoField('content_moderation_state[content_moderation_state][enabled]',
-      'The content moderation state entity should not be available for Lingotek translation.');
+    $this->assertSession()->fieldNotExists('content_moderation_state[content_moderation_state][enabled]', 'The content moderation state entity should not be available for Lingotek translation.');
   }
 
   /**
@@ -100,18 +98,14 @@ class LingotekContentModerationSettingsTest extends LingotekTestBase {
 
     // We don't have any fields for configuring content moderation until it's
     // enabled.
-    $this->assertNoField('node[article][moderation][upload_status]',
-      'The field for setting the state when a content should be uploaded does not exist as content moderation is not enabled for this bundle.');
-    $this->assertNoField('node[article][moderation][download_transition]',
-      'The field for setting the transition that must happen after download does not exist as content moderation is not enabled for this bundle.');
+    $this->assertSession()->fieldNotExists('node[article][moderation][upload_status]', 'The field for setting the state when a content should be uploaded does not exist as content moderation is not enabled for this bundle.');
+    $this->assertSession()->fieldNotExists('node[article][moderation][download_transition]', 'The field for setting the transition that must happen after download does not exist as content moderation is not enabled for this bundle.');
 
-    $this->assertNoField('node[page][moderation][upload_status]',
-      'The field for setting the state when a content should be uploaded does not exist as content moderation is not enabled for this bundle.');
-    $this->assertNoField('node[page][moderation][download_transition]',
-      'The field for setting the transition that must happen after download does not exist as content moderation is not enabled for this bundle.');
+    $this->assertSession()->fieldNotExists('node[page][moderation][upload_status]', 'The field for setting the state when a content should be uploaded does not exist as content moderation is not enabled for this bundle.');
+    $this->assertSession()->fieldNotExists('node[page][moderation][download_transition]', 'The field for setting the transition that must happen after download does not exist as content moderation is not enabled for this bundle.');
 
     // We show a message and link for enabling it.
-    $this->assertText('This entity bundle is not enabled for moderation with content_moderation. You can change its settings here.');
+    $this->assertSession()->pageTextContains('This entity bundle is not enabled for moderation with content_moderation. You can change its settings here.');
 
     $assert_session->linkByHrefExists('/admin/config/workflow/workflows', 0);
     $assert_session->linkByHrefExists('/admin/config/workflow/workflows', 1);
@@ -123,19 +117,15 @@ class LingotekContentModerationSettingsTest extends LingotekTestBase {
 
     // Assert the fields for setting up the integration exist and they have
     // sensible defaults.
-    $this->assertField('node[article][moderation][upload_status]',
-      'The field for setting the state when a content should be uploaded exists.');
-    $this->assertField('node[article][moderation][download_transition]',
-      'The field for setting the transition that must happen after download exists.');
+    $this->assertSession()->fieldExists('node[article][moderation][upload_status]', 'The field for setting the state when a content should be uploaded exists.');
+    $this->assertSession()->fieldExists('node[article][moderation][download_transition]', 'The field for setting the transition that must happen after download exists.');
     $assert_session->optionExists('edit-node-article-moderation-upload-status', 'published');
     $assert_session->optionExists('edit-node-article-moderation-download-transition', 'publish');
 
     // But not for the other content types. There is still a message for configuring.
-    $this->assertNoField('node[page][moderation][upload_status]',
-      'The field for setting the state when a content should be uploaded does not exist as content moderation is not enabled for this bundle.');
-    $this->assertNoField('node[page][moderation][download_transition]',
-      'The field for setting the transition that must happen after download does not exist as content moderation is not enabled for this bundle.');
-    $this->assertText('This entity bundle is not enabled for moderation with content_moderation. You can change its settings here.');
+    $this->assertSession()->fieldNotExists('node[page][moderation][upload_status]', 'The field for setting the state when a content should be uploaded does not exist as content moderation is not enabled for this bundle.');
+    $this->assertSession()->fieldNotExists('node[page][moderation][download_transition]', 'The field for setting the transition that must happen after download does not exist as content moderation is not enabled for this bundle.');
+    $this->assertSession()->pageTextContains('This entity bundle is not enabled for moderation with content_moderation. You can change its settings here.');
 
     $assert_session->linkByHrefExists('/admin/config/workflow/workflows', 0);
 
@@ -160,16 +150,14 @@ class LingotekContentModerationSettingsTest extends LingotekTestBase {
     $assert_session->optionExists('edit-node-article-moderation-download-transition', 'archive');
 
     // It never existed for taxonomies.
-    $this->assertNoField("taxonomy_term[{$this->vocabulary->id()}][moderation][upload_status]",
-      'The field for setting the state when a content should be uploaded does not exist as content moderation is not available for this entity type.');
-    $this->assertNoField("taxonomy_term[{$this->vocabulary->id()}][moderation][download_transition]",
-      'The field for setting the transition that must happen after download does not exist as content moderation is not available for this entity type.');
+    $this->assertSession()->fieldNotExists("taxonomy_term[{$this->vocabulary->id()}][moderation][upload_status]", 'The field for setting the state when a content should be uploaded does not exist as content moderation is not available for this entity type.');
+    $this->assertSession()->fieldNotExists("taxonomy_term[{$this->vocabulary->id()}][moderation][download_transition]", 'The field for setting the transition that must happen after download does not exist as content moderation is not available for this entity type.');
     $assert_session->linkByHrefNotExists("/admin/structure/taxonomy/manage/{$this->vocabulary->id()}/moderation", 'There is no link to moderation settings in taxonomies as they cannot be moderated.');
 
     $header = $this->xpath("//details[@id='edit-entity-node']//th[text()='Content moderation']");
-    $this->assertEqual(count($header), 1, 'There is a content moderation column for content.');
+    $this->assertEquals(count($header), 1, 'There is a content moderation column for content.');
     $header = $this->xpath("//details[@id='edit-entity-taxonomy-term']//th[text()='Content moderation']");
-    $this->assertEqual(count($header), 0, 'There is no content moderation column for taxonomies.');
+    $this->assertEquals(count($header), 0, 'There is no content moderation column for taxonomies.');
 
   }
 
@@ -181,9 +169,9 @@ class LingotekContentModerationSettingsTest extends LingotekTestBase {
    */
   protected function enableModerationThroughUI($content_type_id) {
     $this->drupalGet('/admin/config/workflow/workflows/manage/editorial/type/node');
-    $this->assertFieldByName("bundles[$content_type_id]");
+    $this->assertSession()->fieldExists("bundles[$content_type_id]");
     $edit["bundles[$content_type_id]"] = TRUE;
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
   }
 
 }
diff --git a/tests/src/Functional/LingotekContentModerationTest.php b/tests/src/Functional/LingotekContentModerationTest.php
index c1a0e6e4..374ade71 100644
--- a/tests/src/Functional/LingotekContentModerationTest.php
+++ b/tests/src/Functional/LingotekContentModerationTest.php
@@ -101,8 +101,8 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'automatic';
     $this->saveAsRequestReviewNodeForm($edit, 'article');
 
-    $this->assertText('Article Llamas are cool has been created.');
-    $this->assertNoText('Llamas are cool sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextNotContains('Llamas are cool sent to Lingotek successfully.');
   }
 
   /**
@@ -116,8 +116,8 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'manual';
     $this->saveAsRequestReviewNodeForm($edit, 'article');
 
-    $this->assertText('Article Llamas are cool has been created.');
-    $this->assertNoText('Llamas are cool sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextNotContains('Llamas are cool sent to Lingotek successfully.');
   }
 
   /**
@@ -131,8 +131,8 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'automatic';
     $this->saveAsNewDraftNodeForm($edit, 'article');
 
-    $this->assertText('Article Llamas are cool has been created.');
-    $this->assertText('Llamas are cool sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Llamas are cool sent to Lingotek successfully.');
   }
 
   /**
@@ -146,8 +146,8 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'manual';
     $this->saveAsNewDraftNodeForm($edit, 'article');
 
-    $this->assertText('Article Llamas are cool has been created.');
-    $this->assertNoText('Llamas are cool sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextNotContains('Llamas are cool sent to Lingotek successfully.');
   }
 
   /**
@@ -161,11 +161,11 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'automatic';
     $this->saveAsNewDraftNodeForm($edit, 'article');
 
-    $this->assertText('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
     $this->editAsRequestReviewNodeForm('/node/1/edit', $edit);
 
-    $this->assertText('Article Llamas are cool has been updated.');
-    $this->assertNoText('Llamas are cool was updated and sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been updated.');
+    $this->assertSession()->pageTextNotContains('Llamas are cool was updated and sent to Lingotek successfully.');
   }
 
   /**
@@ -179,11 +179,11 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'manual';
     $this->saveAsNewDraftNodeForm($edit, 'article');
 
-    $this->assertText('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
     $this->editAsRequestReviewNodeForm('/node/1/edit', $edit);
 
-    $this->assertText('Article Llamas are cool has been updated.');
-    $this->assertNoText('Llamas are cool was updated and sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been updated.');
+    $this->assertSession()->pageTextNotContains('Llamas are cool was updated and sent to Lingotek successfully.');
   }
 
   /**
@@ -197,12 +197,12 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'automatic';
     $this->saveAsNewDraftNodeForm($edit, 'article');
 
-    $this->assertText('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
     $edit['body[0][value]'] = 'Llamas are very cool!';
     $this->editAsNewDraftNodeForm('/node/1/edit', $edit);
 
-    $this->assertText('Article Llamas are cool has been updated.');
-    $this->assertText('Llamas are cool was updated and sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been updated.');
+    $this->assertSession()->pageTextContains('Llamas are cool was updated and sent to Lingotek successfully.');
   }
 
   /**
@@ -216,11 +216,11 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'manual';
     $this->saveAsNewDraftNodeForm($edit, 'article');
 
-    $this->assertText('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
     $this->editAsNewDraftNodeForm('/node/1/edit', $edit);
 
-    $this->assertText('Article Llamas are cool has been updated.');
-    $this->assertNoText('Llamas are cool was updated and sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been updated.');
+    $this->assertSession()->pageTextNotContains('Llamas are cool was updated and sent to Lingotek successfully.');
   }
 
   protected function configureNeedsReviewAsUploadState() {
@@ -253,9 +253,9 @@ class LingotekContentModerationTest extends LingotekTestBase {
 
     // Moderate.
     $edit = ['new_state' => 'needs_review'];
-    $this->drupalPostForm(NULL, $edit, 'Apply');
-    $this->assertText('The moderation state has been updated.');
-    $this->assertText('Llamas are cool sent to Lingotek successfully.');
+    $this->submitForm($edit, 'Apply');
+    $this->assertSession()->pageTextContains('The moderation state has been updated.');
+    $this->assertSession()->pageTextContains('Llamas are cool sent to Lingotek successfully.');
   }
 
   public function testModerationToNonUploadStateWithAutomaticProfileDoesntTriggerUpload() {
@@ -270,9 +270,9 @@ class LingotekContentModerationTest extends LingotekTestBase {
 
     // Moderate.
     $edit = ['new_state' => 'published'];
-    $this->drupalPostForm(NULL, $edit, 'Apply');
-    $this->assertText('The moderation state has been updated.');
-    $this->assertNoText('Llamas are cool sent to Lingotek successfully.');
+    $this->submitForm($edit, 'Apply');
+    $this->assertSession()->pageTextContains('The moderation state has been updated.');
+    $this->assertSession()->pageTextNotContains('Llamas are cool sent to Lingotek successfully.');
   }
 
   public function testModerationToUploadStateWithManualProfileDoesntTriggerUpload() {
@@ -287,9 +287,9 @@ class LingotekContentModerationTest extends LingotekTestBase {
 
     // Moderate.
     $edit = ['new_state' => 'needs_review'];
-    $this->drupalPostForm(NULL, $edit, 'Apply');
-    $this->assertText('The moderation state has been updated.');
-    $this->assertNoText('Llamas are cool sent to Lingotek successfully.');
+    $this->submitForm($edit, 'Apply');
+    $this->assertSession()->pageTextContains('The moderation state has been updated.');
+    $this->assertSession()->pageTextNotContains('Llamas are cool sent to Lingotek successfully.');
   }
 
   public function testModerationToNonUploadStateWithManualProfileDoesntTriggerUpload() {
@@ -304,9 +304,9 @@ class LingotekContentModerationTest extends LingotekTestBase {
 
     // Moderate.
     $edit = ['new_state' => 'published'];
-    $this->drupalPostForm(NULL, $edit, 'Apply');
-    $this->assertText('The moderation state has been updated.');
-    $this->assertNoText('Llamas are cool sent to Lingotek successfully.');
+    $this->submitForm($edit, 'Apply');
+    $this->assertSession()->pageTextContains('The moderation state has been updated.');
+    $this->assertSession()->pageTextNotContains('Llamas are cool sent to Lingotek successfully.');
   }
 
   public function testDownloadFromUploadStateTriggersATransition() {
@@ -322,16 +322,16 @@ class LingotekContentModerationTest extends LingotekTestBase {
     // The status is draft.
     $value = $this->xpath('//div[@id="edit-current"]/text()');
     $value = trim($value[1]->getText());
-    $this->assertEqual($value, 'Draft', 'Workbench current status is draft');
+    $this->assertEquals($value, 'Draft', 'Workbench current status is draft');
 
     // Moderate to Needs review, so it's uploaded.
     $edit = ['new_state' => 'needs_review'];
-    $this->drupalPostForm(NULL, $edit, 'Apply');
+    $this->submitForm($edit, 'Apply');
 
     // The status is needs review.
     $value = $this->xpath('//div[@id="edit-current"]/text()');
     $value = trim($value[1]->getText());
-    $this->assertEqual($value, 'Needs Review', 'Workbench current status is Needs Review');
+    $this->assertEquals($value, 'Needs Review', 'Workbench current status is Needs Review');
 
     $this->goToContentBulkManagementForm();
     // Request translation.
@@ -343,7 +343,7 @@ class LingotekContentModerationTest extends LingotekTestBase {
 
     // Let's see the current status is modified.
     $this->clickLink('Llamas are cool');
-    $this->assertNoFieldByName('new_state', 'The transition to a new content moderation status happened (so no moderation form is shown).');
+    $this->assertSession()->fieldValueNotEquals('new_state', 'The transition to a new content moderation status happened (so no moderation form is shown).');
   }
 
   public function testDownloadWhenContentModerationWasSetupAfterLingotek() {
@@ -391,7 +391,7 @@ class LingotekContentModerationTest extends LingotekTestBase {
 
     // Moderate to Needs review, so it's uploaded.
     $edit = ['new_state' => 'needs_review'];
-    $this->drupalPostForm(NULL, $edit, 'Apply');
+    $this->submitForm($edit, 'Apply');
 
     // The status is needs review.
     $value = $this->xpath('//div[@id="edit-current"]/text()');
@@ -405,7 +405,7 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $this->clickLink('ES');
     // Download translation.
     $this->clickLink('ES');
-    $this->assertText('The translation of node Llamas are cool into es_MX has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_MX has been downloaded.');
 
     // Let's see the current status is modified.
     $this->clickLink('Llamas are cool');
@@ -434,11 +434,11 @@ class LingotekContentModerationTest extends LingotekTestBase {
 
     // Moderate to Needs review, so it's uploaded.
     $edit = ['new_state' => 'needs_review'];
-    $this->drupalPostForm(NULL, $edit, 'Apply');
+    $this->submitForm($edit, 'Apply');
 
     // Moderate back to draft, so the transition won't happen on download.
     $edit = ['new_state' => 'draft'];
-    $this->drupalPostForm(NULL, $edit, 'Apply');
+    $this->submitForm($edit, 'Apply');
 
     $this->goToContentBulkManagementForm();
     // Request translation.
@@ -466,32 +466,32 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['langcode[0][value]'] = 'en';
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'manual';
     $this->saveAndPublishNodeForm($edit, 'article');
-    $this->assertText('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
 
     $this->goToContentBulkManagementForm();
 
     // Upload.
     $this->clickLink('EN');
-    $this->assertText('Node Llamas are cool has been uploaded.');
+    $this->assertSession()->pageTextContains('Node Llamas are cool has been uploaded.');
 
     // Request translation.
     $this->clickLink('ES');
-    $this->assertText('Locale \'es_MX\' was added as a translation target for node Llamas are cool.');
+    $this->assertSession()->pageTextContains('Locale \'es_MX\' was added as a translation target for node Llamas are cool.');
     // Check translation.
     $this->clickLink('ES');
-    $this->assertText('The es_MX translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_MX translation for node Llamas are cool is ready for download.');
 
     // Edit the original as a new draft.
     $edit = [];
     $edit['title[0][value]'] = 'Dogs are cool';
     $edit['body[0][value]'] = 'Dogs are very cool';
     $this->editAsNewDraftNodeForm('/node/1/edit', $edit);
-    $this->assertNoText('Dogs are cool was updated and sent to Lingotek successfully.');
-    $this->assertText('Article Dogs are cool has been updated.');
+    $this->assertSession()->pageTextNotContains('Dogs are cool was updated and sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Dogs are cool has been updated.');
 
     // The source published revision is the default one.
     $this->drupalGet('node/1');
-    $this->assertText('Llamas are cool');
+    $this->assertSession()->pageTextContains('Llamas are cool');
 
     $this->goToContentBulkManagementForm();
 
@@ -500,20 +500,20 @@ class LingotekContentModerationTest extends LingotekTestBase {
       'table[1]' => TRUE,
       'operation' => 'download:es',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Execute'));
-    $this->assertText('Operations completed.');
+    $this->submitForm($edit, t('Execute'));
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     // The source published revision must be the same still.
     $this->drupalGet('node/1');
-    $this->assertText('Llamas are cool');
+    $this->assertSession()->pageTextContains('Llamas are cool');
 
     // But the latest revision should keep the unpublished revision content.
     $this->drupalGet('node/1/latest');
-    $this->assertText('Dogs are cool');
+    $this->assertSession()->pageTextContains('Dogs are cool');
 
     // The published revision for the translated content is the right one.
     $this->drupalGet('es/node/1');
-    $this->assertText('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
 
     // There's only one revision for Spanish so we cannot check the latest.
   }
@@ -534,39 +534,39 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['langcode[0][value]'] = 'en';
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'manual';
     $this->saveAndPublishNodeForm($edit, 'article');
-    $this->assertText('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
 
     $this->goToContentBulkManagementForm();
 
     // Upload.
     $this->clickLink('EN');
-    $this->assertText('Node Llamas are cool has been uploaded.');
+    $this->assertSession()->pageTextContains('Node Llamas are cool has been uploaded.');
 
     // Request translation.
     $this->clickLink('ES');
-    $this->assertText('Locale \'es_MX\' was added as a translation target for node Llamas are cool.');
+    $this->assertSession()->pageTextContains('Locale \'es_MX\' was added as a translation target for node Llamas are cool.');
     // Check translation.
     $this->clickLink('ES');
-    $this->assertText('The es_MX translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_MX translation for node Llamas are cool is ready for download.');
 
     // Request translation.
     $this->clickLink('IT');
-    $this->assertText('Locale \'it_IT\' was added as a translation target for node Llamas are cool.');
+    $this->assertSession()->pageTextContains('Locale \'it_IT\' was added as a translation target for node Llamas are cool.');
     // Check translation.
     $this->clickLink('IT');
-    $this->assertText('The it_IT translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The it_IT translation for node Llamas are cool is ready for download.');
 
     // Edit the original as a new draft.
     $edit = [];
     $edit['title[0][value]'] = 'Dogs are cool';
     $edit['body[0][value]'] = 'Dogs are very cool';
     $this->editAsNewDraftNodeForm('/node/1/edit', $edit);
-    $this->assertNoText('Dogs are cool was updated and sent to Lingotek successfully.');
-    $this->assertText('Article Dogs are cool has been updated.');
+    $this->assertSession()->pageTextNotContains('Dogs are cool was updated and sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Dogs are cool has been updated.');
 
     // The source published revision is the default one.
     $this->drupalGet('node/1');
-    $this->assertText('Llamas are cool');
+    $this->assertSession()->pageTextContains('Llamas are cool');
 
     $this->goToContentBulkManagementForm();
 
@@ -575,26 +575,26 @@ class LingotekContentModerationTest extends LingotekTestBase {
       'table[1]' => TRUE,
       'operation' => 'download',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Execute'));
-    $this->assertText('Operations completed.');
+    $this->submitForm($edit, t('Execute'));
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     // The source published revision must be the same still.
     $this->drupalGet('node/1');
-    $this->assertText('Llamas are cool');
+    $this->assertSession()->pageTextContains('Llamas are cool');
 
     // But the latest revision should keep the unpublished revision content.
     $this->drupalGet('node/1/latest');
-    $this->assertText('Dogs are cool');
+    $this->assertSession()->pageTextContains('Dogs are cool');
 
     // The published revision for the Spanish translated content is the right one.
     $this->drupalGet('es/node/1');
-    $this->assertText('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
 
     // There's only one revision for Spanish so we cannot check the latest.
 
     // The published revision for the Italian translated content is the right one.
     $this->drupalGet('it/node/1');
-    $this->assertText('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
 
     // There's only one revision for Italian too so we cannot check the latest.
   }
@@ -610,32 +610,32 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['langcode[0][value]'] = 'en';
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'manual';
     $this->saveAndPublishNodeForm($edit, 'article');
-    $this->assertText('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
 
     // Edit the original as a new draft.
     $edit = [];
     $edit['title[0][value]'] = 'Dogs are cool';
     $edit['body[0][value]'] = 'Dogs are very cool';
     $this->editAsNewDraftNodeForm('/node/1/edit', $edit);
-    $this->assertNoText('Dogs are cool was updated and sent to Lingotek successfully.');
-    $this->assertText('Article Dogs are cool has been updated.');
+    $this->assertSession()->pageTextNotContains('Dogs are cool was updated and sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Dogs are cool has been updated.');
 
     $this->goToContentBulkManagementForm();
 
     // Upload.
     $this->clickLink('EN');
-    $this->assertText('Node Llamas are cool has been uploaded.');
+    $this->assertSession()->pageTextContains('Node Llamas are cool has been uploaded.');
 
     // Request translation.
     $this->clickLink('ES');
-    $this->assertText('Locale \'es_MX\' was added as a translation target for node Llamas are cool.');
+    $this->assertSession()->pageTextContains('Locale \'es_MX\' was added as a translation target for node Llamas are cool.');
     // Check translation.
     $this->clickLink('ES');
-    $this->assertText('The es_MX translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_MX translation for node Llamas are cool is ready for download.');
 
     // The source published revision is the default one.
     $this->drupalGet('node/1');
-    $this->assertText('Llamas are cool');
+    $this->assertSession()->pageTextContains('Llamas are cool');
 
     $this->goToContentBulkManagementForm();
 
@@ -644,25 +644,25 @@ class LingotekContentModerationTest extends LingotekTestBase {
       'table[1]' => TRUE,
       'operation' => 'download:es',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Execute'));
-    $this->assertText('Operations completed.');
+    $this->submitForm($edit, t('Execute'));
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     // The source published revision must be the same still.
     $this->drupalGet('node/1');
-    $this->assertText('Llamas are cool');
+    $this->assertSession()->pageTextContains('Llamas are cool');
 
     // But the latest revision should keep the unpublished revision content.
     $this->drupalGet('node/1/latest');
-    $this->assertText('Dogs are cool');
+    $this->assertSession()->pageTextContains('Dogs are cool');
 
     // The translated revision is not published, so the source published
     // revision is displayed.
     $this->drupalGet('es/node/1');
-    $this->assertText('Llamas are cool');
+    $this->assertSession()->pageTextContains('Llamas are cool');
 
     // And it's also the latest published revision.
     $this->drupalGet('es/node/1/latest');
-    $this->assertText('Los perros son chulos');
+    $this->assertSession()->pageTextContains('Los perros son chulos');
   }
 
   public function testBulkManagementUploadsLatestDraftRevision() {
@@ -676,21 +676,21 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['langcode[0][value]'] = 'en';
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'manual';
     $this->saveAndPublishNodeForm($edit, 'article');
-    $this->assertText('Article Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
 
     // Edit the original as a new draft.
     $edit = [];
     $edit['title[0][value]'] = 'Dogs are cool';
     $edit['body[0][value]'] = 'Dogs are very cool';
     $this->editAsNewDraftNodeForm('/node/1/edit', $edit);
-    $this->assertNoText('Dogs are cool was updated and sent to Lingotek successfully.');
-    $this->assertText('Article Dogs are cool has been updated.');
+    $this->assertSession()->pageTextNotContains('Dogs are cool was updated and sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Article Dogs are cool has been updated.');
 
     $this->goToContentBulkManagementForm();
 
     // Upload.
     $this->clickLink('EN');
-    $this->assertText('Node Llamas are cool has been uploaded.');
+    $this->assertSession()->pageTextContains('Node Llamas are cool has been uploaded.');
 
     // Check that only the last revision fields have been uploaded.
     $data = json_decode(\Drupal::state()
@@ -716,8 +716,8 @@ class LingotekContentModerationTest extends LingotekTestBase {
     $edit['lingotek_translation_management[lingotek_translation_profile]'] = 'automatic';
     $this->saveAndPublishNodeForm($edit, 'page');
 
-    $this->assertText('Page Llamas are cool has been created.');
-    $this->assertText('Llamas are cool sent to Lingotek successfully.');
+    $this->assertSession()->pageTextContains('Page Llamas are cool has been created.');
+    $this->assertSession()->pageTextContains('Llamas are cool sent to Lingotek successfully.');
   }
 
   /**
@@ -728,9 +728,9 @@ class LingotekContentModerationTest extends LingotekTestBase {
    */
   protected function enableModerationThroughUI($content_type_id) {
     $this->drupalGet('/admin/config/workflow/workflows/manage/editorial/type/node');
-    $this->assertFieldByName("bundles[$content_type_id]");
+    $this->assertSession()->fieldExists("bundles[$content_type_id]");
     $edit["bundles[$content_type_id]"] = TRUE;
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
   }
 
   /**
diff --git a/tests/src/Functional/LingotekContentTranslationDocumentUploadHookTest.php b/tests/src/Functional/LingotekContentTranslationDocumentUploadHookTest.php
index e9d103cc..dd9a280e 100644
--- a/tests/src/Functional/LingotekContentTranslationDocumentUploadHookTest.php
+++ b/tests/src/Functional/LingotekContentTranslationDocumentUploadHookTest.php
@@ -87,8 +87,9 @@ class LingotekContentTranslationDocumentUploadHookTest extends LingotekTestBase
     $edit['body[0][value]'] = 'Llamas are very cool';
     $edit['langcode[0][value]'] = 'en';
     $edit['files[field_image_0]'] = \Drupal::service('file_system')->realpath($test_image->uri);
+    $this->drupalGet('node/add/animal');
 
-    $this->drupalPostForm('node/add/animal', $edit, t('Preview'));
+    $this->submitForm($edit, t('Preview'));
 
     unset($edit['files[field_image_0]']);
     $edit['field_image[0][alt]'] = 'Llamas are cool';
@@ -101,23 +102,23 @@ class LingotekContentTranslationDocumentUploadHookTest extends LingotekTestBase
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->assertUploadedDataFieldCount($data, 4);
     $this->assertTrue(isset($data['title'][0]['value']));
-    $this->assertEqual(1, count($data['body'][0]));
+    $this->assertEquals(1, count($data['body'][0]));
     $this->assertTrue(isset($data['body'][0]['value']));
-    $this->assertEqual(1, count($data['field_image'][0]));
+    $this->assertEquals(1, count($data['field_image'][0]));
     $this->assertTrue(isset($data['field_image'][0]['alt']));
     $this->assertTrue(isset($data['animal_date']));
-    $this->assertEqual('2016-05-01', $data['animal_date']);
+    $this->assertEquals('2016-05-01', $data['animal_date']);
 
     // Assert the locale used was correct.
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getBasePath() . '/animal/2016/llamas-are-cool', $uploaded_url, 'The altered url was used.');
+    $this->assertSame(\Drupal::request()->getBasePath() . '/animal/2016/llamas-are-cool', $uploaded_url, 'The altered url was used.');
   }
 
 }
diff --git a/tests/src/Functional/LingotekFieldBodyBulkDebugTest.php b/tests/src/Functional/LingotekFieldBodyBulkDebugTest.php
index 4bafe6bc..4589305e 100644
--- a/tests/src/Functional/LingotekFieldBodyBulkDebugTest.php
+++ b/tests/src/Functional/LingotekFieldBodyBulkDebugTest.php
@@ -52,7 +52,7 @@ class LingotekFieldBodyBulkDebugTest extends LingotekTestBase {
 
     // Enable the debug operations.
     $this->drupalGet('admin/lingotek/settings');
-    $this->drupalPostForm(NULL, [], t('Enable debug operations'));
+    $this->submitForm([], t('Enable debug operations'));
 
     // Go to the bulk config management page.
     $this->goToConfigBulkManagementForm();
@@ -68,7 +68,7 @@ class LingotekFieldBodyBulkDebugTest extends LingotekTestBase {
 
     // Enable the debug operations.
     $this->drupalGet('admin/lingotek/settings');
-    $this->drupalPostForm(NULL, [], t('Enable debug operations'));
+    $this->submitForm([], t('Enable debug operations'));
 
     // Go to the bulk config management page.
     $this->goToConfigBulkManagementForm('node_fields');
@@ -77,24 +77,24 @@ class LingotekFieldBodyBulkDebugTest extends LingotekTestBase {
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => 'change_profile:manual',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     $edit = [
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => 'debug.export',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
-    $this->assertText('Exports available');
+    $this->assertSession()->pageTextContains('Exports available');
     // Download the file.
     $this->clickLink('config.node.article.body.json');
 
     $response = json_decode($this->getSession()->getPage()->getContent(), TRUE);
-    $this->assertIdentical('Body', $response['field.field.node.article.body']['label']);
-    $this->assertIdentical('', $response['field.field.node.article.body']['description']);
-    $this->assertIdentical('node.article.body (config): Body', $response['_debug']['title']);
-    $this->assertIdentical('manual', $response['_debug']['profile']);
-    $this->assertIdentical('en_US', $response['_debug']['source_locale']);
+    $this->assertSame('Body', $response['field.field.node.article.body']['label']);
+    $this->assertSame('', $response['field.field.node.article.body']['description']);
+    $this->assertSame('node.article.body (config): Body', $response['_debug']['title']);
+    $this->assertSame('manual', $response['_debug']['profile']);
+    $this->assertSame('en_US', $response['_debug']['source_locale']);
   }
 
 }
diff --git a/tests/src/Functional/LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest.php b/tests/src/Functional/LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest.php
index c2044d43..51658293 100644
--- a/tests/src/Functional/LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest.php
+++ b/tests/src/Functional/LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest.php
@@ -76,8 +76,8 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
     $assert_session->linkByHrefNotExists($basepath . '/admin/lingotek/config/request/field_config/node.article.body/ca_ES?destination=' . $basepath . '/admin/lingotek/config/manage');
 
     $this->clickLink('EN');
-    $this->assertText('Body uploaded successfully');
-    $this->assertIdentical('en_US', \Drupal::state()
+    $this->assertSession()->pageTextContains('Body uploaded successfully');
+    $this->assertSame('en_US', \Drupal::state()
       ->get('lingotek.uploaded_locale'));
 
     // There is a link for checking status.
@@ -87,7 +87,7 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
     $assert_session->linkByHrefNotExists($basepath . '/admin/lingotek/config/request/field_config/node.article.body/ca_ES?destination=' . $basepath . '/admin/lingotek/config/manage');
 
     $this->clickLink('EN');
-    $this->assertText('Body status checked successfully');
+    $this->assertSession()->pageTextContains('Body status checked successfully');
 
     $assert_session->linkByHrefNotExists($basepath . '/admin/lingotek/config/request/field_config/node.article.body/ca_ES?destination=' . $basepath . '/admin/lingotek/config/manage');
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/request/field_config/node.article.body/es_MX?destination=' . $basepath . '/admin/lingotek/config/manage');
@@ -116,11 +116,11 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()
       ->get('lingotek.uploaded_locale'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/request/field_config/node.article.body/es_MX?destination=' . $basepath . '/admin/lingotek/config/manage');
     $assert_session->linkByHrefNotExists($basepath . '/admin/lingotek/config/request/field_config/node.article.body/ca_ES?destination=' . $basepath . '/admin/lingotek/config/manage');
@@ -133,13 +133,13 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForRequestTranslation('ca', 'node_fields'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.added_target_locale'));
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.requested_locales'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     $this->assertTargetStatus('es', Lingotek::STATUS_REQUEST);
     $this->assertTargetStatus('ca', Lingotek::STATUS_DISABLED);
@@ -150,8 +150,8 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => 'check_translation:ca',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.checked_target_locale'));
 
     $this->assertTargetStatus('es', Lingotek::STATUS_REQUEST);
@@ -163,8 +163,8 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => 'download:ca',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.downloaded_locale'));
 
     $this->assertTargetStatus('es', Lingotek::STATUS_REQUEST);
@@ -190,11 +190,11 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('node_fields'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()
       ->get('lingotek.uploaded_locale'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     // There is a link for checking status.
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/check_upload/field_config/node.article.body?destination=' . $basepath . '/admin/lingotek/config/manage');
@@ -202,11 +202,11 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckUpload('node_fields'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()
       ->get('lingotek.uploaded_locale'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     $assert_session->linkByHrefExists($basepath . '/admin/lingotek/config/request/field_config/node.article.body/es_MX?destination=' . $basepath . '/admin/lingotek/config/manage');
     $assert_session->linkByHrefNotExists($basepath . '/admin/lingotek/config/request/field_config/node.article.body/ca_ES?destination=' . $basepath . '/admin/lingotek/config/manage');
@@ -219,11 +219,11 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForRequestTranslations('node_fields'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(['dummy-document-hash-id' => ['es_MX']], \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(['dummy-document-hash-id' => ['es_MX']], \Drupal::state()
       ->get('lingotek.requested_locales'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     $this->assertTargetStatus('es', Lingotek::STATUS_PENDING);
     $this->assertTargetStatus('ca', Lingotek::STATUS_DISABLED);
@@ -234,8 +234,8 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckTranslations('node_fields'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.checked_target_locale'));
 
     $this->assertTargetStatus('es', Lingotek::STATUS_READY);
@@ -247,8 +247,8 @@ class LingotekFieldBodyBulkDisabledTargetOverrideTranslationTest extends Lingote
       'table[node.article.body]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForDownloadTranslations('node_fields'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('es_MX', \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('es_MX', \Drupal::state()
       ->get('lingotek.downloaded_locale'));
 
     $this->assertTargetStatus('es', Lingotek::STATUS_CURRENT);
diff --git a/tests/src/Functional/LingotekNodeBulkDisabledTargetOverrideTranslationTest.php b/tests/src/Functional/LingotekNodeBulkDisabledTargetOverrideTranslationTest.php
index 831c2c50..a2d1655d 100644
--- a/tests/src/Functional/LingotekNodeBulkDisabledTargetOverrideTranslationTest.php
+++ b/tests/src/Functional/LingotekNodeBulkDisabledTargetOverrideTranslationTest.php
@@ -95,8 +95,8 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
     $this->assertNoLingotekRequestTranslationLink('es_MX');
 
     $this->clickLink('EN');
-    $this->assertText('Node Llamas are cool has been uploaded.');
-    $this->assertIdentical('en_US', \Drupal::state()
+    $this->assertSession()->pageTextContains('Node Llamas are cool has been uploaded.');
+    $this->assertSame('en_US', \Drupal::state()
       ->get('lingotek.uploaded_locale'));
 
     // There is a link for checking status.
@@ -106,7 +106,7 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
     $this->assertLingotekRequestTranslationLink('es_MX');
 
     $this->clickLink('EN');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     $this->assertNoLingotekRequestTranslationLink('ca_ES');
     $this->assertLingotekRequestTranslationLink('es_MX');
@@ -136,8 +136,8 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
     $this->assertNoLingotekRequestTranslationLink('es_MX');
 
     $this->clickLink('EN');
-    $this->assertText('Node Llamas are cool has been uploaded.');
-    $this->assertIdentical('en_US', \Drupal::state()
+    $this->assertSession()->pageTextContains('Node Llamas are cool has been uploaded.');
+    $this->assertSame('en_US', \Drupal::state()
       ->get('lingotek.uploaded_locale'));
 
     // There is a link for checking status.
@@ -147,11 +147,11 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()
       ->get('lingotek.uploaded_locale'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     $this->assertNoLingotekRequestTranslationLink('ca_ES');
     $this->assertLingotekRequestTranslationLink('es_MX');
@@ -165,13 +165,13 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForRequestTranslation('ca', 'node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.added_target_locale'));
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.requested_locales'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     $this->assertTargetStatus('es', Lingotek::STATUS_REQUEST);
     $this->assertTargetStatus('ca', Lingotek::STATUS_DISABLED);
@@ -183,8 +183,8 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckTranslation('ca', 'node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.checked_target_locale'));
 
     $this->assertTargetStatus('es', Lingotek::STATUS_REQUEST);
@@ -197,8 +197,8 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForDownloadTranslation('ca', 'node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.downloaded_locale'));
 
     $this->assertTargetStatus('es', Lingotek::STATUS_REQUEST);
@@ -230,11 +230,11 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()
       ->get('lingotek.uploaded_locale'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     // There is a link for checking status.
     $this->assertLingotekCheckSourceStatusLink();
@@ -243,11 +243,11 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()
       ->get('lingotek.uploaded_locale'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     $this->assertNoLingotekRequestTranslationLink('ca_ES');
     $this->assertLingotekRequestTranslationLink('es_MX');
@@ -261,11 +261,11 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForRequestTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(['dummy-document-hash-id' => ['es_MX']], \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(['dummy-document-hash-id' => ['es_MX']], \Drupal::state()
       ->get('lingotek.requested_locales'));
 
-    $this->assertText('Operations completed.');
+    $this->assertSession()->pageTextContains('Operations completed.');
 
     $this->assertTargetStatus('es', Lingotek::STATUS_PENDING);
     $this->assertTargetStatus('ca', Lingotek::STATUS_DISABLED);
@@ -277,8 +277,8 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical(NULL, \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame(NULL, \Drupal::state()
       ->get('lingotek.checked_target_locale'));
 
     $this->assertTargetStatus('es', Lingotek::STATUS_READY);
@@ -291,8 +291,8 @@ class LingotekNodeBulkDisabledTargetOverrideTranslationTest extends LingotekTest
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForDownloadTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('es_MX', \Drupal::state()
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('es_MX', \Drupal::state()
       ->get('lingotek.downloaded_locale'));
 
     $this->assertTargetStatus('es', Lingotek::STATUS_CURRENT);
diff --git a/tests/src/Functional/LingotekNodeBulkLocaleTranslationTest.php b/tests/src/Functional/LingotekNodeBulkLocaleTranslationTest.php
index 702f549d..479ef713 100644
--- a/tests/src/Functional/LingotekNodeBulkLocaleTranslationTest.php
+++ b/tests/src/Functional/LingotekNodeBulkLocaleTranslationTest.php
@@ -84,14 +84,14 @@ class LingotekNodeBulkLocaleTranslationTest extends LingotekTestBase {
     $this->assertLingotekRequestTranslationLink('es_ES');
     $this->assertLingotekRequestTranslationLink('es_AR');
     $this->clickLink('EN');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request the German (AT) translation.
     $this->assertLingotekRequestTranslationLink('de_AT', 'dummy-document-hash-id');
     $this->clickLink('DE-AT');
-    $this->assertText("Locale 'de_AT' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'de_AT' was added as a translation target for node Llamas are cool.");
     // Check that the requested locale is the right one.
-    $this->assertIdentical('de_AT', \Drupal::state()->get('lingotek.added_target_locale'));
+    $this->assertSame('de_AT', \Drupal::state()->get('lingotek.added_target_locale'));
 
     \Drupal::state()->resetCache();
 
@@ -99,29 +99,29 @@ class LingotekNodeBulkLocaleTranslationTest extends LingotekTestBase {
     $this->assertLingotekRequestTranslationLink('es_ES');
     $this->assertLingotekRequestTranslationLink('es_AR');
     $this->clickLink('ES');
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
     // Check that the requested locale is the right one.
-    $this->assertIdentical('es_AR', \Drupal::state()->get('lingotek.added_target_locale'));
+    $this->assertSame('es_AR', \Drupal::state()->get('lingotek.added_target_locale'));
 
     // Check status of the Spanish translation.
     $this->assertLingotekCheckTargetStatusLink('es_AR');
     $this->clickLink('ES');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Download the Spanish translation.
     $this->assertLingotekDownloadTargetLink('es_AR');
     $this->clickLink('ES');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // Now the link is to the workbench, and it opens in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'ES');
 
     // Check that the order of target languages is always alphabetical.
     $target_links = $this->xpath("//a[contains(@class,'language-icon')]");
-    $this->assertEqual(count($target_links), 3, 'The three languages appear as targets');
-    $this->assertEqual('DE-AT', $target_links[0]->getHtml(), 'DE-AT is the first language');
-    $this->assertEqual('ES', $target_links[1]->getHtml(), 'ES is the second language');
-    $this->assertEqual('ES-ES', $target_links[2]->getHtml(), 'ES-ES is the third language');
+    $this->assertEquals(count($target_links), 3, 'The three languages appear as targets');
+    $this->assertEquals('DE-AT', $target_links[0]->getHtml(), 'DE-AT is the first language');
+    $this->assertEquals('ES', $target_links[1]->getHtml(), 'ES is the second language');
+    $this->assertEquals('ES-ES', $target_links[2]->getHtml(), 'ES-ES is the third language');
   }
 
   /**
@@ -149,7 +149,7 @@ class LingotekNodeBulkLocaleTranslationTest extends LingotekTestBase {
     // Request the German (AT) translation.
     $this->assertLingotekRequestTranslationLink('de_AT', 'dummy-document-hash-id');
     $this->clickLink('DE-AT');
-    $this->assertText("Locale 'de_AT' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'de_AT' was added as a translation target for node Llamas are cool.");
 
     // Check that the source status has been updated.
     $this->assertNoLingotekCheckSourceStatusLink();
@@ -180,16 +180,16 @@ class LingotekNodeBulkLocaleTranslationTest extends LingotekTestBase {
     // Request the German (AT) translation.
     $this->assertLingotekRequestTranslationLink('de_AT', 'dummy-document-hash-id');
     $this->clickLink('ES-ES');
-    $this->assertText("Locale 'es_ES' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_ES' was added as a translation target for node Llamas are cool.");
     $this->clickLink('DE-AT');
-    $this->assertText("Locale 'de_AT' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'de_AT' was added as a translation target for node Llamas are cool.");
 
     $key = $this->getBulkSelectionKey('en', 1);
     $edit = [
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForDownloadTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     $this->assertTargetStatus('DE-AT', Lingotek::STATUS_CURRENT);
     $this->assertTargetStatus('ES-ES', Lingotek::STATUS_CURRENT);
@@ -222,16 +222,16 @@ class LingotekNodeBulkLocaleTranslationTest extends LingotekTestBase {
     // Request the German (AT) translation.
     $this->assertLingotekRequestTranslationLink('de_AT', 'dummy-document-hash-id');
     $this->clickLink('ES-ES');
-    $this->assertText("Locale 'es_ES' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_ES' was added as a translation target for node Llamas are cool.");
     $this->clickLink('DE-AT');
-    $this->assertText("Locale 'de_AT' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'de_AT' was added as a translation target for node Llamas are cool.");
 
     $key = $this->getBulkSelectionKey('en', 1);
     $edit = [
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForDownloadTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     $this->assertTargetStatus('DE-AT', Lingotek::STATUS_CURRENT);
     $this->assertTargetStatus('ES-ES', Lingotek::STATUS_CURRENT);
diff --git a/tests/src/Functional/LingotekNodeBulkProfileTest.php b/tests/src/Functional/LingotekNodeBulkProfileTest.php
index d1e6111e..f46340b0 100644
--- a/tests/src/Functional/LingotekNodeBulkProfileTest.php
+++ b/tests/src/Functional/LingotekNodeBulkProfileTest.php
@@ -82,8 +82,8 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // I can check current status.
     $this->assertLingotekCheckSourceStatusLink();
@@ -94,11 +94,11 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     // Check that there are three nodes with the Manual Profile
     $manual_profile = $this->xpath("//td[contains(text(), 'Manual')]");
-    $this->assertEqual(count($manual_profile), 3, 'There are three nodes with the Manual Profile set.');
+    $this->assertEquals(count($manual_profile), 3, 'There are three nodes with the Manual Profile set.');
 
     $key = $this->getBulkSelectionKey('en', 1);
     $edit = [
@@ -107,24 +107,24 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => 'change_profile:automatic',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     // Check that there are three nodes with the Automatic Profile
     $automatic_profile = $this->xpath("//td[contains(text(), 'Automatic')]");
-    $this->assertEqual(count($automatic_profile), 3, 'There are three nodes with the Automatic Profile set.');
+    $this->assertEquals(count($automatic_profile), 3, 'There are three nodes with the Automatic Profile set.');
 
     $edit = [
       'table[2]' => TRUE,
       $this->getBulkOperationFormName() => 'change_profile:manual',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     // Check that there is one node with the Manual Profile
     // Check that there are two nodes with the Automatic Profile
     $manual_profile = $this->xpath("//td[contains(text(), 'Manual')]");
-    $this->assertEqual(count($manual_profile), 1, 'There is one node with the Manual Profile set.');
+    $this->assertEquals(count($manual_profile), 1, 'There is one node with the Manual Profile set.');
     $automatic_profile = $this->xpath("//td[contains(text(), 'Automatic')]");
-    $this->assertEqual(count($automatic_profile), 2, 'There are two nodes with the Automatic Profile set.');
+    $this->assertEquals(count($automatic_profile), 2, 'There are two nodes with the Automatic Profile set.');
 
     $key = $this->getBulkSelectionKey('en', 1);
     $edit = [
@@ -133,11 +133,11 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => 'change_profile:disabled',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     // Check that there are three nodes with the Disabled Profile
     $disabled_profile = $this->xpath("//td[contains(text(), 'Disabled')]");
-    $this->assertEqual(count($disabled_profile), 3, 'There are three nodes with the Disabled Profile set.');
+    $this->assertEquals(count($disabled_profile), 3, 'There are three nodes with the Disabled Profile set.');
 
     /** @var \Drupal\lingotek\LingotekContentTranslationServiceInterface $content_translation_service */
     $content_translation_service = \Drupal::service('lingotek.content_translation');
@@ -145,9 +145,9 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
     $this->goToContentBulkManagementForm();
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
     }
     $key = $this->getBulkSelectionKey('en', 1);
     $edit = [
@@ -156,13 +156,13 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -172,13 +172,13 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -188,13 +188,13 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForRequestTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -204,13 +204,13 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -220,13 +220,13 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForDownloadTranslation('es', 'node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -236,20 +236,20 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => 'change_profile:automatic',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     // Check that there are three nodes with the Automatic Profile
     $automatic_profile = $this->xpath("//td[contains(text(), 'Automatic')]");
-    $this->assertEqual(count($automatic_profile), 3, 'There are three nodes with the Automatic Profile set.');
+    $this->assertEquals(count($automatic_profile), 3, 'There are three nodes with the Automatic Profile set.');
 
     \Drupal::entityTypeManager()->getStorage('node')->resetCache();
     \Drupal::entityTypeManager()->getStorage('lingotek_content_metadata')->resetCache();
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_READY, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_READY, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -259,16 +259,16 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     \Drupal::entityTypeManager()->getStorage('node')->resetCache();
     \Drupal::entityTypeManager()->getStorage('lingotek_content_metadata')->resetCache();
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_IMPORTING, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_IMPORTING, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_PENDING, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_IMPORTING, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_IMPORTING, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_PENDING, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -278,16 +278,16 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     \Drupal::entityTypeManager()->getStorage('node')->resetCache();
     \Drupal::entityTypeManager()->getStorage('lingotek_content_metadata')->resetCache();
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_PENDING, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_PENDING, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -297,16 +297,16 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForRequestTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     \Drupal::entityTypeManager()->getStorage('node')->resetCache();
     \Drupal::entityTypeManager()->getStorage('lingotek_content_metadata')->resetCache();
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_PENDING, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_PENDING, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -316,16 +316,16 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     \Drupal::entityTypeManager()->getStorage('node')->resetCache();
     \Drupal::entityTypeManager()->getStorage('lingotek_content_metadata')->resetCache();
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_READY, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_READY, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     $key = $this->getBulkSelectionKey('en', 1);
@@ -335,16 +335,16 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForDownloadTranslations('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     \Drupal::entityTypeManager()->getStorage('node')->resetCache();
     \Drupal::entityTypeManager()->getStorage('lingotek_content_metadata')->resetCache();
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_READY, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_READY, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     // Edit the nodes.
@@ -360,9 +360,9 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_DISABLED, $content_translation_service->getTargetStatus($node, 'es'));
     }
 
     // Edit the nodes.
@@ -378,9 +378,9 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
 
     for ($i = 1; $i < 4; $i++) {
       $node = Node::load($i);
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
-      $this->assertIdentical(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
-      $this->assertIdentical(Lingotek::STATUS_READY, $content_translation_service->getTargetStatus($node, 'es'));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getSourceStatus($node));
+      $this->assertSame(Lingotek::STATUS_CURRENT, $content_translation_service->getTargetStatus($node, 'en'));
+      $this->assertSame(Lingotek::STATUS_READY, $content_translation_service->getTargetStatus($node, 'es'));
     }
   }
 
@@ -417,7 +417,7 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCancel('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     $key = $this->getBulkSelectionKey('en', 1);
     $edit = [
@@ -426,11 +426,11 @@ class LingotekNodeBulkProfileTest extends LingotekTestBase {
       'table[3]' => TRUE,
       $this->getBulkOperationFormName() => 'change_profile:automatic',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     // Check that there are three nodes with the Automatic Profile
     $automatic_profile = $this->xpath("//td[contains(text(), 'Automatic')]");
-    $this->assertEqual(count($automatic_profile), 3, 'There are three nodes with the Automatic Profile set.');
+    $this->assertEquals(count($automatic_profile), 3, 'There are three nodes with the Automatic Profile set.');
   }
 
 }
diff --git a/tests/src/Functional/LingotekNodeNestedParagraphsTranslationTest.php b/tests/src/Functional/LingotekNodeNestedParagraphsTranslationTest.php
index e4c64df1..862ff4df 100644
--- a/tests/src/Functional/LingotekNodeNestedParagraphsTranslationTest.php
+++ b/tests/src/Functional/LingotekNodeNestedParagraphsTranslationTest.php
@@ -102,7 +102,7 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_nested_content');
 
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
@@ -116,16 +116,16 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->verbose(var_export($data, TRUE));
     $this->assertUploadedDataFieldCount($data, 2);
-    $this->assertEqual($data['title'][0]['value'], 'Llamas are cool');
-    $this->assertEqual($data['field_paragraph_container'][0]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Llamas are very cool');
+    $this->assertEquals($data['title'][0]['value'], 'Llamas are cool');
+    $this->assertEquals($data['field_paragraph_container'][0]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Llamas are very cool');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('node/1');
@@ -134,28 +134,28 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas');
   }
 
   /**
@@ -167,8 +167,8 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
 
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_nested_content');
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
@@ -187,9 +187,9 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $this->verbose(var_export($serialized_node, TRUE));
     // Main node metadata is there.
     $this->assertTrue(isset($serialized_node['_lingotek_metadata']), 'The Lingotek metadata is included in the extracted data.');
-    $this->assertEqual('node', $serialized_node['_lingotek_metadata']['_entity_type_id'], 'Entity type id is included as metadata.');
-    $this->assertEqual(1, $serialized_node['_lingotek_metadata']['_entity_id'], 'Entity id is included as metadata.');
-    $this->assertEqual(1, $serialized_node['_lingotek_metadata']['_entity_revision'], 'Entity revision id is included as metadata.');
+    $this->assertEquals('node', $serialized_node['_lingotek_metadata']['_entity_type_id'], 'Entity type id is included as metadata.');
+    $this->assertEquals(1, $serialized_node['_lingotek_metadata']['_entity_id'], 'Entity id is included as metadata.');
+    $this->assertEquals(1, $serialized_node['_lingotek_metadata']['_entity_revision'], 'Entity revision id is included as metadata.');
   }
 
   /**
@@ -201,8 +201,8 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
 
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_nested_content');
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
@@ -213,7 +213,7 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $this->saveAndPublishNodeForm($edit, NULL);
 
     $this->goToContentBulkManagementForm('paragraph');
-    $this->assertNoField('filters[wrapper][label]', 'There is no filter by label as paragraphs have no label.');
+    $this->assertSession()->fieldNotExists('filters[wrapper][label]', 'There is no filter by label as paragraphs have no label.');
   }
 
   /**
@@ -225,8 +225,8 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
 
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_nested_content');
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
@@ -235,13 +235,14 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $edit['field_paragraph_container[0][subform][field_paragraphs_demo][1][subform][field_text_demo][0][value]'] = 'Llamas are very cool for the second time';
 
     $this->saveAndPublishNodeForm($edit, NULL);
+    $this->drupalGet('admin/lingotek/settings', []);
 
     // Ensure paragraphs tab is enabled.
-    $this->drupalPostForm('admin/lingotek/settings', ['contrib[paragraphs][enable_bulk_management]' => 1], 'Save settings', [], 'lingoteksettings-integrations-form');
+    $this->submitForm(['contrib[paragraphs][enable_bulk_management]' => 1], 'Save settings', 'lingoteksettings-integrations-form');
 
     $this->goToContentBulkManagementForm('paragraph');
     // Assert there is at least one paragraph in the list.
-    $this->assertText('Image + Text');
+    $this->assertSession()->pageTextContains('Image + Text');
 
     // Set a filter, and there should still be paragraphs.
     /** @var \Drupal\user\PrivateTempStore $tempStore */
@@ -249,7 +250,7 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $tempStore->set('label', 'Llamas');
 
     $this->goToContentBulkManagementForm('paragraph');
-    $this->assertText('Image + Text');
+    $this->assertSession()->pageTextContains('Image + Text');
   }
 
   public function testParagraphEditsAreKeptWhenTranslating() {
@@ -259,8 +260,8 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_nested_content');
 
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $this->createNestedParagraphedNode('automatic');
 
@@ -270,17 +271,17 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->verbose(var_export($data, TRUE));
     $this->assertUploadedDataFieldCount($data, 2);
-    $this->assertEqual($data['title'][0]['value'], 'Llamas are cool');
-    $this->assertEqual($data['field_paragraph_container'][0]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Llamas are very cool for the first time');
-    $this->assertEqual($data['field_paragraph_container'][0]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Llamas are very cool for the second time');
+    $this->assertEquals($data['title'][0]['value'], 'Llamas are cool');
+    $this->assertEquals($data['field_paragraph_container'][0]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Llamas are very cool for the first time');
+    $this->assertEquals($data['field_paragraph_container'][0]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Llamas are very cool for the second time');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('node/1');
@@ -289,16 +290,16 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
@@ -314,32 +315,32 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
 
     $this->saveAndKeepPublishedNodeForm($edit, 1, FALSE);
 
-    $this->assertText('Paragraphed nested content Dogs are cool has been updated.');
-    $this->assertText('Dogs are very cool for the first time');
-    $this->assertText('Dogs are very cool for the second time');
+    $this->assertSession()->pageTextContains('Paragraphed nested content Dogs are cool has been updated.');
+    $this->assertSession()->pageTextContains('Dogs are very cool for the first time');
+    $this->assertSession()->pageTextContains('Dogs are very cool for the second time');
 
     // Go back to translations.
     $this->clickLink('Translate');
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Dogs are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Dogs are cool is ready for download.');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Dogs are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Dogs are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas por primera vez');
-    $this->assertText('Las llamas son muy chulas por segunda vez');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas por primera vez');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas por segunda vez');
 
     // The saved revision is kept.
     $this->clickLink('Translate');
     $this->clickLink('Dogs are cool');
-    $this->assertText('Dogs are very cool for the first time');
-    $this->assertText('Dogs are very cool for the second time');
+    $this->assertSession()->pageTextContains('Dogs are very cool for the first time');
+    $this->assertSession()->pageTextContains('Dogs are very cool for the second time');
   }
 
   public function testParagraphRevisionsAreKeptWhenTranslating() {
@@ -349,8 +350,8 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_nested_content');
 
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $this->createNestedParagraphedNode('automatic');
 
@@ -360,19 +361,19 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->verbose(var_export($data, TRUE));
     $this->assertUploadedDataFieldCount($data, 2);
-    $this->assertEqual($data['title'][0]['value'], 'Llamas are cool');
-    $this->assertEqual($data['field_paragraph_container'][0]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Llamas are very cool for the first time');
-    $this->assertEqual($data['field_paragraph_container'][0]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Llamas are very cool for the second time');
-    $this->assertEqual($data['field_paragraph_container'][1]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Dogs are very cool for the first time');
-    $this->assertEqual($data['field_paragraph_container'][1]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Dogs are very cool for the second time');
+    $this->assertEquals($data['title'][0]['value'], 'Llamas are cool');
+    $this->assertEquals($data['field_paragraph_container'][0]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Llamas are very cool for the first time');
+    $this->assertEquals($data['field_paragraph_container'][0]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Llamas are very cool for the second time');
+    $this->assertEquals($data['field_paragraph_container'][1]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Dogs are very cool for the first time');
+    $this->assertEquals($data['field_paragraph_container'][1]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Dogs are very cool for the second time');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('node/1');
@@ -381,16 +382,16 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
@@ -406,47 +407,47 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $edit['revision'] = 1;
     $this->saveAndUnpublishNodeForm($edit, 1, FALSE);
 
-    $this->assertText('Paragraphed nested content Cats are cool has been updated.');
-    $this->assertText('Cats are very cool for the first time');
-    $this->assertText('Cats are very cool for the second time');
+    $this->assertSession()->pageTextContains('Paragraphed nested content Cats are cool has been updated.');
+    $this->assertSession()->pageTextContains('Cats are very cool for the first time');
+    $this->assertSession()->pageTextContains('Cats are very cool for the second time');
 
     // Go back to translations.
     $this->clickLink('Translate');
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Cats are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Cats are cool is ready for download.');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Cats are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Cats are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas por primera vez');
-    $this->assertText('Las llamas son muy chulas por segunda vez');
-    $this->assertText('Los perros son muy chulos por primera vez');
-    $this->assertText('Los perros son muy chulos por segunda vez');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas por primera vez');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas por segunda vez');
+    $this->assertSession()->pageTextContains('Los perros son muy chulos por primera vez');
+    $this->assertSession()->pageTextContains('Los perros son muy chulos por segunda vez');
 
     // The latest revision is kept.
     $this->clickLink('Translate');
     $this->clickLink('Cats are cool');
-    $this->assertText('Cats are very cool for the first time');
-    $this->assertText('Cats are very cool for the second time');
-    $this->assertText('Dogs are very cool for the first time');
-    $this->assertText('Dogs are very cool for the second time');
-    $this->assertNoText('Llamas are very cool for the first time');
-    $this->assertNoText('Llamas are very cool for the second time');
+    $this->assertSession()->pageTextContains('Cats are very cool for the first time');
+    $this->assertSession()->pageTextContains('Cats are very cool for the second time');
+    $this->assertSession()->pageTextContains('Dogs are very cool for the first time');
+    $this->assertSession()->pageTextContains('Dogs are very cool for the second time');
+    $this->assertSession()->pageTextNotContains('Llamas are very cool for the first time');
+    $this->assertSession()->pageTextNotContains('Llamas are very cool for the second time');
 
     // The published revision is not updated.
     $this->drupalGet('node/1/revisions/1/view');
-    $this->assertText('Llamas are very cool for the first time');
-    $this->assertText('Llamas are very cool for the second time');
-    $this->assertText('Dogs are very cool for the first time');
-    $this->assertText('Dogs are very cool for the second time');
-    $this->assertNoText('Cats are very cool for the first time');
-    $this->assertNoText('Cats are very cool for the second time');
+    $this->assertSession()->pageTextContains('Llamas are very cool for the first time');
+    $this->assertSession()->pageTextContains('Llamas are very cool for the second time');
+    $this->assertSession()->pageTextContains('Dogs are very cool for the first time');
+    $this->assertSession()->pageTextContains('Dogs are very cool for the second time');
+    $this->assertSession()->pageTextNotContains('Cats are very cool for the first time');
+    $this->assertSession()->pageTextNotContains('Cats are very cool for the second time');
   }
 
   /**
@@ -459,7 +460,7 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_nested_content');
 
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
@@ -468,7 +469,7 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $this->saveAndPublishNodeForm($edit, NULL);
 
     $metadata = LingotekContentMetadata::loadMultiple();
-    $this->assertEqual(3, count($metadata), 'There is metadata saved for the parent entity and the child nested entities.');
+    $this->assertEquals(3, count($metadata), 'There is metadata saved for the parent entity and the child nested entities.');
   }
 
   /**
@@ -481,7 +482,7 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_nested_content');
 
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
@@ -505,41 +506,41 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $this->verbose(var_export($data, TRUE));
     $this->assertUploadedDataFieldCount($data, 2);
     $this->assertUploadedDataFieldCount($data['field_paragraph_container'][0], 0);
-    $this->assertEqual($data['title'][0]['value'], 'Llamas are cool');
+    $this->assertEquals($data['title'][0]['value'], 'Llamas are cool');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('manual', $used_profile, 'The manual profile was used.');
+    $this->assertSame('manual', $used_profile, 'The manual profile was used.');
 
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertNoText('Las llamas son muy chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextNotContains('Las llamas son muy chulas');
   }
 
   /**
@@ -560,26 +561,26 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
       $key => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     // Check that only the configured fields have been uploaded,
     // but not the missing one.
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->verbose(var_export($data, TRUE));
     $this->assertUploadedDataFieldCount($data, 2);
-    $this->assertEqual($data['title'][0]['value'], 'Llamas are cool');
-    $this->assertEqual($data['field_paragraph_container'][0]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Llamas are very cool for the first time');
-    $this->assertEqual($data['field_paragraph_container'][0]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Llamas are very cool for the second time');
-    $this->assertEqual($data['field_paragraph_container'][1]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Dogs are very cool for the first time');
-    $this->assertEqual($data['field_paragraph_container'][1]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Dogs are very cool for the second time');
+    $this->assertEquals($data['title'][0]['value'], 'Llamas are cool');
+    $this->assertEquals($data['field_paragraph_container'][0]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Llamas are very cool for the first time');
+    $this->assertEquals($data['field_paragraph_container'][0]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Llamas are very cool for the second time');
+    $this->assertEquals($data['field_paragraph_container'][1]['field_paragraphs_demo'][0]['field_text_demo'][0]['value'], 'Dogs are very cool for the first time');
+    $this->assertEquals($data['field_paragraph_container'][1]['field_paragraphs_demo'][1]['field_text_demo'][0]['value'], 'Dogs are very cool for the second time');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('manual', $used_profile, 'The manual profile was used.');
+    $this->assertSame('manual', $used_profile, 'The manual profile was used.');
 
     // Request translation.
     $key = $this->getBulkSelectionKey('en', 1);
@@ -587,13 +588,13 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
       $key => TRUE,
       $this->getBulkOperationFormName() => 'request_translation:es-ar',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     $this->drupalGet('node/1');
     $this->clickLink('Edit');
-    $this->drupalPostForm(NULL, NULL, t('Remove'));
-    $this->drupalPostForm(NULL, NULL, t('Confirm removal'));
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Remove'));
+    $this->submitForm(NULL, t('Confirm removal'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['field_paragraph_container[1][subform][field_paragraphs_demo][0][subform][field_text_demo][0][value]'] = 'Cats are very cool for the second time';
@@ -603,16 +604,16 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $edit['field_paragraph_container[1][subform][field_paragraphs_demo][2][subform][field_text_demo][0][value]'] = 'Cats are very cool for the FOURTH time';
     $this->saveAndKeepPublishedNodeForm($edit, 1, FALSE);
 
-    $this->assertNoText('Llamas are very cool for the first time');
-    $this->assertNoText('Llamas are very cool for the second time');
+    $this->assertSession()->pageTextNotContains('Llamas are very cool for the first time');
+    $this->assertSession()->pageTextNotContains('Llamas are very cool for the second time');
 
-    $this->assertNoText('Dogs are very cool for the first time');
-    $this->assertNoText('Dogs are very cool for the second time');
+    $this->assertSession()->pageTextNotContains('Dogs are very cool for the first time');
+    $this->assertSession()->pageTextNotContains('Dogs are very cool for the second time');
 
-    $this->assertNoText('Cats are very cool for the first time');
-    $this->assertText('Cats are very cool for the second time');
-    $this->assertText('Cats are very cool for the third time');
-    $this->assertText('Cats are very cool for the FOURTH time');
+    $this->assertSession()->pageTextNotContains('Cats are very cool for the first time');
+    $this->assertSession()->pageTextContains('Cats are very cool for the second time');
+    $this->assertSession()->pageTextContains('Cats are very cool for the third time');
+    $this->assertSession()->pageTextContains('Cats are very cool for the FOURTH time');
 
     // Download translation.
     $this->goToContentBulkManagementForm();
@@ -621,48 +622,48 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
       $key => TRUE,
       $this->getBulkOperationFormName() => 'download:es-ar',
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('es_AR', \Drupal::state()->get('lingotek.downloaded_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('es_AR', \Drupal::state()->get('lingotek.downloaded_locale'));
 
     $this->drupalGet('node/1/translations');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
 
     if ($this->paragraphsTranslatable) {
-      $this->assertText('Las llamas son muy chulas por primera vez');
-      $this->assertText('Las llamas son muy chulas por segunda vez');
+      $this->assertSession()->pageTextContains('Las llamas son muy chulas por primera vez');
+      $this->assertSession()->pageTextContains('Las llamas son muy chulas por segunda vez');
     }
     else {
-      $this->assertNoText('Las llamas son muy chulas por primera vez');
-      $this->assertNoText('Las llamas son muy chulas por segunda vez');
+      $this->assertSession()->pageTextNotContains('Las llamas son muy chulas por primera vez');
+      $this->assertSession()->pageTextNotContains('Las llamas son muy chulas por segunda vez');
       // We show the data that was actually uploaded and translated from the
       // previous revision. The first revision is missing, as it was not
       // translated.
-      $this->assertText('Los perros son muy chulos por primera vez');
-      $this->assertText('Los perros son muy chulos por segunda vez');
+      $this->assertSession()->pageTextContains('Los perros son muy chulos por primera vez');
+      $this->assertSession()->pageTextContains('Los perros son muy chulos por segunda vez');
       // That paragraph exists, but was not translated so it's not shown at all.
-      $this->assertNoText('Los gatos son muy chulos por primera vez');
-      $this->assertNoText('Los gatos son muy chulos por segunda vez');
-      $this->assertNoText('Los gatos son muy chulos por tercera vez');
-      $this->assertNoText('Los gatos son muy chulos por cuarta vez');
+      $this->assertSession()->pageTextNotContains('Los gatos son muy chulos por primera vez');
+      $this->assertSession()->pageTextNotContains('Los gatos son muy chulos por segunda vez');
+      $this->assertSession()->pageTextNotContains('Los gatos son muy chulos por tercera vez');
+      $this->assertSession()->pageTextNotContains('Los gatos son muy chulos por cuarta vez');
     }
 
     $this->clickLink('Translate');
     $this->clickLink('Llamas are cool');
 
-    $this->assertText('Llamas are cool');
-    $this->assertNoText('Llamas are very cool for the first time');
-    $this->assertNoText('Llamas are very cool for the second time');
+    $this->assertSession()->pageTextContains('Llamas are cool');
+    $this->assertSession()->pageTextNotContains('Llamas are very cool for the first time');
+    $this->assertSession()->pageTextNotContains('Llamas are very cool for the second time');
 
-    $this->assertNoText('Dogs are very cool for the first time');
-    $this->assertNoText('Dogs are very cool for the second time');
+    $this->assertSession()->pageTextNotContains('Dogs are very cool for the first time');
+    $this->assertSession()->pageTextNotContains('Dogs are very cool for the second time');
 
-    $this->assertNoText('Cats are very cool for the first time');
-    $this->assertText('Cats are very cool for the FOURTH time');
-    $this->assertText('Cats are very cool for the third time');
-    $this->assertText('Cats are very cool for the second time');
+    $this->assertSession()->pageTextNotContains('Cats are very cool for the first time');
+    $this->assertSession()->pageTextContains('Cats are very cool for the FOURTH time');
+    $this->assertSession()->pageTextContains('Cats are very cool for the third time');
+    $this->assertSession()->pageTextContains('Cats are very cool for the second time');
   }
 
   public function testEditingAfterNodeWithParagraphsTranslation() {
@@ -677,8 +678,8 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $this->drupalGet('node/1/edit');
     $assert_session->fieldValueEquals('field_paragraph_container[0][subform][field_paragraphs_demo][0][subform][field_text_demo][0][value]', 'Llamas are very cool');
 
-    $this->drupalPostForm(NULL, NULL, t('Remove'));
-    $this->drupalPostForm(NULL, NULL, t('Confirm removal'));
+    $this->submitForm(NULL, t('Remove'));
+    $this->submitForm(NULL, t('Confirm removal'));
 
     $page->pressButton('Save (this translation)');
     $assert_session->pageTextContains('Llamas are cool has been updated.');
@@ -734,7 +735,8 @@ class LingotekNodeNestedParagraphsTranslationTest extends LingotekTestBase {
     $edit = [];
     $edit['settings[node][paragraphed_nested_content][fields][field_paragraph_container]'] = 1;
     $edit['settings[paragraph][paragraph_container][fields][field_paragraphs_demo]'] = 1;
-    $this->drupalPostForm('/admin/config/regional/content-language', $edit, 'Save configuration');
+    $this->drupalGet('/admin/config/regional/content-language');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('Settings successfully updated.');
   }
 
diff --git a/tests/src/Functional/LingotekNodeWithParagraphsManageTranslationTabTest.php b/tests/src/Functional/LingotekNodeWithParagraphsManageTranslationTabTest.php
index c59e792d..e2d29017 100644
--- a/tests/src/Functional/LingotekNodeWithParagraphsManageTranslationTabTest.php
+++ b/tests/src/Functional/LingotekNodeWithParagraphsManageTranslationTabTest.php
@@ -86,7 +86,7 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_content_demo');
 
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
@@ -112,33 +112,33 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
     // And we cannot request yet a translation.
     $this->assertNoLingotekRequestTranslationLink('es_MX');
     $this->clickLink('EN');
-    $this->assertText('Node Llamas are cool has been uploaded.');
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->assertSession()->pageTextContains('Node Llamas are cool has been uploaded.');
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // There is a link for checking status.
     $this->assertLingotekCheckSourceStatusLink();
     // And we can already request a translation.
     $this->assertLingotekRequestTranslationLink('es_MX');
     $this->clickLink('EN');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request the Spanish translation.
     $this->assertLingotekRequestTranslationLink('es_MX');
     $this->clickLink('ES');
-    $this->assertText("Locale 'es_MX' was added as a translation target for node Llamas are cool.");
-    $this->assertIdentical('es_MX', \Drupal::state()->get('lingotek.added_target_locale'));
+    $this->assertSession()->pageTextContains("Locale 'es_MX' was added as a translation target for node Llamas are cool.");
+    $this->assertSame('es_MX', \Drupal::state()->get('lingotek.added_target_locale'));
 
     // Check status of the Spanish translation.
     $this->assertLingotekCheckTargetStatusLink('es_MX');
     $this->clickLink('ES');
-    $this->assertIdentical('es_MX', \Drupal::state()->get('lingotek.checked_target_locale'));
-    $this->assertText('The es_MX translation for node Llamas are cool is ready for download.');
+    $this->assertSame('es_MX', \Drupal::state()->get('lingotek.checked_target_locale'));
+    $this->assertSession()->pageTextContains('The es_MX translation for node Llamas are cool is ready for download.');
 
     // Download the Spanish translation.
     $this->assertLingotekDownloadTargetLink('es_MX');
     $this->clickLink('ES');
-    $this->assertText('The translation of node Llamas are cool into es_MX has been downloaded.');
-    $this->assertIdentical('es_MX', \Drupal::state()->get('lingotek.downloaded_locale'));
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_MX has been downloaded.');
+    $this->assertSame('es_MX', \Drupal::state()->get('lingotek.downloaded_locale'));
 
     // Now the link is to the workbench, and it opens in a new tab.
     $this->assertLingotekWorkbenchLink('es_MX', 'dummy-document-hash-id', 'ES');
@@ -159,7 +159,7 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_content_demo');
 
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
@@ -186,8 +186,8 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
       'table[node:1]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('en_US', \Drupal::state()->get('lingotek.uploaded_locale'));
 
     // I can check current status.
     $this->assertLingotekCheckSourceStatusLink();
@@ -195,7 +195,7 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
       'table[node:1]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckUpload('node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
 
     // Request the German (AT) translation.
     $this->assertLingotekRequestTranslationLink('de_AT');
@@ -203,8 +203,8 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
       'table[node:1]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForRequestTranslation('de', 'node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('de_AT', \Drupal::state()->get('lingotek.added_target_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('de_AT', \Drupal::state()->get('lingotek.added_target_locale'));
 
     // Check status of the Spanish translation.
     $this->assertLingotekCheckTargetStatusLink('de_AT');
@@ -212,8 +212,8 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
       'table[node:1]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForCheckTranslation('de', 'node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('de_AT', \Drupal::state()->get('lingotek.checked_target_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('de_AT', \Drupal::state()->get('lingotek.checked_target_locale'));
 
     // Download the Spanish translation.
     $this->assertLingotekDownloadTargetLink('de_AT');
@@ -221,8 +221,8 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
       'table[node:1]' => TRUE,
       $this->getBulkOperationFormName() => $this->getBulkOperationNameForDownloadTranslation('de', 'node'),
     ];
-    $this->drupalPostForm(NULL, $edit, $this->getApplyActionsButtonLabel());
-    $this->assertIdentical('de_AT', \Drupal::state()->get('lingotek.downloaded_locale'));
+    $this->submitForm($edit, $this->getApplyActionsButtonLabel());
+    $this->assertSame('de_AT', \Drupal::state()->get('lingotek.downloaded_locale'));
 
     // Now the link is to the workbench, and it opens in a new tab.
     $this->assertLingotekWorkbenchLink('de_AT', 'dummy-document-hash-id', 'DE');
@@ -236,7 +236,7 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
     // Add paragraphed content.
     $this->drupalGet('node/add/paragraphed_content_demo');
 
-    $this->drupalPostForm(NULL, NULL, t('Add Image + Text'));
+    $this->submitForm(NULL, t('Add Image + Text'));
 
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
@@ -268,7 +268,8 @@ class LingotekNodeWithParagraphsManageTranslationTabTest extends LingotekTestBas
     $edit = [];
     $edit['settings[node][paragraphed_content_demo][fields][field_paragraphs_demo]'] = 1;
     $edit['settings[paragraph][image_text][fields][field_text_demo]'] = 1;
-    $this->drupalPostForm('/admin/config/regional/content-language', $edit, 'Save configuration');
+    $this->drupalGet('/admin/config/regional/content-language');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('Settings successfully updated.');
   }
 
diff --git a/tests/src/Functional/LingotekNodeWithPathTranslationTest.php b/tests/src/Functional/LingotekNodeWithPathTranslationTest.php
index e8780efd..559f2f4d 100644
--- a/tests/src/Functional/LingotekNodeWithPathTranslationTest.php
+++ b/tests/src/Functional/LingotekNodeWithPathTranslationTest.php
@@ -97,18 +97,18 @@ class LingotekNodeWithPathTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->assertUploadedDataFieldCount($data, 3);
     $this->assertTrue(isset($data['title'][0]['value']));
-    $this->assertEqual(1, count($data['body'][0]));
+    $this->assertEquals(1, count($data['body'][0]));
     $this->assertTrue(isset($data['body'][0]['value']));
-    $this->assertEqual(1, count($data['path'][0]));
-    $this->assertEqual($data['path'][0]['alias'], '/llamas-are-cool');
+    $this->assertEquals(1, count($data['path'][0]));
+    $this->assertEquals($data['path'][0]['alias'], '/llamas-are-cool');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/llamas-are-cool'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/llamas-are-cool'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('node/1');
@@ -117,29 +117,29 @@ class LingotekNodeWithPathTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas');
-    $this->assertUrl('/es-ar/las-llamas-son-chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas');
+    $this->assertSession()->addressEquals('/es-ar/las-llamas-son-chulas');
   }
 
   /**
@@ -167,17 +167,17 @@ class LingotekNodeWithPathTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->assertUploadedDataFieldCount($data, 2);
     $this->assertTrue(isset($data['title'][0]['value']));
-    $this->assertEqual(1, count($data['body'][0]));
+    $this->assertEquals(1, count($data['body'][0]));
     $this->assertTrue(isset($data['body'][0]['value']));
     $this->assertFalse(isset($data['path']));
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('node/1');
@@ -186,29 +186,29 @@ class LingotekNodeWithPathTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas');
-    $this->assertUrl('/es-ar/node/1');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas');
+    $this->assertSession()->addressEquals('/es-ar/node/1');
   }
 
   /**
@@ -236,18 +236,18 @@ class LingotekNodeWithPathTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->assertUploadedDataFieldCount($data, 3);
     $this->assertTrue(isset($data['title'][0]['value']));
-    $this->assertEqual(1, count($data['body'][0]));
+    $this->assertEquals(1, count($data['body'][0]));
     $this->assertTrue(isset($data['body'][0]['value']));
-    $this->assertEqual(1, count($data['path'][0]));
-    $this->assertEqual($data['path'][0]['alias'], '/llamas-are-cool');
+    $this->assertEquals(1, count($data['path'][0]));
+    $this->assertEquals($data['path'][0]['alias'], '/llamas-are-cool');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/llamas-are-cool'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/llamas-are-cool'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('/llamas-are-cool');
@@ -256,35 +256,35 @@ class LingotekNodeWithPathTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas');
 
     // Test the error is logged.
     $status = (bool) \Drupal::database()->queryRange('SELECT 1 FROM {watchdog} WHERE message = :message', 0, 1, [':message' => "Alias for node Llamas are cool in language es-ar not saved, invalid uri \"an invalid path\""]);
-    $this->assert($status, 'A watchdog message was logged for the invalid uri in a field');
+    $this->assertTrue($status, 'A watchdog message was logged for the invalid uri in a field');
     // Url will be the same as before.
-    $this->assertUrl(\Drupal::request()->getUriForPath('/es-ar/llamas-are-cool'));
-    $this->assertUrl('/es-ar/llamas-are-cool');
+    $this->assertSession()->addressEquals(\Drupal::request()->getUriForPath('/es-ar/llamas-are-cool'));
+    $this->assertSession()->addressEquals('/es-ar/llamas-are-cool');
   }
 
 }
diff --git a/tests/src/Functional/LingotekNodeWithPathautoTranslationTest.php b/tests/src/Functional/LingotekNodeWithPathautoTranslationTest.php
index 8e9353f6..49c67502 100644
--- a/tests/src/Functional/LingotekNodeWithPathautoTranslationTest.php
+++ b/tests/src/Functional/LingotekNodeWithPathautoTranslationTest.php
@@ -100,18 +100,18 @@ class LingotekNodeWithPathautoTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->assertUploadedDataFieldCount($data, 3);
     $this->assertTrue(isset($data['title'][0]['value']));
-    $this->assertEqual(1, count($data['body'][0]));
+    $this->assertEquals(1, count($data['body'][0]));
     $this->assertTrue(isset($data['body'][0]['value']));
-    $this->assertEqual(1, count($data['path'][0]));
-    $this->assertEqual($data['path'][0]['alias'], '/node/llamas-are-cool');
+    $this->assertEquals(1, count($data['path'][0]));
+    $this->assertEquals($data['path'][0]['alias'], '/node/llamas-are-cool');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/llamas-are-cool'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/llamas-are-cool'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('node/llamas-are-cool');
@@ -120,31 +120,31 @@ class LingotekNodeWithPathautoTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
 
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas');
     // Url won't be overwritten by pathauto.
-    $this->assertUrl('/es-ar/las-llamas-son-chulas');
+    $this->assertSession()->addressEquals('/es-ar/las-llamas-son-chulas');
   }
 
   /**
@@ -174,17 +174,17 @@ class LingotekNodeWithPathautoTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->assertUploadedDataFieldCount($data, 2);
     $this->assertTrue(isset($data['title'][0]['value']));
-    $this->assertEqual(1, count($data['body'][0]));
+    $this->assertEquals(1, count($data['body'][0]));
     $this->assertTrue(isset($data['body'][0]['value']));
     $this->assertFalse(isset($data['path']));
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/1'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('node/1');
@@ -193,30 +193,30 @@ class LingotekNodeWithPathautoTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas');
     // Url will be auto-generated by pathauto.
-    $this->assertUrl('/es-ar/node/las-llamas-son-chulas');
+    $this->assertSession()->addressEquals('/es-ar/node/las-llamas-son-chulas');
   }
 
   /**
@@ -244,19 +244,19 @@ class LingotekNodeWithPathautoTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->assertUploadedDataFieldCount($data, 3);
     $this->assertTrue(isset($data['title'][0]['value']));
-    $this->assertEqual(1, count($data['body'][0]));
+    $this->assertEquals(1, count($data['body'][0]));
     $this->assertTrue(isset($data['body'][0]['value']));
-    $this->assertEqual(1, count($data['path'][0]));
+    $this->assertEquals(1, count($data['path'][0]));
     // Pathauto overrides the alias.
-    $this->assertEqual($data['path'][0]['alias'], '/node/llamas-are-cool');
+    $this->assertEquals($data['path'][0]['alias'], '/node/llamas-are-cool');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/llamas-are-cool'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/llamas-are-cool'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('/node/llamas-are-cool');
@@ -265,30 +265,30 @@ class LingotekNodeWithPathautoTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas');
     // The uri is not overridden by pathauto.
-    $this->assertUrl('/es-ar/las-llamas-son-chulas');
+    $this->assertSession()->addressEquals('/es-ar/las-llamas-son-chulas');
   }
 
   /**
@@ -315,18 +315,18 @@ class LingotekNodeWithPathautoTranslationTest extends LingotekTestBase {
     $data = json_decode(\Drupal::state()->get('lingotek.uploaded_content', '[]'), TRUE);
     $this->assertUploadedDataFieldCount($data, 3);
     $this->assertTrue(isset($data['title'][0]['value']));
-    $this->assertEqual(1, count($data['body'][0]));
+    $this->assertEquals(1, count($data['body'][0]));
     $this->assertTrue(isset($data['body'][0]['value']));
-    $this->assertEqual(1, count($data['path'][0]));
-    $this->assertEqual($data['path'][0]['alias'], '/node/llamas-are-cool');
+    $this->assertEquals(1, count($data['path'][0]));
+    $this->assertEquals($data['path'][0]['alias'], '/node/llamas-are-cool');
 
     // Check that the url used was the right one.
     $uploaded_url = \Drupal::state()->get('lingotek.uploaded_url');
-    $this->assertIdentical(\Drupal::request()->getUriForPath('/node/llamas-are-cool'), $uploaded_url, 'The node url was used.');
+    $this->assertSame(\Drupal::request()->getUriForPath('/node/llamas-are-cool'), $uploaded_url, 'The node url was used.');
 
     // Check that the profile used was the right one.
     $used_profile = \Drupal::state()->get('lingotek.used_profile');
-    $this->assertIdentical('automatic', $used_profile, 'The automatic profile was used.');
+    $this->assertSame('automatic', $used_profile, 'The automatic profile was used.');
 
     // Check that the translate tab is in the node.
     $this->drupalGet('node/llamas-are-cool');
@@ -335,33 +335,33 @@ class LingotekNodeWithPathautoTranslationTest extends LingotekTestBase {
     // The document should have been automatically uploaded, so let's check
     // the upload status.
     $this->clickLink('Check Upload Status');
-    $this->assertText('The import for node Llamas are cool is complete.');
+    $this->assertSession()->pageTextContains('The import for node Llamas are cool is complete.');
 
     // Request translation.
     $link = $this->xpath('//a[normalize-space()="Request translation" and contains(@href,"es_AR")]');
     $link[0]->click();
-    $this->assertText("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
+    $this->assertSession()->pageTextContains("Locale 'es_AR' was added as a translation target for node Llamas are cool.");
 
     // Check translation status.
     $this->clickLink('Check translation status');
-    $this->assertText('The es_AR translation for node Llamas are cool is ready for download.');
+    $this->assertSession()->pageTextContains('The es_AR translation for node Llamas are cool is ready for download.');
 
     // Check that the Edit link points to the workbench and it is opened in a new tab.
     $this->assertLingotekWorkbenchLink('es_AR', 'dummy-document-hash-id', 'Edit in Lingotek Workbench');
 
     // Download translation.
     $this->clickLink('Download completed translation');
-    $this->assertText('The translation of node Llamas are cool into es_AR has been downloaded.');
+    $this->assertSession()->pageTextContains('The translation of node Llamas are cool into es_AR has been downloaded.');
 
     // The content is translated and published.
     $this->clickLink('Las llamas son chulas');
-    $this->assertText('Las llamas son chulas');
-    $this->assertText('Las llamas son muy chulas');
+    $this->assertSession()->pageTextContains('Las llamas son chulas');
+    $this->assertSession()->pageTextContains('Las llamas son muy chulas');
     // Url will be auto-generated by pathauto.
-    $this->assertUrl('/es-ar/node/las-llamas-son-chulas');
+    $this->assertSession()->addressEquals('/es-ar/node/las-llamas-son-chulas');
     // Test the error is logged.
     $status = (bool) \Drupal::database()->queryRange('SELECT 1 FROM {watchdog} WHERE message = :message', 0, 1, [':message' => "Alias for node Llamas are cool in language es-ar not saved, invalid uri \"an invalid path\""]);
-    $this->assert($status, 'A watchdog message was logged for the invalid uri in a field');
+    $this->assertTrue($status, 'A watchdog message was logged for the invalid uri in a field');
   }
 
 }
