modules/contrib/entity_inherit/entity_inherit.install
modules/contrib/entity_inherit/src/Annotation/EntityInheritPluginAnnotation.php
modules/contrib/entity_inherit/src/EntityInheritField/EntityInheritFieldId.php
modules/contrib/entity_inherit/src/EntityInheritStorage/EntityInheritStorage.php
modules/contrib/entity_inherit/src/EntityInherit.php
modules/contrib/entity_inherit/entity_inherit.module
modules/contrib/entity_inherit/phpunit-autoload.php
modules/contrib/entity_inherit/phpunit-bootstrap.php
modules/contrib/entity_inherit/src/EntityInheritStorage/EntityInheritStorageInterface.php
modules/contrib/entity_inherit/src/Form/EntityInheritAdminForm.php
modules/contrib/entity_inherit/src/EntityInheritField/EntityInheritFieldInterface.php
modules/contrib/entity_inherit/src/EntityInheritField/EntityInheritFieldList.php
modules/contrib/entity_inherit/scripts/lib/phpstan-drupal/dummy-classes.php
modules/contrib/entity_inherit/src/Plugin/EntityInheritPlugin/EntityInheritAlterFieldsLegacyFormat.php
modules/contrib/entity_inherit/src/Plugin/EntityInheritPlugin/EntityInheritProcessQueue.php
modules/contrib/entity_inherit/src/Plugin/EntityInheritPlugin/EntityInheritRemoveSystemFields.php
modules/contrib/entity_inherit/src/Utilities/EntityInheritanceAntiInfiniteLoop.php
modules/contrib/entity_inherit/src/Utilities/EntityInheritanceAntiInfiniteLoopInterface.php
modules/contrib/entity_inherit/src/Utilities/FriendTrait.php
modules/contrib/entity_inherit/tests/src/Unit/Annotation/EntityInheritPluginAnnotationTest.php
modules/contrib/entity_inherit/src/EntityInheritField/EntityInheritFieldListInterface.php
modules/contrib/entity_inherit/tests/src/Unit/EntityInheritDev/EntityInheritDevTest.php
modules/contrib/entity_inherit/src/EntityInheritFieldValue/EntityInheritFieldValue.php
modules/contrib/entity_inherit/tests/src/Unit/EntityInheritEntity/EntityInheritEntityFactoryTest.php
modules/contrib/entity_inherit/src/EntityInheritFieldValue/EntityInheritFieldValueCollection.php
modules/contrib/entity_inherit/tests/src/Unit/EntityInheritPlugin/EntityInheritPluginBaseTest.php
modules/contrib/entity_inherit/src/EntityInheritFieldValue/EntityInheritFieldValueCollectionInterface.php
modules/contrib/entity_inherit/src/EntityInheritFieldValue/EntityInheritFieldValueFactory.php
modules/contrib/entity_inherit/tests/src/Unit/EntityInheritPlugin/EntityInheritPluginCollectionTest.php
modules/contrib/entity_inherit/src/EntityInheritFieldValue/EntityInheritFieldValueInterface.php
modules/contrib/entity_inherit/src/EntityInheritFieldValue/EntityInheritSingleFieldValueInterface.php
modules/contrib/entity_inherit/tests/src/Unit/EntityInheritPlugin/EntityInheritPluginManagerTest.php
modules/contrib/entity_inherit/src/EntityInheritPlugin/EntityInheritPluginBase.php
modules/contrib/entity_inherit/tests/src/Unit/EntityInheritTest.php
modules/contrib/entity_inherit/src/EntityInheritPlugin/EntityInheritPluginCollection.php
modules/contrib/entity_inherit/tests/src/Unit/EntityInheritTestBase.php
modules/contrib/entity_inherit/tests/src/Unit/Plugin/EntityInheritPlugin/EntityInheritRemoveSystemFieldsTest.php
modules/contrib/entity_inherit/src/EntityInheritPlugin/EntityInheritPluginInterface.php
modules/contrib/entity_inherit/src/EntityInheritPlugin/EntityInheritPluginManager.php
modules/contrib/entity_inherit/src/EntityInheritDev/EntityInheritDev.php
modules/contrib/entity_inherit/src/EntityInheritQueue/EntityInheritQueue.php
modules/contrib/entity_inherit/src/EntityInheritQueue/EntityInheritQueueProcessor.php
modules/contrib/entity_inherit/src/EntityInheritQueue/EntityInheritQueueProcessorBatch.php
modules/contrib/entity_inherit/src/EntityInheritQueue/EntityInheritQueueProcessorFactory.php
modules/contrib/entity_inherit/src/EntityInheritQueue/EntityInheritQueueProcessorInterface.php
modules/contrib/entity_inherit/src/EntityInheritQueue/EntityInheritQueueProcessorNoBatch.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritEntity.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritEntityFactory.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritEntityRevision.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritEntityRevisionInterface.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritEntitySingleInterface.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritExistingEntity.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritExistingEntityCollection.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritExistingEntityCollectionInterface.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritExistingEntityInterface.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritExistingMultipleEntitiesInterface.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritNewEntity.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritOriginalEntity.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritReadableEntityInterface.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritSingleExistingEntityInterface.php
modules/contrib/entity_inherit/src/EntityInheritEntity/EntityInheritUpdatableEntityInterface.php
modules/contrib/entity_inherit/src/EntityInheritField/EntityInheritField.php
modules/contrib/entity_inherit/src/EntityInheritField/EntityInheritFieldFactory.php

6 files with changes
====================

1) modules/contrib/entity_inherit/tests/src/Unit/Plugin/EntityInheritPlugin/EntityInheritRemoveSystemFieldsTest.php:25

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerFilterFields
    */
   public function testFilterFields(string $message, array $input, array $expected) {
-    $object = $this->getMockBuilder(EntityInheritRemoveSystemFields::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(EntityInheritRemoveSystemFields::class);

     $output = $input;
     $object->filterFields($output, $input, 'ignored', $this->mockApp());
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_inherit/tests/src/Unit/EntityInheritTest.php:14

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(EntityInherit::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(EntityInherit::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_inherit/tests/src/Unit/EntityInheritPlugin/EntityInheritPluginManagerTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(EntityInheritPluginManager::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(EntityInheritPluginManager::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_inherit/tests/src/Unit/EntityInheritPlugin/EntityInheritPluginCollectionTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(EntityInheritPluginCollection::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(EntityInheritPluginCollection::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_inherit/tests/src/Unit/EntityInheritDev/EntityInheritDevTest.php:25

    ---------- begin diff ----------
@@ @@
    * @dataProvider providerFormatParents
    */
   public function testFormatParents(string $message, array $input, array $expected) {
-    $object = $this->getMockBuilder(EntityInheritDev::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(EntityInheritDev::class);

     $output = $object->formatParents($input);
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/entity_inherit/tests/src/Unit/Annotation/EntityInheritPluginAnnotationTest.php:15

    ---------- begin diff ----------
@@ @@
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(EntityInheritPluginAnnotation::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(EntityInheritPluginAnnotation::class);

     $this->assertTrue(is_object($object));
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

