modules/contrib/civicccookiecontrol/civiccookiecontrol.install
modules/contrib/civicccookiecontrol/modules/civic_govuk_cookiecontrol/civic_govuk_cookiecontrol.install
modules/contrib/civicccookiecontrol/src/Form/Buttons/CCCFlushFormCacheButton.php
modules/contrib/civicccookiecontrol/src/AltLanguageInterface.php
modules/contrib/civicccookiecontrol/src/Form/NecessaryCookieForm.php
modules/contrib/civicccookiecontrol/src/CCCConfig/AbstractCCCConfig.php
modules/contrib/civicccookiecontrol/src/Form/Buttons/CCCLicenseInfoButton.php
modules/contrib/civicccookiecontrol/src/Form/Buttons/CCCSettingsButton.php
modules/contrib/civicccookiecontrol/src/Form/Buttons/CCCSubmitButton.php
modules/contrib/civicccookiecontrol/src/Form/CCCFormHelper.php
modules/contrib/civicccookiecontrol/modules/civic_govuk_cookiecontrol/civic_govuk_cookiecontrol.module
modules/contrib/civicccookiecontrol/modules/civic_govuk_cookiecontrol/src/Form/CivicGovUkCookieControlSettings.php
modules/contrib/civicccookiecontrol/src/Form/CivicCookieControlSettings.php
modules/contrib/civicccookiecontrol/src/Form/Steps/CCCBaseStep.php
modules/contrib/civicccookiecontrol/src/Form/Steps/CCCLicenseInfo.php
modules/contrib/civicccookiecontrol/src/Form/Steps/CCCSettings.php
modules/contrib/civicccookiecontrol/modules/civic_govuk_cookiecontrol/src/GovUKConfigNames.php
modules/contrib/civicccookiecontrol/modules/civic_govuk_cookiecontrol/src/Plugin/Block/CivicGovUkCookieControlBannerBlock.php
modules/contrib/civicccookiecontrol/src/CCCConfig/CCC8Config.php
modules/contrib/civicccookiecontrol/src/Form/CookieCategoryDeleteForm.php
modules/contrib/civicccookiecontrol/civiccookiecontrol.module
modules/contrib/civicccookiecontrol/src/Form/CookieCategoryForm.php
modules/contrib/civicccookiecontrol/src/CCCConfig/CCC9Config.php
modules/contrib/civicccookiecontrol/src/Form/Steps/CCCStepInterface.php
modules/contrib/civicccookiecontrol/src/Form/Steps/CCCStepsEnum.php
modules/contrib/civicccookiecontrol/src/Form/Steps/CCCStepsManager.php
modules/contrib/civicccookiecontrol/src/NecessaryCookieInterface.php
modules/contrib/civicccookiecontrol/modules/civic_govuk_cookiecontrol/src/Plugin/Block/CivicGovUkCookieControlDetailsBlock.php
modules/contrib/civicccookiecontrol/src/Access/CookieControlAccess.php
modules/contrib/civicccookiecontrol/src/Access/IAB1Access.php
modules/contrib/civicccookiecontrol/src/Access/IAB2Access.php
modules/contrib/civicccookiecontrol/src/Access/IAB2EnabledAccess.php
modules/contrib/civicccookiecontrol/src/Form/ExcludedCountryDeleteForm.php
modules/contrib/civicccookiecontrol/src/Form/ExcludedCountryForm.php
modules/contrib/civicccookiecontrol/src/Form/IAB1Settings.php
modules/contrib/civicccookiecontrol/src/CCCConfig/CCCConfigFactory.php
modules/contrib/civicccookiecontrol/src/CCCConfigNames.php
modules/contrib/civicccookiecontrol/src/Controller/AltLanguageListBuilder.php
modules/contrib/civicccookiecontrol/src/Controller/CookieCategoryListBuilder.php
modules/contrib/civicccookiecontrol/src/Form/IAB2Settings.php
modules/contrib/civicccookiecontrol/src/Controller/ExcludedCountryListBuilder.php
modules/contrib/civicccookiecontrol/src/Controller/NecessaryCookieListBuilder.php
modules/contrib/civicccookiecontrol/src/CookieCategoryInterface.php
modules/contrib/civicccookiecontrol/src/Entity/AltLanguage.php
modules/contrib/civicccookiecontrol/src/Form/NecessaryCookieDeleteForm.php
modules/contrib/civicccookiecontrol/src/Entity/CookieCategory.php
modules/contrib/civicccookiecontrol/src/Entity/ExcludedCountry.php
modules/contrib/civicccookiecontrol/src/Entity/NecessaryCookie.php
modules/contrib/civicccookiecontrol/src/ExcludedCountryInterface.php
modules/contrib/civicccookiecontrol/src/Form/AltLanguageDeleteForm.php
modules/contrib/civicccookiecontrol/src/Form/AltLanguageForm.php
modules/contrib/civicccookiecontrol/src/Form/Buttons/CCCBaseButton.php
modules/contrib/civicccookiecontrol/src/Form/Buttons/CCCButtonInterface.php

5 files with changes
====================

1) modules/contrib/civicccookiecontrol/src/Form/Steps/CCCSettings.php:300

    ---------- begin diff ----------
@@ @@
         }

         if (empty($element['#placeholder']) && ($key == 'civiccookiecontrol_button_icon')) {
-          $element['#placeholder'] = $base_url . file_url_transform_relative(file_create_url(
-                theme_get_setting('logo.url', $this->config->get('default'))
-            ));
+          $element['#placeholder'] = $base_url . \Drupal::service('file_url_generator')->generateString(theme_get_setting('logo.url', $this->config->get('default')));
         }

         if (array_key_exists('#format', $element) && $element['#format'] == 'full_html') {
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/civicccookiecontrol/src/Form/Steps/CCCBaseStep.php:146

    ---------- begin diff ----------
@@ @@
     $cccFormElements = $this->tempStore->get('cccFormElements');

     if (empty($cccFormElements)) {
-      $ymlFiles = $this->fileSystem->scanDirectory(DRUPAL_ROOT . '/' . drupal_get_path('module', 'civiccookiecontrol') . "/src/Form/CookieControlFormElements", '/.*\.yml$/');
+      $ymlFiles = $this->fileSystem->scanDirectory(DRUPAL_ROOT . '/' . \Drupal::service('extension.list.module')->getPath('civiccookiecontrol') . "/src/Form/CookieControlFormElements", '/.*\.yml$/');
       foreach ($ymlFiles as $file_path => $ymlFile) {
         $file_contents = file_get_contents($file_path);
         $formItems = Yaml::parse($file_contents);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


3) modules/contrib/civicccookiecontrol/civiccookiecontrol.module:95

    ---------- begin diff ----------
@@ @@
   $is_admin = \Drupal::service('router.admin_context')->isAdminRoute($route);

   $page['#attached']['drupalSettings']['path'] = [
-    'civiccookiecontrol_path' => drupal_get_path('module', 'civiccookiecontrol'),
+    'civiccookiecontrol_path' => \Drupal::service('extension.list.module')->getPath('civiccookiecontrol'),
   ];
   if (!$is_admin || $cccConfig->get('civiccookiecontrol_drupal_admin')) {
     $page['#attached']['drupalSettings']['civiccookiecontrol'] = CCCConfigFactory::getCccConfig($cccConfig->get('civiccookiecontrol_api_key_version'))->getCccConfigJson();
@@ @@
  */
 function civiccookiecontrol_set_ccclogo(array &$variables) {
   global $base_url;
-  $variables['ccc_logo'] = $base_url . '/' . drupal_get_path('module', 'civiccookiecontrol') . '/images/CookieControlCivic.png';
+  $variables['ccc_logo'] = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('civiccookiecontrol') . '/images/CookieControlCivic.png';
 }

 /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


4) modules/contrib/civicccookiecontrol/modules/civic_govuk_cookiecontrol/src/Form/CivicGovUkCookieControlSettings.php:204

    ---------- begin diff ----------
@@ @@
    *   Current language string.
    */
   protected function loadSettings(array &$form, $langCode, $lang) {
-    $iabYamlPath = drupal_get_path(
-          'module',
-          'civic_govuk_cookiecontrol'
-      ) .
+    $iabYamlPath = \Drupal::service('extension.list.module')->getPath('civic_govuk_cookiecontrol') .
           "/src/Form/GovUkFormElements/civic_govuk_cookiecontrol.texts.yml";

     $formItems = Yaml::parse(file_get_contents($iabYamlPath));
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/civicccookiecontrol/src/Form/IAB2Settings.php:171

    ---------- begin diff ----------
@@ @@
    * Loads IAB 2.0 form elements from the corresponding twig file.
    */
   protected function loadIabSettings(&$form) {
-    $iabYamlPath = drupal_get_path('module', 'civiccookiecontrol') . "/src/Form/IAB2FormElements/iab.settings.yml";
+    $iabYamlPath = \Drupal::service('extension.list.module')->getPath('civiccookiecontrol') . "/src/Form/IAB2FormElements/iab.settings.yml";
     $formItems = Yaml::parse(file_get_contents($iabYamlPath));
     foreach ($formItems as $key => $element) {
       if (array_key_exists('#format', $element) && $element['#format'] == 'full_html') {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

