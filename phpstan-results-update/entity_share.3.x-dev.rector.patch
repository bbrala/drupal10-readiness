diff --git a/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php b/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php
index 0b26071..577de62 100644
--- a/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php
+++ b/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php
@@ -4,8 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\entity_share_client\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Field\FieldItemListInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines a RelationshipFieldValueEvent event.
diff --git a/modules/entity_share_client/src/Plugin/EntityShareClient/Processor/EntityReference.php b/modules/entity_share_client/src/Plugin/EntityShareClient/Processor/EntityReference.php
index f17e2db..49966ca 100644
--- a/modules/entity_share_client/src/Plugin/EntityShareClient/Processor/EntityReference.php
+++ b/modules/entity_share_client/src/Plugin/EntityShareClient/Processor/EntityReference.php
@@ -169,7 +169,7 @@ class EntityReference extends ImportProcessorPluginBase implements PluginFormInt
 
             // Allow to alter the field value with an event.
             $event = new RelationshipFieldValueEvent($field, $field_value);
-            $this->eventDispatcher->dispatch(RelationshipFieldValueEvent::EVENT_NAME, $event);
+            $this->eventDispatcher->dispatch($event, RelationshipFieldValueEvent::EVENT_NAME);
             $field_values[] = $event->getFieldValue();
           }
         }
diff --git a/modules/entity_share_client/tests/src/Functional/EmbeddedEntityTest.php b/modules/entity_share_client/tests/src/Functional/EmbeddedEntityTest.php
index 4135bdf..86357d6 100644
--- a/modules/entity_share_client/tests/src/Functional/EmbeddedEntityTest.php
+++ b/modules/entity_share_client/tests/src/Functional/EmbeddedEntityTest.php
@@ -197,7 +197,7 @@ class EmbeddedEntityTest extends EntityShareClientFunctionalTestBase {
    * Bug in PHPMD, @see https://github.com/phpmd/phpmd/issues/714
    */
   protected function getEmbeddedTextValue() {
-    $image_src = file_url_transform_relative(file_create_url(static::$filesData['file_image']['uri']));
+    $image_src = \Drupal::service('file_url_generator')->generateString(static::$filesData['file_image']['uri']);
 
     $value = <<<EOT
 <p>Test image</p>
diff --git a/modules/entity_share_client/tests/src/Functional/EntityShareClientFunctionalTestBase.php b/modules/entity_share_client/tests/src/Functional/EntityShareClientFunctionalTestBase.php
index 91abd5a..0296bb1 100644
--- a/modules/entity_share_client/tests/src/Functional/EntityShareClientFunctionalTestBase.php
+++ b/modules/entity_share_client/tests/src/Functional/EntityShareClientFunctionalTestBase.php
@@ -1081,7 +1081,7 @@ abstract class EntityShareClientFunctionalTestBase extends BrowserTestBase {
    *   The file data as in static::filesData.
    */
   protected function getMediaEntityReferenceTestFiles($file_uuid, array $file_data) {
-    $filepath = drupal_get_path('module', 'entity_share') . '/tests/fixtures/files/' . $file_data['filename'];
+    $filepath = \Drupal::service('extension.list.module')->getPath('entity_share') . '/tests/fixtures/files/' . $file_data['filename'];
     $this->fileSystem->copy($filepath, PublicStream::basePath());
     $this->filesSize[$file_uuid] = filesize($filepath);
   }
diff --git a/modules/entity_share_server/src/Controller/EntryPoint.php b/modules/entity_share_server/src/Controller/EntryPoint.php
index 3eaacf8..188e05c 100644
--- a/modules/entity_share_server/src/Controller/EntryPoint.php
+++ b/modules/entity_share_server/src/Controller/EntryPoint.php
@@ -108,7 +108,7 @@ class EntryPoint extends ControllerBase {
 
     // Collect other channel definitions.
     $event = new ChannelListEvent($data);
-    $this->eventDispatcher->dispatch(ChannelListEvent::EVENT_NAME, $event);
+    $this->eventDispatcher->dispatch($event, ChannelListEvent::EVENT_NAME);
 
     return new JsonResponse([
       'data' => $event->getChannelList(),
diff --git a/modules/entity_share_server/src/Event/ChannelListEvent.php b/modules/entity_share_server/src/Event/ChannelListEvent.php
index 887888d..5fa81c2 100644
--- a/modules/entity_share_server/src/Event/ChannelListEvent.php
+++ b/modules/entity_share_server/src/Event/ChannelListEvent.php
@@ -4,7 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\entity_share_server\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Allows to alter the list of channels provided by the website.
