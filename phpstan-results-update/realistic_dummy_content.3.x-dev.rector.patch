diff --git a/api/realistic_dummy_content_api.module b/api/realistic_dummy_content_api.module
index c3b7218..5983143 100644
--- a/api/realistic_dummy_content_api.module
+++ b/api/realistic_dummy_content_api.module
@@ -116,7 +116,7 @@ function realistic_dummy_content_api_entity_presave($entity) {
   // Hook implementations should never throw exceptions, so we'll catch them
   // all here.
   catch (\Throwable $e) {
-    drupal_set_message($e->getMessage());
+    \Drupal::messenger()->addStatus($e->getMessage());
   }
 }
 
diff --git a/api/src/Framework/Drupal8.php b/api/src/Framework/Drupal8.php
index ddf3fe0..7ce50f4 100644
--- a/api/src/Framework/Drupal8.php
+++ b/api/src/Framework/Drupal8.php
@@ -349,7 +349,7 @@ class Drupal8 extends Framework implements FrameworkInterface {
    * {@inheritdoc}
    */
   public function getPath($type, $name) {
-    return drupal_get_path($type, $name);
+    return \Drupal::service('extension.path.resolver')->getPath($type, $name);
   }
 
   /**
diff --git a/api/src/includes/RealisticDummyContentAttribute.php b/api/src/includes/RealisticDummyContentAttribute.php
index 8b63bb1..af753c5 100644
--- a/api/src/includes/RealisticDummyContentAttribute.php
+++ b/api/src/includes/RealisticDummyContentAttribute.php
@@ -181,7 +181,7 @@ abstract class RealisticDummyContentAttribute {
   public function getCandidateFiles() {
     $files = [];
     foreach (Framework::instance()->moduleList() as $module) {
-      $filepath = DRUPAL_ROOT . '/' . drupal_get_path('module', $module) . '/realistic_dummy_content/fields/' . $this->getEntityType() . '/' . $this->getBundle() . '/' . $this->getName();
+      $filepath = DRUPAL_ROOT . '/' . \Drupal::service('extension.list.module')->getPath($module) . '/realistic_dummy_content/fields/' . $this->getEntityType() . '/' . $this->getBundle() . '/' . $this->getName();
       $files = array_merge($files, RealisticDummyContentEnvironment::getAllFileGroups($filepath, $this->getExtensions()));
     }
     return $files;
diff --git a/api/src/includes/RealisticDummyContentLiveEnvironment.php b/api/src/includes/RealisticDummyContentLiveEnvironment.php
index afbfa35..585552c 100644
--- a/api/src/includes/RealisticDummyContentLiveEnvironment.php
+++ b/api/src/includes/RealisticDummyContentLiveEnvironment.php
@@ -26,7 +26,7 @@ class RealisticDummyContentLiveEnvironment extends RealisticDummyContentEnvironm
    * {@inheritdoc}
    */
   public function implementFileSaveData($data, $destination = NULL) {
-    return file_save_data($data, $destination);
+    return \Drupal::service('file.repository')->writeData($data, $destination);
   }
 
 }
diff --git a/api/tests/src/Unit/Framework/Drupal8Test.php b/api/tests/src/Unit/Framework/Drupal8Test.php
index 09ae524..d1c0816 100644
--- a/api/tests/src/Unit/Framework/Drupal8Test.php
+++ b/api/tests/src/Unit/Framework/Drupal8Test.php
@@ -30,11 +30,7 @@ class Drupal8Test extends TestCase {
    * @dataProvider providerSetEntityProperty
    */
   public function testSetEntityProperty(string $message, $entity, $property, $value, $expected) {
-    $object = $this->getMockBuilder(Drupal8::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(Drupal8::class);
 
     $output = $entity;
     $object->setEntityProperty($output, $property, $value);
diff --git a/api/tests/src/Unit/includes/RealisticDummyContentTermReferenceFieldTest.php b/api/tests/src/Unit/includes/RealisticDummyContentTermReferenceFieldTest.php
index fabaceb..983bf91 100644
--- a/api/tests/src/Unit/includes/RealisticDummyContentTermReferenceFieldTest.php
+++ b/api/tests/src/Unit/includes/RealisticDummyContentTermReferenceFieldTest.php
@@ -53,18 +53,7 @@ class RealisticDummyContentTermReferenceFieldTest extends TestCase {
    */
   public function testGetTid(string $message, array $vocabularies, array $field_info, bool $expect_exception, string $name, $expected) {
 
-    $object = $this->getMockBuilder(RealisticDummyContentTermReferenceField::class)
-      ->setMethods([
-        'getAllVocabularies',
-        'fieldInfoField',
-        'vocabularyMachineName',
-        'taxonomyLoadTree',
-        'termId',
-        'termName',
-        'newVocabularyTerm',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(RealisticDummyContentTermReferenceField::class);
     $object->method('getAllVocabularies')
       ->willReturn($vocabularies);
     $object->method('newVocabularyTerm')
diff --git a/api/tests/src/Unit/includes/RealisticDummyContentValueFieldTest.php b/api/tests/src/Unit/includes/RealisticDummyContentValueFieldTest.php
index 3b3a08b..de7721f 100644
--- a/api/tests/src/Unit/includes/RealisticDummyContentValueFieldTest.php
+++ b/api/tests/src/Unit/includes/RealisticDummyContentValueFieldTest.php
@@ -16,11 +16,7 @@ class RealisticDummyContentValueFieldTest extends TestCase {
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(RealisticDummyContentValueField::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(RealisticDummyContentValueField::class);
 
     $this->assertTrue(is_object($object));
   }
