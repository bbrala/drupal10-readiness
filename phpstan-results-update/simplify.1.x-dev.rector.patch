diff --git a/simplify.info.yml b/simplify.info.yml
index a999f6a..3975f35 100644
--- a/simplify.info.yml
+++ b/simplify.info.yml
@@ -2,6 +2,5 @@ name: Simplify
 type: module
 description: 'Simplifies the user interface by hiding particular fields.'
 package: User interface
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 configure: simplify.admin
diff --git a/simplify.module b/simplify.module
index 8aad41a..91dd654 100644
--- a/simplify.module
+++ b/simplify.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityBase;
 /**
  * @file
  * Hooks implemented by the simplify module.
@@ -328,7 +329,7 @@ function simplify_field_widget_comment_default_form_alter(&$element, FormStateIn
   $entity = $form_state->getFormObject()->getEntity();
   $entity_type = $entity->getEntityTypeId();
   $entity_bundle_type= NULL;
-  if ($entity instanceof \Drupal\Core\Entity\ContentEntityBase) {
+  if ($entity instanceof ContentEntityBase) {
     $type = $entity->type;
     $entity_bundle_type = $type ? $type->entity : NULL;
   }
@@ -347,7 +348,7 @@ function simplify_field_widget_comment_default_form_alter(&$element, FormStateIn
 /**
  * Implements hook_field_widget_form_alter().
  */
-function simplify_field_widget_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context) {
+function simplify_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
 
 }
 
diff --git a/src/Tests/GlobalSettingsTest.php b/src/Tests/GlobalSettingsTest.php
index fe8e50e..9bfa494 100644
--- a/src/Tests/GlobalSettingsTest.php
+++ b/src/Tests/GlobalSettingsTest.php
@@ -34,7 +34,7 @@ class GlobalSettingsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $admin_user = $this->drupalCreateUser(['administer simplify']);
     $this->drupalLogin($admin_user);
@@ -53,20 +53,20 @@ class GlobalSettingsTest extends BrowserTestBase {
      */
 
     // Admin user option.
-    $this->assertField('edit-simplify-admin', 'Admin user option is here.');
-    $this->assertNoFieldChecked('edit-simplify-admin', 'Admin user option is unchecked.');
+    $this->assertSession()->fieldExists('edit-simplify-admin', 'Admin user option is here.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-admin', 'Admin user option is unchecked.');
     // Node globals.
-    $this->assertNoRaw('Nodes', 'Nodes options are not available.');
-    $this->assertNoField('edit-simplify-nodes-global-author', 'Author option is not available.');
+    $this->assertSession()->responseNotContains('Nodes');
+    $this->assertSession()->fieldNotExists('edit-simplify-nodes-global-author', 'Author option is not available.');
     // User globals.
-    $this->assertRaw('Users', 'Users options are not available.');
-    $this->assertNoFieldChecked('edit-simplify-users-global-format', 'Text selection option is not available.');
+    $this->assertSession()->responseContains('Users');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-users-global-format', 'Text selection option is not available.');
     // Taxonomy is not here.
-    $this->assertNoRaw('Taxonomy', 'Taxonomy options are not available.');
-    $this->assertNoField('edit-simplify-taxonomy-global-format', 'Text selection from taxonomy option is not available.');
+    $this->assertSession()->responseNotContains('Taxonomy');
+    $this->assertSession()->fieldNotExists('edit-simplify-taxonomy-global-format', 'Text selection from taxonomy option is not available.');
     // Blocks is not here.
-    $this->assertNoRaw('Block', 'Blocks options are now available.');
-    $this->assertNoField('edit-simplify-blocks-global-format', 'Text format option is not available.');
+    $this->assertSession()->responseNotContains('Block');
+    $this->assertSession()->fieldNotExists('edit-simplify-blocks-global-format', 'Text format option is not available.');
 
     /* -------------------------------------------------------.
      * 2/ Check optionnal options are added if modules becomes available.
@@ -83,23 +83,23 @@ class GlobalSettingsTest extends BrowserTestBase {
     ], TRUE);
     $this->drupalGet('/admin/config/user-interface/simplify');
     // Node globals.
-    $this->assertRaw('Nodes', 'Nodes options are now available.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-global-author', 'Author option is unchecked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-global-format', 'Format option is unchecked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-global-options', 'Publishing option is unchecked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-global-revision-information', 'Revision option is unchecked.');
+    $this->assertSession()->responseContains('Nodes');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-global-author', 'Author option is unchecked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-global-format', 'Format option is unchecked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-global-options', 'Publishing option is unchecked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-global-revision-information', 'Revision option is unchecked.');
     // User globals.
-    $this->assertRaw('Users', 'Users options are now available.');
-    $this->assertNoFieldChecked('edit-simplify-users-global-format', 'Text selection option is unchecked.');
-    $this->assertNoFieldChecked('edit-simplify-users-global-status', 'Status option is unchecked.');
+    $this->assertSession()->responseContains('Users');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-users-global-format', 'Text selection option is unchecked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-users-global-status', 'Status option is unchecked.');
     // Taxonomy is not here.
-    $this->assertRaw('Taxonomy', 'Taxonomy options are now available.');
-    $this->assertNoFieldChecked('edit-simplify-taxonomies-global-format', 'Taxonomy selection option is unchecked.');
-    $this->assertNoFieldChecked('edit-simplify-taxonomies-global-relations', 'Taxonomy relation option is unchecked.');
-    $this->assertNoFieldChecked('edit-simplify-taxonomies-global-path', 'Taxonomy url alias option is unchecked.');
+    $this->assertSession()->responseContains('Taxonomy');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-taxonomies-global-format', 'Taxonomy selection option is unchecked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-taxonomies-global-relations', 'Taxonomy relation option is unchecked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-taxonomies-global-path', 'Taxonomy url alias option is unchecked.');
     // Blocks is not here.
-    $this->assertRaw('Block', 'Blocks options are now available.');
-    $this->assertNoFieldChecked('edit-simplify-blocks-global-format', 'Text format option is unchecked.');
+    $this->assertSession()->responseContains('Block');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-blocks-global-format', 'Text format option is unchecked.');
 
     /*  -------------------------------------------------------.
      * 3/ Check and validate some options.
@@ -113,22 +113,22 @@ class GlobalSettingsTest extends BrowserTestBase {
       'simplify_taxonomies_global[format]' => 'format',
       'simplify_taxonomies_global[path]' => 'path',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save configuration'));
+    $this->submitForm($options, $this->t('Save configuration'));
     // User1.
-    $this->assertFieldChecked('edit-simplify-admin', 'Admin user option is checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-admin', 'Admin user option is checked.');
     // Nodes.
-    $this->assertFieldChecked('edit-simplify-nodes-global-author', 'Node authoring information option is checked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-global-format', 'Node text fomat selection option is not checked.');
-    $this->assertFieldChecked('edit-simplify-nodes-global-options', 'Node promoting options option is checked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-global-revision-information', 'Node revision information option is not checked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-global-book', 'Node book outline option is not checked.');
-    $this->assertFieldChecked('edit-simplify-nodes-global-comment', 'Node comment settings option is checked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-global-menu', 'Node menu settings option is not checked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-global-path-settings', 'Node URL path settings option is not checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-nodes-global-author', 'Node authoring information option is checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-global-format', 'Node text fomat selection option is not checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-nodes-global-options', 'Node promoting options option is checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-global-revision-information', 'Node revision information option is not checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-global-book', 'Node book outline option is not checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-nodes-global-comment', 'Node comment settings option is checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-global-menu', 'Node menu settings option is not checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-global-path-settings', 'Node URL path settings option is not checked.');
     // Vocabularies.
-    $this->assertFieldChecked('edit-simplify-taxonomies-global-format', 'Taxonomy text fomat selection option is checked.');
-    $this->assertNoFieldChecked('edit-simplify-taxonomies-global-relations', 'Taxonomy relation option is not checked.');
-    $this->assertFieldChecked('edit-simplify-taxonomies-global-path', 'Taxonomy url alias option is checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-taxonomies-global-format', 'Taxonomy text fomat selection option is checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-taxonomies-global-relations', 'Taxonomy relation option is not checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-taxonomies-global-path', 'Taxonomy url alias option is checked.');
   }
 
 }
diff --git a/src/Tests/PerBlockTypeSettingsTest.php b/src/Tests/PerBlockTypeSettingsTest.php
index 32098fc..f73f51a 100644
--- a/src/Tests/PerBlockTypeSettingsTest.php
+++ b/src/Tests/PerBlockTypeSettingsTest.php
@@ -35,7 +35,7 @@ class PerBlockTypeSettingsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create an admin user.
@@ -56,8 +56,8 @@ class PerBlockTypeSettingsTest extends BrowserTestBase {
      */
     $this->drupalGet('block/add');
 
-    $this->assertRaw('About text formats', 'Text format option is defined.');
-    $this->assertRaw('Revision information', 'Revision option is defined.');
+    $this->assertSession()->responseContains('About text formats');
+    $this->assertSession()->responseContains('Revision information');
 
     /* -------------------------------------------------------.
      * 1/ Check if everything is there but unchecked.
@@ -69,9 +69,9 @@ class PerBlockTypeSettingsTest extends BrowserTestBase {
       'simplify_admin' => TRUE,
       'simplify_blocks_global[format]' => 'format',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save configuration'));
+    $this->submitForm($options, $this->t('Save configuration'));
     // Admin users setting.
-    $this->assertFieldChecked('edit-simplify-admin', "Admin users can't see hidden fields too.");
+    $this->assertSession()->checkboxChecked('edit-simplify-admin', "Admin users can't see hidden fields too.");
 
     /* -------------------------------------------------------.
      * 2/ Check the effect on block-type settings.
@@ -81,8 +81,8 @@ class PerBlockTypeSettingsTest extends BrowserTestBase {
     $this->drupalGet('admin/structure/block/block-content/manage/testing_type');
 
     // Blocks.
-    $this->assertFieldChecked('edit-simplify-blocks-format', 'Block text format option is checked.');
-    $this->assertNoFieldChecked('edit-simplify-blocks-revision-information', 'Block revision information option is not checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-blocks-format', 'Block text format option is checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-blocks-revision-information', 'Block revision information option is not checked.');
 
     /* -------------------------------------------------------.
      * 2-bis/ Check if everything is properly disabled if needed.
@@ -103,21 +103,21 @@ class PerBlockTypeSettingsTest extends BrowserTestBase {
     $options = [
       'simplify_blocks[revision_information]' => 'format',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save'));
+    $this->submitForm($options, $this->t('Save'));
 
     /* -------------------------------------------------------.
      * 3-bis/ Check if options are saved.
      */
     $this->drupalGet('/admin/structure/block/block-content/manage/testing_type');
-    $this->assertFieldChecked('edit-simplify-blocks-revision-information', 'Block revision information option is checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-blocks-revision-information', 'Block revision information option is checked.');
 
     /* -------------------------------------------------------.
      * 4/ Check The effect of all this on node form.
      */
     $this->drupalGet('block/add/testing_type');
 
-    $this->assertNoRaw('About text formats', 'Text format option is not defined.');
-    $this->assertNoRaw('Revision information', 'Revision option is not defined.');
+    $this->assertSession()->responseNotContains('About text formats');
+    $this->assertSession()->responseNotContains('Revision information');
   }
 
   /**
diff --git a/src/Tests/PerCommentTypeSettingsTest.php b/src/Tests/PerCommentTypeSettingsTest.php
index 5c11cbc..7a10f96 100644
--- a/src/Tests/PerCommentTypeSettingsTest.php
+++ b/src/Tests/PerCommentTypeSettingsTest.php
@@ -43,7 +43,7 @@ class PerCommentTypeSettingsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create two test users.
@@ -86,7 +86,7 @@ class PerCommentTypeSettingsTest extends BrowserTestBase {
 
     // Check if options are there.
     $this->drupalGet("/node/" . $node->id());
-    $this->assertRaw('About text formats', 'Comment text format option is defined.');
+    $this->assertSession()->responseContains('About text formats');
 
     /* -------------------------------------------------------.
      * 1/ Activate some global options and check "per comment-type" accordingly.
@@ -98,13 +98,13 @@ class PerCommentTypeSettingsTest extends BrowserTestBase {
       'simplify_admin' => TRUE,
       'simplify_comments_global[format]' => 'format',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save configuration'));
+    $this->submitForm($options, $this->t('Save configuration'));
 
     // Open admin UI.
     $this->drupalGet('/admin/structure/comment/manage/comment');
 
     // Check if global options are forwarded.
-    $this->assertFieldChecked('edit-simplify-comments-format', 'Comment text fomat selection option is checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-comments-format', 'Comment text fomat selection option is checked.');
 
     // Check if everything is properly disabled if needed.
     $text_format = $this->xpath('//input[@name="simplify_comments[format]" and @disabled="disabled"]');
@@ -119,13 +119,13 @@ class PerCommentTypeSettingsTest extends BrowserTestBase {
       'simplify_admin' => TRUE,
       'simplify_comments_global[format]' => FALSE,
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save configuration'));
+    $this->submitForm($options, $this->t('Save configuration'));
 
     // Open admin UI.
     $this->drupalGet('/admin/structure/comment/manage/comment');
 
     // Check if global options are forwarded.
-    $this->assertNoFieldChecked('edit-simplify-comments-format', 'Comment text fomat selection option is not checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-comments-format', 'Comment text fomat selection option is not checked.');
 
     /* -------------------------------------------------------.
      * 3/ Save some custom options.
@@ -135,19 +135,19 @@ class PerCommentTypeSettingsTest extends BrowserTestBase {
     $options = [
       'simplify_comments[format]' => 'format',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save'));
+    $this->submitForm($options, $this->t('Save'));
 
     /* -------------------------------------------------------.
      * 4/ Check if options are saved.
      */
     $this->drupalGet('/admin/structure/comment/manage/comment');
-    $this->assertFieldChecked('edit-simplify-comments-format', 'Comment text fomat selection option is checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-comments-format', 'Comment text fomat selection option is checked.');
 
     /*
      * 5/ Check if comment form is now simplified.
      */
     $this->drupalGet("/node/" . $node->id());
-    $this->assertNoRaw('About text formats', 'Comment text format option is not defined.');
+    $this->assertSession()->responseNotContains('About text formats');
   }
 
 }
diff --git a/src/Tests/PerContentTypeSettingsTest.php b/src/Tests/PerContentTypeSettingsTest.php
index e673a5b..004544f 100644
--- a/src/Tests/PerContentTypeSettingsTest.php
+++ b/src/Tests/PerContentTypeSettingsTest.php
@@ -41,7 +41,7 @@ class PerContentTypeSettingsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create an admin user.
@@ -65,11 +65,11 @@ class PerContentTypeSettingsTest extends BrowserTestBase {
      */
     $this->drupalGet('node/add/testing_type');
 
-    $this->assertRaw('About text formats', 'Text format option is defined.');
-    $this->assertRaw('Menu settings', 'Menu settings option is defined.');
-    $this->assertRaw('URL path settings', 'URL path settings option is defined.');
-    $this->assertRaw('Authoring information', 'Authoring information option is defined.');
-    $this->assertRaw('Promotion options', 'Promotion options option is defined.');
+    $this->assertSession()->responseContains('About text formats');
+    $this->assertSession()->responseContains('Menu settings');
+    $this->assertSession()->responseContains('URL path settings');
+    $this->assertSession()->responseContains('Authoring information');
+    $this->assertSession()->responseContains('Promotion options');
 
     /* -------------------------------------------------------.
      * 1/ Check if everything is there but unchecked.
@@ -83,9 +83,9 @@ class PerContentTypeSettingsTest extends BrowserTestBase {
       'simplify_nodes_global[comment]' => 'comment',
       'simplify_nodes_global[options]' => 'options',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save configuration'));
+    $this->submitForm($options, $this->t('Save configuration'));
     // Admin users setting.
-    $this->assertFieldChecked('edit-simplify-admin', "Admin users can't see hidden fields too.");
+    $this->assertSession()->checkboxChecked('edit-simplify-admin', "Admin users can't see hidden fields too.");
 
     /* -------------------------------------------------------.
      * 2/ Check the effect on content-type settingss.
@@ -95,11 +95,11 @@ class PerContentTypeSettingsTest extends BrowserTestBase {
     $this->drupalGet('/admin/structure/types/manage/testing_type');
 
     // Nodes.
-    $this->assertFieldChecked('edit-simplify-nodes-author', 'Node authoring information option is checked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-format', 'Node text fomat selection option is not checked.');
-    $this->assertFieldChecked('edit-simplify-nodes-options', 'Node promoting options option is checked.');
-    $this->assertNoFieldChecked('edit-simplify-nodes-revision-information', 'Node revision information option is not checked.');
-    $this->assertFieldChecked('edit-simplify-nodes-comment', 'Node comment settings option is checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-nodes-author', 'Node authoring information option is checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-format', 'Node text fomat selection option is not checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-nodes-options', 'Node promoting options option is checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-nodes-revision-information', 'Node revision information option is not checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-nodes-comment', 'Node comment settings option is checked.');
 
     /* -------------------------------------------------------.
      * 2-bis/ Check if everything is properly disabled if needed.
@@ -129,24 +129,24 @@ class PerContentTypeSettingsTest extends BrowserTestBase {
     $options = [
       'simplify_nodes[format]' => 'format',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save content type'));
+    $this->submitForm($options, $this->t('Save content type'));
 
     /* -------------------------------------------------------.
      * 3-bis/ Check if options are saved.
      */
     $this->drupalGet('admin/structure/types/manage/testing_type');
-    $this->assertFieldChecked('edit-simplify-nodes-format', 'Node text fomat selection option is checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-nodes-format', 'Node text fomat selection option is checked.');
 
     /* -------------------------------------------------------.
      * 4/ Check The effect of all this on node form.
      */
     $this->drupalGet('node/add/testing_type');
 
-    $this->assertNoRaw('About text formats', 'Text format option is not defined.');
-    $this->assertRaw('Menu settings', 'Menu settings option is defined.');
-    $this->assertRaw('URL path settings', 'URL path settings option is defined.');
-    $this->assertNoRaw('Authoring information', 'Authoring information option is not defined.');
-    $this->assertNoRaw('Promotion options', 'Promotion options option is not defined.');
+    $this->assertSession()->responseNotContains('About text formats');
+    $this->assertSession()->responseContains('Menu settings');
+    $this->assertSession()->responseContains('URL path settings');
+    $this->assertSession()->responseNotContains('Authoring information');
+    $this->assertSession()->responseNotContains('Promotion options');
   }
 
 }
diff --git a/src/Tests/PerVocabularySettingsTest.php b/src/Tests/PerVocabularySettingsTest.php
index f6573cc..de28b09 100644
--- a/src/Tests/PerVocabularySettingsTest.php
+++ b/src/Tests/PerVocabularySettingsTest.php
@@ -35,7 +35,7 @@ class PerVocabularySettingsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $admin_user = $this->drupalCreateUser([
@@ -65,9 +65,9 @@ class PerVocabularySettingsTest extends BrowserTestBase {
 
     $this->drupalGet("/admin/structure/taxonomy/manage/testing_vocabulary/add");
 
-    $this->assertRaw('About text formats', 'Term edit text format option is defined.');
-    $this->assertRaw('Relations', 'Term Relations option is defined.');
-    $this->assertRaw('URL alias', 'Term URL alias option is defined.');
+    $this->assertSession()->responseContains('About text formats');
+    $this->assertSession()->responseContains('Relations');
+    $this->assertSession()->responseContains('URL alias');
 
     /* -------------------------------------------------------.
      * 1/ Per vocabulary settings.
@@ -79,15 +79,15 @@ class PerVocabularySettingsTest extends BrowserTestBase {
       'simplify_admin' => TRUE,
       'simplify_taxonomies_global[format]' => 'format',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save configuration'));
+    $this->submitForm($options, $this->t('Save configuration'));
 
     // Open vocabulary admin UI.
     $this->drupalGet('/admin/structure/taxonomy/manage/testing_vocabulary');
 
     // Check if everything is there and global options are considered.
-    $this->assertFieldChecked('edit-simplify-taxonomies-format', 'Vocabulary text fomat selection option is checked.');
-    $this->assertNoFieldChecked('edit-simplify-taxonomies-relations', 'Vocabulary relations option is not checked.');
-    $this->assertNoFieldChecked('edit-simplify-taxonomies-path', 'Vocabulary Path settings option is not checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-taxonomies-format', 'Vocabulary text fomat selection option is checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-taxonomies-relations', 'Vocabulary relations option is not checked.');
+    $this->assertSession()->checkboxNotChecked('edit-simplify-taxonomies-path', 'Vocabulary Path settings option is not checked.');
 
     // Check if everything is properly disabled if needed.
     $text_format = $this->xpath('//input[@name="simplify_taxonomies[format]" and @disabled="disabled"]');
@@ -104,21 +104,21 @@ class PerVocabularySettingsTest extends BrowserTestBase {
       'simplify_taxonomies[relations]' => 'relations',
       'simplify_taxonomies[path]' => 'path',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save'));
+    $this->submitForm($options, $this->t('Save'));
 
     // Check if options are saved.
     $this->drupalGet('/admin/structure/taxonomy/manage/testing_vocabulary');
-    $this->assertFieldChecked('edit-simplify-taxonomies-relations', 'Vocabulary relations option is checked.');
-    $this->assertFieldChecked('edit-simplify-taxonomies-path', 'Vocabulary URL alias option is checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-taxonomies-relations', 'Vocabulary relations option is checked.');
+    $this->assertSession()->checkboxChecked('edit-simplify-taxonomies-path', 'Vocabulary URL alias option is checked.');
 
     /* -------------------------------------------------------.
      * 2/ Check settings effect on "term edit" page.
      */
     $this->drupalGet("/admin/structure/taxonomy/manage/testing_vocabulary/add");
 
-    $this->assertNoRaw('About text formats', 'Term edit text format option is not defined.');
-    $this->assertNoRaw('Relations', 'Term Relations option is not defined.');
-    $this->assertNoRaw('URL alias', 'Term URL alias option is not defined.');
+    $this->assertSession()->responseNotContains('About text formats');
+    $this->assertSession()->responseNotContains('Relations');
+    $this->assertSession()->responseNotContains('URL alias');
   }
 
 }
diff --git a/src/Tests/UserSettingsTest.php b/src/Tests/UserSettingsTest.php
index 22512ad..59b35d6 100644
--- a/src/Tests/UserSettingsTest.php
+++ b/src/Tests/UserSettingsTest.php
@@ -47,14 +47,14 @@ class UserSettingsTest extends BrowserTestBase {
      */
     // A- On user edit page.
     $this->drupalGet($user_edit_page);
-    $this->assertRaw('Status', 'Status option is defined.');
-    $this->assertRaw('Contact settings', 'Contact settings option is defined.');
-    $this->assertRaw('Locale settings', 'Locale settings option is defined.');
+    $this->assertSession()->responseContains('Status');
+    $this->assertSession()->responseContains('Contact settings');
+    $this->assertSession()->responseContains('Locale settings');
     // B- On user register page.
     $this->drupalLogout();
     $this->drupalGet('/user/register');
-    $this->assertRaw('Contact settings', 'Contact settings option is defined.');
-    $this->assertRaw('Locale settings', 'Locale settings option is defined.');
+    $this->assertSession()->responseContains('Contact settings');
+    $this->assertSession()->responseContains('Locale settings');
 
     /* -------------------------------------------------------.
      * 1/ Check if everything is there but unchecked.
@@ -68,9 +68,9 @@ class UserSettingsTest extends BrowserTestBase {
       'simplify_users_global[timezone]' => 'timezone',
       'simplify_users_global[contact]' => 'contact',
     ];
-    $this->drupalPostForm(NULL, $options, $this->t('Save configuration'));
+    $this->submitForm($options, $this->t('Save configuration'));
     // Admin users setting.
-    $this->assertFieldChecked('edit-simplify-admin', "Admin users can't see hidden fields too.");
+    $this->assertSession()->checkboxChecked('edit-simplify-admin', "Admin users can't see hidden fields too.");
 
     /* -------------------------------------------------------.
      * 2/ Check the effect on user settings.
@@ -82,14 +82,14 @@ class UserSettingsTest extends BrowserTestBase {
 
     // A- On user edit page.
     $this->drupalGet($user_edit_page);
-    $this->assertNoRaw('Status', 'Status option is not defined');
-    $this->assertNoRaw('Contact settings', 'Contact settings option is not defined.');
-    $this->assertNoRaw('Locale settings', 'Locale settings option is not defined.');
+    $this->assertSession()->responseNotContains('Status');
+    $this->assertSession()->responseNotContains('Contact settings');
+    $this->assertSession()->responseNotContains('Locale settings');
     // B- On user register page.
     $this->drupalLogout();
     $this->drupalGet('/user/register');
-    $this->assertNoRaw('Contact settings', 'Contact settings option is not defined.');
-    $this->assertNoRaw('Locale settings', 'Locale settings option is not defined.');
+    $this->assertSession()->responseNotContains('Contact settings');
+    $this->assertSession()->responseNotContains('Locale settings');
   }
 
 }
