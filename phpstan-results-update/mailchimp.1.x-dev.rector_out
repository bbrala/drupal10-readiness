modules/contrib/mailchimp/mailchimp.module
modules/contrib/mailchimp/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/MailchimpEcommerceTest.php
modules/contrib/mailchimp/includes/mailchimp.drush.inc
modules/contrib/mailchimp/modules/mailchimp_lists/src/Plugin/Field/FieldWidget/MailchimpListsSelectWidget.php
modules/contrib/mailchimp/modules/mailchimp_signup/src/Plugin/Block/MailchimpSignupSubscribeBlock.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/Mailchimp.php
modules/contrib/mailchimp/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php
modules/contrib/mailchimp/modules/mailchimp_signup/src/Plugin/Derivative/MailchimpSignupSubscribeBlock.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/MailchimpAPIException.php
modules/contrib/mailchimp/modules/mailchimp_campaign/tests/modules/mailchimp_campaign_test/src/MailchimpCampaignConfigOverrider.php
modules/contrib/mailchimp/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/MailchimpAutomations.php
modules/contrib/mailchimp/modules/mailchimp_lists/mailchimp_lists.install
modules/contrib/mailchimp/modules/mailchimp_lists/mailchimp_lists.module
modules/contrib/mailchimp/lib/mailchimp-api-php/src/MailchimpCampaigns.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php
modules/contrib/mailchimp/modules/mailchimp_signup/src/Routing/MailchimpSignupRoutes.php
modules/contrib/mailchimp/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/MailchimpConnectedSites.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/MailchimpEcommerce.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php
modules/contrib/mailchimp/modules/mailchimp_lists/tests/modules/mailchimp_lists_test/src/MailchimpListsConfigOverrider.php
modules/contrib/mailchimp/modules/mailchimp_signup/mailchimp_signup.module
modules/contrib/mailchimp/modules/mailchimp_signup/src/Controller/MailchimpSignupController.php
modules/contrib/mailchimp/modules/mailchimp_signup/src/Controller/MailchimpSignupListBuilder.php
modules/contrib/mailchimp/src/Access/MailchimpConfigurationAccessCheck.php
modules/contrib/mailchimp/modules/mailchimp_signup/src/Entity/MailchimpSignup.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/MailchimpLists.php
modules/contrib/mailchimp/modules/mailchimp_signup/src/Form/MailchimpSignupDeleteForm.php
modules/contrib/mailchimp/src/Controller/MailchimpWebhookController.php
modules/contrib/mailchimp/modules/mailchimp_lists/mailchimp_lists.rules.inc
modules/contrib/mailchimp/modules/mailchimp_lists/src/Controller/MailchimpFieldsController.php
modules/contrib/mailchimp/modules/mailchimp_signup/src/Form/MailchimpSignupForm.php
modules/contrib/mailchimp/src/Form/MailchimpAdminSettingsForm.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Controller/MailchimpListsController.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/MailchimpReports.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/MailchimpTemplates.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/MailchimpListsTest.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/http/MailchimpCurlHttpClient.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Form/MailchimpListsClearCacheForm.php
modules/contrib/mailchimp/tests/modules/mailchimp_test/mailchimp_test.module
modules/contrib/mailchimp/modules/mailchimp_lists/src/Form/MailchimpListsSubscribeForm.php
modules/contrib/mailchimp/tests/modules/mailchimp_test/src/DrupalMailchimp.php
modules/contrib/mailchimp/tests/modules/mailchimp_test/src/MailchimpConfigOverrider.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/http/MailchimpGuzzleHttpClient.php
modules/contrib/mailchimp/tests/src/Functional/FunctionalMailchimpTestBase.php
modules/contrib/mailchimp/lib/mailchimp-api-php/src/http/MailchimpHttpClientInterface.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/MailchimpAutomationsTest.php
modules/contrib/mailchimp/tests/src/Functional/MailchimpAPITest.php
modules/contrib/mailchimp/tests/src/Functional/MailchimpAdminSettingsFormTest.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Form/MailchimpListsUpdateMergevarsForm.php
modules/contrib/mailchimp/tests/src/Functional/MailchimpCampaignTestBase.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Form/MailchimpListsWebhookSettingsForm.php
modules/contrib/mailchimp/tests/src/Functional/MailchimpListsTestBase.php
modules/contrib/mailchimp/tests/src/Functional/WebhookHashTest.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/MailchimpCampaignsTest.php
modules/contrib/mailchimp/modules/mailchimp_campaign/mailchimp_campaign.module
modules/contrib/mailchimp/modules/mailchimp_signup/src/Form/MailchimpSignupPageForm.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/MailchimpReportsTest.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Plugin/Field/FieldFormatter/MailchimpListsFieldSubscribeFormatter.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/MailchimpTemplatesTest.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/MailchimpTest.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Plugin/Field/FieldFormatter/MailchimpListsSubscribeDefaultFormatter.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/Client.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/Mailchimp.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/MailchimpAutomations.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/MailchimpCampaigns.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/MailchimpEcommerce.php
modules/contrib/mailchimp/modules/mailchimp_lists/src/Plugin/Field/FieldType/MailchimpListsSubscription.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/MailchimpLists.php
modules/contrib/mailchimp/modules/mailchimp_signup/src/MailchimpSignupInterface.php
modules/contrib/mailchimp/modules/mailchimp_campaign/src/Controller/MailchimpCampaignController.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/MailchimpReports.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/MailchimpTemplates.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/MailchimpTestHttpClient.php
modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php
modules/contrib/mailchimp/mailchimp.api.php
modules/contrib/mailchimp/mailchimp.install
modules/contrib/mailchimp/modules/mailchimp_campaign/src/Entity/MailchimpCampaign.php
modules/contrib/mailchimp/modules/mailchimp_campaign/src/Entity/MailchimpCampaignViewBuilder.php
modules/contrib/mailchimp/modules/mailchimp_campaign/src/Form/MailchimpCampaignDeleteForm.php
modules/contrib/mailchimp/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php
modules/contrib/mailchimp/modules/mailchimp_campaign/src/Form/MailchimpCampaignSendForm.php
modules/contrib/mailchimp/modules/mailchimp_campaign/src/MailchimpCampaignAccessControlHandler.php
modules/contrib/mailchimp/modules/mailchimp_campaign/src/MailchimpCampaignInterface.php

15 files with changes
=====================

1) modules/contrib/mailchimp/tests/src/Functional/MailchimpListsTestBase.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     \Drupal::configFactory()->addOverride(new MailchimpListsConfigOverrider());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/mailchimp/tests/src/Functional/MailchimpCampaignTestBase.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     \Drupal::configFactory()->addOverride(new MailchimpCampaignConfigOverrider());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/mailchimp/tests/src/Functional/MailchimpAdminSettingsFormTest.php:19

    ---------- begin diff ----------
@@ @@
   public function testSettingsForm() {
     $this->drupalLogin($this->lowUser);
     $this->drupalGet('/admin/config/services/mailchimp');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/services/mailchimp');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->submitForm([
       'api_key' => 'TEST_KEY',
     ], 'Save configuration');
-    $this->assertText('The configuration options have been saved');
+    $this->assertSession()->pageTextContains('The configuration options have been saved');
     $this->assertEquals('TEST_KEY', \Drupal::config('mailchimp.settings')->get('api_key'));
   }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * AssertTextRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/mailchimp/tests/src/Functional/MailchimpAPITest.php:16

    ---------- begin diff ----------
@@ @@

     $this->assertNotNull($mailchimp_api);

-    $this->assertEqual(get_class($mailchimp_api), 'Mailchimp\Tests\Mailchimp');
+    $this->assertEquals(get_class($mailchimp_api), 'Mailchimp\Tests\Mailchimp');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/mailchimp/tests/src/Functional/FunctionalMailchimpTestBase.php:69

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalPlaceBlock('page_title_block');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/mailchimp/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $rid = $this->adminUser->getRoles()[1];
@@ @@
   public function testSignUpForm() {
     $this->drupalLogin($this->lowUser);
     $this->drupalGet('/admin/config/services/mailchimp/signup');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/services/mailchimp/signup');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     // This implicitly tests the _mailchimp_configuration_access_check check.
     \Drupal::configFactory()->getEditable('mailchimp.settings')
       ->set('api_key', 'TEST_KEY')
@@ @@
       ->set('test_mode', TRUE)
       ->save();
     $this->drupalGet('/admin/config/services/mailchimp/signup');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Create a signup form.
     $this->drupalGet('/admin/config/services/mailchimp/signup/add');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->submitForm([
       'title' => 'My signup form',
       'id' => 'my_signup_form',
@@ @@
       'settings[destination]' => 'home',
       'mc_lists[57afe96172]' => TRUE,
     ], 'Save');
-    $this->assertUrl('/admin/config/services/mailchimp/signup');
-    $this->assertText('My signup form');
+    $this->assertSession()->addressEquals('/admin/config/services/mailchimp/signup');
+    $this->assertSession()->pageTextContains('My signup form');
     // Visit/submit the signup form.
     $this->drupalLogin($this->lowUser);
     $this->drupalGet('/newsletter/signup');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $rid = $this->lowUser->getRoles()[0];
     $this->grantPermissions(Role::load($rid), ['access mailchimp signup pages']);
     $this->drupalGet('/newsletter/signup');
-    $this->assertResponse(200);
-    $this->assertText('My signup form');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->pageTextContains('My signup form');
     $this->submitForm([
       'mergevars[EMAIL]' => 'admin@example.com',
     ], 'Sign up');
-    $this->assertText('You have signed up');
-    $this->assertUrl('/home');
+    $this->assertSession()->pageTextContains('You have signed up');
+    $this->assertSession()->addressEquals('/home');

     /** @var \Drupal\Core\Block\BlockManager $manager */
     $manager = \Drupal::service('plugin.manager.block');
@@ @@
     $manager->clearCachedDefinitions();

     // Test the block.
-    $this->assertNoText('My signup block');
+    $this->assertSession()->pageTextNotContains('My signup block');
     $this->drupalPlaceBlock('mailchimp_signup_subscribe_block:my_signup_form', ['label' => 'My signup block']);
     $this->drupalGet('/foo');
-    $this->assertText('My signup block');
+    $this->assertSession()->pageTextContains('My signup block');
     $this->submitForm([
       'mergevars[EMAIL]' => 'admin@example.com',
     ], 'Sign up');
-    $this->assertText('You have signed up');
-    $this->assertUrl('/home');
+    $this->assertSession()->pageTextContains('You have signed up');
+    $this->assertSession()->addressEquals('/home');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertNoTextRector
 * AssertResponseRector
 * AssertTextRector
 * AssertUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/mailchimp/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php:45

    ---------- begin diff ----------
@@ @@

       $messenger = \Drupal::messenger();

-      $form = new \Drupal\mailchimp_signup\Form\MailchimpSignupPageForm($messenger);
+      $form = new MailchimpSignupPageForm($messenger);

       $form->setFormID($this->getFormId($signup));
       $form->setSignup($signup);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/mailchimp/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php:23

    ---------- begin diff ----------
@@ @@

     $webhooks = mailchimp_webhook_get($list_id);

-    $this->assertEqual($webhooks[0]->list_id, $list_id);
-    $this->assertEqual($webhooks[0]->id, '37b9c73a88');
-    $this->assertEqual($webhooks[0]->url, 'http://example.org');
-    $this->assertEqual($webhooks[0]->events->subscribe, TRUE);
-    $this->assertEqual($webhooks[0]->events->unsubscribe, FALSE);
-    $this->assertEqual($webhooks[0]->sources->user, TRUE);
-    $this->assertEqual($webhooks[0]->sources->api, FALSE);
+    $this->assertEquals($webhooks[0]->list_id, $list_id);
+    $this->assertEquals($webhooks[0]->id, '37b9c73a88');
+    $this->assertEquals($webhooks[0]->url, 'http://example.org');
+    $this->assertEquals($webhooks[0]->events->subscribe, TRUE);
+    $this->assertEquals($webhooks[0]->events->unsubscribe, FALSE);
+    $this->assertEquals($webhooks[0]->sources->user, TRUE);
+    $this->assertEquals($webhooks[0]->sources->api, FALSE);
   }

   /**
@@ @@

     $webhook_id = mailchimp_webhook_add($list_id, $url, $events, $sources);

-    $this->assertEqual($webhook_id, 'ab24521a00');
+    $this->assertEquals($webhook_id, 'ab24521a00');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/mailchimp/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php:23

    ---------- begin diff ----------
@@ @@

     $list = mailchimp_get_list($list_id);

-    $this->assertEqual($list->id, $list_id);
-    $this->assertEqual($list->name, 'Test List One');
+    $this->assertEquals($list->id, $list_id);
+    $this->assertEquals($list->name, 'Test List One');
   }

   /**
@@ @@

     $lists = mailchimp_get_lists($list_ids);

-    $this->assertEqual(count($lists), 2, 'Tested correct list count on retrieval.');
+    $this->assertEquals(count($lists), 2, 'Tested correct list count on retrieval.');

-    $this->assertEqual($lists[$list_ids[0]]->id, $list_ids[0]);
-    $this->assertEqual($lists[$list_ids[0]]->name, 'Test List One');
+    $this->assertEquals($lists[$list_ids[0]]->id, $list_ids[0]);
+    $this->assertEquals($lists[$list_ids[0]]->name, 'Test List One');

-    $this->assertEqual($lists[$list_ids[1]]->id, $list_ids[1]);
-    $this->assertEqual($lists[$list_ids[1]]->name, 'Test List Two');
+    $this->assertEquals($lists[$list_ids[1]]->id, $list_ids[1]);
+    $this->assertEquals($lists[$list_ids[1]]->name, 'Test List Two');
   }

   /**
@@ @@

     $mergevars = mailchimp_get_mergevars($list_ids);

-    $this->assertEqual(count($mergevars[$list_ids[0]]), 3, 'Tested correct mergevar count on retrieval.');
+    $this->assertEquals(count($mergevars[$list_ids[0]]), 3, 'Tested correct mergevar count on retrieval.');

-    $this->assertEqual($mergevars[$list_ids[0]][0]->tag, 'EMAIL');
-    $this->assertEqual($mergevars[$list_ids[0]][1]->tag, 'FNAME');
-    $this->assertEqual($mergevars[$list_ids[0]][2]->tag, 'LNAME');
+    $this->assertEquals($mergevars[$list_ids[0]][0]->tag, 'EMAIL');
+    $this->assertEquals($mergevars[$list_ids[0]][1]->tag, 'FNAME');
+    $this->assertEquals($mergevars[$list_ids[0]][2]->tag, 'LNAME');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/mailchimp/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php:24

    ---------- begin diff ----------
@@ @@

     $member_info = mailchimp_get_memberinfo($list_id, $email);

-    $this->assertEqual($member_info->id, md5($email));
-    $this->assertEqual($member_info->email_address, $email);
+    $this->assertEquals($member_info->id, md5($email));
+    $this->assertEquals($member_info->email_address, $email);
   }

   /**
@@ @@

     $member_info = mailchimp_subscribe($list_id, $email, $merge_vars, $interests);

-    $this->assertEqual($member_info->id, md5($email), 'Tested new user subscription.');
+    $this->assertEquals($member_info->id, md5($email), 'Tested new user subscription.');

-    $this->assertEqual($member_info->merge_fields->EMAIL, $email);
-    $this->assertEqual($member_info->interests->{$interest_ids[0]}, TRUE);
-    $this->assertEqual($member_info->interests->{$interest_ids[1]}, FALSE);
+    $this->assertEquals($member_info->merge_fields->EMAIL, $email);
+    $this->assertEquals($member_info->interests->{$interest_ids[0]}, TRUE);
+    $this->assertEquals($member_info->interests->{$interest_ids[1]}, FALSE);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/mailchimp/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php:1

    ---------- begin diff ----------
@@ @@

 namespace Mailchimp\Tests;

+use GuzzleHttp\Psr7\Response;
 /**
  * Test HTTP Response.
  *
  * @package Mailchimp\Tests
  */
-class MailchimpTestHttpResponse extends \GuzzleHttp\Psr7\Response {
+class MailchimpTestHttpResponse extends Response {

   public function getBody() {
     return '{}';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/mailchimp/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php:25

    ---------- begin diff ----------
@@ @@

     $this->assertTrue(is_object($campaign), 'Tested retrieval of campaign data.');

-    $this->assertEqual($campaign->id, $campaign_id);
-    $this->assertEqual($campaign->type, 'regular');
-    $this->assertEqual($campaign->recipients->list_id, '57afe96172');
-    $this->assertEqual($campaign->settings->subject_line, 'Test Campaign');
+    $this->assertEquals($campaign->id, $campaign_id);
+    $this->assertEquals($campaign->type, 'regular');
+    $this->assertEquals($campaign->recipients->list_id, '57afe96172');
+    $this->assertEquals($campaign->settings->subject_line, 'Test Campaign');
     $this->assertTrue($campaign->tracking->html_clicks);
     $this->assertFalse($campaign->tracking->text_clicks);
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


13) modules/contrib/mailchimp/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php:65

    ---------- begin diff ----------
@@ @@
       if (isset($build[$entity_type][$entity_id]['#contextual_links'])) {
         unset($build[$entity_type][$entity_id]['#contextual_links']);
       }
-      $content = render($build);
+      $content = \Drupal::service('renderer')->render($build);
     }

     return $content;
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/mailchimp/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php:774

    ---------- begin diff ----------
@@ @@
         }
       }

-      return render($element);
+      return \Drupal::service('renderer')->render($element);
     }
     else {
       return $this->t('No custom merge vars exist for the current audience.');
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


15) modules/contrib/mailchimp/mailchimp.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use function GuzzleHttp\default_user_agent;
 /**
  * @file
  * Mailchimp module.
@@ @@
     }
   }

-  $user_agent = "DrupalMailchimp/$version " . \GuzzleHttp\default_user_agent();
+  $user_agent = "DrupalMailchimp/$version " . default_user_agent();

   return $user_agent;
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 15 files have been changed by Rector                                      

