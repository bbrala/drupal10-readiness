modules/contrib/search_api_algolia/search_api_algolia.api.php
modules/contrib/search_api_algolia/search_api_algolia.install
modules/contrib/search_api_algolia/search_api_algolia.module
modules/contrib/search_api_algolia/src/Commands/SearchApiAlgoliaCommands.php
modules/contrib/search_api_algolia/src/Plugin/search_api/backend/SearchApiAlgoliaBackend.php
modules/contrib/search_api_algolia/src/SearchApiAlgoliaHelper.php

3 files with changes
====================

1) modules/contrib/search_api_algolia/src/Plugin/search_api/backend/SearchApiAlgoliaBackend.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_algolia\Plugin\search_api\backend;

+use Drupal\search_api_autocomplete\SearchInterface;
+use Drupal\search_api_autocomplete\Suggestion\SuggestionFactory;
 use Algolia\AlgoliaSearch\SearchClient;
 use Algolia\AlgoliaSearch\Exceptions\AlgoliaException;
 use Algolia\AlgoliaSearch\SearchIndex;
@@ @@
    *
    * @see \Drupal\search_api_autocomplete\AutocompleteBackendInterface
    */
-  public function getAutocompleteSuggestions(QueryInterface $query, \Drupal\search_api_autocomplete\SearchInterface $search, $incomplete_key, $user_input) {
+  public function getAutocompleteSuggestions(QueryInterface $query, SearchInterface $search, $incomplete_key, $user_input) {
     // This function will be used only is search_api_autocomplete is enabled
     // and used. We have it here to add the support but it might never be used
     // in normal cases.
@@ @@
     $suggestions = [];

     try {
-      $factory = new \Drupal\search_api_autocomplete\Suggestion\SuggestionFactory($user_input);
+      $factory = new SuggestionFactory($user_input);
     }
     catch (\Exception $e) {
       return $suggestions;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/search_api_algolia/search_api_algolia.module:67

    ---------- begin diff ----------
@@ @@

       $form['options']['algolia_index_list'] = [
         '#type' => 'item',
-        '#markup' => render($element),
+        '#markup' => \Drupal::service('renderer')->render($element),
         '#weight' => 3,
       ];
     }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector


3) modules/contrib/search_api_algolia/search_api_algolia.api.php:21

    ---------- begin diff ----------
@@ @@
  * @param \Drupal\search_api\Item\ItemInterface[] $items
  *   An array of items to be indexed, keyed by their item IDs.
  */
-function hook_search_api_algolia_objects_alter(array &$objects, \Drupal\search_api\IndexInterface $index, array $items) {
+function hook_search_api_algolia_objects_alter(array &$objects, IndexInterface $index, array $items) {
   // Adds a "foo" field with value "bar" to all documents.
   foreach ($objects as $key => $object) {
     $objects[$key]['foo'] = 'bar';
    ----------- end diff -----------

 [OK] 3 files have been changed by Rector                                       

