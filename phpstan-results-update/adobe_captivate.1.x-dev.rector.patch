diff --git a/adobe_captivate.info.yml b/adobe_captivate.info.yml
index f0613b4..4116ea0 100644
--- a/adobe_captivate.info.yml
+++ b/adobe_captivate.info.yml
@@ -3,8 +3,7 @@ type: module
 description: 'Defines an Adobe Captivate field type.'
 package: Field types
 version: VERSION
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:field
   - drupal:file
diff --git a/src/Plugin/Field/FieldFormatter/AdobeCaptivateFormatter.php b/src/Plugin/Field/FieldFormatter/AdobeCaptivateFormatter.php
index fe71aea..ed12b80 100644
--- a/src/Plugin/Field/FieldFormatter/AdobeCaptivateFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/AdobeCaptivateFormatter.php
@@ -109,7 +109,7 @@ class AdobeCaptivateFormatter extends FormatterBase {
 
         // Change URI to URL.
         if ($adobe_captivate_url !== '') {
-          $adobe_captivate_url = file_create_url($adobe_captivate_url);
+          $adobe_captivate_url = \Drupal::service('file_url_generator')->generateAbsoluteString($adobe_captivate_url);
         }
       }
       elseif ($item->getPluginId() === 'field_item:adobe_captivate_url') {
diff --git a/src/Plugin/Field/FieldFormatter/AdobeCaptivateUrlFormatter.php b/src/Plugin/Field/FieldFormatter/AdobeCaptivateUrlFormatter.php
index a972c95..24cdca4 100644
--- a/src/Plugin/Field/FieldFormatter/AdobeCaptivateUrlFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/AdobeCaptivateUrlFormatter.php
@@ -94,7 +94,7 @@ class AdobeCaptivateUrlFormatter extends FormatterBase {
         }
 
         if ($uri !== '') {
-          $url = Url::fromUri(file_create_url($uri));
+          $url = \Drupal::service('file_url_generator')->generate($uri);
         }
       }
       elseif ($item->getPluginId() === 'field_item:adobe_captivate_url') {
diff --git a/tests/src/Functional/AdobeCaptivateTest.php b/tests/src/Functional/AdobeCaptivateTest.php
index 92a6b41..278dceb 100644
--- a/tests/src/Functional/AdobeCaptivateTest.php
+++ b/tests/src/Functional/AdobeCaptivateTest.php
@@ -19,7 +19,7 @@ class AdobeCaptivateTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create Basic page and Article node types.
@@ -73,7 +73,7 @@ class AdobeCaptivateTest extends BrowserTestBase {
 
     // Display creation form.
     $this->drupalGet('node/add/page');
-    $this->assertFieldByName("{$field_name}[0][adobe_captivate_url]", '', t('Adobe Captivate input field is displayed'));
+    $this->assertSession()->fieldValueEquals("{$field_name}[0][adobe_captivate_url]", '');
 
     // Verify that a valid URL can be submitted.
     $value = 'http://example.com/foobar/index.html';
@@ -81,15 +81,15 @@ class AdobeCaptivateTest extends BrowserTestBase {
       "title[0][value]" => 'Test',
       "{$field_name}[0][adobe_captivate_url]" => $value,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     preg_match('|/node/(\d+)|', $this->getUrl(), $match);
-    $this->assertText(t('Basic page Test has been created.'));
-    $this->assertRaw($value);
+    $this->assertSession()->pageTextContains(t('Basic page Test has been created.'));
+    $this->assertSession()->responseContains($value);
 
     // Verify that the Adobe Captivate is displayed.
     $pattern = '<iframe.*src="' . $value;
     $pattern = '@' . $pattern . '@s';
-    $this->assertPattern($pattern);
+    $this->assertSession()->responseMatches($pattern);
 
     // Verify that invalid URLs cannot be submitted.
     // In this case we're checking that it can't end with index.htm.
@@ -99,8 +99,8 @@ class AdobeCaptivateTest extends BrowserTestBase {
       "title[0][value]" => 'Test1',
       "{$field_name}[0][adobe_captivate_url]" => $incorrect_value,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
-    $this->assertText(t('Enter the Adobe Captivate URL. Valid URL format is: https://www.example.com/bar/index.html (must end with index.html).'));
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains(t('Enter the Adobe Captivate URL. Valid URL format is: https://www.example.com/bar/index.html (must end with index.html).'));
 
     // Change to Adobe Captivate URL formatter.
     \Drupal::entityTypeManager()->getStorage('entity_view_display')->load('node.page.default')
@@ -113,7 +113,7 @@ class AdobeCaptivateTest extends BrowserTestBase {
     $this->drupalGet('node/1');
     $pattern = '<a.*href="' . $value . '".*class="adobe-captivate-url">.*</a>';
     $pattern = '@' . $pattern . '@s';
-    $this->assertPattern($pattern);
+    $this->assertSession()->responseMatches($pattern);
   }
 
   /**
@@ -152,7 +152,7 @@ class AdobeCaptivateTest extends BrowserTestBase {
 
     // Display creation form.
     $this->drupalGet('node/add/page');
-    $this->assertFieldByName('files[' . $field_name . '_0]', '', t('Adobe Captivate input field is displayed'));
+    $this->assertSession()->fieldValueEquals('files[' . $field_name . '_0]', '');
 
     // Verify that file can be submitted and node saved.
     $adobe_captivate_path = \Drupal::service('module_handler')->getModule('adobe_captivate')->getPath();
@@ -161,8 +161,8 @@ class AdobeCaptivateTest extends BrowserTestBase {
       'title[0][value]' => 'Test',
       'files[' . $field_name . '_0]' => $test_zip_path,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Upload'));
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->submitForm($edit, t('Upload'));
+    $this->submitForm([], t('Save'));
 
     // Don't know how to find the Simpletest baseurl so generating partial url.
     // @todo. Should be possible after https://www.drupal.org/project/drupal/issues/471970.
@@ -173,7 +173,7 @@ class AdobeCaptivateTest extends BrowserTestBase {
     $this->drupalGet('node/1');
     $pattern = '<iframe.*src=".*' . $iframe_src_partial . '"';
     $pattern = '@' . $pattern . '@s';
-    $this->assertPattern($pattern);
+    $this->assertSession()->responseMatches($pattern);
 
   }
 
