diff --git a/modules/opigno_onesignal/opigno_onesignal.module b/modules/opigno_onesignal/opigno_onesignal.module
index 9be6e84..e6c099f 100644
--- a/modules/opigno_onesignal/opigno_onesignal.module
+++ b/modules/opigno_onesignal/opigno_onesignal.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Contains opigno_onesignal.module.
@@ -87,7 +88,7 @@ function opigno_onesignal_page_attachments(&$attachments) {
 /**
  * Implements hook_ENTITY_TYPE_insert().
  */
-function opigno_onesignal_opigno_notification_insert(Drupal\Core\Entity\EntityInterface $notification) {
+function opigno_onesignal_opigno_notification_insert(EntityInterface $notification) {
   /* @var \Drupal\opigno_notification\Entity\OpignoNotification $notification */
   $params = [];
   $params['title'] = 'New notification:';
@@ -110,7 +111,7 @@ function opigno_onesignal_opigno_notification_insert(Drupal\Core\Entity\EntityIn
 /**
  * Implements hook_ENTITY_TYPE_presave().
  */
-function opigno_onesignal_private_message_thread_presave(Drupal\Core\Entity\EntityInterface $private_message_thread) {
+function opigno_onesignal_private_message_thread_presave(EntityInterface $private_message_thread) {
   // Skip threads that are created/updated from the command line.
   if (PHP_SAPI === 'cli') {
     return;
@@ -197,7 +198,7 @@ function opigno_onesignal_private_message_thread_presave(Drupal\Core\Entity\Enti
 /**
  * Implements hook_ENTITY_TYPE_insert().
  */
-function opigno_onesignal_opigno_calendar_event_insert(Drupal\Core\Entity\EntityInterface $event) {
+function opigno_onesignal_opigno_calendar_event_insert(EntityInterface $event) {
   /* @var \Drupal\opigno_calendar_event\Entity\CalendarEvent $event */
   $params = [];
   $params['title'] = 'New event';
diff --git a/modules/opigno_onesignal/src/OneSignalManager.php b/modules/opigno_onesignal/src/OneSignalManager.php
index 0ff1bba..96c2cc8 100644
--- a/modules/opigno_onesignal/src/OneSignalManager.php
+++ b/modules/opigno_onesignal/src/OneSignalManager.php
@@ -103,7 +103,7 @@ class OneSignalManager implements OneSignalManagerInterface {
     }
 
     // Get logo.
-    $logo_path = $base_url . '/' . drupal_get_path("theme", "aristotle") . "/logo.png";
+    $logo_path = $base_url . '/' . \Drupal::service('extension.list.theme')->getPath("aristotle") . "/logo.png";
     // Build title for notification.
     $title = [
       $langcode => isset($params['title']) ? $params['title'] : '',
diff --git a/opigno_mobile_app.module b/opigno_mobile_app.module
index 1e77579..426a0e1 100644
--- a/opigno_mobile_app.module
+++ b/opigno_mobile_app.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\user\UserInterface;
 /**
  * @file
  * Contains opigno_mobile_app.module.
@@ -43,12 +44,12 @@ function opigno_mobile_app_entity_type_alter(array &$entity_types) {
  * @return string
  *   Return url with user's picture.
  */
-function opigno_mobile_app_get_user_picture(\Drupal\user\UserInterface $user) {
+function opigno_mobile_app_get_user_picture(UserInterface $user) {
   $user_picture = $user->get('user_picture')->target_id;
   if ($user_picture) {
     $file = File::load($user_picture);
     $uri = $file->getFileUri();
-    $url = file_create_url($uri);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
   }
 
   return isset($url) ? $url : '';
diff --git a/src/Plugin/rest/resource/TokenRestResource.php b/src/Plugin/rest/resource/TokenRestResource.php
index 91ccbf6..b0b84e6 100644
--- a/src/Plugin/rest/resource/TokenRestResource.php
+++ b/src/Plugin/rest/resource/TokenRestResource.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_mobile_app\Plugin\rest\resource;
 
+use Firebase\JWT\JWT;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\jwt\Transcoder\JwtTranscoderInterface;
 use Drupal\jwt\Transcoder\JwtTranscoder;
@@ -72,7 +73,7 @@ class TokenRestResource extends ResourceBase {
     parent::__construct($configuration, $plugin_id, $plugin_definition, $serializer_formats, $logger);
 
     $this->eventDispatcher = \Drupal::service('event_dispatcher');
-    $this->transcoder = new JwtTranscoder(new \Firebase\JWT\JWT(), \Drupal::configFactory(), \Drupal::service('key.repository'));
+    $this->transcoder = new JwtTranscoder(new JWT(), \Drupal::configFactory(), \Drupal::service('key.repository'));
   }
 
   /**
@@ -114,7 +115,7 @@ class TokenRestResource extends ResourceBase {
    */
   public function generateToken() {
     $event = new JwtAuthGenerateEvent(new JsonWebToken());
-    $this->eventDispatcher->dispatch(JwtAuthEvents::GENERATE, $event);
+    $this->eventDispatcher->dispatch($event, JwtAuthEvents::GENERATE);
     $jwt = $event->getToken();
     return $this->transcoder->encode($jwt);
   }
