diff --git a/closest_zip_code.info.yml b/closest_zip_code.info.yml
index 4d790f2..f976fe7 100644
--- a/closest_zip_code.info.yml
+++ b/closest_zip_code.info.yml
@@ -2,8 +2,7 @@
 name: Closest Zip Code
 type: module
 description: 'Api which gives you closest zip code from array of zip codes.'
-core: '8.x'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 php: 7
 
 # Information added by Drupal.org packaging script on 2021-02-24
diff --git a/src/traits/CommonUtilities.php b/src/traits/CommonUtilities.php
index 1c1f226..fb9e6eb 100644
--- a/src/traits/CommonUtilities.php
+++ b/src/traits/CommonUtilities.php
@@ -109,7 +109,7 @@ trait CommonUtilities {
    * Mockable wrapper around drupal_get_path().
    */
   public function drupalGetPath(string $type, string $name) : string {
-    $return = drupal_get_path($type, $name);
+    $return = \Drupal::service('extension.path.resolver')->getPath($type, $name);
     if (!$return) {
       throw new \Exception('drupal_get_path() returned an empty string');
     }
diff --git a/tests/src/Unit/ClosestZipCode/AppTest.php b/tests/src/Unit/ClosestZipCode/AppTest.php
index 8346c4f..a8dce12 100644
--- a/tests/src/Unit/ClosestZipCode/AppTest.php
+++ b/tests/src/Unit/ClosestZipCode/AppTest.php
@@ -50,15 +50,7 @@ class AppTest extends TestCase {
    * @dataProvider providerClosestZipCode
    */
   public function testClosestZipCode(string $message, string $my_zip, array $all_zips, array $expected) {
-    $object = $this->getMockBuilder(App::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods([
-        'dataStore',
-        'location',
-        'microtime',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(App::class);
 
     $object->method('dataStore')
       ->willReturn(new class extends DataStore {
@@ -129,11 +121,7 @@ class AppTest extends TestCase {
    * @dataProvider providerSortByDistance
    */
   public function testSortByDistance(string $message, array $input, array $expected) {
-    $object = $this->getMockBuilder(App::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(App::class);
 
     $output = $object->sortByDistance($input);
     $this->assertTrue($output == $expected, $message);
diff --git a/tests/src/Unit/ClosestZipCode/DataStoreTest.php b/tests/src/Unit/ClosestZipCode/DataStoreTest.php
index ce01c4d..5250169 100644
--- a/tests/src/Unit/ClosestZipCode/DataStoreTest.php
+++ b/tests/src/Unit/ClosestZipCode/DataStoreTest.php
@@ -29,14 +29,7 @@ class DataStoreTest extends TestCase {
    * @dataProvider providerLine
    */
   public function testLine(string $message, string $input, string $exception, array $expected) {
-    $object = $this->getMockBuilder(DataStore::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods([
-        'lines',
-        't',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(DataStore::class);
 
     $object->method('lines')
       ->willReturn([
diff --git a/tests/src/Unit/ClosestZipCode/LocationTest.php b/tests/src/Unit/ClosestZipCode/LocationTest.php
index afa9dd7..08ea2e6 100644
--- a/tests/src/Unit/ClosestZipCode/LocationTest.php
+++ b/tests/src/Unit/ClosestZipCode/LocationTest.php
@@ -16,11 +16,7 @@ class LocationTest extends TestCase {
    * Smoke test.
    */
   public function testSmoke() {
-    $object = $this->getMockBuilder(Location::class)
-      // NULL = no methods are mocked; otherwise list the methods here.
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $object = $this->createMock(Location::class);
 
     $this->assertTrue(is_object($object));
   }
