modules/contrib/external_entities/external_entities.install
modules/contrib/external_entities/src/Entity/ExternalEntity.php
modules/contrib/external_entities/src/FieldMapper/FieldMapperBase.php
modules/contrib/external_entities/src/StorageClient/ExternalEntityStorageClientManager.php
modules/contrib/external_entities/external_entities.module
modules/contrib/external_entities/tests/modules/external_entities_test/external_entities_test.module
modules/contrib/external_entities/tests/modules/external_entities_test/src/Controller/ExternalEntitiesJsonController.php
modules/contrib/external_entities/src/FieldMapper/FieldMapperInterface.php
modules/contrib/external_entities/src/FieldMapper/FieldMapperManager.php
modules/contrib/external_entities/src/Form/ExternalEntityForm.php
modules/contrib/external_entities/tests/src/Functional/ExternalEntitiesBrowserTestBase.php
modules/contrib/external_entities/modules/external_entities_pathauto/external_entities_pathauto.module
modules/contrib/external_entities/modules/external_entities_pathauto/src/Plugin/pathauto/AliasType/ExternalEntityAliasTypeBase.php
modules/contrib/external_entities/src/Entity/ExternalEntityType.php
modules/contrib/external_entities/src/Form/ExternalEntityTypeDeleteForm.php
modules/contrib/external_entities/src/Form/ExternalEntityTypeForm.php
modules/contrib/external_entities/tests/src/Functional/SimpleExternalEntityTest.php
modules/contrib/external_entities/src/Annotation/ExternalEntityStorageClient.php
modules/contrib/external_entities/src/Annotation/FieldMapper.php
modules/contrib/external_entities/src/Entity/Query/External/Condition.php
modules/contrib/external_entities/src/Entity/Query/External/Query.php
modules/contrib/external_entities/src/Entity/Query/External/QueryFactory.php
modules/contrib/external_entities/src/Event/ExternalEntitiesEvents.php
modules/contrib/external_entities/src/Event/ExternalEntityExtractRawDataEvent.php
modules/contrib/external_entities/src/Event/ExternalEntityMapRawDataEvent.php
modules/contrib/external_entities/src/ExternalEntitiesServiceProvider.php
modules/contrib/external_entities/src/ExternalEntityAccessControlHandler.php
modules/contrib/external_entities/src/ExternalEntityInterface.php
modules/contrib/external_entities/src/ExternalEntityListBuilder.php
modules/contrib/external_entities/src/ExternalEntityPermissions.php
modules/contrib/external_entities/src/ExternalEntityStorage.php
modules/contrib/external_entities/src/Plugin/Derivative/ExternalEntitiesLocalTask.php
modules/contrib/external_entities/src/Plugin/ExternalEntities/FieldMapper/JsonPath.php
modules/contrib/external_entities/src/Plugin/ExternalEntities/FieldMapper/SimpleFieldMapper.php
modules/contrib/external_entities/src/ExternalEntityStorageInterface.php
modules/contrib/external_entities/src/ExternalEntityTypeInterface.php
modules/contrib/external_entities/src/ExternalEntityTypeListBuilder.php
modules/contrib/external_entities/src/FieldMapper/ConfigurableExpressionFieldMapperBase.php
modules/contrib/external_entities/src/Plugin/ExternalEntities/StorageClient/Rest.php
modules/contrib/external_entities/src/FieldMapper/ExpressionFieldMapperBase.php
modules/contrib/external_entities/src/Plugin/ExternalEntities/StorageClient/Wiki.php
modules/contrib/external_entities/src/Plugin/Field/AnnotationTitleFieldItemList.php
modules/contrib/external_entities/src/Plugin/PluginFormTrait.php
modules/contrib/external_entities/src/ResponseDecoder/ResponseDecoderFactory.php
modules/contrib/external_entities/src/ResponseDecoder/ResponseDecoderFactoryInterface.php
modules/contrib/external_entities/src/RouteProcessor/RouteProcessorExternalEntityType.php
modules/contrib/external_entities/src/FieldMapper/ExpressionFieldMapperInterface.php
modules/contrib/external_entities/src/Routing/ExternalEntityHtmlRouteProvider.php
modules/contrib/external_entities/src/Routing/ExternalEntityTypeRoutes.php
modules/contrib/external_entities/src/StorageClient/ExternalEntityStorageClientBase.php
modules/contrib/external_entities/src/StorageClient/ExternalEntityStorageClientInterface.php

4 files with changes
====================

1) modules/contrib/external_entities/src/FieldMapper/ExpressionFieldMapperBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\external_entities\FieldMapper;

+use Drupal\Core\TypedData\Plugin\DataType\DateTimeIso8601;
 use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManager;
@@ @@

       if ($timestamp !== FALSE) {
         if (get_class($typed_data) === 'Drupal\Core\TypedData\Plugin\DataType\DateTimeIso8601') {
-          assert($typed_data instanceof \Drupal\Core\TypedData\Plugin\DataType\DateTimeIso8601);
+          assert($typed_data instanceof DateTimeIso8601);
           $datetime_type = $field_definition->getFieldStorageDefinition()->getSetting('datetime_type');

           if ($datetime_type === DateTimeItem::DATETIME_TYPE_DATE) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/external_entities/src/ExternalEntityStorage.php:325

    ---------- begin diff ----------
@@ @@
       }
       // Allow other modules to perform custom mapping logic.
       $event = new ExternalEntityMapRawDataEvent($data[$id], $entity_values);
-      $this->eventDispatcher->dispatch(ExternalEntitiesEvents::MAP_RAW_DATA, $event);
+      $this->eventDispatcher->dispatch($event, ExternalEntitiesEvents::MAP_RAW_DATA);

       $entities[$id] = new $this->entityClass($event->getEntityValues(), $this->entityTypeId);
       $entities[$id]->enforceIsNew(FALSE);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/external_entities/src/Event/ExternalEntityMapRawDataEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\external_entities\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Defines an external entity raw data mapping event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/external_entities/src/Event/ExternalEntityExtractRawDataEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\external_entities\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\external_entities\ExternalEntityInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Defines a, external entity raw data extraction event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

