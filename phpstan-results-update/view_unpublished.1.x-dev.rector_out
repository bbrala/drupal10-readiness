modules/contrib/view_unpublished/src/Plugin/views/filter/NodeStatus.php
modules/contrib/view_unpublished/src/ViewUnpublishedInstallHelper.php
modules/contrib/view_unpublished/src/ViewUnpublishedPermissions.php
modules/contrib/view_unpublished/tests/src/Functional/ViewUnpublishedMultilingualTest.php
modules/contrib/view_unpublished/tests/src/Functional/ViewUnpublishedViewsTest.php
modules/contrib/view_unpublished/tests/src/Kernel/ViewUnpublishedDependencyTest.php
modules/contrib/view_unpublished/view_unpublished.install
modules/contrib/view_unpublished/view_unpublished.module
modules/contrib/view_unpublished/view_unpublished.views.inc
modules/contrib/view_unpublished/view_unpublished.views_execution.inc

3 files with changes
====================

1) modules/contrib/view_unpublished/tests/src/Kernel/ViewUnpublishedDependencyTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/view_unpublished/tests/src/Functional/ViewUnpublishedViewsTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Rebuild node access which we have to do after installing the module.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/view_unpublished/tests/src/Functional/ViewUnpublishedMultilingualTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * Sets up the test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create Basic page node type.
@@ @@
     $edit[$title_key] = $this->randomMachineName(8);
     $edit[$body_key] = $this->randomMachineName(16);
     $edit[$status_key] = 1;
-    $this->drupalPostForm('node/add/page', $edit, $this->t('Save'));
+    $this->drupalGet('node/add/page');
+    $this->submitForm($edit, $this->t('Save'));

     // Check the node language.
     $node = $this->getNodeByTitle($edit[$title_key]);
@@ @@
     $this->drupalLogin($this->adminUser);
     $edit[$body_key] = $this->randomMachineName(16);
     $edit[$status_key] = 0;
-    $this->drupalPostForm($node->toUrl('edit-form'), $edit, $this->t('Save'));
+    $this->drupalGet($node->toUrl('edit-form'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->drupalLogout();
     $this->drupalGet($node->toUrl());
     $this->assertSession()->statusCodeEquals(403);
@@ @@
     $this->drupalLogin($this->adminUser);
     $edit[$body_key] = $this->randomMachineName(16);
     $edit[$status_key] = 1;
-    $this->drupalPostForm($node->toUrl('edit-form'), $edit, $this->t('Save'));
+    $this->drupalGet($node->toUrl('edit-form'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->drupalLogout();

     // Anonymous users should have access.
@@ @@
     $edit[$status_key] = 0;
     // Unpublish the node and now anonymous users should not have access.
     $edit[$status_key] = 0;
-    $this->drupalPostForm($add_translation_url, $edit, $this->t('Save (this translation)'));
+    $this->drupalGet($add_translation_url);
+    $this->submitForm($edit, $this->t('Save (this translation)'));
     // Reset the node so we pick up the translation.
     $node = $this->getNodeByTitle($edit[$title_key], TRUE);
     $this->drupalLogout();
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

