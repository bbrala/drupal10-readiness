modules/contrib/domain_route_redirect/domain_route_redirect.module
modules/contrib/domain_route_redirect/src/Controller/DomainRouteRedirectController.php
modules/contrib/domain_route_redirect/src/DomainRouteRedirectAccessControlHandler.php
modules/contrib/domain_route_redirect/src/DomainRouteRedirectForm.php
modules/contrib/domain_route_redirect/src/DomainRouteRedirectInterface.php
modules/contrib/domain_route_redirect/src/DomainRouteRedirectListBuilder.php
modules/contrib/domain_route_redirect/src/DomainRouteRedirectMatcherService.php
modules/contrib/domain_route_redirect/src/DomainRouteRedirectStorage.php
modules/contrib/domain_route_redirect/src/DomainRouteRedirectStorageInterface.php
modules/contrib/domain_route_redirect/src/Entity/DomainRouteRedirect.php
modules/contrib/domain_route_redirect/src/EventSubscriber/DomainRedirectSubscriber.php
modules/contrib/domain_route_redirect/src/Form/DomainRouteRedirectDeleteForm.php
modules/contrib/domain_route_redirect/src/HttpKernel/DomainRouteRedirectPathProcessor.php

1 file with changes
===================

1) modules/contrib/domain_route_redirect/src/EventSubscriber/DomainRedirectSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\domain_route_redirect\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ControllerEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

 use Drupal\domain\DomainNegotiatorInterface;
@@ @@
 use Drupal\domain_route_redirect\DomainRouteRedirectMatcherService;

 use Symfony\Component\HttpKernel\KernelEvents;
-
-use Symfony\Component\HttpKernel\Event\FilterControllerEvent;
 use Drupal\Core\Routing\TrustedRedirectResponse;
 use Symfony\Component\HttpFoundation\Response;

@@ @@
   /**
    * Decides whether to redirect depending on the identified route.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterControllerEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ControllerEvent $event
    *   The Event to process.
    */
-  public function onKernelRouteDeterminedDomain(FilterControllerEvent $event) {
+  public function onKernelRouteDeterminedDomain(ControllerEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 1 file has been changed by Rector                                         

