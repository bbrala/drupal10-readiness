modules/contrib/quicktabs/quicktabs.module
modules/contrib/quicktabs/src/Annotation/TabType.php
modules/contrib/quicktabs/src/TabTypeInterface.php
modules/contrib/quicktabs/src/Controller/QuickTabsController.php
modules/contrib/quicktabs/src/TabTypeManager.php
modules/contrib/quicktabs/quicktabs.theme.inc
modules/contrib/quicktabs/quicktabs_accordion/quicktabs_accordion.module
modules/contrib/quicktabs/quicktabs_accordion/src/Plugin/TabRenderer/AccordionTabs.php
modules/contrib/quicktabs/src/Tests/QuickTabsAdminTest.php
modules/contrib/quicktabs/src/Entity/QuickTabsInstance.php
modules/contrib/quicktabs/src/Entity/QuickTabsInstanceInterface.php
modules/contrib/quicktabs/src/Form/QuickTabsInstanceDeleteForm.php
modules/contrib/quicktabs/src/Form/QuickTabsInstanceDuplicateForm.php
modules/contrib/quicktabs/quicktabs_jqueryui/quicktabs_jqueryui.module
modules/contrib/quicktabs/quicktabs_jqueryui/src/Plugin/TabRenderer/UiTabs.php
modules/contrib/quicktabs/src/Form/QuickTabsInstanceEditForm.php
modules/contrib/quicktabs/src/Annotation/TabRenderer.php
modules/contrib/quicktabs/tests/src/Kernel/QuicktabsConfigSchemaTest.php
modules/contrib/quicktabs/src/Plugin/Block/QuickTabsBlock.php
modules/contrib/quicktabs/src/Plugin/Derivative/QuickTabsBlock.php
modules/contrib/quicktabs/src/Plugin/TabRenderer/QuickTabs.php
modules/contrib/quicktabs/src/Plugin/TabType/BlockContent.php
modules/contrib/quicktabs/src/Plugin/TabType/NodeContent.php
modules/contrib/quicktabs/src/Plugin/TabType/QtabsContent.php
modules/contrib/quicktabs/src/Plugin/TabType/ViewContent.php
modules/contrib/quicktabs/src/Plugin/views/style/Quicktabs.php
modules/contrib/quicktabs/src/QuickTabsInstanceListBuilder.php
modules/contrib/quicktabs/src/TabRendererBase.php
modules/contrib/quicktabs/src/TabRendererInterface.php
modules/contrib/quicktabs/src/TabRendererManager.php
modules/contrib/quicktabs/src/TabTypeBase.php

2 files with changes
====================

1) modules/contrib/quicktabs/tests/src/Kernel/QuicktabsConfigSchemaTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->typedConfig = \Drupal::service('config.typed');
@@ @@
       ]);
       $quicktabs->save();
       $config = $this->config("quicktabs.quicktabs_instance.$id");
-      $this->assertEqual($config->get('id'), $id);
+      $this->assertEquals($config->get('id'), $id);
       $this->assertConfigSchema($this->typedConfig, $config->getName(), $config->get());
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/quicktabs/src/Tests/QuickTabsAdminTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $perms = [
@@ @@
    */
   public function testQuickTabsAdmin() {
     $this->drupalGet('admin/structure/quicktabs');
-    $this->assertResponse(200);
-    $this->assertRaw('Quick Tabs');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains('Quick Tabs');
     $this->drupalGet('admin/structure/quicktabs/add');
-    $this->assertResponse(200);
-    $this->assertRaw('Add QuickTabs Instance');
-    $this->assertRaw('Name');
-    $this->assertRaw('Renderer');
-    $this->assertRaw('Default tab');
-    $this->assertRaw('Hide empty tabs');
-    $this->assertRaw('Add tab');
-    $this->assertRaw('Save');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains('Add QuickTabs Instance');
+    $this->assertSession()->responseContains('Name');
+    $this->assertSession()->responseContains('Renderer');
+    $this->assertSession()->responseContains('Default tab');
+    $this->assertSession()->responseContains('Hide empty tabs');
+    $this->assertSession()->responseContains('Add tab');
+    $this->assertSession()->responseContains('Save');

     $node1 = $this->drupalCreateNode([
       'title' => $this->t('Node 1'),
@@ @@
       'configuration_data[1][content][node_content][options][view_mode]' => 'full',
       'configuration_data[1][content][node_content][options][hide_title]' => 1,
     ];
+    $this->drupalGet('admin/structure/quicktabs/add');

-    $this->drupalPostForm('admin/structure/quicktabs/add', $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));

     $qt = \Drupal::service('entity_type.manager')->getStorage('quicktabs_instance')->load($edit['id']);

-    $this->assertEqual('Drupal\quicktabs\Entity\QuickTabsInstance', get_class($qt));
-    $this->assertEqual($qt->id(), $edit['id']);
-    $this->assertEqual($qt->label(), $edit['label']);
-    $this->assertEqual($qt->getRenderer(), $edit['renderer']);
-    $this->assertEqual($qt->getHideEmptyTabs(), $edit['hide_empty_tabs']);
-    $this->assertEqual($qt->getDefaultTab(), $edit['default_tab']);
+    $this->assertEquals('Drupal\quicktabs\Entity\QuickTabsInstance', get_class($qt));
+    $this->assertEquals($qt->id(), $edit['id']);
+    $this->assertEquals($qt->label(), $edit['label']);
+    $this->assertEquals($qt->getRenderer(), $edit['renderer']);
+    $this->assertEquals($qt->getHideEmptyTabs(), $edit['hide_empty_tabs']);
+    $this->assertEquals($qt->getDefaultTab(), $edit['default_tab']);

     $configurationData = $qt->getConfigurationData();
-    $this->assertEqual($configurationData[0]['title'], $edit['configuration_data[0][title]']);
-    $this->assertEqual($configurationData[1]['title'], $edit['configuration_data[1][title]']);
-    $this->assertEqual($configurationData[0]['type'], $edit['configuration_data[0][type]']);
-    $this->assertEqual($configurationData[1]['type'], $edit['configuration_data[1][type]']);
-    $this->assertEqual($configurationData[0]['content']['node_content']['options']['nid'], $edit['configuration_data[0][content][node_content][options][nid]']);
-    $this->assertEqual($configurationData[1]['content']['node_content']['options']['nid'], $edit['configuration_data[1][content][node_content][options][nid]']);
-    $this->assertEqual($configurationData[0]['content']['node_content']['options']['view_mode'], $edit['configuration_data[0][content][node_content][options][view_mode]']);
-    $this->assertEqual($configurationData[1]['content']['node_content']['options']['view_mode'], $edit['configuration_data[1][content][node_content][options][view_mode]']);
-    $this->assertEqual($configurationData[0]['content']['node_content']['options']['hide_title'], $edit['configuration_data[0][content][node_content][options][hide_title]']);
-    $this->assertEqual($configurationData[1]['content']['node_content']['options']['hide_title'], $edit['configuration_data[1][content][node_content][options][hide_title]']);
+    $this->assertEquals($configurationData[0]['title'], $edit['configuration_data[0][title]']);
+    $this->assertEquals($configurationData[1]['title'], $edit['configuration_data[1][title]']);
+    $this->assertEquals($configurationData[0]['type'], $edit['configuration_data[0][type]']);
+    $this->assertEquals($configurationData[1]['type'], $edit['configuration_data[1][type]']);
+    $this->assertEquals($configurationData[0]['content']['node_content']['options']['nid'], $edit['configuration_data[0][content][node_content][options][nid]']);
+    $this->assertEquals($configurationData[1]['content']['node_content']['options']['nid'], $edit['configuration_data[1][content][node_content][options][nid]']);
+    $this->assertEquals($configurationData[0]['content']['node_content']['options']['view_mode'], $edit['configuration_data[0][content][node_content][options][view_mode]']);
+    $this->assertEquals($configurationData[1]['content']['node_content']['options']['view_mode'], $edit['configuration_data[1][content][node_content][options][view_mode]']);
+    $this->assertEquals($configurationData[0]['content']['node_content']['options']['hide_title'], $edit['configuration_data[0][content][node_content][options][hide_title]']);
+    $this->assertEquals($configurationData[1]['content']['node_content']['options']['hide_title'], $edit['configuration_data[1][content][node_content][options][hide_title]']);
+    $this->drupalGet('admin/structure/quicktabs/' . $qt->id() . '/delete');

-    $this->drupalPostForm('admin/structure/quicktabs/' . $qt->id() . '/delete', [], $this->t('Delete'));
+    $this->submitForm([], $this->t('Delete'));

     $qt = \Drupal::service('entity_type.manager')->getStorage('quicktabs_instance')->load($edit['id']);
     $this->assertNull($qt, $this->t('QuickTabs instance not found in database'));
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * AssertRawRector
 * AssertResponseRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

