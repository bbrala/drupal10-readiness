diff --git a/modules/simple_tmgmt_file/src/Plugin/tmgmt/Translator/SimpleTmgmtFileMailTranslator.php b/modules/simple_tmgmt_file/src/Plugin/tmgmt/Translator/SimpleTmgmtFileMailTranslator.php
index b47c6c1..84aca24 100644
--- a/modules/simple_tmgmt_file/src/Plugin/tmgmt/Translator/SimpleTmgmtFileMailTranslator.php
+++ b/modules/simple_tmgmt_file/src/Plugin/tmgmt/Translator/SimpleTmgmtFileMailTranslator.php
@@ -115,9 +115,9 @@ class SimpleTmgmtFileMailTranslator extends FileTranslator implements ManualTran
     $path = $job->getSetting('scheme') . '://tmgmt_file/' . $name . '.' . $job->getSetting('export_format');
     $dirname = dirname($path);
     if (\Drupal::service('file_system')->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS)) {
-      $file = file_save_data($export->export($job), $path, FileSystemInterface::EXISTS_REPLACE);
+      $file = \Drupal::service('file.repository')->writeData($export->export($job), $path, FileSystemInterface::EXISTS_REPLACE);
       $this->fileUsage->add($file, 'tmgmt_file', 'tmgmt_job', $job->id());
-      $job->submitted($this->t('Exported file can be <a href="@url" download>downloaded</a>.', ['@url' => file_create_url($path)]));
+      $job->submitted($this->t('Exported file can be <a href="@url" download>downloaded</a>.', ['@url' => \Drupal::service('file_url_generator')->generateAbsoluteString($path)]));
 
       if ($job->getSetting('send_mail')) {
         // @todo check multiple items.
diff --git a/src/EventSubscriber/InactiveJobsSubscriber.php b/src/EventSubscriber/InactiveJobsSubscriber.php
index 259f8c9..9fbb237 100644
--- a/src/EventSubscriber/InactiveJobsSubscriber.php
+++ b/src/EventSubscriber/InactiveJobsSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\simple_tmgmt\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Link;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -11,9 +13,7 @@ use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
 use Drupal\tmgmt\JobItemInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -86,11 +86,11 @@ class InactiveJobsSubscriber implements EventSubscriberInterface {
    * for the same node at the same time (several tabs, or different user)
    * and the translation page could be (re)loaded meanwhile.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The dispatched event.
    */
   public function kernelRequest(Event $event) {
-    if ($event instanceof GetResponseEvent) {
+    if ($event instanceof RequestEvent) {
       $request = $event->getRequest();
       $routeName = $request->get('_route');
 
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index c50f0fa..909717e 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
