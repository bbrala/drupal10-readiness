modules/contrib/commerce_cart_redirection/commerce_cart_redirection.install
modules/contrib/commerce_cart_redirection/commerce_cart_redirection.module
modules/contrib/commerce_cart_redirection/src/EventSubscriber/CommerceCartRedirectionSubscriber.php
modules/contrib/commerce_cart_redirection/src/Form/CommerceCartRedirectionConfigForm.php
modules/contrib/commerce_cart_redirection/tests/src/Functional/LoadTest.php

2 files with changes
====================

1) modules/contrib/commerce_cart_redirection/tests/src/Functional/LoadTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/commerce_cart_redirection/src/EventSubscriber/CommerceCartRedirectionSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\commerce_cart_redirection\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\commerce_cart\Event\CartEntityAddEvent;
 use Drupal\commerce_cart\Event\CartEvents;
 use Drupal\Core\Routing\RouteProviderInterface;
@@ @@
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\RequestStack;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ImmutableConfig;

@@ @@
    *
    * Redirects to the provided url if there is one.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The response event.
    *
    * @return void
    */
-  public function checkRedirectIssued(FilterResponseEvent $event) {
+  public function checkRedirectIssued(ResponseEvent $event) {
     $request = $event->getRequest();
     $redirect_url = $request->attributes->get('commerce_cart_redirection_url');
     if (isset($redirect_url)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

