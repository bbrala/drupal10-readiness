modules/contrib/form_display_visibility/form_display_visibility.module
modules/contrib/form_display_visibility/src/Annotation/FormDisplayVisibilityCondition.php
modules/contrib/form_display_visibility/src/Plugin/FormDisplayVisibilityCondition/AccessByPermission.php
modules/contrib/form_display_visibility/src/Plugin/FormDisplayVisibilityCondition/AccessByRole.php
modules/contrib/form_display_visibility/src/Plugin/FormDisplayVisibilityConditionInterface.php
modules/contrib/form_display_visibility/src/Plugin/FormDisplayVisibilityConditionPluginManager.php
modules/contrib/form_display_visibility/tests/src/Kernel/FormDisplayVisibilityAccessByPermissionTest.php

1 file with changes
===================

1) modules/contrib/form_display_visibility/tests/src/Kernel/FormDisplayVisibilityAccessByPermissionTest.php:97

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('entity_test');
     $this->installEntitySchema('user');
@@ @@
       'third_party_settings' => [],
       'region' => 'content',
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ @@
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ @@
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ @@
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser(['view test entity']);
     $this->setCurrentUser($normal_user);
@@ @@
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ @@
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ @@
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser();
     $normal_user->addRole($this->role->id());
@@ @@
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser(['view test entity']);
     $normal_user->addRole($this->role->id());
@@ @@
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser(['view test entity']);
     $this->setCurrentUser($normal_user);
@@ @@
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);

     $normal_user = $this->createUser();
     $normal_user->addRole($this->role->id());
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

