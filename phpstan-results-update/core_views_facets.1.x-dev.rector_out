modules/contrib/core_views_facets/core_views_facets.module
modules/contrib/core_views_facets/src/Plugin/facets/processor/contextual_filter_type/NodeType.php
modules/contrib/core_views_facets/src/Plugin/facets/processor/exposed_filter_type/Boolean.php
modules/contrib/core_views_facets/src/Plugin/facets/processor/exposed_filter_type/Bundle.php
modules/contrib/core_views_facets/src/Plugin/facets/processor/exposed_filter_type/Generic.php
modules/contrib/core_views_facets/src/Annotation/CoreViewsFacetsContextualFilterType.php
modules/contrib/core_views_facets/src/Annotation/CoreViewsFacetsExposedFilterType.php
modules/contrib/core_views_facets/src/CoreViewsFacetsContextualFilterTypeManager.php
modules/contrib/core_views_facets/src/Plugin/facets/processor/exposed_filter_type/Term.php
modules/contrib/core_views_facets/src/Plugin/facets/url_processor/CoreViewsUrlProcessor.php
modules/contrib/core_views_facets/src/CoreViewsFacetsExposedFilterTypeManager.php
modules/contrib/core_views_facets/src/CoreViewsFacetsFilterType.php
modules/contrib/core_views_facets/src/CoreViewsFacetsFilterTypeInterface.php
modules/contrib/core_views_facets/src/EventSubscriber/AjaxResponseSubscriber.php
modules/contrib/core_views_facets/src/Form/ViewsFacetForm.php
modules/contrib/core_views_facets/tests/src/Functional/CoreViewsIntegrationTest.php
modules/contrib/core_views_facets/src/Plugin/facets/facet_source/CoreViewsContextualFilter.php
modules/contrib/core_views_facets/src/Plugin/facets/facet_source/CoreViewsContextualFilterDeriver.php
modules/contrib/core_views_facets/src/Plugin/facets/facet_source/CoreViewsExposedFilter.php
modules/contrib/core_views_facets/tests/src/Functional/WebTestBase.php
modules/contrib/core_views_facets/src/Plugin/facets/facet_source/CoreViewsExposedFilterDeriver.php
modules/contrib/core_views_facets/src/Plugin/facets/facet_source/CoreViewsFacetSourceBase.php
modules/contrib/core_views_facets/src/Plugin/facets/processor/contextual_filter_type/Generic.php

2 files with changes
====================

1) modules/contrib/core_views_facets/tests/src/Functional/WebTestBase.php:97

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create the users used for the tests.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/core_views_facets/tests/src/Functional/CoreViewsIntegrationTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->drupalLogin($this->adminUser);
@@ @@
       'id' => $id,
       'facet_source_id' => $this->exposedFiltersFacetSourceId,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->responseContains('Please select a valid field.');
   }

@@ @@
       'facet_settings[empty_behavior]' => 'text',
       'facet_settings[empty_behavior_container][empty_behavior_text][value]' => 'No results found for this block!',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

   }

@@ @@
       'widget' => 'links',
       'widget_config[show_numbers]' => '0',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
   }

   /**
@@ @@
     $url_processor_form_values = [
       'url_processor' => 'core_views_url_processor',
     ];
-    $this->drupalPostForm($facet_source_edit_page, $url_processor_form_values, 'Save');
+    $this->drupalGet($facet_source_edit_page);
+    $this->submitForm($url_processor_form_values, 'Save');

     // Go to the Add facet page and make sure that returns a 200.
     $facet_add_page = Url::fromRoute('entity.facets_facet.add_form');
@@ @@
       'name' => '',
       'id' => $facet_id,
     ];
+    $this->drupalGet($facet_add_page);

     // Try filling out the form, but without having filled in a name for the
     // facet to test for form errors.
-    $this->drupalPostForm($facet_add_page, $form_values, 'Save');
+    $this->submitForm($form_values, 'Save');
     $this->assertSession()->pageTextContains('Name field is required.');
     $this->assertSession()->pageTextContains('Facet source field is required.');

     // Make sure that when filling out the name, the form error disappears.
     $form_values['name'] = $facet_name;
-    $this->drupalPostForm(NULL, $form_values, 'Save');
+    $this->submitForm($form_values, 'Save');
     $this->assertSession()->pageTextNotContains('Name field is required.');

     // Configure the facet source by selecting the test view.
     $this->drupalGet($facet_add_page);
-    $this->drupalPostForm(NULL, ['facet_source_id' => $facet_source_id], 'Configure facet source');
+    $this->submitForm(['facet_source_id' => $facet_source_id], 'Configure facet source');

     // The field is still required.
-    $this->drupalPostForm(NULL, $form_values, 'Save');
+    $this->submitForm($form_values, 'Save');
     $this->assertSession()->pageTextContains('Facet field field is required.');

     // Fill in all fields and make sure the 'field is required' message is no
@@ @@
       'facet_source_id' => $facet_source_id,
       'facet_source_configs[' . $facet_source_id . '][field_identifier]' => $facet_type,
     ];
-    $this->drupalPostForm(NULL, $form_values + $facet_source_form, 'Save');
+    $this->submitForm($form_values + $facet_source_form, 'Save');
     $this->assertSession()->pageTextNotContains('field is required.');

     // Make sure that the redirection to the display page is correct.
@@ @@

     // Change the facet name to add in "-2" to test editing of a facet works.
     $form_values = ['name' => $facet_name . ' - 2'];
-    $this->drupalPostForm($facet_edit_page, $form_values, 'Save');
+    $this->drupalGet($facet_edit_page);
+    $this->submitForm($form_values, 'Save');

     // Make sure that the redirection back to the overview was successful and
     // the edited facet is shown on the overview page.
@@ @@

     // Edit the form and change the facet's name back to the initial name.
     $form_values = ['name' => $facet_name];
-    $this->drupalPostForm($facet_edit_page, $form_values, 'Save');
+    $this->drupalGet($facet_edit_page);
+    $this->submitForm($form_values, 'Save');

     // Make sure that the redirection back to the overview was successful and
     // the edited facet is shown on the overview page.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

