diff --git a/modules/graphql_core/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageUrl.php b/modules/graphql_core/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageUrl.php
index 728211b..3219210 100644
--- a/modules/graphql_core/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageUrl.php
+++ b/modules/graphql_core/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageUrl.php
@@ -27,7 +27,7 @@ class ImageUrl extends FieldPluginBase {
    */
   protected function resolveValues($value, array $args, ResolveContext $context, ResolveInfo $info) {
     if ($value instanceof ImageItem && $value->entity && $value->entity->access('view')) {
-      yield file_create_url($value->entity->getFileUri());
+      yield \Drupal::service('file_url_generator')->generateAbsoluteString($value->entity->getFileUri());
     }
   }
 
diff --git a/modules/graphql_core/src/Plugin/GraphQL/Fields/File/FileUrl.php b/modules/graphql_core/src/Plugin/GraphQL/Fields/File/FileUrl.php
index 9702e99..7dc08ab 100644
--- a/modules/graphql_core/src/Plugin/GraphQL/Fields/File/FileUrl.php
+++ b/modules/graphql_core/src/Plugin/GraphQL/Fields/File/FileUrl.php
@@ -25,7 +25,7 @@ class FileUrl extends FieldPluginBase {
    */
   public function resolveValues($value, array $args, ResolveContext $context, ResolveInfo $info) {
     if ($value instanceof FileInterface) {
-      yield file_create_url($value->getFileUri());
+      yield \Drupal::service('file_url_generator')->generateAbsoluteString($value->getFileUri());
     }
   }
 
diff --git a/modules/graphql_core/tests/src/Kernel/Blocks/BlockTest.php b/modules/graphql_core/tests/src/Kernel/Blocks/BlockTest.php
index b84c9e6..934c4ec 100644
--- a/modules/graphql_core/tests/src/Kernel/Blocks/BlockTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Blocks/BlockTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql_core\Kernel\Blocks;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\block_content\Entity\BlockContent;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Tests\block\Traits\BlockCreationTrait;
@@ -13,6 +14,7 @@ use Drupal\Tests\graphql_core\Kernel\GraphQLCoreTestBase;
  * @group graphql_core
  */
 class BlockTest extends GraphQLCoreTestBase {
+  use ProphecyTrait;
   use BlockCreationTrait;
 
   /**
@@ -33,7 +35,7 @@ class BlockTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\Core\Extension\ThemeInstallerInterface $themeInstaller */
diff --git a/modules/graphql_core/tests/src/Kernel/Breadcrumbs/BreadcrumbsTest.php b/modules/graphql_core/tests/src/Kernel/Breadcrumbs/BreadcrumbsTest.php
index dae3064..8d3cdb0 100644
--- a/modules/graphql_core/tests/src/Kernel/Breadcrumbs/BreadcrumbsTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Breadcrumbs/BreadcrumbsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql_core\Kernel\Breadcrumbs;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Breadcrumb\Breadcrumb;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
@@ -15,6 +16,7 @@ use Prophecy\Argument;
  */
 class BreadcrumbsTest extends GraphQLCoreTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -25,7 +27,7 @@ class BreadcrumbsTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $breadcrumbManager = $this->prophesize('Drupal\Core\Breadcrumb\BreadcrumbManager');
diff --git a/modules/graphql_core/tests/src/Kernel/Entity/BundleLessEntityTest.php b/modules/graphql_core/tests/src/Kernel/Entity/BundleLessEntityTest.php
index b29fa68..df0cd06 100644
--- a/modules/graphql_core/tests/src/Kernel/Entity/BundleLessEntityTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Entity/BundleLessEntityTest.php
@@ -18,7 +18,7 @@ class BundleLessEntityTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     FieldStorageConfig::create([
       'field_name' => 'field_test',
diff --git a/modules/graphql_core/tests/src/Kernel/Entity/EntityByIdTest.php b/modules/graphql_core/tests/src/Kernel/Entity/EntityByIdTest.php
index ab0f6b5..753753d 100644
--- a/modules/graphql_core/tests/src/Kernel/Entity/EntityByIdTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Entity/EntityByIdTest.php
@@ -28,7 +28,7 @@ class EntityByIdTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $languageStorage */
diff --git a/modules/graphql_core/tests/src/Kernel/Entity/EntityFieldValueTest.php b/modules/graphql_core/tests/src/Kernel/Entity/EntityFieldValueTest.php
index afd87d0..0c529f1 100644
--- a/modules/graphql_core/tests/src/Kernel/Entity/EntityFieldValueTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Entity/EntityFieldValueTest.php
@@ -38,7 +38,7 @@ class EntityFieldValueTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
   }
 
@@ -232,10 +232,10 @@ GQL;
     $node = $this->createNode($values + $actualFieldValues);
 
     // Workaround for public file urls.
-    $expectedFieldValues['fieldFile'][0]['entity']['url'] = file_create_url($this->testFile->getFileUri());
-    $expectedFieldValues['fieldFile'][1]['entity']['url'] = file_create_url($this->testImage->getFileUri());
-    $expectedFieldValues['fieldImage'][0]['entity']['url'] = file_create_url($this->testFile->getFileUri());
-    $expectedFieldValues['fieldImage'][1]['entity']['url'] = file_create_url($this->testImage->getFileUri());
+    $expectedFieldValues['fieldFile'][0]['entity']['url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($this->testFile->getFileUri());
+    $expectedFieldValues['fieldFile'][1]['entity']['url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($this->testImage->getFileUri());
+    $expectedFieldValues['fieldImage'][0]['entity']['url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($this->testFile->getFileUri());
+    $expectedFieldValues['fieldImage'][1]['entity']['url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($this->testImage->getFileUri());
 
     $metadata = $this->defaultCacheMetaData();
     $metadata->addCacheTags([
diff --git a/modules/graphql_core/tests/src/Kernel/EntityMutation/EntityMutationTest.php b/modules/graphql_core/tests/src/Kernel/EntityMutation/EntityMutationTest.php
index e8ff2e6..c6c71a7 100644
--- a/modules/graphql_core/tests/src/Kernel/EntityMutation/EntityMutationTest.php
+++ b/modules/graphql_core/tests/src/Kernel/EntityMutation/EntityMutationTest.php
@@ -30,7 +30,7 @@ class EntityMutationTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->mockInputType('node_input', [
       'name' => 'NodeInput',
diff --git a/modules/graphql_core/tests/src/Kernel/EntityQuery/EntityQueryTest.php b/modules/graphql_core/tests/src/Kernel/EntityQuery/EntityQueryTest.php
index 0566204..46ab056 100644
--- a/modules/graphql_core/tests/src/Kernel/EntityQuery/EntityQueryTest.php
+++ b/modules/graphql_core/tests/src/Kernel/EntityQuery/EntityQueryTest.php
@@ -15,7 +15,7 @@ class EntityQueryTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->createContentType(['type' => 'a']);
     $this->createContentType(['type' => 'b']);
diff --git a/modules/graphql_core/tests/src/Kernel/GraphQLContentTestBase.php b/modules/graphql_core/tests/src/Kernel/GraphQLContentTestBase.php
index d1df9a0..4efc662 100644
--- a/modules/graphql_core/tests/src/Kernel/GraphQLContentTestBase.php
+++ b/modules/graphql_core/tests/src/Kernel/GraphQLContentTestBase.php
@@ -45,7 +45,7 @@ class GraphQLContentTestBase extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['node', 'filter', 'text']);
diff --git a/modules/graphql_core/tests/src/Kernel/GraphQLCoreTestBase.php b/modules/graphql_core/tests/src/Kernel/GraphQLCoreTestBase.php
index b1f359e..e0537ca 100644
--- a/modules/graphql_core/tests/src/Kernel/GraphQLCoreTestBase.php
+++ b/modules/graphql_core/tests/src/Kernel/GraphQLCoreTestBase.php
@@ -21,7 +21,7 @@ class GraphQLCoreTestBase extends GraphQLTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // User entity schema is required for the currentUserContext field.
     $this->installEntitySchema('user');
diff --git a/modules/graphql_core/tests/src/Kernel/Images/ImageFieldTest.php b/modules/graphql_core/tests/src/Kernel/Images/ImageFieldTest.php
index ab81903..ad98dd1 100644
--- a/modules/graphql_core/tests/src/Kernel/Images/ImageFieldTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Images/ImageFieldTest.php
@@ -23,7 +23,7 @@ class ImageFieldTest extends GraphQLContentTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('image');
     $this->installSchema('file', 'file_usage');
diff --git a/modules/graphql_core/tests/src/Kernel/Languages/LanguageTest.php b/modules/graphql_core/tests/src/Kernel/Languages/LanguageTest.php
index 917a452..fb92fe0 100644
--- a/modules/graphql_core/tests/src/Kernel/Languages/LanguageTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Languages/LanguageTest.php
@@ -22,7 +22,7 @@ class LanguageTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['language']);
diff --git a/modules/graphql_core/tests/src/Kernel/Menu/MenuTest.php b/modules/graphql_core/tests/src/Kernel/Menu/MenuTest.php
index 0b7fe83..8d7e482 100644
--- a/modules/graphql_core/tests/src/Kernel/Menu/MenuTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Menu/MenuTest.php
@@ -26,7 +26,7 @@ class MenuTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('menu_link_content');
     $this->installConfig('menu_link_content');
diff --git a/modules/graphql_core/tests/src/Kernel/Routing/ExternalRequestTest.php b/modules/graphql_core/tests/src/Kernel/Routing/ExternalRequestTest.php
index 538cc17..18cb38c 100644
--- a/modules/graphql_core/tests/src/Kernel/Routing/ExternalRequestTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Routing/ExternalRequestTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql_core\Kernel\Routing;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Tests\graphql_core\Kernel\GraphQLCoreTestBase;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Psr7\Response;
@@ -13,6 +14,7 @@ use GuzzleHttp\Psr7\Response;
  */
 class ExternalRequestTest extends GraphQLCoreTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -21,7 +23,7 @@ class ExternalRequestTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
   }
diff --git a/modules/graphql_core/tests/src/Kernel/Routing/InternalRequestTest.php b/modules/graphql_core/tests/src/Kernel/Routing/InternalRequestTest.php
index dd2a91f..06b9346 100644
--- a/modules/graphql_core/tests/src/Kernel/Routing/InternalRequestTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Routing/InternalRequestTest.php
@@ -19,7 +19,7 @@ class InternalRequestTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
   }
diff --git a/modules/graphql_core/tests/src/Kernel/Routing/RouteTest.php b/modules/graphql_core/tests/src/Kernel/Routing/RouteTest.php
index e113363..1f46949 100644
--- a/modules/graphql_core/tests/src/Kernel/Routing/RouteTest.php
+++ b/modules/graphql_core/tests/src/Kernel/Routing/RouteTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql_core\Kernel\Routing;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\GeneratedUrl;
 use Drupal\path_alias\AliasManagerInterface;
 use Drupal\Core\Routing\UrlGeneratorInterface;
@@ -15,6 +16,7 @@ use Prophecy\Argument;
  */
 class RouteTest extends GraphQLCoreTestBase {
 
+  use ProphecyTrait;
   public static $modules = [
     'graphql_context_test',
   ];
@@ -22,7 +24,7 @@ class RouteTest extends GraphQLCoreTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $aliasManager = $this->prophesize(AliasManagerInterface::class);
diff --git a/src/EventSubscriber/SubrequestSubscriber.php b/src/EventSubscriber/SubrequestSubscriber.php
index 1f9a265..b94736f 100644
--- a/src/EventSubscriber/SubrequestSubscriber.php
+++ b/src/EventSubscriber/SubrequestSubscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\graphql\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -14,10 +14,10 @@ class SubrequestSubscriber implements EventSubscriberInterface {
   /**
    * Handle kernel request events.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The kernel event object.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $request = $event->getRequest();
     if ($request->attributes->has('_graphql_subrequest')) {
       $request->attributes->set('_graphql_controller', $request->attributes->get('_controller'));
diff --git a/tests/src/Kernel/Extension/MutationTest.php b/tests/src/Kernel/Extension/MutationTest.php
index 3d14d3d..f2cae3a 100644
--- a/tests/src/Kernel/Extension/MutationTest.php
+++ b/tests/src/Kernel/Extension/MutationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql\Kernel\Extension;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\graphql_plugin_test\GarageInterface;
 use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
 
@@ -11,6 +12,7 @@ use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
  * @group graphql
  */
 class MutationTest extends GraphQLTestBase {
+  use ProphecyTrait;
   public static $modules = [
     'graphql_plugin_test',
   ];
diff --git a/tests/src/Kernel/Extension/OverrideTypeTest.php b/tests/src/Kernel/Extension/OverrideTypeTest.php
index 9f189b5..87c03b7 100644
--- a/tests/src/Kernel/Extension/OverrideTypeTest.php
+++ b/tests/src/Kernel/Extension/OverrideTypeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql\Kernel\Extension;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\graphql_plugin_test\GarageInterface;
 use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
 
@@ -11,6 +12,7 @@ use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
  * @group graphql
  */
 class OverrideTypeTest extends GraphQLTestBase {
+  use ProphecyTrait;
   public static $modules = [
     'graphql_plugin_test',
     'graphql_override_test',
diff --git a/tests/src/Kernel/Extension/RecursiveTypeTest.php b/tests/src/Kernel/Extension/RecursiveTypeTest.php
index 200a20c..d36fc8d 100644
--- a/tests/src/Kernel/Extension/RecursiveTypeTest.php
+++ b/tests/src/Kernel/Extension/RecursiveTypeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql\Kernel\Extension;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\graphql_plugin_test\GarageInterface;
 use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
 
@@ -11,6 +12,7 @@ use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
  * @group graphql
  */
 class RecursiveTypeTest extends GraphQLTestBase {
+  use ProphecyTrait;
   public static $modules = [
     'graphql_plugin_test',
   ];
diff --git a/tests/src/Kernel/Extension/TypeTest.php b/tests/src/Kernel/Extension/TypeTest.php
index 00b17da..6040f31 100644
--- a/tests/src/Kernel/Extension/TypeTest.php
+++ b/tests/src/Kernel/Extension/TypeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql\Kernel\Extension;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\graphql_plugin_test\GarageInterface;
 use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
 
@@ -11,6 +12,7 @@ use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
  * @group graphql
  */
 class TypeTest extends GraphQLTestBase {
+  use ProphecyTrait;
   public static $modules = [
     'graphql_plugin_test',
   ];
diff --git a/tests/src/Kernel/Framework/BufferedFieldTest.php b/tests/src/Kernel/Framework/BufferedFieldTest.php
index 021ba69..6008583 100644
--- a/tests/src/Kernel/Framework/BufferedFieldTest.php
+++ b/tests/src/Kernel/Framework/BufferedFieldTest.php
@@ -17,9 +17,7 @@ class BufferedFieldTest extends GraphQLTestBase {
    * Test if the schema is created properly.
    */
   public function testBatchedFields() {
-    $buffer = $this->getMockBuilder(BufferBase::class)
-      ->setMethods(['resolveBufferArray'])
-      ->getMock();
+    $buffer = $this->createMock(BufferBase::class);
 
     $users = [
       'a' => [
diff --git a/tests/src/Kernel/Framework/LanguageContextTest.php b/tests/src/Kernel/Framework/LanguageContextTest.php
index 90191a5..8e40a61 100644
--- a/tests/src/Kernel/Framework/LanguageContextTest.php
+++ b/tests/src/Kernel/Framework/LanguageContextTest.php
@@ -23,7 +23,7 @@ class LanguageContextTest extends GraphQLTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->mockType('node', ['name' => 'Node']);
diff --git a/tests/src/Kernel/Framework/PermissionsTest.php b/tests/src/Kernel/Framework/PermissionsTest.php
index 01340a7..34c4a66 100644
--- a/tests/src/Kernel/Framework/PermissionsTest.php
+++ b/tests/src/Kernel/Framework/PermissionsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql\Kernel\Framework;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\graphql\GraphQL\QueryProvider\QueryProviderInterface;
 use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
 use PhpParser\Node\Arg;
@@ -14,6 +15,7 @@ use Prophecy\Argument;
  */
 class PermissionsTest extends GraphQLTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -24,7 +26,7 @@ class PermissionsTest extends GraphQLTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->mockField('root', [
diff --git a/tests/src/Kernel/Framework/ResultCacheTest.php b/tests/src/Kernel/Framework/ResultCacheTest.php
index bbe0fec..d9c5f05 100644
--- a/tests/src/Kernel/Framework/ResultCacheTest.php
+++ b/tests/src/Kernel/Framework/ResultCacheTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql\Kernel\Framework;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Cache\Context\CacheContextsManager;
 use Drupal\Core\Cache\Context\ContextCacheKeys;
 use Drupal\graphql\GraphQL\Cache\CacheableValue;
@@ -16,6 +17,7 @@ use Prophecy\Argument;
  */
 class ResultCacheTest extends GraphQLTestBase {
 
+  use ProphecyTrait;
   /**
    * Check basic result caching.
    */
diff --git a/tests/src/Kernel/Framework/ResultTest.php b/tests/src/Kernel/Framework/ResultTest.php
index ed5d9cb..04289e0 100644
--- a/tests/src/Kernel/Framework/ResultTest.php
+++ b/tests/src/Kernel/Framework/ResultTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\graphql\Kernel\Framework;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\graphql\GraphQL\QueryProvider\QueryProviderInterface;
 use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
 use GraphQL\Server\OperationParams;
@@ -14,10 +15,11 @@ use Prophecy\Argument;
  */
 class ResultTest extends GraphQLTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->mockField('root', [
       'name' => 'root',
diff --git a/tests/src/Kernel/Framework/SecureFieldTest.php b/tests/src/Kernel/Framework/SecureFieldTest.php
index 48ca0f1..e6b1517 100644
--- a/tests/src/Kernel/Framework/SecureFieldTest.php
+++ b/tests/src/Kernel/Framework/SecureFieldTest.php
@@ -27,7 +27,7 @@ class SecureFieldTest extends GraphQLTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->mockField('secure', [
diff --git a/tests/src/Kernel/GraphQLFileTestBase.php b/tests/src/Kernel/GraphQLFileTestBase.php
index 040ed34..5060234 100644
--- a/tests/src/Kernel/GraphQLFileTestBase.php
+++ b/tests/src/Kernel/GraphQLFileTestBase.php
@@ -28,7 +28,7 @@ abstract class GraphQLFileTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('system');
     $this->installConfig('graphql');
diff --git a/tests/src/Kernel/GraphQLTestBase.php b/tests/src/Kernel/GraphQLTestBase.php
index 306c9c4..2f6f29b 100644
--- a/tests/src/Kernel/GraphQLTestBase.php
+++ b/tests/src/Kernel/GraphQLTestBase.php
@@ -96,7 +96,7 @@ abstract class GraphQLTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->injectTypeSystemPluginManagers($this->container);
 
diff --git a/tests/src/Traits/GraphQLFileTestTrait.php b/tests/src/Traits/GraphQLFileTestTrait.php
index a68ce72..c13f721 100644
--- a/tests/src/Traits/GraphQLFileTestTrait.php
+++ b/tests/src/Traits/GraphQLFileTestTrait.php
@@ -18,7 +18,7 @@ trait GraphQLFileTestTrait {
    *   The path to the collection of test query files.
    */
   protected function getQueriesDirectory() {
-    return drupal_get_path('module', explode('\\', get_class($this))[2]) . '/tests/queries';
+    return \Drupal::service('extension.list.module')->getPath(explode('\\', get_class($this))[2]) . '/tests/queries';
   }
 
   /**
diff --git a/tests/src/Traits/MockGraphQLPluginTrait.php b/tests/src/Traits/MockGraphQLPluginTrait.php
index 1d6f86e..a065395 100644
--- a/tests/src/Traits/MockGraphQLPluginTrait.php
+++ b/tests/src/Traits/MockGraphQLPluginTrait.php
@@ -122,21 +122,9 @@ trait MockGraphQLPluginTrait {
 
       $this->graphQLPlugins[$class] = [];
 
-      $mockFactory = $this
-        ->getMockBuilder(FactoryInterface::class)
-        ->setMethods([
-          'createInstance',
-        ])
-        ->getMock();
-
-      $mockDiscovery = $this
-        ->getMockBuilder(DiscoveryInterface::class)
-        ->setMethods([
-          'hasDefinition',
-          'getDefinitions',
-          'getDefinition',
-        ])
-        ->getMock();
+      $mockFactory = $this->createMock(FactoryInterface::class);
+
+      $mockDiscovery = $this->createMock(DiscoveryInterface::class);
 
       $decoratedDiscovery = new ContainerDerivativeDiscoveryDecorator($mockDiscovery);
 
@@ -245,7 +233,7 @@ trait MockGraphQLPluginTrait {
    * @param mixed $value
    *   The return value. Can also be a value callback.
    *
-   * @return \PHPUnit_Framework_MockObject_Stub_ReturnCallback
+   * @return \PHPUnit\Framework\MockObject\Stub\ReturnCallback
    *   The return callback promise.
    */
   protected function toPromise($value) {
@@ -262,7 +250,7 @@ trait MockGraphQLPluginTrait {
    * @param mixed $scope
    *   The resolver's bound object and class scope.
    *
-   * @return \PHPUnit_Framework_MockObject_Stub_ReturnCallback
+   * @return \PHPUnit\Framework\MockObject\Stub\ReturnCallback
    *   The return callback promise.
    */
   protected function toBoundPromise($value, $scope) {
diff --git a/tests/src/Traits/QueryFileTrait.php b/tests/src/Traits/QueryFileTrait.php
index e1e5310..baaa342 100644
--- a/tests/src/Traits/QueryFileTrait.php
+++ b/tests/src/Traits/QueryFileTrait.php
@@ -14,7 +14,7 @@ trait QueryFileTrait {
    *   The path to the collection of test query files.
    */
   protected function getQueriesDirectory() {
-    return drupal_get_path('module', explode('\\', get_class($this))[2]) . '/tests/queries';
+    return \Drupal::service('extension.list.module')->getPath(explode('\\', get_class($this))[2]) . '/tests/queries';
   }
 
   /**
diff --git a/tests/src/Unit/StringFormattingTest.php b/tests/src/Unit/StringFormattingTest.php
index 73ae563..fe62f62 100644
--- a/tests/src/Unit/StringFormattingTest.php
+++ b/tests/src/Unit/StringFormattingTest.php
@@ -12,11 +12,9 @@ use Drupal\Tests\UnitTestCase;
  */
 class StringFormattingTest extends UnitTestCase {
 
-  /**
-   * @expectedException \InvalidArgumentException
-   * @expectedExceptionMessageRegExp /Failed to create a specification compliant string representation for '.+'\./
-   */
   public function testFailureOnInvalidInput() {
+    $this->expectException(\InvalidArgumentException::class);
+    $this->expectExceptionMessageMatches('/Failed to create a specification compliant string representation for \'.+\'\./');
     StringHelper::camelCase('^%!@#&');
   }
 
