diff --git a/src/Controller/TweetFeed.php b/src/Controller/TweetFeed.php
index f5099e7..cb86541 100644
--- a/src/Controller/TweetFeed.php
+++ b/src/Controller/TweetFeed.php
@@ -1,6 +1,7 @@
 <?php
 namespace Drupal\tweet_feed\Controller;
 
+use Drupal\taxonomy\Entity\Term;
 use Drupal\Core\Link;
 use Drush\Log;
 use Drupal\Core\Controller\ControllerBase;
@@ -454,7 +455,7 @@ class TweetFeed extends ControllerBase {
         }
       }
       if (empty($tid)) {
-        $new_term = \Drupal\taxonomy\Entity\Term::create([
+        $new_term = Term::create([
           'vid' => $taxonomy,
           'name' => $taxonomy_name,
         ]);
diff --git a/src/Entity/TweetEntity.php b/src/Entity/TweetEntity.php
index b620543..cd99db5 100755
--- a/src/Entity/TweetEntity.php
+++ b/src/Entity/TweetEntity.php
@@ -269,7 +269,7 @@ class TweetEntity extends ContentEntityBase implements TweetEntityInterface {
     foreach ($files as $file) {
       $file_uri = $file->getFileUri();
       // I can't believe this will survive Drupal 9 but there is no deprecation notice on it yet.
-      $urls[] = file_create_url($file_uri);
+      $urls[] = \Drupal::service('file_url_generator')->generateAbsoluteString($file_uri);
     }
     return $urls;
   }
diff --git a/tweet_feed.install b/tweet_feed.install
index 0eefa17..a5eb25c 100755
--- a/tweet_feed.install
+++ b/tweet_feed.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\taxonomy\Entity\Term;
+use Drupal\file\Entity\File;
 use Drupal\taxonomy\Entity\Vocabulary;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 
@@ -23,7 +25,7 @@ function tweet_feed_uninstall() {
         $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid->id());
         if (!empty($terms)) {
           foreach ($terms as $term) {
-            $term = \Drupal\taxonomy\Entity\Term::load($term->tid);
+            $term = Term::load($term->tid);
             $term->delete();
           }
         }
@@ -53,9 +55,9 @@ function tweet_feed_update_9401() {
         $files = $entity->get('linked_images')->getValue();
         foreach ($files as $file) {
           $fid = $file['target_id'];
-          $file_image = \Drupal\file\Entity\File::load($fid);
+          $file_image = File::load($fid);
           if ($file_image) {
-            $imageSRC = file_create_url($file_image->getFileUri());
+            $imageSRC = \Drupal::service('file_url_generator')->generateAbsoluteString($file_image->getFileUri());
             $filename = basename($imageSRC);
             if (empty($tweet_image_titles[$filename])) {
               $tweet_image_titles[$filename] = $entity_id;
