modules/contrib/shortcode/shortcode_basic_tags/shortcode_basic_tags.module
modules/contrib/shortcode/shortcode_example/src/Plugin/Shortcode/BootstrapColumnShortcode.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/BlockShortcode.php
modules/contrib/shortcode/src/Annotation/Shortcode.php
modules/contrib/shortcode/src/Plugin/Filter/Shortcode.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/ButtonShortcode.php
modules/contrib/shortcode/src/Plugin/Filter/ShortcodeCorrector.php
modules/contrib/shortcode/src/Plugin/ShortcodeBase.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/ClearShortcode.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/DropcapShortcode.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/HighlightShortcode.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/ImageShortcode.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/ItemShortcode.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/LinkShortcode.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/QuoteShortcode.php
modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/RandomShortcode.php
modules/contrib/shortcode/src/Plugin/ShortcodeInterface.php
modules/contrib/shortcode/src/ShortcodePluginManager.php
modules/contrib/shortcode/src/ShortcodeService.php
modules/contrib/shortcode/tests/src/Functional/ShortcodeTest.php

3 files with changes
====================

1) modules/contrib/shortcode/shortcode_basic_tags/src/Plugin/Shortcode/ImageShortcode.php:41

    ---------- begin diff ----------
@@ @@
           $attributes['src'] = ImageStyle::load($attributes['imagestyle'])->buildUrl($properties['path']);
         }
         else {
-          $attributes['src'] = file_create_url($properties['path']);
+          $attributes['src'] = \Drupal::service('file_url_generator')->generateAbsoluteString($properties['path']);
         }
       }
       if ($properties['alt'] && !$attributes['alt']) {
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/shortcode/tests/src/Functional/ShortcodeTest.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * Perform any initial set up tasks that run before every test method.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->shortcodeService = $this->container->get('shortcode');
     $this->siteUrl = Url::fromRoute('<front>', [], ["absolute" => TRUE])->toString();
@@ @@

     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }

@@ @@

     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }

@@ @@

     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }

@@ @@
     $test_input = '[highlight]highlighted text[/highlight]';
     $expected_output = '<span class="highlight">highlighted text</span>';
     $output = $this->shortcodeService->process($test_input);
-    $this->assertEqual($output, $expected_output, 'Highlight shortcode output matches.');
+    $this->assertEquals($output, $expected_output, 'Highlight shortcode output matches.');

     $test_input = '[highlight class="custom-class"]highlighted text[/highlight]';
     $expected_output = '<span class="custom-class highlight">highlighted text</span>';
     $output = $this->shortcodeService->process($test_input);
-    $this->assertEqual($output, $expected_output, 'Highlight shortcode with custom class output matches.');
+    $this->assertEquals($output, $expected_output, 'Highlight shortcode with custom class output matches.');
   }

   /**
@@ @@

     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }

@@ @@

     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }

@@ @@

     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }

@@ @@
     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
       $output = preg_replace('/\s+/', ' ', $output);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }

@@ @@

     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual(strlen($output), $set['output'], $set['message']);
+      $this->assertEquals(strlen($output), $set['output'], $set['message']);
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/shortcode/src/Plugin/ShortcodeBase.php:300

    ---------- begin diff ----------
@@ @@
     $field_media = $this->getMediaField($media_entity);
     if ($field_media) {
       $file = $field_media->entity;
-      return file_create_url($file->getFileUri());
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     }
     return FALSE;
   }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

