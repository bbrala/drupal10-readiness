diff --git a/media_entity_libsyn.install b/media_entity_libsyn.install
index fdc8914..10a19e4 100644
--- a/media_entity_libsyn.install
+++ b/media_entity_libsyn.install
@@ -14,7 +14,7 @@ function media_entity_libsyn_install() {
   /** @var \Drupal\Core\File\FileSystemInterface $file_system */
   $file_system = \Drupal::service('file_system');
 
-  $source = drupal_get_path('module', 'media_entity_libsyn') . '/images/icons';
+  $source = \Drupal::service('extension.list.module')->getPath('media_entity_libsyn') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
   $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
 
diff --git a/tests/src/Functional/LibsynEmbedFormatterTest.php b/tests/src/Functional/LibsynEmbedFormatterTest.php
index 288bb05..b6ad47b 100644
--- a/tests/src/Functional/LibsynEmbedFormatterTest.php
+++ b/tests/src/Functional/LibsynEmbedFormatterTest.php
@@ -47,7 +47,7 @@ class LibsynEmbedFormatterTest extends MediaFunctionalTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a test libsyn media bundle.
@@ -67,8 +67,8 @@ class LibsynEmbedFormatterTest extends MediaFunctionalTestBase {
 
     // Assert that the media bundle has the expected values before proceeding.
     $this->drupalGet('admin/structure/media/manage/' . $this->bundle->id());
-    $this->assertFieldByName('label', $this->bundle->label());
-    $this->assertFieldByName('source', 'libsyn');
+    $this->assertSession()->fieldValueEquals('label', $this->bundle->label());
+    $this->assertSession()->fieldValueEquals('source', 'libsyn');
 
     // Media added a URL source field for us, so let's find it.
     $source_field = $this->bundle
@@ -81,7 +81,8 @@ class LibsynEmbedFormatterTest extends MediaFunctionalTestBase {
       'settings[link_type]' => 16,
       'settings[title]' => 0,
     ];
-    $this->drupalPostForm('admin/structure/media/manage/' . $this->bundle->id() . '/fields/' . $source_field->getConfig($this->bundle->id())->id(), $edit, t('Save settings'));
+    $this->drupalGet('admin/structure/media/manage/' . $this->bundle->id() . '/fields/' . $source_field->getConfig($this->bundle->id())->id());
+    $this->submitForm($edit, t('Save settings'));
     // Check if the field has been saved successfully.
     $assert->pageTextMatches('/Saved .+ configuration/');
     $assert->pageTextContains($source_field->getName());
@@ -93,8 +94,9 @@ class LibsynEmbedFormatterTest extends MediaFunctionalTestBase {
       // Ensure the field is not hidden from view.
       'fields[' . $source_field->getName() . '][region]' => 'content',
     ];
-    $this->drupalPostForm('admin/structure/media/manage/' . $this->bundle->id() . '/display', $edit, t('Save'));
-    $this->assertText('Your settings have been saved.');
+    $this->drupalGet('admin/structure/media/manage/' . $this->bundle->id() . '/display');
+    $this->submitForm($edit, t('Save'));
+    $this->assertSession()->pageTextContains('Your settings have been saved.');
 
     // Add a media entity.
     $findable_name = 'podcast_entity_' . $this->randomMachineName();
@@ -103,7 +105,8 @@ class LibsynEmbedFormatterTest extends MediaFunctionalTestBase {
       'name[0][value]' => $findable_name,
       $source_field->getName() . '[0][uri]' => $podcast_url,
     ];
-    $this->drupalPostForm('media/add/' . $this->bundle->id(), $edit, 'Save');
+    $this->drupalGet('media/add/' . $this->bundle->id());
+    $this->submitForm($edit, 'Save');
     // We should be redirected to the media listing page.
     $assert->pageTextContains($findable_name);
 
@@ -132,14 +135,16 @@ class LibsynEmbedFormatterTest extends MediaFunctionalTestBase {
     $edit = [
       'fields[field_' . $field_name . '][type]' => 'entity_reference_entity_view',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/' . $node_type->id() . '/display', $edit, 'Save');
+    $this->drupalGet('admin/structure/types/manage/' . $node_type->id() . '/display');
+    $this->submitForm($edit, 'Save');
 
     // Add a node that references our media entity.
     $edit = [
       'title[0][value]' => 'Test Node',
       'field_' . $field_name . '[0][target_id]' => $media_entity->label() . ' (' . $media_entity->id() . ')',
     ];
-    $this->drupalPostForm('node/add/' . $node_type->id(), $edit, 'Save');
+    $this->drupalGet('node/add/' . $node_type->id());
+    $this->submitForm($edit, 'Save');
 
     // Assert that the formatter exists on this page.
     $this->assertFieldByXPath('//iframe');
