modules/contrib/reporting/src/Controller/ReportingEndpoint.php
modules/contrib/reporting/src/Controller/ReportingEndpointListBuilder.php
modules/contrib/reporting/src/Entity/ReportingEndpoint.php
modules/contrib/reporting/src/Entity/ReportingEndpointInterface.php
modules/contrib/reporting/src/EventSubscriber/ResponseSubscriber.php
modules/contrib/reporting/src/Form/ReportingEndpointDeleteForm.php
modules/contrib/reporting/src/Form/ReportingEndpointForm.php
modules/contrib/reporting/src/Plugin/CspReportingHandler/ReportTo.php
modules/contrib/reporting/src/ReportingResponse.php

1 file with changes
===================

1) modules/contrib/reporting/src/EventSubscriber/ResponseSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\reporting\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ @@
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\reporting\ReportingResponse;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Prevent other response event listeners from altering reporting responses.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The response event.
    */
-  public function reportingResponses(FilterResponseEvent $event) {
+  public function reportingResponses(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
@@ @@
   /**
    * Add report-to header to the response.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The response event.
    */
-  public function addReportToHeader(FilterResponseEvent $event) {
+  public function addReportToHeader(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 1 file has been changed by Rector                                         

