modules/contrib/cck_select_other/tests/src/TestSite/SelectOtherInstallTestScript.php
modules/contrib/cck_select_other/cck_select_other.install
modules/contrib/cck_select_other/cck_select_other.module
modules/contrib/cck_select_other/cck_select_other.views.inc
modules/contrib/cck_select_other/src/EntityDisplayTrait.php
modules/contrib/cck_select_other/src/Plugin/Field/FieldFormatter/SelectOtherFormatter.php
modules/contrib/cck_select_other/tests/src/Unit/EntityDisplayTraitTest.php
modules/contrib/cck_select_other/src/Plugin/Field/FieldWidget/SelectOtherWidget.php
modules/contrib/cck_select_other/src/Plugin/views/filter/SelectOtherFilter.php
modules/contrib/cck_select_other/src/Validation/Plugin/Validation/Constraint/SelectOtherAllowedValuesConstraint.php
modules/contrib/cck_select_other/src/Validation/Plugin/Validation/Constraint/SelectOtherAllowedValuesConstraintValidator.php
modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherDefaultValueTest.php
modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherEmptyTest.php
modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherFieldTypeTest.php
modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherHtmlEntitiesTest.php
modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherMultipleFieldTest.php
modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherMultipleValueTest.php
modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherRequiredTest.php
modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherTestBase.php

7 files with changes
====================

1) modules/contrib/cck_select_other/tests/src/Unit/EntityDisplayTraitTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->mock = $this->getMockForTrait('Drupal\cck_select_other\EntityDisplayTrait');

     // Mock the entity manager.
-    $this->entityManager = $this->getMockBuilder('\Drupal\Core\Entity\EntityTypeManagerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->entityManager = $this->createMock('\Drupal\Core\Entity\EntityTypeManagerInterface');

     $container = new ContainerBuilder();
     $container->set('entity_type.manager', $this->entityManager);
@@ @@
    */
   public function testHasSelectOtherWidget($plugin_id, $expected) {
     // Mock Field plugin settings.
-    $fieldSettings = $this->getMockBuilder('\Drupal\Core\Field\PluginSettingsInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $fieldSettings = $this->createMock('\Drupal\Core\Field\PluginSettingsInterface');
     $fieldSettings
       ->expects($this->any())
       ->method('getPluginId')
@@ @@
       ->willReturn($plugin_id);

     // Mock Entity Form Display.
-    $entityDisplay = $this->getMockBuilder('\Drupal\Core\Entity\Display\EntityDisplayInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityDisplay = $this->createMock('\Drupal\Core\Entity\Display\EntityDisplayInterface');
     $entityDisplay
       ->expects($this->any())
       ->method('getRenderer')
@@ @@
       ->willReturn($fieldSettings);

     // Mock the entity storage interface.
-    $entityStorage = $this->getMockBuilder('\Drupal\Core\Entity\EntityStorageInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityStorage = $this->createMock('\Drupal\Core\Entity\EntityStorageInterface');
     $entityStorage
       ->expects($this->any())
       ->method('loadByProperties')
@@ @@
       ->willReturn($entityStorage);

     // Mock the definition.
-    $definition = $this->getMockBuilder('\Drupal\Core\Field\FieldDefinitionInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $definition = $this->createMock('\Drupal\Core\Field\FieldDefinitionInterface');
     $definition
       ->expects($this->any())
       ->method('getTargetEntityTypeId')
@@ @@
    */
   public function testGetWidgetSettings($plugin_id, array $expected) {
     // Mock Field plugin settings.
-    $fieldSettings = $this->getMockBuilder('\Drupal\Core\Field\PluginSettingsInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $fieldSettings = $this->createMock('\Drupal\Core\Field\PluginSettingsInterface');
     $fieldSettings
       ->expects($this->any())
       ->method('getPluginId')
@@ @@
       ->willReturn($expected);

     // Mock Entity Form Display.
-    $entityDisplay = $this->getMockBuilder('\Drupal\Core\Entity\Display\EntityDisplayInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityDisplay = $this->createMock('\Drupal\Core\Entity\Display\EntityDisplayInterface');
     $entityDisplay
       ->expects($this->any())
       ->method('getRenderer')
@@ @@
       ->willReturn($fieldSettings);

     // Mock the entity storage interface.
-    $entityStorage = $this->getMockBuilder('\Drupal\Core\Entity\EntityStorageInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityStorage = $this->createMock('\Drupal\Core\Entity\EntityStorageInterface');
     $entityStorage
       ->expects($this->any())
       ->method('loadByProperties')
@@ @@
       ->willReturn($entityStorage);

     // Mock the definition.
-    $definition = $this->getMockBuilder('\Drupal\Core\Field\FieldDefinitionInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $definition = $this->createMock('\Drupal\Core\Field\FieldDefinitionInterface');
     $definition
       ->expects($this->any())
       ->method('getTargetEntityTypeId')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherTestBase.php:45

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->contentType = $this->createContentType();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherRequiredTest.php:49

    ---------- begin diff ----------
@@ @@
       $field_name . '[0][select_other_list]' => $list_value,
       $field_name . '[0][select_other_text_input]' => $other_value,
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     $selector = '//input[@name="' . $field_name . '[0][select_other_text_input]" and contains(@class, "error")]';
     $this->assertSession()->responseContains($expectedMessage);
     if ($isValid) {
@@ @@
       $value = $this->getRandomGenerator()->word(25);
       $edit[$field_name . '[0][select_other_list]'] = 'other';
       $edit[$field_name . '[0][select_other_text_input]'] = $value;
-      $this->drupalPostForm(NULL, $edit, 'Save');
+      $this->submitForm($edit, 'Save');
       $this->assertSession()->pageTextContains($value);
     }
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherMultipleFieldTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create the first field.
@@ @@
       $field_two . '[0][select_other_list]' => 'other',
       $field_two . '[0][select_other_text_input]' => $value_two,
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->elementTextContains('css', 'div', $this->firstOptions[$value_one]);
     $this->assertSession()
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherHtmlEntitiesTest.php:33

    ---------- begin diff ----------
@@ @@
       $field_name . '[0][select_other_list]' => 'other',
       $field_name . '[0][select_other_text_input]' => '&',
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     // Decode entities in the page so that we can assert that there are no other
     // raw entities in there. MinkWTF. Still not sure if this is going to work
     // the same way even getting the raw session.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherFieldTypeTest.php:29

    ---------- begin diff ----------
@@ @@
     ];
     $config_values = ['required' => 0];
     $field = $this->createSelectOtherListField($field_type, $storage_values, $config_values);
-    $this->assertEqual(5, count($field->getSettings()['allowed_values']));
+    $this->assertEquals(5, count($field->getSettings()['allowed_values']));
     $field_name = $field->getName();

     // Create a new node with other value after logging in.
@@ @@
       $field_name . '[0][select_other_list]' => 'other',
       $field_name . '[0][select_other_text_input]' => $other_value,
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->elementTextContains('css', 'div', $other_value);

@@ @@
       $field_name . '[0][select_other_list]' => $value,
       $field_name . '[0][select_other_text_input]' => '',
     ];
-    $this->drupalPostForm('/node/1/edit', $edit, 'Save');
+    $this->drupalGet('/node/1/edit');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->elementTextContains('css', 'div', $label);
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherEmptyTest.php:29

    ---------- begin diff ----------
@@ @@
       $field_name . '[0][select_other_list]' => 'other',
       $field_name . '[0][select_other_text_input]' => '',
     ];
-    $this->drupalPostForm('/node/add/' . $this->contentType->id(), $edit, 'Save');
+    $this->drupalGet('/node/add/' . $this->contentType->id());
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->responseNotContains('<div class="field__item"></div>');

@@ @@
     $edit = [
       $field_name . '[0][select_other_list]' => '_none',
     ];
-    $this->drupalPostForm('/node/1/edit', $edit, 'Save');
+    $this->drupalGet('/node/1/edit');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()
       ->responseNotContains('<div class="field__item"></div>');
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherDe
         faultValueTest.php" file, due to:                                      
         "System error: "Invalid value"                                         
         Run Rector with "--debug" option and post the report here:             
         https://github.com/rectorphp/rector/issues/new". On line: 212          

 [ERROR] Could not process                                                      
         "modules/contrib/cck_select_other/tests/src/Functional/CckSelectOtherMu
         ltipleValueTest.php" file, due to:                                     
         "System error: "Invalid value"                                         
         Run Rector with "--debug" option and post the report here:             
         https://github.com/rectorphp/rector/issues/new". On line: 212          

