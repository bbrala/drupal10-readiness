modules/contrib/webform_pardot_handler/src/Entity/PardotSubmission.php
modules/contrib/webform_pardot_handler/webform_pardot_handler.module
modules/contrib/webform_pardot_handler/src/Entity/PardotSubmissionInterface.php
modules/contrib/webform_pardot_handler/src/Form/PardotSubmissionDeleteForm.php
modules/contrib/webform_pardot_handler/src/PardotHandler.php
modules/contrib/webform_pardot_handler/src/PardotHandlerInterface.php
modules/contrib/webform_pardot_handler/src/PardotSubmissionAccessControlHandler.php
modules/contrib/webform_pardot_handler/src/PardotSubmissionListBuilder.php
modules/contrib/webform_pardot_handler/src/Plugin/QueueWorker/PardotSubmissionQueue.php
modules/contrib/webform_pardot_handler/src/Plugin/WebformHandler/PardotSubmission.php
modules/contrib/webform_pardot_handler/tests/src/Functional/ConfigurationTest.php
modules/contrib/webform_pardot_handler/tests/src/Functional/MultistepFormTest.php
modules/contrib/webform_pardot_handler/tests/src/Functional/PardotSubmissionListBuilderTest.php
modules/contrib/webform_pardot_handler/tests/src/Unit/PardotHandlerTest.php

3 files with changes
====================

1) modules/contrib/webform_pardot_handler/tests/src/Unit/PardotHandlerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\webform_pardot_handler\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Tests\UnitTestCase;

 use Drupal\webform_pardot_handler\Entity\PardotSubmissionInterface;
@@ @@
  */
 class PardotHandlerTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->pardot_handler = new PardotHandler(
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/webform_pardot_handler/tests/src/Functional/MultistepFormTest.php:38

    ---------- begin diff ----------
@@ @@
     $numInitialSubmissions = count($webform_submissions);

     $webform = Webform::load('multi_step_pardot_test_form');
-    $this->drupalPostForm($webform->toUrl(), [
+    $this->drupalGet($webform->toUrl());
+    $this->submitForm([
       'first_page_textbox' => 'anything',
     ], 'Next >');
     $this->submitForm([
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/webform_pardot_handler/tests/src/Functional/ConfigurationTest.php:47

    ---------- begin diff ----------
@@ @@
     }
     else {
       $config_name = 'webform.webform.' . $id;
-      $config_directory = drupal_get_path('module', 'webform_pardot_handler') . '/tests/modules/test/config/install';
+      $config_directory = \Drupal::service('extension.list.module')->getPath('webform_pardot_handler') . '/tests/modules/test/config/install';
       if (!file_exists("$config_directory/$config_name.yml")) {
         throw new \Exception("Webform $id does not exist in $config_directory");
       }
@@ @@
     $webformId = 'multi_step_pardot_test_form';
     $handlerId = 'submit_data_to_pardot';
     $handlerEditPath = "/admin/structure/webform/manage/{$webformId}/handlers/{$handlerId}/edit";
+    $this->drupalGet($handlerEditPath);

     // Invalid URLs should not be allowed.
-    $this->drupalPostForm($handlerEditPath, [
+    $this->submitForm([
       'settings[pardot_url]' => 'foo',
     ], 'Save');
-    $this->assertText('Pardot post url must be a valid URL.');
+    $this->assertSession()->pageTextContains('Pardot post url must be a valid URL.');
+    $this->drupalGet($handlerEditPath);

     // Valid URLs with extra whitespace should be accepted, but the whitespace
     // should be trimmed.
-    $this->drupalPostForm($handlerEditPath, [
+    $this->submitForm([
       'settings[pardot_url]' => ' https://example.com/ ',
     ], 'Save');
-    $this->assertText('The webform handler was successfully updated.');
+    $this->assertSession()->pageTextContains('The webform handler was successfully updated.');

     /** @var \Drupal\webform\Entity\Webform $webform */
     $webform = Webform::load($webformId);
@@ @@
     $configuration = $handler->getConfiguration();
     $settings = !empty($configuration['settings']) ? $configuration['settings'] : [];
     self::assertTrue(isset($settings['pardot_url']) && $settings['pardot_url'] === 'https://example.com/', 'Whitespace is trimmed from the Pardot URL.');
+    $this->drupalGet($handlerEditPath);

-    $this->drupalPostForm($handlerEditPath, [
+    $this->submitForm([
       'settings[pardot_url]' => 'https://example.com/pardot',
     ], 'Save');
-    $this->assertText('The webform handler was successfully updated.');
+    $this->assertSession()->pageTextContains('The webform handler was successfully updated.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * DrupalGetPathRector
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

