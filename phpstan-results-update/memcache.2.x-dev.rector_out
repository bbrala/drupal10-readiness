modules/contrib/memcache/memcache_admin/src/Stats/MemcacheStatsInterface.php
modules/contrib/memcache/memcache.install
modules/contrib/memcache/src/MultipartItem.php
modules/contrib/memcache/memcache_admin/src/Stats/MemcacheStatsObject.php
modules/contrib/memcache/memcache_admin/memcache_admin.install
modules/contrib/memcache/tests/modules/memcache_test/src/MemcacheTestServiceProvider.php
modules/contrib/memcache/memcache_admin/src/Controller/MemcacheStatisticsController.php
modules/contrib/memcache/tests/src/Functional/MemcacheLockFunctionalTest.php
modules/contrib/memcache/tests/src/Kernel/MemcacheBackendTest.php
modules/contrib/memcache/tests/src/Unit/MemcacheSettingsTest.php
modules/contrib/memcache/src/Cache/TimestampCacheTagsChecksum.php
modules/contrib/memcache/src/Connection/MemcacheConnection.php
modules/contrib/memcache/src/Connection/MemcacheConnectionInterface.php
modules/contrib/memcache/src/Connection/MemcachedConnection.php
modules/contrib/memcache/src/Driver/DriverBase.php
modules/contrib/memcache/src/Driver/MemcacheDriver.php
modules/contrib/memcache/src/Driver/MemcacheDriverFactory.php
modules/contrib/memcache/memcache_admin/src/Event/MemcacheStatsEvent.php
modules/contrib/memcache/src/Driver/MemcachedDriver.php
modules/contrib/memcache/memcache_admin/src/EventSubscriber/McrouterStatsSubscriber.php
modules/contrib/memcache/memcache_admin/src/EventSubscriber/MemcacheAdminSubscriber.php
modules/contrib/memcache/src/DrupalMemcacheInterface.php
modules/contrib/memcache/src/Invalidator/MemcacheTimestampInvalidator.php
modules/contrib/memcache/src/Invalidator/TimestampInvalidatorBase.php
modules/contrib/memcache/src/Invalidator/TimestampInvalidatorInterface.php
modules/contrib/memcache/src/Lock/MemcacheLockBackend.php
modules/contrib/memcache/src/Lock/MemcacheLockFactory.php
modules/contrib/memcache/src/MemcacheBackend.php
modules/contrib/memcache/memcache_admin/src/EventSubscriber/MemcacheServerStatsSubscriber.php
modules/contrib/memcache/memcache_admin/src/Form/MemcacheAdminSettingsForm.php
modules/contrib/memcache/memcache_admin/src/Stats/McrouterStatsObject.php
modules/contrib/memcache/src/MemcacheBackendFactory.php
modules/contrib/memcache/src/MemcacheException.php
modules/contrib/memcache/src/MemcacheSettings.php

4 files with changes
====================

1) modules/contrib/memcache/tests/src/Unit/MemcacheSettingsTest.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->config = [
       'memcache' => [
         'servers' => ['127.0.0.2:12345' => 'default'],
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/memcache/memcache_admin/src/EventSubscriber/MemcacheAdminSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\memcache_admin\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Render\Element\HtmlTag;
 use Drupal\Core\Render\Markup;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Component\Render\HtmlEscapedText;
 use Drupal\Core\Render\HtmlResponse;
@@ @@
   /**
    * Display statistics on page.
    */
-  public function displayStatistics(FilterResponseEvent $event) {
+  public function displayStatistics(ResponseEvent $event) {
     $user = \Drupal::currentUser();

     if ($user->id() == 0) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


3) modules/contrib/memcache/memcache_admin/src/Event/MemcacheStatsEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\memcache_admin\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\memcache\DrupalMemcacheInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Memcache Stats Event
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/memcache/src/MemcacheBackend.php:179

    ---------- begin diff ----------
@@ @@
     $cache->valid = TRUE;

     // Items that have expired are invalid.
-    if ($cache->expire != CacheBackendInterface::CACHE_PERMANENT && $cache->expire <= REQUEST_TIME) {
+    if ($cache->expire != CacheBackendInterface::CACHE_PERMANENT && $cache->expire <= \Drupal::time()->getRequestTime()) {
       $cache->valid = FALSE;
     }

@@ @@
   public function invalidateMultiple(array $cids) {
     foreach ($cids as $cid) {
       if ($item = $this->get($cid)) {
-        $item->expire = REQUEST_TIME - 1;
+        $item->expire = \Drupal::time()->getRequestTime() - 1;
         $this->memcache->set($cid, $item);
       }
     }
    ----------- end diff -----------

Applied rules:
 * RequestTimeConstRector
 * ArgumentRemoverRector
 * WrapReturnRector


 [OK] 4 files have been changed by Rector                                       

