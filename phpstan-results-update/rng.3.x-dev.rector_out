modules/contrib/rng/rng.field.defaults.inc
modules/contrib/rng/rng_debug/src/Controller/DebugController.php
modules/contrib/rng/src/Breadcrumb/GroupBreadcrumbBuilder.php
modules/contrib/rng/src/Exception/InvalidRegistrant.php
modules/contrib/rng/src/Entity/RegistrationType.php
modules/contrib/rng/src/Form/MessageListForm.php
modules/contrib/rng/src/Plugin/Action/RegistrationAccess.php
modules/contrib/rng/src/Plugin/views/field/RegistrationDateStringField.php
modules/contrib/rng/src/Views/RegistrantViewsData.php
modules/contrib/rng/src/Exception/MaxRegistrantsExceededException.php
modules/contrib/rng/src/Form/Entity/RegistrantDeleteForm.php
modules/contrib/rng/tests/src/Kernel/RngKernelTestBase.php
modules/contrib/rng/src/Views/RegistrationGroupViewsData.php
modules/contrib/rng/src/Plugin/views/filter/SingleDateFilter.php
modules/contrib/rng/rng_debug/src/Plugin/Derivative/LocalTasks.php
modules/contrib/rng/src/Breadcrumb/RegistrantBreadcrumbBuilder.php
modules/contrib/rng/src/Views/RegistrationViewsData.php
modules/contrib/rng/src/Plugin/Condition/CurrentTime.php
modules/contrib/rng/rng.install
modules/contrib/rng/tests/bootstrap.php
modules/contrib/rng/src/Form/Entity/RegistrantForm.php
modules/contrib/rng/src/Breadcrumb/RegistrationBreadcrumbBuilder.php
modules/contrib/rng/rng_debug/src/Routing/RouteSubscriber.php
modules/contrib/rng/src/Plugin/views/join/Subquery.php
modules/contrib/rng/tests/src/Functional/RngBrowserTestBase.php
modules/contrib/rng/src/Breadcrumb/RuleComponentBreadcrumbBuilder.php
modules/contrib/rng/rng_easy_email/rng_easy_email.module
modules/contrib/rng/tests/src/Functional/RngEventAccessWebTest.php
modules/contrib/rng/src/Cache/Context/RngEventCacheContext.php
modules/contrib/rng/rng_easy_email/src/DispatchService.php
modules/contrib/rng/src/Form/Entity/RegistrantTypeDeleteForm.php
modules/contrib/rng/tests/src/Kernel/RngMessageRules.php
modules/contrib/rng/src/Entity/RegistrationTypeInterface.php
modules/contrib/rng/src/Entity/RngEventType.php
modules/contrib/rng/src/Plugin/Condition/EventOperation.php
modules/contrib/rng/src/ContextProvider/RngEventRouteContext.php
modules/contrib/rng/rng_easy_email/src/EventSubscriber/RegistrationSubscriber.php
modules/contrib/rng/rng_views/rng_views.module
modules/contrib/rng/src/Form/Entity/RegistrantTypeForm.php
modules/contrib/rng/src/Form/PluginConditionSettingsForm.php
modules/contrib/rng/src/RNGConditionInterface.php
modules/contrib/rng/src/RegistrantFactory.php
modules/contrib/rng/src/Plugin/Condition/IdentityIsRegistrant.php
modules/contrib/rng/src/RegistrantFactoryInterface.php
modules/contrib/rng/src/RegistrantStorageSchema.php
modules/contrib/rng/src/Controller/GroupController.php
modules/contrib/rng/src/Plugin/Condition/RuleScheduler.php
modules/contrib/rng/src/Form/EventAccessForm.php
modules/contrib/rng/src/Form/RegistrantFields.php
modules/contrib/rng/src/Controller/RegistrationController.php
modules/contrib/rng/rng.module
modules/contrib/rng/src/RegistrantsElementUtility.php
modules/contrib/rng/rng.tokens.inc
modules/contrib/rng/rng.views.inc
modules/contrib/rng/tests/src/Kernel/RngRegistrationAccessTest.php
modules/contrib/rng/src/Plugin/Condition/UserRole.php
modules/contrib/rng/src/Element/Registrants.php
modules/contrib/rng/src/Form/RegistrationDeleteForm.php
modules/contrib/rng/src/Access/EntityIsEventCheck.php
modules/contrib/rng/src/Form/RegistrationForm.php
modules/contrib/rng/src/Plugin/Derivative/LocalActions.php
modules/contrib/rng/src/Access/EventRuleResetCheck.php
modules/contrib/rng/tests/src/Functional/RngEventSettingsTest.php
modules/contrib/rng/tests/src/Kernel/RngRegistrationEntityTest.php
modules/contrib/rng/src/Plugin/Derivative/LocalTasks.php
modules/contrib/rng/src/Access/RegistrationAddAccessCheck.php
modules/contrib/rng/src/AccessControl/EventAccessControlHandler.php
modules/contrib/rng/src/Entity/Rule.php
modules/contrib/rng/src/AccessControl/GroupAccessControlHandler.php
modules/contrib/rng/tests/src/Kernel/RngRegistrationTypeTest.php
modules/contrib/rng/src/AccessControl/RegistrationAccessControlHandler.php
modules/contrib/rng/src/RegistrationStorage.php
modules/contrib/rng/src/Plugin/EntityReferenceSelection/GroupSiblings.php
modules/contrib/rng/src/Form/RegistrationRegistrantEditForm.php
modules/contrib/rng/tests/src/Functional/RngEventTypeAccessDefaultsTest.php
modules/contrib/rng/tests/src/Kernel/RngScheduledRuleTest.php
modules/contrib/rng/src/Plugin/EntityReferenceSelection/RNGSelectionBase.php
modules/contrib/rng/src/Form/RegistrationTypeDeleteForm.php
modules/contrib/rng/src/RngConfiguration.php
modules/contrib/rng/tests/src/Functional/RngEventTypeMappingFormTest.php
modules/contrib/rng/src/Form/RegistrationTypeForm.php
modules/contrib/rng/src/RngConfigurationInterface.php
modules/contrib/rng/src/RngCron.php
modules/contrib/rng/tests/src/Kernel/Views/RngViewsTest.php
modules/contrib/rng/src/Plugin/EntityReferenceSelection/RegistrationGroupSelection.php
modules/contrib/rng/tests/src/Functional/RngEventTypeTest.php
modules/contrib/rng/src/Plugin/EntityReferenceSelection/UserRNGSelection.php
modules/contrib/rng/src/Entity/RuleComponent.php
modules/contrib/rng/src/Form/RngSettingsForm.php
modules/contrib/rng/src/RngEntityAccess.php
modules/contrib/rng/src/RngEntityModel.php
modules/contrib/rng/src/Form/EventAccessResetForm.php
modules/contrib/rng/src/Plugin/Field/FieldWidget/RegistrationGroupWidget.php
modules/contrib/rng/src/Entity/RuleComponentInterface.php
modules/contrib/rng/src/Plugin/Field/FieldWidget/RegistrationTypeWidget.php
modules/contrib/rng/src/Plugin/Menu/LocalAction/ResetAccessRules.php
modules/contrib/rng/src/Entity/RuleInterface.php
modules/contrib/rng/src/Entity/EventTypeInterface.php
modules/contrib/rng/src/Entity/RuleSchedule.php
modules/contrib/rng/src/Form/RuleComponentForm.php
modules/contrib/rng/src/Plugin/QueueWorker/ScheduledRuleProcessor.php
modules/contrib/rng/src/Form/EventSettingsForm.php
modules/contrib/rng/src/Entity/EventTypeRule.php
modules/contrib/rng/tests/src/Functional/RngRegistrantRouteTest.php
modules/contrib/rng/tests/src/Traits/RngTestTrait.php
modules/contrib/rng/src/Plugin/Validation/Constraint/RegistrationGroupSibling.php
modules/contrib/rng/src/Form/EventTypeAccessDefaultsForm.php
modules/contrib/rng/src/Plugin/Validation/Constraint/RegistrationGroupSiblingValidator.php
modules/contrib/rng/src/Entity/RuleScheduleInterface.php
modules/contrib/rng/src/Entity/EventTypeRuleInterface.php
modules/contrib/rng/src/Plugin/views/field/EventDateStringField.php
modules/contrib/rng/src/Event/RegistrationAccessEvent.php
modules/contrib/rng/src/Form/RuleDeleteForm.php
modules/contrib/rng/src/Entity/Group.php
modules/contrib/rng/src/Event/RegistrationEvent.php
modules/contrib/rng/src/RngEntityModelInterface.php
modules/contrib/rng/src/RngOperationRecord.php
modules/contrib/rng/src/Routing/Enhancer/RngRouteEnhancer.php
modules/contrib/rng/src/Routing/RegistrantRouteProvider.php
modules/contrib/rng/src/Event/RegistrationEvents.php
modules/contrib/rng/src/Routing/RouteSubscriber.php
modules/contrib/rng/src/EventManager.php
modules/contrib/rng/src/Lists/EventTypeListBuilder.php
modules/contrib/rng/src/RuleGrantsOperationTrait.php
modules/contrib/rng/src/Lists/GroupListBuilder.php
modules/contrib/rng/src/EventManagerInterface.php
modules/contrib/rng/tests/src/Functional/RngRegistrationTypeTest.php
modules/contrib/rng/src/EventMeta.php
modules/contrib/rng/src/Plugin/views/field/LinkRegister.php
modules/contrib/rng/src/Lists/RegistrantTypeListBuilder.php
modules/contrib/rng/src/Lists/RegistrationListBuilder.php
modules/contrib/rng/tests/src/Functional/RngSettingsFormTest.php
modules/contrib/rng/src/Entity/GroupInterface.php
modules/contrib/rng/src/Entity/Registrant.php
modules/contrib/rng/src/Form/EventTypeDefaultMessagesAddForm.php
modules/contrib/rng/tests/src/Functional/RngSiteTestBase.php
modules/contrib/rng/src/Lists/RegistrationTypeListBuilder.php
modules/contrib/rng/tests/src/Kernel/RngEventAccessTest.php
modules/contrib/rng/src/Lists/RuleListBuilder.php
modules/contrib/rng/src/Form/EventTypeDefaultMessagesListForm.php
modules/contrib/rng/src/ParamConverter/ComponentTypeConverter.php
modules/contrib/rng/src/Permissions.php
modules/contrib/rng/src/Plugin/Action/CourierTemplateCollection.php
modules/contrib/rng/src/Entity/RegistrantInterface.php
modules/contrib/rng/src/Entity/RegistrantType.php
modules/contrib/rng/src/Entity/RegistrantTypeInterface.php
modules/contrib/rng/src/Entity/Registration.php
modules/contrib/rng/src/Form/EventTypeDeleteForm.php
modules/contrib/rng/tests/src/Kernel/RngEventMetaTest.php
modules/contrib/rng/src/Form/EventTypeFieldMappingForm.php
modules/contrib/rng/src/Form/EventTypeForm.php
modules/contrib/rng/src/Entity/RegistrationInterface.php
modules/contrib/rng/src/EventMetaInterface.php
modules/contrib/rng/src/EventSubscriber/RegistrationWaitListSubscriber.php
modules/contrib/rng/src/EventSubscriber/RngRegistrationCreationSubscriber.php
modules/contrib/rng/src/Form/EventTypeRuleComponentEdit.php
modules/contrib/rng/src/EventSubscriber/RngRequestSubscriber.php
modules/contrib/rng/src/Form/EventTypeRuleDeleteAll.php
modules/contrib/rng/src/Exception/InvalidEventException.php
modules/contrib/rng/src/Form/GroupDeleteForm.php
modules/contrib/rng/src/Form/GroupForm.php
modules/contrib/rng/src/Form/MessageActionForm.php
modules/contrib/rng/tests/src/Kernel/RngEventTypeEntityTest.php

7 files with changes
====================

1) modules/contrib/rng/src/AccessControl/RegistrationAccessControlHandler.php:116

    ---------- begin diff ----------
@@ @@

     try {
       $event = new RegistrationAccessEvent($entity_bundle, $account, $context);
-      $this->eventDispatcher->dispatch(RegistrationEvents::REGISTRATION_CREATE_ACCESS, $event);
+      $this->eventDispatcher->dispatch($event, RegistrationEvents::REGISTRATION_CREATE_ACCESS);
       if (!$event->isAccessAllowed()) {
         return $fail;
       }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/rng/src/RegistrationStorage.php:44

    ---------- begin diff ----------
@@ @@
    */
   protected function invokeHook($hook, EntityInterface $entity) {
     parent::invokeHook($hook, $entity);
-    $this->eventDispatcher->dispatch($this->getEventName($hook), new RegistrationEvent($entity));
+    $this->eventDispatcher->dispatch(new RegistrationEvent($entity), $this->getEventName($hook));
   }

   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/rng/src/EventSubscriber/RngRequestSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rng\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\TerminateEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\PostResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\rng\RngEntityModelInterface;
@@ @@
   /**
    * Run RNG rules for entity operations which occurred during this request.
    *
-   * @param \Symfony\Component\HttpKernel\Event\PostResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\TerminateEvent $event
    *   The event to process.
    */
-  public function onKernelTerminate(PostResponseEvent $event) {
+  public function onKernelTerminate(TerminateEvent $event) {
     $operation_records = $this->rngEntityModel->getOperationRecords();
     foreach ($operation_records as $operation_record) {
       if ($operation_record->getEntityTypeId() == 'registration') {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


4) modules/contrib/rng/src/Event/RegistrationEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rng\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\rng\Entity\RegistrationInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Registration event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/rng/src/Event/RegistrationAccessEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rng\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Session\AccountInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Registration event to influence access.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/rng/tests/src/Functional/RngEventTypeTest.php:118

    ---------- begin diff ----------
@@ @@
     $this->assertSession()->responseContains(t('%label event type added.', $t_args));

     // Courier context created?
-    $this->assertSession()->assert(CourierContext::load('rng_registration_node'), 'Courier context entity created for this event type\' entity type.');
+    $this->assertTrue(CourierContext::load('rng_registration_node'), 'Courier context entity created for this event type\' entity type.');

     // Event type list.
     $this->drupalGet('admin/structure/rng/event_types');
    ----------- end diff -----------

Applied rules:
 * AssertRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/rng/tests/src/Functional/RngEventTypeAccessDefaultsTest.php:43

    ---------- begin diff ----------
@@ @@
     $this->drupalGet($defaults_route);

     // Ensure checkboxes have default values.
-    $this->assertNoFieldById('edit-actions-operations-event-manager-create');
+    $this->assertSession()->fieldValueNotEquals('edit-actions-operations-event-manager-create', '');
     $session->checkboxChecked('edit-actions-operations-event-manager-view');
     $session->checkboxChecked('edit-actions-operations-event-manager-update');
     $session->checkboxChecked('edit-actions-operations-event-manager-delete');

-    $this->assertNoFieldById('edit-actions-operations-registrant-create');
+    $this->assertSession()->fieldValueNotEquals('edit-actions-operations-registrant-create', '');
     $session->checkboxChecked('edit-actions-operations-registrant-view');
     $session->checkboxChecked('edit-actions-operations-registrant-update');
     $session->checkboxNotChecked('edit-actions-operations-registrant-delete');
    ----------- end diff -----------

Applied rules:
 * AssertNoFieldByIdRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

