modules/contrib/token_alias_d8/src/Plugin/Field/FieldWidget/TokenAliasWidget.php
modules/contrib/token_alias_d8/src/TokenAliasFormHelper.php
modules/contrib/token_alias_d8/src/TokenAliasFormHelperInterface.php
modules/contrib/token_alias_d8/src/TokenAliasGenerator.php
modules/contrib/token_alias_d8/src/TokenAliasGeneratorInterface.php
modules/contrib/token_alias_d8/src/TokenAliasStorageHelper.php
modules/contrib/token_alias_d8/src/TokenAliasStorageHelperInterface.php
modules/contrib/token_alias_d8/tests/src/Functional/DefaultPatuautoNodeWebTest.php
modules/contrib/token_alias_d8/tests/src/Functional/TokenAliasNodeWebTest.php
modules/contrib/token_alias_d8/tests/src/Functional/TokenAliasTestBase.php
modules/contrib/token_alias_d8/tests/src/Functional/TokenAliasTranslationTest.php
modules/contrib/token_alias_d8/tests/src/Functional/TokenAliasTranslationTestBase.php
modules/contrib/token_alias_d8/tests/src/FunctionalJavascript/TokenAliasTestBase.php
modules/contrib/token_alias_d8/tests/src/FunctionalJavascript/TokenAliasTestHelperTrait.php
modules/contrib/token_alias_d8/tests/src/FunctionalJavascript/TokenAliasUiTest.php
modules/contrib/token_alias_d8/token_alias_d8.install
modules/contrib/token_alias_d8/token_alias_d8.module

7 files with changes
====================

1) modules/contrib/token_alias_d8/tests/src/FunctionalJavascript/TokenAliasUiTest.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->createNodeType('page', 'Basic page');
@@ @@
   /**
    * Tests adding nodes with different settings.
    *
-   * @scenario
    * - On node add form
    *   - 'Generate automatic URL alias' checkbox is checked
    *   - the alias pattern presents in alias field, disabled
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - the alias pattern presents in alias field, editable
-   * @scenario
    * - On node add form
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - fill alias in alias field
@@ @@
    *   - the alias presents in alias field, no changed
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - the alias presents in alias field, no changed
+   * @test
+   * @test
    */
   public function testNodeAdding() {
     // Ensure that the Pathauto checkbox is checked by default on the node add
@@ @@
   /**
    * Tests editing nodes with different settings.
    *
-   * @scenario
    * - On node edit form of an existing node with URL alias already generated automatically.
    *   - 'Generate automatic URL alias' checkbox is checked
    *   - the alias presents in alias field, disabled
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - the alias presents in alias field, editable
-   * @scenario
    * - On node edit form of an existing node with URL alias already generated automatically.
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - Remove alias in alias field
@@ @@
    *   - the empty string presents in alias field, no changed
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - the empty string presents in alias field, no changed
-   * @scenario
    * - On node edit form of an existing node with URL alias already generated automatically.
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - fill alias in alias field
@@ @@
    *   - the alias presents in alias field, no changed
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - the alias presents in alias field, no changed
-   * @scenario
    * - On node edit form of an existing node with URL alias already generated manually.
    *   - 'Generate automatic URL alias' checkbox is unchecked
    *   - the alias presents in alias field, editable
    *   - check 'Generate automatic URL alias' checkbox
    *   - the alias presents in alias field, disabled
-   * @scenario
    * - On node edit form of an existing node with URL alias already generated manually.
    *   - Remove alias in alias field
    *   - check 'Generate automatic URL alias' checkbox
@@ @@
    *   - the empty string presents in alias field, no changed
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - the empty string presents in alias field, no changed
-   * @scenario
    * - On node edit form of an existing node with URL alias already generated manually.
    *   - fill alias in alias field
    *   - check 'Generate automatic URL alias' checkbox
@@ @@
    *   - the alias presents in alias field, no changed
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - the alias presents in alias field, no changed
+   * @test
+   * @test
+   * @test
+   * @test
+   * @test
+   * @test
    */
   public function testNodeEditing() {
     // Ensure that the Pathauto checkbox is checked by default on the node add
@@ @@
     // Create a node by saving the node form.
     $title = ' Testing: node title [';
     $automatic_alias = '/content/testing-node-title';
-    $this->drupalPostForm(NULL, ['title[0][value]' => $title], $this->t('Save'));
+    $this->submitForm(['title[0][value]' => $title], $this->t('Save'));
     $node = $this->drupalGetNodeByTitle($title);

     // Look for alias generated in the form.
@@ @@
     $title = ' Testing: node title [ 2';
     $token_alias_d8 = '/[node:title].html';
     $automatic_alias = '/testing-node-title-2.html';
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => $title,
       'path[0][pathauto]' => PathautoState::SKIP,
       'path[0][alias]' => $token_alias_d8,
@@ @@
   /**
    * Tests editing nodes without alias.
    *
-   * @scenario
    * - On node edit form of an existing node without URL alias.
    *   - 'Generate automatic URL alias' checkbox is unchecked
    *   - the empty string presents in alias field, editable
@@ @@
    *   - the token alias pattern presents in alias field, disabled
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - the token alias pattern presents in alias field, editable
+   * @test
    */
   public function testNodeEditingWithoutAlias() {
     // Ensure that the Pathauto checkbox is checked by default on the node add
@@ @@
     $title = $this->randomMachineName();
     $this->uncheckCheckbox('edit-path-0-pathauto');
     $this->fillFieldWithValue('edit-path-0-alias', '');
-    $this->drupalPostForm(NULL, ['title[0][value]' => $title], $this->t('Save'));
+    $this->submitForm(['title[0][value]' => $title], $this->t('Save'));
     $node = $this->drupalGetNodeByTitle($title);

     // Assert aliases count.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/token_alias_d8/tests/src/FunctionalJavascript/TokenAliasTestBase.php:45

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->nodeStorage = $this->container->get('entity_type.manager')->getStorage('node');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/token_alias_d8/tests/src/Functional/TokenAliasTranslationTestBase.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     self::$modules = array_merge(parent::$modules, ['menu_ui', 'mhi_language', 'content_translation']);

     parent::setUp();
@@ @@
     // Enable Translation of Basic Page
     $this->drupalGet('/admin/config/regional/content-language');
     $this->assertSession()->pageTextContains('Content language');
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
         "edit-entity-types-node" => "node",
         "edit-settings-node-page-translatable" => "1",
         "edit-settings-node-page-settings-language-language-alterable" => "1",
@@ @@

   protected function createTranslation($node, $post) {
     $this->drupalGet("node/{$node->id()}/translations/add/en/ja");
-    $this->drupalPostForm(NULL, $post, $this->t('Save'));
+    $this->submitForm($post, $this->t('Save'));
   }

 }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/token_alias_d8/tests/src/Functional/TokenAliasTranslationTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
   }

@@ @@
   /**
    * Test skip alias validation if the alias generated automatically
    *
-   * @scenario 1
-   * - On node add form
-   *   - create the first node
-   *   - uncheck the "Generate automatic URL alias" checkbox
-   *   - fill the title and token alias manually
-   *   - select language in English
-   *   - save the node
    *
    * - On node add form
    *   - create the second node
@@ @@
    *     the alias generated automatically will be the same as the second node,
    *     but the conflict will be solved since it's automatically generated
    *
-   * @scenario 2
-   * - Note
-   *   - The only defference between scenario 1 and scenario 2 is that note_1 and node_2 have the same title.
    *
    * - On node add form
    *   - create the first node
@@ @@
    *
    * - For more Information
    *   - https://jiracloud.cit.com.br/browse/MHIS-1503
+   * @test
+   * @test
    */
   public function testSkipValidation() {
     // scenario 1
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/token_alias_d8/tests/src/Functional/TokenAliasTestBase.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->nodeStorage = $this->container->get('entity_type.manager')->getStorage('node');
@@ @@
    */
   public function createNodePage($post) {
     $this->drupalGet("node/add/{$this->nodeType->id()}");
-    $this->drupalPostForm(NULL, $post, $this->t('Save'));
+    $this->submitForm($post, $this->t('Save'));
     $nodes = array_values($this->nodeStorage->loadMultiple());
     $node = array_pop($nodes);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/token_alias_d8/tests/src/Functional/TokenAliasNodeWebTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     self::$modules = array_merge(parent::$modules, ['menu_ui']);

     parent::setUp();
@@ @@
   /**
    * Tests adding nodes with different settings.
    *
-   * @scenario
    * - On node add form
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - fill the token alias in alias field
    *   - save the node
    *   - if the token is valid, the token should be replaced
+   * @test
    */
   public function testNodeAdding() {
     // Ensure that the Pathauto checkbox is checked by default on the node add
@@ @@
     $title = ' Testing: node title [';
     $token_alias_d8 = '/[node:menu-link:parent:url:path]/[node:title].html';
     $automatic_alias = '/testing-node-title.html';
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => $title,
       'path[0][pathauto]' => PathautoState::SKIP,
       'path[0][alias]' => $token_alias_d8,
@@ @@
   /**
    * Tests that if the alias token was empty, should not be token replace.
    *
-   * @scenario
    * - On node add form
    *   - uncheck 'Generate automatic URL alias' checkbox
    *   - fill the token alias with token
    *   - save the node
    *   - if the token is invalid, the token should not be replaced, and should not be removed, and show warning message
-   * @scenario
    * - On node edit form of an existing node with Token Alias that the token not replaced automatically.
    *   - fill node alias is /[node:menu-link:parent:url:path]
    *   - fill the menu settings with parent menu that menu link is internal link with 404
    *   - save the node
    *   - the token should not be replaced, and should not be removed, and show warning message
-   * @scenario
    * - On node edit form of an existing node with Token Alias that the token not replaced automatically.
    *   - fill node alias is /[node:menu-link:parent:url:path]
    *   - fill the menu settings with parent menu that menu link is internal link with 200
    *   - save the node
    *   - the token should be replaced
-   * @scenario
    * - On node edit form of an existing node with Token Alias that the token not replaced automatically.
    *   - fill node alias is /[node:menu-link:parent:url:path]
    *   - fill the menu settings with parent menu that menu link is external
    *   - save the node
    *   - the token should not be replaced, and should not be removed, and show warning message
-   * @scenario
    * - On node edit form of an existing node with Token Alias that the token not replaced automatically.
    *   - fill node alias with token
    *   - fill some node field values, to make the toke valid
    *   - save the node
    *   - the token should be replaced
+   * @test
+   * @test
+   * @test
+   * @test
+   * @test
    */
   public function testAliasTokenEmpty() {
     // Ensure that the Pathauto checkbox is checked by default on the node add
@@ @@
     $automatic_alias = $token_alias_d8;
     // Create a node by saving the node form.
     $title = $this->randomMachineName();
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'title[0][value]' => $title,
       'path[0][pathauto]' => PathautoState::SKIP,
       'path[0][alias]' => $token_alias_d8,
@@ @@

     // Edit node to file menu settings.
     $this->drupalGet("node/{$node->id()}/edit");
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'path[0][alias]' => $token_alias_d8,
       'menu[enabled]' => 1,
       'menu[title]' => $this->randomMachineName(),
@@ @@

     // Edit node to file menu settings.
     $this->drupalGet("node/{$node->id()}/edit");
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'path[0][alias]' => $token_alias_d8,
     ], $this->t('Save'));

@@ @@

     // Edit node to file menu settings.
     $this->drupalGet("node/{$node->id()}/edit");
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'path[0][alias]' => $token_alias_d8,
     ], $this->t('Save'));

@@ @@

     // Edit node to fill menu settings.
     $this->drupalGet("node/{$node->id()}/edit");
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'path[0][alias]' => $token_alias_d8,
     ], $this->t('Save'));

@@ @@
   /**
    * Tests the token alias should not generate duplicate alias.
    *
-   * @scenario
    * - On node add form
    *   - fill node title and token alias
    *   - save the node
    *   - create second node with same above values
    *   - the aliases that two nodes should be difference
-   * @scenario
    * - On node edit form of the title and alias different with the scenario 1 nodes
    *   - fill the title and alias same with the scenario 1 nodes above
    *   - save the node
    *   - the alias should be different with the scenario 1 nodes
+   * @test
+   * @test
    */
   public function testDuplicateAliases() {
     $token_alias_d8 = '/[node:title]';
@@ @@

     $title = 'node1';
     $automatic_alias = ['/node1', '/node1-0'];
+    $this->drupalGet("node/add/{$this->nodeType->id()}");

     // @scenario 1:
     // Create first node.
-    $this->drupalPostForm("node/add/{$this->nodeType->id()}", [
+    $this->submitForm([
       'title[0][value]' => $title,
       'path[0][pathauto]' => PathautoState::SKIP,
       'path[0][alias]' => $token_alias_d8,
     ], $this->t('Save'));
+    $this->drupalGet("node/add/{$this->nodeType->id()}");

     // Create second node.
-    $this->drupalPostForm("node/add/{$this->nodeType->id()}", [
+    $this->submitForm([
       'title[0][value]' => $title,
       'path[0][pathauto]' => PathautoState::SKIP,
       'path[0][alias]' => $token_alias_d8,
@@ @@
     $token_alias_d8_2 = '/[node:title].html';
     $automatic_alias_2 = '/node2.html';
     array_push($automatic_alias, '/node1-1');
+    $this->drupalGet("node/add/{$this->nodeType->id()}");

-    $this->drupalPostForm("node/add/{$this->nodeType->id()}", [
+    $this->submitForm([
       'title[0][value]' => $title2,
       'path[0][pathauto]' => PathautoState::SKIP,
       'path[0][alias]' => $token_alias_d8_2,
@@ @@
     $this->assertSession()->checkboxNotChecked('edit-path-0-pathauto');
     // Generated alias visible in the path alias field.
     $this->assertSession()->fieldValueEquals('path[0][alias]', $automatic_alias_2);
+    $this->drupalGet("node/{$node->id()}/edit");

-    $this->drupalPostForm("node/{$node->id()}/edit", [
+    $this->submitForm([
       'title[0][value]' => $title,
       'path[0][pathauto]' => PathautoState::SKIP,
       'path[0][alias]' => $token_alias_d8,
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/token_alias_d8/tests/src/Functional/DefaultPatuautoNodeWebTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  function setUp() {
+  function setUp(): void {
     self::$modules = array_merge(parent::$modules, ['token_alias_d8']);
     parent::setUp();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

