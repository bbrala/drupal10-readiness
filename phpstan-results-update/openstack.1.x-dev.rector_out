modules/contrib/openstack-openstack/openstack_cloud_image.page.inc
modules/contrib/openstack-openstack/src/Form/OpenStackImageDeleteMultipleForm.php
modules/contrib/openstack-openstack/openstack.api.php
modules/contrib/openstack-openstack/src/Entity/OpenStackKeyPairViewsData.php
modules/contrib/openstack-openstack/src/Form/OpenStackVolumeDetachMultipleForm.php
modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackSnapshotTest.php
modules/contrib/openstack-openstack/tests/src/Functional/Module/InstallUninstallTest.php
modules/contrib/openstack-openstack/src/Form/OpenStackNetworkInterfaceDeleteForm.php
modules/contrib/openstack-openstack/src/Plugin/Menu/LocalAction/OpenStackVolumeAddFormLocalAction.php
modules/contrib/openstack-openstack/openstack.install
modules/contrib/openstack-openstack/openstack_cloud_instance.page.inc
modules/contrib/openstack-openstack/openstack_cloud_key_pair.page.inc
modules/contrib/openstack-openstack/openstack_cloud_network_interface.page.inc
modules/contrib/openstack-openstack/openstack_cloud_security_group.page.inc
modules/contrib/openstack-openstack/openstack_cloud_snapshot.page.inc
modules/contrib/openstack-openstack/openstack_cloud_volume.page.inc
modules/contrib/openstack-openstack/src/Controller/ApiController.php
modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackFloatingIpTest.php
modules/contrib/openstack-openstack/src/Plugin/QueueWorker/OpenStackUpdateResourcesQueueWorker.php
modules/contrib/openstack-openstack/src/Entity/OpenStackNetworkInterface.php
modules/contrib/openstack-openstack/src/Entity/OpenStackNetworkInterfaceViewBuilder.php
modules/contrib/openstack-openstack/src/Entity/OpenStackSecurityGroup.php
modules/contrib/openstack-openstack/src/Entity/OpenStackSecurityGroupViewBuilder.php
modules/contrib/openstack-openstack/src/Form/OpenStackImageEditForm.php
modules/contrib/openstack-openstack/src/Entity/OpenStackSecurityGroupViewsData.php
modules/contrib/openstack-openstack/src/Form/OpenStackVolumeEditForm.php
modules/contrib/openstack-openstack/src/Plugin/cloud/config/OpenStackCloudConfigPlugin.php
modules/contrib/openstack-openstack/src/Entity/OpenStackSnapshot.php
modules/contrib/openstack-openstack/src/Entity/OpenStackSnapshotViewsData.php
modules/contrib/openstack-openstack/src/Form/OpenStackNetworkInterfaceDeleteMultipleForm.php
modules/contrib/openstack-openstack/src/Plugin/cloud/server_template/OpenStackServerTemplatePlugin.php
modules/contrib/openstack-openstack/src/Form/OpenStackNetworkInterfaceEditForm.php
modules/contrib/openstack-openstack/src/Entity/OpenStackVolume.php
modules/contrib/openstack-openstack/src/Form/OpenStackImageSettingsForm.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackDeleteFloatingIp.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceDeleteForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackNetworkInterfaceSettingsForm.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackDeleteInstance.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackDeleteSecurityGroup.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackDeleteSnapshot.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackDeleteVolume.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackDetachVolume.php
modules/contrib/openstack-openstack/src/Form/OpenStackSecurityGroupCreateForm.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackOperateAction.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackRebootInstance.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceDeleteMultipleForm.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackStartInstance.php
modules/contrib/openstack-openstack/src/Plugin/Action/OpenStackStopInstance.php
modules/contrib/openstack-openstack/src/Plugin/Derivative/OpenStackAllResourcesLocalTasks.php
modules/contrib/openstack-openstack/src/Form/OpenStackSecurityGroupDeleteForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceEditForm.php
modules/contrib/openstack-openstack/src/Plugin/Derivative/OpenStackLocalTasks.php
modules/contrib/openstack-openstack/src/Form/OpenStackSecurityGroupDeleteMultipleForm.php
modules/contrib/openstack-openstack/src/Plugin/Derivative/OpenStackMenuLinks.php
modules/contrib/openstack-openstack/src/Form/OpenStackSecurityGroupEditForm.php
modules/contrib/openstack-openstack/src/Entity/OpenStackVolumeViewBuilder.php
modules/contrib/openstack-openstack/src/Form/Config/OpenStackAdminSettings.php
modules/contrib/openstack-openstack/src/Form/OpenStackSecurityGroupRevokeForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceLaunchForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackSecurityGroupSettingsForm.php
modules/contrib/openstack-openstack/src/Plugin/Field/FieldFormatter/OpenStackBlockDeviceFormatter.php
modules/contrib/openstack-openstack/src/Plugin/Field/FieldType/OpenStackBlockDeviceMappings.php
modules/contrib/openstack-openstack/src/Plugin/Field/FieldWidget/OpenStackBlockDeviceItem.php
modules/contrib/openstack-openstack/src/Plugin/Field/Util/OpenStackReservedKeyChecker.php
modules/contrib/openstack-openstack/src/Form/OpenStackSnapshotCreateForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceRebootForm.php
modules/contrib/openstack-openstack/src/Plugin/Menu/LocalAction/OpenStackSnapshotAddFormLocalAction.php
modules/contrib/openstack-openstack/src/Form/OpenStackSnapshotDeleteForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceRebootMultipleForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceSettingsForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceStartForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackSnapshotDeleteMultipleForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceStartMultipleForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackSnapshotEditForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceStopForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackFloatingIpAssociateForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackFloatingIpCreateForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackInstanceStopMultipleForm.php
modules/contrib/openstack-openstack/src/Controller/ApiControllerInterface.php
modules/contrib/openstack-openstack/src/Form/OpenStackSnapshotSettingsForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackVolumeAttachForm.php
modules/contrib/openstack-openstack/src/Controller/OpenStackKeyPairController.php
modules/contrib/openstack-openstack/src/Form/OpenStackFloatingIpDeleteForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackKeyPairCreateForm.php
modules/contrib/openstack-openstack/src/Entity/NetworkInterfaceViewsData.php
modules/contrib/openstack-openstack/src/Form/OpenStackFloatingIpDeleteMultipleForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackVolumeCreateForm.php
modules/contrib/openstack-openstack/src/Entity/OpenStackFloatingIp.php
modules/contrib/openstack-openstack/src/Form/OpenStackKeyPairDeleteForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackFloatingIpDisassociateForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackVolumeDeleteForm.php
modules/contrib/openstack-openstack/openstack.module
modules/contrib/openstack-openstack/src/Form/OpenStackKeyPairDeleteMultipleForm.php
modules/contrib/openstack-openstack/src/Entity/OpenStackFloatingIpViewsData.php
modules/contrib/openstack-openstack/src/Form/OpenStackFloatingIpDisassociateMultipleForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackKeyPairImportForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackVolumeDeleteMultipleForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackFloatingIpEditForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackVolumeDetachForm.php
modules/contrib/openstack-openstack/src/Entity/OpenStackImage.php
modules/contrib/openstack-openstack/src/Form/OpenStackKeyPairSettingsForm.php
modules/contrib/openstack-openstack/src/Entity/OpenStackImageViewsData.php
modules/contrib/openstack-openstack/src/Form/OpenStackNetworkInterfaceCreateForm.php
modules/contrib/openstack-openstack/src/Form/OpenStackImageCreateForm.php
modules/contrib/openstack-openstack/src/Entity/OpenStackInstance.php
modules/contrib/openstack-openstack/src/Entity/OpenStackInstanceViewsData.php
modules/contrib/openstack-openstack/src/Form/OpenStackImageDeleteForm.php
modules/contrib/openstack-openstack/src/Entity/OpenStackKeyPair.php
modules/contrib/openstack-openstack/src/Plugin/cloud/server_template/OpenStackServerTemplatePluginUninstallValidator.php
modules/contrib/openstack-openstack/src/Plugin/views/field/OpenStackFloatingIpBulkForm.php
modules/contrib/openstack-openstack/src/Service/OpenStackBatchOperations.php
modules/contrib/openstack-openstack/src/Service/OpenStackEc2Service.php
modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackVolumeAttachDetachTest.php
modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackImageTest.php
modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackVolumeTest.php
modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackInstanceBulkTest.php
modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackInstanceExtraTest.php
modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackInstanceTest.php
modules/contrib/openstack-openstack/tests/src/Functional/OpenStackTestBase.php
modules/contrib/openstack-openstack/tests/src/Functional/cloud/config/OpenStackCloudConfigTest.php
modules/contrib/openstack-openstack/tests/src/Functional/cloud/server_template/CloudServerTemplateTest.php
modules/contrib/openstack-openstack/tests/src/Traits/OpenStackTestEntityTrait.php
modules/contrib/openstack-openstack/tests/src/Traits/OpenStackTestFormDataTrait.php
modules/contrib/openstack-openstack/tests/src/Traits/OpenStackTestMockTrait.php
modules/contrib/openstack-openstack/tests/src/Unit/Plugin/cloud/server_template/OpenStackCloudServerTemplatePluginTest.php

7 files with changes
====================

1) modules/contrib/openstack-openstack/openstack.install:510

    ---------- begin diff ----------
@@ @@
  */
 function openstack_update_8223() {

-  $config_path = realpath(drupal_get_path('module', 'openstack')) . '/config/install';
+  $config_path = realpath(\Drupal::service('extension.list.module')->getPath('openstack')) . '/config/install';

   $filename = $config_path . '/openstack.settings.yml';
   $file = file_get_contents($filename);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


2) modules/contrib/openstack-openstack/tests/src/Unit/Plugin/cloud/server_template/OpenStackCloudServerTemplatePluginTest.php:63

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {

     // Create messenger, logger.factory and string_translation container.
     $container = new ContainerBuilder();

     // Messenger.
-    $mock_messenger = $this->getMockBuilder(Messenger::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $mock_messenger = $this->createMock(Messenger::class);

     // Logger.
     $mock_logger = $this->createMock(LoggerChannelInterface::class);
@@ @@
     $mock_tags = [];
     $count = random_int(0, 5);
     for ($i = 0; $i < $count; $i++) {
-      $mock_tag = $this->getMockBuilder(KeyValue::class)
-        ->disableOriginalConstructor()
-        ->getMock();
+      $mock_tag = $this->createMock(KeyValue::class);

       $mock_tag->expects($this->any())
         ->method('getItemKey')
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/openstack-openstack/tests/src/Functional/cloud/server_template/CloudServerTemplateTest.php:92

    ---------- begin diff ----------
@@ @@
       $subnet_index = array_rand($subnets);
       $add[$i]['field_openstack_subnet'] = $subnets[$subnet_index]['SubnetId'];
       $subnet_name = $this->getNameFromArray($subnets, $subnet_index, 'SubnetId');
+      $this->drupalGet("/clouds/design/server_template/$cloud_context/openstack/add");

-      $this->drupalPostForm("/clouds/design/server_template/$cloud_context/openstack/add",
-                            $add[$i],
-                            $this->t('Save'));
+      $this->submitForm($add[$i], $this->t('Save'));
       $this->assertNoErrorMessage();
       $t_args = ['@type' => 'launch template', '%label' => $add[$i]['name[0][value]']];
       $this->assertSession()->pageTextContains(strip_tags($this->t('The @type %label has been created.', $t_args)));
@@ @@
       $subnet_index = array_rand($subnets);
       $edit[$i]['field_openstack_subnet'] = $subnets[$subnet_index]['SubnetId'];
       $subnet_name = $this->getNameFromArray($subnets, $subnet_index, 'SubnetId');
+      $this->drupalGet("/clouds/design/server_template/$cloud_context/$num/edit");

-      $this->drupalPostForm("/clouds/design/server_template/$cloud_context/$num/edit",
-                            $edit[$i],
-                            $this->t('Save'));
+      $this->submitForm($edit[$i], $this->t('Save'));
       $this->assertNoErrorMessage();
       $t_args = ['@type' => 'launch template', '%label' => $edit[$i]['name[0][value]']];
       $this->assertSession()->pageTextContains(strip_tags($this->t('The @type %label has been updated.', $t_args)));
@@ @@
     for ($i = 0, $num = 1; $i < self::CLOUD_SERVER_TEMPLATES_REPEAT_COUNT; $i++, $num++) {

       $this->drupalGet("/clouds/design/server_template/$cloud_context/$num/delete");
-      $this->drupalPostForm("/clouds/design/server_template/$cloud_context/$num/delete",
-                            [],
-                            $this->t('Delete'));
+      $this->drupalGet("/clouds/design/server_template/$cloud_context/$num/delete");
+      $this->submitForm([], $this->t('Delete'));
       $this->assertNoErrorMessage();

       // Make sure listing.
@@ @@

     $subnet_index = array_rand($subnets);
     $add[0]['field_openstack_subnet'] = $subnets[$subnet_index]['SubnetId'];
+    $this->drupalGet("/clouds/design/server_template/$cloud_context/openstack/add");

-    $this->drupalPostForm("/clouds/design/server_template/$cloud_context/openstack/add",
-                          $add[0],
-                          $this->t('Save'));
+    $this->submitForm($add[0], $this->t('Save'));
     $this->assertNoErrorMessage();
     $t_args = ['@type' => 'launch template', '%label' => $add[0]['name[0][value]']];
     $this->assertSession()->pageTextContains(strip_tags($this->t('The @type %label has been created.', $t_args)));
@@ @@
     $edit = $add[0];
     $revision_desc = $this->random->name(32, TRUE);
     $edit['field_description[0][value]'] = $revision_desc;
-    $this->drupalPostForm("/clouds/design/server_template/$cloud_context/1/edit",
-                          $edit,
-                          $this->t('Save'));
+    $this->drupalGet("/clouds/design/server_template/$cloud_context/1/edit");
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertNoErrorMessage();
     $t_args = ['@type' => 'launch template', '%label' => $edit['name[0][value]']];
     $this->assertSession()->pageTextContains(strip_tags($this->t('The @type %label has been updated.', $t_args)));
@@ @@
     $this->clickLink($add[0]['name[0][value]']);
     $this->clickLink('Copy');
     $copy_url = $this->getUrl();
-    $this->drupalPostForm($copy_url, [], 'Copy');
+    $this->drupalGet($copy_url);
+    $this->submitForm([], 'Copy');
     $t_args = ['@type' => 'launch template', '%label' => "copy_of_{$add[0]['name[0][value]']}"];
     $this->assertSession()->pageTextContains(strip_tags($this->t('The @type %label has been created.', $t_args)));
     $this->assertSession()->pageTextContains("copy_of_{$add[0]['name[0][value]']}");
@@ @@

       $subnet_index = array_rand($subnets);
       $add[$i]['field_openstack_subnet'] = $subnets[$subnet_index]['SubnetId'];
+      $this->drupalGet("/clouds/design/server_template/$cloud_context/openstack/add");

-      $this->drupalPostForm("/clouds/design/server_template/$cloud_context/openstack/add",
-        $add[$i],
-        $this->t('Save'));
+      $this->submitForm($add[$i], $this->t('Save'));
       $this->assertNoErrorMessage();
       $t_args = ['@type' => 'launch template', '%label' => $add[$i]['name[0][value]']];
       $this->assertSession()->pageTextContains(strip_tags($this->t('The @type %label has been created.', $t_args)));
@@ @@

       // Submit copy.
       $copy[$i]['field_openstack_image_id'] = $image_id;
-      $this->drupalPostForm("/clouds/design/server_template/$cloud_context/$num/copy",
-        $copy[$i],
-        $this->t('Copy'));
+      $this->drupalGet("/clouds/design/server_template/$cloud_context/$num/copy");
+      $this->submitForm($copy[$i], $this->t('Copy'));
       $this->assertNoErrorMessage();
       $t_args = ['@type' => 'launch template', '%label' => $copy[$i]['name[0][value]']];
       $this->assertSession()->pageTextContains(strip_tags($this->t('The @type %label has been created.', $t_args)));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/openstack-openstack/tests/src/Functional/cloud/config/OpenStackCloudConfigTest.php:135

    ---------- begin diff ----------
@@ @@
       $add[$i]['field_os_region[0][value]'] = 'RegionTwo';
       $regions = ['RegionName' => $region_name];
       $this->updateDescribeRegionsMockData($regions);
-      $this->drupalPostForm('/admin/structure/cloud_config/add/openstack',
-        $add[$i],
-        $this->t('Save'));
+      $this->drupalGet('/admin/structure/cloud_config/add/openstack');
+      $this->submitForm($add[$i], $this->t('Save'));

       // Validate if 'Region is invalid' or not (Expect an error message on
       // purpose).
@@ @@

       // Test w/ a correct region.
       $add[$i]['field_os_region[0][value]'] = 'RegionOne';
-      $this->drupalPostForm('/admin/structure/cloud_config/add/openstack',
-        $add[$i],
-        $this->t('Save'));
+      $this->drupalGet('/admin/structure/cloud_config/add/openstack');
+      $this->submitForm($add[$i], $this->t('Save'));

       // Validate if an OpenStack cloud service provider is created
       // successfully or not (Expect no error message).
@@ @@
     // number starts from '2', not '1', here.
     for ($i = 0, $num = 2; $i < self::OPENSTACK_CLOUD_CONFIG_REPEAT_COUNT; $i++, $num++) {
       $label = $edit[$i]['name[0][value]'];
+      $this->drupalGet("/admin/structure/cloud_config/${num}/edit");

-      $this->drupalPostForm("/admin/structure/cloud_config/${num}/edit",
-        $edit[$i],
-        $this->t('Save')
-      );
+      $this->submitForm($edit[$i], $this->t('Save'));
       $this->assertNoErrorMessage();

       $this->assertSession()->pageTextContains($label);
@@ @@
     // number starts from '2', not '1', here.
     for ($i = 0, $num = 2; $i < self::OPENSTACK_CLOUD_CONFIG_REPEAT_COUNT; $i++, $num++) {
       $this->drupalGet("/admin/structure/cloud_config/${num}/delete");
-      $this->drupalPostForm("/admin/structure/cloud_config/${num}/delete",
-        [],
-        $this->t('Delete'));
+      $this->drupalGet("/admin/structure/cloud_config/${num}/delete");
+      $this->submitForm([], $this->t('Delete'));

       $this->assertNoErrorMessage();
     }
@@ @@
       // Add new CloudConfig.
       $this->drupalGet('/admin/structure/cloud_config/add');
       $this->assertNoErrorMessage();
+      $this->drupalGet('/admin/structure/cloud_config/add/openstack');

-      $this->drupalPostForm('/admin/structure/cloud_config/add/openstack',
-        $add[$i],
-        $this->t('Save'));
+      $this->submitForm($add[$i], $this->t('Save'));

       $this->assertNoErrorMessage();
       $this->assertSession()->pageTextContains($this->t('Creating cloud service provider was performed successfully.'));
@@ @@
     for ($i = 0, $num = 2; $i < self::OPENSTACK_CLOUD_CONFIG_MENU_REPEAT_COUNT; $i++, $num++) {
       $label = $add[$i]['name[0][value]'];
       $this->drupalGet("/admin/structure/cloud_config/${num}/delete");
-      $this->drupalPostForm("/admin/structure/cloud_config/${num}/delete",
-        [],
-        $this->t('Delete'));
+      $this->drupalGet("/admin/structure/cloud_config/${num}/delete");
+      $this->submitForm([], $this->t('Delete'));

       // Verify OpenStack parent menu.
       $i === self::OPENSTACK_CLOUD_CONFIG_MENU_REPEAT_COUNT - 1
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector


5) modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackVolumeTest.php:73

    ---------- begin diff ----------
@@ @@
       if ($state !== 'in-use') {
         $delete_count++;
       }
+      $this->drupalGet("/clouds/openstack/$cloud_context/volume/add");

-      $this->drupalPostForm("/clouds/openstack/$cloud_context/volume/add",
-                            $add[$i],
-                            $this->t('Save'));
+      $this->submitForm($add[$i], $this->t('Save'));

       $this->assertNoErrorMessage();
       $t_args = ['@type' => 'Volume', '%label' => $add[$i]['name']];
@@ @@
         $edit[$i]['availability_zone'],
         $edit[$i]['volume_type']
       );
+      $this->drupalGet("/clouds/openstack/$cloud_context/volume/$num/edit");

-      $this->drupalPostForm("/clouds/openstack/$cloud_context/volume/$num/edit",
-                            $edit[$i],
-                            $this->t('Save'));
+      $this->submitForm($edit[$i], $this->t('Save'));

       $this->assertNoErrorMessage();
       $t_args = ['@type' => 'Volume', '%label' => $edit[$i]['name']];
@@ @@

       $this->drupalGet("/clouds/openstack/$cloud_context/volume/$num/delete");
       $this->assertNoErrorMessage();
-      $this->drupalPostForm("/clouds/openstack/$cloud_context/volume/$num/delete",
-                            [],
-                            $this->t('Delete'));
+      $this->drupalGet("/clouds/openstack/$cloud_context/volume/$num/delete");
+      $this->submitForm([], $this->t('Delete'));

       $this->assertNoErrorMessage();
       $t_args = ['@type' => 'Volume', '@label' => $edit[$i]['name']];
@@ @@
       $snapshot_name = 'snapshot-name' . $this->random->name(10, TRUE);
       $this->updateDescribeSnapshotsMockData([['id' => $add[$i]['snapshot_id'], 'name' => $snapshot_name]]);
       $this->createSnapshotTestEntity(OpenStackSnapshot::class, $i, $add[$i]['snapshot_id'], $snapshot_name, $cloud_context);
+      $this->drupalGet("/clouds/openstack/$cloud_context/volume/add");

-      $this->drupalPostForm("/clouds/openstack/$cloud_context/volume/add",
-                            $add[$i],
-                            $this->t('Save'));
+      $this->submitForm($add[$i], $this->t('Save'));
       $this->assertNoErrorMessage();

       // Make sure listing.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackVolumeAttachDetachTest.php:91

    ---------- begin diff ----------
@@ @@

       // Test attach.
       $this->updateAttachDetachVolumeMockData('AttachVolume', $device_name, $volume_id, $instance_id, 'attaching');
-      $this->drupalPostForm("/clouds/openstack/$this->cloudContext/volume/$i/attach",
-        $attach_data,
-        $this->t('Attach'));
+      $this->drupalGet("/clouds/openstack/$this->cloudContext/volume/$i/attach");
+      $this->submitForm($attach_data, $this->t('Attach'));

       $this->assertNoErrorMessage();
       $this->assertSession()->pageTextContains($this->t('The volume @volume is attaching to @instance', [
@@ @@
       $volume->setAttachmentInformation($instance_id);
       $volume->save();
       $this->updateAttachDetachVolumeMockData('DetachVolume', $device_name, $volume_id, $instance_id, 'detaching');
-      $this->drupalPostForm("/clouds/openstack/$this->cloudContext/volume/$i/detach",
-        [],
-        $this->t('Detach'));
+      $this->drupalGet("/clouds/openstack/$this->cloudContext/volume/$i/detach");
+      $this->submitForm([], $this->t('Detach'));
       $this->assertNoErrorMessage();
       $this->assertSession()->pageTextContains($this->t('The volume @volume is detaching from @instance', [
         '@instance' => $instance_id,
@@ @@

         // Test attach.
         $this->updateAttachDetachVolumeMockData('AttachVolume', $device_name, $volume_id, $instance_id, 'attaching');
-        $this->drupalPostForm("/clouds/openstack/$this->cloudContext/volume/$num/attach",
-          $attach_data,
-          $this->t('Attach'));
+        $this->drupalGet("/clouds/openstack/$this->cloudContext/volume/$num/attach");
+        $this->submitForm($attach_data, $this->t('Attach'));

         $volume->setState('in-use');
         $volume->setAttachmentInformation($instance_id);
@@ @@

         $data[$checkbox->getAttribute('name')] = $checkbox->getAttribute('value');
       }
+      $this->drupalGet("/clouds/openstack/$cloud_context/volume");

       // Confirm.
-      $this->drupalPostForm(
-        "/clouds/openstack/$cloud_context/volume",
-        $data,
-        $this->t('Apply to selected items')
-      );
+      $this->submitForm($data, $this->t('Apply to selected items'));
       $this->assertNoErrorMessage();

       $message = 'Are you sure you want to detach these Volumes?';
@@ @@
       foreach ($total_volumes ?: [] as $volume) {
         $this->assertSession()->pageTextContains($volume['name']);
       }
+      $this->drupalGet("/clouds/openstack/$cloud_context/volume/detach_multiple");

       // Disassociate.
-      $this->drupalPostForm(
-        "/clouds/openstack/$cloud_context/volume/detach_multiple",
-        [],
-        $this->t('Detach')
-      );
+      $this->submitForm([], $this->t('Detach'));

       $this->assertNoErrorMessage();
       if ($total_count === 1) {
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackSnapshotTest.php:84

    ---------- begin diff ----------
@@ @@

       // Set volume ID.
       $add[$i]['volume_id'] = $volumes[array_rand($volumes)]['VolumeId'];
+      $this->drupalGet("/clouds/openstack/$cloud_context/snapshot/add");

-      $this->drupalPostForm("/clouds/openstack/$cloud_context/snapshot/add",
-                            $add[$i],
-                            $this->t('Save'));
+      $this->submitForm($add[$i], $this->t('Save'));

       $this->assertNoErrorMessage();
       $this->assertSession()->pageTextContains(
@@ @@
         $edit[$i]['volume_id'],
         $edit[$i]['description']
       );
+      $this->drupalGet("/clouds/openstack/$cloud_context/snapshot/$num/edit");

-      $this->drupalPostForm("/clouds/openstack/$cloud_context/snapshot/$num/edit",
-                            $edit[$i],
-                            $this->t('Save'));
+      $this->submitForm($edit[$i], $this->t('Save'));

       $this->assertNoErrorMessage();
       $t_args = ['@type' => 'Snapshot', '%label' => $edit[$i]['name']];
@@ @@

       $this->drupalGet("/clouds/openstack/$cloud_context/snapshot/$num/delete");
       $this->assertNoErrorMessage();
-      $this->drupalPostForm("/clouds/openstack/$cloud_context/snapshot/$num/delete",
-                            [],
-                            $this->t('Delete'));
+      $this->drupalGet("/clouds/openstack/$cloud_context/snapshot/$num/delete");
+      $this->submitForm([], $this->t('Delete'));

       $this->assertNoErrorMessage();
       $this->assertSession()->pageTextContains($edit[$i]['name']);
@@ @@

       // Set volume ID.
       $add[$i]['volume_id'] = $volumes[array_rand($volumes)]['VolumeId'];
-      $this->drupalPostForm("/clouds/openstack/$cloud_context/snapshot/add",
-                            $add[$i],
-                            $this->t('Save'));
+      $this->drupalGet("/clouds/openstack/$cloud_context/snapshot/add");
+      $this->submitForm($add[$i], $this->t('Save'));
       $this->assertNoErrorMessage();

       // Make sure listing.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "/var/lib/drupalci/workspace/drupal-checkouts/drupal16/vendor/rector/re
         ctor/vendor/symplify/easy-parallel/src/ValueObject/ParallelProcess.php"
         file, due to:                                                          
         "Child process timed out after 120 seconds". On line: 103              

 [ERROR] Could not process some files, due to:                                  
         "Reached system errors count limit of 50, exiting...".                 

modules/contrib/openstack-openstack/tests/src/Functional/OpenStack/OpenStackKeyPairTest.php
