modules/contrib/slack_receive/src/Form/SlackApplicationDeleteForm.php
modules/contrib/slack_receive/slack_receive.api.php
modules/contrib/slack_receive/slack_receive.install
modules/contrib/slack_receive/slack_receive_example/slack_receive_example.module
modules/contrib/slack_receive/src/Authentication/Provider/SlackAuth.php
modules/contrib/slack_receive/src/Form/SlackApplicationForm.php
modules/contrib/slack_receive/src/Plugin/rest/resource/SlashCommandResponse.php
modules/contrib/slack_receive/src/Plugin/views/display/SlackMessage.php
modules/contrib/slack_receive/src/Controller/SlackApplicationListBuilder.php
modules/contrib/slack_receive/src/Encoder/FormDecoder.php
modules/contrib/slack_receive/src/Encoder/SlackJsonEncoder.php
modules/contrib/slack_receive/src/Entity/SlackApplication.php
modules/contrib/slack_receive/src/Entity/SlackApplicationInterface.php
modules/contrib/slack_receive/src/Plugin/views/row/SlackDataFieldRow.php
modules/contrib/slack_receive/src/Plugin/views/style/SlackSerializer.php
modules/contrib/slack_receive/src/SlackReceiveServiceProvider.php

1 file with changes
===================

1) modules/contrib/slack_receive/src/Authentication/Provider/SlackAuth.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\slack_receive\Authentication\Provider;

+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Authentication\AuthenticationProviderInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Flood\FloodInterface;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function handleException(GetResponseForExceptionEvent $event) {
-    $exception = $event->getException();
+  public function handleException(ExceptionEvent $event) {
+    $exception = $event->getThrowable();
     if ($exception instanceof AccessDeniedHttpException) {
-      $event->setException(new UnauthorizedHttpException('Invalid consumer origin.', $exception));
+      $event->setThrowable(new UnauthorizedHttpException('Invalid consumer origin.', $exception));
       return TRUE;
     }
     return FALSE;
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameMethodRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 1 file has been changed by Rector                                         

