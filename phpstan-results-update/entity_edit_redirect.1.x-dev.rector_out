modules/contrib/entity_edit_redirect/entity_edit_redirect.install
modules/contrib/entity_edit_redirect/src/EventSubscriber/EntityEditRedirectSubscriber.php
modules/contrib/entity_edit_redirect/src/Form/ConfigForm.php

1 file with changes
===================

1) modules/contrib/entity_edit_redirect/src/EventSubscriber/EntityEditRedirectSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_edit_redirect\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
@@ @@
 use Drupal\Core\Routing\TrustedRedirectResponse;
 use Drupal\Core\Url;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\Routing\Route;
@@ @@
   /**
    * Handles the entity edit redirect.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onRespondEntityEditRedirect(FilterResponseEvent $event) {
+  public function onRespondEntityEditRedirect(ResponseEvent $event) {
     // If no base redirect url is set then no redirect can happen.
     if (!$this->baseRedirectUrl) {
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 1 file has been changed by Rector                                         

