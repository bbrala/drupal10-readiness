diff --git a/tests/src/Functional/CheckEntityChangesTest.php b/tests/src/Functional/CheckEntityChangesTest.php
index 183cff1..ab5b0d7 100644
--- a/tests/src/Functional/CheckEntityChangesTest.php
+++ b/tests/src/Functional/CheckEntityChangesTest.php
@@ -20,21 +20,23 @@ class CheckEntityChangesTest extends TmgmtExtensionSuitTestBase {
     // 1. Hash is not changed.
     // 2. Job is not added to upload queue.
     $oldHash = $this->getNodeHash(1, 1);
-    $this->drupalPostForm("node/1/edit", [], t('Save'));
+    $this->drupalGet("node/1/edit");
+    $this->submitForm([], t('Save'));
     $newHash = $this->getNodeHash(1, 1);
-    $this->assertEqual($oldHash, $newHash);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->assertEquals($oldHash, $newHash);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->drupalGet("node/1/edit");
 
     // Submit node edit form with updated title.
     // Expectations:
     // 1. Hash is changed.
     // 2. Job is added to upload queue.
-    $this->drupalPostForm("node/1/edit", [
+    $this->submitForm([
       'title[0][value]' => 'New node test title',
     ], t('Save'));
     $newHash = $this->getNodeHash(1, 1);
-    $this->assertNotEqual($oldHash, $newHash);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 1);
+    $this->assertNotEquals($oldHash, $newHash);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 1);
   }
 
   /**
@@ -51,21 +53,23 @@ class CheckEntityChangesTest extends TmgmtExtensionSuitTestBase {
     // 1. Hash is not changed.
     // 2. Job is not added to upload queue.
     $oldHash = $this->getNodeHash(1, 1);
-    $this->drupalPostForm("node/1/edit", [], t('Save'));
+    $this->drupalGet("node/1/edit");
+    $this->submitForm([], t('Save'));
     $newHash = $this->getNodeHash(1, 1);
-    $this->assertEqual($oldHash, $newHash);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->assertEquals($oldHash, $newHash);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->drupalGet("node/1/edit");
 
     // Submit node edit form with updated title.
     // Expectations:
     // 1. Hash is not changed.
     // 2. Job is not added to upload queue.
-    $this->drupalPostForm("node/1/edit", [
+    $this->submitForm([
       'title[0][value]' => 'New node test title',
     ], t('Save'));
     $newHash = $this->getNodeHash(1, 1);
-    $this->assertEqual($oldHash, $newHash);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->assertEquals($oldHash, $newHash);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
   }
 
   /**
@@ -73,9 +77,10 @@ class CheckEntityChangesTest extends TmgmtExtensionSuitTestBase {
    */
   public function testDoNotTrackTranslatableEntityChanges() {
     $this->requestTranslation([1], 'fr', 1);
+    $this->drupalGet('admin/tmgmt/extension-settings');
 
     // Disable tracking feature.
-    $this->drupalPostForm('admin/tmgmt/extension-settings', [
+    $this->submitForm([
       'do_track_changes' => FALSE,
     ], t('Save configuration'));
 
@@ -84,21 +89,23 @@ class CheckEntityChangesTest extends TmgmtExtensionSuitTestBase {
     // 1. Hash is not changed.
     // 2. Job is not added to upload queue.
     $oldHash = $this->getNodeHash(1, 1);
-    $this->drupalPostForm("node/1/edit", [], t('Save'));
+    $this->drupalGet("node/1/edit");
+    $this->submitForm([], t('Save'));
     $newHash = $this->getNodeHash(1, 1);
-    $this->assertEqual($oldHash, $newHash);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->assertEquals($oldHash, $newHash);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->drupalGet("node/1/edit");
 
     // Submit node edit form with updated title.
     // Expectations:
     // 1. Hash is not changed.
     // 2. Job is not added to upload queue.
-    $this->drupalPostForm("node/1/edit", [
+    $this->submitForm([
       'title[0][value]' => 'New node test title',
     ], t('Save'));
     $newHash = $this->getNodeHash(1, 1);
-    $this->assertEqual($oldHash, $newHash);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->assertEquals($oldHash, $newHash);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
   }
 
   /**
@@ -108,9 +115,10 @@ class CheckEntityChangesTest extends TmgmtExtensionSuitTestBase {
    */
   public function testDoNotTrackTranslatableEntityChangesIfNoLanguagesSelected() {
     $this->requestTranslation([1], 'fr', 1);
+    $this->drupalGet('admin/tmgmt/extension-settings');
 
     // Disable tracking feature.
-    $this->drupalPostForm('admin/tmgmt/extension-settings', [
+    $this->submitForm([
       'do_track_changes' => TRUE,
       'tes_local_test_de' => 0,
       'tes_local_test_fr' => 0,
@@ -121,21 +129,23 @@ class CheckEntityChangesTest extends TmgmtExtensionSuitTestBase {
     // 1. Hash is not changed.
     // 2. Job is not added to upload queue.
     $oldHash = $this->getNodeHash(1, 1);
-    $this->drupalPostForm("node/1/edit", [], t('Save'));
+    $this->drupalGet("node/1/edit");
+    $this->submitForm([], t('Save'));
     $newHash = $this->getNodeHash(1, 1);
-    $this->assertEqual($oldHash, $newHash);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->assertEquals($oldHash, $newHash);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->drupalGet("node/1/edit");
 
     // Submit node edit form with updated title.
     // Expectations:
     // 1. Hash is not changed.
     // 2. Job is not added to upload queue.
-    $this->drupalPostForm("node/1/edit", [
+    $this->submitForm([
       'title[0][value]' => 'New node test title',
     ], t('Save'));
     $newHash = $this->getNodeHash(1, 1);
-    $this->assertEqual($oldHash, $newHash);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->assertEquals($oldHash, $newHash);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
   }
 
   /**
@@ -153,28 +163,30 @@ class CheckEntityChangesTest extends TmgmtExtensionSuitTestBase {
     // 2. Job is not added to upload queue.
     $oldHash1 = $this->getNodeHash(1, 1);
     $oldHash2 = $this->getNodeHash(1, 2);
-    $this->drupalPostForm("node/1/edit", [], t('Save'));
+    $this->drupalGet("node/1/edit");
+    $this->submitForm([], t('Save'));
     $newHash1 = $this->getNodeHash(1, 1);
     $newHash2 = $this->getNodeHash(1, 2);
-    $this->assertEqual($oldHash1, $newHash1);
-    $this->assertEqual($oldHash2, $newHash2);
+    $this->assertEquals($oldHash1, $newHash1);
+    $this->assertEquals($oldHash2, $newHash2);
 
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 2), 0);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 2), 0);
+    $this->drupalGet("node/1/edit");
 
     // Submit node edit form with updated title.
     // Expectations:
     // 1. Hash is changed.
     // 2. Jobs are added to upload queue.
-    $this->drupalPostForm("node/1/edit", [
+    $this->submitForm([
       'title[0][value]' => 'New node test title',
     ], t('Save'));
     $newHash1 = $this->getNodeHash(1, 1);
     $newHash2 = $this->getNodeHash(1, 2);
-    $this->assertNotEqual($oldHash1, $newHash1);
-    $this->assertNotEqual($oldHash2, $newHash2);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 1);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 2), 1);
+    $this->assertNotEquals($oldHash1, $newHash1);
+    $this->assertNotEquals($oldHash2, $newHash2);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 1);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 2), 1);
   }
 
   /**
@@ -185,8 +197,9 @@ class CheckEntityChangesTest extends TmgmtExtensionSuitTestBase {
   public function testTrackTranslatableEntityChangesNotAllLanguagesSelected() {
     $this->requestTranslation([1], 'fr', 1);
     $this->requestTranslation([1], 'de', 2);
+    $this->drupalGet('admin/tmgmt/extension-settings');
 
-    $this->drupalPostForm('admin/tmgmt/extension-settings', [
+    $this->submitForm([
       'do_track_changes' => TRUE,
       'tes_local_test_de' => 0,
       'tes_local_test_fr' => 1,
@@ -198,27 +211,29 @@ class CheckEntityChangesTest extends TmgmtExtensionSuitTestBase {
     // 2. Job is not added to upload queue.
     $oldHash1 = $this->getNodeHash(1, 1);
     $oldHash2 = $this->getNodeHash(1, 2);
-    $this->drupalPostForm("node/1/edit", [], t('Save'));
+    $this->drupalGet("node/1/edit");
+    $this->submitForm([], t('Save'));
     $newHash1 = $this->getNodeHash(1, 1);
     $newHash2 = $this->getNodeHash(1, 2);
-    $this->assertEqual($oldHash1, $newHash1);
-    $this->assertEqual($oldHash2, $newHash2);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 2), 0);
+    $this->assertEquals($oldHash1, $newHash1);
+    $this->assertEquals($oldHash2, $newHash2);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 0);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 2), 0);
+    $this->drupalGet("node/1/edit");
 
     // Submit node edit form with updated title.
     // Expectations:
     // 1. Hash is not changed.
     // 2. Job is not added to upload queue.
-    $this->drupalPostForm("node/1/edit", [
+    $this->submitForm([
       'title[0][value]' => 'New node test title',
     ], t('Save'));
     $newHash1 = $this->getNodeHash(1, 1);
     $newHash2 = $this->getNodeHash(1, 2);
-    $this->assertNotEqual($oldHash1, $newHash1);
-    $this->assertEqual($oldHash2, $newHash2);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 1);
-    $this->assertEqual($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 2), 0);
+    $this->assertNotEquals($oldHash1, $newHash1);
+    $this->assertEquals($oldHash2, $newHash2);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 1), 1);
+    $this->assertEquals($this->isItemAddedToQueue('tmgmt_extension_suit_upload', 2), 0);
   }
 
 }
diff --git a/tests/src/Functional/TmgmtExtensionSuitTestBase.php b/tests/src/Functional/TmgmtExtensionSuitTestBase.php
index 3edbcc5..4ada252 100644
--- a/tests/src/Functional/TmgmtExtensionSuitTestBase.php
+++ b/tests/src/Functional/TmgmtExtensionSuitTestBase.php
@@ -41,7 +41,7 @@ abstract class TmgmtExtensionSuitTestBase extends TMGMTTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->userForTranslations = $this->loginAsAdmin([
@@ -96,15 +96,17 @@ abstract class TmgmtExtensionSuitTestBase extends TMGMTTestBase {
     foreach ($nids as $nid) {
       $data["items[$nid]"] = "item[$nid]";
     }
+    $this->drupalGet('admin/tmgmt/sources');
 
-    $this->drupalPostForm('admin/tmgmt/sources', $data, t('Request translation'));
+    $this->submitForm($data, t('Request translation'));
 
     $data = [
       'label[0][value]' => 'Test job',
       'target_language' => $targetLanguage,
       'translator' => $translator,
     ];
-    $this->drupalPostForm("admin/tmgmt/jobs/$jobId", $data, t('Submit to provider'));
+    $this->drupalGet("admin/tmgmt/jobs/$jobId");
+    $this->submitForm($data, t('Submit to provider'));
   }
 
   /**
@@ -128,8 +130,9 @@ abstract class TmgmtExtensionSuitTestBase extends TMGMTTestBase {
     foreach ($nids as $nid) {
       $data["items[$nid]"] = "item[$nid]";
     }
+    $this->drupalGet('admin/tmgmt/sources');
 
-    $this->drupalPostForm('admin/tmgmt/sources', $data, t('Request translation in a batch'));
+    $this->submitForm($data, t('Request translation in a batch'));
 
     if (!empty($targetLanguages)) {
       $new_data = [];
@@ -144,7 +147,7 @@ abstract class TmgmtExtensionSuitTestBase extends TMGMTTestBase {
         $new_data[$setting] = $value;
       }
 
-      $this->drupalPostForm(NULL, $new_data, t('Request translation'));
+      $this->submitForm($new_data, t('Request translation'));
     }
   }
 
diff --git a/tests/src/Kernel/QueueWorkerLockedTest.php b/tests/src/Kernel/QueueWorkerLockedTest.php
index f409fa7..acf15d5 100644
--- a/tests/src/Kernel/QueueWorkerLockedTest.php
+++ b/tests/src/Kernel/QueueWorkerLockedTest.php
@@ -48,21 +48,12 @@ class QueueWorkerLockedTest extends KernelTestBase {
   /**
    * Tests set up.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
-    $this->loggerMock = $this->getMockBuilder(LoggerChannel::class)
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->loggerMock = $this->createMock(LoggerChannel::class);
 
-    $this->lockMock = $this->getMockBuilder(PersistentDatabaseLockBackend::class)
-      ->setMethods([
-        'acquire',
-        'release',
-      ])
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->lockMock = $this->createMock(PersistentDatabaseLockBackend::class);
 
     $this->uploadQueueWorker = $this->getMockBuilder(JobUpload::class)
       ->setMethods([
