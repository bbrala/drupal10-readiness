diff --git a/applenews.info.yml b/applenews.info.yml
index 086b138..3557dac 100644
--- a/applenews.info.yml
+++ b/applenews.info.yml
@@ -1,8 +1,7 @@
 name: Apple News
 description: Push content to Apple News.
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Apple News
 configure: applenews.settings
 dependencies:
diff --git a/src/ApplenewsPreviewBuilder.php b/src/ApplenewsPreviewBuilder.php
index 1a87ed8..0b7acc7 100644
--- a/src/ApplenewsPreviewBuilder.php
+++ b/src/ApplenewsPreviewBuilder.php
@@ -151,7 +151,7 @@ class ApplenewsPreviewBuilder {
     $this->archive = !empty($filename) ? 'applenews-' . $filename . '.zip' : 'applenews.zip';
     $this->archiveRealPath = $filesystem->realpath($this->fileBuildUri($this->directory));
     $this->archiveFile = $filesystem->realpath($this->fileBuildUri($this->directory . $this->archive));
-    $this->archiveUrl = file_create_url($this->fileBuildUri($this->directory . $this->archive));
+    $this->archiveUrl = \Drupal::service('file_url_generator')->generateAbsoluteString($this->fileBuildUri($this->directory . $this->archive));
 
     if ($entity_id) {
       $drupal_entity_directory = $this->fileBuildUri($this->directory . $entity_id);
diff --git a/src/Event/DocumentPostTransformEvent.php b/src/Event/DocumentPostTransformEvent.php
index 89ca5d4..df6d351 100644
--- a/src/Event/DocumentPostTransformEvent.php
+++ b/src/Event/DocumentPostTransformEvent.php
@@ -2,10 +2,10 @@
 
 namespace Drupal\applenews\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use ChapterThree\AppleNewsAPI\Document;
 use Drupal\applenews\Entity\ApplenewsTemplate;
 use Drupal\Core\Entity\ContentEntityInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Event fires after an entity has been transformed into a Apple News Document.
diff --git a/src/Normalizer/ApplenewsContentEntityNormalizer.php b/src/Normalizer/ApplenewsContentEntityNormalizer.php
index 6259dc6..afa3837 100644
--- a/src/Normalizer/ApplenewsContentEntityNormalizer.php
+++ b/src/Normalizer/ApplenewsContentEntityNormalizer.php
@@ -111,7 +111,7 @@ class ApplenewsContentEntityNormalizer extends ApplenewsNormalizerBase {
     }
 
     $event = new DocumentPostTransformEvent($object, $document, $template);
-    $this->eventDispatcher->dispatch(DocumentPostTransformEvent::DOCUMENT_POST_TRANSFORM_EVENT, $event);
+    $this->eventDispatcher->dispatch($event, DocumentPostTransformEvent::DOCUMENT_POST_TRANSFORM_EVENT);
 
     // @todo It's atypical for a normalizer service to end this way. Typically
     //   the normalizer would leave it completely in the normalized format, here
diff --git a/src/Normalizer/ApplenewsImageComponentNormalizer.php b/src/Normalizer/ApplenewsImageComponentNormalizer.php
index 90bd232..79aa5cf 100644
--- a/src/Normalizer/ApplenewsImageComponentNormalizer.php
+++ b/src/Normalizer/ApplenewsImageComponentNormalizer.php
@@ -74,7 +74,7 @@ class ApplenewsImageComponentNormalizer extends ApplenewsComponentNormalizerBase
    *   Return value from file_create_url.
    */
   public function fileCreateUrl($uri) {
-    return file_create_url($uri);
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
   }
 
 }
diff --git a/tests/src/Functional/AppleNewsWidgetTest.php b/tests/src/Functional/AppleNewsWidgetTest.php
index 73101de..1fa7416 100644
--- a/tests/src/Functional/AppleNewsWidgetTest.php
+++ b/tests/src/Functional/AppleNewsWidgetTest.php
@@ -116,7 +116,7 @@ class AppleNewsWidgetTest extends ApplenewsTestBase {
     $assert_session->pageTextContains('No channels available');
     $assert_session->pageTextContains('Download the Apple News generated document');
     $assert_session->pageTextContains($template->label());
-    $this->assertRaw(sprintf('admin/config/services/applenews/node/%s/%s/%s/download', $node->id(), $node->getLoadedRevisionId(), $template->id()));
+    $this->assertSession()->responseContains(sprintf('admin/config/services/applenews/node/%s/%s/%s/download', $node->id(), $node->getLoadedRevisionId(), $template->id()));
   }
 
   /**
diff --git a/tests/src/Functional/ApplenewsAdminTest.php b/tests/src/Functional/ApplenewsAdminTest.php
index 0540795..8a43f19 100644
--- a/tests/src/Functional/ApplenewsAdminTest.php
+++ b/tests/src/Functional/ApplenewsAdminTest.php
@@ -80,7 +80,7 @@ class ApplenewsAdminTest extends ApplenewsTestBase {
     $edit['api_secret'] = '';
     $this->submitForm($edit, 'Save configuration');
     $assert_session->pageTextContains('The configuration options have been saved.');
-    $this->assertEqual(\Drupal::config('applenews.settings')->get('api_secret'), $api_secret);
+    $this->assertEquals(\Drupal::config('applenews.settings')->get('api_secret'), $api_secret);
   }
 
 }
diff --git a/tests/src/Kernel/Normalizer/ApplenewsImageComponentNormalizerTest.php b/tests/src/Kernel/Normalizer/ApplenewsImageComponentNormalizerTest.php
index 352be98..b2439cb 100644
--- a/tests/src/Kernel/Normalizer/ApplenewsImageComponentNormalizerTest.php
+++ b/tests/src/Kernel/Normalizer/ApplenewsImageComponentNormalizerTest.php
@@ -54,8 +54,7 @@ class ApplenewsImageComponentNormalizerTest extends KernelTestBase {
     $this->applenewsImageComponentNormalizer
       ->method('fileCreateUrl')
       ->willReturn('http://example.com/test/example.jpg');
-    $this->serializer = $this->getMockBuilder(Serializer::class)
-      ->getMock();
+    $this->serializer = $this->createMock(Serializer::class);
     $this->applenewsImageComponentNormalizer->setSerializer($this->serializer);
   }
 
