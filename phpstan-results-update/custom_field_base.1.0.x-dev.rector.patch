diff --git a/tests/src/Kernel/CustomFieldBaseTestBase.php b/tests/src/Kernel/CustomFieldBaseTestBase.php
index 8251485..cdaa580 100644
--- a/tests/src/Kernel/CustomFieldBaseTestBase.php
+++ b/tests/src/Kernel/CustomFieldBaseTestBase.php
@@ -66,7 +66,7 @@ abstract class CustomFieldBaseTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Configure the theme system.
diff --git a/tests/src/Kernel/CustomFieldBaseTestFloat.php b/tests/src/Kernel/CustomFieldBaseTestFloat.php
index 0fd624d..cee29f9 100644
--- a/tests/src/Kernel/CustomFieldBaseTestFloat.php
+++ b/tests/src/Kernel/CustomFieldBaseTestFloat.php
@@ -14,7 +14,7 @@ class CustomFieldBaseTestFloat extends CustomFieldBaseTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->fieldType = "custom_field_base_test_fields_single_float";
     parent::setUp();
 
@@ -49,13 +49,13 @@ class CustomFieldBaseTestFloat extends CustomFieldBaseTestBase {
     // $entity->{$this->fieldName}->mykey = $value;
     $get_value = $entity->{$this->fieldName}->get(0)->getValue()["mykey"];
 
-    $this->assertEqual($get_value, $value);
+    $this->assertEquals($get_value, $value);
     // -----
     $entity = EntityTest::create([]);
     $entity->{$this->fieldName}->mykey = $value;
 
     $get_value = $entity->{$this->fieldName}->get(0)->getValue()["mykey"];
-    $this->assertEqual($get_value, $value);
+    $this->assertEquals($get_value, $value);
   }
 
 }
diff --git a/tests/src/Kernel/CustomFieldBaseTestInteger.php b/tests/src/Kernel/CustomFieldBaseTestInteger.php
index a7b100f..00a0947 100644
--- a/tests/src/Kernel/CustomFieldBaseTestInteger.php
+++ b/tests/src/Kernel/CustomFieldBaseTestInteger.php
@@ -14,7 +14,7 @@ class CustomFieldBaseTestInteger extends CustomFieldBaseTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->fieldType = "custom_field_base_test_fields_single_integer";
     parent::setUp();
 
@@ -48,13 +48,13 @@ class CustomFieldBaseTestInteger extends CustomFieldBaseTestBase {
     // $entity->{$this->fieldName}->mykey = $value;
     $get_value = $entity->{$this->fieldName}->get(0)->getValue()["mykey"];
 
-    $this->assertEqual($get_value, $value);
+    $this->assertEquals($get_value, $value);
     // -----
     $entity = EntityTest::create([]);
     $entity->{$this->fieldName}->mykey = $value;
 
     $get_value = $entity->{$this->fieldName}->get(0)->getValue()["mykey"];
-    $this->assertEqual($get_value, $value);
+    $this->assertEquals($get_value, $value);
   }
 
 }
diff --git a/tests/src/Kernel/CustomFieldBaseTestIntegerUnsigned.php b/tests/src/Kernel/CustomFieldBaseTestIntegerUnsigned.php
index 72ae6b3..7459bf7 100644
--- a/tests/src/Kernel/CustomFieldBaseTestIntegerUnsigned.php
+++ b/tests/src/Kernel/CustomFieldBaseTestIntegerUnsigned.php
@@ -14,7 +14,7 @@ class CustomFieldBaseTestIntegerUnsigned extends CustomFieldBaseTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->fieldType = "custom_field_base_test_fields_single_integer_unsigned";
     parent::setUp();
 
@@ -49,7 +49,6 @@ class CustomFieldBaseTestIntegerUnsigned extends CustomFieldBaseTestBase {
       $this->fail("expected exception");
     }
     catch (\Exception $e) {
-      $this->pass("expected exception ok");
     }
   }
 
diff --git a/tests/src/Kernel/CustomFieldBaseTestMultiple.php b/tests/src/Kernel/CustomFieldBaseTestMultiple.php
index 8b22a14..046eba8 100644
--- a/tests/src/Kernel/CustomFieldBaseTestMultiple.php
+++ b/tests/src/Kernel/CustomFieldBaseTestMultiple.php
@@ -14,7 +14,7 @@ class CustomFieldBaseTestMultiple extends CustomFieldBaseTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->fieldType = "custom_field_base_test_fields_multiple";
     parent::setUp();
 
@@ -51,11 +51,11 @@ class CustomFieldBaseTestMultiple extends CustomFieldBaseTestBase {
     // $entity->{$this->fieldName}->mykey = $value;
     $get_value = $entity->{$this->fieldName}->get(0)->getValue();
 
-    $this->assert(is_array($get_value));
+    $this->assertTrue(is_array($get_value));
 
     foreach ($value as $kk => $vv) {
-      $this->assert(array_key_exists($kk, $get_value));
-      $this->assertEqual($get_value[$kk], $value[$kk]);
+      $this->assertTrue(array_key_exists($kk, $get_value));
+      $this->assertEquals($get_value[$kk], $value[$kk]);
     }
 
     // -----
@@ -63,11 +63,11 @@ class CustomFieldBaseTestMultiple extends CustomFieldBaseTestBase {
     $entity->{$this->fieldName} = $value;
 
     $get_value = $entity->{$this->fieldName}->get(0)->getValue();
-    $this->assert(is_array($get_value));
+    $this->assertTrue(is_array($get_value));
 
     foreach ($value as $kk => $vv) {
-      $this->assert(array_key_exists($kk, $get_value));
-      $this->assertEqual($get_value[$kk], $value[$kk]);
+      $this->assertTrue(array_key_exists($kk, $get_value));
+      $this->assertEquals($get_value[$kk], $value[$kk]);
     }
     // ----
     $entity = EntityTest::create([]);
@@ -79,11 +79,11 @@ class CustomFieldBaseTestMultiple extends CustomFieldBaseTestBase {
 
     $get_value = $entity->{$this->fieldName}->get(0)->getValue();
 
-    $this->assert(is_array($get_value));
+    $this->assertTrue(is_array($get_value));
 
     foreach ($value as $kk => $vv) {
-      $this->assert(array_key_exists($kk, $get_value));
-      $this->assertEqual($get_value[$kk], $value[$kk]);
+      $this->assertTrue(array_key_exists($kk, $get_value));
+      $this->assertEquals($get_value[$kk], $value[$kk]);
     }
 
     // --------
@@ -94,11 +94,11 @@ class CustomFieldBaseTestMultiple extends CustomFieldBaseTestBase {
 
     $get_value = $entity->{$this->fieldName}->get(0)->getValue();
 
-    $this->assert(is_array($get_value));
+    $this->assertTrue(is_array($get_value));
 
     foreach ($value as $kk => $vv) {
-      $this->assert(array_key_exists($kk, $get_value));
-      $this->assertEqual($get_value[$kk], $value[$kk]);
+      $this->assertTrue(array_key_exists($kk, $get_value));
+      $this->assertEquals($get_value[$kk], $value[$kk]);
     }
 
   }
diff --git a/tests/src/Kernel/CustomFieldBaseTestString.php b/tests/src/Kernel/CustomFieldBaseTestString.php
index 8ebe77c..8f47f48 100644
--- a/tests/src/Kernel/CustomFieldBaseTestString.php
+++ b/tests/src/Kernel/CustomFieldBaseTestString.php
@@ -14,7 +14,7 @@ class CustomFieldBaseTestString extends CustomFieldBaseTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->fieldType = "custom_field_base_test_fields_single_string";
     parent::setUp();
   }
@@ -34,7 +34,7 @@ class CustomFieldBaseTestString extends CustomFieldBaseTestBase {
     // $entity->{$this->fieldName}->mykey = $value;
     $get_value = $entity->{$this->fieldName}->get(0)->getValue()["mykey"];
 
-    $this->assertEqual($get_value, $value);
+    $this->assertEquals($get_value, $value);
 
     // -----
     $entity = EntityTest::create([]);
diff --git a/tests/src/Kernel/CustomFieldBaseTestStringMaxLength.php b/tests/src/Kernel/CustomFieldBaseTestStringMaxLength.php
index 43cfa91..56a8185 100644
--- a/tests/src/Kernel/CustomFieldBaseTestStringMaxLength.php
+++ b/tests/src/Kernel/CustomFieldBaseTestStringMaxLength.php
@@ -14,7 +14,7 @@ class CustomFieldBaseTestStringMaxLength extends CustomFieldBaseTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->fieldType = "custom_field_base_test_fields_single_string_max_length";
     parent::setUp();
   }
@@ -40,8 +40,8 @@ class CustomFieldBaseTestStringMaxLength extends CustomFieldBaseTestBase {
       // $entity->{$this->fieldName}->mykey = $value;
       $get_value = $entity->{$this->fieldName}->get(0)->getValue()["mykey"];
 
-      $this->assertNotEqual($get_value, $value);
-      $this->assertEqual($get_value, $cut_value);
+      $this->assertNotEquals($get_value, $value);
+      $this->assertEquals($get_value, $cut_value);
     } finally {
       if ($entity->id()) {
         $entity->delete();
