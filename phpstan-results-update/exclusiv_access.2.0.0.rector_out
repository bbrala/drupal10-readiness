modules/contrib/exclusiv_access/exclusiv_access.help.inc
modules/contrib/exclusiv_access/exclusiv_access.module
modules/contrib/exclusiv_access/src/EventSubscriber/AccessCheck.php
modules/contrib/exclusiv_access/src/Plugin/Field/FieldFormatter/ExclusivAccessFieldFormatter.php
modules/contrib/exclusiv_access/src/Plugin/Field/FieldType/ExclusivAccessFieldType.php
modules/contrib/exclusiv_access/src/Plugin/Field/FieldWidget/ExclusivAccessFieldWidget.php

1 file with changes
===================

1) modules/contrib/exclusiv_access/src/EventSubscriber/AccessCheck.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\exclusiv_access\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\EventSubscriber\DefaultExceptionHtmlSubscriber;
@@ @@
   /**
    * Ad accessDenied Event subscriber.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   Event for interception.
    */
-  public function exclusivAccess(GetResponseEvent $event) {
+  public function exclusivAccess(RequestEvent $event) {

     // Try to find a entity from route.
     $entity = $this->getEntityFromRoute();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


 [OK] 1 file has been changed by Rector                                         

