diff --git a/tests/src/Functional/OperationsHandlerTransactionalTest.php b/tests/src/Functional/OperationsHandlerTransactionalTest.php
index 178e32d..f0e3105 100644
--- a/tests/src/Functional/OperationsHandlerTransactionalTest.php
+++ b/tests/src/Functional/OperationsHandlerTransactionalTest.php
@@ -19,7 +19,7 @@ class OperationsHandlerTransactionalTest extends JsonApiFunctionalTestBase {
     'jsonapi_operations',
   ];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->grantPermissions(Role::load(RoleInterface::ANONYMOUS_ID), [
       'create article content',
diff --git a/tests/src/Kernel/OperationsHandlerTest.php b/tests/src/Kernel/OperationsHandlerTest.php
index 633314e..42d73a2 100644
--- a/tests/src/Kernel/OperationsHandlerTest.php
+++ b/tests/src/Kernel/OperationsHandlerTest.php
@@ -55,7 +55,7 @@ class OperationsHandlerTest extends KernelTestBase {
    */
   protected $operationHandler;
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Add the entity schemas.
@@ -176,7 +176,7 @@ class OperationsHandlerTest extends KernelTestBase {
     $this->assertEquals(200, $response->getStatusCode());
     $node = Node::load(count(static::$nodeUuid)+1);
     $this->assertNotNull($node);
-    $this->assertEqual('JSON:API', $node->getTitle());
+    $this->assertEquals('JSON:API', $node->getTitle());
   }
 
   function testUpdate(){
@@ -203,7 +203,7 @@ class OperationsHandlerTest extends KernelTestBase {
     $this->assertEquals(200, $response->getStatusCode());
     $node = Node::load(1);
     $this->assertNotNull($node);
-    $this->assertEqual('JSON:API Operations', $node->getTitle());
+    $this->assertEquals('JSON:API Operations', $node->getTitle());
   }
 
   function testDelete(){
@@ -258,10 +258,10 @@ class OperationsHandlerTest extends KernelTestBase {
     $this->assertEquals(200, $response->getStatusCode());
     $node = Node::load(count(static::$nodeUuid)+1);
     $this->assertNotNull($node);
-    $this->assertEqual('JSON:API', $node->getTitle());
+    $this->assertEquals('JSON:API', $node->getTitle());
     $node = Node::load(count(static::$nodeUuid)+2);
     $this->assertNotNull($node);
-    $this->assertEqual('GraphQL', $node->getTitle());
+    $this->assertEquals('GraphQL', $node->getTitle());
   }
 
 }
