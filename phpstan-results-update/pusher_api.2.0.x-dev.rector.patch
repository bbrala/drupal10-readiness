diff --git a/deprecated/pusher_api_shoutbox/pusherapi_shoutbox.module b/deprecated/pusher_api_shoutbox/pusherapi_shoutbox.module
index 85e53bb..22c3b62 100644
--- a/deprecated/pusher_api_shoutbox/pusherapi_shoutbox.module
+++ b/deprecated/pusher_api_shoutbox/pusherapi_shoutbox.module
@@ -15,7 +15,7 @@ function pusherapi_shoutbox_init() {
     ),
   );
   drupal_add_js($js, array('type' => 'setting', 'scope' => JS_DEFAULT));
-  drupal_add_css(drupal_get_path('module', 'pusherapi_shoutbox') . '/css/pusherapi_shoutbox.css');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('pusherapi_shoutbox') . '/css/pusherapi_shoutbox.css');
 }
 
 /**
@@ -124,7 +124,7 @@ function pusherapi_shoutbox_block_OLD($op = 'list', $delta = '', $edit = array()
 function pusherapi_shoutbox_block_content() {
   if (user_access('access pusher api')) {
     $channel = variable_get('pusherapi_shoutbox_channel', 'pusher_api_shoutbox');
-    drupal_add_js(drupal_get_path('module', 'pusherapi_shoutbox') . '/js/pusherapi_shoutbox.js');
+    drupal_add_js(\Drupal::service('extension.list.module')->getPath('pusherapi_shoutbox') . '/js/pusherapi_shoutbox.js');
     $ret = drupal_get_form('pusherapi_shoutbox_form');
     $ret .= '<div id="pusherapi_shoutbox_channel"></div>';
     return $ret;
@@ -182,7 +182,7 @@ function pusherapi_shoutbox_post() {
         $data->name = variable_get('anonymous', 'Anonymous');
       }
     }
-    $data->time = format_date(REQUEST_TIME, 'custom', 'd-m-Y H:i:s');
+    $data->time = \Drupal::service('date.formatter')->format(\Drupal::time()->getRequestTime(), 'custom', 'd-m-Y H:i:s');
 
     pusher_api_push($channel, $eventname, $data, PUSHERAPI_SHOUTBOX_NAME);
   }
diff --git a/deprecated/pusher_notifications/pusher_notifications.module b/deprecated/pusher_notifications/pusher_notifications.module
index 521250e..c1bb433 100644
--- a/deprecated/pusher_notifications/pusher_notifications.module
+++ b/deprecated/pusher_notifications/pusher_notifications.module
@@ -21,7 +21,7 @@
  */
 function pusher_notifications_init() {
   if (user_access('access pusher api')) {
-    drupal_add_js(drupal_get_path('module', 'pusher_notifications') . '/js/pusher_notifications.js');
+    drupal_add_js(\Drupal::service('extension.list.module')->getPath('pusher_notifications') . '/js/pusher_notifications.js');
   }
   pusher_api_push('test_channel', 'my_event', 'test');
 }
@@ -72,7 +72,7 @@ function pusher_notifications_save($notification) {
   if (!empty($notification['nfid'])) {
     // Set the default timestamp when not set
     if (empty($notification['created'])) {
-      $notification['created'] = REQUEST_TIME;
+      $notification['created'] = \Drupal::time()->getRequestTime();
     }
 
     drupal_write_record('pusher_notifications_data', $notification);
@@ -86,15 +86,15 @@ function pusher_notifications_save($notification) {
  *   A notification ID or array of IDs.
  */
 function pusher_notifications_delete($nfid) {
-  db_delete('pusher_notifications')->condition('nfid', $nfid)->execute();
-  db_delete('pusher_notifications_data')->condition('nfid', $nfid)->execute();
+  \Drupal::database()->delete('pusher_notifications')->condition('nfid', $nfid)->execute();
+  \Drupal::database()->delete('pusher_notifications_data')->condition('nfid', $nfid)->execute();
 }
 
 /**
  * Implements hook_user_delete().
  */
 function pusher_notifications_user_delete($account) {
-  $nfids = db_select('pusher_notifications', 'pn')
+  $nfids = \Drupal::database()->select('pusher_notifications', 'pn')
     ->fields('pn', array('nfid'))
     ->condition('uid', $account->uid)
     ->execute()
@@ -111,7 +111,7 @@ function pusher_notifications_user_delete($account) {
  *   A user account object.
  */
 function pusher_notifications_mark_read($account) {
-  db_update('pusher_notifications')
+  \Drupal::database()->update('pusher_notifications')
     ->fields(array(
       'new' => 0,
     ))
@@ -127,7 +127,7 @@ function pusher_notifications_mark_read($account) {
  *   A user account object.
  */
 function pusher_notifications_new($account) {
-  $count = db_select('pusher_notifications', 'pn')
+  $count = \Drupal::database()->select('pusher_notifications', 'pn')
     ->condition('uid', $account->uid)
     ->condition('new', 1)
     ->countQuery()
@@ -172,10 +172,10 @@ function pusher_notifications_block_view($delta = '') {
           ),
           '#attached' => array(
             'css' => array(
-              array('data' => drupal_get_path('module', 'pusher_notifications') . '/css/pusher_notifications-block.css'),
+              array('data' => \Drupal::service('extension.list.module')->getPath('pusher_notifications') . '/css/pusher_notifications-block.css'),
             ),
             'js' => array(
-              array('data' => drupal_get_path('module', 'pusher_notifications') . '/js/pusher_notifications-block.js'),
+              array('data' => \Drupal::service('extension.list.module')->getPath('pusher_notifications') . '/js/pusher_notifications-block.js'),
             ),
           ),
         );
diff --git a/deprecated/pusher_notifications/pusher_notifications.pages.inc b/deprecated/pusher_notifications/pusher_notifications.pages.inc
index 931c224..5dd0578 100644
--- a/deprecated/pusher_notifications/pusher_notifications.pages.inc
+++ b/deprecated/pusher_notifications/pusher_notifications.pages.inc
@@ -23,7 +23,7 @@ function pusher_notifications_list($type = 'ajax') {
   pusher_notifications_mark_read($user);
 
   // Query for a list of the latest notifications
-  $query = db_select('pusher_notifications', 'pn');
+  $query = \Drupal::database()->select('pusher_notifications', 'pn');
   $query->join('pusher_notifications_data', 'pnd', 'pn.nfid = pnd.nfid');
 
   $result = $query
diff --git a/deprecated/pusher_notifications/templates/pusher_notifications-notification.tpl.php b/deprecated/pusher_notifications/templates/pusher_notifications-notification.tpl.php
index 630cb72..1eaa82e 100644
--- a/deprecated/pusher_notifications/templates/pusher_notifications-notification.tpl.php
+++ b/deprecated/pusher_notifications/templates/pusher_notifications-notification.tpl.php
@@ -17,7 +17,7 @@
   <div class="pusher-notification">
     <?php print $markup; ?>
     <span class="pusher-notification-date">
-      <?php print format_date($notification['created']); ?>
+      <?php print \Drupal::service('date.formatter')->format($notification['created']); ?>
     </span>
   </div>
 </div>
diff --git a/pusher_api.api.php b/pusher_api.api.php
index 837b57d..ebbc27e 100644
--- a/pusher_api.api.php
+++ b/pusher_api.api.php
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Hook examples and explanations.
@@ -17,7 +18,7 @@
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_data_alter(EntityInterface $entity, array &$data) {
 }
 
 /**
@@ -28,7 +29,7 @@ function hook_pusher_api_data_alter(\Drupal\Core\Entity\EntityInterface $entity,
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_type_NODE_TYPE_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_type_NODE_TYPE_data_alter(EntityInterface $entity, array &$data) {
 }
 
 /**
@@ -39,7 +40,7 @@ function hook_pusher_api_type_NODE_TYPE_data_alter(\Drupal\Core\Entity\EntityInt
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_event_EVENT_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_event_EVENT_data_alter(EntityInterface $entity, array &$data) {
 }
 
 /**
@@ -50,7 +51,7 @@ function hook_pusher_api_event_EVENT_data_alter(\Drupal\Core\Entity\EntityInterf
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_channel_CHANNEL_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_channel_CHANNEL_data_alter(EntityInterface $entity, array &$data) {
 }
 
 /**
@@ -61,5 +62,5 @@ function hook_pusher_api_channel_CHANNEL_data_alter(\Drupal\Core\Entity\EntityIn
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_type_event_NODE_TYPE_EVENT_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_type_event_NODE_TYPE_EVENT_data_alter(EntityInterface $entity, array &$data) {
 }
