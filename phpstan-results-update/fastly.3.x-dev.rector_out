modules/contrib/fastly/fastly.api.php
modules/contrib/fastly/modules/fastlypurger/src/FastlypurgerServiceProvider.php
modules/contrib/fastly/fastly.drush.inc
modules/contrib/fastly/src/Form/FastlySettingsForm.php
modules/contrib/fastly/fastly.install
modules/contrib/fastly/fastly.module
modules/contrib/fastly/modules/fastlypurger/src/Plugin/Purge/DiagnosticCheck/CredentialCheck.php
modules/contrib/fastly/modules/fastlypurger/src/Plugin/Purge/Purger/FastlyPurger.php
modules/contrib/fastly/src/Api.php
modules/contrib/fastly/src/Form/ForceCacheMissOnHardReloadForAdminsForm.php
modules/contrib/fastly/src/Form/ImageOptimizerForm.php
modules/contrib/fastly/src/CacheTagsHash.php
modules/contrib/fastly/src/CacheTagsHashInterface.php
modules/contrib/fastly/src/CacheTagsInvalidator.php
modules/contrib/fastly/src/Commands/FastlyCommands.php
modules/contrib/fastly/src/Form/IncreaseTimeoutsLongJobsForm.php
modules/contrib/fastly/src/Controller/FastlyEdgeModulesController.php
modules/contrib/fastly/src/Form/MobileDeviceDetectionForm.php
modules/contrib/fastly/src/EventSubscriber/AddStaleHeaders.php
modules/contrib/fastly/src/Form/NetaceaIntegrationForm.php
modules/contrib/fastly/src/EventSubscriber/SurrogateKeyGenerator.php
modules/contrib/fastly/src/Form/OtherCmsIntegrationForm.php
modules/contrib/fastly/src/Form/BlackfireIntegrationForm.php
modules/contrib/fastly/src/Form/PurgeOptionsForm.php
modules/contrib/fastly/src/Form/CorsHeadersForm.php
modules/contrib/fastly/src/Form/RedirectHostsForm.php
modules/contrib/fastly/src/Form/CountryblockForm.php
modules/contrib/fastly/src/Form/DatadomeIntegrationForm.php
modules/contrib/fastly/src/Form/StaleContentOptionsForm.php
modules/contrib/fastly/src/Form/UrlRewritesForm.php
modules/contrib/fastly/src/Form/DisableCacheForm.php
modules/contrib/fastly/src/Form/WebhookForm.php
modules/contrib/fastly/src/Plugin/Field/FieldFormatter/FastlyImageFormatter.php
modules/contrib/fastly/src/Services/Webhook.php
modules/contrib/fastly/src/State.php
modules/contrib/fastly/src/Utility/FastlyEdgeModulesHelper.php
modules/contrib/fastly/src/VclHandler.php

4 files with changes
====================

1) modules/contrib/fastly/src/EventSubscriber/SurrogateKeyGenerator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\fastly\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\fastly\CacheTagsHash;
 use Psr\Log\LoggerInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

@@ @@
   /**
    * Logs an emergency event when the X-Drupal-Cache-Tags header exceeds 16 KB.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


2) modules/contrib/fastly/src/EventSubscriber/AddStaleHeaders.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\fastly\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Psr\Log\LoggerInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

@@ @@
   /**
    * Adds Surrogate-Control header.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
     // Get the fastly settings from configuration.
     $config = $this->config->get('fastly.settings');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


3) modules/contrib/fastly/src/VclHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\fastly;

+use Twig\Loader\ArrayLoader;
+use Twig\Environment;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
    */
   public function __construct(ConfigFactoryInterface $config_factory, $host, Api $api, LoggerInterface $logger, Webhook $webhook, RequestStack $requestStack, Messenger $messenger, ModuleHandlerInterface $module_handler) {
     $this->moduleHandler = $module_handler;
-    $vcl_dir = drupal_get_path('module', 'fastly') . '/vcl_snippets';
+    $vcl_dir = \Drupal::service('extension.list.module')->getPath('fastly') . '/vcl_snippets';
     $data = [
       'vcl' => [
         [
@@ @@
         return FALSE;
       }

-      $vcl_dir = drupal_get_path('module', 'fastly') . '/vcl_snippets/errors';
+      $vcl_dir = \Drupal::service('extension.list.module')->getPath('fastly') . '/vcl_snippets/errors';
       $singleVclData['vcl_dir'] = $vcl_dir;
       $singleVclData['type'] = 'deliver';
       $requests = [];
@@ @@
     try {
       $this->cloneLastActiveVersion();
       //Check if optimization on fastly is turned on and if vcl exists
-      $data['vcl_dir'] = drupal_get_path('module', 'fastly') . '/vcl_snippets_image_optimizations/' . $params['optimize'];
+      $data['vcl_dir'] = \Drupal::service('extension.list.module')->getPath('fastly') . '/vcl_snippets_image_optimizations/' . $params['optimize'];
       $data['type'] = 'recv';
       // Set vcl for image optimizer.
       if($this->checkIfVclExists(self::IMAGE_OPTIMIZER_BASIC_IMAGE_SETTINGS)) {
@@ @@
           $data['name'] = FastlyEdgeModulesHelper::FASTLY_EDGE_MODULE_PREFIX . $name . '_' . $vcl['type'];

           // load vcl template and render it
-          $path = drupal_get_path('module','fastly') . '/fastly_edge_modules/templates/';
-          $loader = new \Twig\Loader\ArrayLoader([
+          $path = \Drupal::service('extension.list.module')->getPath('fastly') . '/fastly_edge_modules/templates/';
+          $loader = new ArrayLoader([
             'template' => file_get_contents($path . $vcl['template'] . '.html.twig',TRUE),
           ]);

-          $twig = new \Twig\Environment($loader);
+          $twig = new Environment($loader);
           $data['content'] = $twig->render('template', $values);

           // Skip if template is empty.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


4) modules/contrib/fastly/src/Plugin/Field/FieldFormatter/FastlyImageFormatter.php:354

    ---------- begin diff ----------
@@ @@
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
@@ @@
       }
       if($query){
         $uri = $file->getFileUri();
-        $image_url = Url::fromUri(file_create_url($uri));
+        $image_url = \Drupal::service('file_url_generator')->generate($uri);
         $image_url->setOption('query', $query);
         $file->setFileUri($image_url->toUriString());
       }
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

