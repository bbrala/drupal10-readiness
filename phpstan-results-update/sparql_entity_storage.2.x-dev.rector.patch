diff --git a/sparql_entity_storage.api.php b/sparql_entity_storage.api.php
index 2a42854..c72cd36 100644
--- a/sparql_entity_storage.api.php
+++ b/sparql_entity_storage.api.php
@@ -7,6 +7,8 @@
 
 declare(strict_types = 1);
 
+use Drupal\field\Entity\FieldStorageConfig;
+
 /**
  * Alters the field configuration for fields of entities with SPARQL storage.
  *
@@ -16,7 +18,7 @@ declare(strict_types = 1);
  *   An associative array of field values. This array include any additional
  *   data a field formatter includes.
  */
-function hook_sparql_apply_default_fields_alter(\Drupal\field\Entity\FieldStorageConfig $storage, array &$values) {
+function hook_sparql_apply_default_fields_alter(FieldStorageConfig $storage, array &$values) {
   if ($storage->getType() == 'text_long') {
     // Handle multiple values in a field.
     foreach ($values as &$value) {
diff --git a/src/EventSubscriber/SparqlContentTypesSubscriber.php b/src/EventSubscriber/SparqlContentTypesSubscriber.php
index e2f6002..73fabb5 100644
--- a/src/EventSubscriber/SparqlContentTypesSubscriber.php
+++ b/src/EventSubscriber/SparqlContentTypesSubscriber.php
@@ -4,9 +4,9 @@ declare(strict_types = 1);
 
 namespace Drupal\sparql_entity_storage\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\sparql_entity_storage\Encoder\SparqlEncoder;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -17,10 +17,10 @@ class SparqlContentTypesSubscriber implements EventSubscriberInterface {
   /**
    * Register content type formats on the request object.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The Event to process.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     /** @var \EasyRdf\Format $format */
     foreach (SparqlEncoder::getSupportedFormats() as $format) {
       $mime = array_keys($format->getMimeTypes());
diff --git a/tests/src/Kernel/SparqlSerializerTest.php b/tests/src/Kernel/SparqlSerializerTest.php
index 700e561..3515e8d 100644
--- a/tests/src/Kernel/SparqlSerializerTest.php
+++ b/tests/src/Kernel/SparqlSerializerTest.php
@@ -67,7 +67,7 @@ class SparqlSerializerTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     SimpleSparqlTest::load('http://example.com/apple')->delete();
     parent::tearDown();
   }
