modules/contrib/feeds_migrate/feeds_migrate.install
modules/contrib/feeds_migrate/src/Plugin/MigrateFormPluginManager.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/FeedsMigrateUiParserSuggestion.php
modules/contrib/feeds_migrate/src/Entity/Migration.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_parser/Form/JsonForm.php
modules/contrib/feeds_migrate/tests/src/Traits/FeedsCreationTrait.php
modules/contrib/feeds_migrate/feeds_migrate.module
modules/contrib/feeds_migrate/tests/src/Traits/FeedsMockingTrait.php
modules/contrib/feeds_migrate/tests/src/Traits/FeedsReflectionTrait.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_parser/Form/JsonImporterForm.php
modules/contrib/feeds_migrate/src/Plugin/MigrateFormProcessPluginManager.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_parser/Form/SimpleXmlForm.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_parser/Form/SimpleXmlImporterForm.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_parser/Form/XmlForm.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/FeedsMigrationListBuilder.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_parser/Form/XmlImporterForm.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/feeds_migrate_ui.module
modules/contrib/feeds_migrate/tests/src/Unit/Entity/MigrationTest.php
modules/contrib/feeds_migrate/src/Plugin/MigrateFormProcessPluginManagerInterface.php
modules/contrib/feeds_migrate/src/Plugin/QueueWorker/FeedsMigrateImporter.php
modules/contrib/feeds_migrate/tests/bootstrap.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/Controller/FeedsMigrateController.php
modules/contrib/feeds_migrate/tests/src/Functional/FeedsMigrateTestBase.php
modules/contrib/feeds_migrate/src/Plugin/feeds_migrate/mapping_field/DefaultFieldForm.php
modules/contrib/feeds_migrate/src/Plugin/feeds_migrate/mapping_field/TextAreaFieldForm.php
modules/contrib/feeds_migrate/src/Plugin/migrate/destination/Form/DestinationFormPluginBase.php
modules/contrib/feeds_migrate/src/Plugin/migrate/destination/Form/EntityContentOptionForm.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/Form/MigrationDeleteForm.php
modules/contrib/feeds_migrate/tests/src/Functional/Form/MigrationMappingFormTest.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/Form/MigrationExportForm.php
modules/contrib/feeds_migrate/src/Plugin/migrate/process/Form/DefaultValueForm.php
modules/contrib/feeds_migrate/src/Plugin/migrate/source/Form/SourceFormPluginBase.php
modules/contrib/feeds_migrate/src/Plugin/migrate/source/Form/UrlForm.php
modules/contrib/feeds_migrate/src/Plugin/migrate/source/Form/UrlFormBase.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/Form/MigrationForm.php
modules/contrib/feeds_migrate/tests/src/Functional/ImporterTest.php
modules/contrib/feeds_migrate/tests/src/Unit/FeedsMigrateUnitTestBase.php
modules/contrib/feeds_migrate/tests/src/Unit/MappingFieldFormBaseTest.php
modules/contrib/feeds_migrate/src/Plugin/migrate/source/Form/UrlImporterForm.php
modules/contrib/feeds_migrate/tests/src/FunctionalJavascript/FeedsMigrateJavascriptTestBase.php
modules/contrib/feeds_migrate/src/Plugin/migrate/source/NullSource.php
modules/contrib/feeds_migrate/tests/src/FunctionalJavascript/Form/ImporterFormTest.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_fetcher/Form/DataFetcherFormPluginBase.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_fetcher/Form/FileForm.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_fetcher/Form/FileImporterForm.php
modules/contrib/feeds_migrate/tests/src/FunctionalJavascript/Form/MigrationFormTest.php
modules/contrib/feeds_migrate/src/Entity/MigrationInterface.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_fetcher/Form/HttpForm.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/Form/MigrationMappingAddForm.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_fetcher/Form/HttpImporterForm.php
modules/contrib/feeds_migrate/src/Exception/MigrateFormPluginNotFoundException.php
modules/contrib/feeds_migrate/src/FeedsMigrateBatchExecutable.php
modules/contrib/feeds_migrate/src/Plugin/migrate_plus/data_parser/Form/DataParserFormPluginBase.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/Form/MigrationMappingDeleteForm.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/Form/MigrationMappingEditForm.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/Form/MigrationMappingForm.php
modules/contrib/feeds_migrate/src/FeedsMigrateExecutable.php
modules/contrib/feeds_migrate/tests/src/FunctionalJavascript/Form/MigrationMappingFormTest.php
modules/contrib/feeds_migrate/tests/src/Traits/FeedsCommonTrait.php
modules/contrib/feeds_migrate/tests/src/Unit/MappingFieldFormManagerTest.php
modules/contrib/feeds_migrate/modules/feeds_migrate_ui/src/Form/MigrationMappingFormBase.php
modules/contrib/feeds_migrate/tests/src/Unit/Plugin/MigrateFormProcessPluginManagerTest.php
modules/contrib/feeds_migrate/modules/migrate_tamper/src/Adapter/TamperableMigrateRowAdapter.php
modules/contrib/feeds_migrate/modules/migrate_tamper/src/Plugin/Derivative/TamperProcessPluginDeriver.php
modules/contrib/feeds_migrate/modules/migrate_tamper/src/Plugin/migrate/process/Form/TamperForm.php
modules/contrib/feeds_migrate/modules/migrate_tamper/src/Plugin/migrate/process/Tamper.php
modules/contrib/feeds_migrate/src/FeedsMigrateImporterInterface.php
modules/contrib/feeds_migrate/tests/src/Unit/Plugin/feeds_migrate/mapping_field/DefaultFieldFormTest.php
modules/contrib/feeds_migrate/tests/src/Unit/Plugin/feeds_migrate/mapping_field/MappingFieldFormTestBase.php
modules/contrib/feeds_migrate/src/FeedsMigrateImporterListBuilder.php
modules/contrib/feeds_migrate/src/Ajax/SetHashCommand.php
modules/contrib/feeds_migrate/src/Annotation/MappingFieldForm.php
modules/contrib/feeds_migrate/src/Annotation/MigrateForm.php
modules/contrib/feeds_migrate/src/Entity/FeedsMigrateImporter.php
modules/contrib/feeds_migrate/src/Form/FeedsMigrateImporterDeleteForm.php
modules/contrib/feeds_migrate/tests/src/Unit/Plugin/feeds_migrate/mapping_field/TextAreaFieldFormTest.php
modules/contrib/feeds_migrate/src/Form/FeedsMigrateImporterDisableForm.php
modules/contrib/feeds_migrate/src/Form/FeedsMigrateImporterEnableForm.php
modules/contrib/feeds_migrate/src/Form/FeedsMigrateImporterForm.php
modules/contrib/feeds_migrate/src/Form/FeedsMigrateImporterImportForm.php
modules/contrib/feeds_migrate/src/Form/FeedsMigrateImporterRollbackForm.php
modules/contrib/feeds_migrate/src/MappingFieldFormBase.php
modules/contrib/feeds_migrate/src/MappingFieldFormInterface.php
modules/contrib/feeds_migrate/src/MappingFieldFormManager.php
modules/contrib/feeds_migrate/src/MappingFieldFormManagerInterface.php
modules/contrib/feeds_migrate/src/Plugin/MigrateFormPluginBase.php
modules/contrib/feeds_migrate/src/Plugin/MigrateFormPluginFactory.php
modules/contrib/feeds_migrate/src/Plugin/MigrateFormPluginInterface.php

12 files with changes
=====================

1) modules/contrib/feeds_migrate/tests/src/Traits/FeedsCommonTrait.php:130

    ---------- begin diff ----------
@@ @@
    *   The absolute path to the Feeds module.
    */
   protected function absolutePath() {
-    return $this->absolute() . '/' . drupal_get_path('module', 'feeds_migrate');
+    return $this->absolute() . '/' . \Drupal::service('extension.list.module')->getPath('feeds_migrate');
   }

   /**
@@ @@
    *   The url to the Feeds resources directory.
    */
   protected function resourcesUrl() {
-    return \Drupal::request()->getSchemeAndHttpHost() . '/' . drupal_get_path('module', 'feeds_migrate') . '/tests/resources';
+    return \Drupal::request()->getSchemeAndHttpHost() . '/' . \Drupal::service('extension.list.module')->getPath('feeds_migrate') . '/tests/resources';
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/feeds_migrate/tests/src/FunctionalJavascript/Form/MigrationMappingFormTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a migration entity.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/feeds_migrate/tests/src/FunctionalJavascript/FeedsMigrateJavascriptTestBase.php:42

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a content type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/feeds_migrate/tests/src/Functional/ImporterTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Copy sample xml file to the expected file directory (i.e. public://).
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/feeds_migrate/tests/src/Functional/Form/MigrationMappingFormTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a migration entity.
@@ @@
     $edit = [
       'destination_field' => 'title',
     ];
-    $this->drupalPostForm('/admin/structure/migrate/sources/example_migration/mapping/add', $edit, 'Save');
+    $this->drupalGet('/admin/structure/migrate/sources/example_migration/mapping/add');
+    $this->submitForm($edit, 'Save');

     // And then just save without filling in the source.
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');

     $this->assertSession()->pageTextNotContains('Migration mapping for field Title has been updated.');
     $this->assertSession()->pageTextContains('Please enter a source or configure a process plugin.');
@@ @@
     $edit = [
       'destination_field' => 'title',
     ];
-    $this->drupalPostForm('/admin/structure/migrate/sources/example_migration/mapping/add', $edit, 'Save');
+    $this->drupalGet('/admin/structure/migrate/sources/example_migration/mapping/add');
+    $this->submitForm($edit, 'Save');

     // Set a source and add a process plugin for it.
     $edit = [
@@ @@
       'mapping[title][properties][value][source]' => 'source_a',
       'mapping[title][properties][value][process][add][plugin]' => 'default_value',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Add');
+    $this->submitForm($edit, 'Add');

     // Set a default value and save.
     $edit = [
       'mapping[title][properties][value][process][plugins][0][configuration][default_value]' => 'Foo',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     // Check if migration is saved with the expected values.
     $migration = Migration::load('example_migration');
@@ @@
     $edit = [
       'destination_field' => 'body',
     ];
-    $this->drupalPostForm('/admin/structure/migrate/sources/example_migration/mapping/add', $edit, 'Save');
+    $this->drupalGet('/admin/structure/migrate/sources/example_migration/mapping/add');
+    $this->submitForm($edit, 'Save');

     // Set a source and add a process plugin for the 'value' property.
     $edit = [
@@ @@
       'mapping[body][properties][value][source]' => 'source_a',
       'mapping[body][properties][value][process][add][plugin]' => 'default_value',
     ];
-    $this->drupalPostForm(NULL, $edit, 'edit-mapping-body-properties-value-process-add-button');
+    $this->submitForm($edit, 'edit-mapping-body-properties-value-process-add-button');

     // Also add a process plugin for the 'summary' property.
     $edit = [
@@ @@
       'mapping[body][properties][summary][source]' => 'source_b',
       'mapping[body][properties][summary][process][add][plugin]' => 'default_value',
     ];
-    $this->drupalPostForm(NULL, $edit, 'edit-mapping-body-properties-summary-process-add-button');
+    $this->submitForm($edit, 'edit-mapping-body-properties-summary-process-add-button');

     // Configure process plugins for both properties and save.
     $edit = [
@@ @@
       'mapping[body][properties][value][process][plugins][0][configuration][default_value]' => 'Foo',
       'mapping[body][properties][summary][process][plugins][0][configuration][default_value]' => 'Bar',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     // Check if migration is saved with the expected values.
     $migration = Migration::load('example_migration');
@@ @@
     $edit = [
       'mapping[body][properties][summary][source]' => '',
     ];
-    $this->drupalPostForm('/admin/structure/migrate/sources/example_migration/mapping/body/edit', $edit, 'Save');
+    $this->drupalGet('/admin/structure/migrate/sources/example_migration/mapping/body/edit');
+    $this->submitForm($edit, 'Save');

     // Check if migration is saved with the expected values.
     $migration = $this->reloadEntity($migration);
@@ @@
       'destination_field' => '_custom',
       'destination_key' => 'foo',
     ];
-    $this->drupalPostForm('/admin/structure/migrate/sources/example_migration/mapping/add', $edit, 'Save');
+    $this->drupalGet('/admin/structure/migrate/sources/example_migration/mapping/add');
+    $this->submitForm($edit, 'Save');

     // And set a source.
     $edit = [
       'mapping[foo][source]' => 'qux',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');

     // Check if migration is saved with the expected values.
     $migration = Migration::load('example_migration');
@@ @@
     $this->drupalGet('/admin/structure/migrate/sources/example_migration/mapping');
     $this->assertSession()->pageTextContains('foo');
     $this->assertSession()->pageTextContains('qux');
+    $this->drupalGet('/admin/structure/migrate/sources/example_migration/mapping/foo/delete');

     // Now remove the mapper.
-    $this->drupalPostForm('/admin/structure/migrate/sources/example_migration/mapping/foo/delete', [], 'Delete');
+    $this->submitForm([], 'Delete');

     // And assert that the mapper has been removed.
     $migration = $this->reloadEntity($migration);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/feeds_migrate/tests/src/Functional/FeedsMigrateTestBase.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a content type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/feeds_migrate/tests/src/Unit/Plugin/feeds_migrate/mapping_field/MappingFieldFormTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds_migrate\Unit\Plugin\feeds_migrate\mapping_field;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Field\FieldItemInterface;
 use Drupal\Core\Field\FieldTypePluginManagerInterface;
 use Drupal\Core\Form\FormState;
@@ @@
  */
 abstract class MappingFieldFormTestBase extends FeedsMigrateUnitTestBase {

+  use ProphecyTrait;
   /**
    * The MappingFieldForm plugin under test.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->migration = $this->prophesize(MigrationInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/feeds_migrate/tests/src/Unit/Plugin/MigrateFormProcessPluginManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds_migrate\Unit\Plugin;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
  */
 class MigrateFormProcessPluginManagerTest extends FeedsMigrateUnitTestBase {

+  use ProphecyTrait;
   /**
    * The module handler.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $namespaces = new \ArrayObject();
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/feeds_migrate/tests/src/Unit/MappingFieldFormManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds_migrate\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ @@
  */
 class MappingFieldFormManagerTest extends FeedsMigrateUnitTestBase {

+  use ProphecyTrait;
   /**
    * The mapping field form manager to test.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $namespaces = new \ArrayObject();
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ExplicitPhpErrorApiRector (https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.0.md)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/feeds_migrate/tests/src/Unit/MappingFieldFormBaseTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds_migrate\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Field\FieldItemInterface;
 use Drupal\Core\Field\FieldTypePluginManagerInterface;
@@ @@
  */
 class MappingFieldFormBaseTest extends FeedsMigrateUnitTestBase {

+  use ProphecyTrait;
   /**
    * The migration.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->migration = $this->prophesize(MigrationInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/feeds_migrate/tests/src/Unit/Entity/MigrationTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\feeds_migrate\Unit\Entity;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\feeds_migrate\Entity\Migration;
@@ @@
  */
 class MigrationTest extends FeedsMigrateUnitTestBase {

+  use ProphecyTrait;
   /**
    * Field manager service.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->fieldManager = $this->prophesize(EntityFieldManagerInterface::class);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/feeds_migrate/src/FeedsMigrateExecutable.php:453

    ---------- begin diff ----------
@@ @@
     if ($save) {
       try {
         $this->getEventDispatcher()
-          ->dispatch(MigrateEvents::PRE_ROW_SAVE, new MigratePreRowSaveEvent($this->migration, $this->message, $row));
+          ->dispatch(new MigratePreRowSaveEvent($this->migration, $this->message, $row), MigrateEvents::PRE_ROW_SAVE);
         $destination_ids = $id_map->lookupDestinationIds($this->sourceIdValues);
         $destination_id_values = $destination_ids ? reset($destination_ids) : [];
         $destination_id_values = $destination->import($row, $destination_id_values);
         $this->getEventDispatcher()
-          ->dispatch(MigrateEvents::POST_ROW_SAVE, new MigratePostRowSaveEvent($this->migration, $this->message, $row, $destination_id_values));
+          ->dispatch(new MigratePostRowSaveEvent($this->migration, $this->message, $row, $destination_id_values), MigrateEvents::POST_ROW_SAVE);
         if ($destination_id_values) {
           // We do not save an idMap entry for config.
           if ($destination_id_values !== TRUE) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 12 files have been changed by Rector                                      

