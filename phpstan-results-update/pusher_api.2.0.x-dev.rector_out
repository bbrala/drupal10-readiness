modules/contrib/pusher_api/src/PusherApiMainService.php
modules/contrib/pusher_api/deprecated/pusher_api_shoutbox/pusherapi_shoutbox.module
modules/contrib/pusher_api/deprecated/pusher_notifications/pusher_notifications.admin.inc
modules/contrib/pusher_api/deprecated/pusher_notifications/pusher_notifications.install
modules/contrib/pusher_api/deprecated/pusher_notifications/pusher_notifications.module
modules/contrib/pusher_api/deprecated/pusher_notifications/pusher_notifications.pages.inc
modules/contrib/pusher_api/deprecated/pusher_notifications/templates/pusher_notifications-list.tpl.php
modules/contrib/pusher_api/deprecated/pusher_notifications/templates/pusher_notifications-notification.tpl.php
modules/contrib/pusher_api/pusher_api.api.php
modules/contrib/pusher_api/pusher_api.install
modules/contrib/pusher_api/pusher_api.module
modules/contrib/pusher_api/src/Event/PusherApiNodeEvent.php
modules/contrib/pusher_api/src/EventSubscriber/PusherApiNodeSubscriber.php
modules/contrib/pusher_api/src/Form/PusherApiSettingsForm.php

5 files with changes
====================

1) modules/contrib/pusher_api/pusher_api.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Hook examples and explanations.
@@ @@
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_data_alter(EntityInterface $entity, array &$data) {
 }

 /**
@@ @@
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_type_NODE_TYPE_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_type_NODE_TYPE_data_alter(EntityInterface $entity, array &$data) {
 }

 /**
@@ @@
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_event_EVENT_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_event_EVENT_data_alter(EntityInterface $entity, array &$data) {
 }

 /**
@@ @@
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_channel_CHANNEL_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_channel_CHANNEL_data_alter(EntityInterface $entity, array &$data) {
 }

 /**
@@ @@
  * @param array $data
  *   The data array.
  */
-function hook_pusher_api_type_event_NODE_TYPE_EVENT_data_alter(\Drupal\Core\Entity\EntityInterface $entity, array &$data) {
+function hook_pusher_api_type_event_NODE_TYPE_EVENT_data_alter(EntityInterface $entity, array &$data) {
 }
    ----------- end diff -----------

2) modules/contrib/pusher_api/deprecated/pusher_notifications/templates/pusher_notifications-notification.tpl.php:16

    ---------- begin diff ----------
@@ @@
   <div class="pusher-notification">
     <?php print $markup; ?>
     <span class="pusher-notification-date">
-      <?php print format_date($notification['created']); ?>
+      <?php print \Drupal::service('date.formatter')->format($notification['created']); ?>
     </span>
   </div>
 </div>
    ----------- end diff -----------

Applied rules:
 * FormatDateRector
 * ArgumentRemoverRector


3) modules/contrib/pusher_api/deprecated/pusher_notifications/pusher_notifications.pages.inc:22

    ---------- begin diff ----------
@@ @@
   pusher_notifications_mark_read($user);

   // Query for a list of the latest notifications
-  $query = db_select('pusher_notifications', 'pn');
+  $query = \Drupal::database()->select('pusher_notifications', 'pn');
   $query->join('pusher_notifications_data', 'pnd', 'pn.nfid = pnd.nfid');

   $result = $query
    ----------- end diff -----------

Applied rules:
 * DBSelectRector
 * ArgumentRemoverRector


4) modules/contrib/pusher_api/deprecated/pusher_notifications/pusher_notifications.module:20

    ---------- begin diff ----------
@@ @@
  */
 function pusher_notifications_init() {
   if (user_access('access pusher api')) {
-    drupal_add_js(drupal_get_path('module', 'pusher_notifications') . '/js/pusher_notifications.js');
+    drupal_add_js(\Drupal::service('extension.list.module')->getPath('pusher_notifications') . '/js/pusher_notifications.js');
   }
   pusher_api_push('test_channel', 'my_event', 'test');
 }
@@ @@
   if (!empty($notification['nfid'])) {
     // Set the default timestamp when not set
     if (empty($notification['created'])) {
-      $notification['created'] = REQUEST_TIME;
+      $notification['created'] = \Drupal::time()->getRequestTime();
     }

     drupal_write_record('pusher_notifications_data', $notification);
@@ @@
  *   A notification ID or array of IDs.
  */
 function pusher_notifications_delete($nfid) {
-  db_delete('pusher_notifications')->condition('nfid', $nfid)->execute();
-  db_delete('pusher_notifications_data')->condition('nfid', $nfid)->execute();
+  \Drupal::database()->delete('pusher_notifications')->condition('nfid', $nfid)->execute();
+  \Drupal::database()->delete('pusher_notifications_data')->condition('nfid', $nfid)->execute();
 }

 /**
@@ @@
  * Implements hook_user_delete().
  */
 function pusher_notifications_user_delete($account) {
-  $nfids = db_select('pusher_notifications', 'pn')
+  $nfids = \Drupal::database()->select('pusher_notifications', 'pn')
     ->fields('pn', array('nfid'))
     ->condition('uid', $account->uid)
     ->execute()
@@ @@
  *   A user account object.
  */
 function pusher_notifications_mark_read($account) {
-  db_update('pusher_notifications')
+  \Drupal::database()->update('pusher_notifications')
     ->fields(array(
       'new' => 0,
     ))
@@ @@
  *   A user account object.
  */
 function pusher_notifications_new($account) {
-  $count = db_select('pusher_notifications', 'pn')
+  $count = \Drupal::database()->select('pusher_notifications', 'pn')
     ->condition('uid', $account->uid)
     ->condition('new', 1)
     ->countQuery()
@@ @@
           ),
           '#attached' => array(
             'css' => array(
-              array('data' => drupal_get_path('module', 'pusher_notifications') . '/css/pusher_notifications-block.css'),
+              array('data' => \Drupal::service('extension.list.module')->getPath('pusher_notifications') . '/css/pusher_notifications-block.css'),
             ),
             'js' => array(
-              array('data' => drupal_get_path('module', 'pusher_notifications') . '/js/pusher_notifications-block.js'),
+              array('data' => \Drupal::service('extension.list.module')->getPath('pusher_notifications') . '/js/pusher_notifications-block.js'),
             ),
           ),
         );
    ----------- end diff -----------

Applied rules:
 * DBDeleteRector
 * DBSelectRector
 * DBUpdateRector
 * DrupalGetPathRector
 * RequestTimeConstRector
 * ArgumentRemoverRector


5) modules/contrib/pusher_api/deprecated/pusher_api_shoutbox/pusherapi_shoutbox.module:14

    ---------- begin diff ----------
@@ @@
     ),
   );
   drupal_add_js($js, array('type' => 'setting', 'scope' => JS_DEFAULT));
-  drupal_add_css(drupal_get_path('module', 'pusherapi_shoutbox') . '/css/pusherapi_shoutbox.css');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('pusherapi_shoutbox') . '/css/pusherapi_shoutbox.css');
 }

 /**
@@ @@
 function pusherapi_shoutbox_block_content() {
   if (user_access('access pusher api')) {
     $channel = variable_get('pusherapi_shoutbox_channel', 'pusher_api_shoutbox');
-    drupal_add_js(drupal_get_path('module', 'pusherapi_shoutbox') . '/js/pusherapi_shoutbox.js');
+    drupal_add_js(\Drupal::service('extension.list.module')->getPath('pusherapi_shoutbox') . '/js/pusherapi_shoutbox.js');
     $ret = drupal_get_form('pusherapi_shoutbox_form');
     $ret .= '<div id="pusherapi_shoutbox_channel"></div>';
     return $ret;
@@ @@
         $data->name = variable_get('anonymous', 'Anonymous');
       }
     }
-    $data->time = format_date(REQUEST_TIME, 'custom', 'd-m-Y H:i:s');
+    $data->time = \Drupal::service('date.formatter')->format(\Drupal::time()->getRequestTime(), 'custom', 'd-m-Y H:i:s');

     pusher_api_push($channel, $eventname, $data, PUSHERAPI_SHOUTBOX_NAME);
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FormatDateRector
 * RequestTimeConstRector
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

