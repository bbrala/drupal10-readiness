diff --git a/modules/preview_graphql_jwt/preview_graphql_jwt.module b/modules/preview_graphql_jwt/preview_graphql_jwt.module
index 8900b62..fc97f17 100644
--- a/modules/preview_graphql_jwt/preview_graphql_jwt.module
+++ b/modules/preview_graphql_jwt/preview_graphql_jwt.module
@@ -28,7 +28,7 @@ function preview_graphql_jwt_help($route_name, RouteMatchInterface $route_match)
         '#value' => $content,
       ];
       $output = '';
-      $output .= render($build);
+      $output .= \Drupal::service('renderer')->render($build);
       return $output;
   }
   return '';
diff --git a/preview_graphql.module b/preview_graphql.module
index 5a07b59..da6320c 100644
--- a/preview_graphql.module
+++ b/preview_graphql.module
@@ -32,7 +32,7 @@ function preview_graphql_help($route_name, RouteMatchInterface $route_match) {
         '#value' => $content,
       ];
       $output = '';
-      $output .= render($build);
+      $output .= \Drupal::service('renderer')->render($build);
       return $output;
   }
   return '';
diff --git a/src/Event/CarrierCallbackOptionEvent.php b/src/Event/CarrierCallbackOptionEvent.php
index 2976fe7..cd8a1a9 100644
--- a/src/Event/CarrierCallbackOptionEvent.php
+++ b/src/Event/CarrierCallbackOptionEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\preview_graphql\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Event that is fired when settings of carrier callback element is building.
diff --git a/src/Event/PreviewGraphQlEventBase.php b/src/Event/PreviewGraphQlEventBase.php
index e636cd4..0b6d0eb 100644
--- a/src/Event/PreviewGraphQlEventBase.php
+++ b/src/Event/PreviewGraphQlEventBase.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\preview_graphql\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Event preview graphql Base.
diff --git a/src/Plugin/GraphQL/Fields/PreviewGraphQLField.php b/src/Plugin/GraphQL/Fields/PreviewGraphQLField.php
index 6b49456..ceaba26 100644
--- a/src/Plugin/GraphQL/Fields/PreviewGraphQLField.php
+++ b/src/Plugin/GraphQL/Fields/PreviewGraphQLField.php
@@ -69,7 +69,7 @@ class PreviewGraphQLField extends FieldPluginBase implements ContainerFactoryPlu
     $event = new ContextResolverCacheEvent($carrier_callback, $context);
     $this->previewGraphQLManager->getPreviewGraphQlBackend()
       ->getEventDispatcher()
-      ->dispatch(ContextResolverCacheEvent::EVENT_NAME, $event);
+      ->dispatch($event, ContextResolverCacheEvent::EVENT_NAME);
     $result = $this->previewGraphQLManager->getCacheDataValue('gql');
     if (is_array($result) && !empty($result['error'])) {
       throw new Error(sprintf('%s', $result['error']));
diff --git a/src/Services/PreviewGraphQlManager.php b/src/Services/PreviewGraphQlManager.php
index 15788bd..e09e944 100644
--- a/src/Services/PreviewGraphQlManager.php
+++ b/src/Services/PreviewGraphQlManager.php
@@ -517,7 +517,7 @@ class PreviewGraphQlManager {
     // Get the value to transmit (token or cache id).
     $event = new GenerateKeyEvent($carrier_callback, $uuid);
     $this->previewGraphQlBackend->getEventDispatcher()
-      ->dispatch(GenerateKeyEvent::EVENT_NAME, $event);
+      ->dispatch($event, GenerateKeyEvent::EVENT_NAME);
     $url_parameter_value = $event->getValueKey();
     $method = $this->previewGraphQlBackend->getConfig()->get('method');
     // POST data method.
@@ -576,7 +576,7 @@ class PreviewGraphQlManager {
     // Event alter response before redirect.
     $event = new RedirectEvent($carrier_callback, $response, $url_parameter_value);
     $this->previewGraphQlBackend->getEventDispatcher()
-      ->dispatch(RedirectEvent::EVENT_NAME, $event);
+      ->dispatch($event, RedirectEvent::EVENT_NAME);
     $response = $event->getResponse();
     $form_state->disableRedirect();
     $form_state->setResponse($response);
