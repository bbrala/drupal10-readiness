modules/contrib/apitools/apitools.module
modules/contrib/apitools/src/Annotation/ApiToolsClient.php
modules/contrib/apitools/src/ClientObjectInterface.php
modules/contrib/apitools/src/ResponseObjectInterface.php
modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Client/Address.php
modules/contrib/apitools/src/ClientObjectManager.php
modules/contrib/apitools/src/Annotation/ApiToolsClientObject.php
modules/contrib/apitools/src/Annotation/ApiToolsModel.php
modules/contrib/apitools/src/Annotation/ResponseObject.php
modules/contrib/apitools/src/Batch/BatchBuilder.php
modules/contrib/apitools/src/ResponseObjectManager.php
modules/contrib/apitools/src/Batch/BatchProcessorInterface.php
modules/contrib/apitools/src/ClientBase.php
modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Client/AddressController.php
modules/contrib/apitools/src/ClientObjectManagerInterface.php
modules/contrib/apitools/src/EntityDecoratorInterface.php
modules/contrib/apitools/src/EntityDecoratorTrait.php
modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Client/Customer.php
modules/contrib/apitools/src/ResponseObjectManagerInterface.php
modules/contrib/apitools/src/SerializableObjectInterface.php
modules/contrib/apitools/src/SerializableObjectTrait.php
modules/contrib/apitools/src/SyncManager.php
modules/contrib/apitools/src/ClientInterface.php
modules/contrib/apitools/src/ExtensibleObjectTrait.php
modules/contrib/apitools/src/ClientManager.php
modules/contrib/apitools/src/Testing/ExistingSiteBase.php
modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Client/CustomerController.php
modules/contrib/apitools/src/ClientManagerInterface.php
modules/contrib/apitools/src/ClientObject.php
modules/contrib/apitools/src/FormAlter/FormAlterBase.php
modules/contrib/apitools/src/ModelBase.php
modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Client/Location.php
modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Response/Customer.php
modules/contrib/apitools/src/ClientObjectCollection.php
modules/contrib/apitools/src/ClientObjectControllerBase.php
modules/contrib/apitools/src/Update/BatchUpdater.php
modules/contrib/apitools/src/ModelControllerBase.php
modules/contrib/apitools/src/Update/ContentUpdater.php
modules/contrib/apitools/src/Update/FieldUpdater.php
modules/contrib/apitools/src/ClientObjectControllerDefault.php
modules/contrib/apitools/src/ClientObjectControllerInterface.php
modules/contrib/apitools/src/ModelControllerDefault.php
modules/contrib/apitools/src/ModelControllerInterface.php
modules/contrib/apitools/src/ModelInterface.php
modules/contrib/apitools/src/ModelManager.php
modules/contrib/apitools/src/ModelManagerInterface.php
modules/contrib/apitools/src/Plugin/Action/WorkflowStateAction.php
modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Response/CustomerInterest.php
modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Response/Location.php
modules/contrib/apitools/tests/src/Traits/ArraySubset.php
modules/contrib/apitools/tests/src/Traits/EmailTestTrait.php
modules/contrib/apitools/src/Plugin/Field/FieldFormatter/DateRangeCombined.php
modules/contrib/apitools/src/Update/Updater.php
modules/contrib/apitools/src/Utility/ArrayIterator.php
modules/contrib/apitools/src/Plugin/migrate/process/Deepen.php
modules/contrib/apitools/src/Utility/ArrayObject.php
modules/contrib/apitools/src/Plugin/migrate_plus/data_fetcher/Http.php
modules/contrib/apitools/src/Utility/FieldUtils.php
modules/contrib/apitools/src/Utility/ParameterBag.php
modules/contrib/apitools/src/WorkflowStateActionEvent.php
modules/contrib/apitools/src/Plugin/views/relationship/Delta.php
modules/contrib/apitools/tests/Testing.php
modules/contrib/apitools/tests/modules/apitools_test/apitools_test.module
modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Client.php
modules/contrib/apitools/src/ResponseObject.php

5 files with changes
====================

1) modules/contrib/apitools/src/ClientObjectControllerBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\apitools;

+use Drupal\Component\Plugin\Exception\InvalidDecoratedMethod;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
 use Symfony\Component\DependencyInjection\ContainerInterface;

@@ @@

   protected function sendRequest($controller_method, $client_method, $id = NULL, $options = []) {
     if (!$path = $this->buildPath($controller_method, $id)) {
-      throw new \Drupal\Component\Plugin\Exception\InvalidDecoratedMethod($this->t('No path defined for @method', ['@method' => $controller_method]));
+      throw new InvalidDecoratedMethod($this->t('No path defined for @method', ['@method' => $controller_method]));
     }
     return $this->request($client_method, $path, $options);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


2) modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Client/CustomerController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\apitools_test\Plugin\ApiTools\Client;

+use Drupal\user\Entity\User;
 use Drupal\apitools\ClientObjectControllerDefault;
 use Drupal\profile\Entity\ProfileInterface;
 use Drupal\user\UserInterface;
@@ @@
   }

   public function getByUid($uid, array $options = []) {
-    if (!$user = \Drupal\user\Entity\User::load($uid)) {
+    if (!$user = User::load($uid)) {
       return FALSE;
     }
     return $this->getByUser($user);
@@ @@
   }

   public function getIdByUid($uid, array $options = []) {
-    if ($user = \Drupal\user\Entity\User::load($uid)) {
+    if ($user = User::load($uid)) {
       return $this->getIdByUser($user, $options);
     }
     return FALSE;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Client/AddressController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\apitools_test\Plugin\ApiTools\Client;

+use Drupal\commerce_mxmerchant\Plugin\ApiTools\Model\Address;
+use Drupal\profile\Entity\ProfileInterface;
 use Drupal\apitools\ClientObjectControllerDefault;

 class AddressController extends ClientObjectControllerDefault {

   public static function getAddressMapping($type = 'all') {
-    return \Drupal\commerce_mxmerchant\Plugin\ApiTools\Model\Address::getAddressMapping($type);
+    return Address::getAddressMapping($type);
   }

-  public function createFromProfile(\Drupal\profile\Entity\ProfileInterface $profile) {
+  public function createFromProfile(ProfileInterface $profile) {
     $model = $this->create([])->setProfile($profile);
     $address = $profile->address->first()->getValue();
     foreach (self::getAddressMapping() as $drupal_key => $mx_key) {
@@ @@
   /**
    * Loads an address with a customer context.
    */
-  public function getByProfile(\Drupal\profile\Entity\ProfileInterface $profile) {
+  public function getByProfile(ProfileInterface $profile) {
     $address = FALSE;
     if ($id = $profile->commerce_remote_id->remote_id) {
       if (!$customer = $this->getClient()->customers->getByProfile($profile)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/apitools/src/Plugin/Action/WorkflowStateAction.php:124

    ---------- begin diff ----------
@@ @@
     $event->setOriginalStatuses($original_statuses)
       ->setToState($this->configuration['state_id']);

-    $this->eventDispatcher->dispatch("entity.bulk_pre_update", $event);
+    $this->eventDispatcher->dispatch($event, "entity.bulk_pre_update");
     $this->eventDispatcher->dispatch("entity.$entity_type.bulk_pre_update", $event);
     parent::executeMultiple($entities);
-    $this->eventDispatcher->dispatch("entity.bulk_post_update", $event);
+    $this->eventDispatcher->dispatch($event, "entity.bulk_post_update");
     $this->eventDispatcher->dispatch("entity.$entity_type.bulk_post_update", $event);
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/apitools/tests/modules/apitools_test/src/Plugin/ApiTools/Client.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\apitools_test\Plugin\ApiTools;

+use Drupal\apitools\Utility\ParameterBag;
 use Drupal\apitools\ClientBase;
 use Drupal\apitools\ClientManagerInterface;
 use Drupal\apitools\ObjectManagerInterface;
@@ @@
       // create a new mxmerchant client from that.
       $configuration = $gateway->getPluginConfiguration();

-      $this->params = new \Drupal\apitools\Utility\ParameterBag([
+      $this->params = new ParameterBag([
         'oauth_callback' => '',
         'oauth_consumer_key' => '',
         'oauth_nonce' => sha1(microtime()),
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

