diff --git a/modules/stripe_examples/src/Form/SimpleCheckoutForm.php b/modules/stripe_examples/src/Form/SimpleCheckoutForm.php
index 343f0b0..eb158ad 100644
--- a/modules/stripe_examples/src/Form/SimpleCheckoutForm.php
+++ b/modules/stripe_examples/src/Form/SimpleCheckoutForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\stripe_examples\Form;
 
+use Stripe\StripeClient;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -98,7 +99,7 @@ class SimpleCheckoutForm extends FormBase {
     $config = \Drupal::config('stripe.settings');
     $apikeySecret = $config->get('apikey.' . $config->get('environment') . '.secret');
     // Quick test of subscription creation
-    $stripe = new \Stripe\StripeClient($apikeySecret);
+    $stripe = new StripeClient($apikeySecret);
 
     // $customer = $stripe->customer->create([
     //   'customer' => 'cus_J4sMTZH5VcpNxu',
diff --git a/src/Controller/StripeWebhookController.php b/src/Controller/StripeWebhookController.php
index b4ec107..f250acd 100644
--- a/src/Controller/StripeWebhookController.php
+++ b/src/Controller/StripeWebhookController.php
@@ -93,7 +93,7 @@ class StripeWebhookController extends ControllerBase {
 
     // Dispatch the webhook event.
     $this->eventDispatcher
-      ->dispatch(StripeEvents::WEBHOOK, new StripeWebhookEvent($event));
+      ->dispatch(new StripeWebhookEvent($event), StripeEvents::WEBHOOK);
 
     return new Response('OK', Response::HTTP_OK);
   }
diff --git a/src/Element/StripeBase.php b/src/Element/StripeBase.php
index af73ce7..e010be8 100644
--- a/src/Element/StripeBase.php
+++ b/src/Element/StripeBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\stripe\Element;
 
+use Stripe\StripeClient;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\InvokeCommand;
 use Drupal\Core\Render\Element\FormElement;
@@ -94,7 +95,7 @@ abstract class StripeBase extends FormElement {
       return $element;
     }
 
-    $stripe = new \Stripe\StripeClient($apikeySecret);
+    $stripe = new StripeClient($apikeySecret);
 
     $id = $element['#id'];
     $wrapper_id = 'stripe-' . implode('-', $element['#parents']) . '-wrapper';
@@ -296,7 +297,7 @@ abstract class StripeBase extends FormElement {
       $settings['total'] = $total;
 
       if ($payment_intent) {
-        $stripe = new \Stripe\StripeClient($apikeySecret);
+        $stripe = new StripeClient($apikeySecret);
         $stripe->paymentIntents->update(
           $payment_intent,
           ['amount' => $total['amount']]
diff --git a/src/Event/StripePaymentEvent.php b/src/Event/StripePaymentEvent.php
index b1a16ba..1ad928f 100644
--- a/src/Event/StripePaymentEvent.php
+++ b/src/Event/StripePaymentEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\stripe\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Form\FormStateInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Wraps a stripe event for webhook.
diff --git a/src/Event/StripeWebhookEvent.php b/src/Event/StripeWebhookEvent.php
index d1d60d3..af87105 100644
--- a/src/Event/StripeWebhookEvent.php
+++ b/src/Event/StripeWebhookEvent.php
@@ -3,12 +3,11 @@
 namespace Drupal\stripe\Event;
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Wraps a stripe event for webhook.
  */
-class StripeWebhookEvent extends Event {
+class StripeWebhookEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Stripe API event object.
