diff --git a/src/EventSubscriber/MaintenanceModeSubscriber.php b/src/EventSubscriber/MaintenanceModeSubscriber.php
index 95bbc9e..fd16999 100644
--- a/src/EventSubscriber/MaintenanceModeSubscriber.php
+++ b/src/EventSubscriber/MaintenanceModeSubscriber.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\nagios\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\nagios\Controller\StatuspageController;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 class MaintenanceModeSubscriber implements EventSubscriberInterface {
@@ -12,10 +12,10 @@ class MaintenanceModeSubscriber implements EventSubscriberInterface {
   /**
    * Make the status page available when Drupal is in maintenance mode.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function onKernelRequestMaintenance(GetResponseEvent $event) {
+  public function onKernelRequestMaintenance(RequestEvent $event) {
     $config = \Drupal::config('nagios.settings');
     $request = $event->getRequest();
     $nagios_path = '/' . $config->get('nagios.statuspage.path');
diff --git a/tests/src/Kernel/MaintenanceModeTest.php b/tests/src/Kernel/MaintenanceModeTest.php
index deff44a..5060137 100644
--- a/tests/src/Kernel/MaintenanceModeTest.php
+++ b/tests/src/Kernel/MaintenanceModeTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\nagios\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Form\FormState;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 use Drupal\nagios\Controller\StatuspageController;
@@ -9,7 +11,6 @@ use Drupal\nagios\EventSubscriber\MaintenanceModeSubscriber;
 use Drupal\system\Form\SiteMaintenanceModeForm;
 use Prophecy\Argument;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 
 /**
  * Tests the functionality to monitor cron.
@@ -18,6 +19,7 @@ use Symfony\Component\HttpKernel\Event\GetResponseEvent;
  */
 class MaintenanceModeTest extends EntityKernelTestBase {
 
+  use ProphecyTrait;
   /**
    * Modules to install.
    *
@@ -36,7 +38,7 @@ class MaintenanceModeTest extends EntityKernelTestBase {
 
   public function testSubscriber() {
     $subscriber = new MaintenanceModeSubscriber();
-    $get_response_event = $this->prophesize(GetResponseEvent::class);
+    $get_response_event = $this->prophesize(RequestEvent::class);
     $request = $this->prophesize(Request::class);
 
     /** @noinspection PhpUndefinedMethodInspection */
