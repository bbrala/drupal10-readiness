modules/contrib/yunke_help/src/Form/ClassPath.php
modules/contrib/yunke_help/src/Plugin/EntityReferenceSelection/NodeAnyFieldSelection.php
modules/contrib/yunke_help/src/Controller/CacheClean.php
modules/contrib/yunke_help/src/Controller/ClassFullPath.php
modules/contrib/yunke_help/src/Controller/DataDumper.php
modules/contrib/yunke_help/src/Form/EntityDedicatedTableSchema.php
modules/contrib/yunke_help/src/PluginForm.php
modules/contrib/yunke_help/toolFunLib.php
modules/contrib/yunke_help/src/Controller/DataPrint.php
modules/contrib/yunke_help/src/Form/EntitySchema.php
modules/contrib/yunke_help/yunke_help.module
modules/contrib/yunke_help/src/Form/ExtraFields.php
modules/contrib/yunke_help/src/Form/FieldConfig.php
modules/contrib/yunke_help/src/Form/FieldDefinitions.php
modules/contrib/yunke_help/src/Form/FieldStorageDefinitions.php
modules/contrib/yunke_help/src/Controller/Entity.php
modules/contrib/yunke_help/src/Controller/Main.php
modules/contrib/yunke_help/src/Form/Hook.php
modules/contrib/yunke_help/src/Controller/Op.php
modules/contrib/yunke_help/src/Form/LanguageConfigOverride.php
modules/contrib/yunke_help/src/Form/MenuTree.php
modules/contrib/yunke_help/src/Controller/PhpInfo.php
modules/contrib/yunke_help/src/Controller/Plugin.php
modules/contrib/yunke_help/src/Form/MultiStepForm.php
modules/contrib/yunke_help/src/Controller/RestPassword.php
modules/contrib/yunke_help/src/Controller/Test.php
modules/contrib/yunke_help/src/Form/PluginManager.php
modules/contrib/yunke_help/src/Controller/TwigCacheClean.php
modules/contrib/yunke_help/src/Controller/Yaml.php
modules/contrib/yunke_help/src/EventSubscriber/toolFunRegistryRequestSubscriber.php
modules/contrib/yunke_help/src/Form/BaseFieldDefinitions.php
modules/contrib/yunke_help/src/Form/RouteByName.php
modules/contrib/yunke_help/src/Form/RouteByPath.php
modules/contrib/yunke_help/src/Form/BundleFieldDefinitions.php
modules/contrib/yunke_help/src/Form/Test.php
modules/contrib/yunke_help/src/Form/TestForm.php
modules/contrib/yunke_help/src/Form/ViewConfig.php
modules/contrib/yunke_help/src/Form/YunkeForm.php
modules/contrib/yunke_help/src/Form/restPassword.php
modules/contrib/yunke_help/src/Plugin/Block/YunkeHelpCustomBlock.php

13 files with changes
=====================

1) modules/contrib/yunke_help/yunke_help.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Url;
 /**
  * Implements hook_help().
  */
@@ @@
         'tab'       => [
             '#type'       => 'link',
             '#title'      => "yunke help",
-            '#url'        => \Drupal\Core\Url::fromRoute('yunke_help.index'),
+            '#url'        => Url::fromRoute('yunke_help.index'),
             '#attributes' => [
                 'title'  => "云客辅助模块",
                 'class'  => ['toolbar-icon', 'toolbar-icon-yunke-help'],
@@ @@
     $links = [
         'index'     => [
             'title' => "模块首页",//因为以下将采用links主题钩子，所以不是以属性方式传递
-            'url'   => \Drupal\Core\Url::fromRoute('yunke_help.index'),
+            'url'   => Url::fromRoute('yunke_help.index'),
         ],
         'info'      => [
             'title' => "基本信息",
-            'url'   => \Drupal\Core\Url::fromRoute('<front>'),
+            'url'   => Url::fromRoute('<front>'),
         ],
         'resources' => [
             'title' => "资源链接",
-            'url'   => \Drupal\Core\Url::fromRoute('<front>'),
+            'url'   => Url::fromRoute('<front>'),
         ],
     ];
     $items['yunke_help']['tray']['group1'] = [
@@ @@
     $items['yunke_help']['tray']['group2'] = [ //可以根据需要给菜单分组
         '#type'  => 'link',
         '#title' => '编辑',
-        '#url'   => \Drupal\Core\Url::fromRoute('<front>'),
+        '#url'   => Url::fromRoute('<front>'),
     ];
     return $items;
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/yunke_help/src/PluginForm.php:56

    ---------- begin diff ----------
@@ @@
     public function submitForm(array & $form, FormStateInterface $form_state)
     {
         $value = "子表单值：" . $form_state->getValue(['a', 'b', 'c1']);
-        drupal_set_message($value);
+        \Drupal::messenger()->addStatus($value);
     }
 
 }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * WrapReturnRector


3) modules/contrib/yunke_help/src/EventSubscriber/toolFunRegistryRequestSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\yunke_help\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpKernel\HttpKernelInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;

 /**
  * 加载云客帮助模块的工具函数库
@@ @@
   /**
    * 加载工具函数库.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The request event.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(RequestEvent $event) {
     if ($event->getRequestType() === HttpKernelInterface::MASTER_REQUEST) {
         $this->moduleHandler->loadInclude('yunke_help', 'php', 'toolFunLib');
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector


4) modules/contrib/yunke_help/src/Controller/Test.php:7

    ---------- begin diff ----------
@@ @@

 namespace Drupal\yunke_help\Controller;

+use Drupal\Core\Url;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\EventSubscriber\RenderArrayNonHtmlSubscriber;
 use Symfony\Component\HttpFoundation\Request;
@@ @@
     $route_name = '<current>';
     $route_parameters = [];
     $options = [];
-    $url = \Drupal\Core\Url::fromRoute($route_name, $route_parameters, $options);
+    $url = Url::fromRoute($route_name, $route_parameters, $options);
     $variables['#test_3'] = $url;

     return $variables;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/yunke_help/src/Controller/Plugin.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\yunke_help\Controller;

+use Drupal\Component\Plugin\Discovery\CachedDiscoveryInterface;
+use Drupal\Component\Plugin\Discovery\DiscoveryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\HttpFoundation\Request;

@@ @@
             echo "错误:不存在该插件管理器";
             return;
         }
-        if ($pluginManager instanceof \Drupal\Component\Plugin\Discovery\CachedDiscoveryInterface) {
+        if ($pluginManager instanceof CachedDiscoveryInterface) {
             $pluginManager->clearCachedDefinitions();
             echo "插件管理器：" . $pluginManagerId . "的插件定义缓存已被清理";
         } else {
@@ @@
             echo "错误:不存在该插件管理器";
             return;
         }
-        if (!($pluginManager instanceof \Drupal\Component\Plugin\Discovery\DiscoveryInterface)) {
+        if (!($pluginManager instanceof DiscoveryInterface)) {
             echo "错误:该服务不是插件管理器";
             return;
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/yunke_help/src/Controller/Op.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\yunke_help\Controller;

-
+use Drupal\Component\Utility\Crypt;
 /**
  * Class Op
  *
@@ @@
   public function cron_key()
   {
     $key = \Drupal::state()->get('system.cron_key');
-    $cron_key = \Drupal\Component\Utility\Crypt::randomBytesBase64(55);
+    $cron_key = Crypt::randomBytesBase64(55);
     \Drupal::state()->set('system.cron_key', $cron_key);
     echo "<pre>";
     echo "Drupal版本号：" . \Drupal::VERSION . " 操作者:yunke_help模块\n";
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


7) modules/contrib/yunke_help/src/Controller/DataPrint.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\yunke_help\Controller;

-
+use Drupal\Core\Language\LanguageManager;
 /**
  * Class DataPrint
  *
@@ @@
    */
   public function languageList()
   {
-    $languageList = \Drupal\Core\Language\LanguageManager::getStandardLanguageList();
+    $languageList = LanguageManager::getStandardLanguageList();
     $this->showData('标准语言代码列表', $languageList, true);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


8) modules/contrib/yunke_help/src/Form/TestForm.php:84

    ---------- begin diff ----------
@@ @@
         $this->plugin->submitForm($form['subform'], $subformState);
 
         //提交父表单
-        drupal_set_message($this->t('父表单：电话为： @number', array('@number' => $form_state->getValue('phone_number'))));
+        $this->messenger()->addStatus($this->t('父表单：电话为： @number', array('@number' => $form_state->getValue('phone_number'))));
     }
 }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/yunke_help/src/Form/PluginManager.php:0

    ---------- begin diff ----------
@@ @@
 #Warning: Strings contain different line endings!
 <?php
 
 /**
@@ @@
 
 namespace Drupal\yunke_help\Form;
 
+use Drupal\Component\Plugin\Discovery\CachedDiscoveryInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
             echo "错误";
             return;
         }
-        if ($pluginManager instanceof \Drupal\Component\Plugin\Discovery\CachedDiscoveryInterface) {
+        if ($pluginManager instanceof CachedDiscoveryInterface) {
             $pluginManager->clearCachedDefinitions();
             echo "插件管理器：" . $pluginManagerId . "的插件定义缓存已被清理";
         } else {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/yunke_help/src/Form/MultiStepForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\yunke_help\Form;

+use Drupal\Component\Utility\NestedArray;
+use Symfony\Component\HttpKernel\HttpKernelInterface;
+use Symfony\Component\HttpKernel\Event\ViewEvent;
+use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
       $form_state->setRebuild(); //这是多步表单的关键
       $this->data[] = $form_state->getValue($form['num']['#parents']);
       //当再次呈现表单时会默认填入上一步的输入，如果需要改变用户的输入，可使用以下语句：
-      \Drupal\Component\Utility\NestedArray::setValue($form_state->getUserInput(), $form['num']['#parents'], null);
+      NestedArray::setValue($form_state->getUserInput(), $form['num']['#parents'], null);
       //试图通过以下方式是无效的，因为后续流程会重置他们
       //$form_state->setValue($form['text']['#parents'], $input);
       //$form['text']['#value'] = $input;
@@ @@
     //由于提交处理器不能直接返回渲染数组，下面将其转化为响应对象
     $kernel = \Drupal::service('http_kernel.basic');
     $request = \Drupal::request();
-    $type = \Symfony\Component\HttpKernel\HttpKernelInterface::MASTER_REQUEST;
-    $event = new \Symfony\Component\HttpKernel\Event\GetResponseForControllerResultEvent($kernel, $request, $type, $return);
-    \Drupal::service('event_dispatcher')->dispatch(\Symfony\Component\HttpKernel\KernelEvents::VIEW, $event);
+    $type = HttpKernelInterface::MASTER_REQUEST;
+    $event = new ViewEvent($kernel, $request, $type, $return);
+    \Drupal::service('event_dispatcher')->dispatch(KernelEvents::VIEW, $event);
     $response = $event->getResponse();
     $form_state->setResponse($response);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/yunke_help/src/Form/MenuTree.php:0

    ---------- begin diff ----------
@@ @@
 #Warning: Strings contain different line endings!
 <?php
 
 /**
@@ @@
 
 namespace Drupal\yunke_help\Form;
 
+use Drupal\Core\Menu\MenuTreeParameters;
+use Drupal\menu_link_content\Plugin\Menu\MenuLinkContent;
+use Drupal\Core\Menu\MenuLinkDefault;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 
@@ @@
     {
         $menuName = $form_state->getValue('menuName');
         $menu_tree = \Drupal::service("menu.link_tree");
-        $parameters = new \Drupal\Core\Menu\MenuTreeParameters();
+        $parameters = new MenuTreeParameters();
         $parameters->setMinDepth(1)->setMaxDepth(9);
         $tree = $menu_tree->load($menuName, $parameters);
         $tree = $this->printMenuTree($tree);
@@ @@
             $menuTree[$key]['title'] = (string)$link->getTitle();
             $menuTree[$key]['provider'] = $link->getProvider();
             $menuTree[$key]['routeName'] = $link->getRouteName();
-            if ($link instanceof \Drupal\menu_link_content\Plugin\Menu\MenuLinkContent) {
+            if ($link instanceof MenuLinkContent) {
                 $menuTree[$key]['type'] = '通过后台菜单管理界面动态定义的菜单';
-            } elseif ($link instanceof \Drupal\Core\Menu\MenuLinkDefault) {
+            } elseif ($link instanceof MenuLinkDefault) {
                 $menuTree[$key]['type'] = "通过yml文件静态定义的菜单";
             } else {
             }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/yunke_help/src/Form/EntitySchema.php:0

    ---------- begin diff ----------
@@ @@
 #Warning: Strings contain different line endings!
 <?php
 
 /**
@@ @@
 
 namespace Drupal\yunke_help\Form;
 
+use Drupal\Core\Entity\Sql\SqlEntityStorageInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ @@
         }
         foreach (array_keys($entityTypeOptions) as $id){
             $storage=\Drupal::entityTypeManager()->getStorage($id);
-            if(!($storage instanceof \Drupal\Core\Entity\Sql\SqlEntityStorageInterface)){
+            if(!($storage instanceof SqlEntityStorageInterface)){
                 unset($entityTypeOptions[$id]);
             }
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


13) modules/contrib/yunke_help/src/Form/EntityDedicatedTableSchema.php:0

    ---------- begin diff ----------
@@ @@
 #Warning: Strings contain different line endings!
 <?php
 
 /**
@@ @@
 
 namespace Drupal\yunke_help\Form;
 
+use Drupal\Core\Entity\Sql\SqlEntityStorageInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ @@
         }
         foreach (array_keys($entityTypeOptions) as $id){
             $storage=\Drupal::entityTypeManager()->getStorage($id);
-            if(!($storage instanceof \Drupal\Core\Entity\Sql\SqlEntityStorageInterface)){
+            if(!($storage instanceof SqlEntityStorageInterface)){
                 unset($entityTypeOptions[$id]);
             }
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 13 files have been changed by Rector                                      

