modules/contrib/freelinking/freelinking.api.php
modules/contrib/freelinking/src/Plugin/FreelinkingPluginInterface.php
modules/contrib/freelinking/tests/src/Unit/FreelinkingManagerTest.php
modules/contrib/freelinking/freelinking.install
modules/contrib/freelinking/freelinking.module
modules/contrib/freelinking/src/Plugin/freelinking/Builtin.php
modules/contrib/freelinking/freelinking.theme.inc
modules/contrib/freelinking/modules/freelinking_prepopulate/freelinking_prepopulate.api.php
modules/contrib/freelinking/modules/freelinking_prepopulate/freelinking_prepopulate.module
modules/contrib/freelinking/modules/freelinking_prepopulate/src/Plugin/freelinking/FreelinkingPrepopulate.php
modules/contrib/freelinking/src/Plugin/freelinking/DrupalOrg.php
modules/contrib/freelinking/tests/src/Unit/Plugin/Filter/FreelinkingTest.php
modules/contrib/freelinking/src/Plugin/freelinking/External.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/BuiltinTest.php
modules/contrib/freelinking/src/Plugin/freelinking/File.php
modules/contrib/freelinking/modules/freelinking_prepopulate/tests/src/Functional/FreelinkingPrepopulateTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/DrupalOrgTest.php
modules/contrib/freelinking/src/Plugin/freelinking/GoogleSearch.php
modules/contrib/freelinking/src/Plugin/freelinking/Node.php
modules/contrib/freelinking/src/Plugin/freelinking/NodeTitle.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/ExternalTest.php
modules/contrib/freelinking/modules/freelinking_prepopulate/tests/src/Unit/Plugin/freelinking/FreelinkingPrepopulateTest.php
modules/contrib/freelinking/src/Plugin/freelinking/PathAlias.php
modules/contrib/freelinking/src/Plugin/freelinking/Search.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/FileTest.php
modules/contrib/freelinking/src/Annotation/Freelinking.php
modules/contrib/freelinking/src/FreelinkingManager.php
modules/contrib/freelinking/src/Plugin/freelinking/User.php
modules/contrib/freelinking/src/Plugin/freelinking/Wiki.php
modules/contrib/freelinking/tests/src/Functional/FreelinkingBrowserTestBase.php
modules/contrib/freelinking/src/FreelinkingManagerInterface.php
modules/contrib/freelinking/src/Plugin/Filter/Freelinking.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/GoogleSearchTest.php
modules/contrib/freelinking/tests/src/Functional/FreelinkingFilterTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/NodeTest.php
modules/contrib/freelinking/src/Plugin/FreelinkingPluginBase.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/NodeTestBase.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/NodeTitleFailoverTest.php
modules/contrib/freelinking/tests/src/Functional/FreelinkingMultilingualTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/NodeTitleTest.php
modules/contrib/freelinking/tests/src/Functional/FreelinkingPrefixAffixTest.php
modules/contrib/freelinking/tests/src/Functional/NodeTitleBuiltinFailoverTest.php
modules/contrib/freelinking/tests/src/Kernel/AdvancedHelpHintTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/PathAliasSearchTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/PathAliasTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/SearchFailoverTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/SearchTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/UserTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/UserUnauthorizedTest.php
modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/WikiTest.php

25 files with changes
=====================

1) modules/contrib/freelinking/modules/freelinking_prepopulate/tests/src/Unit/Plugin/freelinking/FreelinkingPrepopulateTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking_prepopulate\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\freelinking_prepopulate\Plugin\freelinking\FreelinkingPrepopulate;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class FreelinkingPrepopulateTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mocks returning content types.
     $nodeTypeProphet = $this->prophesize('\Drupal\Core\Entity\EntityInterface');
     $nodeTypeProphet->id()->willReturn('page');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/freelinking/modules/freelinking_prepopulate/tests/src/Functional/FreelinkingPrepopulateTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Creates a content type to act as default prepopulate content type.
@@ @@
         <li>With fields: [[create:Sam|Sam|Add Sam|body="A page about Sam."|field_basic="test"|field_tags="tag1,tag2,tag3"]]</li>
       </ul>
 EOF;
-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->drupalGet('node/add/page');
+    $this->submitForm($edit, t('Save'));

     // This is the most ridiculous developer-unfriendly way to test hrefs ever.
     // DrupalWTF. MinkWTF.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/freelinking/tests/src/Kernel/AdvancedHelpHintTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Kernel;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Extension\ExtensionDiscovery;
 use Drupal\KernelTests\KernelTestBase;

@@ @@
  */
 class AdvancedHelpHintTest extends KernelTestBase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/freelinking/tests/src/Functional/NodeTitleBuiltinFailoverTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $edit = [
       'filters[freelinking][status]' => 1,
@@ @@
     $edit = [];
     $edit['title[0][value]'] = t('Testing all freelinking plugins');
     $edit['body[0][value]'] = $this->getNodeBodyValue();
+    $this->drupalGet('node/add/page');

-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()
       ->pageTextContains(t('Basic page @title has been created.', ['@title' => $edit['title[0][value]']]));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/freelinking/tests/src/Functional/FreelinkingPrefixAffixTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Make sure that freelinking filter is activated.
@@ @@
     $edit = [];
     $edit['title[0][value]'] = $this->getRandomGenerator()->sentences(2);
     $edit['body[0][value]'] = $this->getNodeBodyValue();
+    $this->drupalGet('node/add/page');

-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()
       ->pageTextContains(t('Basic page @title has been created.', ['@title' => $edit['title[0][value]']]));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/freelinking/tests/src/Functional/FreelinkingMultilingualTest.php:34

    ---------- begin diff ----------
@@ @@
    * @throws \Drupal\Core\Entity\EntityStorageException
    * @throws \Behat\Mink\Exception\ExpectationException
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->updateFilterSettings();
@@ @@
       'language_interface[enabled][language-url]' => '1',
       'language_interface[enabled][language-user]' => '1',
     ];
-    $this->drupalPostForm('admin/config/regional/language/detection', $edit, t('Save settings'));
+    $this->drupalGet('admin/config/regional/language/detection');
+    $this->submitForm($edit, t('Save settings'));

     // Enable multilingual support for "Basic page" content type.
     $edit = ['language_configuration[language_alterable]' => TRUE];
     $edit = ['language_configuration[content_translation]' => TRUE];
-    $this->drupalPostForm('admin/structure/types/manage/page', $edit, t('Save content type'));
+    $this->drupalGet('admin/structure/types/manage/page');
+    $this->submitForm($edit, t('Save content type'));
     $this->assertSession()
       ->pageTextContains('The content type Basic page has been updated.');

@@ @@
       'title[0][value]' => 'Primera pÃ¡gina',
       'body[0][value]' => 'Contenido traducido.',
     ];
-    $this->drupalPostForm('node/1/translations/add/en/es', $edit, t('Save'));
+    $this->drupalGet('node/1/translations/add/en/es');
+    $this->submitForm($edit, t('Save'));
   }

   /**
@@ @@
         <li>Nid: [[nid:1]]</li>
       </ul>
 EOF;
-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->drupalGet('node/add/page');
+    $this->submitForm($edit, t('Save'));

     $this->assertSession()
       ->linkExists('First page', 0, 'Generate default plugin (nodetitle) freelink.');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/freelinking/tests/src/Functional/FreelinkingFilterTest.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     /** @var \Drupal\Core\File\FileSystemInterface $filesystem */
@@ @@
     $edit = [];
     $edit['title[0][value]'] = t('Testing all freelinking plugins');
     $edit['body[0][value]'] = $this->getNodeBodyValue();
+    $this->drupalGet('node/add/page');

-    $this->drupalPostForm('node/add/page', $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()
       ->pageTextContains(t('Basic page @title has been created.', ['@title' => $edit['title[0][value]']]));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/freelinking/tests/src/Functional/FreelinkingBrowserTestBase.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a content type.
@@ @@
         'filters[filter_htmlcorrector][weight]' => 4,
       ];
     }
+    $this->drupalGet('/admin/config/content/formats/manage/' . $name);

-    $this->drupalPostForm('/admin/config/content/formats/manage/' . $name, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()
       ->pageTextContains(t('The text format @label has been updated.', ['@label' => $label]));
     $this->drupalGet('admin/config/content/formats/manage/' . $name);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/WikiTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Language\Language;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
@@ @@
  */
 class WikiTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The translation interface.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock the translation interface.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a wiki page.');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/UserUnauthorizedTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\freelinking\Plugin\freelinking\User;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class UserUnauthorizedTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The translation interface.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation interface.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Unauthorized to view user profile.');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/UserTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
 use Drupal\freelinking\Plugin\freelinking\User;
@@ @@
  */
 class UserTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The translation interface.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation interface.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view user profile.');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/SearchTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ @@
  */
 class SearchTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Search plugin.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock the string translation.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/SearchFailoverTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ @@
  */
 class SearchFailoverTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The container.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock the string translation.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/PathAliasTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ @@
  */
 class PathAliasTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The container.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a local node.');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/PathAliasSearchTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ @@
  */
 class PathAliasSearchTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The container.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a local node.');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/NodeTitleTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Url;
 use Drupal\freelinking\Plugin\freelinking\NodeTitle;
@@ @@
  */
 class NodeTitleTest extends NodeTestBase {

+  use ProphecyTrait;
   /**
    * Freelinking plugin.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {

     // Mock the translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
@@ @@
     $entityManagerProphet = $this->prophesize('\Drupal\Core\Entity\EntityTypeManagerInterface');

     // Mock Entity Query via Mock Builder to support chaining.
-    $entityQuery = $this->getMockBuilder('\Drupal\Core\Entity\Query\QueryInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityQuery = $this->createMock('\Drupal\Core\Entity\Query\QueryInterface');
     $entityQuery->expects($this->any())->method('condition')->willReturnSelf();
     $entityQuery->expects($this->any())->method('accessCheck')->willReturnSelf();
     $entityQuery->expects($this->any())->method('execute')->willReturn([1 => 1, 2 => 2]);
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/NodeTitleFailoverTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\freelinking\Plugin\freelinking\NodeTitle;
@@ @@
  */
 class NodeTitleFailoverTest extends NodeTestBase {

+  use ProphecyTrait;
   /**
    * Mock container.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {

     // Mock the translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
@@ @@
     $entityManagerProphet = $this->prophesize('\Drupal\Core\Entity\EntityTypeManagerInterface');

     // Mock Entity Query via Mock Builder to support chaining.
-    $entityQuery = $this->getMockBuilder('\Drupal\Core\Entity\Query\QueryInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityQuery = $this->createMock('\Drupal\Core\Entity\Query\QueryInterface');
     $entityQuery->expects($this->any())->method('condition')->willReturnSelf();
     $entityQuery->expects($this->any())
       ->method('accessCheck')
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * GetMockBuilderGetMockToCreateMockRector (https://github.com/lmc-eu/steward/pull/187/files#diff-c7e8c65e59b8b4ff8b54325814d4ba55L80)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/NodeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
 use Drupal\freelinking\Plugin\freelinking\Node;
@@ @@
  */
 class NodeTest extends NodeTestBase {

+  use ProphecyTrait;
   /**
    * The translation interface.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation interface.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a local node.');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/GoogleSearchTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ @@
  */
 class GoogleSearchTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Search plugin.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock the string translation.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/FileTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ @@
  */
 class FileTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Translation interface mock.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view a local file.');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/ExternalTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ @@
  */
 class ExternalTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The container.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to visit an external URL.');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/DrupalOrgTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
@@ @@
  */
 class DrupalOrgTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The container.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Click to view on drupal.org.');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/freelinking/tests/src/Unit/Plugin/freelinking/BuiltinTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\freelinking;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\freelinking\Plugin\freelinking\Builtin;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class BuiltinTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Translation Interface mock.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet->translateString(Argument::any())->willReturn('Redact, show text only, or display the indicator');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/freelinking/tests/src/Unit/Plugin/Filter/FreelinkingTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit\Plugin\Filter;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\filter\Plugin\FilterInterface;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
@@ @@
  */
 class FreelinkingTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Freelinking filter plugin.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Mock string translation service.
     $tProphet = $this->prophesize('\Drupal\Core\StringTranslation\TranslationInterface');
     $tProphet
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/freelinking/tests/src/Unit/FreelinkingManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\freelinking\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Cache\NullBackend;
 use Drupal\freelinking\FreelinkingManager;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class FreelinkingManagerTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Freelinking Manager object to run tests on.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Use a null cache backend to prevent caching.
     $cacheBackend = new NullBackend('freelinking');
    ----------- end diff -----------

Applied rules:
 * AddProphecyTraitRector (https://github.com/sebastianbergmann/phpunit/issues/4142)
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 25 files have been changed by Rector                                      

