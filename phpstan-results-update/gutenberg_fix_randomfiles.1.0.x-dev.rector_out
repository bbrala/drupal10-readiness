modules/contrib/gutenberg_fix_randomfiles/gutenberg_fix_randomfiles.install
modules/contrib/gutenberg_fix_randomfiles/gutenberg_fix_randomfiles.module
modules/contrib/gutenberg_fix_randomfiles/src/Commands/GutenbergFixRandomFilesCommands.php

2 files with changes
====================

1) modules/contrib/gutenberg_fix_randomfiles/src/Commands/GutenbergFixRandomFilesCommands.php:184

    ---------- begin diff ----------
@@ @@
     $affected = \Drupal::state()->get(static::STATE_KEY, []);
     $result = array_map(static function ($entry) {
       return $entry + [
-        'src_path' => file_url_transform_relative(file_create_url($entry['src'])),
-        'dest_path' => file_url_transform_relative(file_create_url($entry['dest'])),
+        'src_path' => \Drupal::service('file_url_generator')->generateString($entry['src']),
+        'dest_path' => \Drupal::service('file_url_generator')->generateString($entry['dest']),
       ];
     }, $affected);

@@ @@
    * @throws \Drupal\Core\Entity\EntityStorageException
    */
   protected function updateAffectedNodes($src, Connection $database, $destination, $fid) {
-    $source_url = file_url_transform_relative(file_create_url($src));
+    $source_url = \Drupal::service('file_url_generator')->generateString($src);
     // Attempt to pick up files which were created without reference to
     // the uuid. e.g. core/file.
     // https://www.drupal.org/project/gutenberg/issues/3106598
@@ @@
     if ($node_ids) {
       /** @var \Drupal\node\NodeInterface[] $nodes */
       $nodes = Node::loadMultiple($node_ids);
-      $dest = file_url_transform_relative(file_create_url($destination));
+      $dest = \Drupal::service('file_url_generator')->generateString($destination);
       foreach ($nodes as $node) {
         $this->logger()->info(
           dt(
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/gutenberg_fix_randomfiles/gutenberg_fix_randomfiles.install:22

    ---------- begin diff ----------
@@ @@
       // its own. Load it manually.
       try {
         if (!class_exists(FileUpdateService::class)) {
-          $module_path = drupal_get_path('module', 'file_update');
+          $module_path = \Drupal::service('extension.list.module')->getPath('file_update');
           require_once $module_path . '/src/FileUpdateService.php';
           require_once $module_path . '/src/Plugin/FileUpdate/FileUpdateBase.php';
           require_once $module_path . '/src/Plugin/FileUpdate/FileUpdateInterface.php';
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

