diff --git a/ldap_authentication/src/Routing/EmailTemplateService.php b/ldap_authentication/src/Routing/EmailTemplateService.php
index d9195873..f71acf18 100644
--- a/ldap_authentication/src/Routing/EmailTemplateService.php
+++ b/ldap_authentication/src/Routing/EmailTemplateService.php
@@ -4,12 +4,12 @@ declare(strict_types = 1);
 
 namespace Drupal\ldap_authentication\Routing;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Url;
 use Drupal\user\Entity\User;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -36,10 +36,10 @@ class EmailTemplateService implements EventSubscriberInterface {
   /**
    * Check for template if enabled.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   Response event.
    */
-  public function checkTemplate(GetResponseEvent $event): void {
+  public function checkTemplate(RequestEvent $event): void {
     if ($this->config->get('emailTemplateUsagePromptUser') === TRUE) {
       $this->checkForEmailTemplate();
     }
diff --git a/ldap_authorization/tests/src/Unit/LdapAuthorizationProviderTest.php b/ldap_authorization/tests/src/Unit/LdapAuthorizationProviderTest.php
index 185cbbf0..130851ff 100644
--- a/ldap_authorization/tests/src/Unit/LdapAuthorizationProviderTest.php
+++ b/ldap_authorization/tests/src/Unit/LdapAuthorizationProviderTest.php
@@ -27,10 +27,7 @@ class LdapAuthorizationProviderTest extends UnitTestCase {
    * {@inheritdoc}
    */
   public function setUp(): void {
-    $this->providerPlugin = $this->getMockBuilder(LDAPAuthorizationProvider::class)
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->providerPlugin = $this->createMock(LDAPAuthorizationProvider::class);
   }
 
   /**
diff --git a/ldap_query/tests/src/Unit/ViewsSortTest.php b/ldap_query/tests/src/Unit/ViewsSortTest.php
index dd42a760..f83a3765 100644
--- a/ldap_query/tests/src/Unit/ViewsSortTest.php
+++ b/ldap_query/tests/src/Unit/ViewsSortTest.php
@@ -26,10 +26,7 @@ class ViewsSortTest extends UnitTestCase {
    */
   protected function setUp(): void {
     parent::setUp();
-    $this->view = $this->getMockBuilder(LdapQuery::class)
-      ->disableOriginalConstructor()
-      ->setMethodsExcept(['addOrderBy', 'sortResults'])
-      ->getMock();
+    $this->view = $this->createMock(LdapQuery::class);
   }
 
   /**
diff --git a/ldap_servers/tests/src/Unit/TokenTest.php b/ldap_servers/tests/src/Unit/TokenTest.php
index c91ba776..bed6d4f8 100644
--- a/ldap_servers/tests/src/Unit/TokenTest.php
+++ b/ldap_servers/tests/src/Unit/TokenTest.php
@@ -42,10 +42,7 @@ class TokenTest extends UnitTestCase {
       'house' => ['Gryffindor', 'Privet Drive'],
       'guid' => ['sdafsdfsdf'],
     ]);
-    $this->processor = $this->getMockBuilder(TokenProcessor::class)
-      ->setMethods(NULL)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->processor = $this->createMock(TokenProcessor::class);
   }
 
   /**
diff --git a/ldap_user/ldap_user.module b/ldap_user/ldap_user.module
index c7bac801..fe0936b9 100644
--- a/ldap_user/ldap_user.module
+++ b/ldap_user/ldap_user.module
@@ -107,7 +107,7 @@ function ldap_user_user_insert($account) {
     $dispatcher->dispatch($event, LdapNewUserCreatedEvent::EVENT_NAME);
   }
   else {
-    $dispatcher->dispatch(LdapNewUserCreatedEvent::EVENT_NAME, $event);
+    $dispatcher->dispatch($event, LdapNewUserCreatedEvent::EVENT_NAME);
   }
 }
 
@@ -138,7 +138,7 @@ function ldap_user_user_update($account) {
     $dispatcher->dispatch($event, LdapUserUpdatedEvent::EVENT_NAME);
   }
   else {
-    $dispatcher->dispatch(LdapUserUpdatedEvent::EVENT_NAME, $event);
+    $dispatcher->dispatch($event, LdapUserUpdatedEvent::EVENT_NAME);
   }
 }
 
@@ -153,7 +153,7 @@ function ldap_user_user_delete($account) {
     $dispatcher->dispatch($event, LdapUserDeletedEvent::EVENT_NAME);
   }
   else {
-    $dispatcher->dispatch(LdapUserDeletedEvent::EVENT_NAME, $event);
+    $dispatcher->dispatch($event, LdapUserDeletedEvent::EVENT_NAME);
   }
 }
 
@@ -287,7 +287,7 @@ function ldap_user_form_user_register_form_alter(&$form, $form_state) {
       $form['account']['pass']['#value'] = \Drupal::service('password_generator')->generate(40);
     }
     else {
-      $form['account']['pass']['#value'] = user_password(40);
+      $form['account']['pass']['#value'] = \Drupal::service('password_generator')->generate(40);
     }
     $form['account']['pass_disabled']['#type'] = 'fieldset';
     $form['account']['pass_disabled']['#title'] = t('Password');
diff --git a/ldap_user/src/EventSubscriber/LdapEntryProvisionSubscriber.php b/ldap_user/src/EventSubscriber/LdapEntryProvisionSubscriber.php
index 3e52c214..43ea1136 100644
--- a/ldap_user/src/EventSubscriber/LdapEntryProvisionSubscriber.php
+++ b/ldap_user/src/EventSubscriber/LdapEntryProvisionSubscriber.php
@@ -388,7 +388,7 @@ class LdapEntryProvisionSubscriber implements EventSubscriberInterface, LdapUser
           $generated = \Drupal::service('password_generator')->generate();
         }
         else {
-          $generated = user_password();
+          $generated = \Drupal::service('password_generator')->generate();
         }
         $value = $pwd ?: $generated;
         break;
@@ -398,7 +398,7 @@ class LdapEntryProvisionSubscriber implements EventSubscriberInterface, LdapUser
           $value = \Drupal::service('password_generator')->generate();
         }
         else {
-          $value = user_password();
+          $value = \Drupal::service('password_generator')->generate();
         }
         break;
 
diff --git a/ldap_user/src/Processor/DrupalUserProcessor.php b/ldap_user/src/Processor/DrupalUserProcessor.php
index f0766c65..605857e0 100644
--- a/ldap_user/src/Processor/DrupalUserProcessor.php
+++ b/ldap_user/src/Processor/DrupalUserProcessor.php
@@ -445,7 +445,7 @@ class DrupalUserProcessor implements LdapUserAttributesInterface {
       $this->eventDispatcher->dispatch($event, LdapUserLoginEvent::EVENT_NAME);
     }
     else {
-      $this->eventDispatcher->dispatch(LdapUserLoginEvent::EVENT_NAME, $event);
+      $this->eventDispatcher->dispatch($event, LdapUserLoginEvent::EVENT_NAME);
     }
   }
 
@@ -566,7 +566,7 @@ class DrupalUserProcessor implements LdapUserAttributesInterface {
       $this->fileSystem->mkdir($fullDirectoryPath, NULL, TRUE);
     }
 
-    $managed_file = file_save_data($ldapUserPicture, $fullDirectoryPath . '/' . $fileName . '.' . $extension);
+    $managed_file = \Drupal::service('file.repository')->writeData($ldapUserPicture, $fullDirectoryPath . '/' . $fileName . '.' . $extension);
 
     $validators = [
       'file_validate_is_image' => [],
@@ -697,7 +697,7 @@ class DrupalUserProcessor implements LdapUserAttributesInterface {
         $this->account->set('pass', \Drupal::service('password_generator')->generate(20));
       }
       else {
-        $this->account->set('pass', user_password(20));
+        $this->account->set('pass', \Drupal::service('password_generator')->generate(20));
       }
     }
     if (!$this->account->getInitialEmail()) {
diff --git a/ldap_user/tests/src/Kernel/DrupalUserProcessorTest.php b/ldap_user/tests/src/Kernel/DrupalUserProcessorTest.php
index 64fdbea7..85388c8f 100644
--- a/ldap_user/tests/src/Kernel/DrupalUserProcessorTest.php
+++ b/ldap_user/tests/src/Kernel/DrupalUserProcessorTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\ldap_user\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\file\Entity\File;
@@ -22,6 +23,7 @@ use Symfony\Component\Ldap\Entry;
  */
 class DrupalUserProcessorTest extends EntityKernelTestBase implements LdapUserAttributesInterface {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/ldap_user/tests/src/Kernel/LdapEntryProvisionTest.php b/ldap_user/tests/src/Kernel/LdapEntryProvisionTest.php
index 1366f08d..9500a431 100644
--- a/ldap_user/tests/src/Kernel/LdapEntryProvisionTest.php
+++ b/ldap_user/tests/src/Kernel/LdapEntryProvisionTest.php
@@ -133,9 +133,7 @@ class LdapEntryProvisionTest extends KernelTestBase {
   public function testLoginCreate(): void {
     /** @var \Drupal\ldap_servers_dummy\FakeLdap $ldap */
     $ldap = $this->container->get('ldap.bridge')->get();
-    $response = $this->getMockBuilder(EntryManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $response = $this->createMock(EntryManager::class);
     $response
       ->expects(self::once())
       ->method('add')
