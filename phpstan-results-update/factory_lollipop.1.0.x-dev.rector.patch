diff --git a/src/FactoryType/UserFactoryType.php b/src/FactoryType/UserFactoryType.php
index afeb3d0..6b7b982 100644
--- a/src/FactoryType/UserFactoryType.php
+++ b/src/FactoryType/UserFactoryType.php
@@ -70,7 +70,7 @@ class UserFactoryType implements FactoryTypeInterface {
     $mail = $attributes['mail'] ?? $name . '@example.com';
     $roles = $attributes['roles'] ?? [];
     $status = $attributes['status'] ?? 1;
-    $pass = $attributes['pass'] ?? user_password();
+    $pass = $attributes['pass'] ?? \Drupal::service('password_generator')->generate();
 
     // Prevent creation of already existing User.
     if ($uid) {
diff --git a/tests/modules/factory_lollipop_test/tests/src/Kernel/NodeFieldEntityReferenceFactoryTest.php b/tests/modules/factory_lollipop_test/tests/src/Kernel/NodeFieldEntityReferenceFactoryTest.php
index 42a12a7..89dd763 100644
--- a/tests/modules/factory_lollipop_test/tests/src/Kernel/NodeFieldEntityReferenceFactoryTest.php
+++ b/tests/modules/factory_lollipop_test/tests/src/Kernel/NodeFieldEntityReferenceFactoryTest.php
@@ -25,7 +25,7 @@ class NodeFieldEntityReferenceFactoryTest extends LollipopKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create an entity test.
diff --git a/tests/modules/factory_lollipop_test/tests/src/Kernel/TaxonomyTermFieldEntityReferenceFactoryTest.php b/tests/modules/factory_lollipop_test/tests/src/Kernel/TaxonomyTermFieldEntityReferenceFactoryTest.php
index ae29078..bb4ef2e 100644
--- a/tests/modules/factory_lollipop_test/tests/src/Kernel/TaxonomyTermFieldEntityReferenceFactoryTest.php
+++ b/tests/modules/factory_lollipop_test/tests/src/Kernel/TaxonomyTermFieldEntityReferenceFactoryTest.php
@@ -25,7 +25,7 @@ class TaxonomyTermFieldEntityReferenceFactoryTest extends LollipopKernelTestBase
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create an entity test.
diff --git a/tests/src/Functional/HelpTest.php b/tests/src/Functional/HelpTest.php
index 731b091..67929f7 100644
--- a/tests/src/Functional/HelpTest.php
+++ b/tests/src/Functional/HelpTest.php
@@ -38,7 +38,7 @@ class HelpTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create users.
diff --git a/tests/src/Functional/InstallUninstallTest.php b/tests/src/Functional/InstallUninstallTest.php
index f86609b..4f2a3fb 100644
--- a/tests/src/Functional/InstallUninstallTest.php
+++ b/tests/src/Functional/InstallUninstallTest.php
@@ -27,8 +27,9 @@ class InstallUninstallTest extends ModuleTestBase {
     // Attempt to install the factory_lollipop module.
     $edit = [];
     $edit['modules[factory_lollipop][enable]'] = 'factory_lollipop';
-    $this->drupalPostForm('admin/modules', $edit, 'Install');
-    $this->assertText('Module Factory Lollipop has been enabled.', 'Modules status has been updated.');
+    $this->drupalGet('admin/modules');
+    $this->submitForm($edit, 'Install');
+    $this->assertSession()->pageTextContains('Module Factory Lollipop has been enabled.');
 
     // Makes sure the module has been installed.
     $this->assertModules(['factory_lollipop'], TRUE);
@@ -43,9 +44,10 @@ class InstallUninstallTest extends ModuleTestBase {
 
     // Attempt to uninstall the factory_lollipop module.
     $edit['uninstall[factory_lollipop]'] = TRUE;
-    $this->drupalPostForm('admin/modules/uninstall', $edit, 'Uninstall');
-    $this->drupalPostForm(NULL, NULL, 'Uninstall');
-    $this->assertText('The selected modules have been uninstalled.', 'Modules status has been updated.');
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm($edit, 'Uninstall');
+    $this->submitForm(NULL, 'Uninstall');
+    $this->assertSession()->pageTextContains('The selected modules have been uninstalled.');
 
     // Makes sure the module has been uninstalled.
     $this->assertModules(['factory_lollipop'], FALSE);
diff --git a/tests/src/Kernel/FactoryType/FileFactoryTypeTest.php b/tests/src/Kernel/FactoryType/FileFactoryTypeTest.php
index ff74cbf..99e0f7d 100644
--- a/tests/src/Kernel/FactoryType/FileFactoryTypeTest.php
+++ b/tests/src/Kernel/FactoryType/FileFactoryTypeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\factory_lollipop\Kernel\FactoryType;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\File\FileSystemInterface;
@@ -15,6 +16,7 @@ use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
  */
 class FileFactoryTypeTest extends EntityKernelTestBase {
 
+  use ProphecyTrait;
   /**
    * The Node Factory resolver.
    *
@@ -70,7 +72,7 @@ class FileFactoryTypeTest extends EntityKernelTestBase {
       $this->expectExceptionMessageMatches('#^File ".+/core/tests/fixtures/foo" does not exist\.$#');
     }
     else {
-      $this->expectExceptionMessageRegExp('#^File ".+/core/tests/fixtures/foo" does not exist\.$#');
+      $this->expectExceptionMessageMatches('#^File ".+/core/tests/fixtures/foo" does not exist\.$#');
     }
     $this->fileFactoryTypeResolver->create((object) ['path' => $file_path]);
   }
diff --git a/tests/src/Kernel/FactoryType/MediaTypeFactoryTypeTest.php b/tests/src/Kernel/FactoryType/MediaTypeFactoryTypeTest.php
index 8c9133e..428e4ed 100644
--- a/tests/src/Kernel/FactoryType/MediaTypeFactoryTypeTest.php
+++ b/tests/src/Kernel/FactoryType/MediaTypeFactoryTypeTest.php
@@ -93,7 +93,7 @@ class MediaTypeFactoryTypeTest extends EntityKernelTestBase {
       $this->expectExceptionMessageMatches('#^The "foo" plugin does not exist\. Valid plugin IDs.+$#');
     }
     else {
-      $this->expectExceptionMessageRegExp('#^The "foo" plugin does not exist\. Valid plugin IDs.+$#');
+      $this->expectExceptionMessageMatches('#^The "foo" plugin does not exist\. Valid plugin IDs.+$#');
     }
     $this->mediaTypeFactoryTypeResolver->create((object) [
       'source' => 'foo',
diff --git a/tests/src/Kernel/FactoryType/MenuLinkFactoryTypeTest.php b/tests/src/Kernel/FactoryType/MenuLinkFactoryTypeTest.php
index ed97295..790a19a 100644
--- a/tests/src/Kernel/FactoryType/MenuLinkFactoryTypeTest.php
+++ b/tests/src/Kernel/FactoryType/MenuLinkFactoryTypeTest.php
@@ -174,7 +174,7 @@ class MenuLinkFactoryTypeTest extends EntityKernelTestBase {
       $menu_link_plugin = $this->menuLinkManager->createInstance($links[$id]);
       $expected_parent = $links[$parent] ?? '';
 
-      $this->assertEqual($menu_link_plugin->getParent(), $expected_parent, sprintf('Menu link %s has parent of %s, expected %s.', $id, $menu_link_plugin->getParent(), $expected_parent));
+      $this->assertEquals($menu_link_plugin->getParent(), $expected_parent, sprintf('Menu link %s has parent of %s, expected %s.', $id, $menu_link_plugin->getParent(), $expected_parent));
     }
   }
 
diff --git a/tests/src/Kernel/LollipopKernelTestBase.php b/tests/src/Kernel/LollipopKernelTestBase.php
index c633006..b598ddc 100644
--- a/tests/src/Kernel/LollipopKernelTestBase.php
+++ b/tests/src/Kernel/LollipopKernelTestBase.php
@@ -31,7 +31,7 @@ abstract class LollipopKernelTestBase extends EntityKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->factoryLollipop = $this->container->get('factory_lollipop.fixture_factory');
   }
diff --git a/tests/src/Unit/FactoryType/FileFactoryTypeTest.php b/tests/src/Unit/FactoryType/FileFactoryTypeTest.php
index 031323b..fd8ff51 100644
--- a/tests/src/Unit/FactoryType/FileFactoryTypeTest.php
+++ b/tests/src/Unit/FactoryType/FileFactoryTypeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\factory_lollipop\Unit\Resolver\FactoryType;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\File\FileSystemInterface;
@@ -15,6 +16,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class FileFactoryTypeTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The File Factory resolver.
    *
diff --git a/tests/src/Unit/FixtureFactoryTest.php b/tests/src/Unit/FixtureFactoryTest.php
index 3a04888..d9dc4b3 100644
--- a/tests/src/Unit/FixtureFactoryTest.php
+++ b/tests/src/Unit/FixtureFactoryTest.php
@@ -55,9 +55,7 @@ class FixtureFactoryTest extends UnitTestCase {
    * @see \Drupal\Tests\factory_lollipop_test\Kernel\VocabularyFactoryTest
    */
   public function testCreate(): void {
-    $factory_type_foo = $this->getMockBuilder(FactoryTypeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $factory_type_foo = $this->createMock(FactoryTypeInterface::class);
 
     $factory_type_foo
       ->expects(self::once())
@@ -70,18 +68,14 @@ class FixtureFactoryTest extends UnitTestCase {
       ->method('create')
       ->with(self::equalTo((object) ['default' => 'lorem', 'arg1' => 'bar']));
 
-    $chain_factory_type_resolver = $this->getMockBuilder(ChainFactoryTypeResolver::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $chain_factory_type_resolver = $this->createMock(ChainFactoryTypeResolver::class);
 
     $chain_factory_type_resolver
       ->expects(self::once())
       ->method('getResolvers')
       ->willReturn([$factory_type_foo]);
 
-    $chain_factory_resolver = $this->getMockBuilder(ChainFactoryResolver::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $chain_factory_resolver = $this->createMock(ChainFactoryResolver::class);
 
     $factory_Lollipop = $this->getMockBuilder(FixtureFactory::class)
       ->setConstructorArgs([
