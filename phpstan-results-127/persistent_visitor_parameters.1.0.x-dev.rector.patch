diff --git a/persistent_visitor_parameters.info.yml b/persistent_visitor_parameters.info.yml
index 6f29176..d4ba3ea 100644
--- a/persistent_visitor_parameters.info.yml
+++ b/persistent_visitor_parameters.info.yml
@@ -1,6 +1,6 @@
 name: Persistent Visitor Parameters
 type: module
 description: 'Checks GET and HTTP Request parameters from anonymous visitors, and saves those in a cookie for further processing'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 package: Custom
 configure: persistent_visitor_parameters.settings
\ No newline at end of file
diff --git a/src/CookieManager.php b/src/CookieManager.php
index 9a43d53..0681c64 100644
--- a/src/CookieManager.php
+++ b/src/CookieManager.php
@@ -61,7 +61,7 @@ class CookieManager {
     }
 
     $expire = $this->cookieExpiration();
-    $cookie = new Cookie(self::COOKIE_NAME, serialize($cookieContent), $expire, '/');
+    $cookie = \Symfony\Component\HttpFoundation\Cookie::create(self::COOKIE_NAME, serialize($cookieContent), $expire, '/');
     $response->headers->setCookie($cookie);
 
   }
diff --git a/src/EventSubscriber/ResponseSubscriber.php b/src/EventSubscriber/ResponseSubscriber.php
index f13c1e4..aae172b 100644
--- a/src/EventSubscriber/ResponseSubscriber.php
+++ b/src/EventSubscriber/ResponseSubscriber.php
@@ -35,7 +35,7 @@ class ResponseSubscriber implements EventSubscriberInterface {
   /**
    * @inheritDoc
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
