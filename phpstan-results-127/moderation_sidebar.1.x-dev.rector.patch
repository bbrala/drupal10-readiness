diff --git a/tests/src/Functional/AdminToolbarStateTaxonomyTermTest.php b/tests/src/Functional/AdminToolbarStateTaxonomyTermTest.php
index 3111521..aadcba3 100644
--- a/tests/src/Functional/AdminToolbarStateTaxonomyTermTest.php
+++ b/tests/src/Functional/AdminToolbarStateTaxonomyTermTest.php
@@ -39,7 +39,7 @@ class AdminToolbarStateTaxonomyTermTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->vocabulary = $this->createVocabulary();
@@ -50,6 +50,7 @@ class AdminToolbarStateTaxonomyTermTest extends BrowserTestBase {
 
   /**
    * Tests state labels in admin toolbar with a moderated entity.
+   * @doesNotPerformAssertions
    */
   public function testModeratedEntity() {
     // This is empty because taxonomy_term can't be used in a moderation
diff --git a/tests/src/Functional/AdminToolbarStateTest.php b/tests/src/Functional/AdminToolbarStateTest.php
index 5110185..80a3bff 100644
--- a/tests/src/Functional/AdminToolbarStateTest.php
+++ b/tests/src/Functional/AdminToolbarStateTest.php
@@ -28,7 +28,7 @@ class AdminToolbarStateTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $node_type = $this->drupalCreateContentType(['type' => 'article', 'name' => 'Article']);
diff --git a/tests/src/Functional/ModerationSidebarTest.php b/tests/src/Functional/ModerationSidebarTest.php
index 0781116..ee49beb 100644
--- a/tests/src/Functional/ModerationSidebarTest.php
+++ b/tests/src/Functional/ModerationSidebarTest.php
@@ -35,7 +35,7 @@ class ModerationSidebarTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $workflow = $this->createEditorialWorkflow();
     $this->addEntityTypeAndBundleToWorkflow($workflow, 'entity_test_mulrevpub', 'entity_test_mulrevpub');
diff --git a/tests/src/FunctionalJavascript/ModerationSidebarTaxonomyTermTest.php b/tests/src/FunctionalJavascript/ModerationSidebarTaxonomyTermTest.php
index 3acb1f5..ddb8ffa 100644
--- a/tests/src/FunctionalJavascript/ModerationSidebarTaxonomyTermTest.php
+++ b/tests/src/FunctionalJavascript/ModerationSidebarTaxonomyTermTest.php
@@ -43,7 +43,7 @@ class ModerationSidebarTaxonomyTermTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a Content Type with moderation enabled.
@@ -61,7 +61,8 @@ class ModerationSidebarTaxonomyTermTest extends WebDriverTestBase {
 
     // Enable admin theme for content forms.
     $edit = ['use_admin_theme' => TRUE];
-    $this->drupalPostForm('admin/appearance', $edit, 'Save configuration');
+    $this->drupalGet('admin/appearance');
+    $this->submitForm($edit, 'Save configuration');
 
     drupal_flush_all_caches();
   }
diff --git a/tests/src/FunctionalJavascript/ModerationSidebarTest.php b/tests/src/FunctionalJavascript/ModerationSidebarTest.php
index 0797e76..2fdae69 100644
--- a/tests/src/FunctionalJavascript/ModerationSidebarTest.php
+++ b/tests/src/FunctionalJavascript/ModerationSidebarTest.php
@@ -31,7 +31,7 @@ class ModerationSidebarTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a Content Type with moderation enabled.
@@ -69,13 +69,16 @@ class ModerationSidebarTest extends WebDriverTestBase {
 
     // Enable admin theme for content forms.
     $edit = ['use_admin_theme' => TRUE];
-    $this->drupalPostForm('admin/appearance', $edit, 'Save configuration');
+    $this->drupalGet('admin/appearance');
+    $this->submitForm($edit, 'Save configuration');
     // Add German language.
     $edit = ['predefined_langcode' => 'de'];
-    $this->drupalPostForm('admin/config/regional/language/add', $edit, t('Add language'));
+    $this->drupalGet('admin/config/regional/language/add');
+    $this->submitForm($edit, t('Add language'));
     // Enable translations for nodes.
     $edit = ['entity_types[node]' => 'node', 'settings[node][article][translatable]' => TRUE];
-    $this->drupalPostForm('admin/config/regional/content-language', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/regional/content-language');
+    $this->submitForm($edit, 'Save configuration');
 
     drupal_flush_all_caches();
   }
