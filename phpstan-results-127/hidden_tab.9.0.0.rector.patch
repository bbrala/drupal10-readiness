diff --git a/src/Event/HiddenTabAfterMailEvent.php b/src/Event/HiddenTabAfterMailEvent.php
index fdc84be..910f74c 100644
--- a/src/Event/HiddenTabAfterMailEvent.php
+++ b/src/Event/HiddenTabAfterMailEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * The event published when a new mail is sent by mailer (after it is sent).
  */
-class HiddenTabAfterMailEvent extends Event {
+class HiddenTabAfterMailEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Name of this event.
diff --git a/src/Event/HiddenTabPageFormEvent.php b/src/Event/HiddenTabPageFormEvent.php
index 7a7f3d4..d82e7e1 100644
--- a/src/Event/HiddenTabPageFormEvent.php
+++ b/src/Event/HiddenTabPageFormEvent.php
@@ -12,7 +12,7 @@ use Symfony\Component\EventDispatcher\Event;
  * So that other modules may add their own elements to the form. Has 3 phase
  * of form creation, validation and save.
  */
-class HiddenTabPageFormEvent extends Event {
+class HiddenTabPageFormEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Name of this event.
diff --git a/src/Form/HiddenTabPageForm.php b/src/Form/HiddenTabPageForm.php
index a51a35d..af07bd1 100644
--- a/src/Form/HiddenTabPageForm.php
+++ b/src/Form/HiddenTabPageForm.php
@@ -427,8 +427,8 @@ class HiddenTabPageForm extends EntityForm {
     ];
 
     // Give other modules opportunity to add stuff to the form.
-    $this->eventer->dispatch(HiddenTabPageFormEvent::EVENT_NAME,
-      $this->event($form, $form_state, HiddenTabPageFormEvent::PHASE_FORM));
+    $this->eventer->dispatch($this->event($form, $form_state, HiddenTabPageFormEvent::PHASE_FORM),
+      HiddenTabPageFormEvent::EVENT_NAME);
 
     return $form;
   }
@@ -445,8 +445,8 @@ class HiddenTabPageForm extends EntityForm {
       $form_state->setErrorByName('secret_uri', $this->t("Both Uris can't be same"));
     }
     // Give other modules opportunity to validate their added stuff.
-    $this->eventer->dispatch(HiddenTabPageFormEvent::EVENT_NAME,
-      $this->event($form, $form_state, HiddenTabPageFormEvent::PHASE_VALIDATE));
+    $this->eventer->dispatch($this->event($form, $form_state, HiddenTabPageFormEvent::PHASE_VALIDATE),
+      HiddenTabPageFormEvent::EVENT_NAME);
   }
 
   /**
@@ -522,8 +522,8 @@ class HiddenTabPageForm extends EntityForm {
     }
 
     // Give other modules opportunity to save their added stuff.
-    $this->eventer->dispatch(HiddenTabPageFormEvent::EVENT_NAME,
-      $this->event($form, $form_state, HiddenTabPageFormEvent::PHASE_SUBMIT));
+    $this->eventer->dispatch($this->event($form, $form_state, HiddenTabPageFormEvent::PHASE_SUBMIT),
+      HiddenTabPageFormEvent::EVENT_NAME);
 
     if (!$is_cc && !$was_new && ($form_state->getValue('tab_uri') !== $form_state->getValue('old_tab_uri'))) {
       $this->messenger()
