diff --git a/src/EventSubscriber/UserAgentSubscriber.php b/src/EventSubscriber/UserAgentSubscriber.php
index 797dbae..56bc3a6 100644
--- a/src/EventSubscriber/UserAgentSubscriber.php
+++ b/src/EventSubscriber/UserAgentSubscriber.php
@@ -51,10 +51,10 @@ class UserAgentSubscriber implements EventSubscriberInterface {
   /**
    * Code that should be triggered on event specified.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The response event, which contains the current request.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $methodProvide = $this->configFactory->get('user_agent_class.provide')->get('user_agent_class.responsibility_frontend_backend');
     if ($methodProvide) {
       $request = $event->getRequest()->headers->get('user-agent');
diff --git a/tests/src/Unit/CheckUserAgentTest.php b/tests/src/Unit/CheckUserAgentTest.php
index 17e3773..093cfe7 100644
--- a/tests/src/Unit/CheckUserAgentTest.php
+++ b/tests/src/Unit/CheckUserAgentTest.php
@@ -43,20 +43,16 @@ class CheckUserAgentTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->checkAgentServices = $this->getMockBuilder(CheckAgentServices::class)
       ->disableOriginalConstructor()
       ->setMethods(NULL)
       ->getMock();
 
-    $this->userAgentEntityFirst = $this->getMockBuilder('Drupal\user_agent_class\Entity\UserAgentEntity')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->userAgentEntityFirst = $this->createMock('Drupal\user_agent_class\Entity\UserAgentEntity');
 
-    $this->userAgentEntitySecond = $this->getMockBuilder('Drupal\user_agent_class\Entity\UserAgentEntity')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->userAgentEntitySecond = $this->createMock('Drupal\user_agent_class\Entity\UserAgentEntity');
 
     $this->userAgentEntityFirst->method('label')
       ->willReturn('Chrome');
