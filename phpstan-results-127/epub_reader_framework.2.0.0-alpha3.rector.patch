diff --git a/src/Epub/ReaderEpubXhtmlConverter.php b/src/Epub/ReaderEpubXhtmlConverter.php
index 55182c3..bb91cfc 100644
--- a/src/Epub/ReaderEpubXhtmlConverter.php
+++ b/src/Epub/ReaderEpubXhtmlConverter.php
@@ -112,7 +112,7 @@ class ReaderEpubXhtmlConverter {
         // Get the event_dispatcher service and dispatch the event.
         $event_name = ReaderEpubXhmlConverterEvent::EVENT_NAME;
         $event_dispatcher = $this->eventDispatcher;
-        $event_dispatcher->dispatch($event_name, $event);
+        $event_dispatcher->dispatch($event, $event_name);
       }
     }
 
diff --git a/src/Event/ReaderEpubXhmlConverterEvent.php b/src/Event/ReaderEpubXhmlConverterEvent.php
index 5047c3c..afd45df 100644
--- a/src/Event/ReaderEpubXhmlConverterEvent.php
+++ b/src/Event/ReaderEpubXhmlConverterEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event that is fired when the batch is processing a particular chapter.
  */
-class ReaderEpubXhmlConverterEvent extends Event {
+class ReaderEpubXhmlConverterEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const EVENT_NAME = 'reader_epub_xhtml_converter';
 
diff --git a/src/Event/ReaderNodeAjaxControllerResponseEvent.php b/src/Event/ReaderNodeAjaxControllerResponseEvent.php
index 7efdc89..ee1df65 100644
--- a/src/Event/ReaderNodeAjaxControllerResponseEvent.php
+++ b/src/Event/ReaderNodeAjaxControllerResponseEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Event that is fired before the ajax response is returned.
  */
-class ReaderNodeAjaxControllerResponseEvent extends Event {
+class ReaderNodeAjaxControllerResponseEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const EVENT_NAME = 'reader_node_ajax_controller_response';
 
