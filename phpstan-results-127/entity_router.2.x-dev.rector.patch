diff --git a/entity_router.info.yml b/entity_router.info.yml
index 55722e6..b8141a6 100644
--- a/entity_router.info.yml
+++ b/entity_router.info.yml
@@ -2,6 +2,5 @@ name: 'Entity Router'
 description: 'Lookup entities by their paths/redirects and convert to a given format.'
 package: 'Web services'
 type: module
-core: 8.x
 
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
diff --git a/src/Event/EntityResponseEvent.php b/src/Event/EntityResponseEvent.php
index 545402c..1a4f4b6 100644
--- a/src/Event/EntityResponseEvent.php
+++ b/src/Event/EntityResponseEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\HttpFoundation\Response;
 /**
  * The event to dispatch for notifying about entity response.
  */
-class EntityResponseEvent extends Event {
+class EntityResponseEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The name of the event.
diff --git a/src/EventSubscriber.php b/src/EventSubscriber.php
index 5676071..af68dea 100644
--- a/src/EventSubscriber.php
+++ b/src/EventSubscriber.php
@@ -54,7 +54,7 @@ class EventSubscriber implements EventSubscriberInterface {
   /**
    * {@inheritdoc}
    */
-  public function onResponse(FilterResponseEvent $event): void {
+  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event): void {
     $response = $event->getResponse();
 
     if ($response instanceof EntityResponse) {
@@ -83,7 +83,7 @@ class EventSubscriber implements EventSubscriberInterface {
             );
         }
 
-        $this->eventDispatcher->dispatch(EntityResponseEvent::NAME, new EntityResponseEvent($request, $response, $entity));
+        $this->eventDispatcher->dispatch(new EntityResponseEvent($request, $response, $entity), EntityResponseEvent::NAME);
       }
       catch (PluginException $e) {
         $status = 400;
