diff --git a/src/ApiProxyPermissions.php b/src/ApiProxyPermissions.php
index 111da55..1d59fb8 100644
--- a/src/ApiProxyPermissions.php
+++ b/src/ApiProxyPermissions.php
@@ -25,7 +25,7 @@ final class ApiProxyPermissions implements ContainerInjectionInterface {
    * @param \Drupal\api_proxy\Plugin\HttpApiPluginManager $proxy_plugin_manager
    *   The HTTP API proxy plugin manager.
    */
-  public function __construct(HttpApiPluginManager $proxy_plugin_manager) {
+  public function __construct(HttpApiPluginManager $proxy_plugin_manager, private \Drupal\api_proxy\Plugin\HttpApiPluginManager $httpApiPluginManager) {
     $this->proxyPluginManager = $proxy_plugin_manager;
   }
 
@@ -33,7 +33,7 @@ final class ApiProxyPermissions implements ContainerInjectionInterface {
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    return new static($container->get(HttpApiPluginManager::class));
+    return new static($this->httpApiPluginManager);
   }
 
   /**
diff --git a/src/EventSubscriber/OptionsRequestSubscriber.php b/src/EventSubscriber/OptionsRequestSubscriber.php
index 16a1361..1818220 100644
--- a/src/EventSubscriber/OptionsRequestSubscriber.php
+++ b/src/EventSubscriber/OptionsRequestSubscriber.php
@@ -59,10 +59,10 @@ class OptionsRequestSubscriber implements EventSubscriberInterface {
   /**
    * Tries to handle the options request.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The request event.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $request = $event->getRequest();
     $routes = $this->routeProvider->getRouteCollectionForRequest($event->getRequest());
     if ($request->getMethod() !== 'OPTIONS') {
diff --git a/src/Form/ApiProxyForm.php b/src/Form/ApiProxyForm.php
index a05f238..419e827 100644
--- a/src/Form/ApiProxyForm.php
+++ b/src/Form/ApiProxyForm.php
@@ -18,6 +18,9 @@ final class ApiProxyForm extends FormBase {
    * @var \Drupal\api_proxy\Plugin\HttpApiPluginManager
    */
   private $apiProxyManager;
+  public function __construct(private \Drupal\api_proxy\Plugin\HttpApiPluginManager $httpApiPluginManager)
+  {
+  }
 
   /**
    * {@inheritdoc}
@@ -25,7 +28,7 @@ final class ApiProxyForm extends FormBase {
   public static function create(ContainerInterface $container): self {
     /** @var \Drupal\api_proxy\Form\ApiProxyForm $form_object */
     $form_object = parent::create($container);
-    $form_object->setApiProxyManager($container->get(HttpApiPluginManager::class));
+    $form_object->setApiProxyManager($this->httpApiPluginManager);
 
     return $form_object;
   }
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index aa3cbc0..d9c64a4 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -27,9 +27,10 @@ final class SettingsForm extends ConfigFormBase {
   /**
    * {@inheritdoc}
    */
-  public function __construct(ConfigFactoryInterface $config_factory, HttpApiPluginManager $api_proxy_manager) {
+  public function __construct(\Drupal\Core\Config\ConfigFactoryInterface $config_factory, ConfigFactoryInterface $config_factory, HttpApiPluginManager $api_proxy_manager, private \Drupal\api_proxy\Plugin\HttpApiPluginManager $httpApiPluginManager) {
     $this->setConfigFactory($config_factory);
     $this->apiProxyManager = $api_proxy_manager;
+    parent::__construct($config_factory);
   }
 
   /**
@@ -38,7 +39,7 @@ final class SettingsForm extends ConfigFormBase {
   public static function create(ContainerInterface $container) {
     return new static(
       $container->get('config.factory'),
-      $container->get(HttpApiPluginManager::class)
+      $this->httpApiPluginManager
     );
   }
 
