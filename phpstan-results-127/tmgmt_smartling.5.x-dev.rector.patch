diff --git a/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataConverterTest.php b/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataConverterTest.php
index d23f6df..cdea4cd 100644
--- a/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataConverterTest.php
+++ b/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataConverterTest.php
@@ -137,10 +137,7 @@ class AcquiaCohesionDataConverterTest extends SmartlingTestBase {
 
     $acquiaDataConverter = new AcquiaCohesionDataConverter($this->loggerMock);
 
-    $this->assertEqual(
-      $acquiaDataConverter->findAndConvertCohesionJsonDataToCohesionXmlData($input),
-      $expected
-    );
+    $this->assertEquals($acquiaDataConverter->findAndConvertCohesionJsonDataToCohesionXmlData($input), $expected);
   }
 
   public function testXmlToJsonTransformation() {
@@ -247,11 +244,8 @@ class AcquiaCohesionDataConverterTest extends SmartlingTestBase {
         ]
     ];
 
-    $this->assertEqual(
-      $acquiaDataConverter->findAndConvertCohesionXmlDataToCohesionJsonData(
-        $input
-      ),
-      $expected
-    );
+    $this->assertEquals($acquiaDataConverter->findAndConvertCohesionXmlDataToCohesionJsonData(
+      $input
+    ), $expected);
   }
 }
diff --git a/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataSuggesterTest.php b/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataSuggesterTest.php
index fa63a74..9c6c463 100644
--- a/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataSuggesterTest.php
+++ b/modules/tmgmt_smartling_acquia_cohesion/tests/src/Kernel/AcquiaCohesionDataSuggesterTest.php
@@ -78,24 +78,12 @@ class AcquiaCohesionDataSuggesterTest extends SmartlingTestBase {
 
     $result = $acquiaDataSuggester->suggestCohesionContentComponents([$jobItemMock]);
 
-    $this->assertEqual(
-      count($result),
-      1
-    );
+    $this->assertEquals(count($result), 1);
 
-    $this->assertEqual(
-      $result[0]["from_item"],
-      1
-    );
+    $this->assertEquals($result[0]["from_item"], 1);
 
-    $this->assertEqual(
-      $result[0]["job_item"] instanceof JobItemInterface,
-      true
-    );
+    $this->assertEquals($result[0]["job_item"] instanceof JobItemInterface, true);
 
-    $this->assertEqual(
-      (string) $result[0]["reason"],
-      "Referenced content component"
-    );
+    $this->assertEquals((string) $result[0]["reason"], "Referenced content component");
   }
 }
diff --git a/modules/tmgmt_smartling_log_settings/tests/src/Functional/TmgmtSmartlingLogSettingsTest.php b/modules/tmgmt_smartling_log_settings/tests/src/Functional/TmgmtSmartlingLogSettingsTest.php
index a95acfd..3b4616c 100644
--- a/modules/tmgmt_smartling_log_settings/tests/src/Functional/TmgmtSmartlingLogSettingsTest.php
+++ b/modules/tmgmt_smartling_log_settings/tests/src/Functional/TmgmtSmartlingLogSettingsTest.php
@@ -28,7 +28,7 @@ class TmgmtSmartlingLogSettingsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $admin_user = $this->drupalCreateUser(['administer site configuration']);
@@ -39,7 +39,8 @@ class TmgmtSmartlingLogSettingsTest extends BrowserTestBase {
    * Tests the tmgmt_smartling_log_settings settings page.
    */
   public function testValidSettingsNotEmptyConfig() {
-    $this->drupalPostForm('admin/config/development/logging', ['tmgmt_smartling_log_settings_severity_mapping' => "smartling_api: info\r\ntmgmt_smartling: notice"], t('Save configuration'));
+    $this->drupalGet('admin/config/development/logging');
+    $this->submitForm(['tmgmt_smartling_log_settings_severity_mapping' => "smartling_api: info\r\ntmgmt_smartling: notice"], t('Save configuration'));
     $this->assertSession()->pageTextContains(t('The configuration options have been saved.'));
   }
 
@@ -47,7 +48,8 @@ class TmgmtSmartlingLogSettingsTest extends BrowserTestBase {
    * Tests the tmgmt_smartling_log_settings settings page: empty config.
    */
   public function testValidSettingsEmptyConfig() {
-    $this->drupalPostForm('admin/config/development/logging', ['tmgmt_smartling_log_settings_severity_mapping' => ""], t('Save configuration'));
+    $this->drupalGet('admin/config/development/logging');
+    $this->submitForm(['tmgmt_smartling_log_settings_severity_mapping' => ""], t('Save configuration'));
     $this->assertSession()->pageTextContains(t('The configuration options have been saved.'));
   }
 
@@ -55,7 +57,8 @@ class TmgmtSmartlingLogSettingsTest extends BrowserTestBase {
    * Tests the tmgmt_smartling_log_settings settings page: invalid yaml.
    */
   public function testSettingsInvalidYaml() {
-    $this->drupalPostForm('admin/config/development/logging', ['tmgmt_smartling_log_settings_severity_mapping' => "smartling_api: info\r\n- tmgmt_smartling: notice"], t('Save configuration'));
+    $this->drupalGet('admin/config/development/logging');
+    $this->submitForm(['tmgmt_smartling_log_settings_severity_mapping' => "smartling_api: info\r\n- tmgmt_smartling: notice"], t('Save configuration'));
     $this->assertSession()->pageTextContains(t('Config must be a valid yaml.'));
   }
 
@@ -63,7 +66,8 @@ class TmgmtSmartlingLogSettingsTest extends BrowserTestBase {
    * Tests the tmgmt_smartling_log_settings settings page: not array.
    */
   public function testSettingsInvalidConfigNotArray() {
-    $this->drupalPostForm('admin/config/development/logging', ['tmgmt_smartling_log_settings_severity_mapping' => "smartling_api info"], t('Save configuration'));
+    $this->drupalGet('admin/config/development/logging');
+    $this->submitForm(['tmgmt_smartling_log_settings_severity_mapping' => "smartling_api info"], t('Save configuration'));
     $this->assertSession()->pageTextContains(t('Invalid config format.'));
   }
 
@@ -71,7 +75,8 @@ class TmgmtSmartlingLogSettingsTest extends BrowserTestBase {
    * Tests the tmgmt_smartling_log_settings settings page: keys are not strings.
    */
   public function testSettingsInvalidConfigKeysAreNotStrings() {
-    $this->drupalPostForm('admin/config/development/logging', ['tmgmt_smartling_log_settings_severity_mapping' => "- smartling_api: info\r\n- tmgmt_smartling: notice"], t('Save configuration'));
+    $this->drupalGet('admin/config/development/logging');
+    $this->submitForm(['tmgmt_smartling_log_settings_severity_mapping' => "- smartling_api: info\r\n- tmgmt_smartling: notice"], t('Save configuration'));
     $this->assertSession()->pageTextContains(t('Invalid config format.'));
   }
 
@@ -79,7 +84,8 @@ class TmgmtSmartlingLogSettingsTest extends BrowserTestBase {
    * Tests the tmgmt_smartling_log_settings settings page: values are not strings.
    */
   public function testSettingsInvalidConfigOneOrMoreValuesAreNotValidSeverityLevel() {
-    $this->drupalPostForm('admin/config/development/logging', ['tmgmt_smartling_log_settings_severity_mapping' => "smartling_api: info\r\ntmgmt_smartling: severity_level"], t('Save configuration'));
+    $this->drupalGet('admin/config/development/logging');
+    $this->submitForm(['tmgmt_smartling_log_settings_severity_mapping' => "smartling_api: info\r\ntmgmt_smartling: severity_level"], t('Save configuration'));
     $this->assertSession()->pageTextContains(t('Invalid config format.'));
   }
 
diff --git a/modules/tmgmt_smartling_log_settings/tests/src/Kernel/TmgmtSmartlingLogSettingsTest.php b/modules/tmgmt_smartling_log_settings/tests/src/Kernel/TmgmtSmartlingLogSettingsTest.php
index fe4e797..37c603c 100644
--- a/modules/tmgmt_smartling_log_settings/tests/src/Kernel/TmgmtSmartlingLogSettingsTest.php
+++ b/modules/tmgmt_smartling_log_settings/tests/src/Kernel/TmgmtSmartlingLogSettingsTest.php
@@ -16,7 +16,7 @@ class TmgmtSmartlingLogSettingsTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['syslog', 'tmgmt_smartling_log_settings']);
   }
diff --git a/src/Event/AfterFileDownloadEvent.php b/src/Event/AfterFileDownloadEvent.php
index 4f8bafb..a2c1b81 100644
--- a/src/Event/AfterFileDownloadEvent.php
+++ b/src/Event/AfterFileDownloadEvent.php
@@ -4,7 +4,7 @@ namespace Drupal\tmgmt_smartling\Event;
 
 use Symfony\Component\EventDispatcher\Event;
 
-class AfterFileDownloadEvent extends Event implements JobBasedEventInterface {
+class AfterFileDownloadEvent extends \Symfony\Contracts\EventDispatcher\Event implements JobBasedEventInterface {
   use JobBasedEventTrait;
 
   const AFTER_FILE_DOWNLOAD_EVENT = 'tmgmt_smartling.after_file_download';
diff --git a/src/Event/RequestTranslationEvent.php b/src/Event/RequestTranslationEvent.php
index 79b2a16..eff49ea 100644
--- a/src/Event/RequestTranslationEvent.php
+++ b/src/Event/RequestTranslationEvent.php
@@ -4,7 +4,7 @@ namespace Drupal\tmgmt_smartling\Event;
 
 use Symfony\Component\EventDispatcher\Event;
 
-class RequestTranslationEvent extends Event implements JobBasedEventInterface {
+class RequestTranslationEvent extends \Symfony\Contracts\EventDispatcher\Event implements JobBasedEventInterface {
   use JobBasedEventTrait;
 
   const REQUEST_TRANSLATION_EVENT = 'tmgmt_smartling.request_translation';
diff --git a/src/Plugin/tmgmt/Translator/SmartlingTranslator.php b/src/Plugin/tmgmt/Translator/SmartlingTranslator.php
index 06c8269..1afb3b7 100755
--- a/src/Plugin/tmgmt/Translator/SmartlingTranslator.php
+++ b/src/Plugin/tmgmt/Translator/SmartlingTranslator.php
@@ -337,7 +337,7 @@ class SmartlingTranslator extends TranslatorPluginBase implements
         ]);
       }
 
-      $this->eventDispatcher->dispatch(RequestTranslationEvent::REQUEST_TRANSLATION_EVENT, new RequestTranslationEvent($job));
+      $this->eventDispatcher->dispatch(new RequestTranslationEvent($job), RequestTranslationEvent::REQUEST_TRANSLATION_EVENT);
 
       if (!$this->translationRequestManager->commitSuccessfulUpload($job, $translation_request)) {
         $warning_message = 'Can\'t update submitted date for translation request = @translation_request.';
diff --git a/tests/src/Functional/BaseFlowTest.php b/tests/src/Functional/BaseFlowTest.php
index d7d127f..e8d6ea0 100644
--- a/tests/src/Functional/BaseFlowTest.php
+++ b/tests/src/Functional/BaseFlowTest.php
@@ -21,16 +21,22 @@ class BaseFlowTest extends SmartlingTestBase {
 
       // Check fr node title before translation (should be same as en title).
       $this->drupalGet("$this->targetLanguage/node/$this->testNodeId");
-      $this->assertResponse(200);
-      $this->assertText($this->testNodeTitle);
+      $this->assertSession()->statusCodeEquals(200);
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains($this->testNodeTitle);
 
       // Download translated file.
       $this->downloadAndCheckTranslatedFile($job->id(), $fileName);
 
       // Check translation.
       $this->drupalGet("$this->targetLanguage/node/$this->testNodeId");
-      $this->assertResponse(200);
-      $this->assertNoText($this->testNodeTitle);
+      $this->assertSession()->statusCodeEquals(200);
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextNotContains($this->testNodeTitle);
     }
     else {
       $this->fail("Smartling settings file for simpletests not found.");
@@ -45,19 +51,33 @@ class BaseFlowTest extends SmartlingTestBase {
    */
   public function testRequestTranslationWhenOneProviderAvailable() {
     if (!empty($this->smartlingPluginProviderSettings)) {
-      $this->drupalPostForm('/admin/tmgmt/translators/manage/smartling', $this->smartlingPluginProviderSettings, t('Save'));
-      $this->drupalPostForm('/admin/tmgmt/translators/manage/local/delete', [], t('Delete'));
-      $this->drupalPostForm('/admin/tmgmt/translators/manage/file/delete', [], t('Delete'));
-      $this->drupalPostForm('/admin/tmgmt/translators/manage/test_translator/delete', [], t('Delete'));
+      $this->drupalGet('/admin/tmgmt/translators/manage/smartling');
+      $this->submitForm($this->smartlingPluginProviderSettings, t('Save'));
+      $this->drupalGet('/admin/tmgmt/translators/manage/local/delete');
+      $this->submitForm([], t('Delete'));
+      $this->drupalGet('/admin/tmgmt/translators/manage/file/delete');
+      $this->submitForm([], t('Delete'));
+      $this->drupalGet('/admin/tmgmt/translators/manage/test_translator/delete');
+      $this->submitForm([], t('Delete'));
+      $this->drupalGet('/admin/tmgmt/sources');
 
-      $this->drupalPostForm('/admin/tmgmt/sources', [
+      $this->submitForm([
         'items[1]' => 1,
         'target_language' => 'de',
       ], t('Request translation'));
 
-      $this->assertText('One job needs to be checked out.');
-      $this->assertText('Create new job');
-      $this->assertText('Add to job');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains('One job needs to be checked out.');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains('Create new job');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains('Add to job');
     }
     else {
       $this->fail("Smartling settings file for simpletests not found.");
