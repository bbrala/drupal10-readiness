diff --git a/node_summary_token_from_p.info.yml b/node_summary_token_from_p.info.yml
index aca4087..97abfd7 100644
--- a/node_summary_token_from_p.info.yml
+++ b/node_summary_token_from_p.info.yml
@@ -2,8 +2,7 @@ name: Node Summary Token From P Tags
 type: module
 description: 'Generates the [node:summary] token for Nodes which do not have a body field by using P tags from the rendered node.'
 package: Yource
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 dependencies:
   - drupal:node
 
diff --git a/tests/src/HookTokensTest.php b/tests/src/HookTokensTest.php
index 9bdf6b9..efc2a38 100644
--- a/tests/src/HookTokensTest.php
+++ b/tests/src/HookTokensTest.php
@@ -34,7 +34,7 @@ class HookTokensTest extends TokenReplaceKernelTestBase {
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['filter', 'node']);
     $this->installEntitySchema('node');
@@ -129,8 +129,8 @@ class HookTokensTest extends TokenReplaceKernelTestBase {
     foreach ($tests as $input => $expected) {
       $bubbleable_metadata = new BubbleableMetadata();
       $output = $this->tokenService->replace($input, ['node' => $node], ['langcode' => $this->interfaceLanguage->getId()], $bubbleable_metadata);
-      $this->assertEqual($output, $expected, new FormattableMarkup('Node token %token replaced.', ['%token' => $input]));
-      $this->assertEqual($bubbleable_metadata, $metadata_tests[$input]);
+      $this->assertEquals($output, $expected, new FormattableMarkup('Node token %token replaced.', ['%token' => $input]));
+      $this->assertEquals($bubbleable_metadata, $metadata_tests[$input]);
     }
 
     // Repeat for a node without a summary.
@@ -156,7 +156,7 @@ class HookTokensTest extends TokenReplaceKernelTestBase {
 
     foreach ($tests as $input => $expected) {
       $output = $this->tokenService->replace($input, ['node' => $node], ['language' => $this->interfaceLanguage]);
-      $this->assertEqual($output, $expected, new FormattableMarkup('Node token %token replaced for node without a summary.', ['%token' => $input]));
+      $this->assertEquals($output, $expected, new FormattableMarkup('Node token %token replaced for node without a summary.', ['%token' => $input]));
     }
   }
 
@@ -196,8 +196,8 @@ class HookTokensTest extends TokenReplaceKernelTestBase {
     foreach ($tests as $input => $expected) {
       $bubbleable_metadata = new BubbleableMetadata();
       $output = $this->tokenService->replace($input, ['node' => $node], ['langcode' => $this->interfaceLanguage->getId()], $bubbleable_metadata);
-      $this->assertEqual($output, $expected, new FormattableMarkup('Node token %token replaced.', ['%token' => $input]));
-      $this->assertEqual($bubbleable_metadata, $metadata_tests[$input]);
+      $this->assertEquals($output, $expected, new FormattableMarkup('Node token %token replaced.', ['%token' => $input]));
+      $this->assertEquals($bubbleable_metadata, $metadata_tests[$input]);
     }
   }
 
