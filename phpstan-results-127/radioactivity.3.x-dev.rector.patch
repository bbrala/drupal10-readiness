diff --git a/src/Event/EnergyBelowCutoffEvent.php b/src/Event/EnergyBelowCutoffEvent.php
index a0712dc..f360371 100644
--- a/src/Event/EnergyBelowCutoffEvent.php
+++ b/src/Event/EnergyBelowCutoffEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @see rules_entity_presave()
  */
-class EnergyBelowCutoffEvent extends Event {
+class EnergyBelowCutoffEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const EVENT_NAME = 'radioactivity_field_cutoff';
 
diff --git a/src/RadioactivityProcessor.php b/src/RadioactivityProcessor.php
index 38321f9..af7aedb 100644
--- a/src/RadioactivityProcessor.php
+++ b/src/RadioactivityProcessor.php
@@ -240,7 +240,7 @@ class RadioactivityProcessor implements RadioactivityProcessorInterface {
         // the cutoff value. This is needed for Rules integration, but can be
         // used by any module that wants to use events.
         $event = new EnergyBelowCutoffEvent($entity);
-        $this->eventDispatcher->dispatch('radioactivity_field_cutoff', $event);
+        $this->eventDispatcher->dispatch($event, 'radioactivity_field_cutoff');
       }
 
       if ($entity->getEntityType()->isRevisionable()) {
diff --git a/tests/src/Kernel/RadioactivityFieldTypeTest.php b/tests/src/Kernel/RadioactivityFieldTypeTest.php
index 2885a22..0fa1fc8 100644
--- a/tests/src/Kernel/RadioactivityFieldTypeTest.php
+++ b/tests/src/Kernel/RadioactivityFieldTypeTest.php
@@ -51,9 +51,7 @@ class RadioactivityFieldTypeTest extends FieldKernelTestBase {
     parent::setUp();
 
     // Mock Time::getRequestTime.
-    $dateTime = $this->getMockBuilder(TimeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $dateTime = $this->createMock(TimeInterface::class);
     $dateTime
       ->expects($this->any())
       ->method('getRequestTime')
diff --git a/tests/src/Unit/DefaultIncidentStorageTest.php b/tests/src/Unit/DefaultIncidentStorageTest.php
index 8b7b6db..05b3bf3 100644
--- a/tests/src/Unit/DefaultIncidentStorageTest.php
+++ b/tests/src/Unit/DefaultIncidentStorageTest.php
@@ -15,6 +15,7 @@ use Prophecy\Argument;
  */
 class DefaultIncidentStorageTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * A mock state storage.
    *
@@ -49,6 +50,7 @@ class DefaultIncidentStorageTest extends UnitTestCase {
 
   /**
    * @covers ::addIncident
+   * @doesNotPerformAssertions
    */
   public function testAddIncident() {
     $this->sut->addIncident($this->incident->reveal());
@@ -101,6 +103,7 @@ class DefaultIncidentStorageTest extends UnitTestCase {
 
   /**
    * @covers ::clearIncidents
+   * @doesNotPerformAssertions
    */
   public function testClearIncidents() {
     $this->sut->clearIncidents();
diff --git a/tests/src/Unit/EmitControllerTest.php b/tests/src/Unit/EmitControllerTest.php
index 816b09c..e7d119c 100644
--- a/tests/src/Unit/EmitControllerTest.php
+++ b/tests/src/Unit/EmitControllerTest.php
@@ -19,6 +19,7 @@ use Symfony\Component\HttpFoundation\Request;
  */
 class EmitControllerTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The request received by the controller.
    *
diff --git a/tests/src/Unit/RadioactivityProcessorTest.php b/tests/src/Unit/RadioactivityProcessorTest.php
index d8c0071..73bee29 100644
--- a/tests/src/Unit/RadioactivityProcessorTest.php
+++ b/tests/src/Unit/RadioactivityProcessorTest.php
@@ -31,6 +31,7 @@ use Symfony\Component\EventDispatcher\EventDispatcherInterface;
  */
 class RadioactivityProcessorTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The radioactivity processor under test.
    *
@@ -142,6 +143,7 @@ class RadioactivityProcessorTest extends UnitTestCase {
 
   /**
    * @covers ::processDecay
+   * @doesNotPerformAssertions
    */
   public function testProcessDecayNoFields() {
 
@@ -158,6 +160,7 @@ class RadioactivityProcessorTest extends UnitTestCase {
 
   /**
    * @covers ::processDecay
+   * @doesNotPerformAssertions
    */
   public function testProcessDecayNoData() {
 
@@ -183,6 +186,7 @@ class RadioactivityProcessorTest extends UnitTestCase {
 
   /**
    * @covers ::processDecay
+   * @doesNotPerformAssertions
    */
   public function testProcessDecayCountProfile() {
 
@@ -209,6 +213,7 @@ class RadioactivityProcessorTest extends UnitTestCase {
   /**
    * @covers ::queueProcessDecay
    * @dataProvider providerQueueProcessDecay
+   * @doesNotPerformAssertions
    */
   public function testQueueProcessDecay($profile, $halfLife, $cutoff, $initialEnergy, $elapsedTime, $isPublished, $resultEnergy) {
 
@@ -282,6 +287,7 @@ class RadioactivityProcessorTest extends UnitTestCase {
 
   /**
    * @covers ::processIncidents
+   * @doesNotPerformAssertions
    */
   public function testProcessIncidents() {
 
@@ -350,6 +356,7 @@ class RadioactivityProcessorTest extends UnitTestCase {
   /**
    * @covers ::queueProcessIncidents
    * @dataProvider providerQueueProcessIncidents
+   * @doesNotPerformAssertions
    */
   public function testQueueProcessIncidents($isRevisonable, $initialEnergy, $emittedEnergy, $resultEnergy) {
 
diff --git a/tests/src/Unit/RestIncidentStorageTest.php b/tests/src/Unit/RestIncidentStorageTest.php
index 9e1b727..e6badd8 100644
--- a/tests/src/Unit/RestIncidentStorageTest.php
+++ b/tests/src/Unit/RestIncidentStorageTest.php
@@ -46,9 +46,7 @@ class RestIncidentStorageTest extends UnitTestCase {
    * @covers ::addIncident
    */
   public function testAddIncident() {
-    $incident = $this->getMockBuilder(IncidentInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $incident = $this->createMock(IncidentInterface::class);
 
     $this->expectException("Exception");
     $this->expectExceptionMessage("The Radioactivity rest endpoint expects incidents to be added somewhere else.");
@@ -128,6 +126,7 @@ class RestIncidentStorageTest extends UnitTestCase {
 
   /**
    * @covers ::clearIncidents
+   * @doesNotPerformAssertions
    */
   public function testClearIncidents() {
     $this->sut->expects($this->once())
diff --git a/tests/src/Unit/StorageFactoryTest.php b/tests/src/Unit/StorageFactoryTest.php
index 9b99f24..129a1aa 100644
--- a/tests/src/Unit/StorageFactoryTest.php
+++ b/tests/src/Unit/StorageFactoryTest.php
@@ -62,11 +62,8 @@ class StorageFactoryTest extends UnitTestCase {
       ->will($this->returnValue($this->config));
 
     // Mock the class resolver and the classes it provides.
-    $mockRestStorage = $this->getMockBuilder(RestIncidentStorage::class)
-      ->getMock();
-    $mockDefaultStorage = $this->getMockBuilder(DefaultIncidentStorage::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $mockRestStorage = $this->createMock(RestIncidentStorage::class);
+    $mockDefaultStorage = $this->createMock(DefaultIncidentStorage::class);
 
     $this->classResolver = $this->getMockBuilder(ClassResolverInterface::class)
       ->setMethods(['getInstanceFromDefinition'])
@@ -115,6 +112,7 @@ class StorageFactoryTest extends UnitTestCase {
   /**
    * @covers ::getConfiguredStorage
    * @dataProvider providerGetConfiguredStorage
+   * @doesNotPerformAssertions
    */
   public function testGetConfiguredStorage($configType, $storageType) {
     $sut = $this->getMockBuilder('Drupal\radioactivity\StorageFactory')
