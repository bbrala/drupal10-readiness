diff --git a/modules/b24_commerce/src/Event/B24CommerceEvent.php b/modules/b24_commerce/src/Event/B24CommerceEvent.php
index 07d0b0d..6366f0d 100644
--- a/modules/b24_commerce/src/Event/B24CommerceEvent.php
+++ b/modules/b24_commerce/src/Event/B24CommerceEvent.php
@@ -14,7 +14,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @see \Drupal\commerce_order\Event\OrderEvents
  */
-class B24CommerceEvent extends Event {
+class B24CommerceEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Name of the event fired after adding a new Bitrix24 entity.
diff --git a/modules/b24_commerce/src/EventSubscriber/B24CommerceSubscriber.php b/modules/b24_commerce/src/EventSubscriber/B24CommerceSubscriber.php
index 96d7c41..70e0e0a 100644
--- a/modules/b24_commerce/src/EventSubscriber/B24CommerceSubscriber.php
+++ b/modules/b24_commerce/src/EventSubscriber/B24CommerceSubscriber.php
@@ -171,7 +171,7 @@ class B24CommerceSubscriber implements EventSubscriberInterface {
       ])->execute();
 
     $event = new B24CommerceEvent($order, 'deal', $deal);
-    $this->dispatcher->dispatch(B24CommerceEvent::ENTITY_INSERT, $event);
+    $this->dispatcher->dispatch($event, B24CommerceEvent::ENTITY_INSERT);
     $this->updateProducts($order, 'deal', $deal);
     return $deal ?? NULL;
   }
@@ -195,7 +195,7 @@ class B24CommerceSubscriber implements EventSubscriberInterface {
     $this->moduleHandler->alter('b24_commerce_data', $fields, $context);
     $ext_id = $this->restManager->addLead($fields);
     $event = new B24CommerceEvent($order, 'lead', $ext_id);
-    $this->dispatcher->dispatch(B24CommerceEvent::ENTITY_INSERT, $event);
+    $this->dispatcher->dispatch($event, B24CommerceEvent::ENTITY_INSERT);
     if ($ext_id) {
       $hash = $this->getHash($fields);
       $this->database->insert('b24_reference')
@@ -371,7 +371,7 @@ class B24CommerceSubscriber implements EventSubscriberInterface {
     }
     $this->updateProducts($order);
     $event = new B24CommerceEvent($order, 'lead', $update);
-    $this->dispatcher->dispatch(B24CommerceEvent::ENTITY_UPDATE, $event);
+    $this->dispatcher->dispatch($event, B24CommerceEvent::ENTITY_UPDATE);
     return $update;
   }
 
@@ -483,7 +483,7 @@ class B24CommerceSubscriber implements EventSubscriberInterface {
       $this->moduleHandler->alter('b24_commerce_data', $fields, $context);
       $contact_id = $this->restManager->addContact($fields);
       $event = new B24CommerceEvent($order, 'contact', $contact_id);
-      $this->dispatcher->dispatch(B24CommerceEvent::ENTITY_INSERT, $event);
+      $this->dispatcher->dispatch($event, B24CommerceEvent::ENTITY_INSERT);
     }
     if ($this->moduleHandler->moduleExists('b24_user')) {
       $this->configFactory->getEditable('b24_user.settings')->set('enabled', $user_enabled);
diff --git a/src/Event/B24Event.php b/src/Event/B24Event.php
index fc65775..2fef478 100644
--- a/src/Event/B24Event.php
+++ b/src/Event/B24Event.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Defines the Bitrix24 entity event.
  */
-class B24Event extends Event {
+class B24Event extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Name of the event fired after adding a new Bitrix24 entity.
diff --git a/src/Service/RestManager.php b/src/Service/RestManager.php
index 055f74b..632e033 100644
--- a/src/Service/RestManager.php
+++ b/src/Service/RestManager.php
@@ -227,7 +227,7 @@ class RestManager {
         ]
       );
       $event = new B24Event($b24_entity_name, 'insert', $response);
-      $this->eventDispatcher->dispatch(B24Event::ENTITY_INSERT, $event);
+      $this->eventDispatcher->dispatch($event, B24Event::ENTITY_INSERT);
     }
     return $ext_id;
   }
@@ -264,7 +264,7 @@ class RestManager {
     $this->moduleHandler->alter('b24_push', $fields, $context);
     $response = $this->get("crm.{$b24_entity_name}.update", ['id' => $id,'fields' => $fields, 'params' => $params]);
     $event = new B24Event($b24_entity_name, 'update', $response);
-    $this->eventDispatcher->dispatch(B24Event::ENTITY_UPDATE, $event);
+    $this->eventDispatcher->dispatch($event, B24Event::ENTITY_UPDATE);
     return $response;
   }
 
@@ -413,7 +413,7 @@ class RestManager {
     }
     $response = $this->get("crm.{$b24_entity_name}.delete", ['id' => $id]);
     $event = new B24Event($b24_entity_name, 'delete', $response);
-    $this->eventDispatcher->dispatch(B24Event::ENTITY_DELETE, $event);
+    $this->eventDispatcher->dispatch($event, B24Event::ENTITY_DELETE);
     $result = $response['result'] ?? FALSE;
     return $result;
   }
