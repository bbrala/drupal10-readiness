diff --git a/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php b/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php
index 0b26071..2b00563 100644
--- a/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php
+++ b/modules/entity_share_client/src/Event/RelationshipFieldValueEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Defines a RelationshipFieldValueEvent event.
  */
-class RelationshipFieldValueEvent extends Event {
+class RelationshipFieldValueEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const EVENT_NAME = 'entity_share_client.relationship_field_value';
 
diff --git a/modules/entity_share_client/src/Plugin/EntityShareClient/Processor/EntityReference.php b/modules/entity_share_client/src/Plugin/EntityShareClient/Processor/EntityReference.php
index f17e2db..49966ca 100644
--- a/modules/entity_share_client/src/Plugin/EntityShareClient/Processor/EntityReference.php
+++ b/modules/entity_share_client/src/Plugin/EntityShareClient/Processor/EntityReference.php
@@ -169,7 +169,7 @@ class EntityReference extends ImportProcessorPluginBase implements PluginFormInt
 
             // Allow to alter the field value with an event.
             $event = new RelationshipFieldValueEvent($field, $field_value);
-            $this->eventDispatcher->dispatch(RelationshipFieldValueEvent::EVENT_NAME, $event);
+            $this->eventDispatcher->dispatch($event, RelationshipFieldValueEvent::EVENT_NAME);
             $field_values[] = $event->getFieldValue();
           }
         }
