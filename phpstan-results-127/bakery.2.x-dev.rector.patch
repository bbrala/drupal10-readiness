diff --git a/src/EventSubscriber/BootSubscriber.php b/src/EventSubscriber/BootSubscriber.php
index f8aa7c5..a3a9168 100644
--- a/src/EventSubscriber/BootSubscriber.php
+++ b/src/EventSubscriber/BootSubscriber.php
@@ -84,7 +84,7 @@ class BootSubscriber implements EventSubscriberInterface {
   /**
    * On boot event we need to test the cookie.
    */
-  public function onEvent(GetResponseEvent $event) {
+  public function onEvent(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     try {
       $cookie = $this->kitchen->taste(Kitchen::CHOCOLATE_CHIP);
     }
@@ -133,7 +133,7 @@ class BootSubscriber implements EventSubscriberInterface {
     }
   }
 
-  private function somethingAnonymous(GetResponseEvent $event, array $cookie) {
+  private function somethingAnonymous(\Symfony\Component\HttpKernel\Event\RequestEvent $event, array $cookie) {
     // User is anonymous. If they do not have an account we'll create one by
     // requesting their information from the master site. If they do have an
     // account we may need to correct some disparant information.
@@ -247,7 +247,7 @@ class BootSubscriber implements EventSubscriberInterface {
     return FALSE;
   }
 
-  private function bootstrapAccount(GetResponseEvent $event, array $cookie) {
+  private function bootstrapAccount(\Symfony\Component\HttpKernel\Event\RequestEvent $event, array $cookie) {
     $checks = TRUE;
     /** @var int $mail_count */
     $mail_count = $this->userStorage->getQuery()
diff --git a/tests/src/Functional/BakerySiteTestBase.php b/tests/src/Functional/BakerySiteTestBase.php
index 9f91d3d..182c0b1 100644
--- a/tests/src/Functional/BakerySiteTestBase.php
+++ b/tests/src/Functional/BakerySiteTestBase.php
@@ -12,7 +12,7 @@ class BakerySiteTestBase extends BrowserTestBase {
 
   private $domain;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->domain = preg_replace('/^[^.]+/', '', rtrim($this->baseUrl, '/'));
     $this->config('bakery.settings')
diff --git a/tests/src/Functional/ChildSiteTestBase.php b/tests/src/Functional/ChildSiteTestBase.php
index 3bb2955..f945e67 100644
--- a/tests/src/Functional/ChildSiteTestBase.php
+++ b/tests/src/Functional/ChildSiteTestBase.php
@@ -7,7 +7,7 @@ use Drupal\Core\Url;
 
 class ChildSiteTestBase extends BakerySiteTestBase {
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->config('bakery.settings')
       ->set('bakery_is_master', 0)
diff --git a/tests/src/Functional/DynamicRoutingTest.php b/tests/src/Functional/DynamicRoutingTest.php
index d16f917..000f738 100644
--- a/tests/src/Functional/DynamicRoutingTest.php
+++ b/tests/src/Functional/DynamicRoutingTest.php
@@ -14,7 +14,7 @@ class DynamicRoutingTest extends BakerySiteTestBase {
    */
   private $routeProvider;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->routeProvider = $this->container->get('router.route_provider');
   }
diff --git a/tests/src/Functional/MainSiteCookiesTest.php b/tests/src/Functional/MainSiteCookiesTest.php
index afa9c99..120a7e5 100644
--- a/tests/src/Functional/MainSiteCookiesTest.php
+++ b/tests/src/Functional/MainSiteCookiesTest.php
@@ -51,7 +51,7 @@ class MainSiteCookiesTest extends MainSiteTestBase {
     ], 'Log in');
     $account->sessionId = $this->getSession()->getCookie(\Drupal::service('session_configuration')->getOptions(\Drupal::request())['name']);
     $this->assertFalse($this->drupalUserIsLoggedIn($account), new FormattableMarkup('User %name successfully logged in.', ['%name' => $account->getAccountName()]));
-    $assert_session->assert($this->getSession()->getCookie($cookie_name) === null, 'Cookie is set but should not be.');
+    $this->assertTrue($this->getSession()->getCookie($cookie_name) === null, 'Cookie is set but should not be.');
 
     $this->drupalLogin($account);
     $assert_session->cookieExists($cookie_name);
@@ -71,7 +71,7 @@ class MainSiteCookiesTest extends MainSiteTestBase {
     ], 'Log in');
     $account->sessionId = $this->getSession()->getCookie(\Drupal::service('session_configuration')->getOptions(\Drupal::request())['name']);
     $this->assertFalse($this->drupalUserIsLoggedIn($account), new FormattableMarkup('User %name successfully logged in.', ['%name' => $account->getAccountName()]));
-    $assert_session->assert($this->getSession()->getCookie($cookie_name) === null, 'Cookie is set but should not be.');
+    $this->assertTrue($this->getSession()->getCookie($cookie_name) === null, 'Cookie is set but should not be.');
 
     $this->drupalGet(Url::fromRoute('user.login', [], ['query' => ['bd' => urlencode('https://www.google.org/')]]));
     $this->submitForm([
diff --git a/tests/src/Functional/MainSiteTestBase.php b/tests/src/Functional/MainSiteTestBase.php
index a7ca24e..a7d2fdd 100644
--- a/tests/src/Functional/MainSiteTestBase.php
+++ b/tests/src/Functional/MainSiteTestBase.php
@@ -4,7 +4,7 @@ namespace Drupal\Tests\bakery\Functional;
 
 class MainSiteTestBase extends BakerySiteTestBase {
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->config('bakery.settings')->set('bakery_is_master', 1)->save();
     $this->container->get('router.builder')->rebuild();
diff --git a/tests/src/Unit/BakeryServiceTest.php b/tests/src/Unit/BakeryServiceTest.php
index 8439caf..965e184 100644
--- a/tests/src/Unit/BakeryServiceTest.php
+++ b/tests/src/Unit/BakeryServiceTest.php
@@ -10,7 +10,8 @@ use Drupal\Tests\UnitTestCase;
  */
 class BakeryServiceTest extends UnitTestCase {
 
-  public function setUp() {
+  use \Prophecy\PhpUnit\ProphecyTrait;
+  public function setUp(): void {
     parent::setUp();
     $this->config = $this->prophesize(Config::class);
     $this->getConfigFactoryStub();
diff --git a/tests/src/Unit/Cookies/BrowserCookieTraitTest.php b/tests/src/Unit/Cookies/BrowserCookieTraitTest.php
index 983637b..8c2d8d4 100644
--- a/tests/src/Unit/Cookies/BrowserCookieTraitTest.php
+++ b/tests/src/Unit/Cookies/BrowserCookieTraitTest.php
@@ -13,6 +13,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class BrowserCookieTraitTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @var \Drupal\bakery\Kitchen|\Prophecy\Prophecy\ObjectProphecy
    */
@@ -23,7 +24,7 @@ class BrowserCookieTraitTest extends UnitTestCase {
    */
   protected $bakeryService;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $container = new Container();
     $this->kitchenService = $this->prophesize(Kitchen::class);
@@ -42,6 +43,9 @@ class BrowserCookieTraitTest extends UnitTestCase {
     $this->assertTrue((new class {
       use BrowserCookieTrait;
 
+      /**
+       * @doesNotPerformAssertions
+       */
       public function test() {
         return $this->getIsMain();
       }
@@ -58,6 +62,9 @@ class BrowserCookieTraitTest extends UnitTestCase {
     $this->assertEquals('jibberish', (new class {
       use BrowserCookieTrait;
 
+      /**
+       * @doesNotPerformAssertions
+       */
       public function test() {
         return $this->cookieName('test');
       }
diff --git a/tests/src/Unit/Cookies/ChocolateChipTest.php b/tests/src/Unit/Cookies/ChocolateChipTest.php
index 84ab6aa..5dae8e8 100644
--- a/tests/src/Unit/Cookies/ChocolateChipTest.php
+++ b/tests/src/Unit/Cookies/ChocolateChipTest.php
@@ -17,7 +17,7 @@ class ChocolateChipTest extends UnitTestCase {
     testGetName as traitGetNameTest;
   }
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = ChocolateChip::class;
     $this->cookieName = 'CHOCOLATECHIP';
@@ -36,6 +36,7 @@ class ChocolateChipTest extends UnitTestCase {
    * @covers ::toData
    * @covers ::fromData
    * @dataProvider provideTestData
+   * @doesNotPerformAssertions
    */
   public function testFromData($data) {
     // Mock reasonable function calls based on if cookie is from main site or child.
diff --git a/tests/src/Unit/Cookies/GingerbreadReturnTest.php b/tests/src/Unit/Cookies/GingerbreadReturnTest.php
index 16dec74..cd94727 100644
--- a/tests/src/Unit/Cookies/GingerbreadReturnTest.php
+++ b/tests/src/Unit/Cookies/GingerbreadReturnTest.php
@@ -13,7 +13,7 @@ class GingerbreadReturnTest extends UnitTestCase {
 
   use CookieTestTrait;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = GingerbreadReturn::class;
     $this->cookieName = 'gingerbread';
diff --git a/tests/src/Unit/Cookies/GingerbreadTest.php b/tests/src/Unit/Cookies/GingerbreadTest.php
index ba5fa4d..1ed0089 100644
--- a/tests/src/Unit/Cookies/GingerbreadTest.php
+++ b/tests/src/Unit/Cookies/GingerbreadTest.php
@@ -13,7 +13,7 @@ class GingerbreadTest extends UnitTestCase {
 
   use RemoteCookieTestTrait;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = Gingerbread::class;
     $this->cookieName = 'gingerbread';
diff --git a/tests/src/Unit/Cookies/OatmealCookieTest.php b/tests/src/Unit/Cookies/OatmealCookieTest.php
index 1979f36..d232207 100644
--- a/tests/src/Unit/Cookies/OatmealCookieTest.php
+++ b/tests/src/Unit/Cookies/OatmealCookieTest.php
@@ -16,7 +16,7 @@ class OatmealCookieTest extends UnitTestCase {
     testGetName as traitGetNameTest;
   }
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = OatmealCookie::class;
     $this->cookieName = 'OATMEALCOOKIE';
@@ -36,6 +36,7 @@ class OatmealCookieTest extends UnitTestCase {
    * @covers ::toData
    * @covers ::fromData
    * @dataProvider provideTestData
+   * @doesNotPerformAssertions
    */
   public function testFromData($data) {
     // Mock reasonable function calls based on if cookie is from main site or child.
diff --git a/tests/src/Unit/Cookies/StroopwafelTest.php b/tests/src/Unit/Cookies/StroopwafelTest.php
index e9ee44d..38d2427 100644
--- a/tests/src/Unit/Cookies/StroopwafelTest.php
+++ b/tests/src/Unit/Cookies/StroopwafelTest.php
@@ -14,7 +14,7 @@ use Drupal\Tests\UnitTestCase;
 class StroopwafelTest extends UnitTestCase {
   use RemoteCookieTestTrait;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cookie = Stroopwafel::class;
     $this->cookieName = 'stroopwafel';
diff --git a/tests/src/Unit/EventSubscriber/CookieMonsterTest.php b/tests/src/Unit/EventSubscriber/CookieMonsterTest.php
index 387d586..30f7676 100644
--- a/tests/src/Unit/EventSubscriber/CookieMonsterTest.php
+++ b/tests/src/Unit/EventSubscriber/CookieMonsterTest.php
@@ -23,6 +23,7 @@ use Symfony\Component\HttpKernel\HttpKernelInterface;
  */
 class CookieMonsterTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @var \Drupal\bakery\EventSubscriber\CookieMonster
    */
@@ -43,7 +44,7 @@ class CookieMonsterTest extends UnitTestCase {
    */
   private $time;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->request = new RequestStack();
     $this->request->push(new Request());
@@ -90,8 +91,8 @@ class CookieMonsterTest extends UnitTestCase {
       Cookie::create('cookie1', 'foo', $expire, '/', '.example.com', $secure),
       Cookie::create('cookie2', 'bar', $expire, '/', '.example.com', $secure),
       // This might cause problems with Symfony 5?
-      new Cookie('cookie3', NULL, 1, '/', '.example.com', $secure, TRUE, FALSE, NULL),
-      new Cookie('cookie3', NULL, 1, '/', '', $secure, TRUE, FALSE, NULL),
+      \Symfony\Component\HttpFoundation\Cookie::create('cookie3', NULL, 1, '/', '.example.com', $secure, TRUE, FALSE, NULL),
+      \Symfony\Component\HttpFoundation\Cookie::create('cookie3', NULL, 1, '/', '', $secure, TRUE, FALSE, NULL),
     ], $response->headers->getCookies());
   }
 
diff --git a/tests/src/Unit/KitchenTest.php b/tests/src/Unit/KitchenTest.php
index 36c2d24..ca7569a 100644
--- a/tests/src/Unit/KitchenTest.php
+++ b/tests/src/Unit/KitchenTest.php
@@ -42,6 +42,7 @@ use Symfony\Component\HttpFoundation\Session\Flash\FlashBag;
  */
 class KitchenTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @var \Drupal\Core\Http\RequestStack
    */
@@ -92,7 +93,7 @@ class KitchenTest extends UnitTestCase {
    */
   private $cookieJar;
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->request = new RequestStack();
     $this->request->push(new Request());
