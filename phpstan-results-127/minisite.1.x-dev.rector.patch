diff --git a/src/EventSubscriber/AliasSubscriber.php b/src/EventSubscriber/AliasSubscriber.php
index 97ca5cb..2f07a99 100644
--- a/src/EventSubscriber/AliasSubscriber.php
+++ b/src/EventSubscriber/AliasSubscriber.php
@@ -20,10 +20,10 @@ class AliasSubscriber implements EventSubscriberInterface {
   /**
    * Set Minisite delivery controller if request URI matches asset alias.
    *
-   * @param Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   Event that is created to create a response for a request.
    */
-  public function onRequestSetController(GetResponseEvent $event) {
+  public function onRequestSetController(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     // Do not alter non-master request (this is a case when an exception is
     // thrown in controller).
     if (!$event->isMasterRequest()) {
diff --git a/src/LegacyWrapper.php b/src/LegacyWrapper.php
index 3b19f2b..03b0be1 100644
--- a/src/LegacyWrapper.php
+++ b/src/LegacyWrapper.php
@@ -31,7 +31,7 @@ class LegacyWrapper {
     }
 
     if (function_exists('file_scan_directory')) {
-      return file_scan_directory($dir, $mask, $options);
+      return \Drupal::service('file_system')->scanDirectory($dir, $mask, $options);
     }
 
     throw new \RuntimeException('Unable to find compatible function');
@@ -69,7 +69,7 @@ class LegacyWrapper {
     }
 
     if (function_exists('entity_get_display')) {
-      return entity_get_display($entity_type, $bundle, $view_mode);
+      return \Drupal::service('entity_display.repository')->getViewDisplay($entity_type, $bundle, $view_mode);
     }
 
     throw new \RuntimeException('Unable to find compatible function');
@@ -89,7 +89,7 @@ class LegacyWrapper {
     }
 
     if (function_exists('entity_get_display')) {
-      return entity_get_form_display($entity_type, $bundle, $form_mode);
+      return \Drupal::service('entity_display.repository')->getFormDisplay($entity_type, $bundle, $form_mode);
     }
 
     throw new \RuntimeException('Unable to find compatible function');
@@ -112,7 +112,7 @@ class LegacyWrapper {
     }
 
     if (function_exists('file_uri_target')) {
-      return file_uri_target($uri);
+      return \Drupal::service('stream_wrapper_manager')->getTarget($uri);
     }
 
     throw new \RuntimeException('Unable to find compatible function');
diff --git a/tests/src/Functional/AssetTest.php b/tests/src/Functional/AssetTest.php
index 1ca56e1..8303f73 100644
--- a/tests/src/Functional/AssetTest.php
+++ b/tests/src/Functional/AssetTest.php
@@ -32,14 +32,14 @@ class AssetTest extends MinisiteTestBase {
     );
 
     // Assert getters without alias set.
-    $this->assertEqual('public://minisite/static/24c22dd1-2cf1-47ae-ac8a-23a7ff8b86c5/rootpath/subpath/page1.html', $asset->getUri());
-    $this->assertContains('minisite/static/24c22dd1-2cf1-47ae-ac8a-23a7ff8b86c5/rootpath/subpath/page1.html', $asset->getUrl());
+    $this->assertEquals('public://minisite/static/24c22dd1-2cf1-47ae-ac8a-23a7ff8b86c5/rootpath/subpath/page1.html', $asset->getUri());
+    $this->assertStringContainsString('minisite/static/24c22dd1-2cf1-47ae-ac8a-23a7ff8b86c5/rootpath/subpath/page1.html', $asset->getUrl());
 
     // Assert getters with alias set.
     $asset->setAliasPrefix('some/alias');
-    $this->assertEqual('public://minisite/static/24c22dd1-2cf1-47ae-ac8a-23a7ff8b86c5/rootpath/subpath/page1.html', $asset->getUri());
-    $this->assertContains('/some/alias/rootpath/subpath/page1.html', $asset->getUrl());
-    $this->assertNotContains('minisite/static/24c22dd1-2cf1-47ae-ac8a-23a7ff8b86c5', $asset->getUrl());
+    $this->assertEquals('public://minisite/static/24c22dd1-2cf1-47ae-ac8a-23a7ff8b86c5/rootpath/subpath/page1.html', $asset->getUri());
+    $this->assertStringContainsString('/some/alias/rootpath/subpath/page1.html', $asset->getUrl());
+    $this->assertStringNotContainsString('minisite/static/24c22dd1-2cf1-47ae-ac8a-23a7ff8b86c5', $asset->getUrl());
 
     // Assert other getters.
     $this->assertEquals(Language::LANGCODE_DEFAULT, $asset->getLanguage());
@@ -170,7 +170,7 @@ class AssetTest extends MinisiteTestBase {
       $path
     );
 
-    $this->assertEqual($instance->isIndex(), $is_index);
+    $this->assertEquals($instance->isIndex(), $is_index);
   }
 
   /**
@@ -225,7 +225,7 @@ class AssetTest extends MinisiteTestBase {
     $alias_prefix = '/' . $randomizer->name(2048 - (strlen($file_path)) - 2);
     $full_alias = $alias_prefix . '/' . $dir_path . $file_path;
     $asset->setAliasPrefix($alias_prefix);
-    $this->assertEqual($asset->getUrl(), $full_alias);
+    $this->assertEquals($asset->getUrl(), $full_alias);
 
     $asset->save();
 
