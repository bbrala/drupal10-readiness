diff --git a/tests/src/Kernel/PotxTest.php b/tests/src/Kernel/PotxTest.php
index a51ee17..10c42a2 100644
--- a/tests/src/Kernel/PotxTest.php
+++ b/tests/src/Kernel/PotxTest.php
@@ -21,7 +21,7 @@ class PotxTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Add potx.inc which we test for its functionality.
@@ -718,7 +718,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('MsgID "@raw" found', ['@raw' => $string]);
     }
-    $this->assert(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"') !== FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"') !== FALSE, $message, $group);
   }
 
   /**
@@ -728,7 +728,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('MsgID "@raw" not found', ['@raw' => $string]);
     }
-    $this->assert(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"') === FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"') === FALSE, $message, $group);
   }
 
   /**
@@ -738,7 +738,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('MsgID "@raw" in context "@context" found', ['@raw' => $string, '@context' => $context]);
     }
-    $this->assert(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . '"') !== FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . '"') !== FALSE, $message, $group);
   }
 
   /**
@@ -748,7 +748,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('No MsgID "@raw" in context "@context" found', ['@raw' => $string, '@context' => $context]);
     }
-    $this->assert(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"' . "\nmsgctxt \"" . _potx_format_quoted_string('"' . $context . '"') . '"') === FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"' . "\nmsgctxt \"" . _potx_format_quoted_string('"' . $context . '"') . '"') === FALSE, $message, $group);
   }
 
   /**
@@ -758,7 +758,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('Plural ID "@raw" found', ['@raw' => $string]);
     }
-    $this->assert(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') !== FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') !== FALSE, $message, $group);
   }
 
   /**
@@ -768,7 +768,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('Plural ID "@raw" found with context "@context"', ['@raw' => $string, '@context' => $context]);
     }
-    $this->assert(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') !== FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') !== FALSE, $message, $group);
   }
 
   /**
@@ -778,7 +778,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('No plural ID "@raw" found with context "@context"', ['@raw' => $string, '@context' => $context]);
     }
-    $this->assert(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') === FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') === FALSE, $message, $group);
   }
 
   /**
@@ -788,13 +788,13 @@ class TestConstraint {
    *   The list of expected errors.
    */
   private function assertPotxErrors($expected_errors) {
-    $this->assert(count($this->potx_status) == count($expected_errors), count($expected_errors) . ' error messages found');
+    $this->assertTrue(count($this->potx_status) == count($expected_errors), count($expected_errors) . ' error messages found');
 
     $potx_errors = array_column($this->potx_status, 0);
     foreach ($expected_errors as $assert_msg => $error_msg) {
       $key = array_search($error_msg, $potx_errors);
 
-      $this->assert($key !== FALSE, $assert_msg . ' found');
+      $this->assertTrue($key !== FALSE, $assert_msg . ' found');
 
       if ($key !== FALSE) {
         unset($potx_errors[$key]);
@@ -813,7 +813,6 @@ class TestConstraint {
     }
     $output_path = "$file_dir/$basename." . $this->randomName(10) . '.html';
     $rv = file_put_contents($output_path, $this->drupalGetContent());
-    $this->pass("$description: " . l(t('Contents of result page'), $output_path));
   }
 
 }
