diff --git a/form_display_visibility.info.yml b/form_display_visibility.info.yml
index 102e94d..3b1a9b1 100644
--- a/form_display_visibility.info.yml
+++ b/form_display_visibility.info.yml
@@ -1,6 +1,6 @@
 name: "Entity Form Display Visibility"
 description: "Allows visibility settings per field on the entity form display"
-core_version_requirement: ^9
+core_version_requirement: ^9 || ^10
 type: module
 dependencies:
   - drupal:field_ui
diff --git a/tests/src/Kernel/FormDisplayVisibilityAccessByPermissionTest.php b/tests/src/Kernel/FormDisplayVisibilityAccessByPermissionTest.php
index 43a52c4..f8e33e2 100644
--- a/tests/src/Kernel/FormDisplayVisibilityAccessByPermissionTest.php
+++ b/tests/src/Kernel/FormDisplayVisibilityAccessByPermissionTest.php
@@ -98,7 +98,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('entity_test');
     $this->installEntitySchema('user');
@@ -150,7 +150,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'third_party_settings' => [],
       'region' => 'content',
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ -185,7 +185,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ -220,7 +220,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ -255,7 +255,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser(['view test entity']);
     $this->setCurrentUser($normal_user);
@@ -290,7 +290,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ -325,7 +325,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser();
     $this->setCurrentUser($normal_user);
@@ -360,7 +360,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser();
     $normal_user->addRole($this->role->id());
@@ -400,7 +400,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser(['view test entity']);
     $normal_user->addRole($this->role->id());
@@ -440,7 +440,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser(['view test entity']);
     $this->setCurrentUser($normal_user);
@@ -479,7 +479,7 @@ class FormDisplayVisibilityAccessByPermissionTest extends KernelTestBase {
       'region' => 'content',
       'third_party_settings' => $third_party_settings,
     ];
-    $this->assertEqual($form_display->getComponent($this->fieldName), $expected);
+    $this->assertEquals($form_display->getComponent($this->fieldName), $expected);
 
     $normal_user = $this->createUser();
     $normal_user->addRole($this->role->id());
