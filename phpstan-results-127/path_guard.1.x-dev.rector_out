[parsing] modules/contrib/path_guard/path_guard.module
[refactoring] modules/contrib/path_guard/path_guard.module
[post rectors] modules/contrib/path_guard/path_guard.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/path_guard/path_guard.module
[parsing] modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPath.php
[refactoring] modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPath.php
[post rectors] modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPath.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPath.php
[parsing] modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPathValidator.php
[refactoring] modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPathValidator.php
[post rectors] modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPathValidator.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPathValidator.php
[parsing] modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php
[refactoring] modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php
[post rectors] modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php
[refactoring] modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php
[post rectors] modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php

1 file with changes
===================

1) modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create test user and log in.
@@ @@
     $assert_session = $this->assertSession();

     $this->drupalGet('node/add/page');
+    $this->drupalGet('node/add/page');

     // Tests existing path.
-    $this->drupalPostForm('node/add/page', [
+    $this->submitForm([
       'path[0][alias]' => '/node/add/page',
       'title[0][value]' => 'Page',
     ], 'Save');

     $assert_session->pageTextContains('The path is already in use.');
+    $this->drupalGet('node/add/page');

     // Tests not existing path.
-    $this->drupalPostForm('node/add/page', [
+    $this->submitForm([
       'path[0][alias]' => '/page',
       'title[0][value]' => 'Page',
     ], 'Save');

     $assert_session->pageTextContains('Basic page Page has been created.');
+    $this->drupalGet('node/1/edit');

     // Tests updating node with the existing path.
-    $this->drupalPostForm('node/1/edit', [
+    $this->submitForm([
       'title[0][value]' => 'Page updated',
     ], 'Save');

     $assert_session->pageTextContains('Basic page Page updated has been updated.');
+    $this->drupalGet('node/add/page');

     // Tests omitting path.
-    $this->drupalPostForm('node/add/page', [
+    $this->submitForm([
       'title[0][value]' => 'Page 2',
     ], 'Save');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

