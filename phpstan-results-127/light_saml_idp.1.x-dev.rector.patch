diff --git a/src/EventSubscriber/StoreAnonymousSAMLRequestSubscriber.php b/src/EventSubscriber/StoreAnonymousSAMLRequestSubscriber.php
index b0fc685..5889614 100644
--- a/src/EventSubscriber/StoreAnonymousSAMLRequestSubscriber.php
+++ b/src/EventSubscriber/StoreAnonymousSAMLRequestSubscriber.php
@@ -28,10 +28,10 @@ class StoreAnonymousSAMLRequestSubscriber implements EventSubscriberInterface {
   /**
    * Store the SAML request data in the user's session.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    */
-  public function storeSAMLRequest(GetResponseForExceptionEvent $event) {
-    if ($event->getException() instanceof AccessDeniedHttpException && $this->account->isAnonymous()) {
+  public function storeSAMLRequest(\Symfony\Component\HttpKernel\Event\ExceptionEvent $event) {
+    if ($event->getThrowable() instanceof AccessDeniedHttpException && $this->account->isAnonymous()) {
       $request = $event->getRequest();
       $routeName = RouteMatch::createFromRequest($request)->getRouteName();
       $samlRequest = $request->get('SAMLRequest');
