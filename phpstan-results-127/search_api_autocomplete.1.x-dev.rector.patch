diff --git a/tests/src/Functional/CacheInvalidationTest.php b/tests/src/Functional/CacheInvalidationTest.php
index db424bd..93a7945 100644
--- a/tests/src/Functional/CacheInvalidationTest.php
+++ b/tests/src/Functional/CacheInvalidationTest.php
@@ -30,7 +30,7 @@ class CacheInvalidationTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Change the view to use an exposed form block.
diff --git a/tests/src/FunctionalJavascript/IntegrationTest.php b/tests/src/FunctionalJavascript/IntegrationTest.php
index 67f0ec4..848bd5e 100644
--- a/tests/src/FunctionalJavascript/IntegrationTest.php
+++ b/tests/src/FunctionalJavascript/IntegrationTest.php
@@ -57,7 +57,7 @@ class IntegrationTest extends IntegrationTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
@@ -277,7 +277,7 @@ class IntegrationTest extends IntegrationTestBase {
     $keys = urlencode($keys);
     // @todo Replace with $assert_session->addressMatches() (and prepend "^")
     //   once we depend on Drupal 9.1+.
-    $this->assertRegExp("#/search-api-autocomplete-test\\?(?:.*&)?keys=$keys#", $this->getUrl());
+    $this->assertMatchesRegularExpression("#/search-api-autocomplete-test\\?(?:.*&)?keys=$keys#", $this->getUrl());
 
     // Check that autocomplete in the "Name" filter works, too, and that it sets
     // the correct fields on the query.
@@ -501,7 +501,7 @@ class IntegrationTest extends IntegrationTestBase {
         $this->assertStringContainsString($this->searchId, $element->getAttribute('data-search-api-autocomplete-search'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
       }
       else {
-        $this->assertContains($this->searchId, $element->getAttribute('data-search-api-autocomplete-search'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
+        $this->assertStringContainsString($this->searchId, $element->getAttribute('data-search-api-autocomplete-search'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
       }
       $this->assertTrue($element->hasClass('form-autocomplete'), "Autocomplete should not be enabled for $user_type user without the necessary permission.");
 
