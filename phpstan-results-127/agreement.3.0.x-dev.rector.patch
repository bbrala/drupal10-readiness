diff --git a/src/AgreementHandler.php b/src/AgreementHandler.php
index 39848b2..bd190ce 100644
--- a/src/AgreementHandler.php
+++ b/src/AgreementHandler.php
@@ -226,7 +226,7 @@ class AgreementHandler implements AgreementHandlerInterface {
     elseif ($agreement->agreeOnce()) {
       $expire = new \DateTime('+10 years');
     }
-    return new Cookie($cookieName, $agreed, $expire, '/', NULL, NULL, 'lax');
+    return \Symfony\Component\HttpFoundation\Cookie::create($cookieName, $agreed, $expire, '/', NULL, NULL, 'lax');
   }
 
   /**
diff --git a/tests/src/Unit/AgreementHandlerTest.php b/tests/src/Unit/AgreementHandlerTest.php
index 1692d7c..4ada01c 100644
--- a/tests/src/Unit/AgreementHandlerTest.php
+++ b/tests/src/Unit/AgreementHandlerTest.php
@@ -17,6 +17,7 @@ use Symfony\Component\HttpFoundation\RequestStack;
  */
 class AgreementHandlerTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Asserts that database operation errors are handled.
    *
@@ -45,9 +46,7 @@ class AgreementHandlerTest extends UnitTestCase {
       ->willReturn($transactionProphet->reveal());
 
     // Prophecy does not allow mocking objects that return $this because.
-    $delete = $this->getMockBuilder('\Drupal\Core\Database\Query\Delete')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $delete = $this->createMock('\Drupal\Core\Database\Query\Delete');
     $delete->expects($this->any())
       ->method('condition')
       ->willReturnSelf();
@@ -61,9 +60,7 @@ class AgreementHandlerTest extends UnitTestCase {
         return 3;
       });
 
-    $insert = $this->getMockBuilder('\Drupal\Core\Database\Query\Insert')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $insert = $this->createMock('\Drupal\Core\Database\Query\Insert');
     $insert->expects($this->any())
       ->method('fields')
       ->willReturnSelf();
@@ -146,9 +143,7 @@ class AgreementHandlerTest extends UnitTestCase {
     $statementProphet->fetchField()->willReturn($agreed);
 
     // Mocks select query using mock object because prophecy.
-    $select = $this->getMockBuilder('\Drupal\Core\Database\Query\SelectInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $select = $this->createMock('\Drupal\Core\Database\Query\SelectInterface');
     $select->expects($this->any())
       ->method('fields')
       ->willReturnSelf();
diff --git a/tests/src/Unit/EventSubscriber/AgreementSubscriberTest.php b/tests/src/Unit/EventSubscriber/AgreementSubscriberTest.php
index da40497..63f74c6 100644
--- a/tests/src/Unit/EventSubscriber/AgreementSubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/AgreementSubscriberTest.php
@@ -18,6 +18,7 @@ use Symfony\Component\HttpKernel\HttpKernelInterface;
  */
 class AgreementSubscriberTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Asserts that check for redirection method is functional.
    *
diff --git a/tests/src/Unit/Plugin/views/field/AgreementEntityTest.php b/tests/src/Unit/Plugin/views/field/AgreementEntityTest.php
index 1589613..8615491 100644
--- a/tests/src/Unit/Plugin/views/field/AgreementEntityTest.php
+++ b/tests/src/Unit/Plugin/views/field/AgreementEntityTest.php
@@ -15,6 +15,7 @@ use Drupal\views\ResultRow;
  */
 class AgreementEntityTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Agreement entity plugin.
    *
