diff --git a/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php b/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php
index 5730511..33c78ff 100644
--- a/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php
+++ b/modules/actions_permissions/src/EventSubscriber/ActionsPermissionsEventSubscriber.php
@@ -31,10 +31,10 @@ class ActionsPermissionsEventSubscriber implements EventSubscriberInterface {
   /**
    * Alter the actions' definitions.
    *
-   * @var \Symfony\Component\EventDispatcher\Event $event
+   * @var \Symfony\Contracts\EventDispatcher\Event $event
    *   The event to respond to.
    */
-  public function alterActions(Event $event) {
+  public function alterActions(\Symfony\Contracts\EventDispatcher\Event $event) {
 
     // Don't alter definitions if this is invoked by the
     // own permissions creating method.
diff --git a/src/Service/ViewsBulkOperationsActionManager.php b/src/Service/ViewsBulkOperationsActionManager.php
index 6ac13cc..04b627e 100644
--- a/src/Service/ViewsBulkOperationsActionManager.php
+++ b/src/Service/ViewsBulkOperationsActionManager.php
@@ -213,7 +213,7 @@ class ViewsBulkOperationsActionManager extends ActionManager {
   protected function alterDefinitions(&$definitions) {
     // Let other modules change definitions.
     // Main purpose: Action permissions bridge.
-    $event = new Event();
+    $event = new \Symfony\Contracts\EventDispatcher\Event();
     $event->alterParameters = $this->alterParameters;
     $event->definitions = &$definitions;
 
diff --git a/src/Service/ViewsBulkOperationsViewData.php b/src/Service/ViewsBulkOperationsViewData.php
index a96643b..0951a85 100644
--- a/src/Service/ViewsBulkOperationsViewData.php
+++ b/src/Service/ViewsBulkOperationsViewData.php
@@ -94,7 +94,7 @@ class ViewsBulkOperationsViewData implements ViewsBulkOperationsViewDataInterfac
 
     // @todo Remove the conditional when Drupal 8 is no longer supported.
     if (floatval(\Drupal::VERSION) < 9) {
-      $this->eventDispatcher->dispatch(ViewsBulkOperationsEvent::NAME, $event);
+      $this->eventDispatcher->dispatch($event, ViewsBulkOperationsEvent::NAME);
     }
     else {
       $this->eventDispatcher->dispatch($event, ViewsBulkOperationsEvent::NAME);
diff --git a/src/ViewsBulkOperationsEvent.php b/src/ViewsBulkOperationsEvent.php
index 44ad3e5..9b14ead 100644
--- a/src/ViewsBulkOperationsEvent.php
+++ b/src/ViewsBulkOperationsEvent.php
@@ -8,7 +8,7 @@ use Drupal\views\ViewExecutable;
 /**
  * Defines Views Bulk Operations event type.
  */
-class ViewsBulkOperationsEvent extends Event {
+class ViewsBulkOperationsEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const NAME = 'views_bulk_operations.view_data';
 
diff --git a/tests/src/Functional/DrushCommandsTest.php b/tests/src/Functional/DrushCommandsTest.php
index ab7dc1a..1f014a7 100644
--- a/tests/src/Functional/DrushCommandsTest.php
+++ b/tests/src/Functional/DrushCommandsTest.php
@@ -34,7 +34,7 @@ class DrushCommandsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create some nodes for testing.
