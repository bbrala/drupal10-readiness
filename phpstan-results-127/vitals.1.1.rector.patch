diff --git a/tests/src/Functional/VitalsTest.php b/tests/src/Functional/VitalsTest.php
index fd49249..bbd04ee 100644
--- a/tests/src/Functional/VitalsTest.php
+++ b/tests/src/Functional/VitalsTest.php
@@ -31,7 +31,7 @@ class VitalsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $user = $this->drupalCreateUser(['access content']);
     $this->drupalLogin($user);
@@ -48,11 +48,23 @@ class VitalsTest extends BrowserTestBase {
     $this->drupalGet($url);
 
     // Checking for the keys we know should exist.
-    $this->assertResponse(200);
-    $this->assertText('php_version');
-    $this->assertText('cms_version');
-    $this->assertText('security_updates');
-    $this->assertText('pending_updates');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('php_version');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('cms_version');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('security_updates');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('pending_updates');
   }
 
   /**
@@ -63,7 +75,7 @@ class VitalsTest extends BrowserTestBase {
     $config->set('vitals_unauthorized_action', Vitals::VITALS_404)->save();
 
     $this->drupalGet('vitals/invalid-token');
-    $this->assertResponse(404);
+    $this->assertSession()->statusCodeEquals(404);
   }
 
   /**
@@ -76,7 +88,7 @@ class VitalsTest extends BrowserTestBase {
     // Simulate and check several invalid requests.
     for ($i = 0; $i < 11; $i++) {
       $this->drupalGet('vitals/invalid-token');
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
     }
 
     // Simulate a valid request and ensure it is rejected.
@@ -85,7 +97,7 @@ class VitalsTest extends BrowserTestBase {
     $url = Url::fromRoute('vitals.content', ['token' => $token])->toString();
 
     $this->drupalGet($url);
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -98,7 +110,7 @@ class VitalsTest extends BrowserTestBase {
     // Simulate and check several invalid requests.
     for ($i = 0; $i < 11; $i++) {
       $this->drupalGet('vitals/invalid-token');
-      $this->assertResponse(404);
+      $this->assertSession()->statusCodeEquals(404);
     }
 
     // Simulate a valid request and ensure it is rejected.
@@ -107,7 +119,7 @@ class VitalsTest extends BrowserTestBase {
     $url = Url::fromRoute('vitals.content', ['token' => $token])->toString();
 
     $this->drupalGet($url);
-    $this->assertResponse(404);
+    $this->assertSession()->statusCodeEquals(404);
   }
 
   /**
@@ -120,7 +132,7 @@ class VitalsTest extends BrowserTestBase {
     // Simulate and check several invalid requests.
     for ($i = 0; $i < 5; $i++) {
       $this->drupalGet('vitals/invalid-token');
-      $this->assertResponse(404);
+      $this->assertSession()->statusCodeEquals(404);
     }
 
     // Simulate a valid request and ensure it is rejected.
@@ -129,7 +141,7 @@ class VitalsTest extends BrowserTestBase {
     $url = Url::fromRoute('vitals.content', ['token' => $token])->toString();
 
     $this->drupalGet($url);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
