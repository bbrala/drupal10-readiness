diff --git a/src/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollector.php b/src/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollector.php
index 1adbd9c..dacd2b1 100644
--- a/src/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollector.php
+++ b/src/EventSubscriber/DependencyCollector/ConfigEntityDependencyCollector.php
@@ -75,7 +75,7 @@ class ConfigEntityDependencyCollector extends BaseDependencyCollector {
           if ($sub_entity) {
             $sub_wrapper = new DependentEntityWrapper($sub_entity);
             $config_dependency_event = new FilterDependencyConfigEntityEvent($sub_wrapper);
-            $dispatcher->dispatch(DependencyCalculatorEvents::FILTER_CONFIG_ENTITIES, $config_dependency_event);
+            $dispatcher->dispatch($config_dependency_event, DependencyCalculatorEvents::FILTER_CONFIG_ENTITIES);
             if (!$config_dependency_event->isCalculable()) {
               continue;
             }
diff --git a/src/FieldExtractor.php b/src/FieldExtractor.php
index 54da8a4..fcc8482 100644
--- a/src/FieldExtractor.php
+++ b/src/FieldExtractor.php
@@ -47,7 +47,7 @@ class FieldExtractor {
       $event = new FilterDependencyCalculationFieldsEvent($entity, ...$fields);
       /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher */
       $dispatcher = \Drupal::service('event_dispatcher');
-      $dispatcher->dispatch(DependencyCalculatorEvents::FILTER_FIELDS, $event);
+      $dispatcher->dispatch($event, DependencyCalculatorEvents::FILTER_FIELDS);
       $fields = $event->getFields();
     }
     return $fields;
diff --git a/tests/src/Kernel/EventSubscriber/DependencyCollector/EmbeddedImagesCollectorTest.php b/tests/src/Kernel/EventSubscriber/DependencyCollector/EmbeddedImagesCollectorTest.php
index a754ed4..746fcbc 100644
--- a/tests/src/Kernel/EventSubscriber/DependencyCollector/EmbeddedImagesCollectorTest.php
+++ b/tests/src/Kernel/EventSubscriber/DependencyCollector/EmbeddedImagesCollectorTest.php
@@ -117,9 +117,7 @@ class EmbeddedImagesCollectorTest extends KernelTestBase {
    * @dataProvider dependenciesCalculationProvider
    */
   public function testDependenciesCalculationWithoutImagesCollector(array $files_ids, array $usages) {
-    $mock = $this->getMockBuilder(EmbeddedImagesCollector::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $mock = $this->createMock(EmbeddedImagesCollector::class);
     \Drupal::getContainer()->set('embedded_images.calculator', $mock);
 
     $node = $this->createNode();
