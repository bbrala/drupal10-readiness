[parsing] modules/contrib/m4032404/src/EventSubscriber/M4032404EventSubscriber.php
[refactoring] modules/contrib/m4032404/src/EventSubscriber/M4032404EventSubscriber.php
[post rectors] modules/contrib/m4032404/src/EventSubscriber/M4032404EventSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/m4032404/src/EventSubscriber/M4032404EventSubscriber.php
[refactoring] modules/contrib/m4032404/src/EventSubscriber/M4032404EventSubscriber.php
[post rectors] modules/contrib/m4032404/src/EventSubscriber/M4032404EventSubscriber.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/m4032404/src/EventSubscriber/M4032404EventSubscriber.php
[parsing] modules/contrib/m4032404/src/Form/M4032404Form.php
[refactoring] modules/contrib/m4032404/src/Form/M4032404Form.php
[post rectors] modules/contrib/m4032404/src/Form/M4032404Form.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/m4032404/src/Form/M4032404Form.php
[parsing] modules/contrib/m4032404/tests/src/Functional/M4032404TestCaseTest.php
[refactoring] modules/contrib/m4032404/tests/src/Functional/M4032404TestCaseTest.php
[post rectors] modules/contrib/m4032404/tests/src/Functional/M4032404TestCaseTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/m4032404/tests/src/Functional/M4032404TestCaseTest.php
[refactoring] modules/contrib/m4032404/tests/src/Functional/M4032404TestCaseTest.php
[post rectors] modules/contrib/m4032404/tests/src/Functional/M4032404TestCaseTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/m4032404/tests/src/Functional/M4032404TestCaseTest.php
[parsing] modules/contrib/m4032404/tests/src/Unit/EventSubscriber/M4032404EventSubscriberTest.php
[refactoring] modules/contrib/m4032404/tests/src/Unit/EventSubscriber/M4032404EventSubscriberTest.php
[post rectors] modules/contrib/m4032404/tests/src/Unit/EventSubscriber/M4032404EventSubscriberTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/m4032404/tests/src/Unit/EventSubscriber/M4032404EventSubscriberTest.php
[refactoring] modules/contrib/m4032404/tests/src/Unit/EventSubscriber/M4032404EventSubscriberTest.php
[post rectors] modules/contrib/m4032404/tests/src/Unit/EventSubscriber/M4032404EventSubscriberTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/m4032404/tests/src/Unit/EventSubscriber/M4032404EventSubscriberTest.php

3 files with changes
====================

1) modules/contrib/m4032404/tests/src/Unit/EventSubscriber/M4032404EventSubscriberTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The event.
    *
-   * @var \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent
+   * @var \Symfony\Component\HttpKernel\Event\ExceptionEvent
    */
   protected $event;

@@ @@
   /**
    * The admin context.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject|\Drupal\Core\Routing\AdminContext
+   * @var \PHPUnit\Framework\MockObject\MockObject|\Drupal\Core\Routing\AdminContext
    */
   protected $adminContext;

@@ @@
   /**
    * The current user.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject|\Drupal\Core\Session\AccountProxy
+   * @var \PHPUnit\Framework\MockObject\MockObject|\Drupal\Core\Session\AccountProxy
    */
   protected $currentUser;

@@ @@
   /**
    * The config factory.
    *
-   * @var \PHPUnit_Framework_MockObject_MockBuilder|\Drupal\Core\Config\ConfigFactoryInterface
+   * @var \PHPUnit\Framework\MockObject\MockBuilder|\Drupal\Core\Config\ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

-    $this->adminContext = $this->getMockBuilder('\Drupal\Core\Routing\AdminContext')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $this->currentUser = $this->getMockBuilder('\Drupal\Core\Session\AccountProxy')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->adminContext = $this->createMock('\Drupal\Core\Routing\AdminContext');
+    $this->currentUser = $this->createMock('\Drupal\Core\Session\AccountProxy');

     $kernel = $this->createMock('\Symfony\Component\HttpKernel\HttpKernelInterface');
     $request = new Request();

-    $this->event = new GetResponseForExceptionEvent($kernel, $request, HttpKernelInterface::MASTER_REQUEST, new AccessDeniedHttpException());
+    $this->event = new \Symfony\Component\HttpKernel\Event\ExceptionEvent($kernel, $request, HttpKernelInterface::MASTER_REQUEST, new AccessDeniedHttpException());
   }

   /**
@@ @@
     $subscriber = new M4032404EventSubscriber($this->configFactory, $this->adminContext, $this->currentUser);
     $subscriber->onAccessDeniedException($this->event);

-    $e = $this->event->getException();
+    $e = $this->event->getThrowable();

     $this->assertTrue($e instanceof NotFoundHttpException);

@@ @@
     $subscriber = new M4032404EventSubscriber($this->configFactory, $this->adminContext, $this->currentUser);
     $subscriber->onAccessDeniedException($this->event);

-    $e = $this->event->getException();
+    $e = $this->event->getThrowable();

     $this->assertTrue($e instanceof NotFoundHttpException);
   }
@@ @@
     $subscriber = new M4032404EventSubscriber($this->configFactory, $this->adminContext, $this->currentUser);
     $subscriber->onAccessDeniedException($this->event);

-    $e = $this->event->getException();
+    $e = $this->event->getThrowable();

     $this->assertTrue($e instanceof AccessDeniedHttpException);
   }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameMethodRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/m4032404/tests/src/Functional/M4032404TestCaseTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * Setup the default environment settings.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create and log in our privileged user.
@@ @@
    */
   public function testM4032404Test404() {
     $this->drupalGet('admin');
-    $this->assertResponse(404, 'Anonymous users get a 404 instead of a 403.');
+    $this->assertSession()->statusCodeEquals(404, 'Anonymous users get a 404 instead of a 403.');
     $this->drupalGet('user/1');
-    $this->assertResponse(404, 'User gets a 404 instead of a 403 on non-admin paths.');
+    $this->assertSession()->statusCodeEquals(404, 'User gets a 404 instead of a 403 on non-admin paths.');

     // Set admin-only.
     $this->config('m4032404.settings')->set('admin_only', TRUE)->save();
     $this->drupalGet('user/1');
-    $this->assertResponse(403, 'User gets a 403 on non-admin paths when admin-only is configured.');
+    $this->assertSession()->statusCodeEquals(403, 'User gets a 403 on non-admin paths when admin-only is configured.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/m4032404/src/EventSubscriber/M4032404EventSubscriber.php:55

    ---------- begin diff ----------
@@ @@
   /**
    * Set the properly exception for event.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
    *   The response for exception event.
    */
-  public function onAccessDeniedException(GetResponseForExceptionEvent $event) {
-    if ($event->getException() instanceof AccessDeniedHttpException) {
+  public function onAccessDeniedException(\Symfony\Component\HttpKernel\Event\ExceptionEvent $event) {
+    if ($event->getThrowable() instanceof AccessDeniedHttpException) {
       $admin_only = $this->config->get('admin_only');
       $is_admin = $this->adminContext->isAdminRoute();

       if ((!$admin_only || $is_admin) && !$this->currentUser->hasPermission('access 403 page')) {
-        $event->setException(new NotFoundHttpException());
+        $event->setThrowable(new NotFoundHttpException());
       }
     }
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameMethodRector
 * RenameClassRector


 [OK] 3 files have been changed by Rector                                       

