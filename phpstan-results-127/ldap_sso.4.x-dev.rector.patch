diff --git a/src/Controller/LoginController.php b/src/Controller/LoginController.php
index eed165a..2873e90 100644
--- a/src/Controller/LoginController.php
+++ b/src/Controller/LoginController.php
@@ -186,7 +186,7 @@ class LoginController extends ControllerBase {
     }
     else {
       // Compatibility support for Drupal 8.9.
-      $cookies[] = new Cookie('sso_login_running', '', $this->time->getRequestTime() - 3600, base_path());
+      $cookies[] = \Symfony\Component\HttpFoundation\Cookie::create('sso_login_running', '', $this->time->getRequestTime() - 3600, base_path());
     }
 
     return new RedirectResponseWithCookie($finalDestination->toString(), 302, $cookies);
diff --git a/src/LdapSsoBootSubscriber.php b/src/LdapSsoBootSubscriber.php
index bb8a87e..17d2e69 100644
--- a/src/LdapSsoBootSubscriber.php
+++ b/src/LdapSsoBootSubscriber.php
@@ -119,10 +119,10 @@ class LdapSsoBootSubscriber implements EventSubscriberInterface {
   /**
    * Determine if we should attempt SSO.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   Event to act upon.
    */
-  public function checkSsoLoad(GetResponseEvent $event): void {
+  public function checkSsoLoad(\Symfony\Component\HttpKernel\Event\RequestEvent $event): void {
     if ((PHP_SAPI === 'cli') || $this->account->isAuthenticated()) {
       $this->detailLog->log('CLI or logged in user, no SSO.', [], 'ldap_sso');
       return;
@@ -173,7 +173,7 @@ class LdapSsoBootSubscriber implements EventSubscriberInterface {
     }
     else {
       // Compatibility support for Drupal 8.9.
-      $cookie = new Cookie('sso_login_running', 'true', 0, base_path());
+      $cookie = \Symfony\Component\HttpFoundation\Cookie::create('sso_login_running', 'true', 0, base_path());
     }
     $response = new RedirectResponseWithCookie($pathWithDestination, 302, [$cookie]);
     $response->send();
