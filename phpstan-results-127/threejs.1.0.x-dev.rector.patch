diff --git a/modules/threejs_fields/src/Plugin/Field/FieldFormatter/ThreeJSFormatterBase.php b/modules/threejs_fields/src/Plugin/Field/FieldFormatter/ThreeJSFormatterBase.php
index 7971871..a4818f4 100644
--- a/modules/threejs_fields/src/Plugin/Field/FieldFormatter/ThreeJSFormatterBase.php
+++ b/modules/threejs_fields/src/Plugin/Field/FieldFormatter/ThreeJSFormatterBase.php
@@ -23,7 +23,7 @@ abstract class ThreeJSFormatterBase extends FileFormatterBase {
       if (empty($default_canvas['uuid']) && $this->fieldDefinition instanceof FieldConfigInterface) {
         $default_canvas = $this->fieldDefinition->getFieldStorageDefinition()->getSetting('default_image');
       }
-      if (!empty($default_canvas['uuid']) && $file = \Drupal::entityManager()->loadEntityByUuid('file', $default_canvas['uuid'])) {
+      if (!empty($default_canvas['uuid']) && $file = \Drupal::service('entity.repository')->loadEntityByUuid('file', $default_canvas['uuid'])) {
         // Clone the FieldItemList into a runtime-only object for the formatter,
         // so that the fallback image can be rendered without affecting the
         // field values in the entity being rendered.
diff --git a/modules/threejs_fields/src/Plugin/Field/FieldType/ThreeJSFile.php b/modules/threejs_fields/src/Plugin/Field/FieldType/ThreeJSFile.php
index 5076209..64c73b4 100644
--- a/modules/threejs_fields/src/Plugin/Field/FieldType/ThreeJSFile.php
+++ b/modules/threejs_fields/src/Plugin/Field/FieldType/ThreeJSFile.php
@@ -422,7 +422,7 @@ class ThreeJSFile extends FileItem {
     if (isset($element['fids']['#value'][0])) {
       $value = $element['fids']['#value'][0];
       // Convert the file ID to a uuid.
-      if ($file = \Drupal::entityManager()->getStorage('file')->load($value)) {
+      if ($file = \Drupal::service('entity_type.manager')->getStorage('file')->load($value)) {
         $value = $file->uuid();
       }
     }
@@ -447,7 +447,9 @@ class ThreeJSFile extends FileItem {
    */
   protected function getEntityManager() {
     if (!isset($this->entityManager)) {
-      $this->entityManager = \Drupal::entityManager();
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // We are assuming that we want to use the `entity_type.manager` service since no method was called here directly. Please confirm this is the case. See https://www.drupal.org/node/2549139 for more information.
+      $this->entityManager = \Drupal::service('entity_type.manager');
     }
     return $this->entityManager;
   }
diff --git a/modules/threejs_fields/src/Plugin/Field/FieldWidget/ThreeJSFileWidget.php b/modules/threejs_fields/src/Plugin/Field/FieldWidget/ThreeJSFileWidget.php
index 6871ba1..4e42f80 100644
--- a/modules/threejs_fields/src/Plugin/Field/FieldWidget/ThreeJSFileWidget.php
+++ b/modules/threejs_fields/src/Plugin/Field/FieldWidget/ThreeJSFileWidget.php
@@ -133,7 +133,7 @@ class ThreeJSFileWidget extends FileWidget {
         ->getSetting('default_canvas');
     }
     // Convert the stored UUID into a file ID.
-    if (!empty($default_canvas['uuid']) && $entity = \Drupal::entityManager()
+    if (!empty($default_canvas['uuid']) && $entity = \Drupal::service('entity.repository')
         ->loadEntityByUuid('file', $default_canvas['uuid'])) {
       $default_canvas['fid'] = $entity->id();
     }
diff --git a/modules/threejs_fields/threejs_fields.admin.inc b/modules/threejs_fields/threejs_fields.admin.inc
index 0183976..29354a0 100644
--- a/modules/threejs_fields/threejs_fields.admin.inc
+++ b/modules/threejs_fields/threejs_fields.admin.inc
@@ -23,7 +23,7 @@ function template_preprocess_canvas_preview(&$variables) {
   $variables['style_name'] = $style->label();
 
   // Cache bypass token.
-  $variables['cache_bypass'] = REQUEST_TIME;
+  $variables['cache_bypass'] = \Drupal::time()->getRequestTime();
 
   // Sample image info.
   $sample_width = 160;
