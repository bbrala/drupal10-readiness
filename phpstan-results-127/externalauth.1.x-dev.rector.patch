diff --git a/src/Event/ExternalAuthAuthmapAlterEvent.php b/src/Event/ExternalAuthAuthmapAlterEvent.php
index 62b606c..39d91e2 100644
--- a/src/Event/ExternalAuthAuthmapAlterEvent.php
+++ b/src/Event/ExternalAuthAuthmapAlterEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Allow event listeners to alter the authmap data that will get stored.
  */
-class ExternalAuthAuthmapAlterEvent extends Event {
+class ExternalAuthAuthmapAlterEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The name of the service providing external authentication.
diff --git a/src/Event/ExternalAuthLoginEvent.php b/src/Event/ExternalAuthLoginEvent.php
index 8b379ac..43d2ff5 100644
--- a/src/Event/ExternalAuthLoginEvent.php
+++ b/src/Event/ExternalAuthLoginEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Notify event listeners about an externalauth user login.
  */
-class ExternalAuthLoginEvent extends Event {
+class ExternalAuthLoginEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The Drupal user account.
diff --git a/src/Event/ExternalAuthRegisterEvent.php b/src/Event/ExternalAuthRegisterEvent.php
index 9a056eb..16cc706 100644
--- a/src/Event/ExternalAuthRegisterEvent.php
+++ b/src/Event/ExternalAuthRegisterEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Notify event listeners about an externalauth user registration.
  */
-class ExternalAuthRegisterEvent extends Event {
+class ExternalAuthRegisterEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The Drupal user account.
diff --git a/src/ExternalAuth.php b/src/ExternalAuth.php
index fa6d58d..c4a634a 100644
--- a/src/ExternalAuth.php
+++ b/src/ExternalAuth.php
@@ -107,7 +107,7 @@ class ExternalAuth implements ExternalAuthInterface {
       $username = $provider . '_' . $authname;
     }
 
-    $authmap_event = $this->eventDispatcher->dispatch(ExternalAuthEvents::AUTHMAP_ALTER, new ExternalAuthAuthmapAlterEvent($provider, $authname, $username, $authmap_data));
+    $authmap_event = $this->eventDispatcher->dispatch(new ExternalAuthAuthmapAlterEvent($provider, $authname, $username, $authmap_data), ExternalAuthEvents::AUTHMAP_ALTER);
     $entity_storage = $this->entityTypeManager->getStorage('user');
 
     $account_search = $entity_storage->loadByProperties(['name' => $authmap_event->getUsername()]);
@@ -130,7 +130,7 @@ class ExternalAuth implements ExternalAuthInterface {
     $account->enforceIsNew();
     $account->save();
     $this->authmap->save($account, $provider, $authmap_event->getAuthname(), $authmap_event->getData());
-    $this->eventDispatcher->dispatch(ExternalAuthEvents::REGISTER, new ExternalAuthRegisterEvent($account, $provider, $authmap_event->getAuthname(), $authmap_event->getData()));
+    $this->eventDispatcher->dispatch(new ExternalAuthRegisterEvent($account, $provider, $authmap_event->getAuthname(), $authmap_event->getData()), ExternalAuthEvents::REGISTER);
     $this->logger->notice('External registration of user %name from provider %provider and authname %authname',
       [
         '%name' => $account->getAccountName(),
@@ -162,7 +162,7 @@ class ExternalAuth implements ExternalAuthInterface {
   public function userLoginFinalize(UserInterface $account, $authname, $provider) {
     user_login_finalize($account);
     $this->logger->notice('External login of user %name', ['%name' => $account->getAccountName()]);
-    $this->eventDispatcher->dispatch(ExternalAuthEvents::LOGIN, new ExternalAuthLoginEvent($account, $provider, $authname));
+    $this->eventDispatcher->dispatch(new ExternalAuthLoginEvent($account, $provider, $authname), ExternalAuthEvents::LOGIN);
     return $account;
   }
 
@@ -173,7 +173,7 @@ class ExternalAuth implements ExternalAuthInterface {
     // If a mapping (for the same provider) to this account already exists, we
     // silently skip saving this auth mapping.
     if (!$this->authmap->get($account->id(), $provider)) {
-      $authmap_event = $this->eventDispatcher->dispatch(ExternalAuthEvents::AUTHMAP_ALTER, new ExternalAuthAuthmapAlterEvent($provider, $authname, $account->getAccountName(), NULL));
+      $authmap_event = $this->eventDispatcher->dispatch(new ExternalAuthAuthmapAlterEvent($provider, $authname, $account->getAccountName(), NULL), ExternalAuthEvents::AUTHMAP_ALTER);
       $this->authmap->save($account, $provider, $authmap_event->getAuthname(), $authmap_event->getData());
     }
   }
diff --git a/tests/src/Kernel/AuthmapTest.php b/tests/src/Kernel/AuthmapTest.php
index ad4ae37..31825f1 100644
--- a/tests/src/Kernel/AuthmapTest.php
+++ b/tests/src/Kernel/AuthmapTest.php
@@ -29,7 +29,7 @@ class AuthmapTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->authmap = \Drupal::service('externalauth.authmap');
     $this->installSchema('externalauth', ['authmap']);
