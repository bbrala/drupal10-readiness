diff --git a/modules/collection_pathauto/src/EventSubscriber/CollectionPathautoSubscriber.php b/modules/collection_pathauto/src/EventSubscriber/CollectionPathautoSubscriber.php
index 3d06cbe..a8f588a 100644
--- a/modules/collection_pathauto/src/EventSubscriber/CollectionPathautoSubscriber.php
+++ b/modules/collection_pathauto/src/EventSubscriber/CollectionPathautoSubscriber.php
@@ -42,10 +42,10 @@ class CollectionPathautoSubscriber implements EventSubscriberInterface {
   /**
    * Process the COLLECTION_ITEM_ENTITY_CREATE, _UPDATE, and _DELETE events.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The dispatched event.
    */
-  public function collectionItemCrud(Event $event) {
+  public function collectionItemCrud(\Symfony\Contracts\EventDispatcher\Event $event) {
     $collected_item = $event->collectionItem->item->entity;
 
     // See if this collection item entity uses a pathauto alias.
diff --git a/src/Event/CollectionCreateEvent.php b/src/Event/CollectionCreateEvent.php
index 0cb808f..31cc416 100644
--- a/src/Event/CollectionCreateEvent.php
+++ b/src/Event/CollectionCreateEvent.php
@@ -8,7 +8,7 @@ use Drupal\collection\Entity\CollectionInterface;
 /**
  * Event that is fired when a collection is saved.
  */
-class CollectionCreateEvent extends Event {
+class CollectionCreateEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The collection.
diff --git a/src/Event/CollectionItemCreateEvent.php b/src/Event/CollectionItemCreateEvent.php
index 93b841e..c3002a8 100644
--- a/src/Event/CollectionItemCreateEvent.php
+++ b/src/Event/CollectionItemCreateEvent.php
@@ -8,7 +8,7 @@ use Drupal\collection\Entity\CollectionItemInterface;
 /**
  * Event that is fired when a collection_item is saved.
  */
-class CollectionItemCreateEvent extends Event {
+class CollectionItemCreateEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The collection item.
diff --git a/src/Event/CollectionItemDeleteEvent.php b/src/Event/CollectionItemDeleteEvent.php
index e36521d..2bcc620 100644
--- a/src/Event/CollectionItemDeleteEvent.php
+++ b/src/Event/CollectionItemDeleteEvent.php
@@ -8,7 +8,7 @@ use Drupal\collection\Entity\CollectionItemInterface;
 /**
  * Event that is fired when a collection_item is deleted.
  */
-class CollectionItemDeleteEvent extends Event {
+class CollectionItemDeleteEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The collection item.
diff --git a/src/Event/CollectionItemFormSaveEvent.php b/src/Event/CollectionItemFormSaveEvent.php
index da65eeb..5a4ecf8 100644
--- a/src/Event/CollectionItemFormSaveEvent.php
+++ b/src/Event/CollectionItemFormSaveEvent.php
@@ -8,7 +8,7 @@ use Drupal\collection\Entity\CollectionItemInterface;
 /**
  * Event that is fired when a collection item is saved via a form.
  */
-class CollectionItemFormSaveEvent extends Event {
+class CollectionItemFormSaveEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The collection item being created.
diff --git a/src/Event/CollectionItemUpdateEvent.php b/src/Event/CollectionItemUpdateEvent.php
index d366776..e821e34 100644
--- a/src/Event/CollectionItemUpdateEvent.php
+++ b/src/Event/CollectionItemUpdateEvent.php
@@ -8,7 +8,7 @@ use Drupal\collection\Entity\CollectionItemInterface;
 /**
  * Event that is fired when a collection_item is saved.
  */
-class CollectionItemUpdateEvent extends Event {
+class CollectionItemUpdateEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The collection item.
diff --git a/src/Event/CollectionUpdateEvent.php b/src/Event/CollectionUpdateEvent.php
index 763cc3a..cd2c76a 100644
--- a/src/Event/CollectionUpdateEvent.php
+++ b/src/Event/CollectionUpdateEvent.php
@@ -8,7 +8,7 @@ use Drupal\collection\Entity\CollectionInterface;
 /**
  * Event that is fired when a collection is saved.
  */
-class CollectionUpdateEvent extends Event {
+class CollectionUpdateEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The collection.
diff --git a/src/Form/CollectionItemForm.php b/src/Form/CollectionItemForm.php
index 9e666e4..cc30c05 100644
--- a/src/Form/CollectionItemForm.php
+++ b/src/Form/CollectionItemForm.php
@@ -91,7 +91,7 @@ class CollectionItemForm extends ContentEntityForm {
     }
 
     $event = new CollectionItemFormSaveEvent($entity, $status);
-    $this->eventDispatcher->dispatch(CollectionEvents::COLLECTION_ITEM_FORM_SAVE, $event);
+    $this->eventDispatcher->dispatch($event, CollectionEvents::COLLECTION_ITEM_FORM_SAVE);
 
     $form_state->setRedirect('entity.collection_item.collection', ['collection' => $entity->collection->target_id]);
   }
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index a347e61..bd60241 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
