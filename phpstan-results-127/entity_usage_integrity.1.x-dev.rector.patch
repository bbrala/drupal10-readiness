diff --git a/src/Event/EntityUsageIntegrityApplicabilityCheckEvent.php b/src/Event/EntityUsageIntegrityApplicabilityCheckEvent.php
index b97fad7..3cce4b4 100644
--- a/src/Event/EntityUsageIntegrityApplicabilityCheckEvent.php
+++ b/src/Event/EntityUsageIntegrityApplicabilityCheckEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Defines an entity usage integrity applicability check event.
  */
-class EntityUsageIntegrityApplicabilityCheckEvent extends Event {
+class EntityUsageIntegrityApplicabilityCheckEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The form state.
diff --git a/src/FormIntegrityValidation/ModerationStateChangeConfirmDialog.php b/src/FormIntegrityValidation/ModerationStateChangeConfirmDialog.php
index f7ec2b8..54ff353 100644
--- a/src/FormIntegrityValidation/ModerationStateChangeConfirmDialog.php
+++ b/src/FormIntegrityValidation/ModerationStateChangeConfirmDialog.php
@@ -272,7 +272,7 @@ class ModerationStateChangeConfirmDialog implements ContainerInjectionInterface
 
     if ($is_applicable) {
       $event = new EntityUsageIntegrityApplicabilityCheckEvent($form_state, $is_applicable);
-      $this->eventDispatcher->dispatch(EntityUsageIntegrityEvents::APPLICABILITY_CHECK, $event);
+      $this->eventDispatcher->dispatch($event, EntityUsageIntegrityEvents::APPLICABILITY_CHECK);
       $is_applicable = $event->isApplicable();
     }
 
diff --git a/src/FormIntegrityValidation/ViewedDeleteForm.php b/src/FormIntegrityValidation/ViewedDeleteForm.php
index 587bb21..efc5512 100644
--- a/src/FormIntegrityValidation/ViewedDeleteForm.php
+++ b/src/FormIntegrityValidation/ViewedDeleteForm.php
@@ -150,7 +150,7 @@ final class ViewedDeleteForm implements ContainerInjectionInterface {
 
     if ($is_applicable) {
       $event = new EntityUsageIntegrityApplicabilityCheckEvent($form_state, $is_applicable);
-      $this->eventDispatcher->dispatch(EntityUsageIntegrityEvents::APPLICABILITY_CHECK, $event);
+      $this->eventDispatcher->dispatch($event, EntityUsageIntegrityEvents::APPLICABILITY_CHECK);
       $is_applicable = $event->isApplicable();
     }
 
diff --git a/src/FormIntegrityValidation/ViewedEditForm.php b/src/FormIntegrityValidation/ViewedEditForm.php
index 79c4766..929d14f 100644
--- a/src/FormIntegrityValidation/ViewedEditForm.php
+++ b/src/FormIntegrityValidation/ViewedEditForm.php
@@ -157,7 +157,7 @@ final class ViewedEditForm implements ContainerInjectionInterface {
 
     if ($is_applicable) {
       $event = new EntityUsageIntegrityApplicabilityCheckEvent($form_state, $is_applicable);
-      $this->eventDispatcher->dispatch(EntityUsageIntegrityEvents::APPLICABILITY_CHECK, $event);
+      $this->eventDispatcher->dispatch($event, EntityUsageIntegrityEvents::APPLICABILITY_CHECK);
       $is_applicable = $event->isApplicable();
     }
 
