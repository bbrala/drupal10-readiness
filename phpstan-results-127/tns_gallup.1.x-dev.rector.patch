diff --git a/tests/src/Unit/BasicTest.php b/tests/src/Unit/BasicTest.php
index ff5d5ef..024f590 100755
--- a/tests/src/Unit/BasicTest.php
+++ b/tests/src/Unit/BasicTest.php
@@ -33,80 +33,78 @@ class BasicTest extends UnitTestCase {
   /**
    * Configuration of the module.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject|ImmutableConfig
+   * @var \PHPUnit\Framework\MockObject\MockObject|ImmutableConfig
    */
   protected $config;
 
   /**
    * Factory for retrieving configuration.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject|ConfigFactoryInterface
+   * @var \PHPUnit\Framework\MockObject\MockObject|ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The user to simulate during the test.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject|AccountInterface
+   * @var \PHPUnit\Framework\MockObject\MockObject|AccountInterface
    */
   protected $user;
 
   /**
    * The module handler for invoking alters.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject|ModuleHandlerInterface
+   * @var \PHPUnit\Framework\MockObject\MockObject|ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The url generator.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject|UrlGeneratorInterface
+   * @var \PHPUnit\Framework\MockObject\MockObject|UrlGeneratorInterface
    */
   protected $urlGenerator;
 
   /**
    * The alias manager.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject|AliasManagerInterface
+   * @var \PHPUnit\Framework\MockObject\MockObject|AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * The path manager.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $pathMatcher;
 
   /**
    * The route match representing the route being accessed during the test.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $routeMatch;
 
   /**
    * The Drupal renderer.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var \PHPUnit\Framework\MockObject\MockObject
    */
   protected $renderer;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Setup mock services in container.
     $container = new ContainerBuilder();
 
     // Setup mock configuration.
-    $this->config = $this->getMockBuilder(ImmutableConfig::class)
-      ->disableOriginalConstructor()
-      ->getMock();
-    $this->configFactory = $this->getMockBuilder(ConfigFactoryInterface::class)->getMock();
+    $this->config = $this->createMock(ImmutableConfig::class);
+    $this->configFactory = $this->createMock(ConfigFactoryInterface::class);
     $this->configFactory
       ->method('get')
       ->with('tns_gallup.settings')
@@ -115,7 +113,7 @@ class BasicTest extends UnitTestCase {
 
     // Mock user will always return an empty set of roles. Role information is
     // not relevant for most tests.
-    $this->user = $this->getMockBuilder(AccountInterface::class)->getMock();
+    $this->user = $this->createMock(AccountInterface::class);
     $this->user
       ->method('getRoles')
       ->willReturn([]);
@@ -123,22 +121,22 @@ class BasicTest extends UnitTestCase {
 
     // The rest of the services merely need to be defined for now. They have no
     // default behavior.
-    $this->moduleHandler = $this->getMockBuilder(ModuleHandlerInterface::class)->getMock();
+    $this->moduleHandler = $this->createMock(ModuleHandlerInterface::class);
     $container->set('module_handler', $this->moduleHandler);
 
-    $this->urlGenerator = $this->getMockBuilder(UrlGeneratorInterface::class)->getMock();
+    $this->urlGenerator = $this->createMock(UrlGeneratorInterface::class);
     $container->set('url_generator', $this->urlGenerator);
 
-    $this->aliasManager = $this->getMockBuilder(AliasManagerInterface::class)->getMock();
+    $this->aliasManager = $this->createMock(AliasManagerInterface::class);
     $container->set('path.alias_manager', $this->aliasManager);
 
-    $this->pathMatcher = $this->getMockBuilder(PathMatcherInterface::class)->getMock();
+    $this->pathMatcher = $this->createMock(PathMatcherInterface::class);
     $container->set('path.matcher', $this->pathMatcher);
 
-    $this->routeMatch = $this->getMockBuilder(RouteMatchInterface::class)->getMock();
+    $this->routeMatch = $this->createMock(RouteMatchInterface::class);
     $container->set('current_route_match', $this->routeMatch);
 
-    $this->renderer = $this->getMockBuilder(RendererInterface::class)->getMock();
+    $this->renderer = $this->createMock(RendererInterface::class);
     $container->set('renderer', $this->renderer);
 
     \Drupal::setContainer($container);
@@ -228,9 +226,7 @@ class BasicTest extends UnitTestCase {
       );
 
     // Use the specified path as the current path.
-    $route = $this->getMockBuilder(Route::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $route = $this->createMock(Route::class);
     $route
       ->expects($this->atLeastOnce())
       ->method('getPath')
@@ -349,7 +345,7 @@ class BasicTest extends UnitTestCase {
 
     // We have to reset the current user in the container to have a new mock
     // which actually return roles.
-    $this->user = $this->getMockBuilder(AccountInterface::class)->getMock();
+    $this->user = $this->createMock(AccountInterface::class);
     $this->user
       ->method('getRoles')
       ->willReturn($user_roles);
diff --git a/tns_gallup.module b/tns_gallup.module
index 24a4a77..2c3918c 100755
--- a/tns_gallup.module
+++ b/tns_gallup.module
@@ -114,7 +114,7 @@ function _tns_gallup_visibility_pages() {
   // Match path if necessary.
   if (!empty($pages)) {
     /* @var \Drupal\Core\Path\AliasManagerInterface $alias_manager */
-    $alias_manager = \Drupal::service('path.alias_manager');
+    $alias_manager = \Drupal::service('path_alias.manager');
     /* @var \Drupal\Core\Path\PathMatcherInterface $path_matcher */
     $path_matcher = \Drupal::service('path.matcher');
 
