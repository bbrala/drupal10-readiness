diff --git a/src/CronHandler.php b/src/CronHandler.php
index 0caae2b..33cec25 100644
--- a/src/CronHandler.php
+++ b/src/CronHandler.php
@@ -158,7 +158,7 @@ class CronHandler {
     }
     // Dispatch the event.
     $event = new InstagramPostsObtainedEvent($this->config, $account, $result ?? []);
-    $this->eventDispatcher->dispatch(InstagramPostsObtainedEvent::getEventName(), $event);
+    $this->eventDispatcher->dispatch($event, InstagramPostsObtainedEvent::getEventName());
     return $event->posts;
   }
 
@@ -259,7 +259,7 @@ class CronHandler {
     $media_entity = $this->mediaStorage->create($entity_array);
     // Dispatch an event, so other modules can modify media entity before save.
     $event = new MediaEntityInstantiatedEvent($this->config, $account, $media_entity, $post);
-    $this->eventDispatcher->dispatch(MediaEntityInstantiatedEvent::getEventName(), $event);
+    $this->eventDispatcher->dispatch($event, MediaEntityInstantiatedEvent::getEventName());
 
     $event->mediaEntity->save();
   }
diff --git a/src/Event/InstagramFeedsEventBase.php b/src/Event/InstagramFeedsEventBase.php
index 8740a51..795a480 100644
--- a/src/Event/InstagramFeedsEventBase.php
+++ b/src/Event/InstagramFeedsEventBase.php
@@ -13,7 +13,7 @@ use Symfony\Component\EventDispatcher\Event;
  * has data received from Instagram API, so it is possible to manipulate
  * that data in order to modify media entity before it will be saved.
  */
-abstract class InstagramFeedsEventBase extends Event {
+abstract class InstagramFeedsEventBase extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Instagram Feeds Config bucket.
diff --git a/src/EventSubscriber/InstagramPostsObtainedSubscriber.php b/src/EventSubscriber/InstagramPostsObtainedSubscriber.php
index c673e27..82cde47 100644
--- a/src/EventSubscriber/InstagramPostsObtainedSubscriber.php
+++ b/src/EventSubscriber/InstagramPostsObtainedSubscriber.php
@@ -42,7 +42,7 @@ class InstagramPostsObtainedSubscriber implements EventSubscriberInterface {
     // Added for compatibility with Drupal < 8.7.0.
     $this->file_exists_replace = defined('\Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE')
       ? FileSystemInterface::EXISTS_REPLACE
-      : FILE_EXISTS_REPLACE;
+      : \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE;
   }
 
   /**
@@ -131,7 +131,7 @@ class InstagramPostsObtainedSubscriber implements EventSubscriberInterface {
       return \Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY);
     }
     else {
-      return file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
+      return \Drupal::service('file_system')->prepareDirectory($directory, \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY);
     }
   }
 
