[parsing] modules/contrib/node_summary_token_from_p/node_summary_token_from_p.module
[refactoring] modules/contrib/node_summary_token_from_p/node_summary_token_from_p.module
[post rectors] modules/contrib/node_summary_token_from_p/node_summary_token_from_p.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/node_summary_token_from_p/node_summary_token_from_p.module
[parsing] modules/contrib/node_summary_token_from_p/tests/src/HookTokensTest.php
[refactoring] modules/contrib/node_summary_token_from_p/tests/src/HookTokensTest.php
[post rectors] modules/contrib/node_summary_token_from_p/tests/src/HookTokensTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/node_summary_token_from_p/tests/src/HookTokensTest.php
[refactoring] modules/contrib/node_summary_token_from_p/tests/src/HookTokensTest.php
[post rectors] modules/contrib/node_summary_token_from_p/tests/src/HookTokensTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/node_summary_token_from_p/tests/src/HookTokensTest.php

1 file with changes
===================

1) modules/contrib/node_summary_token_from_p/tests/src/HookTokensTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['filter', 'node']);
     $this->installEntitySchema('node');
@@ @@
     foreach ($tests as $input => $expected) {
       $bubbleable_metadata = new BubbleableMetadata();
       $output = $this->tokenService->replace($input, ['node' => $node], ['langcode' => $this->interfaceLanguage->getId()], $bubbleable_metadata);
-      $this->assertEqual($output, $expected, new FormattableMarkup('Node token %token replaced.', ['%token' => $input]));
-      $this->assertEqual($bubbleable_metadata, $metadata_tests[$input]);
+      $this->assertEquals($output, $expected, new FormattableMarkup('Node token %token replaced.', ['%token' => $input]));
+      $this->assertEquals($bubbleable_metadata, $metadata_tests[$input]);
     }

     // Repeat for a node without a summary.
@@ @@

     foreach ($tests as $input => $expected) {
       $output = $this->tokenService->replace($input, ['node' => $node], ['language' => $this->interfaceLanguage]);
-      $this->assertEqual($output, $expected, new FormattableMarkup('Node token %token replaced for node without a summary.', ['%token' => $input]));
+      $this->assertEquals($output, $expected, new FormattableMarkup('Node token %token replaced for node without a summary.', ['%token' => $input]));
     }
   }

@@ @@
     foreach ($tests as $input => $expected) {
       $bubbleable_metadata = new BubbleableMetadata();
       $output = $this->tokenService->replace($input, ['node' => $node], ['langcode' => $this->interfaceLanguage->getId()], $bubbleable_metadata);
-      $this->assertEqual($output, $expected, new FormattableMarkup('Node token %token replaced.', ['%token' => $input]));
-      $this->assertEqual($bubbleable_metadata, $metadata_tests[$input]);
+      $this->assertEquals($output, $expected, new FormattableMarkup('Node token %token replaced.', ['%token' => $input]));
+      $this->assertEquals($bubbleable_metadata, $metadata_tests[$input]);
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

