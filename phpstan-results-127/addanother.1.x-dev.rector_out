[parsing] modules/contrib/addanother/addanother.install
[refactoring] modules/contrib/addanother/addanother.install
[post rectors] modules/contrib/addanother/addanother.install
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/addanother/addanother.install
[parsing] modules/contrib/addanother/addanother.module
[refactoring] modules/contrib/addanother/addanother.module
[post rectors] modules/contrib/addanother/addanother.module
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/addanother/addanother.module
[parsing] modules/contrib/addanother/src/Controller/AddAnotherController.php
[refactoring] modules/contrib/addanother/src/Controller/AddAnotherController.php
[post rectors] modules/contrib/addanother/src/Controller/AddAnotherController.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/addanother/src/Controller/AddAnotherController.php
[parsing] modules/contrib/addanother/src/Form/AddAnotherSettingsForm.php
[refactoring] modules/contrib/addanother/src/Form/AddAnotherSettingsForm.php
[post rectors] modules/contrib/addanother/src/Form/AddAnotherSettingsForm.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/addanother/src/Form/AddAnotherSettingsForm.php
[parsing] modules/contrib/addanother/tests/src/Functional/AddAnotherTest.php
[refactoring] modules/contrib/addanother/tests/src/Functional/AddAnotherTest.php
[post rectors] modules/contrib/addanother/tests/src/Functional/AddAnotherTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/addanother/tests/src/Functional/AddAnotherTest.php
[refactoring] modules/contrib/addanother/tests/src/Functional/AddAnotherTest.php
[post rectors] modules/contrib/addanother/tests/src/Functional/AddAnotherTest.php
    [post rector] Rector\PostRector\Rector\NodeToReplacePostRector
    [post rector] Rector\PostRector\Rector\NodeAddingPostRector
    [post rector] Rector\PostRector\Rector\PropertyAddingPostRector
    [post rector] Ssch\TYPO3Rector\Rector\PostRector\FullQualifiedNamePostRector
    [post rector] Rector\PostRector\Rector\NodeRemovingPostRector
    [post rector] Rector\PostRector\Rector\ClassRenamingPostRector
    [post rector] Rector\PostRector\Rector\NameImportingPostRector
    [post rector] Rector\PostRector\Rector\UseAddingPostRector
[print] modules/contrib/addanother/tests/src/Functional/AddAnotherTest.php

1 file with changes
===================

1) modules/contrib/addanother/tests/src/Functional/AddAnotherTest.php:62

    ---------- begin diff ----------
@@ @@
     $this->submitForm($edit, 'Save');

     // Check that the node has been created.
-    $this->assertText(t('@post @title has been created.', [
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('@post @title has been created.', [
       '@post' => $node_type,
       '@title' => $edit['title[0][value]'],
-    ]), 'Node created.');
-    $this->assertText(t('You may add another @type.', ['@type' => $node_type]), 'Addanother message was presented.');
-    $this->assertLink('Add another');
+    ]));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('You may add another @type.', ['@type' => $node_type]));
+    $this->assertSession()->linkExists('Add another');

     // Create a node.
     $edit = [];
@@ @@
     $this->submitForm($edit, 'Save and add another');

     // Check that the node has been created.
-    $this->assertUrl("node/add/$node_type");
+    $this->assertSession()->addressEquals("node/add/$node_type");
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertLinkRector
 * AssertTextRector
 * AssertUrlRector


 [OK] 1 file has been changed by Rector                                         

