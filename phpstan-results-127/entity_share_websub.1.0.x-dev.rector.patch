diff --git a/modules/entity_share_websub_hub/src/EventSubscriber/NotificationProcessor.php b/modules/entity_share_websub_hub/src/EventSubscriber/NotificationProcessor.php
index a0a7db7..cd232a6 100644
--- a/modules/entity_share_websub_hub/src/EventSubscriber/NotificationProcessor.php
+++ b/modules/entity_share_websub_hub/src/EventSubscriber/NotificationProcessor.php
@@ -38,10 +38,10 @@ class NotificationProcessor implements EventSubscriberInterface {
   /**
    * This method is called when the kernel.terminate is dispatched.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The dispatched event.
    */
-  public function kernelTerminate(Event $event) {
+  public function kernelTerminate(\Symfony\Contracts\EventDispatcher\Event $event) {
     $this->hub->processUpdates();
   }
 
diff --git a/modules/entity_share_websub_hub/tests/src/Functional/LoadTest.php b/modules/entity_share_websub_hub/tests/src/Functional/LoadTest.php
index f5b296c..beff74a 100644
--- a/modules/entity_share_websub_hub/tests/src/Functional/LoadTest.php
+++ b/modules/entity_share_websub_hub/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/entity_share_websub_hub/tests/src/Kernel/ContentTest.php b/modules/entity_share_websub_hub/tests/src/Kernel/ContentTest.php
index 68b1798..9d0961c 100644
--- a/modules/entity_share_websub_hub/tests/src/Kernel/ContentTest.php
+++ b/modules/entity_share_websub_hub/tests/src/Kernel/ContentTest.php
@@ -87,7 +87,7 @@ class ContentTest extends EntityKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('entity_share_websub_hub', Subscription::TABLE_NAME);
     $this->installSchema('node', ['node_access']);
@@ -149,7 +149,7 @@ class ContentTest extends EntityKernelTestBase {
     $node->save();
     $item = $queue->claimItem();
     $this->assertNotEmpty($item, 'Update on node unpublish');
-    $this->assertEqual($item->data['action'], Hub::ACTION_CANCEL, 'Correct cancel update');
+    $this->assertEquals($item->data['action'], Hub::ACTION_CANCEL, 'Correct cancel update');
 
     $items = $this->subscription->checkSubscriptions($node);
     $this->assertEmpty($items, 'The subscription set inactive on unpublish');
@@ -161,7 +161,7 @@ class ContentTest extends EntityKernelTestBase {
     $node->delete();
     $item = $queue->claimItem();
     $this->assertNotEmpty($item, 'Update on node deletion');
-    $this->assertEqual($item->data['action'], Hub::ACTION_CANCEL, 'Correct cancel update for deletion');
+    $this->assertEquals($item->data['action'], Hub::ACTION_CANCEL, 'Correct cancel update for deletion');
 
     $updates = $this->subscription->getUpdates($this->mock_subscriber, TRUE);
     $this->assertNotEmpty($updates, 'Existing cancel updates when node deleted');
diff --git a/modules/entity_share_websub_hub/tests/src/Kernel/PublisherTest.php b/modules/entity_share_websub_hub/tests/src/Kernel/PublisherTest.php
index 30363a6..9e75943 100644
--- a/modules/entity_share_websub_hub/tests/src/Kernel/PublisherTest.php
+++ b/modules/entity_share_websub_hub/tests/src/Kernel/PublisherTest.php
@@ -98,7 +98,7 @@ class PublisherTest extends EntityKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('node');
@@ -152,7 +152,7 @@ class PublisherTest extends EntityKernelTestBase {
     $this->subscription->verifySubscription($this->mock_subscriber);
     $this->publisher->notifyRelevant($this->mock_node);
     $item = $queue->claimItem();
-    $this->assertNotEqual($item, FALSE, 'Records notified and queued');
+    $this->assertNotEquals($item, FALSE, 'Records notified and queued');
     $this->assertEquals($item->data, [
       'path' => $this->mock_subscriber,
     ]);
diff --git a/modules/entity_share_websub_hub/tests/src/Kernel/SubscriptionTest.php b/modules/entity_share_websub_hub/tests/src/Kernel/SubscriptionTest.php
index 5236bd7..f934c1d 100644
--- a/modules/entity_share_websub_hub/tests/src/Kernel/SubscriptionTest.php
+++ b/modules/entity_share_websub_hub/tests/src/Kernel/SubscriptionTest.php
@@ -66,7 +66,7 @@ class SubscriptionTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installEntitySchema('channel');
@@ -126,13 +126,13 @@ class SubscriptionTest extends KernelTestBase {
   public function testCheck() {
     $this->subscription->save($this->mock_topic, $this->mock_subscriber, $this->mock_secret, $this->mock_email, 'subscribe');
     $result = $this->subscription->checkSubscriptions($this->mock_node);
-    $this->assertEqual($result, [], 'Check existing but not verified');
+    $this->assertEquals($result, [], 'Check existing but not verified');
     $this->subscription->verifySubscription($this->mock_subscriber);
     $result = $this->subscription->checkSubscriptions($this->mock_node);
-    $this->assertEqual($result, ['1'], 'Check existing');
+    $this->assertEquals($result, ['1'], 'Check existing');
     $this->subscription->updateSubscriptions($result, ['content_summary' => 'New test title : article', 'uid' => 1]);
     $updates = $this->subscription->getUpdates();
-    $this->assertEqual($updates, [
+    $this->assertEquals($updates, [
       $this->mock_subscriber => [
         $this->mock_topic,
         $this->mock_secret,
diff --git a/modules/entity_share_websub_hub/tests/src/Unit/HubTest.php b/modules/entity_share_websub_hub/tests/src/Unit/HubTest.php
index 4103d56..f38b7a1 100644
--- a/modules/entity_share_websub_hub/tests/src/Unit/HubTest.php
+++ b/modules/entity_share_websub_hub/tests/src/Unit/HubTest.php
@@ -111,7 +111,7 @@ class HubTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setUpValues();
     $this->subscriptionMock = $this->createMock(SubscriptionInterface::class);
diff --git a/modules/entity_share_websub_subscriber/src/Controller/SubscriptionController.php b/modules/entity_share_websub_subscriber/src/Controller/SubscriptionController.php
index 71a0b03..43408c7 100644
--- a/modules/entity_share_websub_subscriber/src/Controller/SubscriptionController.php
+++ b/modules/entity_share_websub_subscriber/src/Controller/SubscriptionController.php
@@ -101,7 +101,7 @@ class SubscriptionController extends ControllerBase {
 
           // Import selected entity after verification.
           // @see Drupal\entity_share_websub_subscriber\SubscriptionRecordWorker
-          $this->eventDispatcher->dispatch(ContentSyncEvent::EVENT_SYNC, new ContentSyncEvent($subscription));
+          $this->eventDispatcher->dispatch(new ContentSyncEvent($subscription), ContentSyncEvent::EVENT_SYNC);
         }
       }
     }
@@ -130,7 +130,7 @@ class SubscriptionController extends ControllerBase {
 
       // Validate signature.
       if ($signature == $request->headers->get('X-Hub-Signature')) {
-        $this->eventDispatcher->dispatch(ContentSyncEvent::EVENT_SYNC, new ContentSyncEvent($subscription));
+        $this->eventDispatcher->dispatch(new ContentSyncEvent($subscription), ContentSyncEvent::EVENT_SYNC);
       }
     }
 
diff --git a/modules/entity_share_websub_subscriber/src/Event/ContentSyncEvent.php b/modules/entity_share_websub_subscriber/src/Event/ContentSyncEvent.php
index 3fab1a0..c92a365 100644
--- a/modules/entity_share_websub_subscriber/src/Event/ContentSyncEvent.php
+++ b/modules/entity_share_websub_subscriber/src/Event/ContentSyncEvent.php
@@ -6,7 +6,7 @@ namespace Drupal\entity_share_websub_subscriber\Event;
 
 use Symfony\Component\EventDispatcher\Event;
 
-class ContentSyncEvent extends Event {
+class ContentSyncEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Subscription events.
diff --git a/modules/entity_share_websub_subscriber/src/EventSubscriber/HubNotifier.php b/modules/entity_share_websub_subscriber/src/EventSubscriber/HubNotifier.php
index bd4b68d..56c950a 100644
--- a/modules/entity_share_websub_subscriber/src/EventSubscriber/HubNotifier.php
+++ b/modules/entity_share_websub_subscriber/src/EventSubscriber/HubNotifier.php
@@ -57,10 +57,10 @@ class HubNotifier implements EventSubscriberInterface {
   /**
    * This method is called when the kernel.terminate is dispatched.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param \Symfony\Contracts\EventDispatcher\Event $event
    *   The dispatched event.
    */
-  public function kernelTerminate(Event $event) {
+  public function kernelTerminate(\Symfony\Contracts\EventDispatcher\Event $event) {
     $process_timeout = ini_get('max_execution_time') ?: 30;
     $end = time() + $process_timeout - 5;
 
diff --git a/modules/entity_share_websub_subscriber/src/SubscriptionManager.php b/modules/entity_share_websub_subscriber/src/SubscriptionManager.php
index fd143e0..0787be9 100644
--- a/modules/entity_share_websub_subscriber/src/SubscriptionManager.php
+++ b/modules/entity_share_websub_subscriber/src/SubscriptionManager.php
@@ -65,7 +65,7 @@ class SubscriptionManager {
     ])) {
       $this->updateSubscriptionStatus($subscription->id, Subscriber::SUBSCRIPTION_VERIFIED);
       // And we need to update the local copy.
-      $this->eventDispatcher->dispatch(ContentSyncEvent::EVENT_SYNC, new ContentSyncEvent($subscription));
+      $this->eventDispatcher->dispatch(new ContentSyncEvent($subscription), ContentSyncEvent::EVENT_SYNC);
       return TRUE;
     }
 
diff --git a/modules/entity_share_websub_subscriber/tests/src/Functional/LoadTest.php b/modules/entity_share_websub_subscriber/tests/src/Functional/LoadTest.php
index 1e85e4d..4095bf8 100644
--- a/modules/entity_share_websub_subscriber/tests/src/Functional/LoadTest.php
+++ b/modules/entity_share_websub_subscriber/tests/src/Functional/LoadTest.php
@@ -29,7 +29,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
