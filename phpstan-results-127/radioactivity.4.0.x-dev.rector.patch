diff --git a/src/Event/EnergyBelowCutoffEvent.php b/src/Event/EnergyBelowCutoffEvent.php
index 8421f61..d306b0d 100644
--- a/src/Event/EnergyBelowCutoffEvent.php
+++ b/src/Event/EnergyBelowCutoffEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @see rules_entity_presave()
  */
-class EnergyBelowCutoffEvent extends Event {
+class EnergyBelowCutoffEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   const EVENT_NAME = 'radioactivity_field_cutoff';
 
diff --git a/tests/src/Kernel/RadioactivityFieldTypeTest.php b/tests/src/Kernel/RadioactivityFieldTypeTest.php
index b914b78..339da10 100644
--- a/tests/src/Kernel/RadioactivityFieldTypeTest.php
+++ b/tests/src/Kernel/RadioactivityFieldTypeTest.php
@@ -51,9 +51,7 @@ class RadioactivityFieldTypeTest extends FieldKernelTestBase {
     parent::setUp();
 
     // Mock Time::getRequestTime.
-    $dateTime = $this->getMockBuilder(TimeInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $dateTime = $this->createMock(TimeInterface::class);
     $dateTime
       ->expects($this->any())
       ->method('getRequestTime')
diff --git a/tests/src/Unit/EmitControllerTest.php b/tests/src/Unit/EmitControllerTest.php
index fe6c63b..5b39cc1 100644
--- a/tests/src/Unit/EmitControllerTest.php
+++ b/tests/src/Unit/EmitControllerTest.php
@@ -19,6 +19,7 @@ use Symfony\Component\HttpFoundation\Request;
  */
 class EmitControllerTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The request received by the controller.
    *
diff --git a/tests/src/Unit/RadioactivityLazyBuilderTest.php b/tests/src/Unit/RadioactivityLazyBuilderTest.php
index 7f66b44..1db4134 100644
--- a/tests/src/Unit/RadioactivityLazyBuilderTest.php
+++ b/tests/src/Unit/RadioactivityLazyBuilderTest.php
@@ -15,6 +15,7 @@ use Prophecy\Argument;
  */
 class RadioactivityLazyBuilderTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Mock entity type manager.
    *
diff --git a/tests/src/Unit/RadioactivityProcessorTest.php b/tests/src/Unit/RadioactivityProcessorTest.php
index 0579695..3884ece 100644
--- a/tests/src/Unit/RadioactivityProcessorTest.php
+++ b/tests/src/Unit/RadioactivityProcessorTest.php
@@ -34,6 +34,7 @@ use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 class RadioactivityProcessorTest extends UnitTestCase {
 
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The radioactivity processor under test.
    *
@@ -231,6 +232,7 @@ class RadioactivityProcessorTest extends UnitTestCase {
   /**
    * @covers ::queueProcessDecay
    * @dataProvider providerQueueProcessDecay
+   * @doesNotPerformAssertions
    */
   public function testQueueProcessDecay($fieldType, $profile, $halfLife, $cutoff, $initialEnergy, $elapsedTime, $isPublished, $langcode, $resultEnergy) {
 
@@ -388,6 +390,7 @@ class RadioactivityProcessorTest extends UnitTestCase {
   /**
    * @covers ::queueProcessIncidents
    * @dataProvider providerQueueProcessIncidents
+   * @doesNotPerformAssertions
    */
   public function testQueueProcessIncidents($isRevisonable, $initialEnergy, $emittedEnergy, $resultEnergy) {
 
diff --git a/tests/src/Unit/RadioactivityReferenceUpdaterTest.php b/tests/src/Unit/RadioactivityReferenceUpdaterTest.php
index 4ad1780..40a1632 100644
--- a/tests/src/Unit/RadioactivityReferenceUpdaterTest.php
+++ b/tests/src/Unit/RadioactivityReferenceUpdaterTest.php
@@ -13,6 +13,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class RadioactivityReferenceUpdaterTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @covers ::hasMissingReferences
    * @dataProvider providerHasMissingReferences
diff --git a/tests/src/Unit/RestIncidentStorageTest.php b/tests/src/Unit/RestIncidentStorageTest.php
index aef8281..669497f 100644
--- a/tests/src/Unit/RestIncidentStorageTest.php
+++ b/tests/src/Unit/RestIncidentStorageTest.php
@@ -46,9 +46,7 @@ class RestIncidentStorageTest extends UnitTestCase {
    * @covers ::addIncident
    */
   public function testAddIncident() {
-    $incident = $this->getMockBuilder(IncidentInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $incident = $this->createMock(IncidentInterface::class);
 
     $this->expectException("Exception");
     $this->expectExceptionMessage("The Radioactivity rest endpoint expects incidents to be added somewhere else.");
@@ -128,6 +126,7 @@ class RestIncidentStorageTest extends UnitTestCase {
 
   /**
    * @covers ::clearIncidents
+   * @doesNotPerformAssertions
    */
   public function testClearIncidents() {
     $this->sut->expects($this->once())
diff --git a/tests/src/Unit/StorageFactoryTest.php b/tests/src/Unit/StorageFactoryTest.php
index 9b99f24..129a1aa 100644
--- a/tests/src/Unit/StorageFactoryTest.php
+++ b/tests/src/Unit/StorageFactoryTest.php
@@ -62,11 +62,8 @@ class StorageFactoryTest extends UnitTestCase {
       ->will($this->returnValue($this->config));
 
     // Mock the class resolver and the classes it provides.
-    $mockRestStorage = $this->getMockBuilder(RestIncidentStorage::class)
-      ->getMock();
-    $mockDefaultStorage = $this->getMockBuilder(DefaultIncidentStorage::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $mockRestStorage = $this->createMock(RestIncidentStorage::class);
+    $mockDefaultStorage = $this->createMock(DefaultIncidentStorage::class);
 
     $this->classResolver = $this->getMockBuilder(ClassResolverInterface::class)
       ->setMethods(['getInstanceFromDefinition'])
@@ -115,6 +112,7 @@ class StorageFactoryTest extends UnitTestCase {
   /**
    * @covers ::getConfiguredStorage
    * @dataProvider providerGetConfiguredStorage
+   * @doesNotPerformAssertions
    */
   public function testGetConfiguredStorage($configType, $storageType) {
     $sut = $this->getMockBuilder('Drupal\radioactivity\StorageFactory')
