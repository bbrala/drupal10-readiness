diff --git a/tests/src/Unit/Plugin/FileLogFormatter/FileLogFormatterDefaultTest.php b/tests/src/Unit/Plugin/FileLogFormatter/FileLogFormatterDefaultTest.php
index 9b08628..8f832c5 100644
--- a/tests/src/Unit/Plugin/FileLogFormatter/FileLogFormatterDefaultTest.php
+++ b/tests/src/Unit/Plugin/FileLogFormatter/FileLogFormatterDefaultTest.php
@@ -14,6 +14,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class FileLogFormatterDefaultTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Test categories.
    *
@@ -59,7 +60,7 @@ class FileLogFormatterDefaultTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->categories = [
       uniqid(),
@@ -134,8 +135,8 @@ class FileLogFormatterDefaultTest extends UnitTestCase {
     }
     $output = $formatter->format(...$results);
     foreach ($this->categories as $key => $category) {
-      $this->assertContains('==== ' . strtoupper($category) . ' ====', $output);
-      $this->assertContains('[' . $this->statuses[$key] . '] ' . $this->labels[$key] . ': ' . $this->messages[$key], $output);
+      $this->assertStringContainsString('==== ' . strtoupper($category) . ' ====', $output);
+      $this->assertStringContainsString('[' . $this->statuses[$key] . '] ' . $this->labels[$key] . ': ' . $this->messages[$key], $output);
     }
   }
 
diff --git a/tests/src/Unit/Plugin/Logger/FileTest.php b/tests/src/Unit/Plugin/Logger/FileTest.php
index e548047..cb653b1 100644
--- a/tests/src/Unit/Plugin/Logger/FileTest.php
+++ b/tests/src/Unit/Plugin/Logger/FileTest.php
@@ -20,6 +20,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
  */
 class FileTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Mocked formatter.
    *
@@ -44,7 +45,7 @@ class FileTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->fileLogFormatterManager = $this->prophesize(FileLogFormatterManager::class);
     $this->fileSystem = $this->prophesize(FileSystemInterface::class);
