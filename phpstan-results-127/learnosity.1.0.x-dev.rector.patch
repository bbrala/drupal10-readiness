diff --git a/src/Controller/LearnosityActivityController.php b/src/Controller/LearnosityActivityController.php
index 86995a8..ec158d4 100644
--- a/src/Controller/LearnosityActivityController.php
+++ b/src/Controller/LearnosityActivityController.php
@@ -146,7 +146,9 @@ class LearnosityActivityController extends ControllerBase implements ContainerIn
           ]));
         }
         else {
-          $link = $entity->link($date);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$entity` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $link = $entity->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/src/Controller/LearnosityEventController.php b/src/Controller/LearnosityEventController.php
index 7f5d48b..46b1b03 100644
--- a/src/Controller/LearnosityEventController.php
+++ b/src/Controller/LearnosityEventController.php
@@ -94,7 +94,7 @@ class LearnosityEventController extends ControllerBase implements ContainerInjec
     $context = $this->processContext();
 
     $event = new LearnosityEvent($name, $context);
-    $dispatch = $this->eventDispatcher->dispatch('learnosity.' . $name, $event);
+    $dispatch = $this->eventDispatcher->dispatch($event, 'learnosity.' . $name);
 
     // Check to see if any subscribers return a response. If they do then use
     // that. Otherwise default to an empty ajax response.
diff --git a/src/Event/LearnosityEvent.php b/src/Event/LearnosityEvent.php
index 148071e..e04f1db 100644
--- a/src/Event/LearnosityEvent.php
+++ b/src/Event/LearnosityEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\HttpFoundation\Response;
 /**
  * Represents an event triggered by learnosity.
  */
-class LearnosityEvent extends Event {
+class LearnosityEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The name of the event.
diff --git a/src/Form/LearnosityActivityRevisionRevertForm.php b/src/Form/LearnosityActivityRevisionRevertForm.php
index 9bf7166..4347dc6 100644
--- a/src/Form/LearnosityActivityRevisionRevertForm.php
+++ b/src/Form/LearnosityActivityRevisionRevertForm.php
@@ -148,7 +148,7 @@ class LearnosityActivityRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(LearnosityActivityInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/LearnosityActivityRevisionRevertTranslationForm.php b/src/Form/LearnosityActivityRevisionRevertTranslationForm.php
index e232549..8352ec3 100644
--- a/src/Form/LearnosityActivityRevisionRevertTranslationForm.php
+++ b/src/Form/LearnosityActivityRevisionRevertTranslationForm.php
@@ -110,7 +110,7 @@ class LearnosityActivityRevisionRevertTranslationForm extends LearnosityActivity
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/tests/src/Kernel/LearnosityActivityEditorElementFormTest.php b/tests/src/Kernel/LearnosityActivityEditorElementFormTest.php
index 1b18ac4..7149e8b 100644
--- a/tests/src/Kernel/LearnosityActivityEditorElementFormTest.php
+++ b/tests/src/Kernel/LearnosityActivityEditorElementFormTest.php
@@ -160,7 +160,7 @@ class LearnosityActivityEditorElementFormTest extends LearnosityKernelTestBase i
     // Test the 'activity' element.
     $value = $form_state->getValue('activity_blank');
     // The UUID should match the following pattern.
-    $this->assertRegExp('/[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}/', $value['entity']->getReference());
+    $this->assertMatchesRegularExpression('/[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}/', $value['entity']->getReference());
     $this->assertEquals('learnosity_activity', $value['entity']->bundle());
     $this->assertEquals($this->testUser->id(), $value['entity']->getOwnerId());
 
diff --git a/tests/src/Unit/LearnosityApiEventHandlerTest.php b/tests/src/Unit/LearnosityApiEventHandlerTest.php
index 17908c9..dee1d37 100644
--- a/tests/src/Unit/LearnosityApiEventHandlerTest.php
+++ b/tests/src/Unit/LearnosityApiEventHandlerTest.php
@@ -14,6 +14,7 @@ use Drupal\Core\Entity\EntityTypeEvents;
  */
 class LearnosityApiEventHandlerTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Test getting subscribed events.
    */
diff --git a/tests/src/Unit/LearnosityEventControllerTest.php b/tests/src/Unit/LearnosityEventControllerTest.php
index 0b1af2c..9d03a12 100644
--- a/tests/src/Unit/LearnosityEventControllerTest.php
+++ b/tests/src/Unit/LearnosityEventControllerTest.php
@@ -17,6 +17,7 @@ use Prophecy\Argument;
  */
 class LearnosityEventControllerTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Tests learnosity event controller.
    */
diff --git a/tests/src/Unit/LearnositySdkTest.php b/tests/src/Unit/LearnositySdkTest.php
index 1e7ee26..423bfbb 100644
--- a/tests/src/Unit/LearnositySdkTest.php
+++ b/tests/src/Unit/LearnositySdkTest.php
@@ -17,6 +17,7 @@ use Drupal\Core\Logger\LoggerChannelFactoryInterface;
  */
 class LearnositySdkTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The service container.
    *
