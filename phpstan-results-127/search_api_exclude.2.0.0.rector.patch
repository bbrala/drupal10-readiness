diff --git a/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php b/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php
index a0a02f1..13af025 100644
--- a/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php
+++ b/tests/src/Unit/Plugin/Processor/NodeExcludeTest.php
@@ -51,7 +51,7 @@ class NodeExcludeTest extends UnitTestCase {
   /**
    * Creates a new processor object for use in the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Include system.module in order to load some required constants.
     require_once sprintf('%s/core/modules/system/system.module', $this->root);
@@ -141,28 +141,20 @@ class NodeExcludeTest extends UnitTestCase {
    *   The mocked node.
    */
   private function createNode($exclude) {
-    $nodeType = $this->getMockBuilder(NodeType::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $nodeType = $this->createMock(NodeType::class);
     $nodeType->method('getThirdPartySetting')
       ->with('search_api_exclude', 'enabled', FALSE)
       ->will($this->returnValue(TRUE));
-    $entityReferenceList = $this->getMockBuilder(EntityReferenceFieldItemList::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entityReferenceList = $this->createMock(EntityReferenceFieldItemList::class);
     $entityReferenceList->method('__get')
       ->with('entity')
       ->will($this->returnValue($nodeType));
 
-    $field_item_list = $this->getMockBuilder(FieldItemList::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $field_item_list = $this->createMock(FieldItemList::class);
     $field_item_list->method('getString')
       ->will($this->returnValue($exclude));
 
-    $node = $this->getMockBuilder(Node::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $node = $this->createMock(Node::class);
     $node->method('__get')
       ->with('type')
       ->will($this->returnValue($entityReferenceList));
