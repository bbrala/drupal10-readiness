diff --git a/tests/src/Functional/RoleExposeHelpPageFoundTest.php b/tests/src/Functional/RoleExposeHelpPageFoundTest.php
index 3889d52..963c387 100644
--- a/tests/src/Functional/RoleExposeHelpPageFoundTest.php
+++ b/tests/src/Functional/RoleExposeHelpPageFoundTest.php
@@ -32,10 +32,13 @@ class RoleExposeHelpPageFoundTest extends BrowserTestBase {
 
     // Verify Role Expose is listed in help pages.
     $this->drupalGet('admin/help');
-    $this->assertLink('Role Expose', 0, 'Check Help page has module name as link.', 'Role Expose');
+    $this->assertSession()->linkExists('Role Expose', 0, 'Check Help page has module name as link.', 'Role Expose');
     // Verify Role Expose page has correct content.
     $this->clickLink('Role Expose');
-    $this->assertText('Role Expose -module gives site administrators ability to expose user their own user roles.', 'Check Help page has module help test (check beginning of text).');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Role Expose -module gives site administrators ability to expose user their own user roles.');
   }
 
 }
diff --git a/tests/src/Functional/RoleExposePermissionsAvailableTest.php b/tests/src/Functional/RoleExposePermissionsAvailableTest.php
index 905f0e3..c5fd4f9 100644
--- a/tests/src/Functional/RoleExposePermissionsAvailableTest.php
+++ b/tests/src/Functional/RoleExposePermissionsAvailableTest.php
@@ -31,14 +31,20 @@ class RoleExposePermissionsAvailableTest extends BrowserTestBase {
 
     $this->drupalGet('admin/people/permissions');
 
-    $this->assertText('View own exposed roles', '"View own exposed roles" -grant available');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('View own exposed roles');
 
     $warning = 'Warning: Give to trusted roles only; this permission has security implications.';
     $perms_2 = 'View exposed roles for all users';
-    $this->assertText($perms_2, '"View exposed roles for all users" -grant available');
-    $this->assertRaw('<div class="permission"><span class="title">' . $perms_2
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($perms_2);
+    $this->assertSession()->responseContains('<div class="permission"><span class="title">' . $perms_2
         . '</span><div class="description"><em class="permission-warning">'
-        . $warning, '"restrict access" effective with "View exposed roles for all users" -permission');
+        . $warning);
   }
 
 }
diff --git a/tests/src/Functional/RoleExposeRoleFormTest.php b/tests/src/Functional/RoleExposeRoleFormTest.php
index 69e5709..f64ea04 100644
--- a/tests/src/Functional/RoleExposeRoleFormTest.php
+++ b/tests/src/Functional/RoleExposeRoleFormTest.php
@@ -31,12 +31,18 @@ class RoleExposeRoleFormTest extends BrowserTestBase {
 
     $this->drupalGet('admin/people/roles/add');
     // Check administrator -role, by form element name.
-    $this->assertText('Role expose', 'Selector label exists.');
-    $this->assertOption('edit-role-expose', '0', 'Select option "Never" is present.');
-    $this->assertOption('edit-role-expose', '1', 'Select option "User with this role" is present.');
-    $this->assertOption('edit-role-expose', '2', 'Select option "User without this role" is present.');
-    $this->assertOption('edit-role-expose', '3', 'Select option "Always" is present.');
-    $this->assertText('Choose when this role should displayed in User profile page.', 'Selector Description text found.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Role expose');
+    $this->assertSession()->optionExists('edit-role-expose', '0', 'Select option "Never" is present.');
+    $this->assertSession()->optionExists('edit-role-expose', '1', 'Select option "User with this role" is present.');
+    $this->assertSession()->optionExists('edit-role-expose', '2', 'Select option "User without this role" is present.');
+    $this->assertSession()->optionExists('edit-role-expose', '3', 'Select option "Always" is present.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Choose when this role should displayed in User profile page.');
   }
 
 }
