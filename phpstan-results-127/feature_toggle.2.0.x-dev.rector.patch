diff --git a/src/Event/FeatureUpdateEvent.php b/src/Event/FeatureUpdateEvent.php
index 114aa58..37b8df6 100644
--- a/src/Event/FeatureUpdateEvent.php
+++ b/src/Event/FeatureUpdateEvent.php
@@ -8,7 +8,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * Feature Update Event class.
  */
-class FeatureUpdateEvent extends Event {
+class FeatureUpdateEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The updated feature.
diff --git a/src/FeatureStatus.php b/src/FeatureStatus.php
index 315c52f..7fa3b43 100644
--- a/src/FeatureStatus.php
+++ b/src/FeatureStatus.php
@@ -60,8 +60,8 @@ class FeatureStatus implements FeatureStatusInterface {
    */
   protected function dispatch(FeatureInterface $feature, $status) {
     $event = new FeatureUpdateEvent($feature, $status);
-    $this->eventDispatcher->dispatch(FeatureUpdateEvents::UPDATE, $event);
-    $this->eventDispatcher->dispatch(FeatureUpdateEvents::UPDATE . '.' . $feature->name(), $event);
+    $this->eventDispatcher->dispatch($event, FeatureUpdateEvents::UPDATE);
+    $this->eventDispatcher->dispatch($event, FeatureUpdateEvents::UPDATE . '.' . $feature->name());
   }
 
 }
diff --git a/tests/src/Functional/FeatureToggleJavascriptTest.php b/tests/src/Functional/FeatureToggleJavascriptTest.php
index a9e4153..2d3ce57 100644
--- a/tests/src/Functional/FeatureToggleJavascriptTest.php
+++ b/tests/src/Functional/FeatureToggleJavascriptTest.php
@@ -43,7 +43,7 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->assertSession = $this->assertSession();
@@ -71,7 +71,7 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
     $settings = $this->getDrupalSettings();
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
     foreach ($features as $feature) {
-      $this->assertSession->assert(in_array($feature->name(), $feature_toggle_data), 'Variable present');
+      $this->assertTrue(in_array($feature->name(), $feature_toggle_data), 'Variable present');
       // Set features to 0.
       $this->featureStatus->setStatus($feature, FALSE);
     }
@@ -81,7 +81,7 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
     $settings = $this->getDrupalSettings();
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
     foreach ($features as $key => $feature) {
-      $this->assertSession->assert(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
+      $this->assertTrue(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
       // Enable only even features.
       if ($key % 2 == 0) {
         $this->featureStatus->setStatus($feature, TRUE);
@@ -94,10 +94,10 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
     foreach ($features as $key => $feature) {
       if ($key % 2 == 0) {
-        $this->assertSession->assert(in_array($feature->name(), $feature_toggle_data), 'Variable present');
+        $this->assertTrue(in_array($feature->name(), $feature_toggle_data), 'Variable present');
       }
       else {
-        $this->assertSession->assert(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
+        $this->assertTrue(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
       }
     }
 
@@ -109,7 +109,7 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
     $this->drupalGet('');
     $settings = $this->getDrupalSettings();
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
-    $this->assertSession->assert(empty($feature_toggle_data), 'Array is empty');
+    $this->assertTrue(empty($feature_toggle_data), 'Array is empty');
   }
 
 }
