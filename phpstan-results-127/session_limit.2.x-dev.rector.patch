diff --git a/session_limit.info.yml b/session_limit.info.yml
index ee75ff9..1533327 100644
--- a/session_limit.info.yml
+++ b/session_limit.info.yml
@@ -1,5 +1,5 @@
 name: 'Session Limit'
 description: 'Limit simultaneous user sessions.'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 type: module
 configure: session_limit.config_form
diff --git a/src/Event/SessionLimitBypassEvent.php b/src/Event/SessionLimitBypassEvent.php
index f9f7b1d..0fb9e85 100644
--- a/src/Event/SessionLimitBypassEvent.php
+++ b/src/Event/SessionLimitBypassEvent.php
@@ -4,7 +4,7 @@ namespace Drupal\session_limit\Event;
 
 use Symfony\Component\EventDispatcher\Event;
 
-class SessionLimitBypassEvent extends Event {
+class SessionLimitBypassEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * @var bool
diff --git a/src/Event/SessionLimitCollisionEvent.php b/src/Event/SessionLimitCollisionEvent.php
index 6bb5baf..0aea647 100644
--- a/src/Event/SessionLimitCollisionEvent.php
+++ b/src/Event/SessionLimitCollisionEvent.php
@@ -5,7 +5,7 @@ namespace Drupal\session_limit\Event;
 use Symfony\Component\EventDispatcher\Event;
 use Drupal\Core\Session\AccountInterface;
 
-class SessionLimitCollisionEvent extends Event {
+class SessionLimitCollisionEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * @var int
diff --git a/src/Event/SessionLimitDisconnectEvent.php b/src/Event/SessionLimitDisconnectEvent.php
index 18ae33e..c9e9fec 100644
--- a/src/Event/SessionLimitDisconnectEvent.php
+++ b/src/Event/SessionLimitDisconnectEvent.php
@@ -5,7 +5,7 @@ namespace Drupal\session_limit\Event;
 use Symfony\Component\EventDispatcher\Event;
 use Drupal\Core\Session\AccountInterface;
 
-class SessionLimitDisconnectEvent extends Event {
+class SessionLimitDisconnectEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * @var int
diff --git a/src/Services/SessionLimit.php b/src/Services/SessionLimit.php
index 7c8cf91..c48328d 100644
--- a/src/Services/SessionLimit.php
+++ b/src/Services/SessionLimit.php
@@ -170,7 +170,7 @@ class SessionLimit implements EventSubscriberInterface {
     /** @var SessionLimitBypassEvent $bypassEvent */
     $bypassEvent = $this
       ->getEventDispatcher()
-      ->dispatch('session_limit.bypass', new SessionLimitBypassEvent());
+      ->dispatch(new SessionLimitBypassEvent(), 'session_limit.bypass');
 
     // Check the result of the event to see if we should bypass.
     if ($bypassEvent->shouldBypass()) {
@@ -185,7 +185,7 @@ class SessionLimit implements EventSubscriberInterface {
 
       $this
         ->getEventDispatcher()
-        ->dispatch('session_limit.collision', $collisionEvent);
+        ->dispatch($collisionEvent, 'session_limit.collision');
     }
     else {
       // force checking this twice as there's a race condition around
@@ -294,7 +294,7 @@ class SessionLimit implements EventSubscriberInterface {
     /** @var SessionLimitDisconnectEvent $disconnectEvent */
     $disconnectEvent = $this
       ->getEventDispatcher()
-      ->dispatch('session_limit.disconnect', new SessionLimitDisconnectEvent($event->getSessionId(), $event, $this->getMessage($event->getAccount())));
+      ->dispatch(new SessionLimitDisconnectEvent($event->getSessionId(), $event, $this->getMessage($event->getAccount())), 'session_limit.disconnect');
 
     if (!$disconnectEvent->shouldPreventDisconnect()) {
       $this->sessionActiveDisconnect($disconnectEvent->getMessage());
@@ -331,7 +331,7 @@ class SessionLimit implements EventSubscriberInterface {
         /** @var SessionLimitDisconnectEvent $disconnectEvent */
         $disconnectEvent = $this
           ->getEventDispatcher()
-          ->dispatch('session_limit.disconnect', new SessionLimitDisconnectEvent($event->getSessionId(), $event, $this->getMessage($event->getAccount())));
+          ->dispatch(new SessionLimitDisconnectEvent($event->getSessionId(), $event, $this->getMessage($event->getAccount())), 'session_limit.disconnect');
 
         if (!$disconnectEvent->shouldPreventDisconnect()) {
           $this->sessionDisconnect($session->sid, $disconnectEvent->getMessage());
