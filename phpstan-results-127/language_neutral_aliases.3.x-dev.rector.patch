diff --git a/language_neutral_aliases.info.yml b/language_neutral_aliases.info.yml
index da78097..6daf80d 100644
--- a/language_neutral_aliases.info.yml
+++ b/language_neutral_aliases.info.yml
@@ -1,7 +1,7 @@
 name: Language Neutral URL Aliases
 type: module
 description: Use the same URL aliases regardless of language.
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 package: Other
 dependencies:
   - drupal:path_alias
diff --git a/tests/src/Kernel/LanguageNeutralAliasesTest.php b/tests/src/Kernel/LanguageNeutralAliasesTest.php
index eb03e88..914ea1c 100644
--- a/tests/src/Kernel/LanguageNeutralAliasesTest.php
+++ b/tests/src/Kernel/LanguageNeutralAliasesTest.php
@@ -37,7 +37,7 @@ class LanguageNeutralAliasesTest extends KernelTestBase {
   /**
    * Setup test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('path_alias');
@@ -99,10 +99,10 @@ class LanguageNeutralAliasesTest extends KernelTestBase {
     $storage->save($alias);
 
     $actual = $storage->load($alias->id());
-    $this->assertEqual(4, $actual->id());
-    $this->assertEqual('/node/4', $actual->getPath());
-    $this->assertEqual('/path/fourth', $actual->getAlias());
-    $this->assertEqual(LanguageInterface::LANGCODE_NOT_SPECIFIED, $actual->get('langcode')->value);
+    $this->assertEquals(4, $actual->id());
+    $this->assertEquals('/node/4', $actual->getPath());
+    $this->assertEquals('/path/fourth', $actual->getAlias());
+    $this->assertEquals(LanguageInterface::LANGCODE_NOT_SPECIFIED, $actual->get('langcode')->value);
 
     // Non-neutral aliases should be updated. This is not by design, but a side
     // effect of the move to entities. We can't return a clone when saving. But
@@ -113,20 +113,20 @@ class LanguageNeutralAliasesTest extends KernelTestBase {
     $storage->save($alias);
 
     $actual = $storage->load($alias->id());
-    $this->assertEqual(1, $actual->id());
-    $this->assertEqual('/node/1', $actual->getPath());
-    $this->assertEqual('/path/fifth', $actual->getAlias());
-    $this->assertEqual(LanguageInterface::LANGCODE_NOT_SPECIFIED, $actual->get('langcode')->value);
+    $this->assertEquals(1, $actual->id());
+    $this->assertEquals('/node/1', $actual->getPath());
+    $this->assertEquals('/path/fifth', $actual->getAlias());
+    $this->assertEquals(LanguageInterface::LANGCODE_NOT_SPECIFIED, $actual->get('langcode')->value);
 
     // Ensure that language neutral aliases can be updated.
     $alias = $storage->load(4);
     $alias->setAlias('/path/sixth');
 
     $actual = $storage->load(4);
-    $this->assertEqual(4, $actual->id());
-    $this->assertEqual('/node/4', $actual->getPath());
-    $this->assertEqual('/path/sixth', $actual->getAlias());
-    $this->assertEqual(LanguageInterface::LANGCODE_NOT_SPECIFIED, $actual->get('langcode')->value);
+    $this->assertEquals(4, $actual->id());
+    $this->assertEquals('/node/4', $actual->getPath());
+    $this->assertEquals('/path/sixth', $actual->getAlias());
+    $this->assertEquals(LanguageInterface::LANGCODE_NOT_SPECIFIED, $actual->get('langcode')->value);
   }
 
   /**
@@ -135,15 +135,9 @@ class LanguageNeutralAliasesTest extends KernelTestBase {
   public function testPreloadPathAlias() {
     $repository = $this->container->get('path_alias.repository');
 
-    $this->assertEqual(
-      ['/node/3' => '/path/third'],
-      $repository->preloadPathAlias(['/node/1', '/node/3'], LanguageInterface::LANGCODE_NOT_SPECIFIED)
-    );
+    $this->assertEquals(['/node/3' => '/path/third'], $repository->preloadPathAlias(['/node/1', '/node/3'], LanguageInterface::LANGCODE_NOT_SPECIFIED));
 
-    $this->assertEqual(
-      ['/node/3' => '/path/third'],
-      $repository->preloadPathAlias(['/node/1', '/node/3'], 'de')
-    );
+    $this->assertEquals(['/node/3' => '/path/third'], $repository->preloadPathAlias(['/node/1', '/node/3'], 'de'));
   }
 
   /**
@@ -152,25 +146,19 @@ class LanguageNeutralAliasesTest extends KernelTestBase {
   public function testLookupBySystemPath() {
     $repository = $this->container->get('path_alias.repository');
 
-    $this->assertEqual(
-      [
-        'id' => 3,
-        'path' => '/node/3',
-        'alias' => '/path/third',
-        'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
-      ],
-      $repository->lookupBySystemPath('/node/3', LanguageInterface::LANGCODE_NOT_SPECIFIED)
-    );
-
-    $this->assertEqual(
-      [
-        'id' => 3,
-        'path' => '/node/3',
-        'alias' => '/path/third',
-        'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
-      ],
-      $repository->lookupBySystemPath('/node/3', 'de')
-    );
+    $this->assertEquals([
+      'id' => 3,
+      'path' => '/node/3',
+      'alias' => '/path/third',
+      'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
+    ], $repository->lookupBySystemPath('/node/3', LanguageInterface::LANGCODE_NOT_SPECIFIED));
+
+    $this->assertEquals([
+      'id' => 3,
+      'path' => '/node/3',
+      'alias' => '/path/third',
+      'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
+    ], $repository->lookupBySystemPath('/node/3', 'de'));
 
     // Check that non-neutral aliases aren't returned.
     $this->assertNull($repository->lookupBySystemPath('/node/1', LanguageInterface::LANGCODE_NOT_SPECIFIED));
@@ -184,25 +172,19 @@ class LanguageNeutralAliasesTest extends KernelTestBase {
   public function testLookupByAlias() {
     $repository = $this->container->get('path_alias.repository');
 
-    $this->assertEqual(
-      [
-        'id' => 3,
-        'path' => '/node/3',
-        'alias' => '/path/third',
-        'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
-      ],
-      $repository->lookupByAlias('/path/third', LanguageInterface::LANGCODE_NOT_SPECIFIED)
-    );
-
-    $this->assertEqual(
-      [
-        'id' => 3,
-        'path' => '/node/3',
-        'alias' => '/path/third',
-        'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
-      ],
-      $repository->lookupByAlias('/path/third', 'de')
-    );
+    $this->assertEquals([
+      'id' => 3,
+      'path' => '/node/3',
+      'alias' => '/path/third',
+      'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
+    ], $repository->lookupByAlias('/path/third', LanguageInterface::LANGCODE_NOT_SPECIFIED));
+
+    $this->assertEquals([
+      'id' => 3,
+      'path' => '/node/3',
+      'alias' => '/path/third',
+      'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
+    ], $repository->lookupByAlias('/path/third', 'de'));
 
     $this->assertNull($repository->lookupByAlias('/path/first', LanguageInterface::LANGCODE_NOT_SPECIFIED));
 
