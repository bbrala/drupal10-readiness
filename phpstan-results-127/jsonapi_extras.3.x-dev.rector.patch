diff --git a/modules/jsonapi_defaults/tests/src/Functional/JsonApiDefaultsFunctionalTest.php b/modules/jsonapi_defaults/tests/src/Functional/JsonApiDefaultsFunctionalTest.php
index e0bda7c..0c31f8c 100644
--- a/modules/jsonapi_defaults/tests/src/Functional/JsonApiDefaultsFunctionalTest.php
+++ b/modules/jsonapi_defaults/tests/src/Functional/JsonApiDefaultsFunctionalTest.php
@@ -146,8 +146,8 @@ class JsonApiDefaultsFunctionalTest extends JsonApiExtrasFunctionalTestBase {
     ]);
     $response = Json::decode($response);
     $this->assertArrayHasKey('data', $response);
-    $this->assertNotEqual(count($response['data']), $query_override);
-    $this->assertEqual(count($response['data']), static::PAGE_LIMIT_OVERRIDE_VALUE);
+    $this->assertNotEquals(count($response['data']), $query_override);
+    $this->assertEquals(count($response['data']), static::PAGE_LIMIT_OVERRIDE_VALUE);
   }
 
   /**
@@ -174,7 +174,7 @@ class JsonApiDefaultsFunctionalTest extends JsonApiExtrasFunctionalTestBase {
     $response = $this->drupalGet($jsonapi_response['links']['next']['href']);
     $jsonapi_response = Json::decode($response);
     $this->assertCount($page_limit, $jsonapi_response['data']);
-    $this->assertNotEqual($first_node_uuid, $jsonapi_response['data'][0]['attributes']['internalId']);
+    $this->assertNotEquals($first_node_uuid, $jsonapi_response['data'][0]['attributes']['internalId']);
     $this->assertArrayHasKey('next', $jsonapi_response['links']);
     $this->assertArrayHasKey('prev', $jsonapi_response['links']);
     $this->assertPagerLink(
diff --git a/src/EventSubscriber/ConfigSubscriber.php b/src/EventSubscriber/ConfigSubscriber.php
index c76d098..12618ef 100644
--- a/src/EventSubscriber/ConfigSubscriber.php
+++ b/src/EventSubscriber/ConfigSubscriber.php
@@ -72,10 +72,10 @@ class ConfigSubscriber implements EventSubscriberInterface {
   /**
    * Associates JSON:API Extras' config cache tag with all JSON:API responses.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The response event.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     if ($event->getRequest()->getRequestFormat() !== 'api_json') {
       return;
     }
diff --git a/tests/src/Functional/JsonApiExtrasFunctionalTest.php b/tests/src/Functional/JsonApiExtrasFunctionalTest.php
index c40a50c..d60fa0d 100644
--- a/tests/src/Functional/JsonApiExtrasFunctionalTest.php
+++ b/tests/src/Functional/JsonApiExtrasFunctionalTest.php
@@ -36,7 +36,7 @@ class JsonApiExtrasFunctionalTest extends JsonApiFunctionalTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Check that the e0ipso/shaper library is available.
     if (!class_exists("\\Shaper\\DataAdaptor\\DataAdaptorBase")) {
       $this->fail('The e0ipso/shaper library is missing. You can install it with `composer require e0ipso/shaper`.');
diff --git a/tests/src/Functional/JsonApiExtrasFunctionalTestBase.php b/tests/src/Functional/JsonApiExtrasFunctionalTestBase.php
index 7dd399f..7bac38b 100644
--- a/tests/src/Functional/JsonApiExtrasFunctionalTestBase.php
+++ b/tests/src/Functional/JsonApiExtrasFunctionalTestBase.php
@@ -18,7 +18,7 @@ abstract class JsonApiExtrasFunctionalTestBase extends JsonApiFunctionalTestBase
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Add vocabs field to the tags.
     $this->createEntityReferenceField(
diff --git a/tests/src/Kernel/Controller/EntityResourceTest.php b/tests/src/Kernel/Controller/EntityResourceTest.php
index a96221b..5767ae1 100644
--- a/tests/src/Kernel/Controller/EntityResourceTest.php
+++ b/tests/src/Kernel/Controller/EntityResourceTest.php
@@ -40,7 +40,7 @@ class EntityResourceTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     NodeType::create([
diff --git a/tests/src/Kernel/EntityToJsonApiTest.php b/tests/src/Kernel/EntityToJsonApiTest.php
index 72e4feb..4fb4dd6 100644
--- a/tests/src/Kernel/EntityToJsonApiTest.php
+++ b/tests/src/Kernel/EntityToJsonApiTest.php
@@ -70,7 +70,7 @@ class EntityToJsonApiTest extends JsonapiKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Add the entity schemas.
     $this->installEntitySchema('node');
@@ -221,7 +221,7 @@ class EntityToJsonApiTest extends JsonapiKernelTestBase {
     $request_stack = $this->container->get('request_stack');
     $this->sut->serialize($this->node);
     $request = $request_stack->pop();
-    $this->assertNotEqual($request->getPathInfo(), '/jsonapi/node/' . $this->nodeType->id() . '/' . $this->node->uuid(), 'The request from jsonapi_extras.entity.to_jsonapi should not linger in the request stack.');
+    $this->assertNotEquals($request->getPathInfo(), '/jsonapi/node/' . $this->nodeType->id() . '/' . $this->node->uuid(), 'The request from jsonapi_extras.entity.to_jsonapi should not linger in the request stack.');
   }
 
   /**
