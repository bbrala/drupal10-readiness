modules/contrib/google_calendar/google_calendar.install
modules/contrib/google_calendar/google_calendar.module
modules/contrib/google_calendar/google_calendar.page.inc
modules/contrib/google_calendar/google_calendar_event.page.inc
modules/contrib/google_calendar/src/Commands/GoogleCalendarCommands.php
modules/contrib/google_calendar/src/Controller/GoogleCalendarImportCalendarController.php
modules/contrib/google_calendar/src/Controller/GoogleCalendarImportEventsController.php
modules/contrib/google_calendar/src/Entity/GoogleCalendar.php
modules/contrib/google_calendar/src/Entity/GoogleCalendarEvent.php
modules/contrib/google_calendar/src/Entity/GoogleCalendarEventInterface.php
modules/contrib/google_calendar/src/Entity/GoogleCalendarEventViewsData.php
modules/contrib/google_calendar/src/Entity/GoogleCalendarInterface.php
modules/contrib/google_calendar/src/Entity/GoogleCalendarViewsData.php
modules/contrib/google_calendar/src/Event/CalendarEvent.php
modules/contrib/google_calendar/src/Form/EventSettingsForm.php
modules/contrib/google_calendar/src/Form/GoogleCalendarDeleteForm.php
modules/contrib/google_calendar/src/Form/GoogleCalendarEventDeleteForm.php
modules/contrib/google_calendar/src/Form/GoogleCalendarEventForm.php
modules/contrib/google_calendar/src/Form/GoogleCalendarForm.php
modules/contrib/google_calendar/src/Form/GoogleCalendarImportCalendarsForm.php
modules/contrib/google_calendar/src/Form/GoogleCalendarImportEventsForm.php
modules/contrib/google_calendar/src/Form/ImportForm.php
modules/contrib/google_calendar/src/Form/SettingsForm.php
modules/contrib/google_calendar/src/GoogleCalendarAccessControlHandler.php
modules/contrib/google_calendar/src/GoogleCalendarClientFactory.php
modules/contrib/google_calendar/src/GoogleCalendarEventAccessControlHandler.php
modules/contrib/google_calendar/src/GoogleCalendarEventListBuilder.php
modules/contrib/google_calendar/src/GoogleCalendarHtmlRouteProvider.php
modules/contrib/google_calendar/src/GoogleCalendarImportCalendar.php
modules/contrib/google_calendar/src/GoogleCalendarImportEvents.php
modules/contrib/google_calendar/src/GoogleCalendarImportEventsInterface.php
modules/contrib/google_calendar/src/GoogleCalendarListBuilder.php
modules/contrib/google_calendar/src/Plugin/QueueWorker/CalendarImportProcessor.php
modules/contrib/google_calendar/src/Plugin/views/field/GoogleCalendarEventsLoaded.php
modules/contrib/google_calendar/src/WizardForm/ConfigurationWizardBase.php
modules/contrib/google_calendar/src/WizardForm/ConfigurationWizard_1.php
modules/contrib/google_calendar/src/WizardForm/ConfigurationWizard_2.php
modules/contrib/google_calendar/src/WizardForm/ConfigurationWizard_3.php
modules/contrib/google_calendar/src/WizardForm/ConfigurationWizard_4.php
modules/contrib/google_calendar/src/WizardForm/ConfigurationWizard_5.php
modules/contrib/google_calendar/src/WizardForm/ConfigurationWizard_6.php
modules/contrib/google_calendar/src/WizardForm/ConfigurationWizard_7.php
modules/contrib/google_calendar/tests/src/Functional/GoogleCalendarAccessTest.php
modules/contrib/google_calendar/tests/src/Functional/GoogleCalendarMenuTests.php
modules/contrib/google_calendar/tests/src/Functional/GoogleCalendarUITest.php

3 files with changes
====================

1) modules/contrib/google_calendar/tests/src/Functional/GoogleCalendarMenuTests.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * Perform initial setup tasks that run before every test method.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(array(
       'administer site configuration',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/google_calendar/src/GoogleCalendarImportEvents.php:888

    ---------- begin diff ----------
@@ @@
       $rc = $eventEntity->save();

       $sync_event = new CalendarEvent($eventEntity, $event);
-      $this->eventDispatcher->dispatch(CalendarEvent::ENTITY_SYNC, $sync_event);
+      $this->eventDispatcher->dispatch($sync_event, CalendarEvent::ENTITY_SYNC);

       if ($rc === SAVED_UPDATED) {
         $this->debug(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/google_calendar/src/Event/CalendarEvent.php:8

    ---------- begin diff ----------
@@ @@
 /**
  * Calendar event for event listeners.
  */
-class CalendarEvent extends Event {
+class CalendarEvent extends \Symfony\Contracts\EventDispatcher\Event {

   const ENTITY_SYNC = 'google_calendar.entity.sync';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

