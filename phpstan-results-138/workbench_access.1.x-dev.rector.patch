diff --git a/tests/src/Functional/AccessCacheTest.php b/tests/src/Functional/AccessCacheTest.php
index e04a602..b19dbbe 100644
--- a/tests/src/Functional/AccessCacheTest.php
+++ b/tests/src/Functional/AccessCacheTest.php
@@ -49,7 +49,7 @@ class AccessCacheTest extends BrowserTestBase {
     $title = 'Section';
     $cardinality = -1;
     $field = $this->setUpTaxonomyFieldForEntityType('node', $node_type->id(), $vocab->id(), $field_name, $title, $cardinality);
-    $this->assertEqual($field->getDefaultValueLiteral(), []);
+    $this->assertEquals($field->getDefaultValueLiteral(), []);
     $scheme = $this->setUpTaxonomyScheme($node_type, $vocab);
     $user_storage = \Drupal::service('workbench_access.user_section_storage');
     $role_storage = \Drupal::service('workbench_access.role_section_storage');
diff --git a/tests/src/Functional/AddSchemeFormTest.php b/tests/src/Functional/AddSchemeFormTest.php
index a7ca091..a670bdc 100644
--- a/tests/src/Functional/AddSchemeFormTest.php
+++ b/tests/src/Functional/AddSchemeFormTest.php
@@ -46,7 +46,7 @@ class AddSchemeFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setUpVocabulary();
     $this->admin = $this->setUpAdminUser(['administer workbench access']);
diff --git a/tests/src/Functional/MenuSchemeUITest.php b/tests/src/Functional/MenuSchemeUITest.php
index 964eb73..0dfaf2f 100644
--- a/tests/src/Functional/MenuSchemeUITest.php
+++ b/tests/src/Functional/MenuSchemeUITest.php
@@ -48,7 +48,7 @@ class MenuSchemeUITest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->createContentType(['type' => 'page']);
     $this->createContentType(['type' => 'article']);
diff --git a/tests/src/Functional/NodeFormMultipleTest.php b/tests/src/Functional/NodeFormMultipleTest.php
index 4fdc2e9..373a3b4 100644
--- a/tests/src/Functional/NodeFormMultipleTest.php
+++ b/tests/src/Functional/NodeFormMultipleTest.php
@@ -49,6 +49,7 @@ class NodeFormMultipleTest extends BrowserTestBase {
 
   /**
    * Tests field handling for multiple checkboxes.
+   * @doesNotPerformAssertions
    */
   public function testNodeMultipleCheckboxesForm() {
     #$this->runFieldTest('options_buttons');
@@ -56,6 +57,7 @@ class NodeFormMultipleTest extends BrowserTestBase {
 
   /**
    * Tests field handling for basic autocomplete.
+   * @doesNotPerformAssertions
    */
   public function testNodeMultipleAutocompleteForm() {
     #$this->runFieldTest('entity_reference_autocomplete');
diff --git a/tests/src/Functional/NodeFormTest.php b/tests/src/Functional/NodeFormTest.php
index 6cb2d50..1d09a09 100644
--- a/tests/src/Functional/NodeFormTest.php
+++ b/tests/src/Functional/NodeFormTest.php
@@ -44,7 +44,7 @@ class NodeFormTest extends BrowserTestBase {
     $node_type = $this->createContentType(['type' => 'page']);
     $vocab = $this->setUpVocabulary();
     $field = $this->setUpTaxonomyFieldForEntityType('node', $node_type->id(), $vocab->id());
-    $this->assertEqual($field->getDefaultValueLiteral(), []);
+    $this->assertEquals($field->getDefaultValueLiteral(), []);
     $scheme = $this->setUpTaxonomyScheme($node_type, $vocab);
     $user_storage = \Drupal::service('workbench_access.user_section_storage');
     $role_storage = \Drupal::service('workbench_access.role_section_storage');
diff --git a/tests/src/Functional/TaxonomySchemeUITest.php b/tests/src/Functional/TaxonomySchemeUITest.php
index 3f71b8b..7d6c087 100644
--- a/tests/src/Functional/TaxonomySchemeUITest.php
+++ b/tests/src/Functional/TaxonomySchemeUITest.php
@@ -54,7 +54,7 @@ class TaxonomySchemeUITest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->createContentType(['type' => 'page']);
     $this->createContentType(['type' => 'article']);
diff --git a/tests/src/Functional/UpdatePathTest.php b/tests/src/Functional/UpdatePathTest.php
index 6387e6d..31c27cf 100644
--- a/tests/src/Functional/UpdatePathTest.php
+++ b/tests/src/Functional/UpdatePathTest.php
@@ -26,7 +26,7 @@ class UpdatePathTest extends UpdatePathTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     if (!$this->isDrupal8()) {
       $this->markTestSkipped('The upgrade test is not supported in Drupal 9.');
diff --git a/tests/src/Functional/ViewsFieldMenuTest.php b/tests/src/Functional/ViewsFieldMenuTest.php
index 5c2d1ab..909159d 100644
--- a/tests/src/Functional/ViewsFieldMenuTest.php
+++ b/tests/src/Functional/ViewsFieldMenuTest.php
@@ -68,7 +68,7 @@ class ViewsFieldMenuTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create some sections and some nodes in them.
     $sections = [
diff --git a/tests/src/Functional/ViewsFieldTest.php b/tests/src/Functional/ViewsFieldTest.php
index dd3b8c5..570d395 100644
--- a/tests/src/Functional/ViewsFieldTest.php
+++ b/tests/src/Functional/ViewsFieldTest.php
@@ -81,7 +81,7 @@ class ViewsFieldTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create some sections and some nodes in them.
     $sections = [
diff --git a/tests/src/Functional/ViewsOutputTest.php b/tests/src/Functional/ViewsOutputTest.php
index 5dd3601..532560e 100644
--- a/tests/src/Functional/ViewsOutputTest.php
+++ b/tests/src/Functional/ViewsOutputTest.php
@@ -78,7 +78,7 @@ class ViewsOutputTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create some sections and some nodes in them.
     $sections = [
@@ -139,26 +139,26 @@ class ViewsOutputTest extends BrowserTestBase {
     foreach ($this->terms as $section => $term) {
       $row = $assert->elementExists('css', '.views-row:contains("' . $term->label() . '")');
       $assert->elementExists('css', '.views-row:contains("' . $section . ' node' . '")', $row);
-      $this->assertNoLinkByHref('/taxonomy/term/' . $term->id());
+      $this->assertSession()->linkByHrefNotExists('/taxonomy/term/' . $term->id());
     }
     $this->drupalGet('content-sections-2');
     foreach ($this->terms as $section => $term) {
       $row = $assert->elementExists('css', '.views-row:contains("' . $term->label() . '")');
       $assert->elementExists('css', '.views-row:contains("' . $section . ' node' . '")', $row);
-      $this->assertLinkByHref('/taxonomy/term/' . $term->id());
+      $this->assertSession()->linkByHrefExists('/taxonomy/term/' . $term->id());
     }
     $this->drupalGet('content-sections-3');
     $assert = $this->assertSession();
     foreach ($this->links as $section => $link) {
       $row = $assert->elementExists('css', '.views-row:contains("' . $section . '")');
       $assert->elementExists('css', '.views-row:contains("' . $section . ' node' . '")', $row);
-      $this->assertNoLink($section . ' node 1' . '-menu');
+      $this->assertSession()->linkNotExists($section . ' node 1' . '-menu');
     }
     $this->drupalGet('content-sections-4');
     foreach ($this->links as $section => $link) {
       $row = $assert->elementExists('css', '.views-row:contains("' . $section . '")');
       $assert->elementExists('css', '.views-row:contains("' . $section . ' node' . '")', $row);
-      $this->assertLink($section . ' node 1' . '-menu');
+      $this->assertSession()->linkExists($section . ' node 1' . '-menu');
     }
   }
 
diff --git a/tests/src/Functional/ViewsUserOutputTest.php b/tests/src/Functional/ViewsUserOutputTest.php
index 0074b57..a7f5b9d 100644
--- a/tests/src/Functional/ViewsUserOutputTest.php
+++ b/tests/src/Functional/ViewsUserOutputTest.php
@@ -92,7 +92,7 @@ class ViewsUserOutputTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create some sections and some nodes in them.
     $sections = [
@@ -154,13 +154,13 @@ class ViewsUserOutputTest extends BrowserTestBase {
     foreach ($this->terms as $section => $term) {
       $row = $assert->elementExists('css', '.views-row:contains("' . $this->user->label() . '")');
       $assert->elementExists('css', '.views-row:contains("' . $section . '")', $row);
-      $this->assertNoLinkByHref('/taxonomy/term/' . $term->id());
+      $this->assertSession()->linkByHrefNotExists('/taxonomy/term/' . $term->id());
     }
     $this->drupalGet('user-sections-2');
     foreach ($this->terms as $section => $term) {
       $row = $assert->elementExists('css', '.views-row:contains("' . $this->user->label() . '")');
       $assert->elementExists('css', '.views-row:contains("' . $section . '")', $row);
-      $this->assertLinkByHref('/taxonomy/term/' . $term->id());
+      $this->assertSession()->linkByHrefExists('/taxonomy/term/' . $term->id());
     }
   }
 
diff --git a/tests/src/Kernel/ConfigDependenciesTest.php b/tests/src/Kernel/ConfigDependenciesTest.php
index 6b97b43..7525eaa 100644
--- a/tests/src/Kernel/ConfigDependenciesTest.php
+++ b/tests/src/Kernel/ConfigDependenciesTest.php
@@ -58,7 +58,7 @@ class ConfigDependenciesTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installConfig(['filter', 'node', 'workbench_access', 'system']);
diff --git a/tests/src/Kernel/EntityTestAccessTest.php b/tests/src/Kernel/EntityTestAccessTest.php
index 2a88772..9e9edf8 100644
--- a/tests/src/Kernel/EntityTestAccessTest.php
+++ b/tests/src/Kernel/EntityTestAccessTest.php
@@ -66,7 +66,7 @@ class EntityTestAccessTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('entity_test');
     entity_test_create_bundle('access_controlled');
diff --git a/tests/src/Kernel/FilterAccessTest.php b/tests/src/Kernel/FilterAccessTest.php
index c4b936c..b228451 100644
--- a/tests/src/Kernel/FilterAccessTest.php
+++ b/tests/src/Kernel/FilterAccessTest.php
@@ -66,7 +66,7 @@ class FilterAccessTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['filter', 'entity_test', 'workbench_access']);
diff --git a/tests/src/Kernel/FlushTest.php b/tests/src/Kernel/FlushTest.php
index 10965cd..34e8e29 100644
--- a/tests/src/Kernel/FlushTest.php
+++ b/tests/src/Kernel/FlushTest.php
@@ -53,7 +53,7 @@ class FlushTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installConfig(['filter', 'node', 'workbench_access']);
diff --git a/tests/src/Kernel/InlineEntityFormTest.php b/tests/src/Kernel/InlineEntityFormTest.php
index 248b3bb..d3ee1c6 100644
--- a/tests/src/Kernel/InlineEntityFormTest.php
+++ b/tests/src/Kernel/InlineEntityFormTest.php
@@ -63,7 +63,7 @@ class InlineEntityFormTest extends KernelTestBase implements FormInterface {
   /**
    * Sets up the tZest.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installConfig(['filter', 'node', 'workbench_access', 'system']);
diff --git a/tests/src/Kernel/NodeAccessTest.php b/tests/src/Kernel/NodeAccessTest.php
index 0d24758..142f434 100644
--- a/tests/src/Kernel/NodeAccessTest.php
+++ b/tests/src/Kernel/NodeAccessTest.php
@@ -68,7 +68,7 @@ class NodeAccessTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installConfig(['filter', 'node', 'workbench_access']);
diff --git a/tests/src/Kernel/NodeMenuTest.php b/tests/src/Kernel/NodeMenuTest.php
index 6e07a76..f47f253 100644
--- a/tests/src/Kernel/NodeMenuTest.php
+++ b/tests/src/Kernel/NodeMenuTest.php
@@ -71,7 +71,7 @@ class NodeMenuTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installConfig(['filter', 'node', 'workbench_access', 'system']);
diff --git a/tests/src/Kernel/SectionCacheTest.php b/tests/src/Kernel/SectionCacheTest.php
index f900137..d68e2f1 100644
--- a/tests/src/Kernel/SectionCacheTest.php
+++ b/tests/src/Kernel/SectionCacheTest.php
@@ -62,7 +62,7 @@ class SectionCacheTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['workbench_access']);
     $this->installEntitySchema('user');
diff --git a/tests/src/Kernel/SectionTokenTest.php b/tests/src/Kernel/SectionTokenTest.php
index b4d1673..0dfd28e 100644
--- a/tests/src/Kernel/SectionTokenTest.php
+++ b/tests/src/Kernel/SectionTokenTest.php
@@ -82,7 +82,7 @@ class SectionTokenTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['filter', 'node', 'workbench_access', 'system']);
     $this->installEntitySchema('taxonomy_term');
diff --git a/tests/src/Kernel/TaxonomyAccessTest.php b/tests/src/Kernel/TaxonomyAccessTest.php
index eb340f2..d2544a2 100644
--- a/tests/src/Kernel/TaxonomyAccessTest.php
+++ b/tests/src/Kernel/TaxonomyAccessTest.php
@@ -80,7 +80,7 @@ class TaxonomyAccessTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('taxonomy_term');
     $this->accessControlledVocabulary = Vocabulary::create(['vid' => 'tags', 'name' => 'Tags']);
diff --git a/tests/src/Kernel/WorkbenchAccessDerivativeDiscoveryTest.php b/tests/src/Kernel/WorkbenchAccessDerivativeDiscoveryTest.php
index a106e26..d1e0b79 100644
--- a/tests/src/Kernel/WorkbenchAccessDerivativeDiscoveryTest.php
+++ b/tests/src/Kernel/WorkbenchAccessDerivativeDiscoveryTest.php
@@ -25,7 +25,7 @@ class WorkbenchAccessDerivativeDiscoveryTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('entity_test');
   }
diff --git a/tests/src/Unit/UserSectionStorageUnitTest.php b/tests/src/Unit/UserSectionStorageUnitTest.php
index 827ee16..e2636e0 100644
--- a/tests/src/Unit/UserSectionStorageUnitTest.php
+++ b/tests/src/Unit/UserSectionStorageUnitTest.php
@@ -20,6 +20,7 @@ use Drupal\workbench_access\UserSectionStorage;
  */
 class UserSectionStorageUnitTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Tests that ::getUserSections is statically cached.
    *
