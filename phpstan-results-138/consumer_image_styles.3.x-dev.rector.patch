diff --git a/src/ImageStylesProvider.php b/src/ImageStylesProvider.php
index fc005c3..c65a5a9 100644
--- a/src/ImageStylesProvider.php
+++ b/src/ImageStylesProvider.php
@@ -81,7 +81,7 @@ class ImageStylesProvider {
    */
   public function buildDerivativeLink($uri, ImageStyleInterface $image_style) {
     return [
-      'href' => file_create_url($image_style->buildUrl($uri)),
+      'href' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_style->buildUrl($uri)),
       'meta' => [
         'rel' => [static::DERIVATIVE_LINK_REL],
       ],
diff --git a/src/Normalizer/LinkCollectionNormalizer.php b/src/Normalizer/LinkCollectionNormalizer.php
index f9d4c29..5065a23 100644
--- a/src/Normalizer/LinkCollectionNormalizer.php
+++ b/src/Normalizer/LinkCollectionNormalizer.php
@@ -104,7 +104,7 @@ class LinkCollectionNormalizer implements NormalizerInterface {
     // Generate derivatives only for the found ones.
     $image_styles = $this->imageStylesProvider->loadStyles($consumer);
     return array_reduce($image_styles, function (LinkCollection $decorated, ImageStyleInterface $image_style) use ($uri) {
-      $variant_link = new Link(CacheableMetadata::createFromObject($image_style), Url::fromUri(file_create_url($image_style->buildUrl($uri))), [ImageStylesProvider::DERIVATIVE_LINK_REL]);
+      $variant_link = new Link(CacheableMetadata::createFromObject($image_style), \Drupal::service('file_url_generator')->generate($image_style->buildUrl($uri)), [ImageStylesProvider::DERIVATIVE_LINK_REL]);
       return $decorated->withLink($image_style->id(), $variant_link);
     }, (new LinkCollection([]))->withContext($resource_object));
   }
diff --git a/tests/src/Functional/ConsumerImageSylesFunctionalTest.php b/tests/src/Functional/ConsumerImageSylesFunctionalTest.php
index 743b2e7..dcd27a0 100644
--- a/tests/src/Functional/ConsumerImageSylesFunctionalTest.php
+++ b/tests/src/Functional/ConsumerImageSylesFunctionalTest.php
@@ -72,7 +72,7 @@ class ConsumerImageSylesFunctionalTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->contentType = $this->createContentType();
     $this->imageFieldName = $this->getRandomGenerator()->word(8);
