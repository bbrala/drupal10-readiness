modules/contrib/textimage/src/Controller/TextimageDownloadController.php
modules/contrib/textimage/src/Form/FlushAllForm.php
modules/contrib/textimage/src/Form/SettingsForm.php
modules/contrib/textimage/src/PathProcessor/TextimagePathProcessor.php
modules/contrib/textimage/src/Plugin/Field/FieldFormatter/TextimageImageFieldFormatter.php
modules/contrib/textimage/src/Plugin/Field/FieldFormatter/TextimageTextFieldFormatter.php
modules/contrib/textimage/src/Routing/TextimageRoutes.php
modules/contrib/textimage/src/Textimage.php
modules/contrib/textimage/src/TextimageException.php
modules/contrib/textimage/src/TextimageFactory.php
modules/contrib/textimage/src/TextimageFactoryInterface.php
modules/contrib/textimage/src/TextimageInterface.php
modules/contrib/textimage/src/TextimageLogger.php
modules/contrib/textimage/src/TextimageTokenException.php
modules/contrib/textimage/tests/src/Functional/TextimageFieldFormatterTest.php
modules/contrib/textimage/tests/src/Functional/TextimageRedirectIntegrationTest.php
modules/contrib/textimage/tests/src/Functional/TextimageTest.php
modules/contrib/textimage/tests/src/Functional/TextimageTestBase.php
modules/contrib/textimage/tests/src/Kernel/TextimageApiTest.php
modules/contrib/textimage/tests/src/Kernel/TextimageTestTrait.php
modules/contrib/textimage/tests/src/Kernel/TextimageThemeTest.php
modules/contrib/textimage/textimage.install
modules/contrib/textimage/textimage.module

7 files with changes
====================

1) modules/contrib/textimage/tests/src/Kernel/TextimageThemeTest.php:69

    ---------- begin diff ----------
@@ @@
     ];
     $this->setRawContent($this->renderer->renderRoot($output));
     $abs_url = $textimage->getUrl()->toString();
-    $rel_url = file_url_transform_relative($abs_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($abs_url);
     // @todo changing behaviour in D8.1, need to watch #2646744
     $elements = $this->cssSelect("a[href='$abs_url'] div.textimage-container-test img[src='$rel_url']");
     $this->assertNotEmpty($elements, 'Textimage formatted correctly.');
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/textimage/tests/src/Kernel/TextimageTestTrait.php:50

    ---------- begin diff ----------
@@ @@
     $config = \Drupal::configFactory()->getEditable('image_effects.settings');
     $config
       ->set('image_selector.plugin_id', 'dropdown')
-      ->set('image_selector.plugin_settings.dropdown.path', drupal_get_path('module', 'image_effects') . '/tests/images')
+      ->set('image_selector.plugin_settings.dropdown.path', \Drupal::service('extension.list.module')->getPath('image_effects') . '/tests/images')
       ->set('font_selector.plugin_id', 'dropdown')
       ->set('font_selector.plugin_settings.dropdown.path', 'vendor://fileeye/linuxlibertine-fonts')
       ->save();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/textimage/tests/src/Kernel/TextimageApiTest.php:307

    ---------- begin diff ----------
@@ @@
     $files = $this->getTestFiles('image');
     $file = File::create((array) array_shift($files));
     $file->save();
-    file_move($file, 'image-test.PNG');
+    \Drupal::service('file.repository')->move($file, 'image-test.PNG');
     $textimage = $this->textimageFactory->get();
     $textimage
       ->setStyle(ImageStyle::load('textimage_test'))
    ----------- end diff -----------

Applied rules:
 * FileMoveRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/textimage/tests/src/Functional/TextimageRedirectIntegrationTest.php:53

    ---------- begin diff ----------
@@ @@
     // Get the stored image.
     $fid = $node->{$field_name}[0]->get('target_id')->getValue();
     $source_image_file = File::load($fid);
-    $source_image_file_url = file_create_url($source_image_file->getFileUri());
+    $source_image_file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($source_image_file->getFileUri());

     // Get Textimage URL.
     $textimage = $this->textimageFactory->get()
@@ @@
       ->setStyle(ImageStyle::load('textimage_test'))
       ->setTokenData(['node' => $node, 'file' => $source_image_file])
       ->process(NULL);
-    $rel_url = file_url_transform_relative($textimage->getUrl()->toString());
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage->getUrl()->toString());
     $this->assertFileDoesNotExist($textimage->getUri());

     // Test the textimage formatter - no link.
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/textimage/tests/src/Functional/TextimageFieldFormatterTest.php:46

    ---------- begin diff ----------
@@ @@
       ->setTokenData(['node' => $node])
       ->process($field_value);
     $textimage_url = $textimage->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);

     // Assert HTML tags are stripped and entities are decoded.
     $this->assertSame(['Para1 Para2  "Title" One …'], $textimage->getText());
@@ @@
       ->setTokenData(['node' => $node])
       ->process($field_value);
     $textimage_url = $textimage->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);

     // Assert HTML tags are stripped and entities are decoded.
     $this->assertSame(['Para1 Para2  "Title" One …'], $textimage->getText());
@@ @@
       ->setTokenData(['node' => $node])
       ->process($field_value)
       ->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);

     $display = $this->entityDisplayRepository->getViewDisplay('node', $node->getType(), 'default');
     $display_options['type'] = 'textimage_text_field_formatter';
@@ @@
         ->setTokenData(['node' => $node])
         ->process($field_value[$i])
         ->getUrl()->toString();
-      $rel_url = file_url_transform_relative($textimage_url);
+      $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);

       $this->assertSame($rel_url, $elements[$i]->getAttribute('src'));
       $this->assertSame('Alternate text: Test Title', $elements[$i]->getAttribute('alt'));
@@ @@
     // Get the stored image.
     $fid = $node->{$field_name}[0]->get('target_id')->getValue();
     $source_image_file = File::load($fid);
-    $source_image_file_url = file_create_url($source_image_file->getFileUri());
+    $source_image_file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($source_image_file->getFileUri());

     // Get Textimage URL.
     $textimage_url = $this->textimageFactory->get()
@@ @@
       ->setTokenData(['node' => $node, 'file' => $source_image_file])
       ->process(NULL)
       ->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);

     // Test the textimage formatter - no link.
     $display = $this->entityDisplayRepository->getViewDisplay('node', $node->getType(), 'default');
@@ @@
     // Get the stored image.
     $fid = $node->{$field_name}[0]->get('target_id')->getValue();
     $source_image_file = File::load($fid);
-    $source_image_file_url = file_create_url($source_image_file->getFileUri());
+    $source_image_file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($source_image_file->getFileUri());

     // Get Textimage URL.
     $textimage_url = $this->textimageFactory->get()
@@ @@
       ->setTokenData(['node' => $node, 'file' => $source_image_file])
       ->process(NULL)
       ->getUrl()->toString();
-    $rel_url = file_url_transform_relative($textimage_url);
+    $rel_url = \Drupal::service('file_url_generator')->transformRelative($textimage_url);

     // Test the textimage formatter - no link.
     $display = $this->entityDisplayRepository->getViewDisplay('node', $node->getType(), 'default');
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/textimage/src/Textimage.php:430

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getUrl() {
-    return $this->processed ? Url::fromUri(file_create_url($this->getUri())) : NULL;
+    return $this->processed ? \Drupal::service('file_url_generator')->generate($this->getUri()) : NULL;
   }

   /**
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/textimage/src/Plugin/Field/FieldFormatter/TextimageImageFieldFormatter.php:245

    ---------- begin diff ----------
@@ @@
       if (!$entity_url) {
         switch ($this->getSetting('image_link')) {
           case 'file':
-            $url = Url::fromUri(file_create_url($file->getFileUri()));
+            $url = \Drupal::service('file_url_generator')->generate($file->getFileUri());
             break;

           case 'derivative':
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

