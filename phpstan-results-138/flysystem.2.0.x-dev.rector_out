modules/contrib/flysystem/flysystem.install
modules/contrib/flysystem/flysystem.module
modules/contrib/flysystem/src/Annotation/Adapter.php
modules/contrib/flysystem/src/Asset/AssetDumper.php
modules/contrib/flysystem/src/Asset/CssCollectionOptimizer.php
modules/contrib/flysystem/src/Asset/CssOptimizer.php
modules/contrib/flysystem/src/Asset/JsCollectionOptimizer.php
modules/contrib/flysystem/src/Asset/SchemeExtensionTrait.php
modules/contrib/flysystem/src/Event/EnsureEvent.php
modules/contrib/flysystem/src/Event/FlysystemEvents.php
modules/contrib/flysystem/src/EventSubscriber/EnsureSubscriber.php
modules/contrib/flysystem/src/Flysystem/Adapter/CacheItem.php
modules/contrib/flysystem/src/Flysystem/Adapter/CacheItemBackend.php
modules/contrib/flysystem/src/Flysystem/Adapter/DrupalCacheAdapter.php
modules/contrib/flysystem/src/Flysystem/Adapter/MissingAdapter.php
modules/contrib/flysystem/src/Flysystem/Ftp.php
modules/contrib/flysystem/src/Flysystem/Local.php
modules/contrib/flysystem/src/Flysystem/Missing.php
modules/contrib/flysystem/src/FlysystemBridge.php
modules/contrib/flysystem/src/FlysystemFactory.php
modules/contrib/flysystem/src/FlysystemServiceProvider.php
modules/contrib/flysystem/src/Form/ConfigForm.php
modules/contrib/flysystem/src/Logger/Convert.php
modules/contrib/flysystem/src/PathProcessor/FlysystemPathProcessor.php
modules/contrib/flysystem/src/PathProcessor/LocalPathProcessor.php
modules/contrib/flysystem/src/Plugin/FlysystemPluginInterface.php
modules/contrib/flysystem/src/Plugin/FlysystemPluginManager.php
modules/contrib/flysystem/src/Plugin/FlysystemUrlTrait.php
modules/contrib/flysystem/src/Plugin/ImageStyleGenerationTrait.php
modules/contrib/flysystem/src/Routing/FlysystemRoutes.php
modules/contrib/flysystem/src/SerializationStopperTrait.php
modules/contrib/flysystem/tests/bootstrap.php
modules/contrib/flysystem/tests/src/Functional/ModuleInstallUninstallWebTest.php
modules/contrib/flysystem/tests/src/Kernel/CollectionOptimizerTest.php
modules/contrib/flysystem/tests/src/Unit/Asset/SchemeExtensionTraitTest.php
modules/contrib/flysystem/tests/src/Unit/Event/EnsureEventTest.php
modules/contrib/flysystem/tests/src/Unit/EventSubscriber/EnsureSubscriberTest.php
modules/contrib/flysystem/tests/src/Unit/Flysystem/Adapter/CacheItemBackendTest.php
modules/contrib/flysystem/tests/src/Unit/Flysystem/Adapter/CacheItemTest.php
modules/contrib/flysystem/tests/src/Unit/Flysystem/Adapter/DrupalCacheAdapterTest.php
modules/contrib/flysystem/tests/src/Unit/Flysystem/Adapter/MissingAdapterTest.php
modules/contrib/flysystem/tests/src/Unit/Flysystem/FtpTest.php
modules/contrib/flysystem/tests/src/Unit/Flysystem/LocalTest.php
modules/contrib/flysystem/tests/src/Unit/Flysystem/MissingTest.php
modules/contrib/flysystem/tests/src/Unit/FlysystemBridgeTest.php
modules/contrib/flysystem/tests/src/Unit/FlysystemFactoryTest.php
modules/contrib/flysystem/tests/src/Unit/FlysystemServiceProviderTest.php
modules/contrib/flysystem/tests/src/Unit/Form/ConfigFormTest.php
modules/contrib/flysystem/tests/src/Unit/InstallFunctionsTest.php
modules/contrib/flysystem/tests/src/Unit/Logger/ConvertTest.php
modules/contrib/flysystem/tests/src/Unit/ModuleFunctionsTest.php
modules/contrib/flysystem/tests/src/Unit/PathProcessor/FlysystemPathProcessorTest.php
modules/contrib/flysystem/tests/src/Unit/PathProcessor/LocalPathProcessorTest.php
modules/contrib/flysystem/tests/src/Unit/Plugin/FlysystemPluginManagerTest.php
modules/contrib/flysystem/tests/src/Unit/Plugin/FlysystemUrlTraitTest.php
modules/contrib/flysystem/tests/src/Unit/Plugin/ImageStyleGenerationTraitTest.php
modules/contrib/flysystem/tests/src/Unit/Routing/FlysystemRoutesTest.php
modules/contrib/flysystem/tests/src/Unit/SerializationStopperTraitTest.php

20 files with changes
=====================

1) modules/contrib/flysystem/tests/src/Unit/Routing/FlysystemRoutesTest.php:16

    ---------- begin diff ----------
@@ @@
  */
 class FlysystemRoutesTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @var \Drupal\flysystem\FlysystemFactory
    */
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $container = new ContainerBuilder();

     $stream_wrapper = $this->prophesize(LocalStream::class);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/flysystem/tests/src/Unit/Plugin/ImageStyleGenerationTraitTest.php:19

    ---------- begin diff ----------
@@ @@
  */
 class ImageStyleGenerationTraitTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @covers ::generateImageStyle
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/flysystem/tests/src/Unit/Plugin/FlysystemUrlTraitTest.php:12

    ---------- begin diff ----------
@@ @@
  */
 class FlysystemUrlTraitTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @covers ::getExternalUrl
    * @covers ::getScheme
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/flysystem/tests/src/Unit/PathProcessor/LocalPathProcessorTest.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     new Settings(
       [
         'flysystem' => [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/flysystem/tests/src/Unit/ModuleFunctionsTest.php:16

    ---------- begin diff ----------
@@ @@
  */
 class ModuleFunctionsTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The Flysystem factory prophecy object.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     vfsStream::setup('module_file');

@@ @@
       return $scheme;
     });

-    $guesser = $this->prophesize(MimeTypeGuesserInterface::class);
+    $guesser = $this->prophesize(\Symfony\Component\Mime\MimeTypesInterface::class);
     $guesser->guess(Argument::type('string'))->willReturn('txt/flysystem');

     $container = new ContainerBuilder();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/flysystem/tests/src/Unit/Logger/ConvertTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $consts = [
       'REQUIREMENT_INFO' => -1,
       'REQUIREMENT_OK' => 0,
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/flysystem/tests/src/Unit/InstallFunctionsTest.php:15

    ---------- begin diff ----------
@@ @@
  */
 class InstallFunctionsTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The Flysystem factory prophecy object.
    *
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     if (!defined('REQUIREMENT_ERROR')) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/flysystem/tests/src/Unit/Form/ConfigFormTest.php:20

    ---------- begin diff ----------
@@ @@
    */
   class ConfigFormTest extends UnitTestCase {

+    use \Prophecy\PhpUnit\ProphecyTrait;
     /**
      * The Flysystem factory prophecy.
      *
@@ @@
     /**
      * {@inheritdoc}
      */
-    public function setUp() {
+    public function setUp(): void {
       parent::setUp();

       $this->factory = $this->prophesize(FlysystemFactory::class);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/flysystem/tests/src/Unit/FlysystemServiceProviderTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->container = new ContainerBuilder();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/flysystem/tests/src/Unit/FlysystemFactoryTest.php:24

    ---------- begin diff ----------
@@ @@
  */
 class FlysystemFactoryTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @var \Drupal\Core\Cache\CacheBackendInterface
    */
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->cache = new NullBackend('bin');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/flysystem/tests/src/Unit/FlysystemBridgeTest.php:16

    ---------- begin diff ----------
@@ @@
  */
 class FlysystemBridgeTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * @var \Drupal\flysystem\FlysystemBridge
    */
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->bridge = new FlysystemBridge();
     $this->bridge->setStringTranslation($this->getStringTranslationStub());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/flysystem/tests/src/Unit/Flysystem/LocalTest.php:17

    ---------- begin diff ----------
@@ @@
  */
 class LocalTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $GLOBALS['base_url'] = 'http://example.com';

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     (new LocalAdapter('foo'))->deleteDir('');
     @rmdir('foo');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/flysystem/tests/src/Unit/Flysystem/FtpTest.php:16

    ---------- begin diff ----------
@@ @@
     /**
      * {@inheritdoc}
      */
-    public function setUp() {
+    public function setUp(): void {
       parent::setUp();
       if (!defined('FTP_BINARY')) {
         $this->markTestSkipped('The FTP_BINARY constant is not defined.');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/flysystem/tests/src/Unit/Flysystem/Adapter/DrupalCacheAdapterTest.php:31

    ---------- begin diff ----------
@@ @@
    * @var string
    */
   const FILE = 'test.txt';
+  use \Prophecy\PhpUnit\ProphecyTrait;

   /**
    * The wrapped Flysytem adaper.
    *
-   * @var \League\Flysystem\AdapterInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \League\Flysystem\AdapterInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $adapter;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setup() {
+  public function setup(): void {
     $this->cacheItemBackend = new CacheItemBackend(static::SCHEME, new MemoryBackend('foo'));
     $this->adapter = $this->prophesize(AdapterInterface::class);
     $this->cacheAdapter = new DrupalCacheAdapter(static::SCHEME, $this->adapter->reveal(), $this->cacheItemBackend);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/flysystem/tests/src/Unit/Flysystem/Adapter/CacheItemBackendTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setup() {
+  public function setup(): void {
     $this->cacheBackend = new MemoryBackend('foo');
     $this->cacheItemBackend = new CacheItemBackend('test-scheme', $this->cacheBackend);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/flysystem/tests/src/Unit/EventSubscriber/EnsureSubscriberTest.php:16

    ---------- begin diff ----------
@@ @@
  */
 class EnsureSubscriberTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Tests that the event subscriber logs ensure() calls.
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


17) modules/contrib/flysystem/tests/src/Kernel/CollectionOptimizerTest.php:19

    ---------- begin diff ----------
@@ @@
  */
 class CollectionOptimizerTest extends KernelTestBase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->cleanUp();
   }
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     $this->cleanUp();
     parent::tearDown();
   }
@@ @@

     foreach ($this->jsFilesUnderTest() as $js_file => $expired) {
       if ($expired === TRUE) {
-        $this->assertFileNotExists($js_file);
+        $this->assertFileDoesNotExist($js_file);
         continue;
       }
       $this->assertFileExists($js_file);
@@ @@

     foreach ($this->cssFilesUnderTest() as $css_file => $expired) {
       if ($expired === TRUE) {
-        $this->assertFileNotExists($css_file);
+        $this->assertFileDoesNotExist($css_file);
         continue;
       }
       $this->assertFileExists($css_file);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameMethodRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/flysystem/src/FlysystemFactory.php:188

    ---------- begin diff ----------
@@ @@
           $error['context']
         );

-        $this->eventDispatcher->dispatch(FlysystemEvents::ENSURE, $event);
+        $this->eventDispatcher->dispatch($event, FlysystemEvents::ENSURE);

         $errors[$scheme][] = $error;
       }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


19) modules/contrib/flysystem/src/Event/EnsureEvent.php:6

    ---------- begin diff ----------
@@ @@
 /**
  * The event fired for every result from an ensure() call.
  */
-class EnsureEvent extends Event {
+class EnsureEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The log context.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/flysystem/src/Asset/CssOptimizer.php:23

    ---------- begin diff ----------
@@ @@
     }

     // file_url_transform_relative() was removed here.
-    return 'url(' . file_create_url($path) . ')';
+    return 'url(' . \Drupal::service('file_url_generator')->generateAbsoluteString($path) . ')';
   }

 }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 20 files have been changed by Rector                                      

