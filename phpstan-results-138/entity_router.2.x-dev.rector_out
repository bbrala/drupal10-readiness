modules/contrib/entity_router/entity_router.api.php
modules/contrib/entity_router/src/Annotation/EntityResponseHandler.php
modules/contrib/entity_router/src/Controller/EntityRouterController.php
modules/contrib/entity_router/src/EntityResponseHandlerInterface.php
modules/contrib/entity_router/src/EntityResponseHandlerManager.php
modules/contrib/entity_router/src/Event/EntityResponseEvent.php
modules/contrib/entity_router/src/EventSubscriber.php
modules/contrib/entity_router/src/Plugin/EntityResponseHandler/JsonApiEntityResponseHandler.php
modules/contrib/entity_router/src/Response/EntityResponse.php

2 files with changes
====================

1) modules/contrib/entity_router/src/EventSubscriber.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function onResponse(FilterResponseEvent $event): void {
+  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event): void {
     $response = $event->getResponse();

     if ($response instanceof EntityResponse) {
@@ @@
             );
         }

-        $this->eventDispatcher->dispatch(EntityResponseEvent::NAME, new EntityResponseEvent($request, $response, $entity));
+        $this->eventDispatcher->dispatch(new EntityResponseEvent($request, $response, $entity), EntityResponseEvent::NAME);
       }
       catch (PluginException $e) {
         $status = 400;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/entity_router/src/Event/EntityResponseEvent.php:9

    ---------- begin diff ----------
@@ @@
 /**
  * The event to dispatch for notifying about entity response.
  */
-class EntityResponseEvent extends Event {
+class EntityResponseEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The name of the event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

