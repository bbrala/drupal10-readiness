modules/contrib/fft/fft.module
modules/contrib/fft/modules/vff/src/Plugin/views/style/ViewFormatterTemplate.php
modules/contrib/fft/modules/vff/vff.module
modules/contrib/fft/modules/vff/vff.theme.inc
modules/contrib/fft/src/Event/PreProcess.php
modules/contrib/fft/src/Form/SettingsForm.php
modules/contrib/fft/src/Plugin/Field/FieldFormatter/FFTFormatter.php

2 files with changes
====================

1) modules/contrib/fft/src/Event/PreProcess.php:8

    ---------- begin diff ----------
@@ @@
  *
  * @package Drupal\fft\Event
  */
-class PreProcess extends Event {
+class PreProcess extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Pre process event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/fft/fft.module:36

    ---------- begin diff ----------
@@ @@

   if (strpos($file, '{theme}') !== FALSE) {
     $theme_default = $GLOBALS['conf']['theme_default'];
-    $theme_path = drupal_get_path('theme', $theme_default);
+    $theme_path = \Drupal::service('extension.list.theme')->getPath($theme_default);
     $file = str_replace('{theme}', $theme_path, $file);
     return $file;
   }
@@ @@
   foreach ($types as $type) {
     $pattern = '/\{' . $type . '-(.+)\}/';
     preg_match($pattern, $file, $matches);
-    if (count($matches) > 1 && ($path = drupal_get_path($type, $matches[1])) != '') {
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    if (count($matches) > 1 && ($path = \Drupal::service('extension.path.resolver')->getPath($type, $matches[1])) != '') {
       $file = str_replace($matches[0], $path, $file);
       return $file;
     }
@@ @@
       foreach ($items as $delta => $item) {
         $image_uri = $item->entity->getFileUri();
         $image['uri'] = $image_uri;
-        $image['path'] = file_create_url($image_uri);
+        $image['path'] = \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
         foreach (['width', 'height', 'alt'] as $key) {
           $image["$key"] = $item->$key;
         }
@@ @@
   $image_uri = $image->entity->getFileUri();
   $image_filepath = $style->buildUri($image_uri);
   $style->createDerivative($image_uri, $image_filepath);
-  $image_info['path'] = file_create_url($image_filepath);
+  $image_info['path'] = \Drupal::service('file_url_generator')->generateAbsoluteString($image_filepath);
   // Determine the dimensions of the styled image.
   $dimensions = [
     'width' => $image->width,
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

