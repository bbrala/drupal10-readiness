modules/contrib/consumer_image_styles/consumer_image_styles.module
modules/contrib/consumer_image_styles/src/ConsumerImageStylesServiceProvider.php
modules/contrib/consumer_image_styles/src/ImageStylesProvider.php
modules/contrib/consumer_image_styles/src/Normalizer/LinkCollectionNormalizer.php
modules/contrib/consumer_image_styles/src/Plugin/jsonapi/FieldEnhancer/ImageStyles.php
modules/contrib/consumer_image_styles/tests/src/Functional/ConsumerImageSylesFunctionalTest.php

3 files with changes
====================

1) modules/contrib/consumer_image_styles/tests/src/Functional/ConsumerImageSylesFunctionalTest.php:71

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->contentType = $this->createContentType();
     $this->imageFieldName = $this->getRandomGenerator()->word(8);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/consumer_image_styles/src/Normalizer/LinkCollectionNormalizer.php:103

    ---------- begin diff ----------
@@ @@
     // Generate derivatives only for the found ones.
     $image_styles = $this->imageStylesProvider->loadStyles($consumer);
     return array_reduce($image_styles, function (LinkCollection $decorated, ImageStyleInterface $image_style) use ($uri) {
-      $variant_link = new Link(CacheableMetadata::createFromObject($image_style), Url::fromUri(file_create_url($image_style->buildUrl($uri))), [ImageStylesProvider::DERIVATIVE_LINK_REL]);
+      $variant_link = new Link(CacheableMetadata::createFromObject($image_style), \Drupal::service('file_url_generator')->generate($image_style->buildUrl($uri)), [ImageStylesProvider::DERIVATIVE_LINK_REL]);
       return $decorated->withLink($image_style->id(), $variant_link);
     }, (new LinkCollection([]))->withContext($resource_object));
   }
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/consumer_image_styles/src/ImageStylesProvider.php:80

    ---------- begin diff ----------
@@ @@
    */
   public function buildDerivativeLink($uri, ImageStyleInterface $image_style) {
     return [
-      'href' => file_create_url($image_style->buildUrl($uri)),
+      'href' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_style->buildUrl($uri)),
       'meta' => [
         'rel' => [static::DERIVATIVE_LINK_REL],
       ],
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 3 files have been changed by Rector                                       

