diff --git a/shortcode_basic_tags/src/Plugin/Shortcode/ImageShortcode.php b/shortcode_basic_tags/src/Plugin/Shortcode/ImageShortcode.php
index 7ccff51..24f8d2f 100644
--- a/shortcode_basic_tags/src/Plugin/Shortcode/ImageShortcode.php
+++ b/shortcode_basic_tags/src/Plugin/Shortcode/ImageShortcode.php
@@ -42,7 +42,7 @@ class ImageShortcode extends ShortcodeBase {
           $attributes['src'] = ImageStyle::load($attributes['imagestyle'])->buildUrl($properties['path']);
         }
         else {
-          $attributes['src'] = file_create_url($properties['path']);
+          $attributes['src'] = \Drupal::service('file_url_generator')->generateAbsoluteString($properties['path']);
         }
       }
       if ($properties['alt'] && !$attributes['alt']) {
diff --git a/src/Plugin/ShortcodeBase.php b/src/Plugin/ShortcodeBase.php
index 4003836..76c4ab1 100644
--- a/src/Plugin/ShortcodeBase.php
+++ b/src/Plugin/ShortcodeBase.php
@@ -301,7 +301,7 @@ abstract class ShortcodeBase extends PluginBase implements ShortcodeInterface {
     $field_media = $this->getMediaField($media_entity);
     if ($field_media) {
       $file = $field_media->entity;
-      return file_create_url($file->getFileUri());
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     }
     return FALSE;
   }
diff --git a/tests/src/Functional/ShortcodeTest.php b/tests/src/Functional/ShortcodeTest.php
index 69235d4..4426e6b 100644
--- a/tests/src/Functional/ShortcodeTest.php
+++ b/tests/src/Functional/ShortcodeTest.php
@@ -41,7 +41,7 @@ class ShortcodeTest extends BrowserTestBase {
   /**
    * Perform any initial set up tasks that run before every test method.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->shortcodeService = $this->container->get('shortcode');
     $this->siteUrl = Url::fromRoute('<front>', [], ["absolute" => TRUE])->toString();
@@ -72,7 +72,7 @@ class ShortcodeTest extends BrowserTestBase {
 
     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }
 
@@ -111,7 +111,7 @@ class ShortcodeTest extends BrowserTestBase {
 
     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }
 
@@ -135,7 +135,7 @@ class ShortcodeTest extends BrowserTestBase {
 
     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }
 
@@ -147,12 +147,12 @@ class ShortcodeTest extends BrowserTestBase {
     $test_input = '[highlight]highlighted text[/highlight]';
     $expected_output = '<span class="highlight">highlighted text</span>';
     $output = $this->shortcodeService->process($test_input);
-    $this->assertEqual($output, $expected_output, 'Highlight shortcode output matches.');
+    $this->assertEquals($output, $expected_output, 'Highlight shortcode output matches.');
 
     $test_input = '[highlight class="custom-class"]highlighted text[/highlight]';
     $expected_output = '<span class="custom-class highlight">highlighted text</span>';
     $output = $this->shortcodeService->process($test_input);
-    $this->assertEqual($output, $expected_output, 'Highlight shortcode with custom class output matches.');
+    $this->assertEquals($output, $expected_output, 'Highlight shortcode with custom class output matches.');
   }
 
   /**
@@ -175,7 +175,7 @@ class ShortcodeTest extends BrowserTestBase {
 
     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }
 
@@ -209,7 +209,7 @@ class ShortcodeTest extends BrowserTestBase {
 
     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }
 
@@ -243,7 +243,7 @@ class ShortcodeTest extends BrowserTestBase {
 
     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }
 
@@ -273,7 +273,7 @@ class ShortcodeTest extends BrowserTestBase {
     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
       $output = preg_replace('/\s+/', ' ', $output);
-      $this->assertEqual($output, $set['output'], $set['message']);
+      $this->assertEquals($output, $set['output'], $set['message']);
     }
   }
 
@@ -302,7 +302,7 @@ class ShortcodeTest extends BrowserTestBase {
 
     foreach ($sets as $set) {
       $output = $this->shortcodeService->process($set['input']);
-      $this->assertEqual(strlen($output), $set['output'], $set['message']);
+      $this->assertEquals(strlen($output), $set['output'], $set['message']);
     }
   }
 
