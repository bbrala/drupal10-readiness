modules/contrib/ipless/ipless.api.php
modules/contrib/ipless/ipless.install
modules/contrib/ipless/ipless.module
modules/contrib/ipless/src/Asset/AssetRenderer.php
modules/contrib/ipless/src/Asset/AssetRendererInterface.php
modules/contrib/ipless/src/Asset/AssetResolver.php
modules/contrib/ipless/src/Asset/AssetResolverInterface.php
modules/contrib/ipless/src/Controller/IplessController.php
modules/contrib/ipless/src/Event/IplessCompilationEvent.php
modules/contrib/ipless/src/Event/IplessEvents.php
modules/contrib/ipless/src/EventSubscriber/HtmlResponseIplessSubscriber.php
modules/contrib/ipless/src/Form/IpLessSettingForm.php
modules/contrib/ipless/src/Ipless.php
modules/contrib/ipless/src/IplessInterface.php

5 files with changes
====================

1) modules/contrib/ipless/src/EventSubscriber/HtmlResponseIplessSubscriber.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * Generate Less files.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     $response = $event->getResponse();

     if (!$response instanceof HtmlResponse || !$this->ipless->isEnabled()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/ipless/src/Event/IplessEvents.php:8

    ---------- begin diff ----------
@@ @@
  *
  * @author Damien LAGUERRE
  */
-final class IplessEvents extends Event {
+final class IplessEvents extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Name of the event fired when a less file is compiled.
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector


3) modules/contrib/ipless/src/Event/IplessCompilationEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @author Damien LAGUERRE
  */
-class IplessCompilationEvent extends Event {
+class IplessCompilationEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Less AssetRenderer.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/ipless/src/Asset/AssetResolver.php:54

    ---------- begin diff ----------
@@ @@
             $extension_type = 'theme';
           }

-          $path     = drupal_get_path($extension_type, $extension);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+          $path     = \Drupal::service('extension.path.resolver')->getPath($extension_type, $extension);
           $pathinfo = pathinfo($file);

           $options['data'] = $path . '/' . $file;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/ipless/src/Asset/AssetRenderer.php:168

    ---------- begin diff ----------
@@ @@
       $less->parseFile($file, $path);

       $event = new IplessCompilationEvent($this);
-      $this->eventDispatcher->dispatch(IplessEvents::LESS_FILE_COMPILED, $event);
+      $this->eventDispatcher->dispatch($event, IplessEvents::LESS_FILE_COMPILED);

       $this->preparePath($output);
       file_put_contents($output, $less->getCss());
@@ @@
       }
       else {
         // This is for keep compatibility with Drupal <= 8.7.x.
-        file_prepare_directory($info['dirname'], FILE_CREATE_DIRECTORY);
+        \Drupal::service('file_system')->prepareDirectory($info['dirname'], \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY);
       }
     }
   }
    ----------- end diff -----------

Applied rules:
 * FileCreateDirectoryRector
 * FilePrepareDirectoryRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 5 files have been changed by Rector                                       

