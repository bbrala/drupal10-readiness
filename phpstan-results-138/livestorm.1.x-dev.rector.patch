diff --git a/livestorm.info.yml b/livestorm.info.yml
index 6b7f170..af52882 100644
--- a/livestorm.info.yml
+++ b/livestorm.info.yml
@@ -1,7 +1,6 @@
 name: 'Livestorm'
 description: 'Provides a webhook integration with Livestorm'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 type: module
 package: Livestorm
 configure: livestorm.admin
diff --git a/src/Controller/LivestormWebhookController.php b/src/Controller/LivestormWebhookController.php
index 66a98f3..e87b0ea 100644
--- a/src/Controller/LivestormWebhookController.php
+++ b/src/Controller/LivestormWebhookController.php
@@ -110,22 +110,22 @@ class LivestormWebhookController extends ControllerBase {
     switch ($event_type) {
       case 'new_registrant':
         $e = new LivestormNewRegistrantEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.new_registrant', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.new_registrant');
         break;
 
       case 'webinar_start':
         $e = new LivestormWebinarStartEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.webinar_start', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.webinar_start');
         break;
 
       case 'webinar_end':
         $e = new LivestormWebinarEndEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.webinar_end', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.webinar_end');
         break;
 
       default:
         $e = new LivestormWebinarPublishedEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.webinar_published', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.webinar_published');
     }
 
     return new Response('Okay', Response::HTTP_OK);
diff --git a/src/Event/LivestormWebhookEvent.php b/src/Event/LivestormWebhookEvent.php
index 07448f1..3e51f66 100644
--- a/src/Event/LivestormWebhookEvent.php
+++ b/src/Event/LivestormWebhookEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * Provides the Livestorm Webhook Event.
  */
-class LivestormWebhookEvent extends Event {
+class LivestormWebhookEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Livestorm Webhook Event type.
