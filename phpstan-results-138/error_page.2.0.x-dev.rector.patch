diff --git a/error_page.info.yml b/error_page.info.yml
index dffd87b..a33ef16 100644
--- a/error_page.info.yml
+++ b/error_page.info.yml
@@ -1,4 +1,4 @@
 type: module
 name: 'Error custom pages'
 description: 'Show a user-friendly page when a fatal error or an exception occurs.'
-core_version_requirement: ^9
+core_version_requirement: ^9.3 || ^10
diff --git a/src/EventSubscriber/ErrorPageExceptionLoggingSubscriber.php b/src/EventSubscriber/ErrorPageExceptionLoggingSubscriber.php
index bad1355..938a71b 100644
--- a/src/EventSubscriber/ErrorPageExceptionLoggingSubscriber.php
+++ b/src/EventSubscriber/ErrorPageExceptionLoggingSubscriber.php
@@ -28,7 +28,7 @@ class ErrorPageExceptionLoggingSubscriber extends ExceptionLoggingSubscriber {
     // Attach the UUID to the the event. Don't call the generator as service.
     $event->uuid = $uuid_enabled ? (new Php())->generate() : NULL;
 
-    $exception = $event->getException();
+    $exception = $event->getThrowable();
     $error = Error::decodeException($exception);
     if ($event->uuid) {
       $error += ['@uuid' => $event->uuid];
diff --git a/src/EventSubscriber/ErrorPageFinalExceptionSubscriber.php b/src/EventSubscriber/ErrorPageFinalExceptionSubscriber.php
index 14ceb8e..0527174 100644
--- a/src/EventSubscriber/ErrorPageFinalExceptionSubscriber.php
+++ b/src/EventSubscriber/ErrorPageFinalExceptionSubscriber.php
@@ -35,7 +35,7 @@ class ErrorPageFinalExceptionSubscriber extends FinalExceptionSubscriber {
    * {@inheritdoc}
    */
   public function onException(ExceptionEvent $event): void {
-    $exception = $event->getException();
+    $exception = $event->getThrowable();
     $error = Error::decodeException($exception);
 
     // Generate an error report if the current error reporting level allows this
diff --git a/tests/src/Functional/ErrorPageTest.php b/tests/src/Functional/ErrorPageTest.php
index a327101..9ee341e 100644
--- a/tests/src/Functional/ErrorPageTest.php
+++ b/tests/src/Functional/ErrorPageTest.php
@@ -118,7 +118,7 @@ class ErrorPageTest extends BrowserTestBase {
     $this->assertArrayNotHasKey('@uuid', $variables);
 
     // Customize the template.
-    $template = file_get_contents(drupal_get_path('module', 'error_page') . '/markup/error_page.html');
+    $template = file_get_contents(\Drupal::service('extension.list.module')->getPath('error_page') . '/markup/error_page.html');
     // Fix the message to work without UUID.
     $template = str_replace(' including <em>{{ uuid }}</em> in your message', '', $template);
     file_put_contents('public://error_page.html', $template);
