diff --git a/modules/cloudflarepurger/src/EventSubscriber/CloudFlareCacheTagHeaderGenerator.php b/modules/cloudflarepurger/src/EventSubscriber/CloudFlareCacheTagHeaderGenerator.php
index d398a9c..150128d 100644
--- a/modules/cloudflarepurger/src/EventSubscriber/CloudFlareCacheTagHeaderGenerator.php
+++ b/modules/cloudflarepurger/src/EventSubscriber/CloudFlareCacheTagHeaderGenerator.php
@@ -33,10 +33,10 @@ class CloudFlareCacheTagHeaderGenerator implements EventSubscriberInterface {
   /**
    * Generates a 'Cache-Tag' header in the format expected by CloudFlare.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
diff --git a/modules/cloudflarepurger/tests/src/Unit/DiagnosticCheckTestBase.php b/modules/cloudflarepurger/tests/src/Unit/DiagnosticCheckTestBase.php
index 0cbb61d..94722f2 100644
--- a/modules/cloudflarepurger/tests/src/Unit/DiagnosticCheckTestBase.php
+++ b/modules/cloudflarepurger/tests/src/Unit/DiagnosticCheckTestBase.php
@@ -53,12 +53,10 @@ abstract class DiagnosticCheckTestBase extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalState = new CoreState(new KeyValueMemoryFactory(), new MemoryBackend('test'), new NullLockBackend());
-    $this->timestampStub = $this->getMockBuilder('Drupal\cloudflare\Timestamp')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->timestampStub = $this->createMock('Drupal\cloudflare\Timestamp');
     $this->cloudflareState = new CloudFlareState($this->drupalState, $this->timestampStub);
 
     $this->container = new ContainerBuilder();
diff --git a/src/EventSubscriber/ClientIpRestore.php b/src/EventSubscriber/ClientIpRestore.php
index 197beb0..8d50238 100644
--- a/src/EventSubscriber/ClientIpRestore.php
+++ b/src/EventSubscriber/ClientIpRestore.php
@@ -96,7 +96,7 @@ class ClientIpRestore implements EventSubscriberInterface {
   /**
    * Restores the origination client IP delivered to Drupal from CloudFlare.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     if (!$this->isClientIpRestoreEnabled) {
       return;
     }
