diff --git a/drush/config_devel.drush.inc b/drush/config_devel.drush.inc
index 346f87c..d61a24b 100644
--- a/drush/config_devel.drush.inc
+++ b/drush/config_devel.drush.inc
@@ -161,7 +161,9 @@ function drush_config_devel_import_one($path) {
  *   TRUE when the configuration was successfully exported. FALSE otherwise.
  */
 function drush_config_devel_process_config($config_list, $type, $extension, $directory) {
-  $config_path = drupal_get_path($type, $extension) . "/$directory";
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+  $config_path = \Drupal::service('extension.path.resolver')->getPath($type, $extension) . "/$directory";
 
   // Ensure the directory always exists.
   if (!file_exists($config_path) && !\Drupal::service('file_system')->mkdir($config_path, NULL, TRUE)) {
@@ -192,7 +194,9 @@ function drush_config_devel_process_config($config_list, $type, $extension, $dir
  *   The directory we're exporting to.
  */
 function drush_config_devel_import_config($config_list, $type, $extension, $directory) {
-  $config_path = drupal_get_path($type, $extension) . "/$directory";
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+  $config_path = \Drupal::service('extension.path.resolver')->getPath($type, $extension) . "/$directory";
   foreach ($config_list as $name) {
     $file_name = $config_path . '/' . $name . '.yml';
     drush_config_devel_import_one($file_name);
@@ -210,7 +214,9 @@ function drush_config_devel_import_config($config_list, $type, $extension, $dire
  *   An array containing install and optional config
  */
 function drush_config_devel_get_config($type, $extension) {
-  $filename = drupal_get_path($type, $extension) . '/' . $extension .'.info.yml';
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+  $filename = \Drupal::service('extension.path.resolver')->getPath($type, $extension) . '/' . $extension .'.info.yml';
   $info = \Drupal::service('info_parser')->parse($filename);
 
   $config = array();
diff --git a/src/Commands/ConfigDevelCommands.php b/src/Commands/ConfigDevelCommands.php
index a99098a..0cc900d 100644
--- a/src/Commands/ConfigDevelCommands.php
+++ b/src/Commands/ConfigDevelCommands.php
@@ -287,7 +287,9 @@ class ConfigDevelCommands extends DrushCommands {
    *   An array containing install and optional config.
    */
   protected function getExtensionConfig($type, $extension) {
-    $filename = drupal_get_path($type, $extension) . '/' . $extension .'.info.yml';
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    $filename = \Drupal::service('extension.path.resolver')->getPath($type, $extension) . '/' . $extension .'.info.yml';
     $info = $this->infoParser->parse($filename);
 
     $config = [];
@@ -331,7 +333,9 @@ class ConfigDevelCommands extends DrushCommands {
    *   created.
    */
   protected function exportConfig($config_list, $type, $extension, $directory) {
-    $config_path = drupal_get_path($type, $extension) . "/$directory";
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    $config_path = \Drupal::service('extension.path.resolver')->getPath($type, $extension) . "/$directory";
     // Ensure the directory always exists.
     if (!file_exists($config_path) && !$this->fileSystem->mkdir($config_path, NULL, TRUE)) {
       throw new \Exception(sprintf('The %s directory could not be created', $config_path));
@@ -372,7 +376,9 @@ class ConfigDevelCommands extends DrushCommands {
    *   or \Drupal\Core\Config\InstallStorage\InstallStorage::CONFIG_OPTIONAL_DIRECTORY.
    */
   protected function importConfig($config_list, $type, $extension, $directory) {
-    $config_path = drupal_get_path($type, $extension) . "/$directory";
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    $config_path = \Drupal::service('extension.path.resolver')->getPath($type, $extension) . "/$directory";
     foreach ($config_list as $name) {
       $file_name = $config_path . '/' . $name . '.yml';
       $this->importSingle($file_name);
diff --git a/src/ConfigImporterExporter.php b/src/ConfigImporterExporter.php
index 1c01961..1357739 100644
--- a/src/ConfigImporterExporter.php
+++ b/src/ConfigImporterExporter.php
@@ -239,7 +239,7 @@ class ConfigImporterExporter {
 
       // Let everyone else have a change to update the exported data.
       $event = new ConfigDevelSaveEvent($file_names, $data);
-      $this->eventDispatcher->dispatch(ConfigDevelEvents::SAVE, $event);
+      $this->eventDispatcher->dispatch($event, ConfigDevelEvents::SAVE);
       $data = $event->getData();
       $file_names = $event->getFileNames();
 
diff --git a/src/Event/ConfigDevelSaveEvent.php b/src/Event/ConfigDevelSaveEvent.php
index 26a2afd..9a70890 100644
--- a/src/Event/ConfigDevelSaveEvent.php
+++ b/src/Event/ConfigDevelSaveEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * The ConfigDevelSaveEvent class.
  */
-class ConfigDevelSaveEvent extends Event {
+class ConfigDevelSaveEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * An array of files names that will  be written.
diff --git a/src/EventSubscriber/ConfigDevelAutoExportSubscriber.php b/src/EventSubscriber/ConfigDevelAutoExportSubscriber.php
index 44dc76e..156e777 100644
--- a/src/EventSubscriber/ConfigDevelAutoExportSubscriber.php
+++ b/src/EventSubscriber/ConfigDevelAutoExportSubscriber.php
@@ -107,7 +107,7 @@ class ConfigDevelAutoExportSubscriber extends ConfigDevelSubscriberBase implemen
 
       // Let everyone else have a change to update the exported data.
       $event = new ConfigDevelSaveEvent($file_names, $data);
-      $this->eventDispatcher->dispatch(ConfigDevelEvents::SAVE, $event);
+      $this->eventDispatcher->dispatch($event, ConfigDevelEvents::SAVE);
       $data = $event->getData();
       $file_names = $event->getFileNames();
 
diff --git a/tests/src/Kernel/ConfigDevelSubscriberEntityTest.php b/tests/src/Kernel/ConfigDevelSubscriberEntityTest.php
index 22c5f84..6e46f29 100644
--- a/tests/src/Kernel/ConfigDevelSubscriberEntityTest.php
+++ b/tests/src/Kernel/ConfigDevelSubscriberEntityTest.php
@@ -24,9 +24,9 @@ class ConfigDevelSubscriberEntityTest extends ConfigDevelSubscriberTestBase {
    */
   protected function doAssert(array $data, array $exported_data) {
     $entity = \Drupal::entityTypeManager()->getStorage('config_test')->load('test');
-    $this->assertIdentical($data['label'], $entity->get('label'));
-    $this->assertIdentical($exported_data['label'], $data['label']);
-    $this->assertIdentical($exported_data['id'], 'test');
+    $this->assertSame($data['label'], $entity->get('label'));
+    $this->assertSame($exported_data['label'], $data['label']);
+    $this->assertSame($exported_data['id'], 'test');
     $this->assertFalse(isset($exported_data['uuid']));
   }
 }
diff --git a/tests/src/Kernel/ConfigDevelSubscriberRawTest.php b/tests/src/Kernel/ConfigDevelSubscriberRawTest.php
index 99ff6ba..4298bde 100644
--- a/tests/src/Kernel/ConfigDevelSubscriberRawTest.php
+++ b/tests/src/Kernel/ConfigDevelSubscriberRawTest.php
@@ -18,8 +18,8 @@ class ConfigDevelSubscriberRawTest extends ConfigDevelSubscriberTestBase {
    * {@inheritdoc}
    */
   protected function doAssert(array $data, array $exported_data) {
-    $this->assertIdentical($data, $this->storage->read(static::CONFIGNAME));
-    $this->assertIdentical($data, $exported_data);
+    $this->assertSame($data, $this->storage->read(static::CONFIGNAME));
+    $this->assertSame($data, $exported_data);
   }
 
 }
diff --git a/tests/src/Unit/ConfigDevelAutoExportSubscriberTest.php b/tests/src/Unit/ConfigDevelAutoExportSubscriberTest.php
index 1eead96..dbd62d0 100644
--- a/tests/src/Unit/ConfigDevelAutoExportSubscriberTest.php
+++ b/tests/src/Unit/ConfigDevelAutoExportSubscriberTest.php
@@ -23,9 +23,7 @@ class ConfigDevelAutoExportSubscriberTest extends ConfigDevelTestBase {
       'uuid' => '836769f4-6791-402d-9046-cc06e20be87f',
     );
 
-    $config = $this->getMockBuilder('\Drupal\Core\Config\Config')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $config = $this->createMock('\Drupal\Core\Config\Config');
     $config->expects($this->any())
       ->method('getName')
       ->will($this->returnValue($this->randomMachineName()));
diff --git a/tests/src/Unit/ConfigDevelTestBase.php b/tests/src/Unit/ConfigDevelTestBase.php
index e42b717..f8d4259 100644
--- a/tests/src/Unit/ConfigDevelTestBase.php
+++ b/tests/src/Unit/ConfigDevelTestBase.php
@@ -11,12 +11,12 @@ use Drupal\Tests\UnitTestCase;
 abstract class ConfigDevelTestBase extends UnitTestCase {
 
   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $configFactory;
 
   /**
-   * @var \Drupal\Core\Config\ConfigManagerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var \Drupal\Core\Config\ConfigManagerInterface|\PHPUnit\Framework\MockObject\MockObject
    */
   protected $configManager;
 
@@ -28,7 +28,7 @@ abstract class ConfigDevelTestBase extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->configFactory = $this->createMock('Drupal\Core\Config\ConfigFactoryInterface');
 
diff --git a/tests/src/Unit/ConfigImporterExporterTest.php b/tests/src/Unit/ConfigImporterExporterTest.php
index e66e022..659d430 100644
--- a/tests/src/Unit/ConfigImporterExporterTest.php
+++ b/tests/src/Unit/ConfigImporterExporterTest.php
@@ -21,6 +21,7 @@ use Drupal\config_devel\ConfigImporterExporter;
  */
 class ConfigImporterExporterTest extends ConfigDevelTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Test ConfigImporterExporter::writeBackConfig().
    */
@@ -31,9 +32,7 @@ class ConfigImporterExporterTest extends ConfigDevelTestBase {
       'uuid' => '836769f4-6791-402d-9046-cc06e20be87f',
     );
 
-    $config = $this->getMockBuilder('\Drupal\Core\Config\Config')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $config = $this->createMock('\Drupal\Core\Config\Config');
     $config->expects($this->any())
       ->method('getName')
       ->will($this->returnValue($this->randomMachineName()));
