modules/contrib/user_email_verification/src/Cache/Context/UserEmailVerificationNeeded.php
modules/contrib/user_email_verification/src/Controller/UserEmailVerificationVerify.php
modules/contrib/user_email_verification/src/Controller/UserEmailVerificationVerifyExtended.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationBlockAccountEvent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationCreateVerificationEvent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationDeleteAccountEvent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationEvents.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesEmailVerified.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesEmailVerifiedExtended.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesExtendedReminderMailSent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesReminderMailSent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationVerifyEvent.php
modules/contrib/user_email_verification/src/Form/UserEmailVerificationRequestForm.php
modules/contrib/user_email_verification/src/Form/UserEmailVerificationSettingsForm.php
modules/contrib/user_email_verification/src/Plugin/Block/UserEmailVerificationNotificationBlock.php
modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVerificationExtendedPeriodExceeded.php
modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVerificationPeriodExceeded.php
modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVerificationUserEmailVerified.php
modules/contrib/user_email_verification/src/Plugin/QueueWorker/UserEmailVerificationBlockAccount.php
modules/contrib/user_email_verification/src/Plugin/QueueWorker/UserEmailVerificationDeleteAccount.php
modules/contrib/user_email_verification/src/Plugin/QueueWorker/UserEmailVerificationReminders.php
modules/contrib/user_email_verification/src/Plugin/RulesAction/UserEmailVerificationSendNotificationMail.php
modules/contrib/user_email_verification/src/Plugin/RulesAction/UserEmailVerificationVerifyUserEmail.php
modules/contrib/user_email_verification/src/Plugin/views/filter/EmailVerification.php
modules/contrib/user_email_verification/src/UserEmailVerification.php
modules/contrib/user_email_verification/src/UserEmailVerificationInterface.php
modules/contrib/user_email_verification/user_email_verification.install
modules/contrib/user_email_verification/user_email_verification.module
modules/contrib/user_email_verification/user_email_verification.post_update.php
modules/contrib/user_email_verification/user_email_verification.tokens.inc
modules/contrib/user_email_verification/user_email_verification.views.inc

7 files with changes
====================

1) modules/contrib/user_email_verification/src/UserEmailVerification.php:372

    ---------- begin diff ----------
@@ @@
     // Provide an ability to other modules to modify
     // verified state (like auto-verify some specific users).
     $event = new UserEmailVerificationCreateVerificationEvent($user, (bool) $verified);
-    $this->eventDispatcher->dispatch(UserEmailVerificationEvents::CREATE_VERIFICATION, $event);
+    $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::CREATE_VERIFICATION);

     if ($verify || $event->shouldBeVerified()) {
       $verified = $this->time->getRequestTime();
@@ @@
       // Provide an ability to other modules to act before
       // account block (like prevent some accounts block).
       $event = new UserEmailVerificationBlockAccountEvent($user, $user->isActive());
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::BLOCK_ACCOUNT, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::BLOCK_ACCOUNT);

       if ($event->shouldBeBlocked()) {
         $user->block()->save();
@@ @@
       // Provide an ability to other modules to act before
       // account delete (like prevent some accounts delete).
       $event = new UserEmailVerificationDeleteAccountEvent($user, TRUE);
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::DELETE_ACCOUNT, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::DELETE_ACCOUNT);

       if ($event->shouldBeDeleted()) {
         $this->setVerificationState($user->id(), UserEmailVerificationInterface::STATE_DELETED);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/user_email_verification/src/Event/UserEmailVerificationVerifyEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @ingroup user_email_verification
  */
-class UserEmailVerificationVerifyEvent extends Event {
+class UserEmailVerificationVerifyEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The user account being verify.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/user_email_verification/src/Event/UserEmailVerificationDeleteAccountEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @ingroup user_email_verification
  */
-class UserEmailVerificationDeleteAccountEvent extends Event {
+class UserEmailVerificationDeleteAccountEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The user account being verify.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/user_email_verification/src/Event/UserEmailVerificationCreateVerificationEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @ingroup user_email_verification
  */
-class UserEmailVerificationCreateVerificationEvent extends Event {
+class UserEmailVerificationCreateVerificationEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The user account being verify.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/user_email_verification/src/Event/UserEmailVerificationBlockAccountEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @ingroup user_email_verification
  */
-class UserEmailVerificationBlockAccountEvent extends Event {
+class UserEmailVerificationBlockAccountEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The user account being verify.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/user_email_verification/src/Controller/UserEmailVerificationVerifyExtended.php:110

    ---------- begin diff ----------
@@ @@
       $this->messenger()->addStatus($this->t('Thank you for verifying your Email address.'));

       $event = new UserEmailVerificationVerifyEvent($user, $user->isBlocked());
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::VERIFY_EXTENDED, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::VERIFY_EXTENDED);

       $rules_event = new UserEmailVerificationRulesEmailVerifiedExtended($user);
       $this->eventDispatcher->dispatch($rules_event, $rules_event::EVENT_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/user_email_verification/src/Controller/UserEmailVerificationVerify.php:111

    ---------- begin diff ----------
@@ @@
       $this->messenger()->addStatus($this->t('Thank you for verifying your Email address.'));

       $event = new UserEmailVerificationVerifyEvent($user, $user->isBlocked());
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::VERIFY, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::VERIFY);

       $rules_event = new UserEmailVerificationRulesEmailVerified($user);
       $this->eventDispatcher->dispatch($rules_event, $rules_event::EVENT_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/RulesAction/UserEmail
         VerificationVerifyUserEmail.php" file, due to:                         
         "Analyze error: "Class Drupal\rules\Core\RulesActionBase not found.".  
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/RulesAction/UserEmail
         VerificationSendNotificationMail.php" file, due to:                    
         "Analyze error: "Class Drupal\rules\Core\RulesActionBase not found.".  
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVe
         rificationUserEmailVerified.php" file, due to:                         
         "Analyze error: "Class Drupal\rules\Core\RulesConditionBase not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVe
         rificationPeriodExceeded.php" file, due to:                            
         "Analyze error: "Class Drupal\rules\Core\RulesConditionBase not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVe
         rificationExtendedPeriodExceeded.php" file, due to:                    
         "Analyze error: "Class Drupal\rules\Core\RulesConditionBase not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

