diff --git a/src/Controller/PayPalSmartButtonsController.php b/src/Controller/PayPalSmartButtonsController.php
index ed0a3e8..8121b51 100644
--- a/src/Controller/PayPalSmartButtonsController.php
+++ b/src/Controller/PayPalSmartButtonsController.php
@@ -72,8 +72,8 @@ class PayPalSmartButtonsController extends ControllerBase {
 
       $event = new PaypalSmartButtonsEvent($data['details'], $element);
       $this->eventDispatcher->dispatch(
-        PayPalSmartButtonsEvents::APPROVE_ORDER,
-        $event
+        $event,
+        PayPalSmartButtonsEvents::APPROVE_ORDER
       );
       return new JsonResponse('ok');
     }
diff --git a/src/Event/PaypalSmartButtonsEvent.php b/src/Event/PaypalSmartButtonsEvent.php
index ed5c2e9..840ff94 100644
--- a/src/Event/PaypalSmartButtonsEvent.php
+++ b/src/Event/PaypalSmartButtonsEvent.php
@@ -7,7 +7,7 @@ use Symfony\Component\EventDispatcher\Event;
 /**
  * PayPal smart buttons event.
  */
-class PaypalSmartButtonsEvent extends Event {
+class PaypalSmartButtonsEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Order details.
diff --git a/tests/src/Functional/SimplePayPalFieldTest.php b/tests/src/Functional/SimplePayPalFieldTest.php
index 74c0531..53b7f8f 100644
--- a/tests/src/Functional/SimplePayPalFieldTest.php
+++ b/tests/src/Functional/SimplePayPalFieldTest.php
@@ -23,7 +23,7 @@ class SimplePayPalFieldTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->webUser = $this->drupalCreateUser(
       [
@@ -82,11 +82,11 @@ class SimplePayPalFieldTest extends BrowserTestBase {
     )
       ->save();
     // Widgets.
-    entity_get_form_display('entity_test', 'entity_test', 'default')
+    \Drupal::service('entity_display.repository')->getFormDisplay('entity_test', 'entity_test', 'default')
       ->setComponent($field_name, ['type' => $widget_type])
       ->save();
 
-    entity_get_display('entity_test', 'entity_test', 'full')
+    \Drupal::service('entity_display.repository')->getViewDisplay('entity_test', 'entity_test', 'full')
       ->setComponent($field_name, ['type' => $formatter])
       ->save();
     return $field_name;
@@ -105,7 +105,7 @@ class SimplePayPalFieldTest extends BrowserTestBase {
     $this->drupalGet('entity_test/add');
     $this->assertSession()->elementExists('css', '.paypal-button');
 
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->submitForm([], t('Save'));
     preg_match('|entity_test/manage/(\d+)|', $this->getUrl(), $match);
     $id = $match[1];
     $this->assertSession()->pageTextContains(
@@ -114,14 +114,10 @@ class SimplePayPalFieldTest extends BrowserTestBase {
 
     // Display the entity.
     $entity = EntityTest::load($id);
-    $display = entity_get_display(
-      $entity->getEntityTypeId(),
-      $entity->bundle(),
-      'full'
-    );
+    $display = \Drupal::service('entity_display.repository')->getViewDisplay($entity->getEntityTypeId(), $entity->bundle(), 'full');
     $content = $display->build($entity);
     $rendered_entity = $this->container->get('renderer')->renderRoot($content);
-    $this->assertContains('paypal-button', (string) $rendered_entity);
+    $this->assertStringContainsString('paypal-button', (string) $rendered_entity);
   }
 
   /**
@@ -141,7 +137,7 @@ class SimplePayPalFieldTest extends BrowserTestBase {
     $field_item = "{$field_name}[value]";
     $this->drupalGet('entity_test/add');
     $this->assertSession()->checkboxChecked($field_item);
-    $this->drupalPostForm(NULL, [$field_item => 0], t('Save'));
+    $this->submitForm([$field_item => 0], t('Save'));
     preg_match('|entity_test/manage/(\d+)|', $this->getUrl(), $match);
     $id = $match[1];
     $this->assertSession()->pageTextContains(
