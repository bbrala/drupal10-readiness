modules/contrib/recaptcha/recaptcha.module
modules/contrib/recaptcha/src/Form/ReCaptchaAdminSettingsForm.php
modules/contrib/recaptcha/src/ReCaptcha/RequestMethod/Drupal8Post.php
modules/contrib/recaptcha/tests/src/Functional/ReCaptchaBasicTest.php

1 file with changes
===================

1) modules/contrib/recaptcha/tests/src/Functional/ReCaptchaBasicTest.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     module_load_include('inc', 'captcha');

@@ @@
     // Check form validation.
     $edit['recaptcha_site_key'] = '';
     $edit['recaptcha_secret_key'] = '';
-    $this->drupalPostForm('admin/config/people/captcha/recaptcha', $edit, $this->t('Save configuration'));
+    $this->drupalGet('admin/config/people/captcha/recaptcha');
+    $this->submitForm($edit, $this->t('Save configuration'));

     $this->assertSession()->responseContains($this->t('Site key field is required.'), '[testReCaptchaConfiguration]: Empty site key detected.');
     $this->assertSession()->responseContains($this->t('Secret key field is required.'), '[testReCaptchaConfiguration]: Empty secret key detected.');
@@ @@
     $edit['recaptcha_site_key'] = $site_key;
     $edit['recaptcha_secret_key'] = $secret_key;
     $edit['recaptcha_tabindex'] = 0;
-    $this->drupalPostForm('admin/config/people/captcha/recaptcha', $edit, $this->t('Save configuration'));
+    $this->drupalGet('admin/config/people/captcha/recaptcha');
+    $this->submitForm($edit, $this->t('Save configuration'));
     $this->assertSession()->responseContains($this->t('The configuration options have been saved.'), '[testReCaptchaConfiguration]: The configuration options have been saved.');

     $this->assertSession()->responseNotContains($this->t('Site key field is required.'), '[testReCaptchaConfiguration]: Site key was not empty.');
@@ @@
     $this->assertSession()
       ->hiddenFieldExists('captcha_response')
       ->setValue('?');
+    $this->drupalGet('user/login');

-    $this->drupalPostForm('user/login', $edit, $this->t('Log in'));
+    $this->submitForm($edit, $this->t('Log in'));
     // Check for error message.
     $this->assertSession()->pageTextContains($this->t('The answer you entered for the CAPTCHA was not correct.'), 'CAPTCHA should block user login form', 'reCAPTCHA');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

