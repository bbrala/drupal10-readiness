modules/contrib/protected_pages/protected_pages.install
modules/contrib/protected_pages/protected_pages.module
modules/contrib/protected_pages/src/Controller/ProtectedPagesController.php
modules/contrib/protected_pages/src/EventSubscriber/ProtectedPagesSubscriber.php
modules/contrib/protected_pages/src/Form/ProtectedPagesAddForm.php
modules/contrib/protected_pages/src/Form/ProtectedPagesDeleteConfirmForm.php
modules/contrib/protected_pages/src/Form/ProtectedPagesEditForm.php
modules/contrib/protected_pages/src/Form/ProtectedPagesLoginForm.php
modules/contrib/protected_pages/src/Form/ProtectedPagesSendEmailForm.php
modules/contrib/protected_pages/src/Form/ProtectedPagesSettingForm.php
modules/contrib/protected_pages/src/ProtectedPagesStorage.php
modules/contrib/protected_pages/tests/src/Functional/ProtectedPagesAccess.php

1 file with changes
===================

1) modules/contrib/protected_pages/src/EventSubscriber/ProtectedPagesSubscriber.php:99

    ---------- begin diff ----------
@@ @@
   /**
    * Redirects user to protected page login screen.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function checkProtectedPage(FilterResponseEvent $event) {
+  public function checkProtectedPage(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     if ($this->currentUser->hasPermission('bypass pages password protection')) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 1 file has been changed by Rector                                         

