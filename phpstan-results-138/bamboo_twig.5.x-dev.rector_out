modules/contrib/bamboo_twig/bamboo_twig.install
modules/contrib/bamboo_twig/bamboo_twig.module
modules/contrib/bamboo_twig/bamboo_twig_config/src/TwigExtension/Config.php
modules/contrib/bamboo_twig/bamboo_twig_extensions/bamboo_twig_extensions.install
modules/contrib/bamboo_twig/bamboo_twig_extensions/src/TwigExtension/TwigArray.php
modules/contrib/bamboo_twig/bamboo_twig_extensions/src/TwigExtension/TwigDate.php
modules/contrib/bamboo_twig/bamboo_twig_extensions/src/TwigExtension/TwigText.php
modules/contrib/bamboo_twig/bamboo_twig_file/src/TwigExtension/File.php
modules/contrib/bamboo_twig/bamboo_twig_i18n/src/TwigExtension/I18n.php
modules/contrib/bamboo_twig/bamboo_twig_loader/src/TwigExtension/Loader.php
modules/contrib/bamboo_twig/bamboo_twig_loader/src/TwigExtension/Render.php
modules/contrib/bamboo_twig/bamboo_twig_path/src/TwigExtension/Path.php
modules/contrib/bamboo_twig/bamboo_twig_security/src/TwigExtension/Security.php
modules/contrib/bamboo_twig/bamboo_twig_token/src/TwigExtension/Token.php
modules/contrib/bamboo_twig/src/TwigExtension/TwigExtensionBase.php
modules/contrib/bamboo_twig/tests/modules/bamboo_twig_test/bamboo_twig_test.module
modules/contrib/bamboo_twig/tests/modules/bamboo_twig_test/src/Controller/TestsController.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigConfigTest.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigExtensionsI18nTest.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigExtensionsTest.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigFileTest.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigI18nTest.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigLoaderTest.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigPathTest.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigRenderTest.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigSecurityTest.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigTestBase.php
modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigTokenTest.php
modules/contrib/bamboo_twig/tests/src/Kernel/BambooTwigSecurityTest.php

7 files with changes
====================

1) modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigTestBase.php:310

    ---------- begin diff ----------
@@ @@
       $css_selector
     );

-    $this->assert(empty($actual), $message);
+    $this->assertTrue(empty($actual), $message);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigRenderTest.php:348

    ---------- begin diff ----------
@@ @@
     /** @var \Drupal\Core\File\FileSystemInterface $file_system */
     $file_system = $this->container->get('file_system');

-    $file_system->copy(drupal_get_path('module', 'bamboo_twig_test') . '/files/antistatique.jpg', PublicStream::basePath());
+    $file_system->copy(\Drupal::service('extension.list.module')->getPath('bamboo_twig_test') . '/files/antistatique.jpg', PublicStream::basePath());

     $file = $file_storage->create([
       'uri' => 'public://antistatique.jpg',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/bamboo_twig/tests/src/Functional/BambooTwigLoaderTest.php:273

    ---------- begin diff ----------
@@ @@
     /** @var \Drupal\Core\File\FileSystemInterface $file_system */
     $file_system = $this->container->get('file_system');

-    $file_system->copy(drupal_get_path('module', 'bamboo_twig_test') . '/files/antistatique.jpg', PublicStream::basePath());
+    $file_system->copy(\Drupal::service('extension.list.module')->getPath('bamboo_twig_test') . '/files/antistatique.jpg', PublicStream::basePath());

     $file = $file_storage->create([
       'uri' => 'public://antistatique.jpg',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/bamboo_twig/tests/modules/bamboo_twig_test/src/Controller/TestsController.php:16

    ---------- begin diff ----------
@@ @@
   public function testLoader() {
     return [
       '#variables' => [
-        'image_path' => drupal_get_path('module', 'bamboo_twig_test') . '/files/antistatique.jpg',
+        'image_path' => \Drupal::service('extension.list.module')->getPath('bamboo_twig_test') . '/files/antistatique.jpg',
       ],
       '#theme' => 'bamboo_twig_test_loader',
     ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/bamboo_twig/bamboo_twig_path/src/TwigExtension/Path.php:39

    ---------- begin diff ----------
@@ @@
    *   if the item is not found.
    */
   public function getSystemPath($type, $name = NULL) {
-    return drupal_get_path($type, $name);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    return \Drupal::service('extension.path.resolver')->getPath($type, $name);
   }

 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/bamboo_twig/bamboo_twig_loader/src/TwigExtension/Render.php:188

    ---------- begin diff ----------
@@ @@
           $image_uri = $path;
         }
         else {
-          $image_uri = file_build_uri($path);
+          $image_uri = \Drupal::service('stream_wrapper_manager')->normalizeUri(\Drupal::config('system.file')->get('default_scheme') . ('://' . $path));
         }

         // Create the new image derivative.
         $image_style->createDerivative($image_uri, $image_style_uri);

-        return file_create_url($image_style_uri);
+        return \Drupal::service('file_url_generator')->generateAbsoluteString($image_style_uri);
       }
     }
    ----------- end diff -----------

Applied rules:
 * FileBuildUriRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/bamboo_twig/bamboo_twig_file/src/TwigExtension/File.php:75

    ---------- begin diff ----------
@@ @@
    *   then FALSE is returned
    */
   public function urlAbsolute($uri) {
-    return file_create_url($uri);
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
   }

 }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

