modules/contrib/nagios/nagios.api.php
modules/contrib/nagios/nagios.drush.inc
modules/contrib/nagios/nagios.module
modules/contrib/nagios/src/Commands/NagiosCommands.php
modules/contrib/nagios/src/Controller/RequirementsController.php
modules/contrib/nagios/src/Controller/StatuspageController.php
modules/contrib/nagios/src/EventSubscriber/MaintenanceModeSubscriber.php
modules/contrib/nagios/src/Form/IgnoredModulesForm.php
modules/contrib/nagios/src/Form/SettingsForm.php
modules/contrib/nagios/src/Plugin/migrate/source/NagiosDynamicSettings.php
modules/contrib/nagios/tests/modules/nagios_hook_test_module/nagios_hook_test_module.module
modules/contrib/nagios/tests/phpstan-bootstrap.php
modules/contrib/nagios/tests/src/Functional/SettingsFormTest.php
modules/contrib/nagios/tests/src/Kernel/CustomHookCheckTest.php
modules/contrib/nagios/tests/src/Kernel/MaintenanceModeTest.php
modules/contrib/nagios/tests/src/Kernel/NagiosCheckTest.php
modules/contrib/nagios/tests/src/Kernel/WatchdogCheckTest.php

3 files with changes
====================

1) modules/contrib/nagios/tests/src/Kernel/WatchdogCheckTest.php:71

    ---------- begin diff ----------
@@ @@
     self::expectWatchdog($expected);
   }

+  /**
+   * @doesNotPerformAssertions
+   */
   public function testFilter() {
     $config = \Drupal::configFactory()->getEditable('nagios.settings');
     $config->set('nagios.limit_watchdog.channel_filter', ['onion']);
@@ @@
     self::expectWatchdog($expected);
   }

+  /**
+   * @doesNotPerformAssertions
+   */
   public function testOrder() {
     $this->getLogger('test')->warning('warning 1');
     sleep(2);
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/nagios/tests/src/Kernel/MaintenanceModeTest.php:17

    ---------- begin diff ----------
@@ @@
  */
 class MaintenanceModeTest extends EntityKernelTestBase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Modules to install.
    *
@@ @@

   public function testSubscriber() {
     $subscriber = new MaintenanceModeSubscriber();
-    $get_response_event = $this->prophesize(GetResponseEvent::class);
+    $get_response_event = $this->prophesize(\Symfony\Component\HttpKernel\Event\RequestEvent::class);
     $request = $this->prophesize(Request::class);

     /** @noinspection PhpUndefinedMethodInspection */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/nagios/src/EventSubscriber/MaintenanceModeSubscriber.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Make the status page available when Drupal is in maintenance mode.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function onKernelRequestMaintenance(GetResponseEvent $event) {
+  public function onKernelRequestMaintenance(\Symfony\Component\HttpKernel\Event\RequestEvent $event) {
     $config = \Drupal::config('nagios.settings');
     $request = $event->getRequest();
     $nagios_path = '/' . $config->get('nagios.statuspage.path');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 3 files have been changed by Rector                                       

