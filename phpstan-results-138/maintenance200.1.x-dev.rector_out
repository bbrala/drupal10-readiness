modules/contrib/maintenance200/maintenance200.module
modules/contrib/maintenance200/src/EventSubscriber/MaintenanceModeSubscriber.php
modules/contrib/maintenance200/src/Form/Maintenance200SettingsForm.php
modules/contrib/maintenance200/tests/src/Functional/Maintenance200SettingsTest.php
modules/contrib/maintenance200/tests/src/Functional/Maintenance200Test.php

3 files with changes
====================

1) modules/contrib/maintenance200/tests/src/Functional/Maintenance200Test.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create Basic page node type.
@@ @@
     \Drupal::state()->set('system.maintenance_mode', FALSE);

     $this->drupalGet('<front>');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

   /**
@@ @@
       ->save();

     $this->drupalGet('<front>');
-    $this->assertResponse(503);
+    $this->assertSession()->statusCodeEquals(503);
   }

   /**
@@ @@
       ->save();

     $this->drupalGet('<front>');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

   /**
@@ @@
       ->save();

     $this->drupalGet('<front>');
-    $this->assertResponse(418);
+    $this->assertSession()->statusCodeEquals(418);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/maintenance200/tests/src/Functional/Maintenance200SettingsTest.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->sut = $this
@@ @@
    */
   public function testSettingsForm() {
     $this->drupalGet(Url::fromRoute('maintenance200_settings'));
-    $this->assertRaw('Change the status code during maintenance mode', 'Checkbox found.');
-    $this->assertFieldByName('maintenance200_enabled', TRUE);
+    $this->assertSession()->responseContains('Change the status code during maintenance mode');
+    $this->assertSession()->fieldValueEquals('maintenance200_enabled', TRUE);
   }

   /**
@@ @@
     $maintenance200FormUrl = Url::fromRoute('maintenance200_settings')
       ->toString();
     $this->drupalGet(Url::fromRoute('system.site_maintenance_mode'));
-    $this->assertLinkByHref($maintenance200FormUrl);
+    $this->assertSession()->linkByHrefExists($maintenance200FormUrl);
   }

   /**
@@ @@
     $edit = [
       'maintenance200_enabled' => 0,
     ];
-    $this->drupalPostForm('admin/config/development/maintenance200', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/development/maintenance200');
+    $this->submitForm($edit, t('Save configuration'));

-    $this->assertRaw('The configuration options have been saved.', 'Settings saved.');
+    $this->assertSession()->responseContains('The configuration options have been saved.');

     $this->drupalGet(Url::fromRoute('maintenance200_settings'));
-    $this->assertFieldByName('maintenance200_enabled', FALSE);
+    $this->assertSession()->fieldValueEquals('maintenance200_enabled', FALSE);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * AssertLinkByHrefRector
 * AssertRawRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/maintenance200/src/EventSubscriber/MaintenanceModeSubscriber.php:28

    ---------- begin diff ----------
@@ @@
    * Respond to RESPONSE Kernel event by setting status code if in maintenance.
    *
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     if ($this->config->get('maintenance200_enabled')) {
       $status_code = $this->config->get('maintenance200_status_code');
       $request = $event->getRequest();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 3 files have been changed by Rector                                       

