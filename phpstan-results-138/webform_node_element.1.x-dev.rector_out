modules/contrib/webform_node_element/modules/webform_node_element_example/src/EventSubscriber/ExampleEventSubscriber.php
modules/contrib/webform_node_element/src/Element/WebformNodeElement.php
modules/contrib/webform_node_element/src/Event/WebformNodeElementPreRender.php
modules/contrib/webform_node_element/src/Plugin/WebformElement/WebformNodeElement.php
modules/contrib/webform_node_element/tests/src/Functional/WebformNodeElementFunctionalTest.php
modules/contrib/webform_node_element/webform_node_element.module

2 files with changes
====================

1) modules/contrib/webform_node_element/tests/src/Functional/WebformNodeElementFunctionalTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Test.
    */
-  public function setup() {
+  public function setup(): void {
     parent::setup();
     $this->drupalCreateContentType(['type' => 'article', 'name' => 'Basic Article']);
   }
@@ @@

     $url = $webform->toUrl()->toString();
     $html = $this->drupalGet($url);
-    $this->assertText($node_title);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($node_title);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/webform_node_element/src/Event/WebformNodeElementPreRender.php:9

    ---------- begin diff ----------
@@ @@
  * This gives other modules a chance to dynamically set the nid and display
  * mode of the node being rendered.
  */
-class WebformNodeElementPreRender extends Event {
+class WebformNodeElementPreRender extends \Symfony\Contracts\EventDispatcher\Event {
   const PRERENDER = 'webform_node_element.pre_render';

   protected $elementID = NULL;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

