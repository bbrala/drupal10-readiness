diff --git a/src/CronJobListBuilder.php b/src/CronJobListBuilder.php
index e6e9c72..8d4f993 100644
--- a/src/CronJobListBuilder.php
+++ b/src/CronJobListBuilder.php
@@ -37,8 +37,8 @@ class CronJobListBuilder extends DraggableListBuilder {
    */
   public function buildRow(EntityInterface $entity) {
     /* @var \Drupal\ultimate_cron\CronJobInterface $entity */
-    $icon = drupal_get_path('module', 'ultimate_cron') . '/icons/hourglass.png';
-    $behind_icon = ['#prefix' => ' ', '#theme' => 'image', '#uri' => file_create_url($icon), '#title' => t('Job is behind schedule!')];
+    $icon = \Drupal::service('extension.list.module')->getPath('ultimate_cron') . '/icons/hourglass.png';
+    $behind_icon = ['#prefix' => ' ', '#theme' => 'image', '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($icon), '#title' => t('Job is behind schedule!')];
 
     $log_entry = $entity->loadLatestLogEntry();
     $row['label'] = $entity->label();
diff --git a/src/Form/SchedulerSettingsForm.php b/src/Form/SchedulerSettingsForm.php
index c9bdc71..e4e5053 100644
--- a/src/Form/SchedulerSettingsForm.php
+++ b/src/Form/SchedulerSettingsForm.php
@@ -69,7 +69,7 @@ class SchedulerSettingsForm extends ConfigFormBase {
       '#collapsed' => TRUE,
     );
     $form['crontab']['rules_help']['info'] = array(
-      '#markup' => file_get_contents(drupal_get_path('module', 'ultimate_cron') . '/help/rules.html'),
+      '#markup' => file_get_contents(\Drupal::service('extension.list.module')->getPath('ultimate_cron') . '/help/rules.html'),
     );
 
     // Settings for Simple scheduler.
diff --git a/src/Launcher/LauncherBase.php b/src/Launcher/LauncherBase.php
index f83f695..743570e 100644
--- a/src/Launcher/LauncherBase.php
+++ b/src/Launcher/LauncherBase.php
@@ -67,7 +67,7 @@ abstract class LauncherBase extends CronPlugin implements LauncherInterface {
    * {@inheritdoc}
    */
   public function formatRunning(CronJobInterface $job) {
-    $file = drupal_get_path('module', 'ultimate_cron') . '/icons/hourglass.png';
+    $file = \Drupal::service('extension.list.module')->getPath('ultimate_cron') . '/icons/hourglass.png';
     $status = ['#theme' => 'image', '#uri' => $file];
     $title = t('running');
     return array($status, $title);
@@ -77,7 +77,7 @@ abstract class LauncherBase extends CronPlugin implements LauncherInterface {
    * {@inheritdoc}
    */
   public function formatUnfinished(CronJobInterface $job) {
-    $file = drupal_get_path('module', 'ultimate_cron') . '/icons/lock_open.png';
+    $file = \Drupal::service('extension.list.module')->getPath('ultimate_cron') . '/icons/lock_open.png';
     $status = ['#theme' => 'image', '#uri' => $file];
     $title = t('unfinished but not locked?');
     return array($status, $title);
diff --git a/src/Plugin/ultimate_cron/Logger/CacheLogger.php b/src/Plugin/ultimate_cron/Logger/CacheLogger.php
index a97070c..4a7b304 100644
--- a/src/Plugin/ultimate_cron/Logger/CacheLogger.php
+++ b/src/Plugin/ultimate_cron/Logger/CacheLogger.php
@@ -116,7 +116,7 @@ class CacheLogger extends LoggerBase implements ContainerFactoryPluginInterface
 
     $settings = $this->getConfiguration();
 
-    $expire = $settings['timeout'] != Cache::PERMANENT ? REQUEST_TIME + $settings['timeout'] : $settings['timeout'];
+    $expire = $settings['timeout'] != Cache::PERMANENT ? \Drupal::time()->getRequestTime() + $settings['timeout'] : $settings['timeout'];
 
     $this->cache->set('uc-name:' . $log_entry->name, $log_entry->lid, $expire);
     $this->cache->set('uc-lid:' . $log_entry->lid, $log_entry->getData(), $expire);
diff --git a/src/Plugin/ultimate_cron/Scheduler/Crontab.php b/src/Plugin/ultimate_cron/Scheduler/Crontab.php
index 1795ad5..7592b1b 100644
--- a/src/Plugin/ultimate_cron/Scheduler/Crontab.php
+++ b/src/Plugin/ultimate_cron/Scheduler/Crontab.php
@@ -41,7 +41,7 @@ class Crontab extends SchedulerBase {
   public function formatLabelVerbose(CronJob $job) {
     $parsed = '';
     $next_schedule = NULL;
-    $time = REQUEST_TIME;
+    $time = \Drupal::time()->getRequestTime();
     $skew = $this->getSkew($job);
     foreach ($this->configuration['rules'] as $rule) {
       $cron = CronRule::factory($rule, $time, $skew);
@@ -83,7 +83,7 @@ class Crontab extends SchedulerBase {
     );
 
     $form['rules_help']['info'] = array(
-      '#markup' => file_get_contents(drupal_get_path('module', 'ultimate_cron') . '/help/rules.html'),
+      '#markup' => file_get_contents(\Drupal::service('extension.list.module')->getPath('ultimate_cron') . '/help/rules.html'),
     );
 
     $form['catch_up'] = array(
@@ -179,7 +179,7 @@ class Crontab extends SchedulerBase {
       $time = $cron->getNextSchedule();
       $next_schedule = is_null($next_schedule) || $time < $next_schedule ? $time : $next_schedule;
     }
-    $behind = REQUEST_TIME - $next_schedule;
+    $behind = \Drupal::time()->getRequestTime() - $next_schedule;
 
     return $behind > $this->configuration['catch_up'] ? $behind : FALSE;
   }
