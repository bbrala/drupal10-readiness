modules/contrib/humanstxt/humanstxt.module
modules/contrib/humanstxt/src/Controller/HumansTxtController.php
modules/contrib/humanstxt/src/Form/HumansTxtAdminSettingsForm.php
modules/contrib/humanstxt/tests/src/Functional/HumansTxtBasicTest.php

1 file with changes
===================

1) modules/contrib/humanstxt/tests/src/Functional/HumansTxtBasicTest.php:49

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create users.
@@ @@
    */
   public function testHumansTxtUserNoAccess() {
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($this->normalUser);
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }

   /**
@@ @@
    */
   public function testHumansTxtHeader() {
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
-    $this->assertHeader('Content-Type', 'text/plain; charset=UTF-8');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseHeaderEquals('Content-Type', 'text/plain; charset=UTF-8');
   }

   /**
@@ @@
    */
   public function testHumansTxtCacheTags() {
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
-    $this->assertCacheTag('humanstxt');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', 'humanstxt');
   }

   /**
@@ @@
   public function testHumansTxtConfigureHumansTxtNoLink() {
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $test_string = "# Testing Humans.txt {$this->randomMachineName()}";
     $this->submitForm(['humanstxt_content' => $test_string, 'humanstxt_display_link' => FALSE], t('Save configuration'));
     $this->drupalLogout();
@@ @@

     // Test the newly created humans.txt file.
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $content = $this->getSession()->getPage()->getContent();
     $this->assertTrue($content == $test_string, sprintf('Test string: [%s] is displayed in the configured humans.txt file.', $test_string));

@@ @@
     // Test if the link to the object/file is not in HTML <head> section.
     $this->drupalGet('/admin/config/development/humanstxt');
     $tags = $this->getSession()->getPage()->getHtml();
-    $this->assertNotContains($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is not shown in the -head- section.', $this->fileLink));
+    $this->assertStringNotContainsString($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is not shown in the -head- section.', $this->fileLink));
   }

   /**
@@ @@
   public function testHumansTxtConfigureHumansTxtWithLink() {
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $test_string = "# Testing Humans.txt {$this->randomMachineName()}";
     $this->submitForm(['humanstxt_content' => $test_string, 'humanstxt_display_link' => TRUE], t('Save configuration'));
     $this->drupalLogout();
@@ @@

     // Test the newly created humans.txt file.
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $content = $this->getSession()->getPage()->getContent();
     $this->assertTrue($content == $test_string, sprintf('Test string: [%s] is displayed in the configured humans.txt file.', $test_string));

@@ @@
     // Test if the link to the object/file is in HTML <head> section.
     $this->drupalGet('/admin/config/development/humanstxt');
     $tags = $this->getSession()->getPage()->getHtml();
-    $this->assertContains($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is shown in the -head- section.', $this->fileLink));
+    $this->assertStringContainsString($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is shown in the -head- section.', $this->fileLink));
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertCacheTagRector
 * AssertHeaderRector
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

