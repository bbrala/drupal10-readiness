diff --git a/src/Plugin/Field/FieldFormatter/VideoEmbedThumbnailFormatter.php b/src/Plugin/Field/FieldFormatter/VideoEmbedThumbnailFormatter.php
index a269df8..a516bad 100644
--- a/src/Plugin/Field/FieldFormatter/VideoEmbedThumbnailFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VideoEmbedThumbnailFormatter.php
@@ -92,7 +92,7 @@ class VideoEmbedThumbnailFormatter extends FormatterBase implements ContainerFac
         $url = $items->getEntity()->toUrl();
       }
       elseif ($this->getSetting('link_image_to') == static::LINK_PROVIDER) {
-        $url = Url::fromUri(file_create_url($file->getFileUri()));
+        $url = \Drupal::service('file_url_generator')->generate($file->getFileUri());
       }
       $element[$delta] = $provider->renderThumbnail($this->getSetting('image_style'), $url);
     }
diff --git a/src/Plugin/Field/FieldFormatter/VideoPlayerFormatter.php b/src/Plugin/Field/FieldFormatter/VideoPlayerFormatter.php
index 8d69ee8..2f3cae4 100644
--- a/src/Plugin/Field/FieldFormatter/VideoPlayerFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VideoPlayerFormatter.php
@@ -170,7 +170,7 @@ class VideoPlayerFormatter extends VideoPlayerFormatterBase implements Container
     foreach ($files as $delta => $file) {
       $elements[$delta] = [
         '#theme' => 'video_player_formatter',
-        '#items' => [file_create_url($file->getFileUri())],
+        '#items' => [\Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri())],
         '#player_attributes' => $this->getSettings(),
       ];
     }
diff --git a/src/Plugin/Field/FieldFormatter/VideoPlayerListFormatter.php b/src/Plugin/Field/FieldFormatter/VideoPlayerListFormatter.php
index 12817dc..d2a2664 100644
--- a/src/Plugin/Field/FieldFormatter/VideoPlayerListFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VideoPlayerListFormatter.php
@@ -42,7 +42,7 @@ class VideoPlayerListFormatter extends VideoPlayerFormatter implements Container
     // Collect cache tags to be added for each item in the field.
     $video_items = [];
     foreach ($files as $delta => $file) {
-      $video_items[] = file_create_url($file->getFileUri());
+      $video_items[] = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     }
     $elements[] = [
       '#theme' => 'video_player_formatter',
diff --git a/src/Plugin/Field/FieldFormatter/VideoUrlFormatter.php b/src/Plugin/Field/FieldFormatter/VideoUrlFormatter.php
index 12c1839..63dde18 100644
--- a/src/Plugin/Field/FieldFormatter/VideoUrlFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VideoUrlFormatter.php
@@ -100,7 +100,7 @@ class VideoUrlFormatter extends VideoPlayerFormatterBase implements ContainerFac
 
     // Collect cache tags to be added for each item in the field.
     foreach ($files as $delta => $file) {
-      $video_uri = file_create_url($file->getFileUri());
+      $video_uri = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       $elements[$delta] = ['#markup' => $video_uri];
     }
     return $elements;
diff --git a/src/Plugin/Field/FieldType/VideoItem.php b/src/Plugin/Field/FieldType/VideoItem.php
index 5d3e6be..5b5489c 100644
--- a/src/Plugin/Field/FieldType/VideoItem.php
+++ b/src/Plugin/Field/FieldType/VideoItem.php
@@ -159,7 +159,7 @@ class VideoItem extends FileItem {
     // Generate a file entity.
     $destination = $dirname . '/' . $random->name(10, TRUE) . '.mp4';
     $data = $random->paragraphs(3);
-    $file = file_save_data($data, $destination, FileSystemInterface::EXISTS_ERROR);
+    $file = \Drupal::service('file.repository')->writeData($data, $destination, FileSystemInterface::EXISTS_ERROR);
     $values = [
       'target_id' => $file->id(),
     ];
diff --git a/tests/src/Kernel/VideoItemSerializationTest.php b/tests/src/Kernel/VideoItemSerializationTest.php
index 3abd14f..ed8cff8 100644
--- a/tests/src/Kernel/VideoItemSerializationTest.php
+++ b/tests/src/Kernel/VideoItemSerializationTest.php
@@ -34,7 +34,7 @@ class VideoItemSerializationTest extends FieldKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
