modules/contrib/entity_ui/entity_ui.api.php
modules/contrib/entity_ui/entity_ui.module
modules/contrib/entity_ui/entity_ui.tokens.inc
modules/contrib/entity_ui/src/Annotation/EntityTabContent.php
modules/contrib/entity_ui/src/Breadcrumb/AdminBreadcrumbBuilder.php
modules/contrib/entity_ui/src/Controller/EntityTabAddPage.php
modules/contrib/entity_ui/src/Controller/EntityTabController.php
modules/contrib/entity_ui/src/Entity/EntityTab.php
modules/contrib/entity_ui/src/Entity/EntityTabInterface.php
modules/contrib/entity_ui/src/EntityHandler/BasicFieldUI.php
modules/contrib/entity_ui/src/EntityHandler/BundleEntityCollection.php
modules/contrib/entity_ui/src/EntityHandler/EntityTabListBuilder.php
modules/contrib/entity_ui/src/EntityHandler/EntityUIAdminBase.php
modules/contrib/entity_ui/src/EntityHandler/EntityUIAdminInterface.php
modules/contrib/entity_ui/src/EntityHandler/FieldUIWithoutBundleEntityProxy.php
modules/contrib/entity_ui/src/EntityHandler/PlainBundlesEntityUIAdmin.php
modules/contrib/entity_ui/src/EntityTabsLoader.php
modules/contrib/entity_ui/src/EntityUiPermissions.php
modules/contrib/entity_ui/src/Form/EntityTabDeleteForm.php
modules/contrib/entity_ui/src/Form/EntityTabForm.php
modules/contrib/entity_ui/src/Plugin/Derivative/ActionsConfigurableActionTabContentDeriver.php
modules/contrib/entity_ui/src/Plugin/Derivative/EntityLocalTasks.php
modules/contrib/entity_ui/src/Plugin/Derivative/EntityTabsAdminLocalActions.php
modules/contrib/entity_ui/src/Plugin/Derivative/EntityTabsAdminLocalTasks.php
modules/contrib/entity_ui/src/Plugin/EntityTabContent/ActionsConfigurableAction.php
modules/contrib/entity_ui/src/Plugin/EntityTabContent/EntityForm.php
modules/contrib/entity_ui/src/Plugin/EntityTabContent/EntityView.php
modules/contrib/entity_ui/src/Plugin/EntityTabContent/OwnerAssign.php
modules/contrib/entity_ui/src/Plugin/EntityTabContentBase.php
modules/contrib/entity_ui/src/Plugin/EntityTabContentFormBase.php
modules/contrib/entity_ui/src/Plugin/EntityTabContentInterface.php
modules/contrib/entity_ui/src/Plugin/EntityTabContentManager.php
modules/contrib/entity_ui/src/Plugin/EntityTabLazyPluginCollection.php
modules/contrib/entity_ui/src/Routing/AdminRouteProviderSubscriber.php
modules/contrib/entity_ui/src/Routing/EntityTabAdminRouteProvider.php
modules/contrib/entity_ui/src/Routing/TabRouteProvider.php
modules/contrib/entity_ui/src/TargetEntityTypes.php
modules/contrib/entity_ui/tests/src/Functional/AdminUITest.php
modules/contrib/entity_ui/tests/src/Functional/OwnerAssignTabTest.php
modules/contrib/entity_ui/tests/src/Kernel/ActionDerivativesTest.php
modules/contrib/entity_ui/tests/src/Kernel/AdminUIHandlerTest.php

4 files with changes
====================

1) modules/contrib/entity_ui/tests/src/Kernel/AdminUIHandlerTest.php:10

    ---------- begin diff ----------
@@ @@
  */
 class AdminUIHandlerTest extends KernelTestBase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Modules to enable.
    *
@@ @@
     'entity_ui',
   ];

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_ui/tests/src/Kernel/ActionDerivativesTest.php:26

    ---------- begin diff ----------
@@ @@
     'entity_ui',
   ];

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['node']);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_ui/tests/src/Functional/OwnerAssignTabTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->nodeStorage = $this->container->get('entity_type.manager')
@@ @@
     $edit = [
       'owner_uid' => $new_owner->getUsername() . ' (' . $new_owner->id() . ')',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Change owner');
+    $this->submitForm($edit, 'Change owner');

     // Reload the node.
     $node = $this->nodeStorage->load($node->id());
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_ui/tests/src/Functional/AdminUITest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create an Article node type.
@@ @@

     // Check the collection page has the expected elements.
     // Check the node type collection tab is shown.
-    $this->assertLinkByHref('admin/structure/types');
+    $this->assertSession()->linkByHrefExists('admin/structure/types');

     // Check the built-in tabs on nodes are shown.
     $this->assertSession()->pageTextContains(t('View'));
@@ @@
     $this->assertSession()->pageTextContains(t('Delete'));

     $this->assertSession()->pageTextContains(t('Add entity tab'));
-    $this->assertLinkByHref('admin/structure/entity_ui/entity_tab/add/node');
+    $this->assertSession()->linkByHrefExists('admin/structure/entity_ui/entity_tab/add/node');

     // Create a new entity tab on nodes.
     $this->clickLink(t('Add entity tab'));
@@ @@
       'content_plugin' => 'entity_view',
       'content_config[view_mode]' => 'default',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Check the new tab is now shown in the collection listing.
     $this->assertSession()->pageTextContains($edit['label']);
-    $this->assertLinkByHref("admin/structure/entity_ui/entity_tab/node.{$edit['id']}/edit");
+    $this->assertSession()->linkByHrefExists("admin/structure/entity_ui/entity_tab/node.{$edit['id']}/edit");


     // todo:
@@ @@

     // Check the collection page has the expected elements.
     // Check the user accounts setings tab is shown.
-    $this->assertLinkByHref('admin/config/people/accounts');
+    $this->assertSession()->linkByHrefExists('admin/config/people/accounts');

     // Check the built-in tabs on users are shown.
     $this->assertSession()->pageTextContains(t('View'));
@@ @@
     $this->assertSession()->pageTextContains(t('Edit'));

     $this->assertSession()->pageTextContains(t('Add entity tab'));
-    $this->assertLinkByHref('admin/structure/entity_ui/entity_tab/add/user');
+    $this->assertSession()->linkByHrefExists('admin/structure/entity_ui/entity_tab/add/user');

     // Create a new entity tab on users.
     $this->clickLink(t('Add entity tab'));
@@ @@
       'content_plugin' => 'entity_view',
       'content_config[view_mode]' => 'default',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Check the new tab is now shown in the collection listing.
     $this->assertSession()->pageTextContains($edit['label']);
-    $this->assertLinkByHref("admin/structure/entity_ui/entity_tab/user.{$edit['id']}/edit");
+    $this->assertSession()->linkByHrefExists("admin/structure/entity_ui/entity_tab/user.{$edit['id']}/edit");


     // todo:
    ----------- end diff -----------

Applied rules:
 * AssertLinkByHrefRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

