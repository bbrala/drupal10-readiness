diff --git a/footnotes.info.yml b/footnotes.info.yml
index 15d7a32..202ae65 100644
--- a/footnotes.info.yml
+++ b/footnotes.info.yml
@@ -2,7 +2,7 @@ name: Footnotes
 description: 'Add automatically numbered footnotes to your posts.'
 
 type: module
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
   - 'fakeobjects:fakeobjects'
diff --git a/src/Plugin/CKEditorPlugin/Footnotes.php b/src/Plugin/CKEditorPlugin/Footnotes.php
index 4534163..bf988ec 100644
--- a/src/Plugin/CKEditorPlugin/Footnotes.php
+++ b/src/Plugin/CKEditorPlugin/Footnotes.php
@@ -29,7 +29,7 @@ class Footnotes extends CKEditorPluginBase {
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'footnotes') . '/assets/js/ckeditor/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('footnotes') . '/assets/js/ckeditor/plugin.js';
   }
 
   /**
@@ -39,7 +39,7 @@ class Footnotes extends CKEditorPluginBase {
     return [
       'footnotes' => [
         'label' => $this->t('Footnotes'),
-        'image' => drupal_get_path('module', 'footnotes') . '/assets/js/ckeditor/icons/footnotes.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('footnotes') . '/assets/js/ckeditor/icons/footnotes.png',
       ],
     ];
   }
diff --git a/tests/src/Functional/FootnotesFilterPluginTest.php b/tests/src/Functional/FootnotesFilterPluginTest.php
index 65d6f43..eba8b99 100755
--- a/tests/src/Functional/FootnotesFilterPluginTest.php
+++ b/tests/src/Functional/FootnotesFilterPluginTest.php
@@ -41,7 +41,7 @@ class FootnotesFilterPluginTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a filter admin user.
@@ -86,15 +86,21 @@ class FootnotesFilterPluginTest extends BrowserTestBase {
     $this->drupalGet('node/' . $node->id());
 
     // Footnote with [fn].
-    $this->assertNoRaw($note1);
-    $this->assertText($text1);
+    $this->assertSession()->responseNotContains($note1);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($text1);
 
     // Footnote with <fn>.
-    $this->assertNoRaw($note2);
-    $this->assertText($text2);
+    $this->assertSession()->responseNotContains($note2);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($text2);
 
     // Css file:
-    $this->assertRaw('/assets/css/footnotes.css');
+    $this->assertSession()->responseContains('/assets/css/footnotes.css');
     // @todo currently additional settings doesn't work as expected.
     // So we don't check additional settings for now.
     // $this->createTextFormat(TRUE);
@@ -120,13 +126,19 @@ class FootnotesFilterPluginTest extends BrowserTestBase {
     $this->drupalGet('node/' . $node->id());
 
     // Footnote with [fn].
-    $this->assertNoRaw($note1);
-    $this->assertText($text1);
+    $this->assertSession()->responseNotContains($note1);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($text1);
 
     // Elements with the same value should be collapsed.
     // @todo This should work only if footnotes_collapse setting is enabled.
-    $this->assertNoRaw($note2);
-    $this->assertNoText($text2);
+    $this->assertSession()->responseNotContains($note2);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains($text2);
   }
 
   /**
@@ -154,15 +166,18 @@ class FootnotesFilterPluginTest extends BrowserTestBase {
     ];
     $this->drupalGet("admin/config/content/formats/add");
     // Keep the "CKEditor" editor selected and click the "Configure" button.
-    $this->drupalPostForm(NULL, $edit, 'editor_configure');
+    $this->submitForm($edit, 'editor_configure');
     $edit['editor[settings][toolbar][button_groups]'] = $button_groups;
     $edit['filters[filter_footnotes][settings][footnotes_collapse]'] = $button_groups;
     if ($additional_settings) {
       $edit['filters[filter_footnotes][settings][footnotes_collapse]'] = 1;
       $edit['filters[filter_footnotes][settings][footnotes_html]'] = 1;
     }
-    $this->drupalPostForm(NULL, $edit, $this->t('Save configuration'));
-    $this->assertText($this->t('Added text format @format.', ['@format' => $this->formatName]));
+    $this->submitForm($edit, $this->t('Save configuration'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('Added text format @format.', ['@format' => $this->formatName]));
   }
 
 }
diff --git a/tests/src/FunctionalJavascript/FootnotesCkeditorPluginTest.php b/tests/src/FunctionalJavascript/FootnotesCkeditorPluginTest.php
index 52e8b60..e7aded9 100755
--- a/tests/src/FunctionalJavascript/FootnotesCkeditorPluginTest.php
+++ b/tests/src/FunctionalJavascript/FootnotesCkeditorPluginTest.php
@@ -56,7 +56,7 @@ class FootnotesCkeditorPluginTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a text format and associate CKEditor.
@@ -174,7 +174,7 @@ class FootnotesCkeditorPluginTest extends WebDriverTestBase {
     }
     $expected_value .= '</p>';
 
-    $this->assertEqual($body_value, $expected_value, $this->t('String, formed by CKEditor, is correct.'));
+    $this->assertEquals($body_value, $expected_value, $this->t('String, formed by CKEditor, is correct.'));
   }
 
 }
