diff --git a/opensearchtab.info.yml b/opensearchtab.info.yml
index f5acf6b..2e272d3 100644
--- a/opensearchtab.info.yml
+++ b/opensearchtab.info.yml
@@ -2,6 +2,5 @@ name: 'OpenSearch: Tab to Search'
 type: module
 description: 'The module activates Google Chrome tab to search your Drupal site.'
 package: Media
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 configure: opensearchtab.form
diff --git a/src/Tests/OpenSearchDescriptionTest.php b/src/Tests/OpenSearchDescriptionTest.php
index 452f105..ff1782f 100644
--- a/src/Tests/OpenSearchDescriptionTest.php
+++ b/src/Tests/OpenSearchDescriptionTest.php
@@ -45,7 +45,7 @@ class OpenSearchDescriptionTest extends BrowserTestBase {
   /**
    * Perform any initial set up tasks that run before every test method.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['access content']);
     $this->config = \Drupal::configFactory()
@@ -72,22 +72,22 @@ class OpenSearchDescriptionTest extends BrowserTestBase {
 
     // Display the open search description page.
     $this->drupalGet('opensearchdescription');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Test the tags.
-    $this->assertRaw('<OpenSearchDescription xmlns="http://a9.com/-/spec/opensearch/1.1/" xmlns:moz="http://www.mozilla.org/2006/browser/search/">');
-    $this->assertRaw('</OpenSearchDescription>');
-    $this->assertRaw('<ShortName>My site</ShortName>');
-    $this->assertRaw('<Description>My site search</Description>');
-    $this->assertRaw('<Url type="text/html" method="get" template="' .
+    $this->assertSession()->responseContains('<OpenSearchDescription xmlns="http://a9.com/-/spec/opensearch/1.1/" xmlns:moz="http://www.mozilla.org/2006/browser/search/">');
+    $this->assertSession()->responseContains('</OpenSearchDescription>');
+    $this->assertSession()->responseContains('<ShortName>My site</ShortName>');
+    $this->assertSession()->responseContains('<Description>My site search</Description>');
+    $this->assertSession()->responseContains('<Url type="text/html" method="get" template="' .
       $this->request->getSchemeAndHttpHost() . '/my-search?{searchTerms}"/>');
-    $this->assertRaw('<Url type="application/x-suggestions+json" method="get" template="' .
+    $this->assertSession()->responseContains('<Url type="application/x-suggestions+json" method="get" template="' .
       $this->request->getSchemeAndHttpHost() . '/suggestions?{searchTerms}"/>');
-    $this->assertRaw('<Url type="application/x-suggestions+xml" method="get" template="' .
+    $this->assertSession()->responseContains('<Url type="application/x-suggestions+xml" method="get" template="' .
       $this->request->getSchemeAndHttpHost() . '/suggestions?{searchTerms}"/>');
-    $this->assertRaw('<moz:SearchForm>' .
+    $this->assertSession()->responseContains('<moz:SearchForm>' .
       $this->request->getSchemeAndHttpHost() . '/my-search</moz:SearchForm>');
-    $this->assertRaw('<Image height="16" width="16" type="image/x-icon">' .
+    $this->assertSession()->responseContains('<Image height="16" width="16" type="image/x-icon">' .
       $this->request->getSchemeAndHttpHost() . '/themes/contrib/mytheme/favicon.ico</Image>');
   }
 
diff --git a/src/Tests/OpenSearchSettingsFormTest.php b/src/Tests/OpenSearchSettingsFormTest.php
index 40cb867..660b5f2 100644
--- a/src/Tests/OpenSearchSettingsFormTest.php
+++ b/src/Tests/OpenSearchSettingsFormTest.php
@@ -70,7 +70,7 @@ class OpenSearchSettingsFormTest extends BrowserTestBase {
    * Info to administrator permissions:
    * http://drupal.stackexchange.com/q/233416/72107
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->guestRole = Role::load('anonymous');
@@ -95,52 +95,21 @@ class OpenSearchSettingsFormTest extends BrowserTestBase {
 
     // Test the empty form.
     $this->drupalGet('admin/config/search/opensearchtab');
-    $this->assertResponse(200);
-    $this->assertText(
-      'See the XML of the open search tab:',
-      'Infobox text is shown.'
-    );
-
-    $this->assertFieldByName(
-      'opensearchtab_search_form_path',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_search_path',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_suggestions_path_json',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_suggestions_path_xml',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_shortname',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_description',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_favicon_path',
-      '',
-      'The field was found with the correct value.'
-    );
-
-    $this->assertNoFieldByName(
-      'test_field',
-      'test value'
-    );
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('See the XML of the open search tab:');
+
+    $this->assertSession()->fieldValueEquals('opensearchtab_search_form_path', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_search_path', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_suggestions_path_json', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_suggestions_path_xml', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_shortname', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_description', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_favicon_path', '');
+
+    $this->assertSession()->fieldValueNotEquals('test_field', 'test value');
 
     // Test saving the form.
     $edit = [
@@ -152,57 +121,23 @@ class OpenSearchSettingsFormTest extends BrowserTestBase {
       'opensearchtab_description' => 'My site search',
       'opensearchtab_favicon_path' => '/themes/contrib/mytheme/favicon.ico',
     ];
-    $this->drupalPostForm(NULL,
-      $edit,
-      t('Save configuration')
-    );
+    $this->submitForm($edit, t('Save configuration'));
 
-    $this->assertText(
-      'The configuration options have been saved.',
-      'The form was saved correctly.'
-    );
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     // Test the updated the form.
-    $this->assertFieldByName(
-      'opensearchtab_search_form_path',
-      '/my-search',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_search_path',
-      '/my-search?{searchTerms}',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_suggestions_path_json',
-      '/suggestions?{searchTerms}',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_suggestions_path_xml',
-      '/suggestions?{searchTerms}',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_shortname',
-      'My site',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_description',
-      'My site search',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_favicon_path',
-      '/themes/contrib/mytheme/favicon.ico',
-      'The field was found with the correct value.'
-    );
+    $this->assertSession()->fieldValueEquals('opensearchtab_search_form_path', '/my-search');
+    $this->assertSession()->fieldValueEquals('opensearchtab_search_path', '/my-search?{searchTerms}');
+    $this->assertSession()->fieldValueEquals('opensearchtab_suggestions_path_json', '/suggestions?{searchTerms}');
+    $this->assertSession()->fieldValueEquals('opensearchtab_suggestions_path_xml', '/suggestions?{searchTerms}');
+    $this->assertSession()->fieldValueEquals('opensearchtab_shortname', 'My site');
+    $this->assertSession()->fieldValueEquals('opensearchtab_description', 'My site search');
+    $this->assertSession()->fieldValueEquals('opensearchtab_favicon_path', '/themes/contrib/mytheme/favicon.ico');
 
-    $this->assertNoFieldByName(
-      'test_field',
-      'test value'
-    );
+    $this->assertSession()->fieldValueNotEquals('test_field', 'test value');
 
   }
 
@@ -216,7 +151,7 @@ class OpenSearchSettingsFormTest extends BrowserTestBase {
     $this->drupalLogin($this->guestUser);
 
     $this->drupalGet('admin/config/search/opensearchtab');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
 }
