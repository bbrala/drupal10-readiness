modules/contrib/livestorm/src/Controller/LivestormWebhookController.php
modules/contrib/livestorm/src/Event/LivestormNewRegistrantEvent.php
modules/contrib/livestorm/src/Event/LivestormWebhookEvent.php
modules/contrib/livestorm/src/Event/LivestormWebhookSubscriber.php
modules/contrib/livestorm/src/Event/LivestormWebinarEndEvent.php
modules/contrib/livestorm/src/Event/LivestormWebinarPublishedEvent.php
modules/contrib/livestorm/src/Event/LivestormWebinarStartEvent.php
modules/contrib/livestorm/src/Form/LivestormAdminForm.php

2 files with changes
====================

1) modules/contrib/livestorm/src/Event/LivestormWebhookEvent.php:8

    ---------- begin diff ----------
@@ @@
  *
  * Provides the Livestorm Webhook Event.
  */
-class LivestormWebhookEvent extends Event {
+class LivestormWebhookEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Livestorm Webhook Event type.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/livestorm/src/Controller/LivestormWebhookController.php:109

    ---------- begin diff ----------
@@ @@
     switch ($event_type) {
       case 'new_registrant':
         $e = new LivestormNewRegistrantEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.new_registrant', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.new_registrant');
         break;

       case 'webinar_start':
         $e = new LivestormWebinarStartEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.webinar_start', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.webinar_start');
         break;

       case 'webinar_end':
         $e = new LivestormWebinarEndEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.webinar_end', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.webinar_end');
         break;

       default:
         $e = new LivestormWebinarPublishedEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.webinar_published', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.webinar_published');
     }

     return new Response('Okay', Response::HTTP_OK);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

