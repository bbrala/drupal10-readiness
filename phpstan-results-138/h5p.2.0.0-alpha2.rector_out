modules/contrib/h5p/h5p.install
modules/contrib/h5p/h5p.module
modules/contrib/h5p/h5p.views.inc
modules/contrib/h5p/modules/h5peditor/h5peditor.module
modules/contrib/h5p/modules/h5peditor/src/Controller/H5PEditorAJAXController.php
modules/contrib/h5p/modules/h5peditor/src/H5PEditor/H5PEditorDrupalAjax.php
modules/contrib/h5p/modules/h5peditor/src/H5PEditor/H5PEditorDrupalStorage.php
modules/contrib/h5p/modules/h5peditor/src/H5PEditor/H5PEditorUtilities.php
modules/contrib/h5p/modules/h5peditor/src/Plugin/Field/FieldWidget/H5PEditorWidget.php
modules/contrib/h5p/src/Controller/H5PAJAX.php
modules/contrib/h5p/src/Controller/H5PContentUpgrade.php
modules/contrib/h5p/src/Controller/H5PEmbed.php
modules/contrib/h5p/src/Controller/H5PLibraryAdmin.php
modules/contrib/h5p/src/Entity/H5PContent.php
modules/contrib/h5p/src/Event/FinishedEvent.php
modules/contrib/h5p/src/Form/H5PAdminSettingsForm.php
modules/contrib/h5p/src/Form/H5PContentUpgradeForm.php
modules/contrib/h5p/src/Form/H5PLibraryDeleteForm.php
modules/contrib/h5p/src/Form/H5PLibraryUploadForm.php
modules/contrib/h5p/src/H5PContentStorageSchema.php
modules/contrib/h5p/src/H5PContentViewsData.php
modules/contrib/h5p/src/H5PDrupal/H5PDrupal.php
modules/contrib/h5p/src/H5PDrupal/H5PEvent.php
modules/contrib/h5p/src/Plugin/Field/FieldFormatter/H5PDefaultFormatter.php
modules/contrib/h5p/src/Plugin/Field/FieldType/H5PItem.php
modules/contrib/h5p/src/Plugin/Field/FieldWidget/H5PUploadWidget.php
modules/contrib/h5p/src/Plugin/Field/H5PWidgetBase.php
modules/contrib/h5p/src/Plugin/views/access/H5PAccessUserPoints.php
modules/contrib/h5p/vendor/autoload.php
modules/contrib/h5p/vendor/composer/ClassLoader.php
modules/contrib/h5p/vendor/composer/InstalledVersions.php
modules/contrib/h5p/vendor/composer/autoload_classmap.php
modules/contrib/h5p/vendor/composer/autoload_files.php
modules/contrib/h5p/vendor/composer/autoload_namespaces.php
modules/contrib/h5p/vendor/composer/autoload_psr4.php
modules/contrib/h5p/vendor/composer/autoload_real.php
modules/contrib/h5p/vendor/composer/autoload_static.php
modules/contrib/h5p/vendor/composer/installed.php
modules/contrib/h5p/vendor/composer/platform_check.php
modules/contrib/h5p/vendor/h5p/h5p-core/embed.php
modules/contrib/h5p/vendor/h5p/h5p-core/h5p-default-storage.class.php
modules/contrib/h5p/vendor/h5p/h5p-core/h5p-development.class.php
modules/contrib/h5p/vendor/h5p/h5p-core/h5p-event-base.class.php
modules/contrib/h5p/vendor/h5p/h5p-core/h5p-file-storage.interface.php
modules/contrib/h5p/vendor/h5p/h5p-core/h5p-metadata.class.php
modules/contrib/h5p/vendor/h5p/h5p-core/h5p.classes.php
modules/contrib/h5p/vendor/h5p/h5p-editor/h5peditor-ajax.class.php
modules/contrib/h5p/vendor/h5p/h5p-editor/h5peditor-ajax.interface.php
modules/contrib/h5p/vendor/h5p/h5p-editor/h5peditor-file.class.php
modules/contrib/h5p/vendor/h5p/h5p-editor/h5peditor-storage.interface.php
modules/contrib/h5p/vendor/h5p/h5p-editor/h5peditor.class.php

11 files with changes
=====================

1) modules/contrib/h5p/src/Plugin/Field/FieldWidget/H5PUploadWidget.php:65

    ---------- begin diff ----------
@@ @@
     $interface = H5PDrupal::getInstance('interface', $file_field);
     $h5p_path = $interface->getOption('default_path', 'h5p');
     $temporary_file_path = "public://{$h5p_path}/temp/" . uniqid('h5p-');
-    file_prepare_directory($temporary_file_path, FILE_CREATE_DIRECTORY);
+    \Drupal::service('file_system')->prepareDirectory($temporary_file_path, \Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY);

     // Validate file
     $files = file_save_upload($file_field, $validators, $temporary_file_path);
    ----------- end diff -----------

Applied rules:
 * FileCreateDirectoryRector
 * FilePrepareDirectoryRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/h5p/src/H5PDrupal/H5PDrupal.php:134

    ---------- begin diff ----------
@@ @@
       'reportingIsEnabled' => ($interface->getOption('enable_lrs_content_types', FALSE) === 1) ? TRUE : FALSE,
       'libraryConfig' => $core->h5pF->getLibraryConfig(),
       'pluginCacheBuster' => '?' . \Drupal::state()->get('system.css_js_query_string', '0'),
-      'libraryUrl' => base_path() . drupal_get_path('module', 'h5p') . '/vendor/h5p/h5p-core/js',
+      'libraryUrl' => base_path() . \Drupal::service('extension.list.module')->getPath('h5p') . '/vendor/h5p/h5p-core/js',
     );

     if ($user->id()) {
@@ @@

     // Determine cache buster
     $cache_buster = \Drupal::state()->get('system.css_js_query_string', '0');
-    $h5p_module_path = drupal_get_path('module', 'h5p');
+    $h5p_module_path = \Drupal::service('extension.list.module')->getPath('h5p');

     // Add all core scripts
     foreach (\H5PCore::$scripts as $script) {
@@ @@
     }
     $cachedAsset = $optimizer->optimize($assets);

-    return array_map(function($publicUrl){ return file_create_url($publicUrl); }, array_column($cachedAsset, 'data'));
+    return array_map(function($publicUrl){ return \Drupal::service('file_url_generator')->generateAbsoluteString($publicUrl); }, array_column($cachedAsset, 'data'));
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/h5p/src/Form/H5PContentUpgradeForm.php:42

    ---------- begin diff ----------
@@ @@

     $contents_plural = \Drupal::translation()->formatPlural($contents, '1 content instance', '@count content instances');
     $returnLink = Link::fromTextAndUrl(t('Return'), Url::fromUri('internal:/admin/content/h5p/'))->toString();
-    $h5p_module_rel = base_path() . drupal_get_path('module', 'h5p');
+    $h5p_module_rel = base_path() . \Drupal::service('extension.list.module')->getPath('h5p');
     $settings = [
       'libraryInfo' => [
         'message' => t('You are about to upgrade %num. Please select upgrade version.', ['%num' => $contents_plural]),
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/h5p/src/Form/H5PAdminSettingsForm.php:26

    ---------- begin diff ----------
@@ @@
     $interface = H5PDrupal::getInstance();
     $core = H5PDrupal::getInstance('core');

-    $path = drupal_get_path('module', 'h5p');
+    $path = \Drupal::service('extension.list.module')->getPath('h5p');

     // Get server setup error messages
     $server_setup_errors = $core->checkSetupErrorMessage()->errors;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/h5p/src/Event/FinishedEvent.php:6

    ---------- begin diff ----------
@@ @@
 /**
  * Wraps a node insertion demo event for event listeners.
  */
-class FinishedEvent extends Event {
+class FinishedEvent extends \Symfony\Contracts\EventDispatcher\Event {

   const FINISHED_EVENT = 'h5p.finished';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/h5p/src/Entity/H5PContent.php:194

    ---------- begin diff ----------
@@ @@
     }

     $h5p_path = $interface->getOption('default_path', 'h5p');
-    return file_create_url("public://{$h5p_path}/exports/interactive-content-" . $this->id() . '.h5p');
+    return \Drupal::service('file_url_generator')->generateAbsoluteString("public://{$h5p_path}/exports/interactive-content-" . $this->id() . '.h5p');
   }

   /**
@@ @@
     $filtered_parameters = $this->getFilteredParameters();
     $display_options = $core->getDisplayOptionsForView($this->get('disabled_features')->value, $canUpdateEntity);

-    $h5p_module_path = drupal_get_path('module', 'h5p');
+    $h5p_module_path = \Drupal::service('extension.list.module')->getPath('h5p');
     $embed_url = Url::fromUri('internal:/h5p/' . $this->id() . '/embed', ['absolute' => TRUE])->toString(TRUE)->getGeneratedUrl();
     $resizer_url = Url::fromUri('internal:/' . $h5p_module_path . '/vendor/h5p/h5p-core/js/h5p-resizer.js', ['absolute' => TRUE, 'language' => FALSE])->toString(TRUE)->getGeneratedUrl();
     $metadata = $this->getMetadata();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/h5p/src/Controller/H5PEmbed.php:25

    ---------- begin diff ----------
@@ @@
       ],
     ];

-    $h5p_module_path = drupal_get_path('module', 'h5p');
+    $h5p_module_path = \Drupal::service('extension.list.module')->getPath('h5p');

     // Load requested content
     $h5p_content = H5PContent::load($id);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/h5p/src/Controller/H5PAJAX.php:111

    ---------- begin diff ----------
@@ @@
       ->fields($fields)
       ->execute();

-    $this->eventDispatcher->dispatch(FinishedEvent::FINISHED_EVENT, new FinishedEvent($fields));
+    $this->eventDispatcher->dispatch(new FinishedEvent($fields), FinishedEvent::FINISHED_EVENT);

     return new JsonResponse(['success' => TRUE]);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/h5p/modules/h5peditor/src/H5PEditor/H5PEditorUtilities.php:35

    ---------- begin diff ----------
@@ @@
    */
   public static function getEditorSettings() {
     $contentValidator = H5PDrupal::getInstance('contentvalidator');
-    $h5p_module_rel      = base_path() . drupal_get_path('module', 'h5p');
+    $h5p_module_rel      = base_path() . \Drupal::service('extension.list.module')->getPath('h5p');

     $settings = [
       'filesPath'          => base_path() . H5PDrupal::getRelativeH5PPath(),
@@ @@
    * @return array Js and css for showing the editor
    */
   private static function getEditorAssets() {
-    $h5p_module_rel = base_path() . drupal_get_path('module', 'h5p');
+    $h5p_module_rel = base_path() . \Drupal::service('extension.list.module')->getPath('h5p');
     $corePath   = "{$h5p_module_rel}/vendor/h5p/h5p-core/";
     $editorPath = "{$h5p_module_rel}/vendor/h5p/h5p-editor/";

@@ @@
   private static function getTranslationFilePath() {
     $language = \Drupal::languageManager()->getCurrentLanguage()->getId();

-    $h5p_module_rel = drupal_get_path('module', 'h5p');
+    $h5p_module_rel = \Drupal::service('extension.list.module')->getPath('h5p');
     $languageFolder = "{$h5p_module_rel}/vendor/h5p/h5p-editor/language";
     $defaultLanguage = "{$languageFolder}/en.js";
     $chosenLanguage = "{$languageFolder}/{$language}.js";
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/h5p/modules/h5peditor/h5peditor.module:11

    ---------- begin diff ----------
@@ @@
 function h5peditor_library_info_build() {
    $libraries = [];

-   $h5p_module_path = drupal_get_path('module', 'h5p');
+   $h5p_module_path = \Drupal::service('extension.list.module')->getPath('h5p');
    $libraries['h5peditor.assets'] = [
      'version' => '1.0',
      'license' => [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


11) modules/contrib/h5p/h5p.install:249

    ---------- begin diff ----------
@@ @@
   } elseif (file_exists($file)) {

     // Get file from file_managed if it exists
-    $file_uri = file_build_uri(substr($file, strpos($file, 'h5p/'), strlen($file)));
+    $file_uri = \Drupal::service('stream_wrapper_manager')->normalizeUri(\Drupal::config('system.file')->get('default_scheme') . ('://' . substr($file, strpos($file, 'h5p/'), strlen($file))));
     $fid = $connection
       ->query("SELECT fid FROM {file_managed} WHERE uri = :path", array(':path' => $file_uri))
       ->fetchField();
    ----------- end diff -----------

Applied rules:
 * FileBuildUriRector
 * ArgumentRemoverRector


 [OK] 11 files have been changed by Rector                                      

