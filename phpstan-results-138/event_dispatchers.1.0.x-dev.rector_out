modules/contrib/event_dispatchers/event_dispatchers.module
modules/contrib/event_dispatchers/modules/event_dispatcher_kafka/src/EventDispatcherKafkaServiceProvider.php
modules/contrib/event_dispatchers/modules/event_dispatcher_kafka/src/Form/KafkaConfigForm.php
modules/contrib/event_dispatchers/modules/event_dispatcher_kafka/src/Kafka.php
modules/contrib/event_dispatchers/src/EntityEventDispatcherType.php
modules/contrib/event_dispatchers/src/Event/EntityEvent.php
modules/contrib/event_dispatchers/src/EventDispatcher/EventDispatcher.php
modules/contrib/event_dispatchers/src/Services/EventServices.php

3 files with changes
====================

1) modules/contrib/event_dispatchers/src/EventDispatcher/EventDispatcher.php:23

    ---------- begin diff ----------
@@ @@

   /**
    * @param string $event_name
-   * @param Event|NULL $event
-   * @return Event|void|null
+   * @param \Symfony\Contracts\EventDispatcher\Event|NULL $event
+   * @return \Symfony\Contracts\EventDispatcher\Event|void|null
    */
-  public function dispatch($event_name, Event $event = NULL) {
+  public function dispatch($event_name, \Symfony\Contracts\EventDispatcher\Event $event = NULL) {
     parent::dispatch($event_name, $event);
     $service = \Drupal::service('event_dispatchers.event_service');
     $service->send($event_name, $event);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/event_dispatchers/src/Event/EntityEvent.php:8

    ---------- begin diff ----------
@@ @@
 /**
  * Class to contain an entity event.
  */
-class EntityEvent extends Event {
+class EntityEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * The Entity.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/event_dispatchers/event_dispatchers.module:7

    ---------- begin diff ----------
@@ @@
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\event_dispatchers\EntityEventDispatcherType;
 use Drupal\event_dispatchers\Event\EntityEvent;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\Core\Routing\RouteMatchInterface;

 /**
@@ @@
  *
  * @param string $event_type
  *   The event type.
- * @param \Symfony\Component\EventDispatcher\Event $event
+ * @param \Symfony\Contracts\EventDispatcher\Event $event
  *   The event to dispatch.
  */
-
-function _event_dispatcher_dispatch($event_type, Event $event) {
+function _event_dispatcher_dispatch($event_type, \Symfony\Contracts\EventDispatcher\Event $event) {
   /** @var \Symfony\Component\EventDispatcher\EventDispatcher $dispatcher */
   $dispatcher = \Drupal::service('event_dispatcher');
-  $dispatcher->dispatch($event_type, $event);
+  $dispatcher->dispatch($event, $event_type);
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * RenameClassRector
 * MakeDispatchFirstArgumentEventRector


 [OK] 3 files have been changed by Rector                                       

