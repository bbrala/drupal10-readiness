modules/contrib/crossword/crossword.api.php
modules/contrib/crossword/crossword.module
modules/contrib/crossword/crossword.post_update.php
modules/contrib/crossword/modules/crossword_colors/crossword_colors.module
modules/contrib/crossword/modules/crossword_colors/src/CrosswordColorsService.php
modules/contrib/crossword/modules/crossword_colors/src/Form/CrosswordColorsConfigForm.php
modules/contrib/crossword/modules/crossword_contest/src/Controller/CrosswordContestController.php
modules/contrib/crossword/modules/crossword_contest/src/Plugin/Field/FieldFormatter/CrosswordContestFormatter.php
modules/contrib/crossword/modules/crossword_download/src/Plugin/Field/FieldFormatter/CrosswordFileDownloadLink.php
modules/contrib/crossword/modules/crossword_download/src/Plugin/Field/FieldFormatter/CrosswordImageDownload.php
modules/contrib/crossword/modules/crossword_image/src/Annotation/CrosswordImage.php
modules/contrib/crossword/modules/crossword_image/src/CrosswordImageManager.php
modules/contrib/crossword/modules/crossword_image/src/CrosswordImageManagerInterface.php
modules/contrib/crossword/modules/crossword_image/src/CrosswordImagePluginBase.php
modules/contrib/crossword/modules/crossword_image/src/CrosswordImagePluginInterface.php
modules/contrib/crossword/modules/crossword_image/src/CrosswordImageService.php
modules/contrib/crossword/modules/crossword_image/src/CrosswordImageServiceInterface.php
modules/contrib/crossword/modules/crossword_image/src/Form/CrosswordImageRegenerateForm.php
modules/contrib/crossword/modules/crossword_image/src/Plugin/Field/FieldFormatter/CrosswordImageRendered.php
modules/contrib/crossword/modules/crossword_image/src/Plugin/crossword/crossword_image/CrosswordNumberedThumbnail.php
modules/contrib/crossword/modules/crossword_image/src/Plugin/crossword/crossword_image/CrosswordSolutionThumbnail.php
modules/contrib/crossword/modules/crossword_image/src/Plugin/crossword/crossword_image/CrosswordThumbnail.php
modules/contrib/crossword/modules/crossword_image/src/Plugin/crossword/crossword_image/CrosswordThumbnailBase.php
modules/contrib/crossword/modules/crossword_media/crossword_media.install
modules/contrib/crossword/modules/crossword_media/crossword_media.module
modules/contrib/crossword/modules/crossword_media/src/Plugin/media/Source/Crossword.php
modules/contrib/crossword/modules/crossword_pseudofields/crossword_pseudofields.install
modules/contrib/crossword/modules/crossword_pseudofields/crossword_pseudofields.module
modules/contrib/crossword/modules/crossword_pseudofields/src/Form/CrosswordPseudofieldsConfigForm.php
modules/contrib/crossword/modules/crossword_pseudofields/src/Plugin/Field/FieldFormatter/CrosswordPseudofieldsFormatter.php
modules/contrib/crossword/modules/crossword_status/crossword_status.module
modules/contrib/crossword/modules/crossword_token/crossword_token.tokens.inc
modules/contrib/crossword/src/Annotation/CrosswordFileParser.php
modules/contrib/crossword/src/CrosswordDataService.php
modules/contrib/crossword/src/CrosswordDataServiceInterface.php
modules/contrib/crossword/src/CrosswordException.php
modules/contrib/crossword/src/CrosswordFileParserManager.php
modules/contrib/crossword/src/CrosswordFileParserManagerInterface.php
modules/contrib/crossword/src/CrosswordFileParserPluginBase.php
modules/contrib/crossword/src/CrosswordFileParserPluginInterface.php
modules/contrib/crossword/src/Plugin/Block/CrosswordInstructionsBlock.php
modules/contrib/crossword/src/Plugin/Field/FieldFormatter/CrosswordFormatter.php
modules/contrib/crossword/src/Plugin/Field/FieldFormatter/CrosswordGenericFileFormatter.php
modules/contrib/crossword/src/Plugin/Field/FieldFormatter/CrosswordSolutionFormatter.php
modules/contrib/crossword/src/Plugin/Field/FieldType/CrosswordItem.php
modules/contrib/crossword/src/Plugin/Field/FieldWidget/CrosswordFileWidget.php
modules/contrib/crossword/src/Plugin/Validation/Constraint/CrosswordDimensions.php
modules/contrib/crossword/src/Plugin/Validation/Constraint/CrosswordDimensionsValidator.php
modules/contrib/crossword/src/Plugin/Validation/Constraint/CrosswordFile.php
modules/contrib/crossword/src/Plugin/Validation/Constraint/CrosswordFileValidator.php
modules/contrib/crossword/src/Plugin/crossword/crossword_file_parser/AcrossLitePuzParser.php
modules/contrib/crossword/src/Plugin/crossword/crossword_file_parser/AcrossLiteTextParser.php
modules/contrib/crossword/src/Plugin/crossword/crossword_file_parser/CrosswordCompilerXmlParser.php
modules/contrib/crossword/src/Plugin/crossword/crossword_file_parser/IpuzParser.php
modules/contrib/crossword/tests/modules/crossword_pseudofields_tests/src/Controller/CrosswordTestsController.php
modules/contrib/crossword/tests/modules/crossword_tests/src/Controller/CrosswordTestsController.php
modules/contrib/crossword/tests/src/Functional/CrosswordColorsTest.php
modules/contrib/crossword/tests/src/Functional/CrosswordContestAccessTest.php
modules/contrib/crossword/tests/src/Functional/CrosswordFieldValidateTest.php
modules/contrib/crossword/tests/src/Functional/CrosswordImageRegenerateTest.php
modules/contrib/crossword/tests/src/Functional/CrosswordInstructionsBlockTest.php
modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordContestTest.php
modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordFormatterFancyFeaturesTest.php
modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordFormatterTest.php
modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordFormatterTestBase.php
modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordFormatterXssTest.php
modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordPseudofieldsTest.php
modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordSolutionXssTest.php
modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordStatusTest.php
modules/contrib/crossword/tests/src/FunctionalJavascript/MediaSourceCrosswordTest.php
modules/contrib/crossword/tests/src/Kernel/AcrossLitePuzParserTest.php
modules/contrib/crossword/tests/src/Kernel/AcrossLiteTextParserTest.php
modules/contrib/crossword/tests/src/Kernel/CrosswordCompilerXmlParserTest.php
modules/contrib/crossword/tests/src/Kernel/CrosswordDataServiceTest.php
modules/contrib/crossword/tests/src/Kernel/CrosswordFileParserPluginTestBase.php
modules/contrib/crossword/tests/src/Kernel/CrosswordImageServiceTest.php
modules/contrib/crossword/tests/src/Kernel/CrosswordImageTokenTest.php
modules/contrib/crossword/tests/src/Kernel/CrosswordTokenTest.php
modules/contrib/crossword/tests/src/Kernel/Formatter/CrosswordFileDownloadLinkFormatterTest.php
modules/contrib/crossword/tests/src/Kernel/Formatter/CrosswordImageDownloadLinkFormatterTest.php
modules/contrib/crossword/tests/src/Kernel/Formatter/CrosswordImageRenderedFormatterTest.php
modules/contrib/crossword/tests/src/Kernel/Formatter/CrosswordSolutionFormatterTest.php
modules/contrib/crossword/tests/src/Kernel/Formatter/SimpleCrosswordFormatterTestBase.php
modules/contrib/crossword/tests/src/Kernel/IpuzParserTest.php
modules/contrib/crossword/tests/src/Unit/FindReferencesTest.php

20 files with changes
=====================

1) modules/contrib/crossword/tests/src/Unit/FindReferencesTest.php:11

    ---------- begin diff ----------
@@ @@
  */
 class FindReferencesTest extends UnitTestCase {

+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * Test findReferences function.
    *
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/crossword/tests/src/Kernel/IpuzParserTest.php:31

    ---------- begin diff ----------
@@ @@
    *
    * @return array
    *   Structured data for tests.
+   * @doesNotPerformAssertions
    */
   public function testExceptionsProvider() {
     return [
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/crossword/tests/src/Kernel/Formatter/SimpleCrosswordFormatterTestBase.php:81

    ---------- begin diff ----------
@@ @@
     // First we move a test file to the file system.
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/test.txt");

-    $file = file_save_data($contents, 'public://test.txt');
+    $file = \Drupal::service('file.repository')->writeData($contents, 'public://test.txt');
     $field_storage = FieldStorageConfig::create([
       'field_name' => 'field_crossword',
       'entity_type' => 'entity_test_rev',
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/crossword/tests/src/Kernel/Formatter/CrosswordImageDownloadLinkFormatterTest.php:57

    ---------- begin diff ----------
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'Solution (png)',
-      '#url' => Url::fromUri(file_create_url('public://crossword/1-solution_thumbnail.png')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://crossword/1-solution_thumbnail.png'),
       '#options' => [
         'attributes' => [
           'class' => [
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/crossword/tests/src/Kernel/Formatter/CrosswordFileDownloadLinkFormatterTest.php:55

    ---------- begin diff ----------
@@ @@
     $expected_render = [
       '#type' => 'link',
       '#title' => 'Test Puzzle (3x3)',
-      '#url' => Url::fromUri(file_create_url('public://test.txt')),
+      '#url' => \Drupal::service('file_url_generator')->generate('public://test.txt'),
       '#options' => [
         'attributes' => [
           'class' => [
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/crossword/tests/src/Kernel/CrosswordImageServiceTest.php:41

    ---------- begin diff ----------
@@ @@
    */
   public function testCrosswordImageService() {
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/test.txt");
-    $file = file_save_data($contents, "public://test.txt");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://test.txt");

     $crossword_image_manager = \Drupal::service('crossword.manager.image');
     $plugin_ids = array_keys($crossword_image_manager->getCrosswordImageOptionList());
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/crossword/tests/src/Kernel/CrosswordFileParserPluginTestBase.php:124

    ---------- begin diff ----------
@@ @@
    * This does not closely examine the parsed data. It simply checks whether
    * the parsing completes with or without an expected exception.
    *
-   * @dataProvider testExceptionsProvider
+   * @dataProvider exceptionsProvider
    */
   public function testExceptions($filename, $message) {
     $file = $this->getTestFile($filename);
@@ @@
    */
   protected function getTestFile($filename) {
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/" . $filename);
-    $file = file_save_data($contents, "public://$filename");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://$filename");
     return $file;
   }
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/crossword/tests/src/Kernel/CrosswordDataServiceTest.php:35

    ---------- begin diff ----------
@@ @@
    */
   public function testCrosswordDataService() {
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/test.txt");
-    $file = file_save_data($contents, "public://test.txt");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://test.txt");
     $expected_json = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/test.json");
     $expected_data = json_decode($expected_json, TRUE);
     $expected_data['id'] = $file->id();
@@ @@
    */
   public function testCrosswordDataServiceXss() {
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/xss.txt");
-    $file = file_save_data($contents, "public://xss.txt");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://xss.txt");
     $expected_json = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/xss.json");
     $expected_data = json_decode($expected_json, TRUE);
     $expected_data['id'] = $file->id();
@@ @@
    */
   public function testJsonEncoding() {
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/3102647.puz");
-    $file = file_save_data($contents, "public://3102647.puz");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://3102647.puz");

     $crossword_data_service = \Drupal::service('crossword.data_service');
     $data = $crossword_data_service->getData($file);
@@ @@
    */
   public function testCorruptedFile() {
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/corrupted_bad_grid.puz");
-    $file = file_save_data($contents, "public://corrupted_bad_grid.puz");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://corrupted_bad_grid.puz");

     $cache_service = \Drupal::service('cache.crossword');
     $this->assertFalse($cache_service->get($file->id()));
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/crossword/tests/src/Kernel/CrosswordCompilerXmlParserTest.php:31

    ---------- begin diff ----------
@@ @@
    *
    * @return array
    *   Structured data for tests.
+   * @doesNotPerformAssertions
    */
   public function testExceptionsProvider() {
     return [
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/crossword/tests/src/Kernel/AcrossLiteTextParserTest.php:31

    ---------- begin diff ----------
@@ @@
    *
    * @return array
    *   Structured data for tests.
+   * @doesNotPerformAssertions
    */
   public function testExceptionsProvider() {
     return [
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/crossword/tests/src/Kernel/AcrossLitePuzParserTest.php:31

    ---------- begin diff ----------
@@ @@
    *
    * @return array
    *   Structured data for tests.
+   * @doesNotPerformAssertions
    */
   public function testExceptionsProvider() {
     return [
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordStatusTest.php:178

    ---------- begin diff ----------
@@ @@
   protected function createTestNode() {
     // First we move a test file to the file system.
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/{$this->testPuzzleFilename}");
-    $file = file_save_data($contents, "public://{$this->testPuzzleFilename}");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://{$this->testPuzzleFilename}");
     // Now use that file in a new crossword node.
     $node = Node::create(['type' => 'crossword']);
     $node->set('title', 'Test Crossword Node');
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


13) modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordFormatterTestBase.php:330

    ---------- begin diff ----------
@@ @@
   protected function createTestNode() {
     // First we move a test file to the file system.
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/{$this->testPuzzleFilename}");
-    $file = file_save_data($contents, "public://{$this->testPuzzleFilename}");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://{$this->testPuzzleFilename}");
     // Now use that file in a new crossword node.
     $node = Node::create(['type' => 'crossword']);
     $node->set('title', 'Test Crossword Node');
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


14) modules/contrib/crossword/tests/src/FunctionalJavascript/CrosswordContestTest.php:96

    ---------- begin diff ----------
@@ @@
   protected function createTestNode() {
     // First we move a test file to the file system.
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/{$this->testPuzzleFilename}");
-    $file = file_save_data($contents, "public://{$this->testPuzzleFilename}");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://{$this->testPuzzleFilename}");
     // Now use that file in a new crossword_contests media.
     $media = Media::create(['bundle' => 'crossword_contest']);
     $media->set('name', 'Test Crossword Contest');
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


15) modules/contrib/crossword/tests/src/Functional/CrosswordImageRegenerateTest.php:29

    ---------- begin diff ----------
@@ @@
   public function testRegenerate() {
     // Create a crossword file.
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/test.txt");
-    $file = file_save_data($contents, "public://test.txt");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://test.txt");

     // Create a couple crossword images. Don't create solution.
     $crossword_image_service = \Drupal::service('crossword.image_service');
@@ @@
     // Confirm they exist.
     $this->assertFileExists('public://crossword/1-thumbnail.png');
     $this->assertFileExists('public://crossword/1-numbered_thumbnail.png');
-    $this->assertFileNotExists('public://crossword/1-solution_thumbnail.png');
+    $this->assertFileDoesNotExist('public://crossword/1-solution_thumbnail.png');
     // Put in a delay so updates can be measured..
     sleep(2);
     // Navigate to the regenerate form.
@@ @@
     $this->assertSession()->pageTextContains('Crossword Image Regeneration is complete');
     // Check file existence (or non-existence).
     $this->assertFileExists('public://crossword/1-thumbnail.png');
-    $this->assertFileNotExists('public://crossword/1-thumbnail_0.png');
+    $this->assertFileDoesNotExist('public://crossword/1-thumbnail_0.png');
     $this->assertFileExists('public://crossword/1-numbered_thumbnail.png');
-    $this->assertFileNotExists('public://crossword/1-numbered_thumbnail_0.png');
-    $this->assertFileNotExists('public://crossword/1-solution_thumbnail.png');
+    $this->assertFileDoesNotExist('public://crossword/1-numbered_thumbnail_0.png');
+    $this->assertFileDoesNotExist('public://crossword/1-solution_thumbnail.png');
     // Check modification times. Only numbered should have been updated.
     $this->assertEquals($thumbnail_time, filemtime('public://crossword/1-thumbnail.png'));
     $this->assertGreaterThan($numbered_time, filemtime('public://crossword/1-numbered_thumbnail.png'));
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameMethodRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


16) modules/contrib/crossword/tests/src/Functional/CrosswordFieldValidateTest.php:32

    ---------- begin diff ----------
@@ @@
     // Not crossword.
     $filename = 'failure.txt';
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/" . $filename);
-    $not_crossword = file_save_data($contents, "public://$filename");
+    $not_crossword = \Drupal::service('file.repository')->writeData($contents, "public://$filename");

     // Corrupted txt.
     $filename = 'corrupted_bad_grid.txt';
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/" . $filename);
-    $corrupted_txt = file_save_data($contents, "public://$filename");
+    $corrupted_txt = \Drupal::service('file.repository')->writeData($contents, "public://$filename");

     // Ok txt.
     $filename = 'test.txt';
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/" . $filename);
-    $ok_txt = file_save_data($contents, "public://$filename");
+    $ok_txt = \Drupal::service('file.repository')->writeData($contents, "public://$filename");

     // Ok puz.
     $filename = 'test.puz';
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/" . $filename);
-    $ok_puz = file_save_data($contents, "public://$filename");
+    $ok_puz = \Drupal::service('file.repository')->writeData($contents, "public://$filename");

     // Log in as admin.
     $this->drupalLogin($this->drupalCreateUser([], 'radmin', TRUE));
@@ @@
     // Big file (25x25).
     $filename = '3185956.puz';
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/" . $filename);
-    $big_file = file_save_data($contents, "public://$filename");
+    $big_file = \Drupal::service('file.repository')->writeData($contents, "public://$filename");

     // Tiny File (2x2).
     $filename = 'tiny.txt';
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/" . $filename);
-    $tiny_file = file_save_data($contents, "public://$filename");
+    $tiny_file = \Drupal::service('file.repository')->writeData($contents, "public://$filename");

     // Ok size (3x3).
     $filename = 'test.txt';
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/" . $filename);
-    $ok_file = file_save_data($contents, "public://$filename");
+    $ok_file = \Drupal::service('file.repository')->writeData($contents, "public://$filename");

     // Log in as admin.
     $this->drupalLogin($this->drupalCreateUser([], 'radmin', TRUE));
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


17) modules/contrib/crossword/tests/src/Functional/CrosswordContestAccessTest.php:71

    ---------- begin diff ----------
@@ @@
   protected function createTestMedia() {
     // First we move a test file to the file system.
     $contents = file_get_contents(\Drupal::service('extension.list.module')->getPath('crossword') . "/tests/files/{$this->testPuzzleFilename}");
-    $file = file_save_data($contents, "public://{$this->testPuzzleFilename}");
+    $file = \Drupal::service('file.repository')->writeData($contents, "public://{$this->testPuzzleFilename}");
     // Now use that file in a new crossword_contests media.
     $media = Media::create(['bundle' => 'crossword_contest']);
     $media->set('name', 'Published Crossword Contest');
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


18) modules/contrib/crossword/tests/src/Functional/CrosswordColorsTest.php:24

    ---------- begin diff ----------
@@ @@
    * Use form to update config and confirm stylesheet is saved/updated.
    */
   public function testCrosswordColorsForm() {
-    $this->assertFileNotExists('public://crossword-colors.css');
+    $this->assertFileDoesNotExist('public://crossword-colors.css');
     $this->drupalLogin($this->drupalCreateUser(['configure crossword colors']));

     // Save config for first time.
@@ @@
    * Load library without ever visiting form.
    */
   public function testCrosswordColorsInstall() {
-    $this->assertFileNotExists('public://crossword-colors.css');
+    $this->assertFileDoesNotExist('public://crossword-colors.css');
     $this->drupalLogin($this->drupalCreateUser(['configure crossword colors']));
     $library = \Drupal::service('library.discovery')->getLibraryByName('crossword', 'crossword.default');
     // The library_info_alter hook should have created the file.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameMethodRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


19) modules/contrib/crossword/modules/crossword_token/crossword_token.tokens.inc:122

    ---------- begin diff ----------
@@ @@
                 $replacements[$original] = $style->buildUrl($image->getFileUri());
               }
               elseif (!isset($parts[1])) {
-                $replacements[$original] = file_create_url($image->getFileUri());
+                $replacements[$original] = \Drupal::service('file_url_generator')->generateAbsoluteString($image->getFileUri());
               }
             }
           }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


20) modules/contrib/crossword/modules/crossword_image/src/Plugin/Field/FieldFormatter/CrosswordImageRendered.php:218

    ---------- begin diff ----------
@@ @@
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       elseif (isset($link_file)) {
-        $url = Url::fromUri(file_create_url($file->getFileUri()));
+        $url = \Drupal::service('file_url_generator')->generate($file->getFileUri());
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags(), $image->getCacheTags());
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/crossword/tests/src/Kernel/CrosswordTokenTest.php" file,
         due to:                                                                
         "Analyze error: "Class Drupal\Tests\token\Kernel\KernelTestBase not    
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/crossword/tests/src/Kernel/CrosswordImageTokenTest.php"
         file, due to:                                                          
         "Analyze error: "Class Drupal\Tests\token\Kernel\KernelTestBase not    
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/crossword/modules/crossword_download/src/Plugin/Field/Fi
         eldFormatter/CrosswordImageDownload.php" file, due to:                 
         "Analyze error: "Class                                                 
         Drupal\file_download_link\Plugin\Field\FieldFormatter\FileDownloadLink 
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/crossword/modules/crossword_download/src/Plugin/Field/Fi
         eldFormatter/CrosswordFileDownloadLink.php" file, due to:              
         "Analyze error: "Class                                                 
         Drupal\file_download_link\Plugin\Field\FieldFormatter\FileDownloadLink 
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

