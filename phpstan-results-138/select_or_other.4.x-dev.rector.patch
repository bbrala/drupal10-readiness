diff --git a/tests/src/Functional/ListTest.php b/tests/src/Functional/ListTest.php
index 262c2c7..594992b 100644
--- a/tests/src/Functional/ListTest.php
+++ b/tests/src/Functional/ListTest.php
@@ -34,6 +34,7 @@ class ListTest extends TestBase {
 
   /**
    * Make sure an empty option is present when relevant.
+   * @doesNotPerformAssertions
    */
   public function testEmptyOption($empty_option = '') {
     parent::testEmptyOption('My cool new value');
diff --git a/tests/src/Functional/ReferenceTest.php b/tests/src/Functional/ReferenceTest.php
index 6941b72..6f766ef 100644
--- a/tests/src/Functional/ReferenceTest.php
+++ b/tests/src/Functional/ReferenceTest.php
@@ -29,6 +29,7 @@ class ReferenceTest extends TestBase {
 
   /**
    * Make sure an empty option is present when relevant.
+   * @doesNotPerformAssertions
    */
   public function testEmptyOption($empty_option = '') {
     parent::testEmptyOption('My cool new value');
diff --git a/tests/src/Functional/TestBase.php b/tests/src/Functional/TestBase.php
index 071d78c..1b3d1bd 100644
--- a/tests/src/Functional/TestBase.php
+++ b/tests/src/Functional/TestBase.php
@@ -36,7 +36,7 @@ abstract class TestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_tasks_block');
   }
diff --git a/tests/src/Unit/ReferenceWidgetTest.php b/tests/src/Unit/ReferenceWidgetTest.php
index 25f57c5..f829cd4 100644
--- a/tests/src/Unit/ReferenceWidgetTest.php
+++ b/tests/src/Unit/ReferenceWidgetTest.php
@@ -84,9 +84,7 @@ class ReferenceWidgetTest extends UnitTestBase {
   public function testGetOptions() {
     $entity_id = 1;
     $entity_label = 'Label';
-    $entity_mock = $this->getMockBuilder('\Drupal\Core\Entity\EntityBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity_mock = $this->createMock('\Drupal\Core\Entity\EntityBase');
     $entity_mock->expects($this->exactly(1))
       ->method('id')
       ->willReturn($entity_id);
@@ -206,9 +204,7 @@ class ReferenceWidgetTest extends UnitTestBase {
    * Tests if the widget correctly determines if it is applicable.
    */
   public function testIsApplicable() {
-    $entity_reference_selection = $this->getMockBuilder('Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManager')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity_reference_selection = $this->createMock('Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManager');
     $entity_reference_selection->expects($this->exactly(4))
       ->method('getInstance')
       ->willReturnOnConsecutiveCalls(
@@ -242,9 +238,7 @@ class ReferenceWidgetTest extends UnitTestBase {
   public function testPrepareSelectedOptions() {
     $entity_id = 1;
     $entity_label = 'Label';
-    $entity_mock = $this->getMockBuilder('\Drupal\Core\Entity\EntityBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity_mock = $this->createMock('\Drupal\Core\Entity\EntityBase');
     $entity_mock->expects($this->any())
       ->method('id')
       ->willReturn($entity_id);
diff --git a/tests/src/Unit/UnitTestBase.php b/tests/src/Unit/UnitTestBase.php
index 2965774..2e4ee10 100644
--- a/tests/src/Unit/UnitTestBase.php
+++ b/tests/src/Unit/UnitTestBase.php
@@ -41,7 +41,7 @@ abstract class UnitTestBase extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->prepareContainer();
     $this->addMockServicesToContainer();
