modules/contrib/eca_parameters/src/Event/EcaParametersEvents.php
modules/contrib/eca_parameters/src/Event/RequestingParameterEvent.php
modules/contrib/eca_parameters/src/EventSubscriber/EcaParameters.php
modules/contrib/eca_parameters/src/Plugin/Action/ParameterGet.php
modules/contrib/eca_parameters/src/Plugin/Action/ParameterSet.php
modules/contrib/eca_parameters/src/Plugin/ECA/Condition/ParameterExists.php
modules/contrib/eca_parameters/src/Plugin/ECA/Condition/ParameterValue.php
modules/contrib/eca_parameters/src/Plugin/ECA/Event/ParametersEvent.php
modules/contrib/eca_parameters/src/Plugin/ECA/Event/ParametersEventDeriver.php

3 files with changes
====================

1) modules/contrib/eca_parameters/src/Plugin/ECA/Condition/ParameterValue.php:32

    ---------- begin diff ----------
@@ @@
    * @var \Drupal\parameters\ParameterRepository
    */
   protected ParameterRepository $parameterRepository;
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager, \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info, \Symfony\Component\HttpFoundation\RequestStack $request_stack, \Drupal\eca\Token\TokenInterface $token_services, \Drupal\Core\Session\AccountProxyInterface $current_user, \Drupal\Component\Datetime\TimeInterface $time, \Drupal\eca\EcaState $state, \Drupal\parameters\ParameterRepository $parameterRepository)
+  {
+      $this->parameterRepository = $parameterRepository;
+      parent::__construct($configuration, $plugin_id, $plugin_definition, $entity_type_manager, $entity_type_bundle_info, $request_stack, $token_services, $current_user, $time, $state);
+  }

   /**
    * {@inheritdoc}
@@ @@
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition): ConditionBase {
     /** @var \Drupal\eca_parameters\Plugin\ECA\Condition\ParameterValue $instance */
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
-    $instance->setParameterRepository($container->get(ParameterRepository::SERVICE_NAME));
+    $instance->setParameterRepository($this->parameterRepository);
     return $instance;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * ContainerGetToConstructorInjectionRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/eca_parameters/src/Plugin/ECA/Condition/ParameterExists.php:26

    ---------- begin diff ----------
@@ @@
    * @var \Drupal\parameters\ParameterRepository
    */
   protected ParameterRepository $parameterRepository;
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager, \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info, \Symfony\Component\HttpFoundation\RequestStack $request_stack, \Drupal\eca\Token\TokenInterface $token_services, \Drupal\Core\Session\AccountProxyInterface $current_user, \Drupal\Component\Datetime\TimeInterface $time, \Drupal\eca\EcaState $state, \Drupal\parameters\ParameterRepository $parameterRepository)
+  {
+      $this->parameterRepository = $parameterRepository;
+      parent::__construct($configuration, $plugin_id, $plugin_definition, $entity_type_manager, $entity_type_bundle_info, $request_stack, $token_services, $current_user, $time, $state);
+  }

   /**
    * {@inheritdoc}
@@ @@
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition): ConditionBase {
     /** @var \Drupal\eca_parameters\Plugin\ECA\Condition\ParameterExists $instance */
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
-    $instance->setParameterRepository($container->get(ParameterRepository::SERVICE_NAME));
+    $instance->setParameterRepository($this->parameterRepository);
     return $instance;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * ContainerGetToConstructorInjectionRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/eca_parameters/src/Plugin/Action/ParameterGet.php:26

    ---------- begin diff ----------
@@ @@
    * @var \Drupal\parameters\ParameterRepository
    */
   protected ParameterRepository $parameterRepository;
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager, \Drupal\eca\Token\TokenInterface $token_services, \Drupal\Core\Session\AccountProxyInterface $current_user, \Drupal\Component\Datetime\TimeInterface $time, \Drupal\eca\EcaState $state, \Drupal\parameters\ParameterRepository $parameterRepository)
+  {
+      $this->parameterRepository = $parameterRepository;
+      parent::__construct($configuration, $plugin_id, $plugin_definition, $entity_type_manager, $token_services, $current_user, $time, $state);
+  }

   /**
    * {@inheritdoc}
@@ @@
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition): ActionBase {
     /** @var \Drupal\eca_parameters\Plugin\Action\ParameterGet $instance */
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
-    $instance->setParameterRepository($container->get(ParameterRepository::SERVICE_NAME));
+    $instance->setParameterRepository($this->parameterRepository);
     return $instance;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * ContainerGetToConstructorInjectionRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

