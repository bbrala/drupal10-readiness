modules/contrib/error_page/src/ErrorPageErrorHandler.php
modules/contrib/error_page/src/ErrorPagePhpErrorLogger.php
modules/contrib/error_page/src/ErrorPagePhpErrorLoggerInterface.php
modules/contrib/error_page/src/ErrorPageRenderer.php
modules/contrib/error_page/src/ErrorPageServiceProvider.php
modules/contrib/error_page/src/EventSubscriber/ErrorPageExceptionLoggingSubscriber.php
modules/contrib/error_page/src/EventSubscriber/ErrorPageFinalExceptionSubscriber.php
modules/contrib/error_page/tests/modules/error_page_test/src/Controller/ErrorPageTestController.php
modules/contrib/error_page/tests/src/Functional/ErrorPageTest.php

3 files with changes
====================

1) modules/contrib/error_page/tests/src/Functional/ErrorPageTest.php:117

    ---------- begin diff ----------
@@ @@
     $this->assertArrayNotHasKey('@uuid', $variables);

     // Customize the template.
-    $template = file_get_contents(drupal_get_path('module', 'error_page') . '/markup/error_page.html');
+    $template = file_get_contents(\Drupal::service('extension.list.module')->getPath('error_page') . '/markup/error_page.html');
     // Fix the message to work without UUID.
     $template = str_replace(' including <em>{{ uuid }}</em> in your message', '', $template);
     file_put_contents('public://error_page.html', $template);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/error_page/src/EventSubscriber/ErrorPageFinalExceptionSubscriber.php:34

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function onException(ExceptionEvent $event): void {
-    $exception = $event->getException();
+    $exception = $event->getThrowable();
     $error = Error::decodeException($exception);

     // Generate an error report if the current error reporting level allows this
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameMethodRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/error_page/src/EventSubscriber/ErrorPageExceptionLoggingSubscriber.php:27

    ---------- begin diff ----------
@@ @@
     // Attach the UUID to the the event. Don't call the generator as service.
     $event->uuid = $uuid_enabled ? (new Php())->generate() : NULL;

-    $exception = $event->getException();
+    $exception = $event->getThrowable();
     $error = Error::decodeException($exception);
     if ($event->uuid) {
       $error += ['@uuid' => $event->uuid];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameMethodRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

