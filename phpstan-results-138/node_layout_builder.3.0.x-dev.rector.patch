diff --git a/node_layout_builder.module b/node_layout_builder.module
index 79919ef..1783083 100644
--- a/node_layout_builder.module
+++ b/node_layout_builder.module
@@ -359,7 +359,7 @@ function template_preprocess_node_layout_builder_element(&$variables) {
           $renderer = \Drupal::service('renderer');
           $renderer->addCacheableDependency($image_theme, $file);
 
-          $variables['content_element'] = render($image_theme);
+          $variables['content_element'] = \Drupal::service('renderer')->render($image_theme);
         }
       }
       break;
@@ -373,7 +373,7 @@ function template_preprocess_node_layout_builder_element(&$variables) {
         'responsive' => $values['video_youtube']['responsive'],
       ];
       $video = NodeLayoutBuilderHelper::embedVideoYoutube($url, $options);
-      $variables['content_element'] = render($video);
+      $variables['content_element'] = \Drupal::service('renderer')->render($video);
       break;
 
     case 'audio':
@@ -390,7 +390,7 @@ function template_preprocess_node_layout_builder_element(&$variables) {
         '#url' => $url,
         '#style' => $style,
       ];
-      $variables['content_element'] = render($audio_player);
+      $variables['content_element'] = \Drupal::service('renderer')->render($audio_player);
       break;
 
     case 'block':
@@ -403,7 +403,7 @@ function template_preprocess_node_layout_builder_element(&$variables) {
       $nid = !empty($values['node']) ? $values['node'] : NULL;
       $view_mode = !empty($values['view_mode']) ? $values['view_mode'] : 'teaser';
       $node_output = NodeLayoutBuilderHelper::loadNodeView($nid, $view_mode);
-      $variables['content_element'] = render($node_output);
+      $variables['content_element'] = \Drupal::service('renderer')->render($node_output);
       break;
 
     case 'field':
@@ -412,7 +412,7 @@ function template_preprocess_node_layout_builder_element(&$variables) {
       $field_name = $values['entity_field'];
       $field_view = $node->$field_name
         ->view($values['view_mode']);
-      $variables['content_element'] = render($field_view);
+      $variables['content_element'] = \Drupal::service('renderer')->render($field_view);
       break;
 
     case 'views':
@@ -456,7 +456,7 @@ function template_preprocess_node_layout_builder_element(&$variables) {
           ],
         ],
       ];
-      $variables['content_element'] = render($map);
+      $variables['content_element'] = \Drupal::service('renderer')->render($map);
       break;
   }
 }
diff --git a/src/Controller/LayoutElementController.php b/src/Controller/LayoutElementController.php
index 3cd9309..08e4a84 100644
--- a/src/Controller/LayoutElementController.php
+++ b/src/Controller/LayoutElementController.php
@@ -328,7 +328,7 @@ class LayoutElementController extends ControllerBase {
     $prefix = '<' . $tag_element . ' class="updated ' . $class . ' ' . $element_duplicate['#type'] . ' ' . $element_duplicate['#attributes']['container']['class'] . '" id="' . $duplicate_id_element . '" data-id="' . $duplicate_id_element . '" data-parent="' . $element_duplicate['#parent'] . '" data-type="nlb_' . $element_duplicate['#type'] . '" style="' . $styles_element . '">';
     $suffix = '</' . $tag_element . '>';
 
-    $content = $prefix . render($element) . $suffix;
+    $content = $prefix . \Drupal::service('renderer')->render($element) . $suffix;
 
     $response = new AjaxResponse();
     if ($element_duplicate['#parent'] == 0) {
@@ -558,7 +558,7 @@ class LayoutElementController extends ControllerBase {
     $response->addCommand(
       new OpenModalDialogCommand(
         $this->t('Choose a template'),
-        render($list_template),
+        \Drupal::service('renderer')->render($list_template),
         [
           'width' => '70%',
           'height' => 'auto',
diff --git a/src/Form/AddElementForm.php b/src/Form/AddElementForm.php
index ecd96c4..439a1ff 100644
--- a/src/Form/AddElementForm.php
+++ b/src/Form/AddElementForm.php
@@ -296,7 +296,7 @@ class AddElementForm extends FormBase {
     $prefix = '<' . $tag_element . ' class="updated ' . $class . ' ' . $type_element . ' ' . $attributes['class'] . '" id="' . $new_id_element . '" data-id="' . $new_id_element . '" data-parent="' . $parent . '" data-type="nlb_' . $type_element . '" style="' . $styles_element . '">';
     $suffix = '</' . $tag_element . '>';
 
-    $content = $prefix . render($element) . $suffix;
+    $content = $prefix . \Drupal::service('renderer')->render($element) . $suffix;
 
     // Response.
     $response = new AjaxResponse();
diff --git a/src/Helpers/NodeLayoutBuilderHelper.php b/src/Helpers/NodeLayoutBuilderHelper.php
index f453b71..3fd1b77 100644
--- a/src/Helpers/NodeLayoutBuilderHelper.php
+++ b/src/Helpers/NodeLayoutBuilderHelper.php
@@ -450,7 +450,7 @@ class NodeLayoutBuilderHelper {
             $renderer = \Drupal::service('renderer');
             $renderer->addCacheableDependency($image_theme, $file);
 
-            $variables['content_element'] = render($image_theme);
+            $variables['content_element'] = \Drupal::service('renderer')->render($image_theme);
           }
         }
         break;
@@ -464,7 +464,7 @@ class NodeLayoutBuilderHelper {
           'responsive' => $values['video_youtube']['responsive'],
         ];
         $video = NodeLayoutBuilderHelper::embedVideoYoutube($url, $options);
-        $variables['content_element'] = render($video);
+        $variables['content_element'] = \Drupal::service('renderer')->render($video);
         break;
 
       case 'audio':
@@ -483,7 +483,7 @@ class NodeLayoutBuilderHelper {
           '#style' => $style,
         ];
 
-        $variables['content_element'] = render($audio_player);
+        $variables['content_element'] = \Drupal::service('renderer')->render($audio_player);
         break;
 
       case 'block':
@@ -496,7 +496,7 @@ class NodeLayoutBuilderHelper {
         $nid = !empty($values['node']) ? $values['node'] : NULL;
         $view_mode = !empty($values['view_mode']) ? $values['view_mode'] : 'teaser';
         $node_output = NodeLayoutBuilderHelper::loadNodeView($nid, $view_mode);
-        $variables['content_element'] = render($node_output);
+        $variables['content_element'] = \Drupal::service('renderer')->render($node_output);
         break;
 
       case 'field':
@@ -506,7 +506,7 @@ class NodeLayoutBuilderHelper {
           $field_name = $values['entity_field'];
           $field_view = $node->$field_name
             ->view($values['view_mode']);
-          $variables['content_element'] = render($field_view);
+          $variables['content_element'] = \Drupal::service('renderer')->render($field_view);
         }
         else {
           $variables['content_element'] = '';
diff --git a/src/NodeLayoutBuilderEditor.php b/src/NodeLayoutBuilderEditor.php
index 0eecb5c..825178b 100644
--- a/src/NodeLayoutBuilderEditor.php
+++ b/src/NodeLayoutBuilderEditor.php
@@ -108,8 +108,8 @@ class NodeLayoutBuilderEditor {
     $build[] = [
       '#theme' => 'node_layout_builder_ui',
       '#btns_import_export' => $list_btns_import_export,
-      '#btn_add_section' => render($btn_add_section),
-      '#btn_save_data' => render($btn_save_data),
+      '#btn_add_section' => \Drupal::service('renderer')->render($btn_add_section),
+      '#btn_save_data' => \Drupal::service('renderer')->render($btn_save_data),
       '#nid' => $nid,
       '#data' => 'data',
       '#btn_save_layout' => $btn_save_layout,
@@ -1654,7 +1654,7 @@ class NodeLayoutBuilderEditor {
         $prefix = '<' . $tag_element . ' class="updated ' . $class . ' ' . $child['#type'] . ' ' . $child['#attributes']['container']['class'] . '" id="' . $id_element_child . '" data-id="' . $id_element_child . '" data-parent="' . $child['#parent'] . '" data-type="nlb_' . $child['#type'] . '" style="' . $styles_element . '">';
         $suffix = '</' . $tag_element . '>';
 
-        $children_output .= $prefix . render($children_theme) . $suffix;
+        $children_output .= $prefix . \Drupal::service('renderer')->render($children_theme) . $suffix;
       }
     }
 
@@ -1694,7 +1694,7 @@ class NodeLayoutBuilderEditor {
       '#parent' => $values['parent'],
       '#settings' => $values['settings'],
       '#styles' => $styles_element,
-      '#content_element' => render($values['children']),
+      '#content_element' => \Drupal::service('renderer')->render($values['children']),
       '#editable' => $values['editable'],
       '#class' => $class,
       '#cache' => [
@@ -1709,7 +1709,7 @@ class NodeLayoutBuilderEditor {
     $prefix = '<' . $tag_element . ' class="' . $class . ' ' . $values['type_element'] . '" id="' . $values['id_element'] . '" data-id="' . $values['id_element'] . '" data-parent="' . $values['parent'] . '" data-type="nlb_' . $values['type_element'] . '" style="' . $styles_element . '">';
     $suffix = '</' . $tag_element . '>';
 
-    $output = $prefix . render($element_tpl) . $suffix;
+    $output = $prefix . \Drupal::service('renderer')->render($element_tpl) . $suffix;
 
     return $output;
   }
diff --git a/src/NodeLayoutBuilderStyle.php b/src/NodeLayoutBuilderStyle.php
index a03efde..bb3f200 100644
--- a/src/NodeLayoutBuilderStyle.php
+++ b/src/NodeLayoutBuilderStyle.php
@@ -70,7 +70,7 @@ class NodeLayoutBuilderStyle {
           $fid = $styles['background']['image'][0];
           $file = NodeLayoutFileHelper::loadFileByFid($fid);
           if ($file) {
-            $path = file_create_url($file->getFileUri());
+            $path = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
             $bg_img .= 'background-image: url(' . $path . ');';
           }
           if (!empty($styles['background']['img_style'])) {
