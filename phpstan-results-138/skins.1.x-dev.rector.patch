diff --git a/skins.info.yml b/skins.info.yml
index 1ffab88..e2f4410 100644
--- a/skins.info.yml
+++ b/skins.info.yml
@@ -1,4 +1,4 @@
 name: Skins
 description: 'Enable themes or modules to provide a set of skins with distinct stylesheets and templates.'
 type: module
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
diff --git a/skins.module b/skins.module
index b897767..af7f33d 100644
--- a/skins.module
+++ b/skins.module
@@ -64,7 +64,7 @@ function skins_form_system_theme_settings_alter(&$form, FormStateInterface $form
       $theme_screenshot_uri = $info['screenshot'];
     }
     else {
-      $theme_screenshot_uri = drupal_get_path('module', 'system') . '/images/no_screenshot.png';
+      $theme_screenshot_uri = \Drupal::service('extension.list.module')->getPath('system') . '/images/no_screenshot.png';
     }
 
     $form['#submit'][] = [ThemeSettings::class, 'submit'];
diff --git a/src/Event/SkinsTransformEvent.php b/src/Event/SkinsTransformEvent.php
index 73e9422..bf9a505 100644
--- a/src/Event/SkinsTransformEvent.php
+++ b/src/Event/SkinsTransformEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * This event allows subscribers to alter the skins.
  */
-class SkinsTransformEvent extends Event {
+class SkinsTransformEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The skins to transform.
diff --git a/src/Form/ThemeSettings.php b/src/Form/ThemeSettings.php
index 02c18f1..459b9fe 100644
--- a/src/Form/ThemeSettings.php
+++ b/src/Form/ThemeSettings.php
@@ -44,9 +44,11 @@ class ThemeSettings implements TrustedCallbackInterface {
       if ($skin_id === $element['#default_value']) {
         $wrapper_classes[] = 'theme-default';
       }
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
       $screenshot = [
         '#theme' => 'image',
-        '#uri' => drupal_get_path($skin['provider_type'], $skin['provider']) . '/' . $skin['screenshot'],
+        '#uri' => \Drupal::service('extension.path.resolver')->getPath($skin['provider_type'], $skin['provider']) . '/' . $skin['screenshot'],
         '#alt' => t('Skin preview: @skin_id', ['@skin_id' => $skin['name']]),
         '#title' => t('Skin preview: @skin_id', ['@skin_id' => $skin['name']]),
         '#attributes' => new Attribute(['class' => ['screenshot']]),
diff --git a/src/SkinHandler.php b/src/SkinHandler.php
index 5650755..285b4f1 100644
--- a/src/SkinHandler.php
+++ b/src/SkinHandler.php
@@ -159,7 +159,7 @@ class SkinHandler implements SkinHandlerInterface {
       }
     }
 
-    $this->eventDispatcher->dispatch(SkinsEvents::TRANSFORM_BUILD, new SkinsTransformEvent($all_skins));
+    $this->eventDispatcher->dispatch(new SkinsTransformEvent($all_skins), SkinsEvents::TRANSFORM_BUILD);
 
     return $all_skins;
   }
