diff --git a/modules/wse_config/src/Event/WseConfigOptOutEvent.php b/modules/wse_config/src/Event/WseConfigOptOutEvent.php
index dd7d796..3658785 100644
--- a/modules/wse_config/src/Event/WseConfigOptOutEvent.php
+++ b/modules/wse_config/src/Event/WseConfigOptOutEvent.php
@@ -9,7 +9,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @see \Drupal\wse_config\Event\WseConfigEvents
  */
-class WseConfigOptOutEvent extends Event {
+class WseConfigOptOutEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The list of configs that aren't stored in wse_config entities.
diff --git a/modules/wse_config/src/Form/WseConfigForm.php b/modules/wse_config/src/Form/WseConfigForm.php
index 72a4fff..2c74f66 100644
--- a/modules/wse_config/src/Form/WseConfigForm.php
+++ b/modules/wse_config/src/Form/WseConfigForm.php
@@ -20,7 +20,7 @@ class WseConfigForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New wse config %label has been created.', $message_arguments));
diff --git a/modules/wse_deploy/src/Event/WorkspaceExportEvent.php b/modules/wse_deploy/src/Event/WorkspaceExportEvent.php
index db049e1..85eef59 100644
--- a/modules/wse_deploy/src/Event/WorkspaceExportEvent.php
+++ b/modules/wse_deploy/src/Event/WorkspaceExportEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @see \Drupal\wse_deploy\Event\WorkspaceDeployEvents
  */
-class WorkspaceExportEvent extends Event {
+class WorkspaceExportEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The workspace being exported.
diff --git a/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php b/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php
index cbf9087..b6345ed 100644
--- a/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php
+++ b/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php
@@ -74,8 +74,8 @@ class ScheduledWorkspacePublisher {
 
         /** @var WorkspaceScheduledPublishEvent $event */
         $event = $this->eventDispatcher->dispatch(
-          WorkspaceSchedulerEvents::SCHEDULED_PUBLISHING_ELIGIBLE,
-          new WorkspaceScheduledPublishEvent($workspace)
+          new WorkspaceScheduledPublishEvent($workspace),
+          WorkspaceSchedulerEvents::SCHEDULED_PUBLISHING_ELIGIBLE
         );
 
         if ($event->isPublishingEligible()) {
diff --git a/src/Event/WorkspacePublishEvent.php b/src/Event/WorkspacePublishEvent.php
index 2d9d248..7176de1 100644
--- a/src/Event/WorkspacePublishEvent.php
+++ b/src/Event/WorkspacePublishEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @see \Drupal\wse\Event\WorkspaceEvents
  */
-class WorkspacePublishEvent extends Event {
+class WorkspacePublishEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The workspace being published.
diff --git a/src/Event/WorkspaceRevertEvent.php b/src/Event/WorkspaceRevertEvent.php
index 5751549..64161ba 100644
--- a/src/Event/WorkspaceRevertEvent.php
+++ b/src/Event/WorkspaceRevertEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event;
  *
  * @see \Drupal\wse\Event\WorkspaceEvents
  */
-class WorkspaceRevertEvent extends Event {
+class WorkspaceRevertEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The workspace being reverted.
diff --git a/src/WorkspaceReverter.php b/src/WorkspaceReverter.php
index 5acc77e..6dc6275 100644
--- a/src/WorkspaceReverter.php
+++ b/src/WorkspaceReverter.php
@@ -90,7 +90,7 @@ class WorkspaceReverter {
   public function revert(WorkspaceInterface $workspace) {
     $revert_to_revisions = $this->publishedRevisionStorage->getRevertRevisions($workspace->id());
     $revert_from_revisions = $this->publishedRevisionStorage->getPublishedRevisions($workspace->id());
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_PRE_REVERT, new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions));
+    $this->eventDispatcher->dispatch(new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions), WorkspaceEvents::WORKSPACE_PRE_REVERT);
 
     $transaction = $this->database->startTransaction();
     try {
@@ -159,7 +159,7 @@ class WorkspaceReverter {
       throw $e;
     }
 
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_POST_REVERT, new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions));
+    $this->eventDispatcher->dispatch(new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions), WorkspaceEvents::WORKSPACE_POST_REVERT);
   }
 
 }
diff --git a/src/WseWorkspacePublisher.php b/src/WseWorkspacePublisher.php
index 1594386..beb96f3 100644
--- a/src/WseWorkspacePublisher.php
+++ b/src/WseWorkspacePublisher.php
@@ -53,7 +53,7 @@ class WseWorkspacePublisher extends WorkspacePublisher {
    * {@inheritdoc}
    */
   public function publish() {
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_PRE_PUBLISH, new WorkspacePublishEvent($this->sourceWorkspace));
+    $this->eventDispatcher->dispatch(new WorkspacePublishEvent($this->sourceWorkspace), WorkspaceEvents::WORKSPACE_PRE_PUBLISH);
 
     // This code is copied from the parent method, but it doesn't use access
     // checks in order to allow workspaces to be published from a CLI process.
@@ -110,7 +110,7 @@ class WseWorkspacePublisher extends WorkspacePublisher {
     // Notify the workspace association that a workspace has been published.
     $this->workspaceAssociation->postPublish($this->sourceWorkspace);
 
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_POST_PUBLISH, new WorkspacePublishEvent($this->sourceWorkspace));
+    $this->eventDispatcher->dispatch(new WorkspacePublishEvent($this->sourceWorkspace), WorkspaceEvents::WORKSPACE_POST_PUBLISH);
   }
 
 }
