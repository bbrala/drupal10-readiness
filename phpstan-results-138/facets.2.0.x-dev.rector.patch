diff --git a/modules/facets_range_widget/tests/src/Unit/Plugin/processor/RangeSliderProcessorTest.php b/modules/facets_range_widget/tests/src/Unit/Plugin/processor/RangeSliderProcessorTest.php
index 92b9248..d4e23ec 100644
--- a/modules/facets_range_widget/tests/src/Unit/Plugin/processor/RangeSliderProcessorTest.php
+++ b/modules/facets_range_widget/tests/src/Unit/Plugin/processor/RangeSliderProcessorTest.php
@@ -23,6 +23,7 @@ use Prophecy\Argument;
  */
 class RangeSliderProcessorTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The processor we're testing.
    *
diff --git a/modules/facets_range_widget/tests/src/Unit/Plugin/processor/SliderProcessorTest.php b/modules/facets_range_widget/tests/src/Unit/Plugin/processor/SliderProcessorTest.php
index 8ab01f0..35bc71f 100644
--- a/modules/facets_range_widget/tests/src/Unit/Plugin/processor/SliderProcessorTest.php
+++ b/modules/facets_range_widget/tests/src/Unit/Plugin/processor/SliderProcessorTest.php
@@ -18,6 +18,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class SliderProcessorTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The processor we're testing.
    *
diff --git a/modules/facets_range_widget/tests/src/Unit/Plugin/widget/SliderWidgetTest.php b/modules/facets_range_widget/tests/src/Unit/Plugin/widget/SliderWidgetTest.php
index a7eb42d..fcc8345 100644
--- a/modules/facets_range_widget/tests/src/Unit/Plugin/widget/SliderWidgetTest.php
+++ b/modules/facets_range_widget/tests/src/Unit/Plugin/widget/SliderWidgetTest.php
@@ -18,6 +18,7 @@ use Symfony\Component\DependencyInjection\ContainerBuilder;
  */
 class SliderWidgetTest extends WidgetTestBase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/modules/facets_searchbox_widget/tests/src/Unit/Plugin/widget/SearchboxLinksWidgetTest.php b/modules/facets_searchbox_widget/tests/src/Unit/Plugin/widget/SearchboxLinksWidgetTest.php
index 357b224..032ad17 100644
--- a/modules/facets_searchbox_widget/tests/src/Unit/Plugin/widget/SearchboxLinksWidgetTest.php
+++ b/modules/facets_searchbox_widget/tests/src/Unit/Plugin/widget/SearchboxLinksWidgetTest.php
@@ -245,9 +245,7 @@ class SearchboxLinksWidgetTest extends LinksWidgetTest {
    * Sets up a container.
    */
   protected function createContainer() {
-    $router = $this->getMockBuilder(TestRouterInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $router = $this->createMock(TestRouterInterface::class);
     $router->expects($this->any())
       ->method('matchRequest')
       ->willReturn([
@@ -255,21 +253,15 @@ class SearchboxLinksWidgetTest extends LinksWidgetTest {
         '_route' => 'test',
       ]);
 
-    $url_processor = $this->getMockBuilder(UrlProcessorInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $url_processor = $this->createMock(UrlProcessorInterface::class);
 
-    $manager = $this->getMockBuilder(FacetSourcePluginManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $manager = $this->createMock(FacetSourcePluginManager::class);
     $manager->expects($this->exactly(1))
       ->method('createInstance')
       ->willReturn($url_processor);
 
     $storage = $this->createMock(EntityStorageInterface::class);
-    $em = $this->getMockBuilder(EntityTypeManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $em = $this->createMock(EntityTypeManagerInterface::class);
     $em->expects($this->exactly(1))
       ->method('getStorage')
       ->willReturn($storage);
diff --git a/modules/facets_summary/tests/src/Functional/IntegrationTest.php b/modules/facets_summary/tests/src/Functional/IntegrationTest.php
index a716469..e04eab5 100644
--- a/modules/facets_summary/tests/src/Functional/IntegrationTest.php
+++ b/modules/facets_summary/tests/src/Functional/IntegrationTest.php
@@ -214,7 +214,10 @@ class IntegrationTest extends FacetsTestBase {
     $block = $this->drupalPlaceBlock('facets_summary_block:owl', $block);
 
     $this->drupalGet('search-api-test-fulltext');
-    $this->assertText('Displaying 5 search results');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Displaying 5 search results');
     $this->clickLink('item');
 
     /** @var \Behat\Mink\Element\NodeElement[] $list_items */
diff --git a/modules/facets_summary/tests/src/Unit/Plugin/Processor/HideWhenNotRenderedProcessorTest.php b/modules/facets_summary/tests/src/Unit/Plugin/Processor/HideWhenNotRenderedProcessorTest.php
index 552b0a9..ce58600 100644
--- a/modules/facets_summary/tests/src/Unit/Plugin/Processor/HideWhenNotRenderedProcessorTest.php
+++ b/modules/facets_summary/tests/src/Unit/Plugin/Processor/HideWhenNotRenderedProcessorTest.php
@@ -87,15 +87,11 @@ class HideWhenNotRenderedProcessorTest extends UnitTestCase {
    *   The value for rendered in current request.
    */
   protected function createContainer($renderedInCurrentRequestValue) {
-    $fsi = $this->getMockBuilder(FacetSourcePluginInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $fsi = $this->createMock(FacetSourcePluginInterface::class);
     $fsi->method('isRenderedInCurrentRequest')
       ->willReturn($renderedInCurrentRequestValue);
 
-    $facetSourceManager = $this->getMockBuilder(FacetSourcePluginManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $facetSourceManager = $this->createMock(FacetSourcePluginManager::class);
     $facetSourceManager->method('createInstance')
       ->willReturn($fsi);
 
diff --git a/modules/facets_summary/tests/src/Unit/Plugin/Processor/ResetFacetsProcessorTest.php b/modules/facets_summary/tests/src/Unit/Plugin/Processor/ResetFacetsProcessorTest.php
index 5cf421c..945f8f1 100644
--- a/modules/facets_summary/tests/src/Unit/Plugin/Processor/ResetFacetsProcessorTest.php
+++ b/modules/facets_summary/tests/src/Unit/Plugin/Processor/ResetFacetsProcessorTest.php
@@ -16,6 +16,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class ResetFacetsProcessorTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The processor we're testing.
    *
diff --git a/modules/facets_summary/tests/src/Unit/Plugin/Processor/ShowTextWhenEmptyProcessorTest.php b/modules/facets_summary/tests/src/Unit/Plugin/Processor/ShowTextWhenEmptyProcessorTest.php
index 249c1e6..68e60d3 100644
--- a/modules/facets_summary/tests/src/Unit/Plugin/Processor/ShowTextWhenEmptyProcessorTest.php
+++ b/modules/facets_summary/tests/src/Unit/Plugin/Processor/ShowTextWhenEmptyProcessorTest.php
@@ -17,6 +17,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class ShowTextWhenEmptyProcessorTest extends UnitTestCase {
 
+  use \Prophecy\PhpUnit\ProphecyTrait;
   /**
    * The processor we're testing.
    *
diff --git a/tests/src/Functional/BreadcrumbIntegrationTest.php b/tests/src/Functional/BreadcrumbIntegrationTest.php
index 47d29c7..d3ca2d9 100644
--- a/tests/src/Functional/BreadcrumbIntegrationTest.php
+++ b/tests/src/Functional/BreadcrumbIntegrationTest.php
@@ -51,6 +51,7 @@ class BreadcrumbIntegrationTest extends FacetsTestBase {
 
   /**
    * Tests Breadcrumb integration with grouping.
+   * @doesNotPerformAssertions
    */
   public function testGroupingIntegration() {
     $this->editFacetConfig();
@@ -80,6 +81,7 @@ class BreadcrumbIntegrationTest extends FacetsTestBase {
 
   /**
    * Tests Breadcrumb integration without grouping.
+   * @doesNotPerformAssertions
    */
   public function testNonGroupingIntegration() {
     $this->markTestSkipped('Not yet implemented.');
diff --git a/tests/src/Functional/ProcessorIntegrationTest.php b/tests/src/Functional/ProcessorIntegrationTest.php
index a5c18dd..4cf5bec 100644
--- a/tests/src/Functional/ProcessorIntegrationTest.php
+++ b/tests/src/Functional/ProcessorIntegrationTest.php
@@ -85,8 +85,8 @@ class ProcessorIntegrationTest extends FacetsTestBase {
     $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->checkboxChecked('edit-facet-settings-count-limit-status');
     $this->assertSession()->checkboxChecked('edit-facet-settings-hide-non-narrowing-result-processor-status');
-    $this->assertOptionSelected('edit-processors-count-limit-weights-build', 50);
-    $this->assertOptionSelected('edit-processors-hide-non-narrowing-result-processor-weights-build', 40);
+    $this->assertTrue($this->assertSession()->optionExists('edit-processors-count-limit-weights-build', 50)->hasAttribute('selected'));
+    $this->assertTrue($this->assertSession()->optionExists('edit-processors-hide-non-narrowing-result-processor-weights-build', 40)->hasAttribute('selected'));
 
     // Change the weight of one of the processors and test that the weight
     // change persisted.
@@ -98,8 +98,8 @@ class ProcessorIntegrationTest extends FacetsTestBase {
     $this->submitForm($form, 'Save');
     $this->assertSession()->checkboxChecked('edit-facet-settings-count-limit-status');
     $this->assertSession()->checkboxChecked('edit-facet-settings-hide-non-narrowing-result-processor-status');
-    $this->assertOptionSelected('edit-processors-count-limit-weights-build', 50);
-    $this->assertOptionSelected('edit-processors-hide-non-narrowing-result-processor-weights-build', 5);
+    $this->assertTrue($this->assertSession()->optionExists('edit-processors-count-limit-weights-build', 50)->hasAttribute('selected'));
+    $this->assertTrue($this->assertSession()->optionExists('edit-processors-hide-non-narrowing-result-processor-weights-build', 5)->hasAttribute('selected'));
   }
 
   /**
@@ -324,6 +324,7 @@ class ProcessorIntegrationTest extends FacetsTestBase {
 
   /**
    * Tests the for sorting processors in the frontend with a 'keywords' facet.
+   * @doesNotPerformAssertions
    */
   public function testSortingWidgets() {
     $facet_name = "Huacaya alpaca";
