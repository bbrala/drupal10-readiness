modules/contrib/group_flex/group_flex.api.php
modules/contrib/group_flex/group_flex.module
modules/contrib/group_flex/modules/group_flex_content/group_flex_content.install
modules/contrib/group_flex/modules/group_flex_content/group_flex_content.module
modules/contrib/group_flex/modules/group_flex_content/src/GroupContentTypeSaver.php
modules/contrib/group_flex/modules/group_flex_content/src/Plugin/GroupContentAccessControlHandler.php
modules/contrib/group_flex/modules/group_flex_content/src/Plugin/GroupFlexContentPermissionProvider.php
modules/contrib/group_flex/modules/group_flex_content/src/QueryAccess/EntityQueryAlter.php
modules/contrib/group_flex/modules/group_flex_content/tests/src/Functional/GroupFlexContentTest.php
modules/contrib/group_flex/src/Annotation/GroupJoiningMethod.php
modules/contrib/group_flex/src/Annotation/GroupVisibility.php
modules/contrib/group_flex/src/Entity/Form/GroupForm.php
modules/contrib/group_flex/src/Entity/Form/GroupTypeForm.php
modules/contrib/group_flex/src/GroupFlexGroup.php
modules/contrib/group_flex/src/GroupFlexGroupSaver.php
modules/contrib/group_flex/src/GroupFlexGroupType.php
modules/contrib/group_flex/src/GroupFlexGroupTypeSaver.php
modules/contrib/group_flex/src/Plugin/GroupFlexPluginCollection.php
modules/contrib/group_flex/src/Plugin/GroupJoiningMethod/GroupMembershipInvite.php
modules/contrib/group_flex/src/Plugin/GroupJoiningMethod/GroupMembershipRequest.php
modules/contrib/group_flex/src/Plugin/GroupJoiningMethod/JoinButton.php
modules/contrib/group_flex/src/Plugin/GroupJoiningMethodBase.php
modules/contrib/group_flex/src/Plugin/GroupJoiningMethodInterface.php
modules/contrib/group_flex/src/Plugin/GroupJoiningMethodManager.php
modules/contrib/group_flex/src/Plugin/GroupVisibility/FlexVisibility.php
modules/contrib/group_flex/src/Plugin/GroupVisibility/PrivateVisibility.php
modules/contrib/group_flex/src/Plugin/GroupVisibility/PublicVisibility.php
modules/contrib/group_flex/src/Plugin/GroupVisibilityBase.php
modules/contrib/group_flex/src/Plugin/GroupVisibilityInterface.php
modules/contrib/group_flex/src/Plugin/GroupVisibilityManager.php
modules/contrib/group_flex/tests/modules/group_flex_test/src/Plugin/GroupJoiningMethod/FakeButton.php
modules/contrib/group_flex/tests/src/Functional/GroupFlexTest.php

2 files with changes
====================

1) modules/contrib/group_flex/tests/src/Functional/GroupFlexTest.php:66

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->account = $this->createUser([
       'administer group',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/group_flex/modules/group_flex_content/tests/src/Functional/GroupFlexContentTest.php:75

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->account = $this->createUser($this->getGlobalPermissions());
     $this->group = $this->createGroup(['uid' => $this->account->id()]);
@@ @@
     $edit = [
       'title[0][value]' => 'Anonymous node',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Create an "outsider" node.
     $this->drupalGet('/group/1/content/create/group_node%3Aoutsider');
@@ @@
     $edit = [
       'title[0][value]' => 'Outsider node',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Create a "member" node.
     $this->drupalGet('/group/1/content/create/group_node%3Amember');
@@ @@
     $edit = [
       'title[0][value]' => 'Member node',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Create a "flexible" node with visibility "anonymous".
     $this->drupalGet('/group/1/content/create/group_node%3Aflexible');
@@ @@
       'title[0][value]' => 'Flexible anonymous node',
       'content_visibility' => 'anonymous',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Create a "flexible" node with visibility "outsider".
     $this->drupalGet('/group/1/content/create/group_node%3Aflexible');
@@ @@
       'title[0][value]' => 'Flexible outsider node',
       'content_visibility' => 'outsider',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Create a "flexible" node with visibility "member".
     $this->drupalGet('/group/1/content/create/group_node%3Aflexible');
@@ @@
       'title[0][value]' => 'Flexible member node',
       'content_visibility' => 'member',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));

     // Open all the pages as anonymous user.
     $this->drupalLogout();
@@ @@
     $edit = [
       'default-member[create group_node:contentvisibility entity]' => 'create group_node:contentvisibility entity',
     ];
-    $this->drupalPostForm('/admin/group/types/manage/default/permissions', $edit, 'Save permissions');
+    $this->drupalGet('/admin/group/types/manage/default/permissions');
+    $this->submitForm($edit, 'Save permissions');

     // Add a normal user to the group.
     $user2 = $this->createUser(['access content']);
@@ @@
       'default-member[use visibility anonymous for group_node:contentvisibility entity]' => '',
       'default-member[use visibility outsider for group_node:contentvisibility entity]' => '',
     ];
-    $this->drupalPostForm('/admin/group/types/manage/default/permissions', $edit, 'Save permissions');
+    $this->drupalGet('/admin/group/types/manage/default/permissions');
+    $this->submitForm($edit, 'Save permissions');

     // Log back in as the normal user.
     $this->drupalLogin($user2);
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

