modules/contrib/ip_login/ip_login.module
modules/contrib/ip_login/src/EventSubscriber/IpLoginSubscriber.php
modules/contrib/ip_login/src/Form/IpLoginSettingsForm.php
modules/contrib/ip_login/src/IpLoginController.php
modules/contrib/ip_login/src/IpLoginPageCacheRequestPolicy.php
modules/contrib/ip_login/src/IpLoginServiceProvider.php
modules/contrib/ip_login/src/StackMiddleware/EarlyIpLoginMiddleware.php
modules/contrib/ip_login/src/StackMiddleware/IpLoginMiddleware.php

2 files with changes
====================

1) modules/contrib/ip_login/src/StackMiddleware/EarlyIpLoginMiddleware.php:104

    ---------- begin diff ----------
@@ @@
     // If we determined that we can't auto-login the user, set a session cookie
     // so we don't repeat the user IP check for this browser session.
     if (empty($matched_uid)) {
-      $response->headers->setCookie(new Cookie('ipLoginAttempted', 1));
+      $response->headers->setCookie(\Symfony\Component\HttpFoundation\Cookie::create('ipLoginAttempted', 1));
     }
     return $response;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * NewToStaticCallRector
 * AddParamTypeDeclarationRector


2) modules/contrib/ip_login/src/EventSubscriber/IpLoginSubscriber.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Clears various IP Login cookies if needed.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The response event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
@@ @@

     $response = $event->getResponse();
     if ($event->getRequest()->attributes->get('ip_login_user_login')) {
-      $response->headers->setCookie(new Cookie('ipLoginAttempted', '', 1));
-      $response->headers->setCookie(new Cookie('ipLoginAsDifferentUser', '', 1));
+      $response->headers->setCookie(\Symfony\Component\HttpFoundation\Cookie::create('ipLoginAttempted', '', 1));
+      $response->headers->setCookie(\Symfony\Component\HttpFoundation\Cookie::create('ipLoginAsDifferentUser', '', 1));
     }

     $can_login_as_another_user = $event->getRequest()->attributes->get('ip_login_can_login_as_another_user');
     if ($can_login_as_another_user !== NULL) {
-      $response->headers->setCookie(new Cookie('ipLoginAsDifferentUser', $can_login_as_another_user));
+      $response->headers->setCookie(\Symfony\Component\HttpFoundation\Cookie::create('ipLoginAsDifferentUser', $can_login_as_another_user));
     }
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * NewToStaticCallRector
 * AddParamTypeDeclarationRector


 [OK] 2 files have been changed by Rector                                       

