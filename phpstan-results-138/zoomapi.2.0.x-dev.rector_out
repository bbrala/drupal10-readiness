modules/contrib/zoomapi/src/Client/ZoomApiClient.php
modules/contrib/zoomapi/src/Controller/ZoomApiWebhooksController.php
modules/contrib/zoomapi/src/Event/ZoomApiEvents.php
modules/contrib/zoomapi/src/Event/ZoomApiWebhookEvent.php
modules/contrib/zoomapi/src/Form/ConfigForm.php
modules/contrib/zoomapi/src/Form/ConfigFormBase.php
modules/contrib/zoomapi/src/ZoomApiClientInterface.php
modules/contrib/zoomapi/tests/src/Functional/ApiRequestTest.php
modules/contrib/zoomapi/tests/src/Functional/ConfigLoadTest.php
modules/contrib/zoomapi/tests/src/Functional/WebhookPostTest.php
modules/contrib/zoomapi/zoomapi.install

5 files with changes
====================

1) modules/contrib/zoomapi/tests/src/Functional/WebhookPostTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer zoom api', 'administer keys']);
     $this->drupalLogin($this->user);
@@ @@
     $edit = [
       'webhook_verification_token' => 'zoomapi_webhook_test_key',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');

     $url = Url::fromRoute('zoomapi.webhooks')
       ->setAbsolute()
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/zoomapi/tests/src/Functional/ConfigLoadTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer zoom api']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/zoomapi/tests/src/Functional/ApiRequestTest.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer zoom api', 'administer keys']);
     $this->drupalLogin($this->user);
@@ @@
       'api_key' => 'test_zoomapi_key',
       'api_secret' => 'test_zoomapi_secret',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');

     // Post to the webhook controller.
     $client = \Drupal::service('zoomapi.client');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/zoomapi/src/Event/ZoomApiWebhookEvent.php:9

    ---------- begin diff ----------
@@ @@
  *
  * @package Drupal\zoomapi\Event
  */
-class ZoomApiWebhookEvent extends Event {
+class ZoomApiWebhookEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Payload of the incoming post.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/zoomapi/src/Controller/ZoomApiWebhooksController.php:151

    ---------- begin diff ----------
@@ @@
     // Var $data['payload'] = Payload data from Zoom.
     // Var $request = The complete request from Zoom.
     $dispatch = new ZoomApiWebhookEvent($data['event'], $data['payload'], $request);
-    $this->eventDispatcher->dispatch(ZoomApiEvents::WEBHOOK_POST, $dispatch);
+    $this->eventDispatcher->dispatch($dispatch, ZoomApiEvents::WEBHOOK_POST);

     $response = [
       'success' => TRUE,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

